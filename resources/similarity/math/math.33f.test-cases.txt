Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test1
Start line: 12
End line: 41
Method source code: 
    public void test1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test1");
        org.apache.commons.math3.linear.RealVector realVector0 = null;
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math3.optimization.linear.LinearObjectiveFunction(realVector0, (double) 0);
        org.apache.commons.math3.linear.RealVector realVector3 = null;
        org.apache.commons.math3.optimization.linear.Relationship relationship4 = org.apache.commons.math3.optimization.linear.Relationship.LEQ;
        org.apache.commons.math3.optimization.linear.LinearConstraint linearConstraint6 = new org.apache.commons.math3.optimization.linear.LinearConstraint(realVector3, relationship4, (double) 52);
        org.apache.commons.math3.optimization.linear.Relationship relationship7 = linearConstraint6.getRelationship();
        org.apache.commons.math3.linear.RealVector realVector8 = null;
        org.apache.commons.math3.optimization.linear.Relationship relationship9 = org.apache.commons.math3.optimization.linear.Relationship.LEQ;
        org.apache.commons.math3.optimization.linear.LinearConstraint linearConstraint11 = new org.apache.commons.math3.optimization.linear.LinearConstraint(realVector8, relationship9, (double) 52);
        org.apache.commons.math3.optimization.linear.LinearConstraint[] linearConstraintArray12 = new org.apache.commons.math3.optimization.linear.LinearConstraint[] { linearConstraint6, linearConstraint11 };
        java.util.ArrayList<org.apache.commons.math3.optimization.linear.LinearConstraint> linearConstraintList13 = new java.util.ArrayList<org.apache.commons.math3.optimization.linear.LinearConstraint>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint>) linearConstraintList13, linearConstraintArray12);
        org.apache.commons.math3.optimization.GoalType goalType15 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau18 = new org.apache.commons.math3.optimization.linear.SimplexTableau(linearObjectiveFunction2, (java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint>) linearConstraintList13, goalType15, false, (double) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + relationship4 + "' != '" + org.apache.commons.math3.optimization.linear.Relationship.LEQ + "'", relationship4.equals(org.apache.commons.math3.optimization.linear.Relationship.LEQ));
        org.junit.Assert.assertTrue("'" + relationship7 + "' != '" + org.apache.commons.math3.optimization.linear.Relationship.LEQ + "'", relationship7.equals(org.apache.commons.math3.optimization.linear.Relationship.LEQ));
        org.junit.Assert.assertTrue("'" + relationship9 + "' != '" + org.apache.commons.math3.optimization.linear.Relationship.LEQ + "'", relationship9.equals(org.apache.commons.math3.optimization.linear.Relationship.LEQ));
        org.junit.Assert.assertNotNull(linearConstraintArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + goalType15 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType15.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: dconst_0
32: invokespecial #9
35: astore_2
36: aconst_null
37: astore_3
38: getstatic     #10
41: astore        4
43: new           #11
46: dup
47: aload_3
48: aload         4
50: ldc2_w        #12
53: invokespecial #14
56: astore        5
58: aload         5
60: invokevirtual #15
63: astore        6
65: aconst_null
66: astore        7
68: getstatic     #10
71: astore        8
73: new           #11
76: dup
77: aload         7
79: aload         8
81: ldc2_w        #12
84: invokespecial #14
87: astore        9
89: iconst_2
90: anewarray     #11
93: dup
94: iconst_0
95: aload         5
97: aastore
98: dup
99: iconst_1
100: aload         9
102: aastore
103: astore        10
105: new           #16
108: dup
109: invokespecial #17
112: astore        11
114: aload         11
116: aload         10
118: invokestatic  #18
121: istore        12
123: getstatic     #19
126: astore        13
128: new           #20
131: dup
132: aload_2
133: aload         11
135: aload         13
137: iconst_0
138: ldc2_w        #21
141: invokespecial #23
144: astore        14
146: ldc           #24
148: invokestatic  #25
151: goto          156
154: astore        14
156: new           #27
159: dup
160: invokespecial #28
163: ldc           #29
165: invokevirtual #30
168: aload         4
170: invokevirtual #31
173: ldc           #32
175: invokevirtual #30
178: getstatic     #10
181: invokevirtual #31
184: ldc           #29
186: invokevirtual #30
189: invokevirtual #33
192: aload         4
194: getstatic     #10
197: invokevirtual #34
200: invokestatic  #35
203: new           #27
206: dup
207: invokespecial #28
210: ldc           #29
212: invokevirtual #30
215: aload         6
217: invokevirtual #31
220: ldc           #32
222: invokevirtual #30
225: getstatic     #10
228: invokevirtual #31
231: ldc           #29
233: invokevirtual #30
236: invokevirtual #33
239: aload         6
241: getstatic     #10
244: invokevirtual #34
247: invokestatic  #35
250: new           #27
253: dup
254: invokespecial #28
257: ldc           #29
259: invokevirtual #30
262: aload         8
264: invokevirtual #31
267: ldc           #32
269: invokevirtual #30
272: getstatic     #10
275: invokevirtual #31
278: ldc           #29
280: invokevirtual #30
283: invokevirtual #33
286: aload         8
288: getstatic     #10
291: invokevirtual #34
294: invokestatic  #35
297: aload         10
299: invokestatic  #36
302: new           #27
305: dup
306: invokespecial #28
309: ldc           #29
311: invokevirtual #30
314: iload         12
316: invokevirtual #37
319: ldc           #32
321: invokevirtual #30
324: iconst_1
325: invokevirtual #37
328: ldc           #29
330: invokevirtual #30
333: invokevirtual #33
336: iload         12
338: iconst_1
339: if_icmpne     346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #35
350: new           #27
353: dup
354: invokespecial #28
357: ldc           #29
359: invokevirtual #30
362: aload         13
364: invokevirtual #31
367: ldc           #32
369: invokevirtual #30
372: getstatic     #19
375: invokevirtual #31
378: ldc           #29
380: invokevirtual #30
383: invokevirtual #33
386: aload         13
388: getstatic     #19
391: invokevirtual #38
394: invokestatic  #35
397: return
Exception table:
from    to  target type
128   151   154   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test2
Start line: 44
End line: 80
Method source code: 
    public void test2() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test2");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        int int2 = simplexSolver0.getMaxIterations();
        simplexSolver0.setMaxIterations((int) ' ');
        simplexSolver0.setMaxIterations((int) (byte) -10);
        org.apache.commons.math3.linear.RealVector realVector7 = null;
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction9 = new org.apache.commons.math3.optimization.linear.LinearObjectiveFunction(realVector7, (double) 0);
        boolean boolean11 = linearObjectiveFunction9.equals((java.lang.Object) 1.513715544388632d);
        org.apache.commons.math3.linear.RealVector realVector12 = null;
        org.apache.commons.math3.optimization.linear.Relationship relationship13 = org.apache.commons.math3.optimization.linear.Relationship.LEQ;
        org.apache.commons.math3.optimization.linear.LinearConstraint linearConstraint15 = new org.apache.commons.math3.optimization.linear.LinearConstraint(realVector12, relationship13, (double) 52);
        org.apache.commons.math3.optimization.linear.Relationship relationship16 = linearConstraint15.getRelationship();
        org.apache.commons.math3.optimization.linear.Relationship relationship17 = linearConstraint15.getRelationship();
        org.apache.commons.math3.optimization.linear.LinearConstraint[] linearConstraintArray18 = new org.apache.commons.math3.optimization.linear.LinearConstraint[] { linearConstraint15 };
        java.util.ArrayList<org.apache.commons.math3.optimization.linear.LinearConstraint> linearConstraintList19 = new java.util.ArrayList<org.apache.commons.math3.optimization.linear.LinearConstraint>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint>) linearConstraintList19, linearConstraintArray18);
        org.apache.commons.math3.optimization.GoalType goalType21 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair23 = simplexSolver0.optimize(linearObjectiveFunction9, (java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint>) linearConstraintList19, goalType21, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + relationship13 + "' != '" + org.apache.commons.math3.optimization.linear.Relationship.LEQ + "'", relationship13.equals(org.apache.commons.math3.optimization.linear.Relationship.LEQ));
        org.junit.Assert.assertTrue("'" + relationship16 + "' != '" + org.apache.commons.math3.optimization.linear.Relationship.LEQ + "'", relationship16.equals(org.apache.commons.math3.optimization.linear.Relationship.LEQ));
        org.junit.Assert.assertTrue("'" + relationship17 + "' != '" + org.apache.commons.math3.optimization.linear.Relationship.LEQ + "'", relationship17.equals(org.apache.commons.math3.optimization.linear.Relationship.LEQ));
        org.junit.Assert.assertNotNull(linearConstraintArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + goalType21 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType21.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #39
19: aastore
20: invokevirtual #7
23: pop
24: new           #40
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: invokevirtual #42
36: istore_2
37: aload_1
38: invokevirtual #43
41: istore_3
42: aload_1
43: bipush        32
45: invokevirtual #44
48: aload_1
49: bipush        -10
51: invokevirtual #44
54: aconst_null
55: astore        4
57: new           #8
60: dup
61: aload         4
63: dconst_0
64: invokespecial #9
67: astore        5
69: aload         5
71: ldc2_w        #45
74: invokestatic  #47
77: invokevirtual #48
80: istore        6
82: aconst_null
83: astore        7
85: getstatic     #10
88: astore        8
90: new           #11
93: dup
94: aload         7
96: aload         8
98: ldc2_w        #12
101: invokespecial #14
104: astore        9
106: aload         9
108: invokevirtual #15
111: astore        10
113: aload         9
115: invokevirtual #15
118: astore        11
120: iconst_1
121: anewarray     #11
124: dup
125: iconst_0
126: aload         9
128: aastore
129: astore        12
131: new           #16
134: dup
135: invokespecial #17
138: astore        13
140: aload         13
142: aload         12
144: invokestatic  #18
147: istore        14
149: getstatic     #19
152: astore        15
154: aload_1
155: aload         5
157: aload         13
159: aload         15
161: iconst_1
162: invokevirtual #49
165: astore        16
167: ldc           #24
169: invokestatic  #25
172: goto          177
175: astore        16
177: new           #27
180: dup
181: invokespecial #28
184: ldc           #29
186: invokevirtual #30
189: iload_2
190: invokevirtual #50
193: ldc           #32
195: invokevirtual #30
198: iconst_0
199: invokevirtual #50
202: ldc           #29
204: invokevirtual #30
207: invokevirtual #33
210: iload_2
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #35
222: new           #27
225: dup
226: invokespecial #28
229: ldc           #29
231: invokevirtual #30
234: iload_3
235: invokevirtual #50
238: ldc           #32
240: invokevirtual #30
243: bipush        100
245: invokevirtual #50
248: ldc           #29
250: invokevirtual #30
253: invokevirtual #33
256: iload_3
257: bipush        100
259: if_icmpne     266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #35
270: new           #27
273: dup
274: invokespecial #28
277: ldc           #29
279: invokevirtual #30
282: iload         6
284: invokevirtual #37
287: ldc           #32
289: invokevirtual #30
292: iconst_0
293: invokevirtual #37
296: ldc           #29
298: invokevirtual #30
301: invokevirtual #33
304: iload         6
306: ifne          313
309: iconst_1
310: goto          314
313: iconst_0
314: invokestatic  #35
317: new           #27
320: dup
321: invokespecial #28
324: ldc           #29
326: invokevirtual #30
329: aload         8
331: invokevirtual #31
334: ldc           #32
336: invokevirtual #30
339: getstatic     #10
342: invokevirtual #31
345: ldc           #29
347: invokevirtual #30
350: invokevirtual #33
353: aload         8
355: getstatic     #10
358: invokevirtual #34
361: invokestatic  #35
364: new           #27
367: dup
368: invokespecial #28
371: ldc           #29
373: invokevirtual #30
376: aload         10
378: invokevirtual #31
381: ldc           #32
383: invokevirtual #30
386: getstatic     #10
389: invokevirtual #31
392: ldc           #29
394: invokevirtual #30
397: invokevirtual #33
400: aload         10
402: getstatic     #10
405: invokevirtual #34
408: invokestatic  #35
411: new           #27
414: dup
415: invokespecial #28
418: ldc           #29
420: invokevirtual #30
423: aload         11
425: invokevirtual #31
428: ldc           #32
430: invokevirtual #30
433: getstatic     #10
436: invokevirtual #31
439: ldc           #29
441: invokevirtual #30
444: invokevirtual #33
447: aload         11
449: getstatic     #10
452: invokevirtual #34
455: invokestatic  #35
458: aload         12
460: invokestatic  #36
463: new           #27
466: dup
467: invokespecial #28
470: ldc           #29
472: invokevirtual #30
475: iload         14
477: invokevirtual #37
480: ldc           #32
482: invokevirtual #30
485: iconst_1
486: invokevirtual #37
489: ldc           #29
491: invokevirtual #30
494: invokevirtual #33
497: iload         14
499: iconst_1
500: if_icmpne     507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #35
511: new           #27
514: dup
515: invokespecial #28
518: ldc           #29
520: invokevirtual #30
523: aload         15
525: invokevirtual #31
528: ldc           #32
530: invokevirtual #30
533: getstatic     #19
536: invokevirtual #31
539: ldc           #29
541: invokevirtual #30
544: invokevirtual #33
547: aload         15
549: getstatic     #19
552: invokevirtual #38
555: invokestatic  #35
558: return
Exception table:
from    to  target type
154   172   175   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test3
Start line: 83
End line: 94
Method source code: 
    public void test3() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test3");
        org.apache.commons.math3.linear.RealVector realVector0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #52
30: dstore_2
31: ldc           #24
33: invokestatic  #25
36: goto          40
39: astore_2
40: return
Exception table:
from    to  target type
26    36    39   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test4
Start line: 97
End line: 123
Method source code: 
    public void test4() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test4");
        double[] doubleArray0 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair2 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray0, 22025.465794806718d);
        double[] doubleArray3 = pointValuePair2.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapMultiply(0.0d);
        double[] doubleArray8 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair10 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray8, 22025.465794806718d);
        double[] doubleArray11 = pointValuePair10.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray11, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector((org.apache.commons.math3.linear.RealVector) arrayRealVector5, arrayRealVector13);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector14.mapMultiplyToSelf((double) (short) 100);
        double double17 = org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math3.linear.RealVector) arrayRealVector14);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #53
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: newarray       double
27: astore_1
28: new           #54
31: dup
32: aload_1
33: ldc2_w        #55
36: invokespecial #57
39: astore_2
40: aload_2
41: invokevirtual #58
44: checkcast     #59
47: astore_3
48: new           #60
51: dup
52: aload_3
53: iconst_1
54: invokespecial #61
57: astore        4
59: aload         4
61: dconst_0
62: invokevirtual #62
65: astore        5
67: iconst_0
68: newarray       double
70: astore        6
72: new           #54
75: dup
76: aload         6
78: ldc2_w        #55
81: invokespecial #57
84: astore        7
86: aload         7
88: invokevirtual #58
91: checkcast     #59
94: astore        8
96: new           #60
99: dup
100: aload         8
102: iconst_1
103: invokespecial #61
106: astore        9
108: new           #60
111: dup
112: aload         4
114: aload         9
116: invokespecial #63
119: astore        10
121: aload         10
123: ldc2_w        #64
126: invokevirtual #66
129: astore        11
131: aload         10
133: invokestatic  #52
136: dstore        12
138: aload_1
139: invokestatic  #36
142: aload_1
143: invokestatic  #67
146: ldc           #68
148: invokestatic  #69
151: aload_3
152: invokestatic  #36
155: aload_3
156: invokestatic  #67
159: ldc           #68
161: invokestatic  #69
164: aload         5
166: invokestatic  #36
169: aload         6
171: invokestatic  #36
174: aload         6
176: invokestatic  #67
179: ldc           #68
181: invokestatic  #69
184: aload         8
186: invokestatic  #36
189: aload         8
191: invokestatic  #67
194: ldc           #68
196: invokestatic  #69
199: aload         11
201: invokestatic  #36
204: new           #27
207: dup
208: invokespecial #28
211: ldc           #29
213: invokevirtual #30
216: dload         12
218: invokevirtual #70
221: ldc           #32
223: invokevirtual #30
226: dconst_0
227: invokevirtual #70
230: ldc           #29
232: invokevirtual #30
235: invokevirtual #33
238: dload         12
240: dconst_0
241: dcmpl
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #35
253: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test5
Start line: 126
End line: 140
Method source code: 
    public void test5() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test5");
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction0 = null;
        java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint> linearConstraintCollection1 = null;
        org.apache.commons.math3.optimization.GoalType goalType2 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau6 = new org.apache.commons.math3.optimization.linear.SimplexTableau(linearObjectiveFunction0, linearConstraintCollection1, goalType2, false, (double) (short) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType2 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType2.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #71
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aconst_null
27: astore_2
28: getstatic     #19
31: astore_3
32: new           #20
35: dup
36: aload_1
37: aload_2
38: aload_3
39: iconst_0
40: ldc2_w        #72
43: iconst_1
44: invokespecial #74
47: astore        4
49: ldc           #24
51: invokestatic  #25
54: goto          59
57: astore        4
59: new           #27
62: dup
63: invokespecial #28
66: ldc           #29
68: invokevirtual #30
71: aload_3
72: invokevirtual #31
75: ldc           #32
77: invokevirtual #30
80: getstatic     #19
83: invokevirtual #31
86: ldc           #29
88: invokevirtual #30
91: invokevirtual #33
94: aload_3
95: getstatic     #19
98: invokevirtual #38
101: invokestatic  #35
104: return
Exception table:
from    to  target type
32    54    57   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test6
Start line: 143
End line: 253
Method source code: 
    public void test6() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test6");
        double[] doubleArray0 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair2 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray0, 22025.465794806718d);
        double[] doubleArray3 = pointValuePair2.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapMultiply(0.0d);
        double[] doubleArray8 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair10 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray8, 22025.465794806718d);
        double[] doubleArray11 = pointValuePair10.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray11, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector((org.apache.commons.math3.linear.RealVector) arrayRealVector5, arrayRealVector13);
        double[] doubleArray15 = arrayRealVector14.getDataRef();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction17 = new org.apache.commons.math3.optimization.linear.LinearObjectiveFunction(doubleArray15, (double) 10L);
        double double18 = linearObjectiveFunction17.getConstantTerm();
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair21 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray19, 22025.465794806718d);
        double[] doubleArray22 = pointValuePair21.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray22, true);
        org.apache.commons.math3.linear.RealVector realVector26 = arrayRealVector24.mapMultiply(0.0d);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair29 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray27, 22025.465794806718d);
        double[] doubleArray30 = pointValuePair29.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30, true);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapMultiply(0.0d);
        double[] doubleArray35 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray35, 22025.465794806718d);
        double[] doubleArray38 = pointValuePair37.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector((org.apache.commons.math3.linear.RealVector) arrayRealVector32, arrayRealVector40);
        double double42 = arrayRealVector24.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector41);
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair45 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray43, 22025.465794806718d);
        double[] doubleArray46 = pointValuePair45.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46, true);
        double double49 = arrayRealVector48.getLInfNorm();
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair52 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray50, 22025.465794806718d);
        double[] doubleArray53 = pointValuePair52.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53, true);
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair58 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray56, 22025.465794806718d);
        double[] doubleArray59 = pointValuePair58.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray59, true);
        org.apache.commons.math3.linear.RealVector realVector62 = arrayRealVector55.append((org.apache.commons.math3.linear.RealVector) arrayRealVector61);
        boolean boolean63 = arrayRealVector61.isInfinite();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector64 = arrayRealVector48.append(arrayRealVector61);
        double[] doubleArray65 = arrayRealVector64.toArray();
        org.apache.commons.math3.linear.RealVector realVector66 = arrayRealVector24.append((org.apache.commons.math3.linear.RealVector) arrayRealVector64);
        org.apache.commons.math3.linear.RealVector realVector68 = arrayRealVector24.mapAddToSelf((double) (-1));
        double double69 = linearObjectiveFunction17.getValue(realVector68);
        java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint> linearConstraintCollection70 = null;
        org.apache.commons.math3.optimization.GoalType goalType71 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau75 = new org.apache.commons.math3.optimization.linear.SimplexTableau(linearObjectiveFunction17, linearConstraintCollection70, goalType71, false, (double) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(arrayRealVector64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertNotNull(realVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + goalType71 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType71.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #75
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: newarray       double
27: astore_1
28: new           #54
31: dup
32: aload_1
33: ldc2_w        #55
36: invokespecial #57
39: astore_2
40: aload_2
41: invokevirtual #58
44: checkcast     #59
47: astore_3
48: new           #60
51: dup
52: aload_3
53: iconst_1
54: invokespecial #61
57: astore        4
59: aload         4
61: dconst_0
62: invokevirtual #62
65: astore        5
67: iconst_0
68: newarray       double
70: astore        6
72: new           #54
75: dup
76: aload         6
78: ldc2_w        #55
81: invokespecial #57
84: astore        7
86: aload         7
88: invokevirtual #58
91: checkcast     #59
94: astore        8
96: new           #60
99: dup
100: aload         8
102: iconst_1
103: invokespecial #61
106: astore        9
108: new           #60
111: dup
112: aload         4
114: aload         9
116: invokespecial #63
119: astore        10
121: aload         10
123: invokevirtual #76
126: astore        11
128: new           #8
131: dup
132: aload         11
134: ldc2_w        #72
137: invokespecial #77
140: astore        12
142: aload         12
144: invokevirtual #78
147: dstore        13
149: iconst_0
150: newarray       double
152: astore        15
154: new           #54
157: dup
158: aload         15
160: ldc2_w        #55
163: invokespecial #57
166: astore        16
168: aload         16
170: invokevirtual #58
173: checkcast     #59
176: astore        17
178: new           #60
181: dup
182: aload         17
184: iconst_1
185: invokespecial #61
188: astore        18
190: aload         18
192: dconst_0
193: invokevirtual #62
196: astore        19
198: iconst_0
199: newarray       double
201: astore        20
203: new           #54
206: dup
207: aload         20
209: ldc2_w        #55
212: invokespecial #57
215: astore        21
217: aload         21
219: invokevirtual #58
222: checkcast     #59
225: astore        22
227: new           #60
230: dup
231: aload         22
233: iconst_1
234: invokespecial #61
237: astore        23
239: aload         23
241: dconst_0
242: invokevirtual #62
245: astore        24
247: iconst_0
248: newarray       double
250: astore        25
252: new           #54
255: dup
256: aload         25
258: ldc2_w        #55
261: invokespecial #57
264: astore        26
266: aload         26
268: invokevirtual #58
271: checkcast     #59
274: astore        27
276: new           #60
279: dup
280: aload         27
282: iconst_1
283: invokespecial #61
286: astore        28
288: new           #60
291: dup
292: aload         23
294: aload         28
296: invokespecial #63
299: astore        29
301: aload         18
303: aload         29
305: invokevirtual #79
308: dstore        30
310: iconst_0
311: newarray       double
313: astore        32
315: new           #54
318: dup
319: aload         32
321: ldc2_w        #55
324: invokespecial #57
327: astore        33
329: aload         33
331: invokevirtual #58
334: checkcast     #59
337: astore        34
339: new           #60
342: dup
343: aload         34
345: iconst_1
346: invokespecial #61
349: astore        35
351: aload         35
353: invokevirtual #80
356: dstore        36
358: iconst_0
359: newarray       double
361: astore        38
363: new           #54
366: dup
367: aload         38
369: ldc2_w        #55
372: invokespecial #57
375: astore        39
377: aload         39
379: invokevirtual #58
382: checkcast     #59
385: astore        40
387: new           #60
390: dup
391: aload         40
393: iconst_1
394: invokespecial #61
397: astore        41
399: iconst_0
400: newarray       double
402: astore        42
404: new           #54
407: dup
408: aload         42
410: ldc2_w        #55
413: invokespecial #57
416: astore        43
418: aload         43
420: invokevirtual #58
423: checkcast     #59
426: astore        44
428: new           #60
431: dup
432: aload         44
434: iconst_1
435: invokespecial #61
438: astore        45
440: aload         41
442: aload         45
444: invokevirtual #81
447: astore        46
449: aload         45
451: invokevirtual #82
454: istore        47
456: aload         35
458: aload         45
460: invokevirtual #83
463: astore        48
465: aload         48
467: invokevirtual #84
470: astore        49
472: aload         18
474: aload         48
476: invokevirtual #81
479: astore        50
481: aload         18
483: ldc2_w        #85
486: invokevirtual #87
489: astore        51
491: aload         12
493: aload         51
495: invokevirtual #88
498: dstore        52
500: aconst_null
501: astore        54
503: getstatic     #19
506: astore        55
508: new           #20
511: dup
512: aload         12
514: aload         54
516: aload         55
518: iconst_0
519: ldc2_w        #12
522: iconst_0
523: invokespecial #74
526: astore        56
528: ldc           #24
530: invokestatic  #25
533: goto          538
536: astore        56
538: aload_1
539: invokestatic  #36
542: aload_1
543: invokestatic  #67
546: ldc           #68
548: invokestatic  #69
551: aload_3
552: invokestatic  #36
555: aload_3
556: invokestatic  #67
559: ldc           #68
561: invokestatic  #69
564: aload         5
566: invokestatic  #36
569: aload         6
571: invokestatic  #36
574: aload         6
576: invokestatic  #67
579: ldc           #68
581: invokestatic  #69
584: aload         8
586: invokestatic  #36
589: aload         8
591: invokestatic  #67
594: ldc           #68
596: invokestatic  #69
599: aload         11
601: invokestatic  #36
604: aload         11
606: invokestatic  #67
609: ldc           #68
611: invokestatic  #69
614: new           #27
617: dup
618: invokespecial #28
621: ldc           #29
623: invokevirtual #30
626: dload         13
628: invokevirtual #70
631: ldc           #32
633: invokevirtual #30
636: ldc2_w        #72
639: invokevirtual #70
642: ldc           #29
644: invokevirtual #30
647: invokevirtual #33
650: dload         13
652: ldc2_w        #72
655: dcmpl
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #35
667: aload         15
669: invokestatic  #36
672: aload         15
674: invokestatic  #67
677: ldc           #68
679: invokestatic  #69
682: aload         17
684: invokestatic  #36
687: aload         17
689: invokestatic  #67
692: ldc           #68
694: invokestatic  #69
697: aload         19
699: invokestatic  #36
702: aload         20
704: invokestatic  #36
707: aload         20
709: invokestatic  #67
712: ldc           #68
714: invokestatic  #69
717: aload         22
719: invokestatic  #36
722: aload         22
724: invokestatic  #67
727: ldc           #68
729: invokestatic  #69
732: aload         24
734: invokestatic  #36
737: aload         25
739: invokestatic  #36
742: aload         25
744: invokestatic  #67
747: ldc           #68
749: invokestatic  #69
752: aload         27
754: invokestatic  #36
757: aload         27
759: invokestatic  #67
762: ldc           #68
764: invokestatic  #69
767: new           #27
770: dup
771: invokespecial #28
774: ldc           #29
776: invokevirtual #30
779: dload         30
781: invokevirtual #70
784: ldc           #32
786: invokevirtual #30
789: dconst_0
790: invokevirtual #70
793: ldc           #29
795: invokevirtual #30
798: invokevirtual #33
801: dload         30
803: dconst_0
804: dcmpl
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #35
816: aload         32
818: invokestatic  #36
821: aload         32
823: invokestatic  #67
826: ldc           #68
828: invokestatic  #69
831: aload         34
833: invokestatic  #36
836: aload         34
838: invokestatic  #67
841: ldc           #68
843: invokestatic  #69
846: new           #27
849: dup
850: invokespecial #28
853: ldc           #29
855: invokevirtual #30
858: dload         36
860: invokevirtual #70
863: ldc           #32
865: invokevirtual #30
868: dconst_0
869: invokevirtual #70
872: ldc           #29
874: invokevirtual #30
877: invokevirtual #33
880: dload         36
882: dconst_0
883: dcmpl
884: ifne          891
887: iconst_1
888: goto          892
891: iconst_0
892: invokestatic  #35
895: aload         38
897: invokestatic  #36
900: aload         38
902: invokestatic  #67
905: ldc           #68
907: invokestatic  #69
910: aload         40
912: invokestatic  #36
915: aload         40
917: invokestatic  #67
920: ldc           #68
922: invokestatic  #69
925: aload         42
927: invokestatic  #36
930: aload         42
932: invokestatic  #67
935: ldc           #68
937: invokestatic  #69
940: aload         44
942: invokestatic  #36
945: aload         44
947: invokestatic  #67
950: ldc           #68
952: invokestatic  #69
955: aload         46
957: invokestatic  #36
960: new           #27
963: dup
964: invokespecial #28
967: ldc           #29
969: invokevirtual #30
972: iload         47
974: invokevirtual #37
977: ldc           #32
979: invokevirtual #30
982: iconst_0
983: invokevirtual #37
986: ldc           #29
988: invokevirtual #30
991: invokevirtual #33
994: iload         47
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #35
1007: aload         48
1009: invokestatic  #36
1012: aload         49
1014: invokestatic  #36
1017: aload         49
1019: invokestatic  #67
1022: ldc           #68
1024: invokestatic  #69
1027: aload         50
1029: invokestatic  #36
1032: aload         51
1034: invokestatic  #36
1037: new           #27
1040: dup
1041: invokespecial #28
1044: ldc           #29
1046: invokevirtual #30
1049: dload         52
1051: invokevirtual #70
1054: ldc           #32
1056: invokevirtual #30
1059: ldc2_w        #72
1062: invokevirtual #70
1065: ldc           #29
1067: invokevirtual #30
1070: invokevirtual #33
1073: dload         52
1075: ldc2_w        #72
1078: dcmpl
1079: ifne          1086
1082: iconst_1
1083: goto          1087
1086: iconst_0
1087: invokestatic  #35
1090: new           #27
1093: dup
1094: invokespecial #28
1097: ldc           #29
1099: invokevirtual #30
1102: aload         55
1104: invokevirtual #31
1107: ldc           #32
1109: invokevirtual #30
1112: getstatic     #19
1115: invokevirtual #31
1118: ldc           #29
1120: invokevirtual #30
1123: invokevirtual #33
1126: aload         55
1128: getstatic     #19
1131: invokevirtual #38
1134: invokestatic  #35
1137: return
Exception table:
from    to  target type
508   533   536   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test7
Start line: 256
End line: 313
Method source code: 
    public void test7() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test7");
        double[] doubleArray0 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair2 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray0, 22025.465794806718d);
        double[] doubleArray3 = pointValuePair2.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, true);
        double[] doubleArray6 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair8 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray6, 22025.465794806718d);
        double[] doubleArray9 = pointValuePair8.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray9, true);
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector5.append((org.apache.commons.math3.linear.RealVector) arrayRealVector11);
        boolean boolean13 = arrayRealVector11.isInfinite();
        double double14 = arrayRealVector11.getLInfNorm();
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair17 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray15, 22025.465794806718d);
        double[] doubleArray18 = pointValuePair17.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray18, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, (org.apache.commons.math3.linear.RealVector) arrayRealVector20);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair26 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray24, 22025.465794806718d);
        double[] doubleArray27 = pointValuePair26.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27, true);
        org.apache.commons.math3.linear.RealVector realVector31 = arrayRealVector29.mapMultiply(0.0d);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair34 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, 22025.465794806718d);
        double[] doubleArray35 = pointValuePair34.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray35, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector((org.apache.commons.math3.linear.RealVector) arrayRealVector29, arrayRealVector37);
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector20.combineToSelf((double) (byte) 10, (double) 2.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector29);
        double double40 = org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math3.linear.RealVector) arrayRealVector29);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #89
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: newarray       double
27: astore_1
28: new           #54
31: dup
32: aload_1
33: ldc2_w        #55
36: invokespecial #57
39: astore_2
40: aload_2
41: invokevirtual #58
44: checkcast     #59
47: astore_3
48: new           #60
51: dup
52: aload_3
53: iconst_1
54: invokespecial #61
57: astore        4
59: iconst_0
60: newarray       double
62: astore        5
64: new           #54
67: dup
68: aload         5
70: ldc2_w        #55
73: invokespecial #57
76: astore        6
78: aload         6
80: invokevirtual #58
83: checkcast     #59
86: astore        7
88: new           #60
91: dup
92: aload         7
94: iconst_1
95: invokespecial #61
98: astore        8
100: aload         4
102: aload         8
104: invokevirtual #81
107: astore        9
109: aload         8
111: invokevirtual #82
114: istore        10
116: aload         8
118: invokevirtual #80
121: dstore        11
123: iconst_0
124: newarray       double
126: astore        13
128: new           #54
131: dup
132: aload         13
134: ldc2_w        #55
137: invokespecial #57
140: astore        14
142: aload         14
144: invokevirtual #58
147: checkcast     #59
150: astore        15
152: new           #60
155: dup
156: aload         15
158: iconst_1
159: invokespecial #61
162: astore        16
164: new           #60
167: dup
168: aload         8
170: aload         16
172: invokespecial #90
175: astore        17
177: iconst_0
178: newarray       double
180: astore        18
182: new           #54
185: dup
186: aload         18
188: ldc2_w        #55
191: invokespecial #57
194: astore        19
196: aload         19
198: invokevirtual #58
201: checkcast     #59
204: astore        20
206: new           #60
209: dup
210: aload         20
212: iconst_1
213: invokespecial #61
216: astore        21
218: aload         21
220: dconst_0
221: invokevirtual #62
224: astore        22
226: iconst_0
227: newarray       double
229: astore        23
231: new           #54
234: dup
235: aload         23
237: ldc2_w        #55
240: invokespecial #57
243: astore        24
245: aload         24
247: invokevirtual #58
250: checkcast     #59
253: astore        25
255: new           #60
258: dup
259: aload         25
261: iconst_1
262: invokespecial #61
265: astore        26
267: new           #60
270: dup
271: aload         21
273: aload         26
275: invokespecial #63
278: astore        27
280: aload         16
282: ldc2_w        #72
285: ldc2_w        #91
288: aload         21
290: invokevirtual #93
293: astore        28
295: aload         21
297: invokestatic  #52
300: dstore        29
302: aload_1
303: invokestatic  #36
306: aload_1
307: invokestatic  #67
310: ldc           #68
312: invokestatic  #69
315: aload_3
316: invokestatic  #36
319: aload_3
320: invokestatic  #67
323: ldc           #68
325: invokestatic  #69
328: aload         5
330: invokestatic  #36
333: aload         5
335: invokestatic  #67
338: ldc           #68
340: invokestatic  #69
343: aload         7
345: invokestatic  #36
348: aload         7
350: invokestatic  #67
353: ldc           #68
355: invokestatic  #69
358: aload         9
360: invokestatic  #36
363: new           #27
366: dup
367: invokespecial #28
370: ldc           #29
372: invokevirtual #30
375: iload         10
377: invokevirtual #37
380: ldc           #32
382: invokevirtual #30
385: iconst_0
386: invokevirtual #37
389: ldc           #29
391: invokevirtual #30
394: invokevirtual #33
397: iload         10
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #35
410: new           #27
413: dup
414: invokespecial #28
417: ldc           #29
419: invokevirtual #30
422: dload         11
424: invokevirtual #70
427: ldc           #32
429: invokevirtual #30
432: dconst_0
433: invokevirtual #70
436: ldc           #29
438: invokevirtual #30
441: invokevirtual #33
444: dload         11
446: dconst_0
447: dcmpl
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #35
459: aload         13
461: invokestatic  #36
464: aload         13
466: invokestatic  #67
469: ldc           #68
471: invokestatic  #69
474: aload         15
476: invokestatic  #36
479: aload         15
481: invokestatic  #67
484: ldc           #68
486: invokestatic  #69
489: aload         18
491: invokestatic  #36
494: aload         18
496: invokestatic  #67
499: ldc           #68
501: invokestatic  #69
504: aload         20
506: invokestatic  #36
509: aload         20
511: invokestatic  #67
514: ldc           #68
516: invokestatic  #69
519: aload         22
521: invokestatic  #36
524: aload         23
526: invokestatic  #36
529: aload         23
531: invokestatic  #67
534: ldc           #68
536: invokestatic  #69
539: aload         25
541: invokestatic  #36
544: aload         25
546: invokestatic  #67
549: ldc           #68
551: invokestatic  #69
554: aload         28
556: invokestatic  #36
559: new           #27
562: dup
563: invokespecial #28
566: ldc           #29
568: invokevirtual #30
571: dload         29
573: invokevirtual #70
576: ldc           #32
578: invokevirtual #30
581: dconst_0
582: invokevirtual #70
585: ldc           #29
587: invokevirtual #30
590: invokevirtual #33
593: dload         29
595: dconst_0
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #35
608: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test8
Start line: 316
End line: 331
Method source code: 
    public void test8() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test8");
        org.apache.commons.math3.linear.RealVector realVector0 = null;
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math3.optimization.linear.LinearObjectiveFunction(realVector0, (double) 0);
        java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint> linearConstraintCollection3 = null;
        org.apache.commons.math3.optimization.GoalType goalType4 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau8 = new org.apache.commons.math3.optimization.linear.SimplexTableau(linearObjectiveFunction2, linearConstraintCollection3, goalType4, false, (-0.9198925387979957d), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType4 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType4.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #94
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: dconst_0
32: invokespecial #9
35: astore_2
36: aconst_null
37: astore_3
38: getstatic     #95
41: astore        4
43: new           #20
46: dup
47: aload_2
48: aload_3
49: aload         4
51: iconst_0
52: ldc2_w        #96
55: iconst_1
56: invokespecial #74
59: astore        5
61: ldc           #24
63: invokestatic  #25
66: goto          71
69: astore        5
71: new           #27
74: dup
75: invokespecial #28
78: ldc           #29
80: invokevirtual #30
83: aload         4
85: invokevirtual #31
88: ldc           #32
90: invokevirtual #30
93: getstatic     #95
96: invokevirtual #31
99: ldc           #29
101: invokevirtual #30
104: invokevirtual #33
107: aload         4
109: getstatic     #95
112: invokevirtual #38
115: invokestatic  #35
118: return
Exception table:
from    to  target type
43    66    69   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test9
Start line: 334
End line: 410
Method source code: 
    public void test9() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test9");
        double[] doubleArray0 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair2 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray0, 22025.465794806718d);
        double[] doubleArray3 = pointValuePair2.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapMultiply(0.0d);
        double[] doubleArray8 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair10 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray8, 22025.465794806718d);
        double[] doubleArray11 = pointValuePair10.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray11, true);
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapMultiply(0.0d);
        double[] doubleArray16 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair18 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray16, 22025.465794806718d);
        double[] doubleArray19 = pointValuePair18.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector((org.apache.commons.math3.linear.RealVector) arrayRealVector13, arrayRealVector21);
        double double23 = arrayRealVector5.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair26 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray24, 22025.465794806718d);
        double[] doubleArray27 = pointValuePair26.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27, true);
        double double30 = arrayRealVector29.getLInfNorm();
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair33 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray31, 22025.465794806718d);
        double[] doubleArray34 = pointValuePair33.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray34, true);
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math3.optimization.PointValuePair pointValuePair39 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray37, 22025.465794806718d);
        double[] doubleArray40 = pointValuePair39.getKey();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray40, true);
        org.apache.commons.math3.linear.RealVector realVector43 = arrayRealVector36.append((org.apache.commons.math3.linear.RealVector) arrayRealVector42);
        boolean boolean44 = arrayRealVector42.isInfinite();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = arrayRealVector29.append(arrayRealVector42);
        double[] doubleArray46 = arrayRealVector45.toArray();
        org.apache.commons.math3.linear.RealVector realVector47 = arrayRealVector5.append((org.apache.commons.math3.linear.RealVector) arrayRealVector45);
        org.apache.commons.math3.linear.RealVector realVector49 = arrayRealVector5.mapAddToSelf((double) (-1));
        double double50 = org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math3.linear.ArrayRealVector(realVector49);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #98
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: newarray       double
27: astore_1
28: new           #54
31: dup
32: aload_1
33: ldc2_w        #55
36: invokespecial #57
39: astore_2
40: aload_2
41: invokevirtual #58
44: checkcast     #59
47: astore_3
48: new           #60
51: dup
52: aload_3
53: iconst_1
54: invokespecial #61
57: astore        4
59: aload         4
61: dconst_0
62: invokevirtual #62
65: astore        5
67: iconst_0
68: newarray       double
70: astore        6
72: new           #54
75: dup
76: aload         6
78: ldc2_w        #55
81: invokespecial #57
84: astore        7
86: aload         7
88: invokevirtual #58
91: checkcast     #59
94: astore        8
96: new           #60
99: dup
100: aload         8
102: iconst_1
103: invokespecial #61
106: astore        9
108: aload         9
110: dconst_0
111: invokevirtual #62
114: astore        10
116: iconst_0
117: newarray       double
119: astore        11
121: new           #54
124: dup
125: aload         11
127: ldc2_w        #55
130: invokespecial #57
133: astore        12
135: aload         12
137: invokevirtual #58
140: checkcast     #59
143: astore        13
145: new           #60
148: dup
149: aload         13
151: iconst_1
152: invokespecial #61
155: astore        14
157: new           #60
160: dup
161: aload         9
163: aload         14
165: invokespecial #63
168: astore        15
170: aload         4
172: aload         15
174: invokevirtual #79
177: dstore        16
179: iconst_0
180: newarray       double
182: astore        18
184: new           #54
187: dup
188: aload         18
190: ldc2_w        #55
193: invokespecial #57
196: astore        19
198: aload         19
200: invokevirtual #58
203: checkcast     #59
206: astore        20
208: new           #60
211: dup
212: aload         20
214: iconst_1
215: invokespecial #61
218: astore        21
220: aload         21
222: invokevirtual #80
225: dstore        22
227: iconst_0
228: newarray       double
230: astore        24
232: new           #54
235: dup
236: aload         24
238: ldc2_w        #55
241: invokespecial #57
244: astore        25
246: aload         25
248: invokevirtual #58
251: checkcast     #59
254: astore        26
256: new           #60
259: dup
260: aload         26
262: iconst_1
263: invokespecial #61
266: astore        27
268: iconst_0
269: newarray       double
271: astore        28
273: new           #54
276: dup
277: aload         28
279: ldc2_w        #55
282: invokespecial #57
285: astore        29
287: aload         29
289: invokevirtual #58
292: checkcast     #59
295: astore        30
297: new           #60
300: dup
301: aload         30
303: iconst_1
304: invokespecial #61
307: astore        31
309: aload         27
311: aload         31
313: invokevirtual #81
316: astore        32
318: aload         31
320: invokevirtual #82
323: istore        33
325: aload         21
327: aload         31
329: invokevirtual #83
332: astore        34
334: aload         34
336: invokevirtual #84
339: astore        35
341: aload         4
343: aload         34
345: invokevirtual #81
348: astore        36
350: aload         4
352: ldc2_w        #85
355: invokevirtual #87
358: astore        37
360: aload         37
362: invokestatic  #52
365: dstore        38
367: new           #60
370: dup
371: aload         37
373: invokespecial #99
376: astore        40
378: aload_1
379: invokestatic  #36
382: aload_1
383: invokestatic  #67
386: ldc           #68
388: invokestatic  #69
391: aload_3
392: invokestatic  #36
395: aload_3
396: invokestatic  #67
399: ldc           #68
401: invokestatic  #69
404: aload         5
406: invokestatic  #36
409: aload         6
411: invokestatic  #36
414: aload         6
416: invokestatic  #67
419: ldc           #68
421: invokestatic  #69
424: aload         8
426: invokestatic  #36
429: aload         8
431: invokestatic  #67
434: ldc           #68
436: invokestatic  #69
439: aload         10
441: invokestatic  #36
444: aload         11
446: invokestatic  #36
449: aload         11
451: invokestatic  #67
454: ldc           #68
456: invokestatic  #69
459: aload         13
461: invokestatic  #36
464: aload         13
466: invokestatic  #67
469: ldc           #68
471: invokestatic  #69
474: new           #27
477: dup
478: invokespecial #28
481: ldc           #29
483: invokevirtual #30
486: dload         16
488: invokevirtual #70
491: ldc           #32
493: invokevirtual #30
496: dconst_0
497: invokevirtual #70
500: ldc           #29
502: invokevirtual #30
505: invokevirtual #33
508: dload         16
510: dconst_0
511: dcmpl
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #35
523: aload         18
525: invokestatic  #36
528: aload         18
530: invokestatic  #67
533: ldc           #68
535: invokestatic  #69
538: aload         20
540: invokestatic  #36
543: aload         20
545: invokestatic  #67
548: ldc           #68
550: invokestatic  #69
553: new           #27
556: dup
557: invokespecial #28
560: ldc           #29
562: invokevirtual #30
565: dload         22
567: invokevirtual #70
570: ldc           #32
572: invokevirtual #30
575: dconst_0
576: invokevirtual #70
579: ldc           #29
581: invokevirtual #30
584: invokevirtual #33
587: dload         22
589: dconst_0
590: dcmpl
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #35
602: aload         24
604: invokestatic  #36
607: aload         24
609: invokestatic  #67
612: ldc           #68
614: invokestatic  #69
617: aload         26
619: invokestatic  #36
622: aload         26
624: invokestatic  #67
627: ldc           #68
629: invokestatic  #69
632: aload         28
634: invokestatic  #36
637: aload         28
639: invokestatic  #67
642: ldc           #68
644: invokestatic  #69
647: aload         30
649: invokestatic  #36
652: aload         30
654: invokestatic  #67
657: ldc           #68
659: invokestatic  #69
662: aload         32
664: invokestatic  #36
667: new           #27
670: dup
671: invokespecial #28
674: ldc           #29
676: invokevirtual #30
679: iload         33
681: invokevirtual #37
684: ldc           #32
686: invokevirtual #30
689: iconst_0
690: invokevirtual #37
693: ldc           #29
695: invokevirtual #30
698: invokevirtual #33
701: iload         33
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #35
714: aload         34
716: invokestatic  #36
719: aload         35
721: invokestatic  #36
724: aload         35
726: invokestatic  #67
729: ldc           #68
731: invokestatic  #69
734: aload         36
736: invokestatic  #36
739: aload         37
741: invokestatic  #36
744: new           #27
747: dup
748: invokespecial #28
751: ldc           #29
753: invokevirtual #30
756: dload         38
758: invokevirtual #70
761: ldc           #32
763: invokevirtual #30
766: dconst_0
767: invokevirtual #70
770: ldc           #29
772: invokevirtual #30
775: invokevirtual #33
778: dload         38
780: dconst_0
781: dcmpl
782: ifne          789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #35
793: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testInitialization
Start line: 30
End line: 43
Method source code: 
    public void testInitialization() {
        LinearObjectiveFunction f = createFunction();
        Collection<LinearConstraint> constraints = createConstraints();
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        double[][] expectedInitialTableau = {
                                             {-1, 0,  -1,  -1,  2, 0, 0, 0, -4},
                                             { 0, 1, -15, -10, 25, 0, 0, 0,  0},
                                             { 0, 0,   1,   0, -1, 1, 0, 0,  2},
                                             { 0, 0,   0,   1, -1, 0, 1, 0,  3},
                                             { 0, 0,   1,   1, -2, 0, 0, 1,  4}
        };
        assertMatrixEquals(expectedInitialTableau, tableau.getData());
    }
Method byte code: 
0: aload_0
1: invokespecial #2
4: astore_1
5: aload_0
6: invokespecial #3
9: astore_2
10: new           #4
13: dup
14: aload_1
15: aload_2
16: getstatic     #5
19: iconst_0
20: ldc2_w        #6
23: invokespecial #8
26: astore_3
27: iconst_5
28: anewarray     #9
31: dup
32: iconst_0
33: bipush        9
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: dconst_0
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #10
52: dastore
53: dup
54: iconst_3
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_4
61: ldc2_w        #12
64: dastore
65: dup
66: iconst_5
67: dconst_0
68: dastore
69: dup
70: bipush        6
72: dconst_0
73: dastore
74: dup
75: bipush        7
77: dconst_0
78: dastore
79: dup
80: bipush        8
82: ldc2_w        #14
85: dastore
86: aastore
87: dup
88: iconst_1
89: bipush        9
91: newarray       double
93: dup
94: iconst_0
95: dconst_0
96: dastore
97: dup
98: iconst_1
99: dconst_1
100: dastore
101: dup
102: iconst_2
103: ldc2_w        #16
106: dastore
107: dup
108: iconst_3
109: ldc2_w        #18
112: dastore
113: dup
114: iconst_4
115: ldc2_w        #20
118: dastore
119: dup
120: iconst_5
121: dconst_0
122: dastore
123: dup
124: bipush        6
126: dconst_0
127: dastore
128: dup
129: bipush        7
131: dconst_0
132: dastore
133: dup
134: bipush        8
136: dconst_0
137: dastore
138: aastore
139: dup
140: iconst_2
141: bipush        9
143: newarray       double
145: dup
146: iconst_0
147: dconst_0
148: dastore
149: dup
150: iconst_1
151: dconst_0
152: dastore
153: dup
154: iconst_2
155: dconst_1
156: dastore
157: dup
158: iconst_3
159: dconst_0
160: dastore
161: dup
162: iconst_4
163: ldc2_w        #10
166: dastore
167: dup
168: iconst_5
169: dconst_1
170: dastore
171: dup
172: bipush        6
174: dconst_0
175: dastore
176: dup
177: bipush        7
179: dconst_0
180: dastore
181: dup
182: bipush        8
184: ldc2_w        #12
187: dastore
188: aastore
189: dup
190: iconst_3
191: bipush        9
193: newarray       double
195: dup
196: iconst_0
197: dconst_0
198: dastore
199: dup
200: iconst_1
201: dconst_0
202: dastore
203: dup
204: iconst_2
205: dconst_0
206: dastore
207: dup
208: iconst_3
209: dconst_1
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #10
216: dastore
217: dup
218: iconst_5
219: dconst_0
220: dastore
221: dup
222: bipush        6
224: dconst_1
225: dastore
226: dup
227: bipush        7
229: dconst_0
230: dastore
231: dup
232: bipush        8
234: ldc2_w        #22
237: dastore
238: aastore
239: dup
240: iconst_4
241: bipush        9
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: dconst_0
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_1
260: dastore
261: dup
262: iconst_4
263: ldc2_w        #24
266: dastore
267: dup
268: iconst_5
269: dconst_0
270: dastore
271: dup
272: bipush        6
274: dconst_0
275: dastore
276: dup
277: bipush        7
279: dconst_1
280: dastore
281: dup
282: bipush        8
284: ldc2_w        #26
287: dastore
288: aastore
289: astore        4
291: aload_0
292: aload         4
294: aload_3
295: invokevirtual #28
298: invokespecial #29
301: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testDropPhase1Objective
Start line: 46
End line: 59
Method source code: 
    public void testDropPhase1Objective() {
        LinearObjectiveFunction f = createFunction();
        Collection<LinearConstraint> constraints = createConstraints();
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        double[][] expectedTableau = {
                                      { 1, -15, -10, 0, 0, 0, 0},
                                      { 0,   1,   0, 1, 0, 0, 2},
                                      { 0,   0,   1, 0, 1, 0, 3},
                                      { 0,   1,   1, 0, 0, 1, 4}
        };
        tableau.dropPhase1Objective();
        assertMatrixEquals(expectedTableau, tableau.getData());
    }
Method byte code: 
0: aload_0
1: invokespecial #2
4: astore_1
5: aload_0
6: invokespecial #3
9: astore_2
10: new           #4
13: dup
14: aload_1
15: aload_2
16: getstatic     #5
19: iconst_0
20: ldc2_w        #6
23: invokespecial #8
26: astore_3
27: iconst_4
28: anewarray     #9
31: dup
32: iconst_0
33: bipush        7
35: newarray       double
37: dup
38: iconst_0
39: dconst_1
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #16
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #18
52: dastore
53: dup
54: iconst_3
55: dconst_0
56: dastore
57: dup
58: iconst_4
59: dconst_0
60: dastore
61: dup
62: iconst_5
63: dconst_0
64: dastore
65: dup
66: bipush        6
68: dconst_0
69: dastore
70: aastore
71: dup
72: iconst_1
73: bipush        7
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: dconst_1
84: dastore
85: dup
86: iconst_2
87: dconst_0
88: dastore
89: dup
90: iconst_3
91: dconst_1
92: dastore
93: dup
94: iconst_4
95: dconst_0
96: dastore
97: dup
98: iconst_5
99: dconst_0
100: dastore
101: dup
102: bipush        6
104: ldc2_w        #12
107: dastore
108: aastore
109: dup
110: iconst_2
111: bipush        7
113: newarray       double
115: dup
116: iconst_0
117: dconst_0
118: dastore
119: dup
120: iconst_1
121: dconst_0
122: dastore
123: dup
124: iconst_2
125: dconst_1
126: dastore
127: dup
128: iconst_3
129: dconst_0
130: dastore
131: dup
132: iconst_4
133: dconst_1
134: dastore
135: dup
136: iconst_5
137: dconst_0
138: dastore
139: dup
140: bipush        6
142: ldc2_w        #22
145: dastore
146: aastore
147: dup
148: iconst_3
149: bipush        7
151: newarray       double
153: dup
154: iconst_0
155: dconst_0
156: dastore
157: dup
158: iconst_1
159: dconst_1
160: dastore
161: dup
162: iconst_2
163: dconst_1
164: dastore
165: dup
166: iconst_3
167: dconst_0
168: dastore
169: dup
170: iconst_4
171: dconst_0
172: dastore
173: dup
174: iconst_5
175: dconst_1
176: dastore
177: dup
178: bipush        6
180: ldc2_w        #26
183: dastore
184: aastore
185: astore        4
187: aload_3
188: invokevirtual #30
191: aload_0
192: aload         4
194: aload_3
195: invokevirtual #28
198: invokespecial #29
201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testTableauWithNoArtificialVars
Start line: 62
End line: 77
Method source code: 
    public void testTableauWithNoArtificialVars() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {15, 10}, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] {0, 1}, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] {1, 1}, Relationship.LEQ, 4));
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        double[][] initialTableau = {
                                     {1, -15, -10, 25, 0, 0, 0, 0},
                                     {0,   1,   0, -1, 1, 0, 0, 2},
                                     {0,   0,   1, -1, 0, 1, 0, 3},
                                     {0,   1,   1, -2, 0, 0, 1, 4}
        };
        assertMatrixEquals(initialTableau, tableau.getData());
    }
Method byte code: 
0: new           #31
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #32
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #34
18: dastore
19: dconst_0
20: invokespecial #36
23: astore_1
24: new           #37
27: dup
28: invokespecial #38
31: astore_2
32: aload_2
33: new           #39
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #40
51: ldc2_w        #12
54: invokespecial #41
57: invokeinterface #42,  2
62: pop
63: aload_2
64: new           #39
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_1
78: dastore
79: getstatic     #40
82: ldc2_w        #22
85: invokespecial #41
88: invokeinterface #42,  2
93: pop
94: aload_2
95: new           #39
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #40
113: ldc2_w        #26
116: invokespecial #41
119: invokeinterface #42,  2
124: pop
125: new           #4
128: dup
129: aload_1
130: aload_2
131: getstatic     #5
134: iconst_0
135: ldc2_w        #6
138: invokespecial #8
141: astore_3
142: iconst_4
143: anewarray     #9
146: dup
147: iconst_0
148: bipush        8
150: newarray       double
152: dup
153: iconst_0
154: dconst_1
155: dastore
156: dup
157: iconst_1
158: ldc2_w        #16
161: dastore
162: dup
163: iconst_2
164: ldc2_w        #18
167: dastore
168: dup
169: iconst_3
170: ldc2_w        #20
173: dastore
174: dup
175: iconst_4
176: dconst_0
177: dastore
178: dup
179: iconst_5
180: dconst_0
181: dastore
182: dup
183: bipush        6
185: dconst_0
186: dastore
187: dup
188: bipush        7
190: dconst_0
191: dastore
192: aastore
193: dup
194: iconst_1
195: bipush        8
197: newarray       double
199: dup
200: iconst_0
201: dconst_0
202: dastore
203: dup
204: iconst_1
205: dconst_1
206: dastore
207: dup
208: iconst_2
209: dconst_0
210: dastore
211: dup
212: iconst_3
213: ldc2_w        #10
216: dastore
217: dup
218: iconst_4
219: dconst_1
220: dastore
221: dup
222: iconst_5
223: dconst_0
224: dastore
225: dup
226: bipush        6
228: dconst_0
229: dastore
230: dup
231: bipush        7
233: ldc2_w        #12
236: dastore
237: aastore
238: dup
239: iconst_2
240: bipush        8
242: newarray       double
244: dup
245: iconst_0
246: dconst_0
247: dastore
248: dup
249: iconst_1
250: dconst_0
251: dastore
252: dup
253: iconst_2
254: dconst_1
255: dastore
256: dup
257: iconst_3
258: ldc2_w        #10
261: dastore
262: dup
263: iconst_4
264: dconst_0
265: dastore
266: dup
267: iconst_5
268: dconst_1
269: dastore
270: dup
271: bipush        6
273: dconst_0
274: dastore
275: dup
276: bipush        7
278: ldc2_w        #22
281: dastore
282: aastore
283: dup
284: iconst_3
285: bipush        8
287: newarray       double
289: dup
290: iconst_0
291: dconst_0
292: dastore
293: dup
294: iconst_1
295: dconst_1
296: dastore
297: dup
298: iconst_2
299: dconst_1
300: dastore
301: dup
302: iconst_3
303: ldc2_w        #24
306: dastore
307: dup
308: iconst_4
309: dconst_0
310: dastore
311: dup
312: iconst_5
313: dconst_0
314: dastore
315: dup
316: bipush        6
318: dconst_1
319: dastore
320: dup
321: bipush        7
323: ldc2_w        #26
326: dastore
327: aastore
328: astore        4
330: aload_0
331: aload         4
333: aload_3
334: invokevirtual #28
337: invokespecial #29
340: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testSerial
Start line: 80
End line: 86
Method source code: 
    public void testSerial() {
        LinearObjectiveFunction f = createFunction();
        Collection<LinearConstraint> constraints = createConstraints();
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        Assert.assertEquals(tableau, TestUtils.serializeAndRecover(tableau));
    }
Method byte code: 
0: aload_0
1: invokespecial #2
4: astore_1
5: aload_0
6: invokespecial #3
9: astore_2
10: new           #4
13: dup
14: aload_1
15: aload_2
16: getstatic     #5
19: iconst_0
20: ldc2_w        #6
23: invokespecial #8
26: astore_3
27: aload_3
28: aload_3
29: invokestatic  #43
32: invokestatic  #44
35: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath781
Start line: 32
End line: 48
Method source code: 
    public void testMath781() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 6, 7 }, 0);

        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 2, 1 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { -1, 1, 1 }, Relationship.LEQ, -1));
        constraints.add(new LinearConstraint(new double[] { 2, -3, 1 }, Relationship.LEQ, -1));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);

        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) > 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) > 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[2], 0.0d, epsilon) < 0);
        Assert.assertEquals(2.0d, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #3
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #5
18: dastore
19: dup
20: iconst_2
21: ldc2_w        #7
24: dastore
25: dconst_0
26: invokespecial #9
29: astore_1
30: new           #10
33: dup
34: invokespecial #11
37: astore_2
38: aload_2
39: new           #12
42: dup
43: iconst_3
44: newarray       double
46: dup
47: iconst_0
48: dconst_1
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #3
55: dastore
56: dup
57: iconst_2
58: dconst_1
59: dastore
60: getstatic     #13
63: ldc2_w        #3
66: invokespecial #14
69: invokevirtual #15
72: pop
73: aload_2
74: new           #12
77: dup
78: iconst_3
79: newarray       double
81: dup
82: iconst_0
83: ldc2_w        #16
86: dastore
87: dup
88: iconst_1
89: dconst_1
90: dastore
91: dup
92: iconst_2
93: dconst_1
94: dastore
95: getstatic     #13
98: ldc2_w        #16
101: invokespecial #14
104: invokevirtual #15
107: pop
108: aload_2
109: new           #12
112: dup
113: iconst_3
114: newarray       double
116: dup
117: iconst_0
118: ldc2_w        #3
121: dastore
122: dup
123: iconst_1
124: ldc2_w        #18
127: dastore
128: dup
129: iconst_2
130: dconst_1
131: dastore
132: getstatic     #13
135: ldc2_w        #16
138: invokespecial #14
141: invokevirtual #15
144: pop
145: ldc2_w        #20
148: dstore_3
149: new           #22
152: dup
153: invokespecial #23
156: astore        5
158: aload         5
160: aload_1
161: aload_2
162: getstatic     #24
165: iconst_0
166: invokevirtual #25
169: astore        6
171: aload         6
173: invokevirtual #26
176: iconst_0
177: daload
178: dconst_0
179: dload_3
180: invokestatic  #27
183: ifle          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #28
194: aload         6
196: invokevirtual #26
199: iconst_1
200: daload
201: dconst_0
202: dload_3
203: invokestatic  #27
206: ifle          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #28
217: aload         6
219: invokevirtual #26
222: iconst_2
223: daload
224: dconst_0
225: dload_3
226: invokestatic  #27
229: ifge          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #28
240: ldc2_w        #3
243: aload         6
245: invokevirtual #29
248: checkcast     #30
251: invokevirtual #31
254: dload_3
255: invokestatic  #32
258: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath713NegativeVariable
Start line: 51
End line: 62
Method source code: 
    public void testMath713NegativeVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 1.0}, 0.0d);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) >= 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) >= 0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #9
19: astore_1
20: new           #10
23: dup
24: invokespecial #11
27: astore_2
28: aload_2
29: new           #12
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_0
43: dastore
44: getstatic     #33
47: dconst_1
48: invokespecial #14
51: invokevirtual #15
54: pop
55: ldc2_w        #20
58: dstore_3
59: new           #22
62: dup
63: invokespecial #23
66: astore        5
68: aload         5
70: aload_1
71: aload_2
72: getstatic     #34
75: iconst_1
76: invokevirtual #25
79: astore        6
81: aload         6
83: invokevirtual #26
86: iconst_0
87: daload
88: dconst_0
89: dload_3
90: invokestatic  #27
93: iflt          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #28
104: aload         6
106: invokevirtual #26
109: iconst_1
110: daload
111: dconst_0
112: dload_3
113: invokestatic  #27
116: iflt          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #28
127: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434NegativeVariable
Start line: 65
End line: 79
Method source code: 
    public void testMath434NegativeVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {0.0, 0.0, 1.0}, 0.0d);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 1, 0}, Relationship.EQ, 5));
        constraints.add(new LinearConstraint(new double[] {0, 0, 1}, Relationship.GEQ, -10));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);

        Assert.assertEquals(5.0, solution.getPoint()[0] + solution.getPoint()[1], epsilon);
        Assert.assertEquals(-10.0, solution.getPoint()[2], epsilon);
        Assert.assertEquals(-10.0, solution.getValue(), epsilon);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: dconst_0
10: dastore
11: dup
12: iconst_1
13: dconst_0
14: dastore
15: dup
16: iconst_2
17: dconst_1
18: dastore
19: dconst_0
20: invokespecial #9
23: astore_1
24: new           #10
27: dup
28: invokespecial #11
31: astore_2
32: aload_2
33: new           #12
36: dup
37: iconst_3
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: dup
49: iconst_2
50: dconst_0
51: dastore
52: getstatic     #33
55: ldc2_w        #35
58: invokespecial #14
61: invokevirtual #15
64: pop
65: aload_2
66: new           #12
69: dup
70: iconst_3
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_0
80: dastore
81: dup
82: iconst_2
83: dconst_1
84: dastore
85: getstatic     #37
88: ldc2_w        #38
91: invokespecial #14
94: invokevirtual #15
97: pop
98: ldc2_w        #20
101: dstore_3
102: new           #22
105: dup
106: invokespecial #23
109: astore        5
111: aload         5
113: aload_1
114: aload_2
115: getstatic     #34
118: iconst_0
119: invokevirtual #25
122: astore        6
124: ldc2_w        #35
127: aload         6
129: invokevirtual #26
132: iconst_0
133: daload
134: aload         6
136: invokevirtual #26
139: iconst_1
140: daload
141: dadd
142: dload_3
143: invokestatic  #32
146: ldc2_w        #38
149: aload         6
151: invokevirtual #26
154: iconst_2
155: daload
156: dload_3
157: invokestatic  #32
160: ldc2_w        #38
163: aload         6
165: invokevirtual #29
168: checkcast     #30
171: invokevirtual #31
174: dload_3
175: invokestatic  #32
178: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434UnfeasibleSolution
Start line: 82
End line: 93
Method source code: 
    public void testMath434UnfeasibleSolution() {
        double epsilon = 1e-6;

        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 0.0}, 0.0);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {epsilon/2, 0.5}, Relationship.EQ, 0));
        constraints.add(new LinearConstraint(new double[] {1e-3, 0.1}, Relationship.EQ, 10));

        SimplexSolver solver = new SimplexSolver();
        // allowing only non-negative values, no feasible solution shall be found
        solver.optimize(f, constraints, GoalType.MINIMIZE, true);
    }
Method byte code: 
0: ldc2_w        #20
3: dstore_1
4: new           #2
7: dup
8: iconst_2
9: newarray       double
11: dup
12: iconst_0
13: dconst_1
14: dastore
15: dup
16: iconst_1
17: dconst_0
18: dastore
19: dconst_0
20: invokespecial #9
23: astore_3
24: new           #10
27: dup
28: invokespecial #11
31: astore        4
33: aload         4
35: new           #12
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dload_1
45: ldc2_w        #3
48: ddiv
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #40
55: dastore
56: getstatic     #33
59: dconst_0
60: invokespecial #14
63: invokevirtual #15
66: pop
67: aload         4
69: new           #12
72: dup
73: iconst_2
74: newarray       double
76: dup
77: iconst_0
78: ldc2_w        #42
81: dastore
82: dup
83: iconst_1
84: ldc2_w        #44
87: dastore
88: getstatic     #33
91: ldc2_w        #46
94: invokespecial #14
97: invokevirtual #15
100: pop
101: new           #22
104: dup
105: invokespecial #23
108: astore        5
110: aload         5
112: aload_3
113: aload         4
115: getstatic     #34
118: iconst_1
119: invokevirtual #25
122: pop
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434PivotRowSelection
Start line: 96
End line: 109
Method source code: 
    public void testMath434PivotRowSelection() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0}, 0.0);

        double epsilon = 1e-6;
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {200}, Relationship.GEQ, 1));
        constraints.add(new LinearConstraint(new double[] {100}, Relationship.GEQ, 0.499900001));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0] * 200.d, 1.d, epsilon) >= 0);
        Assert.assertEquals(0.0050, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dconst_0
12: invokespecial #9
15: astore_1
16: ldc2_w        #20
19: dstore_2
20: new           #10
23: dup
24: invokespecial #11
27: astore        4
29: aload         4
31: new           #12
34: dup
35: iconst_1
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #48
43: dastore
44: getstatic     #37
47: dconst_1
48: invokespecial #14
51: invokevirtual #15
54: pop
55: aload         4
57: new           #12
60: dup
61: iconst_1
62: newarray       double
64: dup
65: iconst_0
66: ldc2_w        #50
69: dastore
70: getstatic     #37
73: ldc2_w        #52
76: invokespecial #14
79: invokevirtual #15
82: pop
83: new           #22
86: dup
87: invokespecial #23
90: astore        5
92: aload         5
94: aload_1
95: aload         4
97: getstatic     #34
100: iconst_0
101: invokevirtual #25
104: astore        6
106: aload         6
108: invokevirtual #26
111: iconst_0
112: daload
113: ldc2_w        #48
116: dmul
117: dconst_1
118: dload_2
119: invokestatic  #27
122: iflt          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #28
133: ldc2_w        #54
136: aload         6
138: invokevirtual #29
141: checkcast     #30
144: invokevirtual #31
147: dload_2
148: invokestatic  #32
151: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434PivotRowSelection2
Start line: 112
End line: 134
Method source code: 
    public void testMath434PivotRowSelection2() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {0.0d, 1.0d, 1.0d, 0.0d, 0.0d, 0.0d, 0.0d}, 0.0d);

        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1.0d, -0.1d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.EQ, -0.1d));
        constraints.add(new LinearConstraint(new double[] {1.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, -1e-18d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 1.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 0.0d, 1.0d, 0.0d, -0.0128588d, 1e-5d}, Relationship.EQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 0.0d, 0.0d, 1.0d, 1e-5d, -0.0128586d}, Relationship.EQ, 1e-10d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, -1.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 1.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 0.0d, -1.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 0.0d, 1.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));

        double epsilon = 1e-7;
        SimplexSolver simplex = new SimplexSolver();
        PointValuePair solution = simplex.optimize(f, constraints, GoalType.MINIMIZE, false);
        
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], -1e-18d, epsilon) >= 0);
        Assert.assertEquals(1.0d, solution.getPoint()[1], epsilon);        
        Assert.assertEquals(0.0d, solution.getPoint()[2], epsilon);
        Assert.assertEquals(1.0d, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        7
6: newarray       double
8: dup
9: iconst_0
10: dconst_0
11: dastore
12: dup
13: iconst_1
14: dconst_1
15: dastore
16: dup
17: iconst_2
18: dconst_1
19: dastore
20: dup
21: iconst_3
22: dconst_0
23: dastore
24: dup
25: iconst_4
26: dconst_0
27: dastore
28: dup
29: iconst_5
30: dconst_0
31: dastore
32: dup
33: bipush        6
35: dconst_0
36: dastore
37: dconst_0
38: invokespecial #9
41: astore_1
42: new           #10
45: dup
46: invokespecial #11
49: astore_2
50: aload_2
51: new           #12
54: dup
55: bipush        7
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #56
68: dastore
69: dup
70: iconst_2
71: dconst_0
72: dastore
73: dup
74: iconst_3
75: dconst_0
76: dastore
77: dup
78: iconst_4
79: dconst_0
80: dastore
81: dup
82: iconst_5
83: dconst_0
84: dastore
85: dup
86: bipush        6
88: dconst_0
89: dastore
90: getstatic     #33
93: ldc2_w        #56
96: invokespecial #14
99: invokevirtual #15
102: pop
103: aload_2
104: new           #12
107: dup
108: bipush        7
110: newarray       double
112: dup
113: iconst_0
114: dconst_1
115: dastore
116: dup
117: iconst_1
118: dconst_0
119: dastore
120: dup
121: iconst_2
122: dconst_0
123: dastore
124: dup
125: iconst_3
126: dconst_0
127: dastore
128: dup
129: iconst_4
130: dconst_0
131: dastore
132: dup
133: iconst_5
134: dconst_0
135: dastore
136: dup
137: bipush        6
139: dconst_0
140: dastore
141: getstatic     #37
144: ldc2_w        #58
147: invokespecial #14
150: invokevirtual #15
153: pop
154: aload_2
155: new           #12
158: dup
159: bipush        7
161: newarray       double
163: dup
164: iconst_0
165: dconst_0
166: dastore
167: dup
168: iconst_1
169: dconst_1
170: dastore
171: dup
172: iconst_2
173: dconst_0
174: dastore
175: dup
176: iconst_3
177: dconst_0
178: dastore
179: dup
180: iconst_4
181: dconst_0
182: dastore
183: dup
184: iconst_5
185: dconst_0
186: dastore
187: dup
188: bipush        6
190: dconst_0
191: dastore
192: getstatic     #37
195: dconst_0
196: invokespecial #14
199: invokevirtual #15
202: pop
203: aload_2
204: new           #12
207: dup
208: bipush        7
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: dconst_0
219: dastore
220: dup
221: iconst_2
222: dconst_0
223: dastore
224: dup
225: iconst_3
226: dconst_1
227: dastore
228: dup
229: iconst_4
230: dconst_0
231: dastore
232: dup
233: iconst_5
234: ldc2_w        #60
237: dastore
238: dup
239: bipush        6
241: ldc2_w        #62
244: dastore
245: getstatic     #33
248: dconst_0
249: invokespecial #14
252: invokevirtual #15
255: pop
256: aload_2
257: new           #12
260: dup
261: bipush        7
263: newarray       double
265: dup
266: iconst_0
267: dconst_0
268: dastore
269: dup
270: iconst_1
271: dconst_0
272: dastore
273: dup
274: iconst_2
275: dconst_0
276: dastore
277: dup
278: iconst_3
279: dconst_0
280: dastore
281: dup
282: iconst_4
283: dconst_1
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #62
290: dastore
291: dup
292: bipush        6
294: ldc2_w        #64
297: dastore
298: getstatic     #33
301: ldc2_w        #66
304: invokespecial #14
307: invokevirtual #15
310: pop
311: aload_2
312: new           #12
315: dup
316: bipush        7
318: newarray       double
320: dup
321: iconst_0
322: dconst_0
323: dastore
324: dup
325: iconst_1
326: dconst_0
327: dastore
328: dup
329: iconst_2
330: dconst_1
331: dastore
332: dup
333: iconst_3
334: ldc2_w        #16
337: dastore
338: dup
339: iconst_4
340: dconst_0
341: dastore
342: dup
343: iconst_5
344: dconst_0
345: dastore
346: dup
347: bipush        6
349: dconst_0
350: dastore
351: getstatic     #37
354: dconst_0
355: invokespecial #14
358: invokevirtual #15
361: pop
362: aload_2
363: new           #12
366: dup
367: bipush        7
369: newarray       double
371: dup
372: iconst_0
373: dconst_0
374: dastore
375: dup
376: iconst_1
377: dconst_0
378: dastore
379: dup
380: iconst_2
381: dconst_1
382: dastore
383: dup
384: iconst_3
385: dconst_1
386: dastore
387: dup
388: iconst_4
389: dconst_0
390: dastore
391: dup
392: iconst_5
393: dconst_0
394: dastore
395: dup
396: bipush        6
398: dconst_0
399: dastore
400: getstatic     #37
403: dconst_0
404: invokespecial #14
407: invokevirtual #15
410: pop
411: aload_2
412: new           #12
415: dup
416: bipush        7
418: newarray       double
420: dup
421: iconst_0
422: dconst_0
423: dastore
424: dup
425: iconst_1
426: dconst_0
427: dastore
428: dup
429: iconst_2
430: dconst_1
431: dastore
432: dup
433: iconst_3
434: dconst_0
435: dastore
436: dup
437: iconst_4
438: ldc2_w        #16
441: dastore
442: dup
443: iconst_5
444: dconst_0
445: dastore
446: dup
447: bipush        6
449: dconst_0
450: dastore
451: getstatic     #37
454: dconst_0
455: invokespecial #14
458: invokevirtual #15
461: pop
462: aload_2
463: new           #12
466: dup
467: bipush        7
469: newarray       double
471: dup
472: iconst_0
473: dconst_0
474: dastore
475: dup
476: iconst_1
477: dconst_0
478: dastore
479: dup
480: iconst_2
481: dconst_1
482: dastore
483: dup
484: iconst_3
485: dconst_0
486: dastore
487: dup
488: iconst_4
489: dconst_1
490: dastore
491: dup
492: iconst_5
493: dconst_0
494: dastore
495: dup
496: bipush        6
498: dconst_0
499: dastore
500: getstatic     #37
503: dconst_0
504: invokespecial #14
507: invokevirtual #15
510: pop
511: ldc2_w        #68
514: dstore_3
515: new           #22
518: dup
519: invokespecial #23
522: astore        5
524: aload         5
526: aload_1
527: aload_2
528: getstatic     #34
531: iconst_0
532: invokevirtual #25
535: astore        6
537: aload         6
539: invokevirtual #26
542: iconst_0
543: daload
544: ldc2_w        #58
547: dload_3
548: invokestatic  #27
551: iflt          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #28
562: dconst_1
563: aload         6
565: invokevirtual #26
568: iconst_1
569: daload
570: dload_3
571: invokestatic  #32
574: dconst_0
575: aload         6
577: invokevirtual #26
580: iconst_2
581: daload
582: dload_3
583: invokestatic  #32
586: dconst_1
587: aload         6
589: invokevirtual #29
592: checkcast     #30
595: invokevirtual #31
598: dload_3
599: invokestatic  #32
602: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath272
Start line: 137
End line: 151
Method source code: 
    public void testMath272() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        Assert.assertEquals(0.0, solution.getPoint()[0], .0000001);
        Assert.assertEquals(1.0, solution.getPoint()[1], .0000001);
        Assert.assertEquals(1.0, solution.getPoint()[2], .0000001);
        Assert.assertEquals(3.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #3
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #3
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #9
27: astore_1
28: new           #10
31: dup
32: invokespecial #11
35: astore_2
36: aload_2
37: new           #12
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: dconst_1
47: dastore
48: dup
49: iconst_1
50: dconst_1
51: dastore
52: dup
53: iconst_2
54: dconst_0
55: dastore
56: getstatic     #37
59: dconst_1
60: invokespecial #14
63: invokeinterface #70,  2
68: pop
69: aload_2
70: new           #12
73: dup
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_0
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: getstatic     #37
92: dconst_1
93: invokespecial #14
96: invokeinterface #70,  2
101: pop
102: aload_2
103: new           #12
106: dup
107: iconst_3
108: newarray       double
110: dup
111: iconst_0
112: dconst_0
113: dastore
114: dup
115: iconst_1
116: dconst_1
117: dastore
118: dup
119: iconst_2
120: dconst_0
121: dastore
122: getstatic     #37
125: dconst_1
126: invokespecial #14
129: invokeinterface #70,  2
134: pop
135: new           #22
138: dup
139: invokespecial #23
142: astore_3
143: aload_3
144: aload_1
145: aload_2
146: getstatic     #34
149: iconst_1
150: invokevirtual #25
153: astore        4
155: dconst_0
156: aload         4
158: invokevirtual #26
161: iconst_0
162: daload
163: ldc2_w        #68
166: invokestatic  #32
169: dconst_1
170: aload         4
172: invokevirtual #26
175: iconst_1
176: daload
177: ldc2_w        #68
180: invokestatic  #32
183: dconst_1
184: aload         4
186: invokevirtual #26
189: iconst_2
190: daload
191: ldc2_w        #68
194: invokestatic  #32
197: ldc2_w        #71
200: aload         4
202: invokevirtual #29
205: checkcast     #30
208: invokevirtual #31
211: ldc2_w        #68
214: invokestatic  #32
217: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath286
Start line: 154
End line: 172
Method source code: 
    public void testMath286() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.6, 0.4 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0, 0, 0 }, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[] { 0, 0, 1, 0, 0, 0 }, Relationship.GEQ, 8.0));
        constraints.add(new LinearConstraint(new double[] { 0, 0, 0, 0, 1, 0 }, Relationship.GEQ, 5.0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

        Assert.assertEquals(25.8, solution.getValue(), .0000001);
        Assert.assertEquals(23.0, solution.getPoint()[0] + solution.getPoint()[2] + solution.getPoint()[4], 0.0000001);
        Assert.assertEquals(23.0, solution.getPoint()[1] + solution.getPoint()[3] + solution.getPoint()[5], 0.0000001);
        Assert.assertTrue(solution.getPoint()[0] >= 10.0 - 0.0000001);
        Assert.assertTrue(solution.getPoint()[2] >= 8.0 - 0.0000001);
        Assert.assertTrue(solution.getPoint()[4] >= 5.0 - 0.0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #73
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #75
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #77
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #79
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #81
37: dastore
38: dup
39: iconst_5
40: ldc2_w        #83
43: dastore
44: dconst_0
45: invokespecial #9
48: astore_1
49: new           #10
52: dup
53: invokespecial #11
56: astore_2
57: aload_2
58: new           #12
61: dup
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_1
69: dastore
70: dup
71: iconst_1
72: dconst_0
73: dastore
74: dup
75: iconst_2
76: dconst_1
77: dastore
78: dup
79: iconst_3
80: dconst_0
81: dastore
82: dup
83: iconst_4
84: dconst_1
85: dastore
86: dup
87: iconst_5
88: dconst_0
89: dastore
90: getstatic     #33
93: ldc2_w        #85
96: invokespecial #14
99: invokeinterface #70,  2
104: pop
105: aload_2
106: new           #12
109: dup
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_1
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: dconst_1
129: dastore
130: dup
131: iconst_4
132: dconst_0
133: dastore
134: dup
135: iconst_5
136: dconst_1
137: dastore
138: getstatic     #33
141: ldc2_w        #85
144: invokespecial #14
147: invokeinterface #70,  2
152: pop
153: aload_2
154: new           #12
157: dup
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: dconst_1
165: dastore
166: dup
167: iconst_1
168: dconst_0
169: dastore
170: dup
171: iconst_2
172: dconst_0
173: dastore
174: dup
175: iconst_3
176: dconst_0
177: dastore
178: dup
179: iconst_4
180: dconst_0
181: dastore
182: dup
183: iconst_5
184: dconst_0
185: dastore
186: getstatic     #37
189: ldc2_w        #46
192: invokespecial #14
195: invokeinterface #70,  2
200: pop
201: aload_2
202: new           #12
205: dup
206: bipush        6
208: newarray       double
210: dup
211: iconst_0
212: dconst_0
213: dastore
214: dup
215: iconst_1
216: dconst_0
217: dastore
218: dup
219: iconst_2
220: dconst_1
221: dastore
222: dup
223: iconst_3
224: dconst_0
225: dastore
226: dup
227: iconst_4
228: dconst_0
229: dastore
230: dup
231: iconst_5
232: dconst_0
233: dastore
234: getstatic     #37
237: ldc2_w        #87
240: invokespecial #14
243: invokeinterface #70,  2
248: pop
249: aload_2
250: new           #12
253: dup
254: bipush        6
256: newarray       double
258: dup
259: iconst_0
260: dconst_0
261: dastore
262: dup
263: iconst_1
264: dconst_0
265: dastore
266: dup
267: iconst_2
268: dconst_0
269: dastore
270: dup
271: iconst_3
272: dconst_0
273: dastore
274: dup
275: iconst_4
276: dconst_1
277: dastore
278: dup
279: iconst_5
280: dconst_0
281: dastore
282: getstatic     #37
285: ldc2_w        #35
288: invokespecial #14
291: invokeinterface #70,  2
296: pop
297: new           #22
300: dup
301: invokespecial #23
304: astore_3
305: aload_3
306: aload_1
307: aload_2
308: getstatic     #24
311: iconst_1
312: invokevirtual #25
315: astore        4
317: ldc2_w        #89
320: aload         4
322: invokevirtual #29
325: checkcast     #30
328: invokevirtual #31
331: ldc2_w        #68
334: invokestatic  #32
337: ldc2_w        #85
340: aload         4
342: invokevirtual #26
345: iconst_0
346: daload
347: aload         4
349: invokevirtual #26
352: iconst_2
353: daload
354: dadd
355: aload         4
357: invokevirtual #26
360: iconst_4
361: daload
362: dadd
363: ldc2_w        #68
366: invokestatic  #32
369: ldc2_w        #85
372: aload         4
374: invokevirtual #26
377: iconst_1
378: daload
379: aload         4
381: invokevirtual #26
384: iconst_3
385: daload
386: dadd
387: aload         4
389: invokevirtual #26
392: iconst_5
393: daload
394: dadd
395: ldc2_w        #68
398: invokestatic  #32
401: aload         4
403: invokevirtual #26
406: iconst_0
407: daload
408: ldc2_w        #91
411: dcmpl
412: iflt          419
415: iconst_1
416: goto          420
419: iconst_0
420: invokestatic  #28
423: aload         4
425: invokevirtual #26
428: iconst_2
429: daload
430: ldc2_w        #93
433: dcmpl
434: iflt          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #28
445: aload         4
447: invokevirtual #26
450: iconst_4
451: daload
452: ldc2_w        #95
455: dcmpl
456: iflt          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #28
467: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testDegeneracy
Start line: 175
End line: 185
Method source code: 
    public void testDegeneracy() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.7 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 18.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 8.0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(13.6, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #73
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #77
18: dastore
19: dconst_0
20: invokespecial #9
23: astore_1
24: new           #10
27: dup
28: invokespecial #11
31: astore_2
32: aload_2
33: new           #12
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: getstatic     #13
51: ldc2_w        #97
54: invokespecial #14
57: invokeinterface #70,  2
62: pop
63: aload_2
64: new           #12
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_1
74: dastore
75: dup
76: iconst_1
77: dconst_0
78: dastore
79: getstatic     #37
82: ldc2_w        #46
85: invokespecial #14
88: invokeinterface #70,  2
93: pop
94: aload_2
95: new           #12
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_0
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #37
113: ldc2_w        #87
116: invokespecial #14
119: invokeinterface #70,  2
124: pop
125: new           #22
128: dup
129: invokespecial #23
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #24
139: iconst_1
140: invokevirtual #25
143: astore        4
145: ldc2_w        #99
148: aload         4
150: invokevirtual #29
153: checkcast     #30
156: invokevirtual #31
159: ldc2_w        #68
162: invokestatic  #32
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath288
Start line: 188
End line: 200
Method source code: 
    public void testMath288() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 7, 3, 0, 0 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 3, 0, -5, 0 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 2, 0, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 0, 3, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0 }, Relationship.LEQ, 1.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 0 }, Relationship.LEQ, 1.0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(10.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_4
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #7
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #71
18: dastore
19: dup
20: iconst_2
21: dconst_0
22: dastore
23: dup
24: iconst_3
25: dconst_0
26: dastore
27: dconst_0
28: invokespecial #9
31: astore_1
32: new           #10
35: dup
36: invokespecial #11
39: astore_2
40: aload_2
41: new           #12
44: dup
45: iconst_4
46: newarray       double
48: dup
49: iconst_0
50: ldc2_w        #71
53: dastore
54: dup
55: iconst_1
56: dconst_0
57: dastore
58: dup
59: iconst_2
60: ldc2_w        #101
63: dastore
64: dup
65: iconst_3
66: dconst_0
67: dastore
68: getstatic     #13
71: dconst_0
72: invokespecial #14
75: invokeinterface #70,  2
80: pop
81: aload_2
82: new           #12
85: dup
86: iconst_4
87: newarray       double
89: dup
90: iconst_0
91: ldc2_w        #3
94: dastore
95: dup
96: iconst_1
97: dconst_0
98: dastore
99: dup
100: iconst_2
101: dconst_0
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #101
108: dastore
109: getstatic     #13
112: dconst_0
113: invokespecial #14
116: invokeinterface #70,  2
121: pop
122: aload_2
123: new           #12
126: dup
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #71
139: dastore
140: dup
141: iconst_2
142: dconst_0
143: dastore
144: dup
145: iconst_3
146: ldc2_w        #101
149: dastore
150: getstatic     #13
153: dconst_0
154: invokespecial #14
157: invokeinterface #70,  2
162: pop
163: aload_2
164: new           #12
167: dup
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: dconst_1
174: dastore
175: dup
176: iconst_1
177: dconst_0
178: dastore
179: dup
180: iconst_2
181: dconst_0
182: dastore
183: dup
184: iconst_3
185: dconst_0
186: dastore
187: getstatic     #13
190: dconst_1
191: invokespecial #14
194: invokeinterface #70,  2
199: pop
200: aload_2
201: new           #12
204: dup
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: dconst_1
215: dastore
216: dup
217: iconst_2
218: dconst_0
219: dastore
220: dup
221: iconst_3
222: dconst_0
223: dastore
224: getstatic     #13
227: dconst_1
228: invokespecial #14
231: invokeinterface #70,  2
236: pop
237: new           #22
240: dup
241: invokespecial #23
244: astore_3
245: aload_3
246: aload_1
247: aload_2
248: getstatic     #24
251: iconst_1
252: invokevirtual #25
255: astore        4
257: ldc2_w        #46
260: aload         4
262: invokevirtual #29
265: checkcast     #30
268: invokevirtual #31
271: ldc2_w        #68
274: invokestatic  #32
277: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath290GEQ
Start line: 203
End line: 212
Method source code: 
    public void testMath290GEQ() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 5 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 2, 0 }, Relationship.GEQ, -1.0));
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(0, solution.getValue(), .0000001);
        Assert.assertEquals(0, solution.getPoint()[0], .0000001);
        Assert.assertEquals(0, solution.getPoint()[1], .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: ldc2_w        #35
16: dastore
17: dconst_0
18: invokespecial #9
21: astore_1
22: new           #10
25: dup
26: invokespecial #11
29: astore_2
30: aload_2
31: new           #12
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #3
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #37
51: ldc2_w        #16
54: invokespecial #14
57: invokeinterface #70,  2
62: pop
63: new           #22
66: dup
67: invokespecial #23
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #34
77: iconst_1
78: invokevirtual #25
81: astore        4
83: dconst_0
84: aload         4
86: invokevirtual #29
89: checkcast     #30
92: invokevirtual #31
95: ldc2_w        #68
98: invokestatic  #32
101: dconst_0
102: aload         4
104: invokevirtual #26
107: iconst_0
108: daload
109: ldc2_w        #68
112: invokestatic  #32
115: dconst_0
116: aload         4
118: invokevirtual #26
121: iconst_1
122: daload
123: ldc2_w        #68
126: invokestatic  #32
129: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath290LEQ
Start line: 215
End line: 221
Method source code: 
    public void testMath290LEQ() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 5 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 2, 0 }, Relationship.LEQ, -1.0));
        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MINIMIZE, true);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: ldc2_w        #35
16: dastore
17: dconst_0
18: invokespecial #9
21: astore_1
22: new           #10
25: dup
26: invokespecial #11
29: astore_2
30: aload_2
31: new           #12
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #3
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #13
51: ldc2_w        #16
54: invokespecial #14
57: invokeinterface #70,  2
62: pop
63: new           #22
66: dup
67: invokespecial #23
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #34
77: iconst_1
78: invokevirtual #25
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath293
Start line: 224
End line: 258
Method source code: 
    public void testMath293() {
      LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.4, 0.6}, 0 );
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0.8, 0.2, 0.0, 0.0, 0.0, 0.0 }, Relationship.GEQ, 10.0));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.7, 0.3, 0.0, 0.0 }, Relationship.GEQ, 10.0));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.0, 0.0, 0.4, 0.6 }, Relationship.GEQ, 10.0));

      SimplexSolver solver = new SimplexSolver();
      PointValuePair solution1 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

      Assert.assertEquals(15.7143, solution1.getPoint()[0], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[1], .0001);
      Assert.assertEquals(14.2857, solution1.getPoint()[2], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[3], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[4], .0001);
      Assert.assertEquals(30.0, solution1.getPoint()[5], .0001);
      Assert.assertEquals(40.57143, solution1.getValue(), .0001);

      double valA = 0.8 * solution1.getPoint()[0] + 0.2 * solution1.getPoint()[1];
      double valB = 0.7 * solution1.getPoint()[2] + 0.3 * solution1.getPoint()[3];
      double valC = 0.4 * solution1.getPoint()[4] + 0.6 * solution1.getPoint()[5];

      f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.4, 0.6}, 0 );
      constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0.8, 0.2, 0.0, 0.0, 0.0, 0.0 }, Relationship.GEQ, valA));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.7, 0.3, 0.0, 0.0 }, Relationship.GEQ, valB));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.0, 0.0, 0.4, 0.6 }, Relationship.GEQ, valC));

      PointValuePair solution2 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
      Assert.assertEquals(40.57143, solution2.getValue(), .0001);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #73
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #75
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #77
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #79
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #83
37: dastore
38: dup
39: iconst_5
40: ldc2_w        #81
43: dastore
44: dconst_0
45: invokespecial #9
48: astore_1
49: new           #10
52: dup
53: invokespecial #11
56: astore_2
57: aload_2
58: new           #12
61: dup
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_1
69: dastore
70: dup
71: iconst_1
72: dconst_0
73: dastore
74: dup
75: iconst_2
76: dconst_1
77: dastore
78: dup
79: iconst_3
80: dconst_0
81: dastore
82: dup
83: iconst_4
84: dconst_1
85: dastore
86: dup
87: iconst_5
88: dconst_0
89: dastore
90: getstatic     #33
93: ldc2_w        #103
96: invokespecial #14
99: invokeinterface #70,  2
104: pop
105: aload_2
106: new           #12
109: dup
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_1
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: dconst_1
129: dastore
130: dup
131: iconst_4
132: dconst_0
133: dastore
134: dup
135: iconst_5
136: dconst_1
137: dastore
138: getstatic     #33
141: ldc2_w        #103
144: invokespecial #14
147: invokeinterface #70,  2
152: pop
153: aload_2
154: new           #12
157: dup
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #73
167: dastore
168: dup
169: iconst_1
170: ldc2_w        #75
173: dastore
174: dup
175: iconst_2
176: dconst_0
177: dastore
178: dup
179: iconst_3
180: dconst_0
181: dastore
182: dup
183: iconst_4
184: dconst_0
185: dastore
186: dup
187: iconst_5
188: dconst_0
189: dastore
190: getstatic     #37
193: ldc2_w        #46
196: invokespecial #14
199: invokeinterface #70,  2
204: pop
205: aload_2
206: new           #12
209: dup
210: bipush        6
212: newarray       double
214: dup
215: iconst_0
216: dconst_0
217: dastore
218: dup
219: iconst_1
220: dconst_0
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #77
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #79
233: dastore
234: dup
235: iconst_4
236: dconst_0
237: dastore
238: dup
239: iconst_5
240: dconst_0
241: dastore
242: getstatic     #37
245: ldc2_w        #46
248: invokespecial #14
251: invokeinterface #70,  2
256: pop
257: aload_2
258: new           #12
261: dup
262: bipush        6
264: newarray       double
266: dup
267: iconst_0
268: dconst_0
269: dastore
270: dup
271: iconst_1
272: dconst_0
273: dastore
274: dup
275: iconst_2
276: dconst_0
277: dastore
278: dup
279: iconst_3
280: dconst_0
281: dastore
282: dup
283: iconst_4
284: ldc2_w        #83
287: dastore
288: dup
289: iconst_5
290: ldc2_w        #81
293: dastore
294: getstatic     #37
297: ldc2_w        #46
300: invokespecial #14
303: invokeinterface #70,  2
308: pop
309: new           #22
312: dup
313: invokespecial #23
316: astore_3
317: aload_3
318: aload_1
319: aload_2
320: getstatic     #24
323: iconst_1
324: invokevirtual #25
327: astore        4
329: ldc2_w        #105
332: aload         4
334: invokevirtual #26
337: iconst_0
338: daload
339: ldc2_w        #107
342: invokestatic  #32
345: dconst_0
346: aload         4
348: invokevirtual #26
351: iconst_1
352: daload
353: ldc2_w        #107
356: invokestatic  #32
359: ldc2_w        #109
362: aload         4
364: invokevirtual #26
367: iconst_2
368: daload
369: ldc2_w        #107
372: invokestatic  #32
375: dconst_0
376: aload         4
378: invokevirtual #26
381: iconst_3
382: daload
383: ldc2_w        #107
386: invokestatic  #32
389: dconst_0
390: aload         4
392: invokevirtual #26
395: iconst_4
396: daload
397: ldc2_w        #107
400: invokestatic  #32
403: ldc2_w        #103
406: aload         4
408: invokevirtual #26
411: iconst_5
412: daload
413: ldc2_w        #107
416: invokestatic  #32
419: ldc2_w        #111
422: aload         4
424: invokevirtual #29
427: checkcast     #30
430: invokevirtual #31
433: ldc2_w        #107
436: invokestatic  #32
439: ldc2_w        #73
442: aload         4
444: invokevirtual #26
447: iconst_0
448: daload
449: dmul
450: ldc2_w        #75
453: aload         4
455: invokevirtual #26
458: iconst_1
459: daload
460: dmul
461: dadd
462: dstore        5
464: ldc2_w        #77
467: aload         4
469: invokevirtual #26
472: iconst_2
473: daload
474: dmul
475: ldc2_w        #79
478: aload         4
480: invokevirtual #26
483: iconst_3
484: daload
485: dmul
486: dadd
487: dstore        7
489: ldc2_w        #83
492: aload         4
494: invokevirtual #26
497: iconst_4
498: daload
499: dmul
500: ldc2_w        #81
503: aload         4
505: invokevirtual #26
508: iconst_5
509: daload
510: dmul
511: dadd
512: dstore        9
514: new           #2
517: dup
518: bipush        6
520: newarray       double
522: dup
523: iconst_0
524: ldc2_w        #73
527: dastore
528: dup
529: iconst_1
530: ldc2_w        #75
533: dastore
534: dup
535: iconst_2
536: ldc2_w        #77
539: dastore
540: dup
541: iconst_3
542: ldc2_w        #79
545: dastore
546: dup
547: iconst_4
548: ldc2_w        #83
551: dastore
552: dup
553: iconst_5
554: ldc2_w        #81
557: dastore
558: dconst_0
559: invokespecial #9
562: astore_1
563: new           #10
566: dup
567: invokespecial #11
570: astore_2
571: aload_2
572: new           #12
575: dup
576: bipush        6
578: newarray       double
580: dup
581: iconst_0
582: dconst_1
583: dastore
584: dup
585: iconst_1
586: dconst_0
587: dastore
588: dup
589: iconst_2
590: dconst_1
591: dastore
592: dup
593: iconst_3
594: dconst_0
595: dastore
596: dup
597: iconst_4
598: dconst_1
599: dastore
600: dup
601: iconst_5
602: dconst_0
603: dastore
604: getstatic     #33
607: ldc2_w        #103
610: invokespecial #14
613: invokeinterface #70,  2
618: pop
619: aload_2
620: new           #12
623: dup
624: bipush        6
626: newarray       double
628: dup
629: iconst_0
630: dconst_0
631: dastore
632: dup
633: iconst_1
634: dconst_1
635: dastore
636: dup
637: iconst_2
638: dconst_0
639: dastore
640: dup
641: iconst_3
642: dconst_1
643: dastore
644: dup
645: iconst_4
646: dconst_0
647: dastore
648: dup
649: iconst_5
650: dconst_1
651: dastore
652: getstatic     #33
655: ldc2_w        #103
658: invokespecial #14
661: invokeinterface #70,  2
666: pop
667: aload_2
668: new           #12
671: dup
672: bipush        6
674: newarray       double
676: dup
677: iconst_0
678: ldc2_w        #73
681: dastore
682: dup
683: iconst_1
684: ldc2_w        #75
687: dastore
688: dup
689: iconst_2
690: dconst_0
691: dastore
692: dup
693: iconst_3
694: dconst_0
695: dastore
696: dup
697: iconst_4
698: dconst_0
699: dastore
700: dup
701: iconst_5
702: dconst_0
703: dastore
704: getstatic     #37
707: dload         5
709: invokespecial #14
712: invokeinterface #70,  2
717: pop
718: aload_2
719: new           #12
722: dup
723: bipush        6
725: newarray       double
727: dup
728: iconst_0
729: dconst_0
730: dastore
731: dup
732: iconst_1
733: dconst_0
734: dastore
735: dup
736: iconst_2
737: ldc2_w        #77
740: dastore
741: dup
742: iconst_3
743: ldc2_w        #79
746: dastore
747: dup
748: iconst_4
749: dconst_0
750: dastore
751: dup
752: iconst_5
753: dconst_0
754: dastore
755: getstatic     #37
758: dload         7
760: invokespecial #14
763: invokeinterface #70,  2
768: pop
769: aload_2
770: new           #12
773: dup
774: bipush        6
776: newarray       double
778: dup
779: iconst_0
780: dconst_0
781: dastore
782: dup
783: iconst_1
784: dconst_0
785: dastore
786: dup
787: iconst_2
788: dconst_0
789: dastore
790: dup
791: iconst_3
792: dconst_0
793: dastore
794: dup
795: iconst_4
796: ldc2_w        #83
799: dastore
800: dup
801: iconst_5
802: ldc2_w        #81
805: dastore
806: getstatic     #37
809: dload         9
811: invokespecial #14
814: invokeinterface #70,  2
819: pop
820: aload_3
821: aload_1
822: aload_2
823: getstatic     #24
826: iconst_1
827: invokevirtual #25
830: astore        11
832: ldc2_w        #111
835: aload         11
837: invokevirtual #29
840: checkcast     #30
843: invokevirtual #31
846: ldc2_w        #107
849: invokestatic  #32
852: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSimplexSolver
Start line: 261
End line: 274
Method source code: 
    public void testSimplexSolver() {
        LinearObjectiveFunction f =
            new LinearObjectiveFunction(new double[] { 15, 10 }, 7);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ, 4));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(2.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(57.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #113
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #46
18: dastore
19: ldc2_w        #7
22: invokespecial #9
25: astore_1
26: new           #10
29: dup
30: invokespecial #11
33: astore_2
34: aload_2
35: new           #12
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dconst_1
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: getstatic     #13
53: ldc2_w        #3
56: invokespecial #14
59: invokeinterface #70,  2
64: pop
65: aload_2
66: new           #12
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_1
80: dastore
81: getstatic     #13
84: ldc2_w        #71
87: invokespecial #14
90: invokeinterface #70,  2
95: pop
96: aload_2
97: new           #12
100: dup
101: iconst_2
102: newarray       double
104: dup
105: iconst_0
106: dconst_1
107: dastore
108: dup
109: iconst_1
110: dconst_1
111: dastore
112: getstatic     #33
115: ldc2_w        #115
118: invokespecial #14
121: invokeinterface #70,  2
126: pop
127: new           #22
130: dup
131: invokespecial #23
134: astore_3
135: aload_3
136: aload_1
137: aload_2
138: getstatic     #24
141: iconst_0
142: invokevirtual #25
145: astore        4
147: ldc2_w        #3
150: aload         4
152: invokevirtual #26
155: iconst_0
156: daload
157: dconst_0
158: invokestatic  #32
161: ldc2_w        #3
164: aload         4
166: invokevirtual #26
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #32
175: ldc2_w        #117
178: aload         4
180: invokevirtual #29
183: checkcast     #30
186: invokevirtual #31
189: dconst_0
190: invokestatic  #32
193: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSingleVariableAndConstraint
Start line: 277
End line: 286
Method source code: 
    public void testSingleVariableAndConstraint() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(10.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(30.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #71
12: dastore
13: dconst_0
14: invokespecial #9
17: astore_1
18: new           #10
21: dup
22: invokespecial #11
25: astore_2
26: aload_2
27: new           #12
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #13
41: ldc2_w        #46
44: invokespecial #14
47: invokeinterface #70,  2
52: pop
53: new           #22
56: dup
57: invokespecial #23
60: astore_3
61: aload_3
62: aload_1
63: aload_2
64: getstatic     #24
67: iconst_0
68: invokevirtual #25
71: astore        4
73: ldc2_w        #46
76: aload         4
78: invokevirtual #26
81: iconst_0
82: daload
83: dconst_0
84: invokestatic  #32
87: ldc2_w        #103
90: aload         4
92: invokevirtual #29
95: checkcast     #30
98: invokevirtual #31
101: dconst_0
102: invokestatic  #32
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testModelWithNoArtificialVars
Start line: 293
End line: 305
Method source code: 
    public void testModelWithNoArtificialVars() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 4));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(2.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(50.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #113
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #46
18: dastore
19: dconst_0
20: invokespecial #9
23: astore_1
24: new           #10
27: dup
28: invokespecial #11
31: astore_2
32: aload_2
33: new           #12
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #13
51: ldc2_w        #3
54: invokespecial #14
57: invokeinterface #70,  2
62: pop
63: aload_2
64: new           #12
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_1
78: dastore
79: getstatic     #13
82: ldc2_w        #71
85: invokespecial #14
88: invokeinterface #70,  2
93: pop
94: aload_2
95: new           #12
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #13
113: ldc2_w        #115
116: invokespecial #14
119: invokeinterface #70,  2
124: pop
125: new           #22
128: dup
129: invokespecial #23
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #24
139: iconst_0
140: invokevirtual #25
143: astore        4
145: ldc2_w        #3
148: aload         4
150: invokevirtual #26
153: iconst_0
154: daload
155: dconst_0
156: invokestatic  #32
159: ldc2_w        #3
162: aload         4
164: invokevirtual #26
167: iconst_1
168: daload
169: dconst_0
170: invokestatic  #32
173: ldc2_w        #119
176: aload         4
178: invokevirtual #29
181: checkcast     #30
184: invokevirtual #31
187: dconst_0
188: invokestatic  #32
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMinimization
Start line: 308
End line: 320
Method source code: 
    public void testMinimization() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, -5);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 3, 2 }, Relationship.LEQ, 12));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        Assert.assertEquals(4.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(0.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(-13.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #121
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: ldc2_w        #101
20: invokespecial #9
23: astore_1
24: new           #10
27: dup
28: invokespecial #11
31: astore_2
32: aload_2
33: new           #12
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: ldc2_w        #3
49: dastore
50: getstatic     #13
53: ldc2_w        #5
56: invokespecial #14
59: invokeinterface #70,  2
64: pop
65: aload_2
66: new           #12
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #71
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #3
84: dastore
85: getstatic     #13
88: ldc2_w        #123
91: invokespecial #14
94: invokeinterface #70,  2
99: pop
100: aload_2
101: new           #12
104: dup
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: dconst_0
111: dastore
112: dup
113: iconst_1
114: dconst_1
115: dastore
116: getstatic     #37
119: dconst_0
120: invokespecial #14
123: invokeinterface #70,  2
128: pop
129: new           #22
132: dup
133: invokespecial #23
136: astore_3
137: aload_3
138: aload_1
139: aload_2
140: getstatic     #34
143: iconst_0
144: invokevirtual #25
147: astore        4
149: ldc2_w        #115
152: aload         4
154: invokevirtual #26
157: iconst_0
158: daload
159: dconst_0
160: invokestatic  #32
163: dconst_0
164: aload         4
166: invokevirtual #26
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #32
175: ldc2_w        #125
178: aload         4
180: invokevirtual #29
183: checkcast     #30
186: invokevirtual #31
189: dconst_0
190: invokestatic  #32
193: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSolutionWithNegativeDecisionVariable
Start line: 323
End line: 334
Method source code: 
    public void testSolutionWithNegativeDecisionVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.GEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 14));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(-2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(8.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(12.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #121
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: dconst_0
18: invokespecial #9
21: astore_1
22: new           #10
25: dup
26: invokespecial #11
29: astore_2
30: aload_2
31: new           #12
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: dconst_1
41: dastore
42: dup
43: iconst_1
44: dconst_1
45: dastore
46: getstatic     #37
49: ldc2_w        #5
52: invokespecial #14
55: invokeinterface #70,  2
60: pop
61: aload_2
62: new           #12
65: dup
66: iconst_2
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: ldc2_w        #3
78: dastore
79: getstatic     #13
82: ldc2_w        #127
85: invokespecial #14
88: invokeinterface #70,  2
93: pop
94: new           #22
97: dup
98: invokespecial #23
101: astore_3
102: aload_3
103: aload_1
104: aload_2
105: getstatic     #24
108: iconst_0
109: invokevirtual #25
112: astore        4
114: ldc2_w        #121
117: aload         4
119: invokevirtual #26
122: iconst_0
123: daload
124: dconst_0
125: invokestatic  #32
128: ldc2_w        #87
131: aload         4
133: invokevirtual #26
136: iconst_1
137: daload
138: dconst_0
139: invokestatic  #32
142: ldc2_w        #123
145: aload         4
147: invokevirtual #29
150: checkcast     #30
153: invokevirtual #31
156: dconst_0
157: invokestatic  #32
160: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testInfeasibleSolution
Start line: 337
End line: 345
Method source code: 
    public void testInfeasibleSolution() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 1));
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.GEQ, 3));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #113
12: dastore
13: dconst_0
14: invokespecial #9
17: astore_1
18: new           #10
21: dup
22: invokespecial #11
25: astore_2
26: aload_2
27: new           #12
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #13
41: dconst_1
42: invokespecial #14
45: invokeinterface #70,  2
50: pop
51: aload_2
52: new           #12
55: dup
56: iconst_1
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: getstatic     #37
66: ldc2_w        #71
69: invokespecial #14
72: invokeinterface #70,  2
77: pop
78: new           #22
81: dup
82: invokespecial #23
85: astore_3
86: aload_3
87: aload_1
88: aload_2
89: getstatic     #24
92: iconst_0
93: invokevirtual #25
96: pop
97: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testUnboundedSolution
Start line: 348
End line: 355
Method source code: 
    public void testUnboundedSolution() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.EQ, 2));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #113
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #46
18: dastore
19: dconst_0
20: invokespecial #9
23: astore_1
24: new           #10
27: dup
28: invokespecial #11
31: astore_2
32: aload_2
33: new           #12
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #33
51: ldc2_w        #3
54: invokespecial #14
57: invokeinterface #70,  2
62: pop
63: new           #22
66: dup
67: invokespecial #23
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #24
77: iconst_0
78: invokevirtual #25
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testRestrictVariablesToNonNegative
Start line: 358
End line: 375
Method source code: 
    public void testRestrictVariablesToNonNegative() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 409, 523, 70, 204, 339 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {    43,   56, 345,  56,    5 }, Relationship.LEQ,  4567456));
        constraints.add(new LinearConstraint(new double[] {    12,   45,   7,  56,   23 }, Relationship.LEQ,    56454));
        constraints.add(new LinearConstraint(new double[] {     8,  768,   0,  34, 7456 }, Relationship.LEQ,  1923421));
        constraints.add(new LinearConstraint(new double[] { 12342, 2342,  34, 678, 2342 }, Relationship.GEQ,     4356));
        constraints.add(new LinearConstraint(new double[] {    45,  678,  76,  52,   23 }, Relationship.EQ,    456356));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(2902.92783505155, solution.getPoint()[0], .0000001);
        Assert.assertEquals(480.419243986254, solution.getPoint()[1], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[2], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[3], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[4], .0000001);
        Assert.assertEquals(1438556.7491409, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_5
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #129
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #131
18: dastore
19: dup
20: iconst_2
21: ldc2_w        #133
24: dastore
25: dup
26: iconst_3
27: ldc2_w        #135
30: dastore
31: dup
32: iconst_4
33: ldc2_w        #137
36: dastore
37: dconst_0
38: invokespecial #9
41: astore_1
42: new           #10
45: dup
46: invokespecial #11
49: astore_2
50: aload_2
51: new           #12
54: dup
55: iconst_5
56: newarray       double
58: dup
59: iconst_0
60: ldc2_w        #139
63: dastore
64: dup
65: iconst_1
66: ldc2_w        #141
69: dastore
70: dup
71: iconst_2
72: ldc2_w        #143
75: dastore
76: dup
77: iconst_3
78: ldc2_w        #141
81: dastore
82: dup
83: iconst_4
84: ldc2_w        #35
87: dastore
88: getstatic     #13
91: ldc2_w        #145
94: invokespecial #14
97: invokeinterface #70,  2
102: pop
103: aload_2
104: new           #12
107: dup
108: iconst_5
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #123
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #147
122: dastore
123: dup
124: iconst_2
125: ldc2_w        #7
128: dastore
129: dup
130: iconst_3
131: ldc2_w        #141
134: dastore
135: dup
136: iconst_4
137: ldc2_w        #85
140: dastore
141: getstatic     #13
144: ldc2_w        #149
147: invokespecial #14
150: invokeinterface #70,  2
155: pop
156: aload_2
157: new           #12
160: dup
161: iconst_5
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #87
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #151
175: dastore
176: dup
177: iconst_2
178: dconst_0
179: dastore
180: dup
181: iconst_3
182: ldc2_w        #153
185: dastore
186: dup
187: iconst_4
188: ldc2_w        #155
191: dastore
192: getstatic     #13
195: ldc2_w        #157
198: invokespecial #14
201: invokeinterface #70,  2
206: pop
207: aload_2
208: new           #12
211: dup
212: iconst_5
213: newarray       double
215: dup
216: iconst_0
217: ldc2_w        #159
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #161
226: dastore
227: dup
228: iconst_2
229: ldc2_w        #153
232: dastore
233: dup
234: iconst_3
235: ldc2_w        #163
238: dastore
239: dup
240: iconst_4
241: ldc2_w        #161
244: dastore
245: getstatic     #37
248: ldc2_w        #165
251: invokespecial #14
254: invokeinterface #70,  2
259: pop
260: aload_2
261: new           #12
264: dup
265: iconst_5
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #147
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #163
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #167
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #169
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #85
297: dastore
298: getstatic     #33
301: ldc2_w        #171
304: invokespecial #14
307: invokeinterface #70,  2
312: pop
313: new           #22
316: dup
317: invokespecial #23
320: astore_3
321: aload_3
322: aload_1
323: aload_2
324: getstatic     #24
327: iconst_1
328: invokevirtual #25
331: astore        4
333: ldc2_w        #173
336: aload         4
338: invokevirtual #26
341: iconst_0
342: daload
343: ldc2_w        #68
346: invokestatic  #32
349: ldc2_w        #175
352: aload         4
354: invokevirtual #26
357: iconst_1
358: daload
359: ldc2_w        #68
362: invokestatic  #32
365: dconst_0
366: aload         4
368: invokevirtual #26
371: iconst_2
372: daload
373: ldc2_w        #68
376: invokestatic  #32
379: dconst_0
380: aload         4
382: invokevirtual #26
385: iconst_3
386: daload
387: ldc2_w        #68
390: invokestatic  #32
393: dconst_0
394: aload         4
396: invokevirtual #26
399: iconst_4
400: daload
401: ldc2_w        #68
404: invokestatic  #32
407: ldc2_w        #177
410: aload         4
412: invokevirtual #29
415: checkcast     #30
418: invokevirtual #31
421: ldc2_w        #68
424: invokestatic  #32
427: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testEpsilon
Start line: 378
End line: 392
Method source code: 
    public void testEpsilon() {
      LinearObjectiveFunction f =
          new LinearObjectiveFunction(new double[] { 10, 5, 1 }, 0);
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] {  9, 8, 0 }, Relationship.EQ,  17));
      constraints.add(new LinearConstraint(new double[] {  0, 7, 8 }, Relationship.LEQ,  7));
      constraints.add(new LinearConstraint(new double[] { 10, 0, 2 }, Relationship.LEQ, 10));

      SimplexSolver solver = new SimplexSolver();
      PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
      Assert.assertEquals(1.0, solution.getPoint()[0], 0.0);
      Assert.assertEquals(1.0, solution.getPoint()[1], 0.0);
      Assert.assertEquals(0.0, solution.getPoint()[2], 0.0);
      Assert.assertEquals(15.0, solution.getValue(), 0.0);
  }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #46
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #35
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #9
27: astore_1
28: new           #10
31: dup
32: invokespecial #11
35: astore_2
36: aload_2
37: new           #12
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: ldc2_w        #179
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #87
55: dastore
56: dup
57: iconst_2
58: dconst_0
59: dastore
60: getstatic     #33
63: ldc2_w        #181
66: invokespecial #14
69: invokeinterface #70,  2
74: pop
75: aload_2
76: new           #12
79: dup
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_0
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #7
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #87
98: dastore
99: getstatic     #13
102: ldc2_w        #7
105: invokespecial #14
108: invokeinterface #70,  2
113: pop
114: aload_2
115: new           #12
118: dup
119: iconst_3
120: newarray       double
122: dup
123: iconst_0
124: ldc2_w        #46
127: dastore
128: dup
129: iconst_1
130: dconst_0
131: dastore
132: dup
133: iconst_2
134: ldc2_w        #3
137: dastore
138: getstatic     #13
141: ldc2_w        #46
144: invokespecial #14
147: invokeinterface #70,  2
152: pop
153: new           #22
156: dup
157: invokespecial #23
160: astore_3
161: aload_3
162: aload_1
163: aload_2
164: getstatic     #24
167: iconst_0
168: invokevirtual #25
171: astore        4
173: dconst_1
174: aload         4
176: invokevirtual #26
179: iconst_0
180: daload
181: dconst_0
182: invokestatic  #32
185: dconst_1
186: aload         4
188: invokevirtual #26
191: iconst_1
192: daload
193: dconst_0
194: invokestatic  #32
197: dconst_0
198: aload         4
200: invokevirtual #26
203: iconst_2
204: daload
205: dconst_0
206: invokestatic  #32
209: ldc2_w        #113
212: aload         4
214: invokevirtual #29
217: checkcast     #30
220: invokevirtual #31
223: dconst_0
224: invokestatic  #32
227: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testTrivialModel
Start line: 395
End line: 403
Method source code: 
    public void testTrivialModel() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ,  0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #9
19: astore_1
20: new           #10
23: dup
24: invokespecial #11
27: astore_2
28: aload_2
29: new           #12
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_1
43: dastore
44: getstatic     #33
47: dconst_0
48: invokespecial #14
51: invokeinterface #70,  2
56: pop
57: new           #22
60: dup
61: invokespecial #23
64: astore_3
65: aload_3
66: aload_1
67: aload_2
68: getstatic     #24
71: iconst_1
72: invokevirtual #25
75: astore        4
77: dconst_0
78: aload         4
80: invokevirtual #29
83: checkcast     #30
86: invokevirtual #31
89: ldc2_w        #68
92: invokestatic  #32
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testLargeModel
Start line: 406
End line: 530
Method source code: 
    public void testLargeModel() {
        double[] objective = new double[] {
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           12, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 12, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 12, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 12, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1};

        LinearObjectiveFunction f = new LinearObjectiveFunction(objective, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 >= 49"));
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 >= 42"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 >= 49"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 >= 42"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 >= 51"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 >= 44"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x82 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x83 = 0"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 >= 51"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 >= 44"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x110 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x111 = 0"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 >= 49"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 >= 42"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 >= 59"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 >= 42"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x83 + x82 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x111 + x110 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x175 + x176 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x192 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x205 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x206 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x207 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x208 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x209 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x210 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x211 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x212 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x213 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x214 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x215 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x192 = 0"));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(7518.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: sipush        216
3: newarray       double
5: dup
6: iconst_0
7: dconst_1
8: dastore
9: dup
10: iconst_1
11: dconst_1
12: dastore
13: dup
14: iconst_2
15: dconst_1
16: dastore
17: dup
18: iconst_3
19: dconst_1
20: dastore
21: dup
22: iconst_4
23: dconst_1
24: dastore
25: dup
26: iconst_5
27: dconst_1
28: dastore
29: dup
30: bipush        6
32: dconst_1
33: dastore
34: dup
35: bipush        7
37: dconst_1
38: dastore
39: dup
40: bipush        8
42: dconst_1
43: dastore
44: dup
45: bipush        9
47: dconst_1
48: dastore
49: dup
50: bipush        10
52: dconst_1
53: dastore
54: dup
55: bipush        11
57: dconst_1
58: dastore
59: dup
60: bipush        12
62: ldc2_w        #123
65: dastore
66: dup
67: bipush        13
69: dconst_1
70: dastore
71: dup
72: bipush        14
74: dconst_1
75: dastore
76: dup
77: bipush        15
79: dconst_1
80: dastore
81: dup
82: bipush        16
84: dconst_1
85: dastore
86: dup
87: bipush        17
89: dconst_1
90: dastore
91: dup
92: bipush        18
94: dconst_1
95: dastore
96: dup
97: bipush        19
99: dconst_1
100: dastore
101: dup
102: bipush        20
104: dconst_1
105: dastore
106: dup
107: bipush        21
109: dconst_1
110: dastore
111: dup
112: bipush        22
114: dconst_1
115: dastore
116: dup
117: bipush        23
119: dconst_1
120: dastore
121: dup
122: bipush        24
124: dconst_1
125: dastore
126: dup
127: bipush        25
129: dconst_1
130: dastore
131: dup
132: bipush        26
134: dconst_1
135: dastore
136: dup
137: bipush        27
139: dconst_1
140: dastore
141: dup
142: bipush        28
144: dconst_1
145: dastore
146: dup
147: bipush        29
149: dconst_1
150: dastore
151: dup
152: bipush        30
154: dconst_1
155: dastore
156: dup
157: bipush        31
159: dconst_1
160: dastore
161: dup
162: bipush        32
164: dconst_1
165: dastore
166: dup
167: bipush        33
169: dconst_1
170: dastore
171: dup
172: bipush        34
174: dconst_1
175: dastore
176: dup
177: bipush        35
179: dconst_1
180: dastore
181: dup
182: bipush        36
184: dconst_1
185: dastore
186: dup
187: bipush        37
189: dconst_1
190: dastore
191: dup
192: bipush        38
194: dconst_1
195: dastore
196: dup
197: bipush        39
199: dconst_1
200: dastore
201: dup
202: bipush        40
204: ldc2_w        #123
207: dastore
208: dup
209: bipush        41
211: dconst_1
212: dastore
213: dup
214: bipush        42
216: dconst_1
217: dastore
218: dup
219: bipush        43
221: dconst_1
222: dastore
223: dup
224: bipush        44
226: dconst_1
227: dastore
228: dup
229: bipush        45
231: dconst_1
232: dastore
233: dup
234: bipush        46
236: dconst_1
237: dastore
238: dup
239: bipush        47
241: dconst_1
242: dastore
243: dup
244: bipush        48
246: dconst_1
247: dastore
248: dup
249: bipush        49
251: dconst_1
252: dastore
253: dup
254: bipush        50
256: dconst_1
257: dastore
258: dup
259: bipush        51
261: dconst_1
262: dastore
263: dup
264: bipush        52
266: dconst_1
267: dastore
268: dup
269: bipush        53
271: dconst_1
272: dastore
273: dup
274: bipush        54
276: dconst_1
277: dastore
278: dup
279: bipush        55
281: dconst_1
282: dastore
283: dup
284: bipush        56
286: dconst_1
287: dastore
288: dup
289: bipush        57
291: dconst_1
292: dastore
293: dup
294: bipush        58
296: dconst_1
297: dastore
298: dup
299: bipush        59
301: dconst_1
302: dastore
303: dup
304: bipush        60
306: dconst_1
307: dastore
308: dup
309: bipush        61
311: dconst_1
312: dastore
313: dup
314: bipush        62
316: dconst_1
317: dastore
318: dup
319: bipush        63
321: dconst_1
322: dastore
323: dup
324: bipush        64
326: dconst_1
327: dastore
328: dup
329: bipush        65
331: dconst_1
332: dastore
333: dup
334: bipush        66
336: dconst_1
337: dastore
338: dup
339: bipush        67
341: dconst_1
342: dastore
343: dup
344: bipush        68
346: ldc2_w        #123
349: dastore
350: dup
351: bipush        69
353: dconst_1
354: dastore
355: dup
356: bipush        70
358: dconst_1
359: dastore
360: dup
361: bipush        71
363: dconst_1
364: dastore
365: dup
366: bipush        72
368: dconst_1
369: dastore
370: dup
371: bipush        73
373: dconst_1
374: dastore
375: dup
376: bipush        74
378: dconst_1
379: dastore
380: dup
381: bipush        75
383: dconst_1
384: dastore
385: dup
386: bipush        76
388: dconst_1
389: dastore
390: dup
391: bipush        77
393: dconst_1
394: dastore
395: dup
396: bipush        78
398: dconst_1
399: dastore
400: dup
401: bipush        79
403: dconst_1
404: dastore
405: dup
406: bipush        80
408: dconst_1
409: dastore
410: dup
411: bipush        81
413: dconst_1
414: dastore
415: dup
416: bipush        82
418: dconst_1
419: dastore
420: dup
421: bipush        83
423: dconst_1
424: dastore
425: dup
426: bipush        84
428: dconst_1
429: dastore
430: dup
431: bipush        85
433: dconst_1
434: dastore
435: dup
436: bipush        86
438: dconst_1
439: dastore
440: dup
441: bipush        87
443: dconst_1
444: dastore
445: dup
446: bipush        88
448: dconst_1
449: dastore
450: dup
451: bipush        89
453: dconst_1
454: dastore
455: dup
456: bipush        90
458: dconst_1
459: dastore
460: dup
461: bipush        91
463: dconst_1
464: dastore
465: dup
466: bipush        92
468: dconst_1
469: dastore
470: dup
471: bipush        93
473: dconst_1
474: dastore
475: dup
476: bipush        94
478: dconst_1
479: dastore
480: dup
481: bipush        95
483: dconst_1
484: dastore
485: dup
486: bipush        96
488: ldc2_w        #123
491: dastore
492: dup
493: bipush        97
495: dconst_1
496: dastore
497: dup
498: bipush        98
500: dconst_1
501: dastore
502: dup
503: bipush        99
505: dconst_1
506: dastore
507: dup
508: bipush        100
510: dconst_1
511: dastore
512: dup
513: bipush        101
515: dconst_1
516: dastore
517: dup
518: bipush        102
520: dconst_1
521: dastore
522: dup
523: bipush        103
525: dconst_1
526: dastore
527: dup
528: bipush        104
530: dconst_1
531: dastore
532: dup
533: bipush        105
535: dconst_1
536: dastore
537: dup
538: bipush        106
540: dconst_1
541: dastore
542: dup
543: bipush        107
545: dconst_1
546: dastore
547: dup
548: bipush        108
550: dconst_1
551: dastore
552: dup
553: bipush        109
555: dconst_1
556: dastore
557: dup
558: bipush        110
560: dconst_1
561: dastore
562: dup
563: bipush        111
565: dconst_1
566: dastore
567: dup
568: bipush        112
570: dconst_1
571: dastore
572: dup
573: bipush        113
575: dconst_1
576: dastore
577: dup
578: bipush        114
580: dconst_1
581: dastore
582: dup
583: bipush        115
585: dconst_1
586: dastore
587: dup
588: bipush        116
590: dconst_1
591: dastore
592: dup
593: bipush        117
595: dconst_1
596: dastore
597: dup
598: bipush        118
600: dconst_1
601: dastore
602: dup
603: bipush        119
605: dconst_1
606: dastore
607: dup
608: bipush        120
610: dconst_1
611: dastore
612: dup
613: bipush        121
615: dconst_1
616: dastore
617: dup
618: bipush        122
620: dconst_1
621: dastore
622: dup
623: bipush        123
625: dconst_1
626: dastore
627: dup
628: bipush        124
630: ldc2_w        #123
633: dastore
634: dup
635: bipush        125
637: dconst_1
638: dastore
639: dup
640: bipush        126
642: dconst_1
643: dastore
644: dup
645: bipush        127
647: dconst_1
648: dastore
649: dup
650: sipush        128
653: dconst_1
654: dastore
655: dup
656: sipush        129
659: dconst_1
660: dastore
661: dup
662: sipush        130
665: dconst_1
666: dastore
667: dup
668: sipush        131
671: dconst_1
672: dastore
673: dup
674: sipush        132
677: dconst_1
678: dastore
679: dup
680: sipush        133
683: dconst_1
684: dastore
685: dup
686: sipush        134
689: dconst_1
690: dastore
691: dup
692: sipush        135
695: dconst_1
696: dastore
697: dup
698: sipush        136
701: dconst_1
702: dastore
703: dup
704: sipush        137
707: dconst_1
708: dastore
709: dup
710: sipush        138
713: dconst_1
714: dastore
715: dup
716: sipush        139
719: dconst_1
720: dastore
721: dup
722: sipush        140
725: dconst_1
726: dastore
727: dup
728: sipush        141
731: dconst_1
732: dastore
733: dup
734: sipush        142
737: dconst_1
738: dastore
739: dup
740: sipush        143
743: dconst_1
744: dastore
745: dup
746: sipush        144
749: dconst_1
750: dastore
751: dup
752: sipush        145
755: dconst_1
756: dastore
757: dup
758: sipush        146
761: dconst_1
762: dastore
763: dup
764: sipush        147
767: dconst_1
768: dastore
769: dup
770: sipush        148
773: dconst_1
774: dastore
775: dup
776: sipush        149
779: dconst_1
780: dastore
781: dup
782: sipush        150
785: dconst_1
786: dastore
787: dup
788: sipush        151
791: dconst_1
792: dastore
793: dup
794: sipush        152
797: ldc2_w        #123
800: dastore
801: dup
802: sipush        153
805: dconst_1
806: dastore
807: dup
808: sipush        154
811: dconst_1
812: dastore
813: dup
814: sipush        155
817: dconst_1
818: dastore
819: dup
820: sipush        156
823: dconst_1
824: dastore
825: dup
826: sipush        157
829: dconst_1
830: dastore
831: dup
832: sipush        158
835: dconst_1
836: dastore
837: dup
838: sipush        159
841: dconst_1
842: dastore
843: dup
844: sipush        160
847: dconst_1
848: dastore
849: dup
850: sipush        161
853: dconst_1
854: dastore
855: dup
856: sipush        162
859: dconst_1
860: dastore
861: dup
862: sipush        163
865: dconst_1
866: dastore
867: dup
868: sipush        164
871: dconst_1
872: dastore
873: dup
874: sipush        165
877: dconst_1
878: dastore
879: dup
880: sipush        166
883: dconst_1
884: dastore
885: dup
886: sipush        167
889: dconst_1
890: dastore
891: dup
892: sipush        168
895: dconst_1
896: dastore
897: dup
898: sipush        169
901: dconst_1
902: dastore
903: dup
904: sipush        170
907: dconst_1
908: dastore
909: dup
910: sipush        171
913: dconst_1
914: dastore
915: dup
916: sipush        172
919: dconst_1
920: dastore
921: dup
922: sipush        173
925: dconst_1
926: dastore
927: dup
928: sipush        174
931: dconst_1
932: dastore
933: dup
934: sipush        175
937: dconst_1
938: dastore
939: dup
940: sipush        176
943: dconst_1
944: dastore
945: dup
946: sipush        177
949: dconst_1
950: dastore
951: dup
952: sipush        178
955: dconst_1
956: dastore
957: dup
958: sipush        179
961: dconst_1
962: dastore
963: dup
964: sipush        180
967: dconst_1
968: dastore
969: dup
970: sipush        181
973: dconst_1
974: dastore
975: dup
976: sipush        182
979: dconst_1
980: dastore
981: dup
982: sipush        183
985: dconst_1
986: dastore
987: dup
988: sipush        184
991: dconst_1
992: dastore
993: dup
994: sipush        185
997: dconst_1
998: dastore
999: dup
1000: sipush        186
1003: dconst_1
1004: dastore
1005: dup
1006: sipush        187
1009: dconst_1
1010: dastore
1011: dup
1012: sipush        188
1015: dconst_1
1016: dastore
1017: dup
1018: sipush        189
1021: dconst_1
1022: dastore
1023: dup
1024: sipush        190
1027: dconst_1
1028: dastore
1029: dup
1030: sipush        191
1033: dconst_1
1034: dastore
1035: dup
1036: sipush        192
1039: dconst_1
1040: dastore
1041: dup
1042: sipush        193
1045: dconst_1
1046: dastore
1047: dup
1048: sipush        194
1051: dconst_1
1052: dastore
1053: dup
1054: sipush        195
1057: dconst_1
1058: dastore
1059: dup
1060: sipush        196
1063: dconst_1
1064: dastore
1065: dup
1066: sipush        197
1069: dconst_1
1070: dastore
1071: dup
1072: sipush        198
1075: dconst_1
1076: dastore
1077: dup
1078: sipush        199
1081: dconst_1
1082: dastore
1083: dup
1084: sipush        200
1087: dconst_1
1088: dastore
1089: dup
1090: sipush        201
1093: dconst_1
1094: dastore
1095: dup
1096: sipush        202
1099: dconst_1
1100: dastore
1101: dup
1102: sipush        203
1105: dconst_1
1106: dastore
1107: dup
1108: sipush        204
1111: dconst_1
1112: dastore
1113: dup
1114: sipush        205
1117: dconst_1
1118: dastore
1119: dup
1120: sipush        206
1123: dconst_1
1124: dastore
1125: dup
1126: sipush        207
1129: dconst_1
1130: dastore
1131: dup
1132: sipush        208
1135: dconst_1
1136: dastore
1137: dup
1138: sipush        209
1141: dconst_1
1142: dastore
1143: dup
1144: sipush        210
1147: dconst_1
1148: dastore
1149: dup
1150: sipush        211
1153: dconst_1
1154: dastore
1155: dup
1156: sipush        212
1159: dconst_1
1160: dastore
1161: dup
1162: sipush        213
1165: dconst_1
1166: dastore
1167: dup
1168: sipush        214
1171: dconst_1
1172: dastore
1173: dup
1174: sipush        215
1177: dconst_1
1178: dastore
1179: astore_1
1180: new           #2
1183: dup
1184: aload_1
1185: dconst_0
1186: invokespecial #9
1189: astore_2
1190: new           #10
1193: dup
1194: invokespecial #11
1197: astore_3
1198: aload_3
1199: aload_0
1200: aload_1
1201: arraylength
1202: ldc           #183
1204: invokespecial #184
1207: invokeinterface #70,  2
1212: pop
1213: aload_3
1214: aload_0
1215: aload_1
1216: arraylength
1217: ldc           #185
1219: invokespecial #184
1222: invokeinterface #70,  2
1227: pop
1228: aload_3
1229: aload_0
1230: aload_1
1231: arraylength
1232: ldc           #186
1234: invokespecial #184
1237: invokeinterface #70,  2
1242: pop
1243: aload_3
1244: aload_0
1245: aload_1
1246: arraylength
1247: ldc           #187
1249: invokespecial #184
1252: invokeinterface #70,  2
1257: pop
1258: aload_3
1259: aload_0
1260: aload_1
1261: arraylength
1262: ldc           #188
1264: invokespecial #184
1267: invokeinterface #70,  2
1272: pop
1273: aload_3
1274: aload_0
1275: aload_1
1276: arraylength
1277: ldc           #189
1279: invokespecial #184
1282: invokeinterface #70,  2
1287: pop
1288: aload_3
1289: aload_0
1290: aload_1
1291: arraylength
1292: ldc           #190
1294: invokespecial #184
1297: invokeinterface #70,  2
1302: pop
1303: aload_3
1304: aload_0
1305: aload_1
1306: arraylength
1307: ldc           #191
1309: invokespecial #184
1312: invokeinterface #70,  2
1317: pop
1318: aload_3
1319: aload_0
1320: aload_1
1321: arraylength
1322: ldc           #192
1324: invokespecial #184
1327: invokeinterface #70,  2
1332: pop
1333: aload_3
1334: aload_0
1335: aload_1
1336: arraylength
1337: ldc           #193
1339: invokespecial #184
1342: invokeinterface #70,  2
1347: pop
1348: aload_3
1349: aload_0
1350: aload_1
1351: arraylength
1352: ldc           #194
1354: invokespecial #184
1357: invokeinterface #70,  2
1362: pop
1363: aload_3
1364: aload_0
1365: aload_1
1366: arraylength
1367: ldc           #195
1369: invokespecial #184
1372: invokeinterface #70,  2
1377: pop
1378: aload_3
1379: aload_0
1380: aload_1
1381: arraylength
1382: ldc           #196
1384: invokespecial #184
1387: invokeinterface #70,  2
1392: pop
1393: aload_3
1394: aload_0
1395: aload_1
1396: arraylength
1397: ldc           #197
1399: invokespecial #184
1402: invokeinterface #70,  2
1407: pop
1408: aload_3
1409: aload_0
1410: aload_1
1411: arraylength
1412: ldc           #198
1414: invokespecial #184
1417: invokeinterface #70,  2
1422: pop
1423: aload_3
1424: aload_0
1425: aload_1
1426: arraylength
1427: ldc           #199
1429: invokespecial #184
1432: invokeinterface #70,  2
1437: pop
1438: aload_3
1439: aload_0
1440: aload_1
1441: arraylength
1442: ldc           #200
1444: invokespecial #184
1447: invokeinterface #70,  2
1452: pop
1453: aload_3
1454: aload_0
1455: aload_1
1456: arraylength
1457: ldc           #201
1459: invokespecial #184
1462: invokeinterface #70,  2
1467: pop
1468: aload_3
1469: aload_0
1470: aload_1
1471: arraylength
1472: ldc           #202
1474: invokespecial #184
1477: invokeinterface #70,  2
1482: pop
1483: aload_3
1484: aload_0
1485: aload_1
1486: arraylength
1487: ldc           #203
1489: invokespecial #184
1492: invokeinterface #70,  2
1497: pop
1498: aload_3
1499: aload_0
1500: aload_1
1501: arraylength
1502: ldc           #204
1504: invokespecial #184
1507: invokeinterface #70,  2
1512: pop
1513: aload_3
1514: aload_0
1515: aload_1
1516: arraylength
1517: ldc           #205
1519: invokespecial #184
1522: invokeinterface #70,  2
1527: pop
1528: aload_3
1529: aload_0
1530: aload_1
1531: arraylength
1532: ldc           #206
1534: invokespecial #184
1537: invokeinterface #70,  2
1542: pop
1543: aload_3
1544: aload_0
1545: aload_1
1546: arraylength
1547: ldc           #207
1549: invokespecial #184
1552: invokeinterface #70,  2
1557: pop
1558: aload_3
1559: aload_0
1560: aload_1
1561: arraylength
1562: ldc           #208
1564: invokespecial #184
1567: invokeinterface #70,  2
1572: pop
1573: aload_3
1574: aload_0
1575: aload_1
1576: arraylength
1577: ldc           #209
1579: invokespecial #184
1582: invokeinterface #70,  2
1587: pop
1588: aload_3
1589: aload_0
1590: aload_1
1591: arraylength
1592: ldc           #210
1594: invokespecial #184
1597: invokeinterface #70,  2
1602: pop
1603: aload_3
1604: aload_0
1605: aload_1
1606: arraylength
1607: ldc           #211
1609: invokespecial #184
1612: invokeinterface #70,  2
1617: pop
1618: aload_3
1619: aload_0
1620: aload_1
1621: arraylength
1622: ldc           #212
1624: invokespecial #184
1627: invokeinterface #70,  2
1632: pop
1633: aload_3
1634: aload_0
1635: aload_1
1636: arraylength
1637: ldc           #213
1639: invokespecial #184
1642: invokeinterface #70,  2
1647: pop
1648: aload_3
1649: aload_0
1650: aload_1
1651: arraylength
1652: ldc           #214
1654: invokespecial #184
1657: invokeinterface #70,  2
1662: pop
1663: aload_3
1664: aload_0
1665: aload_1
1666: arraylength
1667: ldc           #215
1669: invokespecial #184
1672: invokeinterface #70,  2
1677: pop
1678: aload_3
1679: aload_0
1680: aload_1
1681: arraylength
1682: ldc           #216
1684: invokespecial #184
1687: invokeinterface #70,  2
1692: pop
1693: aload_3
1694: aload_0
1695: aload_1
1696: arraylength
1697: ldc           #217
1699: invokespecial #184
1702: invokeinterface #70,  2
1707: pop
1708: aload_3
1709: aload_0
1710: aload_1
1711: arraylength
1712: ldc           #218
1714: invokespecial #184
1717: invokeinterface #70,  2
1722: pop
1723: aload_3
1724: aload_0
1725: aload_1
1726: arraylength
1727: ldc           #219
1729: invokespecial #184
1732: invokeinterface #70,  2
1737: pop
1738: aload_3
1739: aload_0
1740: aload_1
1741: arraylength
1742: ldc           #220
1744: invokespecial #184
1747: invokeinterface #70,  2
1752: pop
1753: aload_3
1754: aload_0
1755: aload_1
1756: arraylength
1757: ldc           #221
1759: invokespecial #184
1762: invokeinterface #70,  2
1767: pop
1768: aload_3
1769: aload_0
1770: aload_1
1771: arraylength
1772: ldc           #222
1774: invokespecial #184
1777: invokeinterface #70,  2
1782: pop
1783: aload_3
1784: aload_0
1785: aload_1
1786: arraylength
1787: ldc           #223
1789: invokespecial #184
1792: invokeinterface #70,  2
1797: pop
1798: aload_3
1799: aload_0
1800: aload_1
1801: arraylength
1802: ldc           #224
1804: invokespecial #184
1807: invokeinterface #70,  2
1812: pop
1813: aload_3
1814: aload_0
1815: aload_1
1816: arraylength
1817: ldc           #225
1819: invokespecial #184
1822: invokeinterface #70,  2
1827: pop
1828: aload_3
1829: aload_0
1830: aload_1
1831: arraylength
1832: ldc           #226
1834: invokespecial #184
1837: invokeinterface #70,  2
1842: pop
1843: aload_3
1844: aload_0
1845: aload_1
1846: arraylength
1847: ldc           #227
1849: invokespecial #184
1852: invokeinterface #70,  2
1857: pop
1858: aload_3
1859: aload_0
1860: aload_1
1861: arraylength
1862: ldc           #228
1864: invokespecial #184
1867: invokeinterface #70,  2
1872: pop
1873: aload_3
1874: aload_0
1875: aload_1
1876: arraylength
1877: ldc           #229
1879: invokespecial #184
1882: invokeinterface #70,  2
1887: pop
1888: aload_3
1889: aload_0
1890: aload_1
1891: arraylength
1892: ldc           #230
1894: invokespecial #184
1897: invokeinterface #70,  2
1902: pop
1903: aload_3
1904: aload_0
1905: aload_1
1906: arraylength
1907: ldc           #231
1909: invokespecial #184
1912: invokeinterface #70,  2
1917: pop
1918: aload_3
1919: aload_0
1920: aload_1
1921: arraylength
1922: ldc           #232
1924: invokespecial #184
1927: invokeinterface #70,  2
1932: pop
1933: aload_3
1934: aload_0
1935: aload_1
1936: arraylength
1937: ldc           #233
1939: invokespecial #184
1942: invokeinterface #70,  2
1947: pop
1948: aload_3
1949: aload_0
1950: aload_1
1951: arraylength
1952: ldc           #234
1954: invokespecial #184
1957: invokeinterface #70,  2
1962: pop
1963: aload_3
1964: aload_0
1965: aload_1
1966: arraylength
1967: ldc           #235
1969: invokespecial #184
1972: invokeinterface #70,  2
1977: pop
1978: aload_3
1979: aload_0
1980: aload_1
1981: arraylength
1982: ldc           #236
1984: invokespecial #184
1987: invokeinterface #70,  2
1992: pop
1993: aload_3
1994: aload_0
1995: aload_1
1996: arraylength
1997: ldc           #237
1999: invokespecial #184
2002: invokeinterface #70,  2
2007: pop
2008: aload_3
2009: aload_0
2010: aload_1
2011: arraylength
2012: ldc           #238
2014: invokespecial #184
2017: invokeinterface #70,  2
2022: pop
2023: aload_3
2024: aload_0
2025: aload_1
2026: arraylength
2027: ldc           #239
2029: invokespecial #184
2032: invokeinterface #70,  2
2037: pop
2038: aload_3
2039: aload_0
2040: aload_1
2041: arraylength
2042: ldc           #240
2044: invokespecial #184
2047: invokeinterface #70,  2
2052: pop
2053: aload_3
2054: aload_0
2055: aload_1
2056: arraylength
2057: ldc           #241
2059: invokespecial #184
2062: invokeinterface #70,  2
2067: pop
2068: aload_3
2069: aload_0
2070: aload_1
2071: arraylength
2072: ldc           #242
2074: invokespecial #184
2077: invokeinterface #70,  2
2082: pop
2083: aload_3
2084: aload_0
2085: aload_1
2086: arraylength
2087: ldc           #243
2089: invokespecial #184
2092: invokeinterface #70,  2
2097: pop
2098: aload_3
2099: aload_0
2100: aload_1
2101: arraylength
2102: ldc           #244
2104: invokespecial #184
2107: invokeinterface #70,  2
2112: pop
2113: aload_3
2114: aload_0
2115: aload_1
2116: arraylength
2117: ldc           #245
2119: invokespecial #184
2122: invokeinterface #70,  2
2127: pop
2128: aload_3
2129: aload_0
2130: aload_1
2131: arraylength
2132: ldc           #246
2134: invokespecial #184
2137: invokeinterface #70,  2
2142: pop
2143: aload_3
2144: aload_0
2145: aload_1
2146: arraylength
2147: ldc           #247
2149: invokespecial #184
2152: invokeinterface #70,  2
2157: pop
2158: aload_3
2159: aload_0
2160: aload_1
2161: arraylength
2162: ldc           #248
2164: invokespecial #184
2167: invokeinterface #70,  2
2172: pop
2173: aload_3
2174: aload_0
2175: aload_1
2176: arraylength
2177: ldc           #249
2179: invokespecial #184
2182: invokeinterface #70,  2
2187: pop
2188: aload_3
2189: aload_0
2190: aload_1
2191: arraylength
2192: ldc           #250
2194: invokespecial #184
2197: invokeinterface #70,  2
2202: pop
2203: aload_3
2204: aload_0
2205: aload_1
2206: arraylength
2207: ldc           #251
2209: invokespecial #184
2212: invokeinterface #70,  2
2217: pop
2218: aload_3
2219: aload_0
2220: aload_1
2221: arraylength
2222: ldc           #252
2224: invokespecial #184
2227: invokeinterface #70,  2
2232: pop
2233: aload_3
2234: aload_0
2235: aload_1
2236: arraylength
2237: ldc           #253
2239: invokespecial #184
2242: invokeinterface #70,  2
2247: pop
2248: aload_3
2249: aload_0
2250: aload_1
2251: arraylength
2252: ldc           #254
2254: invokespecial #184
2257: invokeinterface #70,  2
2262: pop
2263: aload_3
2264: aload_0
2265: aload_1
2266: arraylength
2267: ldc           #255
2269: invokespecial #184
2272: invokeinterface #70,  2
2277: pop
2278: aload_3
2279: aload_0
2280: aload_1
2281: arraylength
2282: ldc_w         #256
2285: invokespecial #184
2288: invokeinterface #70,  2
2293: pop
2294: aload_3
2295: aload_0
2296: aload_1
2297: arraylength
2298: ldc_w         #257
2301: invokespecial #184
2304: invokeinterface #70,  2
2309: pop
2310: aload_3
2311: aload_0
2312: aload_1
2313: arraylength
2314: ldc_w         #258
2317: invokespecial #184
2320: invokeinterface #70,  2
2325: pop
2326: aload_3
2327: aload_0
2328: aload_1
2329: arraylength
2330: ldc_w         #259
2333: invokespecial #184
2336: invokeinterface #70,  2
2341: pop
2342: aload_3
2343: aload_0
2344: aload_1
2345: arraylength
2346: ldc_w         #260
2349: invokespecial #184
2352: invokeinterface #70,  2
2357: pop
2358: aload_3
2359: aload_0
2360: aload_1
2361: arraylength
2362: ldc_w         #261
2365: invokespecial #184
2368: invokeinterface #70,  2
2373: pop
2374: aload_3
2375: aload_0
2376: aload_1
2377: arraylength
2378: ldc_w         #262
2381: invokespecial #184
2384: invokeinterface #70,  2
2389: pop
2390: aload_3
2391: aload_0
2392: aload_1
2393: arraylength
2394: ldc_w         #263
2397: invokespecial #184
2400: invokeinterface #70,  2
2405: pop
2406: aload_3
2407: aload_0
2408: aload_1
2409: arraylength
2410: ldc_w         #264
2413: invokespecial #184
2416: invokeinterface #70,  2
2421: pop
2422: aload_3
2423: aload_0
2424: aload_1
2425: arraylength
2426: ldc_w         #265
2429: invokespecial #184
2432: invokeinterface #70,  2
2437: pop
2438: aload_3
2439: aload_0
2440: aload_1
2441: arraylength
2442: ldc_w         #266
2445: invokespecial #184
2448: invokeinterface #70,  2
2453: pop
2454: aload_3
2455: aload_0
2456: aload_1
2457: arraylength
2458: ldc_w         #267
2461: invokespecial #184
2464: invokeinterface #70,  2
2469: pop
2470: aload_3
2471: aload_0
2472: aload_1
2473: arraylength
2474: ldc_w         #268
2477: invokespecial #184
2480: invokeinterface #70,  2
2485: pop
2486: aload_3
2487: aload_0
2488: aload_1
2489: arraylength
2490: ldc_w         #269
2493: invokespecial #184
2496: invokeinterface #70,  2
2501: pop
2502: aload_3
2503: aload_0
2504: aload_1
2505: arraylength
2506: ldc_w         #270
2509: invokespecial #184
2512: invokeinterface #70,  2
2517: pop
2518: aload_3
2519: aload_0
2520: aload_1
2521: arraylength
2522: ldc_w         #271
2525: invokespecial #184
2528: invokeinterface #70,  2
2533: pop
2534: aload_3
2535: aload_0
2536: aload_1
2537: arraylength
2538: ldc_w         #272
2541: invokespecial #184
2544: invokeinterface #70,  2
2549: pop
2550: aload_3
2551: aload_0
2552: aload_1
2553: arraylength
2554: ldc_w         #273
2557: invokespecial #184
2560: invokeinterface #70,  2
2565: pop
2566: aload_3
2567: aload_0
2568: aload_1
2569: arraylength
2570: ldc_w         #274
2573: invokespecial #184
2576: invokeinterface #70,  2
2581: pop
2582: aload_3
2583: aload_0
2584: aload_1
2585: arraylength
2586: ldc_w         #275
2589: invokespecial #184
2592: invokeinterface #70,  2
2597: pop
2598: aload_3
2599: aload_0
2600: aload_1
2601: arraylength
2602: ldc_w         #276
2605: invokespecial #184
2608: invokeinterface #70,  2
2613: pop
2614: new           #22
2617: dup
2618: invokespecial #23
2621: astore        4
2623: aload         4
2625: aload_2
2626: aload_3
2627: getstatic     #34
2630: iconst_1
2631: invokevirtual #25
2634: astore        5
2636: ldc2_w        #277
2639: aload         5
2641: invokevirtual #29
2644: checkcast     #30
2647: invokevirtual #31
2650: ldc2_w        #68
2653: invokestatic  #32
2656: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test00
Start line: 25
End line: 32
Method source code: 
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.9683258075279194));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.9683258075279194));
      simplexTableau0.subtractRow(0, 0, (-0.9683258075279194));
  }
Method byte code: 
0: iconst_1
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #3
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #8
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_0
38: ldc2_w        #3
41: invokespecial #10
44: astore        5
46: aload         5
48: iconst_0
49: iconst_0
50: ldc2_w        #3
53: invokevirtual #11
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test01
Start line: 35
End line: 44
Method source code: 
  public void test01()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(195, 1154, 0.15);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(openMapRealVector0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 195);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-3091.6958189511));
      double[][] doubleArray0 = simplexTableau0.getData();
      assertEquals(1, doubleArray0.length);
  }
Method byte code: 
0: new           #12
3: dup
4: sipush        195
7: sipush        1154
10: ldc2_w        #13
13: invokespecial #15
16: astore_1
17: new           #16
20: dup
21: aload_1
22: invokespecial #17
25: astore_2
26: new           #2
29: dup
30: aload_2
31: ldc2_w        #18
34: invokespecial #20
37: astore_3
38: new           #6
41: dup
42: invokespecial #7
45: astore        4
47: getstatic     #21
50: astore        5
52: new           #9
55: dup
56: aload_3
57: aload         4
59: aload         5
61: iconst_0
62: ldc2_w        #22
65: invokespecial #10
68: astore        6
70: aload         6
72: invokevirtual #24
75: astore        7
77: lconst_1
78: aload         7
80: arraylength
81: i2l
82: invokestatic  #25
85: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test02
Start line: 47
End line: 64
Method source code: 
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 5.0614674548127384E-8);
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 5.0614674548127384E-8);
      // Undeclared exception!
      try { 
        simplexTableau0.setEntry((-1206), (-1206), (-1206));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (-1,206)
         //
         verifyException("org.apache.commons.math3.linear.MatrixUtils", e);
      }
  }
Method byte code: 
0: iconst_1
1: newarray       double
3: astore_1
4: new           #6
7: dup
8: invokespecial #7
11: astore_2
12: getstatic     #21
15: astore_3
16: new           #2
19: dup
20: aload_1
21: ldc2_w        #26
24: invokespecial #5
27: astore        4
29: new           #9
32: dup
33: aload         4
35: aload_2
36: aload_3
37: iconst_1
38: ldc2_w        #26
41: invokespecial #10
44: astore        5
46: aload         5
48: sipush        -1206
51: sipush        -1206
54: ldc2_w        #28
57: invokevirtual #30
60: ldc           #31
62: invokestatic  #32
65: goto          77
68: astore        6
70: ldc           #34
72: aload         6
74: invokestatic  #35
77: return
Exception table:
from    to  target type
46    65    68   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test03
Start line: 67
End line: 79
Method source code: 
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-1125.7794943386848), relationship0, doubleArray0, (-1.0));
      linkedList0.add(linearConstraint0);
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1.0));
      PointValuePair pointValuePair0 = simplexTableau0.getSolution();
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #36
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #36
18: invokespecial #5
21: astore_2
22: new           #6
25: dup
26: invokespecial #7
29: astore_3
30: getstatic     #38
33: astore        4
35: new           #39
38: dup
39: aload_1
40: ldc2_w        #40
43: aload         4
45: aload_1
46: ldc2_w        #36
49: invokespecial #42
52: astore        5
54: aload_3
55: aload         5
57: invokevirtual #43
60: pop
61: getstatic     #8
64: astore        6
66: new           #9
69: dup
70: aload_2
71: aload_3
72: aload         6
74: iconst_1
75: ldc2_w        #36
78: invokespecial #10
81: astore        7
83: aload         7
85: invokevirtual #44
88: astore        8
90: aload         8
92: invokestatic  #45
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test04
Start line: 82
End line: 89
Method source code: 
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 2901, 2901);
      simplexTableau0.hashCode();
  }
Method byte code: 
0: iconst_0
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: dconst_0
10: invokespecial #5
13: astore_2
14: new           #6
17: dup
18: invokespecial #7
21: astore_3
22: getstatic     #8
25: astore        4
27: new           #9
30: dup
31: aload_2
32: aload_3
33: aload         4
35: iconst_0
36: ldc2_w        #46
39: sipush        2901
42: invokespecial #48
45: astore        5
47: aload         5
49: invokevirtual #49
52: pop
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test05
Start line: 92
End line: 103
Method source code: 
  public void test05()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = new Double((-1.0));
      doubleArray0[0] = double0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 1179.9973858);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
      int int0 = simplexTableau0.getNumDecisionVariables();
      assertEquals(1, int0);
  }
Method byte code: 
0: iconst_1
1: anewarray     #50
4: astore_1
5: new           #50
8: dup
9: ldc2_w        #36
12: invokespecial #51
15: astore_2
16: aload_1
17: iconst_0
18: aload_2
19: aastore
20: new           #16
23: dup
24: aload_1
25: invokespecial #52
28: astore_3
29: new           #2
32: dup
33: aload_3
34: ldc2_w        #53
37: invokespecial #20
40: astore        4
42: new           #6
45: dup
46: invokespecial #7
49: astore        5
51: getstatic     #8
54: astore        6
56: new           #9
59: dup
60: aload         4
62: aload         5
64: aload         6
66: iconst_1
67: aload_1
68: iconst_0
69: aaload
70: invokevirtual #55
73: invokespecial #10
76: astore        7
78: aload         7
80: invokevirtual #56
83: istore        8
85: lconst_1
86: iload         8
88: i2l
89: invokestatic  #25
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test06
Start line: 106
End line: 115
Method source code: 
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-5.064029261094408));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      Relationship relationship0 = Relationship.LEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-5.064029261094408), relationship0, doubleArray0, (-5.064029261094408));
      linkedList0.add(linearConstraint0);
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-5.064029261094408));
  }
Method byte code: 
0: iconst_3
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #57
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #59
27: astore        4
29: new           #39
32: dup
33: aload_1
34: ldc2_w        #57
37: aload         4
39: aload_1
40: ldc2_w        #57
43: invokespecial #42
46: astore        5
48: aload_3
49: aload         5
51: invokevirtual #43
54: pop
55: getstatic     #8
58: astore        6
60: new           #9
63: dup
64: aload_2
65: aload_3
66: aload         6
68: iconst_1
69: ldc2_w        #57
72: invokespecial #10
75: astore        7
77: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test07
Start line: 118
End line: 130
Method source code: 
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1665.0);
      linkedList0.addLast(linearConstraint0);
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
      PointValuePair pointValuePair0 = simplexTableau0.getSolution();
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #36
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #36
18: invokespecial #5
21: astore_2
22: new           #6
25: dup
26: invokespecial #7
29: astore_3
30: getstatic     #8
33: astore        4
35: getstatic     #38
38: astore        5
40: new           #39
43: dup
44: aload_1
45: aload         5
47: ldc2_w        #60
50: invokespecial #62
53: astore        6
55: aload_3
56: aload         6
58: invokevirtual #63
61: new           #9
64: dup
65: aload_2
66: aload_3
67: aload         4
69: iconst_0
70: ldc2_w        #36
73: invokespecial #10
76: astore        7
78: aload         7
80: invokevirtual #44
83: astore        8
85: aload         8
87: invokestatic  #45
90: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test08
Start line: 133
End line: 140
Method source code: 
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1.0));
      simplexTableau0.dropPhase1Objective();
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #36
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #8
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_1
38: ldc2_w        #36
41: invokespecial #10
44: astore        5
46: aload         5
48: invokevirtual #64
51: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test09
Start line: 143
End line: 153
Method source code: 
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      Relationship relationship0 = Relationship.GEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-2743.7162747896123), relationship0, doubleArray0, 0.0);
      linkedList0.offer(linearConstraint0);
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0, (-1));
      simplexTableau0.dropPhase1Objective();
  }
Method byte code: 
0: iconst_3
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: dconst_0
10: invokespecial #5
13: astore_2
14: new           #6
17: dup
18: invokespecial #7
21: astore_3
22: getstatic     #8
25: astore        4
27: getstatic     #65
30: astore        5
32: new           #39
35: dup
36: aload_1
37: ldc2_w        #66
40: aload         5
42: aload_1
43: dconst_0
44: invokespecial #42
47: astore        6
49: aload_3
50: aload         6
52: invokevirtual #68
55: pop
56: new           #9
59: dup
60: aload_2
61: aload_3
62: aload         4
64: iconst_1
65: dconst_0
66: iconst_m1
67: invokespecial #48
70: astore        7
72: aload         7
74: invokevirtual #64
77: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test10
Start line: 156
End line: 164
Method source code: 
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1.0));
      boolean boolean0 = simplexTableau0.isOptimal();
      assertTrue(boolean0);
  }
Method byte code: 
0: bipush        7
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: aload_1
10: ldc2_w        #36
13: invokespecial #5
16: astore_2
17: new           #6
20: dup
21: invokespecial #7
24: astore_3
25: getstatic     #8
28: astore        4
30: new           #9
33: dup
34: aload_2
35: aload_3
36: aload         4
38: iconst_1
39: ldc2_w        #36
42: invokespecial #10
45: astore        5
47: aload         5
49: invokevirtual #69
52: istore        6
54: iload         6
56: invokestatic  #70
59: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test11
Start line: 167
End line: 176
Method source code: 
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
      boolean boolean0 = simplexTableau0.isOptimal();
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #36
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #36
18: invokespecial #5
21: astore_2
22: new           #6
25: dup
26: invokespecial #7
29: astore_3
30: getstatic     #8
33: astore        4
35: new           #9
38: dup
39: aload_2
40: aload_3
41: aload         4
43: iconst_0
44: ldc2_w        #36
47: invokespecial #10
50: astore        5
52: aload         5
54: invokevirtual #69
57: istore        6
59: iload         6
61: invokestatic  #71
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test12
Start line: 179
End line: 188
Method source code: 
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
      PointValuePair pointValuePair0 = simplexTableau0.getSolution();
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #36
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #36
18: invokespecial #5
21: astore_2
22: new           #6
25: dup
26: invokespecial #7
29: astore_3
30: getstatic     #21
33: astore        4
35: new           #9
38: dup
39: aload_2
40: aload_3
41: aload         4
43: iconst_0
44: ldc2_w        #36
47: invokespecial #10
50: astore        5
52: aload         5
54: invokevirtual #44
57: astore        6
59: aload         6
61: invokestatic  #45
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test13
Start line: 191
End line: 204
Method source code: 
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1665.0);
      linkedList0.addLast(linearConstraint0);
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
      simplexTableau0.dropPhase1Objective();
      PointValuePair pointValuePair0 = simplexTableau0.getSolution();
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #36
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #36
18: invokespecial #5
21: astore_2
22: new           #6
25: dup
26: invokespecial #7
29: astore_3
30: getstatic     #8
33: astore        4
35: getstatic     #38
38: astore        5
40: new           #39
43: dup
44: aload_1
45: aload         5
47: ldc2_w        #60
50: invokespecial #62
53: astore        6
55: aload_3
56: aload         6
58: invokevirtual #63
61: new           #9
64: dup
65: aload_2
66: aload_3
67: aload         4
69: iconst_0
70: ldc2_w        #36
73: invokespecial #10
76: astore        7
78: aload         7
80: invokevirtual #64
83: aload         7
85: invokevirtual #44
88: astore        8
90: aload         8
92: invokestatic  #45
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test14
Start line: 207
End line: 216
Method source code: 
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1.0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
      PointValuePair pointValuePair0 = simplexTableau0.getSolution();
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #36
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #36
18: invokespecial #5
21: astore_2
22: new           #6
25: dup
26: invokespecial #7
29: astore_3
30: getstatic     #8
33: astore        4
35: new           #9
38: dup
39: aload_2
40: aload_3
41: aload         4
43: iconst_0
44: ldc2_w        #36
47: invokespecial #10
50: astore        5
52: aload         5
54: invokevirtual #44
57: astore        6
59: aload         6
61: invokestatic  #45
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test15
Start line: 219
End line: 226
Method source code: 
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-33.83966178039));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-33.83966178039));
      simplexTableau0.divideRow(0, (-33.83966178039));
  }
Method byte code: 
0: bipush        9
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: aload_1
10: ldc2_w        #72
13: invokespecial #5
16: astore_2
17: new           #6
20: dup
21: invokespecial #7
24: astore_3
25: getstatic     #8
28: astore        4
30: new           #9
33: dup
34: aload_2
35: aload_3
36: aload         4
38: iconst_0
39: ldc2_w        #72
42: invokespecial #10
45: astore        5
47: aload         5
49: iconst_0
50: ldc2_w        #72
53: invokevirtual #74
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test16
Start line: 229
End line: 238
Method source code: 
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-613.3095348210536));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-613.3095348210536));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-613.3095348210536));
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertTrue(boolean0);
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #75
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #8
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_1
38: ldc2_w        #75
41: invokespecial #10
44: astore        5
46: new           #9
49: dup
50: aload_2
51: aload_3
52: aload         4
54: iconst_1
55: ldc2_w        #75
58: invokespecial #10
61: astore        6
63: aload         5
65: aload         6
67: invokevirtual #77
70: istore        7
72: iload         7
74: invokestatic  #70
77: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test17
Start line: 241
End line: 249
Method source code: 
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-16.462920322850277));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-16.462920322850277));
      boolean boolean0 = simplexTableau0.equals(simplexTableau0);
      assertTrue(boolean0);
  }
Method byte code: 
0: bipush        9
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: aload_1
10: ldc2_w        #78
13: invokespecial #5
16: astore_2
17: new           #6
20: dup
21: invokespecial #7
24: astore_3
25: getstatic     #21
28: astore        4
30: new           #9
33: dup
34: aload_2
35: aload_3
36: aload         4
38: iconst_1
39: ldc2_w        #78
42: invokespecial #10
45: astore        5
47: aload         5
49: aload         5
51: invokevirtual #77
54: istore        6
56: iload         6
58: invokestatic  #70
61: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test18
Start line: 252
End line: 260
Method source code: 
  public void test18()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12);
      boolean boolean0 = simplexTableau0.equals(linkedList0);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #12
3: dup
4: invokespecial #80
7: astore_1
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #81
16: invokespecial #20
19: astore_2
20: new           #6
23: dup
24: invokespecial #7
27: astore_3
28: getstatic     #8
31: astore        4
33: new           #9
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_0
42: ldc2_w        #81
45: invokespecial #10
48: astore        5
50: aload         5
52: aload_3
53: invokevirtual #77
56: istore        6
58: iload         6
60: invokestatic  #71
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test19
Start line: 263
End line: 272
Method source code: 
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[12];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-13.811708795817301));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-13.811708795817301));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-13.811708795817301));
      boolean boolean0 = simplexTableau1.equals(simplexTableau0);
      assertFalse(boolean0);
  }
Method byte code: 
0: bipush        12
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: aload_1
10: ldc2_w        #83
13: invokespecial #5
16: astore_2
17: new           #6
20: dup
21: invokespecial #7
24: astore_3
25: getstatic     #21
28: astore        4
30: new           #9
33: dup
34: aload_2
35: aload_3
36: aload         4
38: iconst_1
39: ldc2_w        #83
42: invokespecial #10
45: astore        5
47: new           #9
50: dup
51: aload_2
52: aload_3
53: aload         4
55: iconst_0
56: ldc2_w        #83
59: invokespecial #10
62: astore        6
64: aload         6
66: aload         5
68: invokevirtual #77
71: istore        7
73: iload         7
75: invokestatic  #71
78: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test20
Start line: 275
End line: 286
Method source code: 
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 37.140204160521805);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 37.140204160521805);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(openMapRealVector0, 37.140204160521805);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, false, 1.0E-12);
      boolean boolean0 = simplexTableau1.equals(simplexTableau0);
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #85
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #8
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_0
38: ldc2_w        #85
41: invokespecial #10
44: astore        5
46: new           #12
49: dup
50: invokespecial #80
53: astore        6
55: new           #2
58: dup
59: aload         6
61: ldc2_w        #85
64: invokespecial #20
67: astore        7
69: new           #9
72: dup
73: aload         7
75: aload_3
76: aload         4
78: iconst_0
79: ldc2_w        #81
82: invokespecial #10
85: astore        8
87: aload         8
89: aload         5
91: invokevirtual #77
94: istore        9
96: iload         9
98: invokestatic  #71
101: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test21
Start line: 289
End line: 301
Method source code: 
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-16.462920322850277));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-16.462920322850277));
      Relationship relationship0 = Relationship.LEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-16.462920322850277));
      linkedList0.add(linearConstraint0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-16.462920322850277));
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: bipush        9
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: aload_1
10: ldc2_w        #78
13: invokespecial #5
16: astore_2
17: new           #6
20: dup
21: invokespecial #7
24: astore_3
25: getstatic     #21
28: astore        4
30: new           #9
33: dup
34: aload_2
35: aload_3
36: aload         4
38: iconst_1
39: ldc2_w        #78
42: invokespecial #10
45: astore        5
47: getstatic     #59
50: astore        6
52: new           #39
55: dup
56: aload_1
57: aload         6
59: ldc2_w        #78
62: invokespecial #62
65: astore        7
67: aload_3
68: aload         7
70: invokevirtual #43
73: pop
74: new           #9
77: dup
78: aload_2
79: aload_3
80: aload         4
82: iconst_1
83: ldc2_w        #78
86: invokespecial #10
89: astore        8
91: aload         5
93: aload         8
95: invokevirtual #77
98: istore        9
100: iload         9
102: invokestatic  #71
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test22
Start line: 304
End line: 316
Method source code: 
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-16.462920322850277));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-16.462920322850277));
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-16.462920322850277), relationship0, doubleArray0, (-16.462920322850277));
      linkedList0.add(linearConstraint0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-16.462920322850277));
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: bipush        9
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: aload_1
10: ldc2_w        #78
13: invokespecial #5
16: astore_2
17: new           #6
20: dup
21: invokespecial #7
24: astore_3
25: getstatic     #21
28: astore        4
30: new           #9
33: dup
34: aload_2
35: aload_3
36: aload         4
38: iconst_0
39: ldc2_w        #78
42: invokespecial #10
45: astore        5
47: getstatic     #38
50: astore        6
52: new           #39
55: dup
56: aload_1
57: ldc2_w        #78
60: aload         6
62: aload_1
63: ldc2_w        #78
66: invokespecial #42
69: astore        7
71: aload_3
72: aload         7
74: invokevirtual #43
77: pop
78: new           #9
81: dup
82: aload_2
83: aload_3
84: aload         4
86: iconst_0
87: ldc2_w        #78
90: invokespecial #10
93: astore        8
95: aload         5
97: aload         8
99: invokevirtual #77
102: istore        9
104: iload         9
106: invokestatic  #71
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test23
Start line: 319
End line: 329
Method source code: 
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1.0));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3162.21280174798);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
      assertFalse(simplexTableau1.equals((Object)simplexTableau0));
  }
Method byte code: 
0: iconst_0
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #36
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #21
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_1
38: ldc2_w        #36
41: invokespecial #10
44: astore        5
46: new           #9
49: dup
50: aload_2
51: aload_3
52: aload         4
54: iconst_1
55: ldc2_w        #87
58: invokespecial #10
61: astore        6
63: aload         5
65: aload         6
67: invokevirtual #77
70: istore        7
72: iload         7
74: invokestatic  #71
77: aload         6
79: aload         5
81: invokevirtual #77
84: invokestatic  #71
87: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test24
Start line: 332
End line: 341
Method source code: 
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-13.811708795817301));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-13.811708795817301));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-13.811708795817301), 1);
      boolean boolean0 = simplexTableau1.equals(simplexTableau0);
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_1
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #83
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #21
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_1
38: ldc2_w        #83
41: invokespecial #10
44: astore        5
46: new           #9
49: dup
50: aload_2
51: aload_3
52: aload         4
54: iconst_1
55: ldc2_w        #83
58: iconst_1
59: invokespecial #48
62: astore        6
64: aload         6
66: aload         5
68: invokevirtual #77
71: istore        7
73: iload         7
75: invokestatic  #71
78: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test25
Start line: 344
End line: 354
Method source code: 
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-613.3095348210536));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-613.3095348210536));
      LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(doubleArray0, (-584.228638));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, true, (-613.3095348210536));
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_1
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #75
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #8
27: astore        4
29: new           #9
32: dup
33: aload_2
34: aload_3
35: aload         4
37: iconst_1
38: ldc2_w        #75
41: invokespecial #10
44: astore        5
46: new           #2
49: dup
50: aload_1
51: ldc2_w        #89
54: invokespecial #5
57: astore        6
59: new           #9
62: dup
63: aload         6
65: aload_3
66: aload         4
68: iconst_1
69: ldc2_w        #75
72: invokespecial #10
75: astore        7
77: aload         5
79: aload         7
81: invokevirtual #77
84: istore        8
86: iload         8
88: invokestatic  #71
91: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/33/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test26
Start line: 357
End line: 367
Method source code: 
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.9683258075279194));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      GoalType goalType1 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, (-0.9683258075279194));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.9683258075279194));
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: ldc2_w        #3
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: invokespecial #7
23: astore_3
24: getstatic     #8
27: astore        4
29: getstatic     #21
32: astore        5
34: new           #9
37: dup
38: aload_2
39: aload_3
40: aload         5
42: iconst_0
43: ldc2_w        #3
46: invokespecial #10
49: astore        6
51: new           #9
54: dup
55: aload_2
56: aload_3
57: aload         4
59: iconst_0
60: ldc2_w        #3
63: invokespecial #10
66: astore        7
68: aload         6
70: aload         7
72: invokevirtual #77
75: istore        8
77: iload         8
79: invokestatic  #71
82: return
}
