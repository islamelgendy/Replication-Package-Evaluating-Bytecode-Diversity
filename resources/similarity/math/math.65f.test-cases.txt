Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 75
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker1 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction2 = null;
        double[] doubleArray6 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix7 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray6);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray24 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix25 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray24);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        realMatrix25.setRow(0, doubleArray30);
        org.apache.commons.math.linear.BigMatrix bigMatrix33 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray30);
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable36 = null;
        java.lang.Object[] objArray37 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(doubleArray35, localizable36, objArray37);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray35);
        double[] doubleArray40 = vectorialPointValuePair39.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray40, true);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix43 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray40);
        double[] doubleArray47 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix48 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray47);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix49 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction2, doubleArray6, doubleArray40, doubleArray47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: dimensions mismatch 3 != 1");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(vectorialConvergenceChecker1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix25);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(bigMatrix33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: astore_2
37: aconst_null
38: astore_3
39: iconst_3
40: newarray       double
42: dup
43: iconst_0
44: dconst_1
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: dup
51: iconst_2
52: ldc2_w        #11
55: dastore
56: astore        4
58: aload         4
60: invokestatic  #13
63: astore        5
65: iconst_3
66: newarray       double
68: dup
69: iconst_0
70: dconst_1
71: dastore
72: dup
73: iconst_1
74: dconst_0
75: dastore
76: dup
77: iconst_2
78: ldc2_w        #11
81: dastore
82: astore        6
84: aload         6
86: invokestatic  #13
89: astore        7
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_0
101: dastore
102: dup
103: iconst_2
104: ldc2_w        #11
107: dastore
108: astore        8
110: aload         8
112: invokestatic  #13
115: astore        9
117: aload         7
119: iconst_0
120: aload         8
122: invokeinterface #14,  3
127: aload         8
129: invokestatic  #15
132: astore        10
134: iconst_3
135: newarray       double
137: dup
138: iconst_0
139: dconst_1
140: dastore
141: dup
142: iconst_1
143: dconst_0
144: dastore
145: dup
146: iconst_2
147: ldc2_w        #11
150: dastore
151: astore        11
153: aload         11
155: invokestatic  #13
158: astore        12
160: iconst_3
161: newarray       double
163: dup
164: iconst_0
165: dconst_1
166: dastore
167: dup
168: iconst_1
169: dconst_0
170: dastore
171: dup
172: iconst_2
173: ldc2_w        #11
176: dastore
177: astore        13
179: aload         13
181: invokestatic  #13
184: astore        14
186: aload         12
188: iconst_0
189: aload         13
191: invokeinterface #14,  3
196: aload         13
198: invokestatic  #15
201: astore        15
203: iconst_1
204: newarray       double
206: dup
207: iconst_0
208: ldc2_w        #16
211: dastore
212: astore        16
214: aconst_null
215: astore        17
217: aconst_null
218: astore        18
220: new           #18
223: dup
224: aload         16
226: aload         17
228: aload         18
230: invokespecial #19
233: astore        19
235: new           #20
238: dup
239: aload         13
241: aload         16
243: invokespecial #21
246: astore        20
248: aload         20
250: invokevirtual #22
253: astore        21
255: new           #20
258: dup
259: aload         8
261: aload         21
263: iconst_1
264: invokespecial #23
267: astore        22
269: new           #24
272: dup
273: aload         21
275: invokespecial #25
278: astore        23
280: iconst_3
281: newarray       double
283: dup
284: iconst_0
285: dconst_1
286: dastore
287: dup
288: iconst_1
289: dconst_0
290: dastore
291: dup
292: iconst_2
293: ldc2_w        #11
296: dastore
297: astore        24
299: aload         24
301: invokestatic  #13
304: astore        25
306: new           #24
309: dup
310: aload         24
312: invokespecial #25
315: astore        26
317: aload_1
318: aload_3
319: aload         4
321: aload         21
323: aload         24
325: invokevirtual #26
328: astore        27
330: ldc           #27
332: invokestatic  #28
335: goto          340
338: astore        27
340: aload_2
341: invokestatic  #30
344: aload         4
346: invokestatic  #31
349: aload         4
351: invokestatic  #32
354: ldc           #33
356: invokestatic  #34
359: aload         5
361: invokestatic  #31
364: aload         6
366: invokestatic  #31
369: aload         6
371: invokestatic  #32
374: ldc           #33
376: invokestatic  #34
379: aload         7
381: invokestatic  #31
384: aload         8
386: invokestatic  #31
389: aload         8
391: invokestatic  #32
394: ldc           #33
396: invokestatic  #34
399: aload         9
401: invokestatic  #31
404: aload         10
406: invokestatic  #31
409: aload         11
411: invokestatic  #31
414: aload         11
416: invokestatic  #32
419: ldc           #33
421: invokestatic  #34
424: aload         12
426: invokestatic  #31
429: aload         13
431: invokestatic  #31
434: aload         13
436: invokestatic  #32
439: ldc           #33
441: invokestatic  #34
444: aload         14
446: invokestatic  #31
449: aload         15
451: invokestatic  #31
454: aload         16
456: invokestatic  #31
459: aload         16
461: invokestatic  #32
464: ldc           #35
466: invokestatic  #34
469: aload         21
471: invokestatic  #31
474: aload         21
476: invokestatic  #32
479: ldc           #35
481: invokestatic  #34
484: aload         24
486: invokestatic  #31
489: aload         24
491: invokestatic  #32
494: ldc           #33
496: invokestatic  #34
499: aload         25
501: invokestatic  #31
504: return
Exception table:
from    to  target type
317   335   338   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 78
End line: 89
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        int int3 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #36
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: invokevirtual #37
46: istore        4
48: aload_1
49: iconst_1
50: invokevirtual #38
53: new           #39
56: dup
57: invokespecial #40
60: ldc           #41
62: invokevirtual #42
65: iload_2
66: invokevirtual #43
69: ldc           #44
71: invokevirtual #42
74: iconst_0
75: invokevirtual #43
78: ldc           #41
80: invokevirtual #42
83: invokevirtual #45
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #46
98: new           #39
101: dup
102: invokespecial #40
105: ldc           #41
107: invokevirtual #42
110: iload_3
111: invokevirtual #43
114: ldc           #44
116: invokevirtual #42
119: iconst_0
120: invokevirtual #43
123: ldc           #41
125: invokevirtual #42
128: invokevirtual #45
131: iload_3
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #46
143: new           #39
146: dup
147: invokespecial #40
150: ldc           #41
152: invokevirtual #42
155: iload         4
157: invokevirtual #43
160: ldc           #44
162: invokevirtual #42
165: iconst_0
166: invokevirtual #43
169: ldc           #41
171: invokevirtual #42
174: invokevirtual #45
177: iload         4
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #46
190: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 92
End line: 102
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        double double4 = levenbergMarquardtOptimizer0.cost;
        levenbergMarquardtOptimizer0.cost = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #47
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: aload_1
45: getfield      #50
48: dstore_3
49: aload_1
50: ldc2_w        #16
53: putfield      #50
56: new           #39
59: dup
60: invokespecial #40
63: ldc           #41
65: invokevirtual #42
68: iload_2
69: invokevirtual #43
72: ldc           #44
74: invokevirtual #42
77: iconst_0
78: invokevirtual #43
81: ldc           #41
83: invokevirtual #42
86: invokevirtual #45
89: iload_2
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #46
101: new           #39
104: dup
105: invokespecial #40
108: ldc           #41
110: invokevirtual #42
113: dload_3
114: invokevirtual #51
117: ldc           #44
119: invokevirtual #42
122: ldc2_w        #48
125: invokevirtual #51
128: ldc           #41
130: invokevirtual #42
133: invokevirtual #45
136: dload_3
137: ldc2_w        #48
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #46
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 105
End line: 117
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        double[][] doubleArray4 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertNull(doubleArray4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #52
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: aload_1
49: getfield      #54
52: astore        5
54: new           #39
57: dup
58: invokespecial #40
61: ldc           #41
63: invokevirtual #42
66: iload_2
67: invokevirtual #43
70: ldc           #44
72: invokevirtual #42
75: iconst_0
76: invokevirtual #43
79: ldc           #41
81: invokevirtual #42
84: invokevirtual #45
87: iload_2
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #46
99: new           #39
102: dup
103: invokespecial #40
106: ldc           #41
108: invokevirtual #42
111: iload_3
112: invokevirtual #43
115: ldc           #44
117: invokevirtual #42
120: iconst_0
121: invokevirtual #43
124: ldc           #41
126: invokevirtual #42
129: invokevirtual #45
132: iload_3
133: ifne          140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #46
144: aload         4
146: invokestatic  #30
149: aload         5
151: invokestatic  #30
154: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 120
End line: 133
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        int int6 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1000 + "'", int6 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #55
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: invokevirtual #59
57: istore        5
59: aload_2
60: invokestatic  #30
63: new           #39
66: dup
67: invokespecial #40
70: ldc           #41
72: invokevirtual #42
75: iload_3
76: invokevirtual #43
79: ldc           #44
81: invokevirtual #42
84: iconst_0
85: invokevirtual #43
88: ldc           #41
90: invokevirtual #42
93: invokevirtual #45
96: iload_3
97: ifne          104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #46
108: aload         4
110: invokestatic  #30
113: new           #39
116: dup
117: invokespecial #40
120: ldc           #41
122: invokevirtual #42
125: iload         5
127: invokevirtual #43
130: ldc           #44
132: invokevirtual #42
135: sipush        1000
138: invokevirtual #43
141: ldc           #41
143: invokevirtual #42
146: invokevirtual #45
149: iload         5
151: sipush        1000
154: if_icmpne     161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #46
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 136
End line: 212
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray66 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #60
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: bipush        100
393: invokevirtual #38
396: aload_1
397: invokevirtual #67
400: astore        32
402: ldc           #68
404: invokestatic  #28
407: goto          412
410: astore        32
412: new           #39
415: dup
416: invokespecial #40
419: ldc           #41
421: invokevirtual #42
424: iload_2
425: invokevirtual #43
428: ldc           #44
430: invokevirtual #42
433: iconst_0
434: invokevirtual #43
437: ldc           #41
439: invokevirtual #42
442: invokevirtual #45
445: iload_2
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #46
457: aload         4
459: invokestatic  #31
462: aload         4
464: invokestatic  #32
467: ldc           #33
469: invokestatic  #34
472: aload         5
474: invokestatic  #31
477: aload         6
479: invokestatic  #31
482: aload         6
484: invokestatic  #32
487: ldc           #33
489: invokestatic  #34
492: aload         7
494: invokestatic  #31
497: aload         8
499: invokestatic  #31
502: aload         9
504: invokestatic  #31
507: aload         9
509: invokestatic  #32
512: ldc           #35
514: invokestatic  #34
517: aload         14
519: invokestatic  #31
522: aload         14
524: invokestatic  #32
527: ldc           #33
529: invokestatic  #34
532: aload         15
534: invokestatic  #31
537: aload         16
539: invokestatic  #31
542: aload         16
544: invokestatic  #32
547: ldc           #33
549: invokestatic  #34
552: aload         17
554: invokestatic  #31
557: aload         18
559: invokestatic  #31
562: aload         19
564: invokestatic  #31
567: aload         19
569: invokestatic  #32
572: ldc           #33
574: invokestatic  #34
577: aload         20
579: invokestatic  #31
582: aload         21
584: invokestatic  #31
587: aload         21
589: invokestatic  #32
592: ldc           #33
594: invokestatic  #34
597: aload         22
599: invokestatic  #31
602: aload         23
604: invokestatic  #31
607: aload         24
609: invokestatic  #31
612: aload         24
614: invokestatic  #32
617: ldc           #35
619: invokestatic  #34
622: aload         29
624: invokestatic  #31
627: aload         29
629: invokestatic  #32
632: ldc           #35
634: invokestatic  #34
637: new           #39
640: dup
641: invokespecial #40
644: ldc           #41
646: invokevirtual #42
649: iload         31
651: invokevirtual #69
654: ldc           #44
656: invokevirtual #42
659: iconst_1
660: invokevirtual #69
663: ldc           #41
665: invokevirtual #42
668: invokevirtual #45
671: iload         31
673: iconst_1
674: if_icmpne     681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #46
685: return
Exception table:
from    to  target type
396   407   410   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 215
End line: 230
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer0.residualsWeights;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: invokevirtual #71
57: istore        5
59: aload_1
60: getfield      #72
63: astore        6
65: aload_2
66: invokestatic  #30
69: new           #39
72: dup
73: invokespecial #40
76: ldc           #41
78: invokevirtual #42
81: iload_3
82: invokevirtual #43
85: ldc           #44
87: invokevirtual #42
90: iconst_0
91: invokevirtual #43
94: ldc           #41
96: invokevirtual #42
99: invokevirtual #45
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #46
114: aload         4
116: invokestatic  #30
119: new           #39
122: dup
123: invokespecial #40
126: ldc           #41
128: invokevirtual #42
131: iload         5
133: invokevirtual #43
136: ldc           #44
138: invokevirtual #42
141: ldc           #73
143: invokevirtual #43
146: ldc           #41
148: invokevirtual #42
151: invokevirtual #45
154: iload         5
156: ldc           #73
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #46
169: aload         6
171: invokestatic  #30
174: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 233
End line: 248
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer0.objective;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #74
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: invokevirtual #71
57: istore        5
59: aload_1
60: getfield      #56
63: astore        6
65: aload_2
66: invokestatic  #30
69: new           #39
72: dup
73: invokespecial #40
76: ldc           #41
78: invokevirtual #42
81: iload_3
82: invokevirtual #43
85: ldc           #44
87: invokevirtual #42
90: iconst_0
91: invokevirtual #43
94: ldc           #41
96: invokevirtual #42
99: invokevirtual #45
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #46
114: aload         4
116: invokestatic  #30
119: new           #39
122: dup
123: invokespecial #40
126: ldc           #41
128: invokevirtual #42
131: iload         5
133: invokevirtual #43
136: ldc           #44
138: invokevirtual #42
141: ldc           #73
143: invokevirtual #43
146: ldc           #41
148: invokevirtual #42
151: invokevirtual #45
154: iload         5
156: ldc           #73
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #46
169: aload         6
171: invokestatic  #30
174: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 251
End line: 293
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray4 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix5 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray4);
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        realMatrix5.setRow(0, doubleArray10);
        org.apache.commons.math.linear.BigMatrix bigMatrix13 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray10);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        double[] doubleArray23 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix24 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray23);
        realMatrix18.setRow(0, doubleArray23);
        org.apache.commons.math.linear.BigMatrix bigMatrix26 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray23);
        double[] doubleArray28 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable29 = null;
        java.lang.Object[] objArray30 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(doubleArray28, localizable29, objArray30);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair32 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray23, doubleArray28);
        double[] doubleArray33 = vectorialPointValuePair32.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair35 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray10, doubleArray33, true);
        levenbergMarquardtOptimizer0.residuals = doubleArray10;
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(bigMatrix13);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix24);
        org.junit.Assert.assertNotNull(bigMatrix26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #75
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: dconst_0
42: dastore
43: dup
44: iconst_2
45: ldc2_w        #11
48: dastore
49: astore_2
50: aload_2
51: invokestatic  #13
54: astore_3
55: iconst_3
56: newarray       double
58: dup
59: iconst_0
60: dconst_1
61: dastore
62: dup
63: iconst_1
64: dconst_0
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #11
71: dastore
72: astore        4
74: aload         4
76: invokestatic  #13
79: astore        5
81: aload_3
82: iconst_0
83: aload         4
85: invokeinterface #14,  3
90: aload         4
92: invokestatic  #15
95: astore        6
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        7
116: aload         7
118: invokestatic  #13
121: astore        8
123: iconst_3
124: newarray       double
126: dup
127: iconst_0
128: dconst_1
129: dastore
130: dup
131: iconst_1
132: dconst_0
133: dastore
134: dup
135: iconst_2
136: ldc2_w        #11
139: dastore
140: astore        9
142: aload         9
144: invokestatic  #13
147: astore        10
149: aload         8
151: iconst_0
152: aload         9
154: invokeinterface #14,  3
159: aload         9
161: invokestatic  #15
164: astore        11
166: iconst_1
167: newarray       double
169: dup
170: iconst_0
171: ldc2_w        #16
174: dastore
175: astore        12
177: aconst_null
178: astore        13
180: aconst_null
181: astore        14
183: new           #18
186: dup
187: aload         12
189: aload         13
191: aload         14
193: invokespecial #19
196: astore        15
198: new           #20
201: dup
202: aload         9
204: aload         12
206: invokespecial #21
209: astore        16
211: aload         16
213: invokevirtual #22
216: astore        17
218: new           #20
221: dup
222: aload         4
224: aload         17
226: iconst_1
227: invokespecial #23
230: astore        18
232: aload_1
233: aload         4
235: putfield      #76
238: aload_2
239: invokestatic  #31
242: aload_2
243: invokestatic  #32
246: ldc           #33
248: invokestatic  #34
251: aload_3
252: invokestatic  #31
255: aload         4
257: invokestatic  #31
260: aload         4
262: invokestatic  #32
265: ldc           #33
267: invokestatic  #34
270: aload         5
272: invokestatic  #31
275: aload         6
277: invokestatic  #31
280: aload         7
282: invokestatic  #31
285: aload         7
287: invokestatic  #32
290: ldc           #33
292: invokestatic  #34
295: aload         8
297: invokestatic  #31
300: aload         9
302: invokestatic  #31
305: aload         9
307: invokestatic  #32
310: ldc           #33
312: invokestatic  #34
315: aload         10
317: invokestatic  #31
320: aload         11
322: invokestatic  #31
325: aload         12
327: invokestatic  #31
330: aload         12
332: invokestatic  #32
335: ldc           #35
337: invokestatic  #34
340: aload         17
342: invokestatic  #31
345: aload         17
347: invokestatic  #32
350: ldc           #35
352: invokestatic  #34
355: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 296
End line: 303
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 97);
        int int3 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #77
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc2_w        #16
36: invokevirtual #78
39: aload_1
40: invokevirtual #57
43: istore_2
44: new           #39
47: dup
48: invokespecial #40
51: ldc           #41
53: invokevirtual #42
56: iload_2
57: invokevirtual #43
60: ldc           #44
62: invokevirtual #42
65: iconst_0
66: invokevirtual #43
69: ldc           #41
71: invokevirtual #42
74: invokevirtual #45
77: iload_2
78: ifne          85
81: iconst_1
82: goto          86
85: iconst_0
86: invokestatic  #46
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 306
End line: 340
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray6 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix7 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray6);
        double[] doubleArray12 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix13 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray12);
        realMatrix7.setRow(0, doubleArray12);
        org.apache.commons.math.linear.BigMatrix bigMatrix15 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray12);
        double[] doubleArray17 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable18 = null;
        java.lang.Object[] objArray19 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(doubleArray17, localizable18, objArray19);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray17);
        double[] doubleArray22 = vectorialPointValuePair21.getValue();
        levenbergMarquardtOptimizer0.point = doubleArray22;
        int int24 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(bigMatrix15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #79
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: iconst_3
43: newarray       double
45: dup
46: iconst_0
47: dconst_1
48: dastore
49: dup
50: iconst_1
51: dconst_0
52: dastore
53: dup
54: iconst_2
55: ldc2_w        #11
58: dastore
59: astore        4
61: aload         4
63: invokestatic  #13
66: astore        5
68: iconst_3
69: newarray       double
71: dup
72: iconst_0
73: dconst_1
74: dastore
75: dup
76: iconst_1
77: dconst_0
78: dastore
79: dup
80: iconst_2
81: ldc2_w        #11
84: dastore
85: astore        6
87: aload         6
89: invokestatic  #13
92: astore        7
94: aload         5
96: iconst_0
97: aload         6
99: invokeinterface #14,  3
104: aload         6
106: invokestatic  #15
109: astore        8
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #16
119: dastore
120: astore        9
122: aconst_null
123: astore        10
125: aconst_null
126: astore        11
128: new           #18
131: dup
132: aload         9
134: aload         10
136: aload         11
138: invokespecial #19
141: astore        12
143: new           #20
146: dup
147: aload         6
149: aload         9
151: invokespecial #21
154: astore        13
156: aload         13
158: invokevirtual #22
161: astore        14
163: aload_1
164: aload         14
166: putfield      #80
169: aload_1
170: getfield      #81
173: istore        15
175: new           #39
178: dup
179: invokespecial #40
182: ldc           #41
184: invokevirtual #42
187: iload_2
188: invokevirtual #43
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #43
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload_2
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #46
220: new           #39
223: dup
224: invokespecial #40
227: ldc           #41
229: invokevirtual #42
232: iload_3
233: invokevirtual #43
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #43
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload_3
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #46
265: aload         4
267: invokestatic  #31
270: aload         4
272: invokestatic  #32
275: ldc           #33
277: invokestatic  #34
280: aload         5
282: invokestatic  #31
285: aload         6
287: invokestatic  #31
290: aload         6
292: invokestatic  #32
295: ldc           #33
297: invokestatic  #34
300: aload         7
302: invokestatic  #31
305: aload         8
307: invokestatic  #31
310: aload         9
312: invokestatic  #31
315: aload         9
317: invokestatic  #32
320: ldc           #35
322: invokestatic  #34
325: aload         14
327: invokestatic  #31
330: aload         14
332: invokestatic  #32
335: ldc           #35
337: invokestatic  #34
340: new           #39
343: dup
344: invokespecial #40
347: ldc           #41
349: invokevirtual #42
352: iload         15
354: invokevirtual #43
357: ldc           #44
359: invokevirtual #42
362: iconst_0
363: invokevirtual #43
366: ldc           #41
368: invokevirtual #42
371: invokevirtual #45
374: iload         15
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #46
387: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 343
End line: 357
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) 100.0f);
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: invokevirtual #84
46: aload_1
47: getfield      #72
50: astore        5
52: aload_1
53: ldc2_w        #48
56: invokevirtual #85
59: aload_1
60: invokevirtual #37
63: istore        6
65: aload_2
66: invokestatic  #30
69: dload_3
70: invokestatic  #86
73: invokestatic  #87
76: aload         5
78: invokestatic  #30
81: new           #39
84: dup
85: invokespecial #40
88: ldc           #41
90: invokevirtual #42
93: iload         6
95: invokevirtual #43
98: ldc           #44
100: invokevirtual #42
103: iconst_1
104: invokevirtual #43
107: ldc           #41
109: invokevirtual #42
112: invokevirtual #45
115: iload         6
117: iconst_1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #46
129: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 360
End line: 372
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double[] doubleArray3 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray4 = levenbergMarquardtOptimizer0.objective;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #88
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: getfield      #56
46: astore        4
48: aload_1
49: getfield      #56
52: astore        5
54: aload_2
55: invokestatic  #30
58: aload_3
59: invokestatic  #30
62: aload         4
64: invokestatic  #30
67: aload         5
69: invokestatic  #30
72: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 375
End line: 419
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        double double30 = levenbergMarquardtOptimizer0.cost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #89
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: getfield      #50
215: dstore        20
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload_2
230: invokevirtual #43
233: ldc           #44
235: invokevirtual #42
238: iconst_0
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload_2
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload_3
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload_3
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #46
307: aload         4
309: invokestatic  #30
312: new           #39
315: dup
316: invokespecial #40
319: ldc           #41
321: invokevirtual #42
324: iload         6
326: invokevirtual #43
329: ldc           #44
331: invokevirtual #42
334: iconst_0
335: invokevirtual #43
338: ldc           #41
340: invokevirtual #42
343: invokevirtual #45
346: iload         6
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #46
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         7
373: invokevirtual #43
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #43
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         7
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #46
406: aload         8
408: invokestatic  #31
411: aload         8
413: invokestatic  #32
416: ldc           #33
418: invokestatic  #34
421: aload         9
423: invokestatic  #31
426: aload         10
428: invokestatic  #31
431: aload         10
433: invokestatic  #32
436: ldc           #33
438: invokestatic  #34
441: aload         11
443: invokestatic  #31
446: aload         12
448: invokestatic  #31
451: aload         13
453: invokestatic  #31
456: aload         13
458: invokestatic  #32
461: ldc           #35
463: invokestatic  #34
466: aload         18
468: invokestatic  #31
471: aload         18
473: invokestatic  #32
476: ldc           #35
478: invokestatic  #34
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: iload         19
495: invokevirtual #43
498: ldc           #44
500: invokevirtual #42
503: iconst_0
504: invokevirtual #43
507: ldc           #41
509: invokevirtual #42
512: invokevirtual #45
515: iload         19
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #46
528: new           #39
531: dup
532: invokespecial #40
535: ldc           #41
537: invokevirtual #42
540: dload         20
542: invokevirtual #51
545: ldc           #44
547: invokevirtual #42
550: dconst_0
551: invokevirtual #51
554: ldc           #41
556: invokevirtual #42
559: invokevirtual #45
562: dload         20
564: dconst_0
565: dcmpl
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #46
577: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 422
End line: 432
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d);
        levenbergMarquardtOptimizer0.setMaxIterations(1000);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #90
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: dconst_0
44: invokevirtual #78
47: aload_1
48: sipush        1000
51: invokevirtual #91
54: aload_2
55: invokestatic  #30
58: aload_3
59: invokestatic  #30
62: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 435
End line: 512
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 1000);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int4 = levenbergMarquardtOptimizer3.getIterations();
        levenbergMarquardtOptimizer3.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker9 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray14 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix15 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray14);
        double[] doubleArray20 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix21 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray20);
        realMatrix15.setRow(0, doubleArray20);
        org.apache.commons.math.linear.BigMatrix bigMatrix23 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray20);
        double[] doubleArray25 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable26 = null;
        java.lang.Object[] objArray27 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(doubleArray25, localizable26, objArray27);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair29 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray25);
        double[] doubleArray33 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix34 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray33);
        double[] doubleArray39 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix40 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray39);
        realMatrix34.setRow(0, doubleArray39);
        org.apache.commons.math.linear.BigMatrix bigMatrix42 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray39);
        double[] doubleArray46 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix47 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray46);
        double[] doubleArray52 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix53 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray52);
        realMatrix47.setRow(0, doubleArray52);
        org.apache.commons.math.linear.BigMatrix bigMatrix55 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray52);
        double[] doubleArray57 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable58 = null;
        java.lang.Object[] objArray59 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(doubleArray57, localizable58, objArray59);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray57);
        double[] doubleArray62 = vectorialPointValuePair61.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray62, true);
        boolean boolean65 = simpleVectorialValueChecker9.converged((int) (short) 1, vectorialPointValuePair29, vectorialPointValuePair64);
        levenbergMarquardtOptimizer3.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker9);
        int int67 = levenbergMarquardtOptimizer3.getMaxIterations();
        int int68 = levenbergMarquardtOptimizer3.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker69 = levenbergMarquardtOptimizer3.checker;
        levenbergMarquardtOptimizer0.checker = vectorialConvergenceChecker69;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(bigMatrix23);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix40);
        org.junit.Assert.assertNotNull(bigMatrix42);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix47);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix53);
        org.junit.Assert.assertNotNull(bigMatrix55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1000 + "'", int67 == 1000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1000 + "'", int68 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #92
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc2_w        #93
36: invokevirtual #78
39: new           #8
42: dup
43: invokespecial #9
46: astore_2
47: aload_2
48: invokevirtual #37
51: istore_3
52: aload_2
53: ldc2_w        #48
56: putfield      #50
59: new           #61
62: dup
63: ldc2_w        #62
66: dconst_1
67: invokespecial #64
70: astore        4
72: iconst_3
73: newarray       double
75: dup
76: iconst_0
77: dconst_1
78: dastore
79: dup
80: iconst_1
81: dconst_0
82: dastore
83: dup
84: iconst_2
85: ldc2_w        #11
88: dastore
89: astore        5
91: aload         5
93: invokestatic  #13
96: astore        6
98: iconst_3
99: newarray       double
101: dup
102: iconst_0
103: dconst_1
104: dastore
105: dup
106: iconst_1
107: dconst_0
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #11
114: dastore
115: astore        7
117: aload         7
119: invokestatic  #13
122: astore        8
124: aload         6
126: iconst_0
127: aload         7
129: invokeinterface #14,  3
134: aload         7
136: invokestatic  #15
139: astore        9
141: iconst_1
142: newarray       double
144: dup
145: iconst_0
146: ldc2_w        #16
149: dastore
150: astore        10
152: aconst_null
153: astore        11
155: aconst_null
156: astore        12
158: new           #18
161: dup
162: aload         10
164: aload         11
166: aload         12
168: invokespecial #19
171: astore        13
173: new           #20
176: dup
177: aload         7
179: aload         10
181: invokespecial #21
184: astore        14
186: iconst_3
187: newarray       double
189: dup
190: iconst_0
191: dconst_1
192: dastore
193: dup
194: iconst_1
195: dconst_0
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #11
202: dastore
203: astore        15
205: aload         15
207: invokestatic  #13
210: astore        16
212: iconst_3
213: newarray       double
215: dup
216: iconst_0
217: dconst_1
218: dastore
219: dup
220: iconst_1
221: dconst_0
222: dastore
223: dup
224: iconst_2
225: ldc2_w        #11
228: dastore
229: astore        17
231: aload         17
233: invokestatic  #13
236: astore        18
238: aload         16
240: iconst_0
241: aload         17
243: invokeinterface #14,  3
248: aload         17
250: invokestatic  #15
253: astore        19
255: iconst_3
256: newarray       double
258: dup
259: iconst_0
260: dconst_1
261: dastore
262: dup
263: iconst_1
264: dconst_0
265: dastore
266: dup
267: iconst_2
268: ldc2_w        #11
271: dastore
272: astore        20
274: aload         20
276: invokestatic  #13
279: astore        21
281: iconst_3
282: newarray       double
284: dup
285: iconst_0
286: dconst_1
287: dastore
288: dup
289: iconst_1
290: dconst_0
291: dastore
292: dup
293: iconst_2
294: ldc2_w        #11
297: dastore
298: astore        22
300: aload         22
302: invokestatic  #13
305: astore        23
307: aload         21
309: iconst_0
310: aload         22
312: invokeinterface #14,  3
317: aload         22
319: invokestatic  #15
322: astore        24
324: iconst_1
325: newarray       double
327: dup
328: iconst_0
329: ldc2_w        #16
332: dastore
333: astore        25
335: aconst_null
336: astore        26
338: aconst_null
339: astore        27
341: new           #18
344: dup
345: aload         25
347: aload         26
349: aload         27
351: invokespecial #19
354: astore        28
356: new           #20
359: dup
360: aload         22
362: aload         25
364: invokespecial #21
367: astore        29
369: aload         29
371: invokevirtual #22
374: astore        30
376: new           #20
379: dup
380: aload         17
382: aload         30
384: iconst_1
385: invokespecial #23
388: astore        31
390: aload         4
392: iconst_1
393: aload         14
395: aload         31
397: invokevirtual #65
400: istore        32
402: aload_2
403: aload         4
405: invokevirtual #66
408: aload_2
409: invokevirtual #59
412: istore        33
414: aload_2
415: invokevirtual #59
418: istore        34
420: aload_2
421: getfield      #53
424: astore        35
426: aload_1
427: aload         35
429: putfield      #53
432: new           #39
435: dup
436: invokespecial #40
439: ldc           #41
441: invokevirtual #42
444: iload_3
445: invokevirtual #43
448: ldc           #44
450: invokevirtual #42
453: iconst_0
454: invokevirtual #43
457: ldc           #41
459: invokevirtual #42
462: invokevirtual #45
465: iload_3
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #46
477: aload         5
479: invokestatic  #31
482: aload         5
484: invokestatic  #32
487: ldc           #33
489: invokestatic  #34
492: aload         6
494: invokestatic  #31
497: aload         7
499: invokestatic  #31
502: aload         7
504: invokestatic  #32
507: ldc           #33
509: invokestatic  #34
512: aload         8
514: invokestatic  #31
517: aload         9
519: invokestatic  #31
522: aload         10
524: invokestatic  #31
527: aload         10
529: invokestatic  #32
532: ldc           #35
534: invokestatic  #34
537: aload         15
539: invokestatic  #31
542: aload         15
544: invokestatic  #32
547: ldc           #33
549: invokestatic  #34
552: aload         16
554: invokestatic  #31
557: aload         17
559: invokestatic  #31
562: aload         17
564: invokestatic  #32
567: ldc           #33
569: invokestatic  #34
572: aload         18
574: invokestatic  #31
577: aload         19
579: invokestatic  #31
582: aload         20
584: invokestatic  #31
587: aload         20
589: invokestatic  #32
592: ldc           #33
594: invokestatic  #34
597: aload         21
599: invokestatic  #31
602: aload         22
604: invokestatic  #31
607: aload         22
609: invokestatic  #32
612: ldc           #33
614: invokestatic  #34
617: aload         23
619: invokestatic  #31
622: aload         24
624: invokestatic  #31
627: aload         25
629: invokestatic  #31
632: aload         25
634: invokestatic  #32
637: ldc           #35
639: invokestatic  #34
642: aload         30
644: invokestatic  #31
647: aload         30
649: invokestatic  #32
652: ldc           #35
654: invokestatic  #34
657: new           #39
660: dup
661: invokespecial #40
664: ldc           #41
666: invokevirtual #42
669: iload         32
671: invokevirtual #69
674: ldc           #44
676: invokevirtual #42
679: iconst_1
680: invokevirtual #69
683: ldc           #41
685: invokevirtual #42
688: invokevirtual #45
691: iload         32
693: iconst_1
694: if_icmpne     701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #46
705: new           #39
708: dup
709: invokespecial #40
712: ldc           #41
714: invokevirtual #42
717: iload         33
719: invokevirtual #43
722: ldc           #44
724: invokevirtual #42
727: sipush        1000
730: invokevirtual #43
733: ldc           #41
735: invokevirtual #42
738: invokevirtual #45
741: iload         33
743: sipush        1000
746: if_icmpne     753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #46
757: new           #39
760: dup
761: invokespecial #40
764: ldc           #41
766: invokevirtual #42
769: iload         34
771: invokevirtual #43
774: ldc           #44
776: invokevirtual #42
779: sipush        1000
782: invokevirtual #43
785: ldc           #41
787: invokevirtual #42
790: invokevirtual #45
793: iload         34
795: sipush        1000
798: if_icmpne     805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #46
809: aload         35
811: invokestatic  #31
814: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 515
End line: 527
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        int int3 = levenbergMarquardtOptimizer0.rows;
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) (byte) 10);
        levenbergMarquardtOptimizer0.rows = 5;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #95
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: getfield      #81
46: istore        5
48: aload_1
49: ldc2_w        #62
52: invokevirtual #96
55: aload_1
56: iconst_5
57: putfield      #81
60: aload_2
61: invokestatic  #30
64: dload_3
65: invokestatic  #86
68: invokestatic  #87
71: new           #39
74: dup
75: invokespecial #40
78: ldc           #41
80: invokevirtual #42
83: iload         5
85: invokevirtual #43
88: ldc           #44
90: invokevirtual #42
93: iconst_0
94: invokevirtual #43
97: ldc           #41
99: invokevirtual #42
102: invokevirtual #45
105: iload         5
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #46
118: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 530
End line: 549
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        int int4 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray5 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #97
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: aload_1
49: invokevirtual #57
52: istore        5
54: aload_1
55: invokevirtual #67
58: astore        6
60: ldc           #68
62: invokestatic  #28
65: goto          70
68: astore        6
70: new           #39
73: dup
74: invokespecial #40
77: ldc           #41
79: invokevirtual #42
82: iload_2
83: invokevirtual #43
86: ldc           #44
88: invokevirtual #42
91: iconst_0
92: invokevirtual #43
95: ldc           #41
97: invokevirtual #42
100: invokevirtual #45
103: iload_2
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #46
115: new           #39
118: dup
119: invokespecial #40
122: ldc           #41
124: invokevirtual #42
127: iload_3
128: invokevirtual #43
131: ldc           #44
133: invokevirtual #42
136: iconst_0
137: invokevirtual #43
140: ldc           #41
142: invokevirtual #42
145: invokevirtual #45
148: iload_3
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #46
160: aload         4
162: invokestatic  #30
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         5
179: invokevirtual #43
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #43
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         5
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #46
212: return
Exception table:
from    to  target type
54    65    68   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 552
End line: 565
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        int int6 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #98
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: getfield      #81
57: istore        5
59: aload_2
60: invokestatic  #30
63: new           #39
66: dup
67: invokespecial #40
70: ldc           #41
72: invokevirtual #42
75: iload_3
76: invokevirtual #43
79: ldc           #44
81: invokevirtual #42
84: iconst_0
85: invokevirtual #43
88: ldc           #41
90: invokevirtual #42
93: invokevirtual #45
96: iload_3
97: ifne          104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #46
108: aload         4
110: invokestatic  #30
113: new           #39
116: dup
117: invokespecial #40
120: ldc           #41
122: invokevirtual #42
125: iload         5
127: invokevirtual #43
130: ldc           #44
132: invokevirtual #42
135: iconst_0
136: invokevirtual #43
139: ldc           #41
141: invokevirtual #42
144: invokevirtual #45
147: iload         5
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #46
160: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 568
End line: 581
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residualsWeights;
        double[] doubleArray5 = null;
        levenbergMarquardtOptimizer0.objective = doubleArray5;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNull(doubleArray4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #99
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: invokevirtual #84
46: aload_1
47: getfield      #72
50: astore        5
52: aconst_null
53: astore        6
55: aload_1
56: aload         6
58: putfield      #56
61: aload_2
62: invokestatic  #30
65: dload_3
66: invokestatic  #86
69: invokestatic  #87
72: aload         5
74: invokestatic  #30
77: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 584
End line: 661
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        int int64 = levenbergMarquardtOptimizer0.getMaxIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1000 + "'", int64 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #100
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: invokevirtual #59
394: istore        32
396: aload_1
397: invokevirtual #101
400: astore        33
402: ldc           #102
404: invokestatic  #28
407: goto          412
410: astore        33
412: new           #39
415: dup
416: invokespecial #40
419: ldc           #41
421: invokevirtual #42
424: iload_2
425: invokevirtual #43
428: ldc           #44
430: invokevirtual #42
433: iconst_0
434: invokevirtual #43
437: ldc           #41
439: invokevirtual #42
442: invokevirtual #45
445: iload_2
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #46
457: aload         4
459: invokestatic  #31
462: aload         4
464: invokestatic  #32
467: ldc           #33
469: invokestatic  #34
472: aload         5
474: invokestatic  #31
477: aload         6
479: invokestatic  #31
482: aload         6
484: invokestatic  #32
487: ldc           #33
489: invokestatic  #34
492: aload         7
494: invokestatic  #31
497: aload         8
499: invokestatic  #31
502: aload         9
504: invokestatic  #31
507: aload         9
509: invokestatic  #32
512: ldc           #35
514: invokestatic  #34
517: aload         14
519: invokestatic  #31
522: aload         14
524: invokestatic  #32
527: ldc           #33
529: invokestatic  #34
532: aload         15
534: invokestatic  #31
537: aload         16
539: invokestatic  #31
542: aload         16
544: invokestatic  #32
547: ldc           #33
549: invokestatic  #34
552: aload         17
554: invokestatic  #31
557: aload         18
559: invokestatic  #31
562: aload         19
564: invokestatic  #31
567: aload         19
569: invokestatic  #32
572: ldc           #33
574: invokestatic  #34
577: aload         20
579: invokestatic  #31
582: aload         21
584: invokestatic  #31
587: aload         21
589: invokestatic  #32
592: ldc           #33
594: invokestatic  #34
597: aload         22
599: invokestatic  #31
602: aload         23
604: invokestatic  #31
607: aload         24
609: invokestatic  #31
612: aload         24
614: invokestatic  #32
617: ldc           #35
619: invokestatic  #34
622: aload         29
624: invokestatic  #31
627: aload         29
629: invokestatic  #32
632: ldc           #35
634: invokestatic  #34
637: new           #39
640: dup
641: invokespecial #40
644: ldc           #41
646: invokevirtual #42
649: iload         31
651: invokevirtual #69
654: ldc           #44
656: invokevirtual #42
659: iconst_1
660: invokevirtual #69
663: ldc           #41
665: invokevirtual #42
668: invokevirtual #45
671: iload         31
673: iconst_1
674: if_icmpne     681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #46
685: new           #39
688: dup
689: invokespecial #40
692: ldc           #41
694: invokevirtual #42
697: iload         32
699: invokevirtual #43
702: ldc           #44
704: invokevirtual #42
707: sipush        1000
710: invokevirtual #43
713: ldc           #41
715: invokevirtual #42
718: invokevirtual #45
721: iload         32
723: sipush        1000
726: if_icmpne     733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #46
737: return
Exception table:
from    to  target type
396   407   410   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 664
End line: 676
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker5 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker5);
        int int7 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #104
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: new           #61
45: dup
46: ldc2_w        #62
49: dconst_1
50: invokespecial #64
53: astore        4
55: aload_1
56: aload         4
58: invokevirtual #66
61: aload_1
62: getfield      #81
65: istore        5
67: aload_2
68: invokestatic  #30
71: aload_3
72: invokestatic  #30
75: new           #39
78: dup
79: invokespecial #40
82: ldc           #41
84: invokevirtual #42
87: iload         5
89: invokevirtual #43
92: ldc           #44
94: invokevirtual #42
97: iconst_0
98: invokevirtual #43
101: ldc           #41
103: invokevirtual #42
106: invokevirtual #45
109: iload         5
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #46
122: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 679
End line: 764
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        int int4 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.exception.Localizable localizable6 = null;
        java.lang.Object[] objArray7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, localizable6, objArray7);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException20 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0d, eOFException20 };
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray21);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException33 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray32);
        java.util.NoSuchElementException noSuchElementException34 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException22, "", objArray32);
        org.apache.commons.math.exception.Localizable localizable36 = convergenceException35.getLocalizablePattern();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException45 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException8, (double) (-1L), localizable36, objArray44);
        java.lang.Object[] objArray47 = null;
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException48 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable36, objArray47);
        org.apache.commons.math.exception.Localizable localizable50 = null;
        java.lang.Object[] objArray60 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException61 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray60);
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1.0d, eOFException61 };
        java.lang.ArithmeticException arithmeticException63 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray62);
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException74 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray73);
        java.util.NoSuchElementException noSuchElementException75 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException63, "", objArray73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(0.0d, localizable50, objArray73);
        org.apache.commons.math.MathRuntimeException mathRuntimeException78 = new org.apache.commons.math.MathRuntimeException(localizable36, objArray73);
        org.apache.commons.math.exception.Localizable localizable79 = null;
        double[] doubleArray85 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray86 = new double[][] { doubleArray85 };
        org.apache.commons.math.linear.BigMatrix bigMatrix87 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray86);
        java.io.EOFException eOFException88 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable79, (java.lang.Object[]) doubleArray86);
        java.lang.IllegalArgumentException illegalArgumentException89 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable36, (java.lang.Object[]) doubleArray86);
        levenbergMarquardtOptimizer0.jacobian = doubleArray86;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException22);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException33);
        org.junit.Assert.assertNotNull(noSuchElementException34);
        org.junit.Assert.assertNotNull(localizable36);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException48);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException63);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException74);
        org.junit.Assert.assertNotNull(noSuchElementException75);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(bigMatrix87);
        org.junit.Assert.assertNotNull(eOFException88);
        org.junit.Assert.assertNotNull(illegalArgumentException89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #105
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: aload_1
49: invokevirtual #57
52: istore        5
54: aconst_null
55: astore        6
57: aconst_null
58: astore        7
60: new           #18
63: dup
64: ldc2_w        #48
67: aload         6
69: aload         7
71: invokespecial #106
74: astore        8
76: bipush        6
78: anewarray     #5
81: dup
82: iconst_0
83: dconst_1
84: invokestatic  #107
87: aastore
88: dup
89: iconst_1
90: ldc           #108
92: invokestatic  #109
95: aastore
96: dup
97: iconst_2
98: ldc           #108
100: invokestatic  #109
103: aastore
104: dup
105: iconst_3
106: iconst_0
107: invokestatic  #110
110: aastore
111: dup
112: iconst_4
113: iconst_1
114: invokestatic  #111
117: aastore
118: dup
119: iconst_5
120: iconst_0
121: invokestatic  #111
124: aastore
125: astore        9
127: ldc           #112
129: aload         9
131: invokestatic  #113
134: astore        10
136: iconst_2
137: anewarray     #5
140: dup
141: iconst_0
142: dconst_1
143: invokestatic  #107
146: aastore
147: dup
148: iconst_1
149: aload         10
151: aastore
152: astore        11
154: ldc           #112
156: aload         11
158: invokestatic  #114
161: astore        12
163: bipush        6
165: anewarray     #5
168: dup
169: iconst_0
170: dconst_1
171: invokestatic  #107
174: aastore
175: dup
176: iconst_1
177: ldc           #108
179: invokestatic  #109
182: aastore
183: dup
184: iconst_2
185: ldc           #108
187: invokestatic  #109
190: aastore
191: dup
192: iconst_3
193: iconst_0
194: invokestatic  #110
197: aastore
198: dup
199: iconst_4
200: iconst_1
201: invokestatic  #111
204: aastore
205: dup
206: iconst_5
207: iconst_0
208: invokestatic  #111
211: aastore
212: astore        13
214: ldc           #112
216: aload         13
218: invokestatic  #113
221: astore        14
223: ldc           #115
225: aload         13
227: invokestatic  #116
230: astore        15
232: new           #117
235: dup
236: aload         12
238: ldc           #112
240: aload         13
242: invokespecial #118
245: astore        16
247: aload         16
249: invokevirtual #119
252: astore        17
254: bipush        6
256: anewarray     #5
259: dup
260: iconst_0
261: dconst_1
262: invokestatic  #107
265: aastore
266: dup
267: iconst_1
268: ldc           #108
270: invokestatic  #109
273: aastore
274: dup
275: iconst_2
276: ldc           #108
278: invokestatic  #109
281: aastore
282: dup
283: iconst_3
284: iconst_0
285: invokestatic  #110
288: aastore
289: dup
290: iconst_4
291: iconst_1
292: invokestatic  #111
295: aastore
296: dup
297: iconst_5
298: iconst_0
299: invokestatic  #111
302: aastore
303: astore        18
305: ldc           #112
307: aload         18
309: invokestatic  #113
312: astore        19
314: new           #18
317: dup
318: aload         8
320: ldc2_w        #11
323: aload         17
325: aload         18
327: invokespecial #120
330: astore        20
332: aconst_null
333: astore        21
335: aload         17
337: aload         21
339: invokestatic  #121
342: astore        22
344: aconst_null
345: astore        23
347: bipush        6
349: anewarray     #5
352: dup
353: iconst_0
354: dconst_1
355: invokestatic  #107
358: aastore
359: dup
360: iconst_1
361: ldc           #108
363: invokestatic  #109
366: aastore
367: dup
368: iconst_2
369: ldc           #108
371: invokestatic  #109
374: aastore
375: dup
376: iconst_3
377: iconst_0
378: invokestatic  #110
381: aastore
382: dup
383: iconst_4
384: iconst_1
385: invokestatic  #111
388: aastore
389: dup
390: iconst_5
391: iconst_0
392: invokestatic  #111
395: aastore
396: astore        24
398: ldc           #112
400: aload         24
402: invokestatic  #113
405: astore        25
407: iconst_2
408: anewarray     #5
411: dup
412: iconst_0
413: dconst_1
414: invokestatic  #107
417: aastore
418: dup
419: iconst_1
420: aload         25
422: aastore
423: astore        26
425: ldc           #112
427: aload         26
429: invokestatic  #114
432: astore        27
434: bipush        6
436: anewarray     #5
439: dup
440: iconst_0
441: dconst_1
442: invokestatic  #107
445: aastore
446: dup
447: iconst_1
448: ldc           #108
450: invokestatic  #109
453: aastore
454: dup
455: iconst_2
456: ldc           #108
458: invokestatic  #109
461: aastore
462: dup
463: iconst_3
464: iconst_0
465: invokestatic  #110
468: aastore
469: dup
470: iconst_4
471: iconst_1
472: invokestatic  #111
475: aastore
476: dup
477: iconst_5
478: iconst_0
479: invokestatic  #111
482: aastore
483: astore        28
485: ldc           #112
487: aload         28
489: invokestatic  #113
492: astore        29
494: ldc           #115
496: aload         28
498: invokestatic  #116
501: astore        30
503: new           #117
506: dup
507: aload         27
509: ldc           #112
511: aload         28
513: invokespecial #118
516: astore        31
518: new           #18
521: dup
522: dconst_0
523: aload         23
525: aload         28
527: invokespecial #106
530: astore        32
532: new           #122
535: dup
536: aload         17
538: aload         28
540: invokespecial #123
543: astore        33
545: aconst_null
546: astore        34
548: iconst_5
549: newarray       double
551: dup
552: iconst_0
553: ldc2_w        #124
556: dastore
557: dup
558: iconst_1
559: ldc2_w        #62
562: dastore
563: dup
564: iconst_2
565: ldc2_w        #48
568: dastore
569: dup
570: iconst_3
571: ldc2_w        #16
574: dastore
575: dup
576: iconst_4
577: ldc2_w        #11
580: dastore
581: astore        35
583: iconst_1
584: anewarray     #126
587: dup
588: iconst_0
589: aload         35
591: aastore
592: astore        36
594: aload         36
596: invokestatic  #127
599: astore        37
601: aload         34
603: aload         36
605: checkcast     #128
608: invokestatic  #129
611: astore        38
613: aload         17
615: aload         36
617: checkcast     #128
620: invokestatic  #130
623: astore        39
625: aload_1
626: aload         36
628: putfield      #54
631: new           #39
634: dup
635: invokespecial #40
638: ldc           #41
640: invokevirtual #42
643: iload_2
644: invokevirtual #43
647: ldc           #44
649: invokevirtual #42
652: iconst_0
653: invokevirtual #43
656: ldc           #41
658: invokevirtual #42
661: invokevirtual #45
664: iload_2
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #46
676: new           #39
679: dup
680: invokespecial #40
683: ldc           #41
685: invokevirtual #42
688: iload_3
689: invokevirtual #43
692: ldc           #44
694: invokevirtual #42
697: iconst_0
698: invokevirtual #43
701: ldc           #41
703: invokevirtual #42
706: invokevirtual #45
709: iload_3
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #46
721: aload         4
723: invokestatic  #30
726: new           #39
729: dup
730: invokespecial #40
733: ldc           #41
735: invokevirtual #42
738: iload         5
740: invokevirtual #43
743: ldc           #44
745: invokevirtual #42
748: iconst_0
749: invokevirtual #43
752: ldc           #41
754: invokevirtual #42
757: invokevirtual #45
760: iload         5
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #46
773: aload         9
775: invokestatic  #31
778: aload         9
780: invokestatic  #131
783: ldc           #132
785: invokestatic  #34
788: aload         9
790: invokestatic  #133
793: ldc           #132
795: invokestatic  #34
798: aload         10
800: invokestatic  #31
803: aload         11
805: invokestatic  #31
808: aload         11
810: invokestatic  #131
813: ldc           #134
815: invokestatic  #34
818: aload         11
820: invokestatic  #133
823: ldc           #134
825: invokestatic  #34
828: aload         12
830: invokestatic  #31
833: aload         13
835: invokestatic  #31
838: aload         13
840: invokestatic  #131
843: ldc           #132
845: invokestatic  #34
848: aload         13
850: invokestatic  #133
853: ldc           #132
855: invokestatic  #34
858: aload         14
860: invokestatic  #31
863: aload         15
865: invokestatic  #31
868: aload         17
870: invokestatic  #31
873: aload         18
875: invokestatic  #31
878: aload         18
880: invokestatic  #131
883: ldc           #132
885: invokestatic  #34
888: aload         18
890: invokestatic  #133
893: ldc           #132
895: invokestatic  #34
898: aload         19
900: invokestatic  #31
903: aload         22
905: invokestatic  #31
908: aload         24
910: invokestatic  #31
913: aload         24
915: invokestatic  #131
918: ldc           #132
920: invokestatic  #34
923: aload         24
925: invokestatic  #133
928: ldc           #132
930: invokestatic  #34
933: aload         25
935: invokestatic  #31
938: aload         26
940: invokestatic  #31
943: aload         26
945: invokestatic  #131
948: ldc           #134
950: invokestatic  #34
953: aload         26
955: invokestatic  #133
958: ldc           #134
960: invokestatic  #34
963: aload         27
965: invokestatic  #31
968: aload         28
970: invokestatic  #31
973: aload         28
975: invokestatic  #131
978: ldc           #132
980: invokestatic  #34
983: aload         28
985: invokestatic  #133
988: ldc           #132
990: invokestatic  #34
993: aload         29
995: invokestatic  #31
998: aload         30
1000: invokestatic  #31
1003: aload         35
1005: invokestatic  #31
1008: aload         35
1010: invokestatic  #32
1013: ldc           #135
1015: invokestatic  #34
1018: aload         36
1020: invokestatic  #31
1023: aload         37
1025: invokestatic  #31
1028: aload         38
1030: invokestatic  #31
1033: aload         39
1035: invokestatic  #31
1038: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 767
End line: 778
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(100.0d);
        int int5 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #136
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #48
46: invokevirtual #96
49: aload_1
50: getfield      #58
53: istore        5
55: aload_2
56: invokestatic  #30
59: dload_3
60: invokestatic  #86
63: invokestatic  #87
66: new           #39
69: dup
70: invokespecial #40
73: ldc           #41
75: invokevirtual #42
78: iload         5
80: invokevirtual #43
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #43
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload         5
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #46
113: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 781
End line: 793
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        levenbergMarquardtOptimizer0.setParRelativeTolerance(0.0d);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #137
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: dconst_0
55: invokevirtual #138
58: aload_2
59: invokestatic  #30
62: new           #39
65: dup
66: invokespecial #40
69: ldc           #41
71: invokevirtual #42
74: iload_3
75: invokevirtual #43
78: ldc           #44
80: invokevirtual #42
83: iconst_0
84: invokevirtual #43
87: ldc           #41
89: invokevirtual #42
92: invokevirtual #45
95: iload_3
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #46
107: aload         4
109: invokestatic  #30
112: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 796
End line: 892
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        int int4 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray8 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix9 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray8);
        double[] doubleArray14 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix15 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray14);
        realMatrix9.setRow(0, doubleArray14);
        org.apache.commons.math.linear.BigMatrix bigMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray14);
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable20 = null;
        java.lang.Object[] objArray21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray19, localizable20, objArray21);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray19);
        double[] doubleArray24 = vectorialPointValuePair23.getValueRef();
        org.apache.commons.math.exception.Localizable localizable26 = null;
        java.lang.Object[] objArray27 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, localizable26, objArray27);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException40 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray39);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0d, eOFException40 };
        java.lang.ArithmeticException arithmeticException42 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray41);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray52);
        java.util.NoSuchElementException noSuchElementException54 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException42, "", objArray52);
        org.apache.commons.math.exception.Localizable localizable56 = convergenceException55.getLocalizablePattern();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException28, (double) (-1L), localizable56, objArray64);
        org.apache.commons.math.exception.Localizable localizable67 = null;
        double[] doubleArray73 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray74 = new double[][] { doubleArray73 };
        org.apache.commons.math.linear.BigMatrix bigMatrix75 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.io.EOFException eOFException76 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable67, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.linear.BigMatrix bigMatrix77 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.lang.ArithmeticException arithmeticException78 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable56, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.exception.Localizable localizable79 = null;
        double[] doubleArray85 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray86 = new double[][] { doubleArray85 };
        org.apache.commons.math.linear.BigMatrix bigMatrix87 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray86);
        java.util.NoSuchElementException noSuchElementException88 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable79, (java.lang.Object[]) doubleArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24, localizable56, (java.lang.Object[]) doubleArray86);
        levenbergMarquardtOptimizer0.residuals = doubleArray24;
        int int91 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(bigMatrix17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException42);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException53);
        org.junit.Assert.assertNotNull(noSuchElementException54);
        org.junit.Assert.assertNotNull(localizable56);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(bigMatrix75);
        org.junit.Assert.assertNotNull(eOFException76);
        org.junit.Assert.assertNotNull(bigMatrix77);
        org.junit.Assert.assertNotNull(arithmeticException78);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(bigMatrix87);
        org.junit.Assert.assertNotNull(noSuchElementException88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: aload_1
49: invokevirtual #57
52: istore        5
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: dup
62: iconst_1
63: dconst_0
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #11
70: dastore
71: astore        6
73: aload         6
75: invokestatic  #13
78: astore        7
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_1
86: dastore
87: dup
88: iconst_1
89: dconst_0
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #11
96: dastore
97: astore        8
99: aload         8
101: invokestatic  #13
104: astore        9
106: aload         7
108: iconst_0
109: aload         8
111: invokeinterface #14,  3
116: aload         8
118: invokestatic  #15
121: astore        10
123: iconst_1
124: newarray       double
126: dup
127: iconst_0
128: ldc2_w        #16
131: dastore
132: astore        11
134: aconst_null
135: astore        12
137: aconst_null
138: astore        13
140: new           #18
143: dup
144: aload         11
146: aload         12
148: aload         13
150: invokespecial #19
153: astore        14
155: new           #20
158: dup
159: aload         8
161: aload         11
163: invokespecial #21
166: astore        15
168: aload         15
170: invokevirtual #140
173: astore        16
175: aconst_null
176: astore        17
178: aconst_null
179: astore        18
181: new           #18
184: dup
185: ldc2_w        #48
188: aload         17
190: aload         18
192: invokespecial #106
195: astore        19
197: bipush        6
199: anewarray     #5
202: dup
203: iconst_0
204: dconst_1
205: invokestatic  #107
208: aastore
209: dup
210: iconst_1
211: ldc           #108
213: invokestatic  #109
216: aastore
217: dup
218: iconst_2
219: ldc           #108
221: invokestatic  #109
224: aastore
225: dup
226: iconst_3
227: iconst_0
228: invokestatic  #110
231: aastore
232: dup
233: iconst_4
234: iconst_1
235: invokestatic  #111
238: aastore
239: dup
240: iconst_5
241: iconst_0
242: invokestatic  #111
245: aastore
246: astore        20
248: ldc           #112
250: aload         20
252: invokestatic  #113
255: astore        21
257: iconst_2
258: anewarray     #5
261: dup
262: iconst_0
263: dconst_1
264: invokestatic  #107
267: aastore
268: dup
269: iconst_1
270: aload         21
272: aastore
273: astore        22
275: ldc           #112
277: aload         22
279: invokestatic  #114
282: astore        23
284: bipush        6
286: anewarray     #5
289: dup
290: iconst_0
291: dconst_1
292: invokestatic  #107
295: aastore
296: dup
297: iconst_1
298: ldc           #108
300: invokestatic  #109
303: aastore
304: dup
305: iconst_2
306: ldc           #108
308: invokestatic  #109
311: aastore
312: dup
313: iconst_3
314: iconst_0
315: invokestatic  #110
318: aastore
319: dup
320: iconst_4
321: iconst_1
322: invokestatic  #111
325: aastore
326: dup
327: iconst_5
328: iconst_0
329: invokestatic  #111
332: aastore
333: astore        24
335: ldc           #112
337: aload         24
339: invokestatic  #113
342: astore        25
344: ldc           #115
346: aload         24
348: invokestatic  #116
351: astore        26
353: new           #117
356: dup
357: aload         23
359: ldc           #112
361: aload         24
363: invokespecial #118
366: astore        27
368: aload         27
370: invokevirtual #119
373: astore        28
375: bipush        6
377: anewarray     #5
380: dup
381: iconst_0
382: dconst_1
383: invokestatic  #107
386: aastore
387: dup
388: iconst_1
389: ldc           #108
391: invokestatic  #109
394: aastore
395: dup
396: iconst_2
397: ldc           #108
399: invokestatic  #109
402: aastore
403: dup
404: iconst_3
405: iconst_0
406: invokestatic  #110
409: aastore
410: dup
411: iconst_4
412: iconst_1
413: invokestatic  #111
416: aastore
417: dup
418: iconst_5
419: iconst_0
420: invokestatic  #111
423: aastore
424: astore        29
426: ldc           #112
428: aload         29
430: invokestatic  #113
433: astore        30
435: new           #18
438: dup
439: aload         19
441: ldc2_w        #11
444: aload         28
446: aload         29
448: invokespecial #120
451: astore        31
453: aconst_null
454: astore        32
456: iconst_5
457: newarray       double
459: dup
460: iconst_0
461: ldc2_w        #124
464: dastore
465: dup
466: iconst_1
467: ldc2_w        #62
470: dastore
471: dup
472: iconst_2
473: ldc2_w        #48
476: dastore
477: dup
478: iconst_3
479: ldc2_w        #16
482: dastore
483: dup
484: iconst_4
485: ldc2_w        #11
488: dastore
489: astore        33
491: iconst_1
492: anewarray     #126
495: dup
496: iconst_0
497: aload         33
499: aastore
500: astore        34
502: aload         34
504: invokestatic  #127
507: astore        35
509: aload         32
511: aload         34
513: checkcast     #128
516: invokestatic  #129
519: astore        36
521: aload         34
523: invokestatic  #127
526: astore        37
528: aload         28
530: aload         34
532: checkcast     #128
535: invokestatic  #141
538: astore        38
540: aconst_null
541: astore        39
543: iconst_5
544: newarray       double
546: dup
547: iconst_0
548: ldc2_w        #124
551: dastore
552: dup
553: iconst_1
554: ldc2_w        #62
557: dastore
558: dup
559: iconst_2
560: ldc2_w        #48
563: dastore
564: dup
565: iconst_3
566: ldc2_w        #16
569: dastore
570: dup
571: iconst_4
572: ldc2_w        #11
575: dastore
576: astore        40
578: iconst_1
579: anewarray     #126
582: dup
583: iconst_0
584: aload         40
586: aastore
587: astore        41
589: aload         41
591: invokestatic  #127
594: astore        42
596: aload         39
598: aload         41
600: checkcast     #128
603: invokestatic  #142
606: astore        43
608: new           #18
611: dup
612: aload         16
614: aload         28
616: aload         41
618: checkcast     #128
621: invokespecial #19
624: astore        44
626: aload_1
627: aload         16
629: putfield      #76
632: aload_1
633: getfield      #58
636: istore        45
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload_2
651: invokevirtual #43
654: ldc           #44
656: invokevirtual #42
659: iconst_0
660: invokevirtual #43
663: ldc           #41
665: invokevirtual #42
668: invokevirtual #45
671: iload_2
672: ifne          679
675: iconst_1
676: goto          680
679: iconst_0
680: invokestatic  #46
683: new           #39
686: dup
687: invokespecial #40
690: ldc           #41
692: invokevirtual #42
695: iload_3
696: invokevirtual #43
699: ldc           #44
701: invokevirtual #42
704: iconst_0
705: invokevirtual #43
708: ldc           #41
710: invokevirtual #42
713: invokevirtual #45
716: iload_3
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #46
728: aload         4
730: invokestatic  #30
733: new           #39
736: dup
737: invokespecial #40
740: ldc           #41
742: invokevirtual #42
745: iload         5
747: invokevirtual #43
750: ldc           #44
752: invokevirtual #42
755: iconst_0
756: invokevirtual #43
759: ldc           #41
761: invokevirtual #42
764: invokevirtual #45
767: iload         5
769: ifne          776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #46
780: aload         6
782: invokestatic  #31
785: aload         6
787: invokestatic  #32
790: ldc           #33
792: invokestatic  #34
795: aload         7
797: invokestatic  #31
800: aload         8
802: invokestatic  #31
805: aload         8
807: invokestatic  #32
810: ldc           #33
812: invokestatic  #34
815: aload         9
817: invokestatic  #31
820: aload         10
822: invokestatic  #31
825: aload         11
827: invokestatic  #31
830: aload         11
832: invokestatic  #32
835: ldc           #35
837: invokestatic  #34
840: aload         16
842: invokestatic  #31
845: aload         16
847: invokestatic  #32
850: ldc           #35
852: invokestatic  #34
855: aload         20
857: invokestatic  #31
860: aload         20
862: invokestatic  #131
865: ldc           #132
867: invokestatic  #34
870: aload         20
872: invokestatic  #133
875: ldc           #132
877: invokestatic  #34
880: aload         21
882: invokestatic  #31
885: aload         22
887: invokestatic  #31
890: aload         22
892: invokestatic  #131
895: ldc           #134
897: invokestatic  #34
900: aload         22
902: invokestatic  #133
905: ldc           #134
907: invokestatic  #34
910: aload         23
912: invokestatic  #31
915: aload         24
917: invokestatic  #31
920: aload         24
922: invokestatic  #131
925: ldc           #132
927: invokestatic  #34
930: aload         24
932: invokestatic  #133
935: ldc           #132
937: invokestatic  #34
940: aload         25
942: invokestatic  #31
945: aload         26
947: invokestatic  #31
950: aload         28
952: invokestatic  #31
955: aload         29
957: invokestatic  #31
960: aload         29
962: invokestatic  #131
965: ldc           #132
967: invokestatic  #34
970: aload         29
972: invokestatic  #133
975: ldc           #132
977: invokestatic  #34
980: aload         30
982: invokestatic  #31
985: aload         33
987: invokestatic  #31
990: aload         33
992: invokestatic  #32
995: ldc           #135
997: invokestatic  #34
1000: aload         34
1002: invokestatic  #31
1005: aload         35
1007: invokestatic  #31
1010: aload         36
1012: invokestatic  #31
1015: aload         37
1017: invokestatic  #31
1020: aload         38
1022: invokestatic  #31
1025: aload         40
1027: invokestatic  #31
1030: aload         40
1032: invokestatic  #32
1035: ldc           #135
1037: invokestatic  #34
1040: aload         41
1042: invokestatic  #31
1045: aload         42
1047: invokestatic  #31
1050: aload         43
1052: invokestatic  #31
1055: new           #39
1058: dup
1059: invokespecial #40
1062: ldc           #41
1064: invokevirtual #42
1067: iload         45
1069: invokevirtual #43
1072: ldc           #44
1074: invokevirtual #42
1077: iconst_0
1078: invokevirtual #43
1081: ldc           #41
1083: invokevirtual #42
1086: invokevirtual #45
1089: iload         45
1091: ifne          1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #46
1102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 895
End line: 991
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        int int4 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray8 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix9 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray8);
        double[] doubleArray14 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix15 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray14);
        realMatrix9.setRow(0, doubleArray14);
        org.apache.commons.math.linear.BigMatrix bigMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray14);
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable20 = null;
        java.lang.Object[] objArray21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray19, localizable20, objArray21);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray19);
        double[] doubleArray24 = vectorialPointValuePair23.getValueRef();
        org.apache.commons.math.exception.Localizable localizable26 = null;
        java.lang.Object[] objArray27 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, localizable26, objArray27);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException40 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray39);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0d, eOFException40 };
        java.lang.ArithmeticException arithmeticException42 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray41);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray52);
        java.util.NoSuchElementException noSuchElementException54 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException42, "", objArray52);
        org.apache.commons.math.exception.Localizable localizable56 = convergenceException55.getLocalizablePattern();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException28, (double) (-1L), localizable56, objArray64);
        org.apache.commons.math.exception.Localizable localizable67 = null;
        double[] doubleArray73 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray74 = new double[][] { doubleArray73 };
        org.apache.commons.math.linear.BigMatrix bigMatrix75 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.io.EOFException eOFException76 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable67, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.linear.BigMatrix bigMatrix77 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.lang.ArithmeticException arithmeticException78 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable56, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.exception.Localizable localizable79 = null;
        double[] doubleArray85 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray86 = new double[][] { doubleArray85 };
        org.apache.commons.math.linear.BigMatrix bigMatrix87 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray86);
        java.util.NoSuchElementException noSuchElementException88 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable79, (java.lang.Object[]) doubleArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24, localizable56, (java.lang.Object[]) doubleArray86);
        levenbergMarquardtOptimizer0.residuals = doubleArray24;
        org.apache.commons.math.linear.BigMatrix bigMatrix91 = org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(doubleArray24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(bigMatrix17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException42);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException53);
        org.junit.Assert.assertNotNull(noSuchElementException54);
        org.junit.Assert.assertNotNull(localizable56);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(bigMatrix75);
        org.junit.Assert.assertNotNull(eOFException76);
        org.junit.Assert.assertNotNull(bigMatrix77);
        org.junit.Assert.assertNotNull(arithmeticException78);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(bigMatrix87);
        org.junit.Assert.assertNotNull(noSuchElementException88);
        org.junit.Assert.assertNotNull(bigMatrix91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #143
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: aload_1
49: invokevirtual #57
52: istore        5
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: dup
62: iconst_1
63: dconst_0
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #11
70: dastore
71: astore        6
73: aload         6
75: invokestatic  #13
78: astore        7
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_1
86: dastore
87: dup
88: iconst_1
89: dconst_0
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #11
96: dastore
97: astore        8
99: aload         8
101: invokestatic  #13
104: astore        9
106: aload         7
108: iconst_0
109: aload         8
111: invokeinterface #14,  3
116: aload         8
118: invokestatic  #15
121: astore        10
123: iconst_1
124: newarray       double
126: dup
127: iconst_0
128: ldc2_w        #16
131: dastore
132: astore        11
134: aconst_null
135: astore        12
137: aconst_null
138: astore        13
140: new           #18
143: dup
144: aload         11
146: aload         12
148: aload         13
150: invokespecial #19
153: astore        14
155: new           #20
158: dup
159: aload         8
161: aload         11
163: invokespecial #21
166: astore        15
168: aload         15
170: invokevirtual #140
173: astore        16
175: aconst_null
176: astore        17
178: aconst_null
179: astore        18
181: new           #18
184: dup
185: ldc2_w        #48
188: aload         17
190: aload         18
192: invokespecial #106
195: astore        19
197: bipush        6
199: anewarray     #5
202: dup
203: iconst_0
204: dconst_1
205: invokestatic  #107
208: aastore
209: dup
210: iconst_1
211: ldc           #108
213: invokestatic  #109
216: aastore
217: dup
218: iconst_2
219: ldc           #108
221: invokestatic  #109
224: aastore
225: dup
226: iconst_3
227: iconst_0
228: invokestatic  #110
231: aastore
232: dup
233: iconst_4
234: iconst_1
235: invokestatic  #111
238: aastore
239: dup
240: iconst_5
241: iconst_0
242: invokestatic  #111
245: aastore
246: astore        20
248: ldc           #112
250: aload         20
252: invokestatic  #113
255: astore        21
257: iconst_2
258: anewarray     #5
261: dup
262: iconst_0
263: dconst_1
264: invokestatic  #107
267: aastore
268: dup
269: iconst_1
270: aload         21
272: aastore
273: astore        22
275: ldc           #112
277: aload         22
279: invokestatic  #114
282: astore        23
284: bipush        6
286: anewarray     #5
289: dup
290: iconst_0
291: dconst_1
292: invokestatic  #107
295: aastore
296: dup
297: iconst_1
298: ldc           #108
300: invokestatic  #109
303: aastore
304: dup
305: iconst_2
306: ldc           #108
308: invokestatic  #109
311: aastore
312: dup
313: iconst_3
314: iconst_0
315: invokestatic  #110
318: aastore
319: dup
320: iconst_4
321: iconst_1
322: invokestatic  #111
325: aastore
326: dup
327: iconst_5
328: iconst_0
329: invokestatic  #111
332: aastore
333: astore        24
335: ldc           #112
337: aload         24
339: invokestatic  #113
342: astore        25
344: ldc           #115
346: aload         24
348: invokestatic  #116
351: astore        26
353: new           #117
356: dup
357: aload         23
359: ldc           #112
361: aload         24
363: invokespecial #118
366: astore        27
368: aload         27
370: invokevirtual #119
373: astore        28
375: bipush        6
377: anewarray     #5
380: dup
381: iconst_0
382: dconst_1
383: invokestatic  #107
386: aastore
387: dup
388: iconst_1
389: ldc           #108
391: invokestatic  #109
394: aastore
395: dup
396: iconst_2
397: ldc           #108
399: invokestatic  #109
402: aastore
403: dup
404: iconst_3
405: iconst_0
406: invokestatic  #110
409: aastore
410: dup
411: iconst_4
412: iconst_1
413: invokestatic  #111
416: aastore
417: dup
418: iconst_5
419: iconst_0
420: invokestatic  #111
423: aastore
424: astore        29
426: ldc           #112
428: aload         29
430: invokestatic  #113
433: astore        30
435: new           #18
438: dup
439: aload         19
441: ldc2_w        #11
444: aload         28
446: aload         29
448: invokespecial #120
451: astore        31
453: aconst_null
454: astore        32
456: iconst_5
457: newarray       double
459: dup
460: iconst_0
461: ldc2_w        #124
464: dastore
465: dup
466: iconst_1
467: ldc2_w        #62
470: dastore
471: dup
472: iconst_2
473: ldc2_w        #48
476: dastore
477: dup
478: iconst_3
479: ldc2_w        #16
482: dastore
483: dup
484: iconst_4
485: ldc2_w        #11
488: dastore
489: astore        33
491: iconst_1
492: anewarray     #126
495: dup
496: iconst_0
497: aload         33
499: aastore
500: astore        34
502: aload         34
504: invokestatic  #127
507: astore        35
509: aload         32
511: aload         34
513: checkcast     #128
516: invokestatic  #129
519: astore        36
521: aload         34
523: invokestatic  #127
526: astore        37
528: aload         28
530: aload         34
532: checkcast     #128
535: invokestatic  #141
538: astore        38
540: aconst_null
541: astore        39
543: iconst_5
544: newarray       double
546: dup
547: iconst_0
548: ldc2_w        #124
551: dastore
552: dup
553: iconst_1
554: ldc2_w        #62
557: dastore
558: dup
559: iconst_2
560: ldc2_w        #48
563: dastore
564: dup
565: iconst_3
566: ldc2_w        #16
569: dastore
570: dup
571: iconst_4
572: ldc2_w        #11
575: dastore
576: astore        40
578: iconst_1
579: anewarray     #126
582: dup
583: iconst_0
584: aload         40
586: aastore
587: astore        41
589: aload         41
591: invokestatic  #127
594: astore        42
596: aload         39
598: aload         41
600: checkcast     #128
603: invokestatic  #142
606: astore        43
608: new           #18
611: dup
612: aload         16
614: aload         28
616: aload         41
618: checkcast     #128
621: invokespecial #19
624: astore        44
626: aload_1
627: aload         16
629: putfield      #76
632: aload         16
634: invokestatic  #144
637: astore        45
639: new           #39
642: dup
643: invokespecial #40
646: ldc           #41
648: invokevirtual #42
651: iload_2
652: invokevirtual #43
655: ldc           #44
657: invokevirtual #42
660: iconst_0
661: invokevirtual #43
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload_2
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #46
684: new           #39
687: dup
688: invokespecial #40
691: ldc           #41
693: invokevirtual #42
696: iload_3
697: invokevirtual #43
700: ldc           #44
702: invokevirtual #42
705: iconst_0
706: invokevirtual #43
709: ldc           #41
711: invokevirtual #42
714: invokevirtual #45
717: iload_3
718: ifne          725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #46
729: aload         4
731: invokestatic  #30
734: new           #39
737: dup
738: invokespecial #40
741: ldc           #41
743: invokevirtual #42
746: iload         5
748: invokevirtual #43
751: ldc           #44
753: invokevirtual #42
756: iconst_0
757: invokevirtual #43
760: ldc           #41
762: invokevirtual #42
765: invokevirtual #45
768: iload         5
770: ifne          777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #46
781: aload         6
783: invokestatic  #31
786: aload         6
788: invokestatic  #32
791: ldc           #33
793: invokestatic  #34
796: aload         7
798: invokestatic  #31
801: aload         8
803: invokestatic  #31
806: aload         8
808: invokestatic  #32
811: ldc           #33
813: invokestatic  #34
816: aload         9
818: invokestatic  #31
821: aload         10
823: invokestatic  #31
826: aload         11
828: invokestatic  #31
831: aload         11
833: invokestatic  #32
836: ldc           #35
838: invokestatic  #34
841: aload         16
843: invokestatic  #31
846: aload         16
848: invokestatic  #32
851: ldc           #35
853: invokestatic  #34
856: aload         20
858: invokestatic  #31
861: aload         20
863: invokestatic  #131
866: ldc           #132
868: invokestatic  #34
871: aload         20
873: invokestatic  #133
876: ldc           #132
878: invokestatic  #34
881: aload         21
883: invokestatic  #31
886: aload         22
888: invokestatic  #31
891: aload         22
893: invokestatic  #131
896: ldc           #134
898: invokestatic  #34
901: aload         22
903: invokestatic  #133
906: ldc           #134
908: invokestatic  #34
911: aload         23
913: invokestatic  #31
916: aload         24
918: invokestatic  #31
921: aload         24
923: invokestatic  #131
926: ldc           #132
928: invokestatic  #34
931: aload         24
933: invokestatic  #133
936: ldc           #132
938: invokestatic  #34
941: aload         25
943: invokestatic  #31
946: aload         26
948: invokestatic  #31
951: aload         28
953: invokestatic  #31
956: aload         29
958: invokestatic  #31
961: aload         29
963: invokestatic  #131
966: ldc           #132
968: invokestatic  #34
971: aload         29
973: invokestatic  #133
976: ldc           #132
978: invokestatic  #34
981: aload         30
983: invokestatic  #31
986: aload         33
988: invokestatic  #31
991: aload         33
993: invokestatic  #32
996: ldc           #135
998: invokestatic  #34
1001: aload         34
1003: invokestatic  #31
1006: aload         35
1008: invokestatic  #31
1011: aload         36
1013: invokestatic  #31
1016: aload         37
1018: invokestatic  #31
1021: aload         38
1023: invokestatic  #31
1026: aload         40
1028: invokestatic  #31
1031: aload         40
1033: invokestatic  #32
1036: ldc           #135
1038: invokestatic  #34
1041: aload         41
1043: invokestatic  #31
1046: aload         42
1048: invokestatic  #31
1051: aload         43
1053: invokestatic  #31
1056: aload         45
1058: invokestatic  #31
1061: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 994
End line: 1005
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNull(doubleArray5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: getfield      #146
53: astore        5
55: aload_2
56: invokestatic  #30
59: dload_3
60: invokestatic  #86
63: invokestatic  #87
66: aload         5
68: invokestatic  #30
71: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1008
End line: 1058
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        java.io.ObjectInputStream objectInputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.deserializeRealMatrix((java.lang.Object) levenbergMarquardtOptimizer0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", objectInputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aconst_null
212: astore        20
214: aload_1
215: ldc           #148
217: aload         20
219: invokestatic  #149
222: ldc           #102
224: invokestatic  #28
227: goto          232
230: astore        21
232: new           #39
235: dup
236: invokespecial #40
239: ldc           #41
241: invokevirtual #42
244: iload_2
245: invokevirtual #43
248: ldc           #44
250: invokevirtual #42
253: iconst_0
254: invokevirtual #43
257: ldc           #41
259: invokevirtual #42
262: invokevirtual #45
265: iload_2
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #46
277: new           #39
280: dup
281: invokespecial #40
284: ldc           #41
286: invokevirtual #42
289: iload_3
290: invokevirtual #43
293: ldc           #44
295: invokevirtual #42
298: iconst_0
299: invokevirtual #43
302: ldc           #41
304: invokevirtual #42
307: invokevirtual #45
310: iload_3
311: ifne          318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #46
322: aload         4
324: invokestatic  #30
327: new           #39
330: dup
331: invokespecial #40
334: ldc           #41
336: invokevirtual #42
339: iload         6
341: invokevirtual #43
344: ldc           #44
346: invokevirtual #42
349: iconst_0
350: invokevirtual #43
353: ldc           #41
355: invokevirtual #42
358: invokevirtual #45
361: iload         6
363: ifne          370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #46
374: new           #39
377: dup
378: invokespecial #40
381: ldc           #41
383: invokevirtual #42
386: iload         7
388: invokevirtual #43
391: ldc           #44
393: invokevirtual #42
396: iconst_0
397: invokevirtual #43
400: ldc           #41
402: invokevirtual #42
405: invokevirtual #45
408: iload         7
410: ifne          417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #46
421: aload         8
423: invokestatic  #31
426: aload         8
428: invokestatic  #32
431: ldc           #33
433: invokestatic  #34
436: aload         9
438: invokestatic  #31
441: aload         10
443: invokestatic  #31
446: aload         10
448: invokestatic  #32
451: ldc           #33
453: invokestatic  #34
456: aload         11
458: invokestatic  #31
461: aload         12
463: invokestatic  #31
466: aload         13
468: invokestatic  #31
471: aload         13
473: invokestatic  #32
476: ldc           #35
478: invokestatic  #34
481: aload         18
483: invokestatic  #31
486: aload         18
488: invokestatic  #32
491: ldc           #35
493: invokestatic  #34
496: new           #39
499: dup
500: invokespecial #40
503: ldc           #41
505: invokevirtual #42
508: iload         19
510: invokevirtual #43
513: ldc           #44
515: invokevirtual #42
518: iconst_0
519: invokevirtual #43
522: ldc           #41
524: invokevirtual #42
527: invokevirtual #45
530: iload         19
532: ifne          539
535: iconst_1
536: goto          540
539: iconst_0
540: invokestatic  #46
543: return
Exception table:
from    to  target type
214   227   230   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1061
End line: 1076
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #150
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #67
46: astore        4
48: ldc           #68
50: invokestatic  #28
53: goto          58
56: astore        4
58: aload_2
59: invokestatic  #30
62: new           #39
65: dup
66: invokespecial #40
69: ldc           #41
71: invokevirtual #42
74: iload_3
75: invokevirtual #43
78: ldc           #44
80: invokevirtual #42
83: iconst_0
84: invokevirtual #43
87: ldc           #41
89: invokevirtual #42
92: invokevirtual #45
95: iload_3
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #46
107: return
Exception table:
from    to  target type
42    53    56   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1079
End line: 1089
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 97;
        levenbergMarquardtOptimizer0.rows = 4;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: bipush        97
45: putfield      #58
48: aload_1
49: iconst_4
50: putfield      #81
53: aload_2
54: invokestatic  #30
57: aload_3
58: invokestatic  #30
61: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1092
End line: 1099
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 1000);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc2_w        #93
36: invokevirtual #78
39: aload_1
40: invokevirtual #59
43: istore_2
44: new           #39
47: dup
48: invokespecial #40
51: ldc           #41
53: invokevirtual #42
56: iload_2
57: invokevirtual #43
60: ldc           #44
62: invokevirtual #42
65: sipush        1000
68: invokevirtual #43
71: ldc           #41
73: invokevirtual #42
76: invokevirtual #45
79: iload_2
80: sipush        1000
83: if_icmpne     90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #46
94: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1102
End line: 1181
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        int int64 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int65 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateResidualsAndCost();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1000 + "'", int64 == 1000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #153
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: invokevirtual #59
394: istore        32
396: aload_1
397: invokevirtual #57
400: istore        33
402: aload_1
403: invokevirtual #154
406: ldc           #102
408: invokestatic  #28
411: goto          416
414: astore        34
416: new           #39
419: dup
420: invokespecial #40
423: ldc           #41
425: invokevirtual #42
428: iload_2
429: invokevirtual #43
432: ldc           #44
434: invokevirtual #42
437: iconst_0
438: invokevirtual #43
441: ldc           #41
443: invokevirtual #42
446: invokevirtual #45
449: iload_2
450: ifne          457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #46
461: aload         4
463: invokestatic  #31
466: aload         4
468: invokestatic  #32
471: ldc           #33
473: invokestatic  #34
476: aload         5
478: invokestatic  #31
481: aload         6
483: invokestatic  #31
486: aload         6
488: invokestatic  #32
491: ldc           #33
493: invokestatic  #34
496: aload         7
498: invokestatic  #31
501: aload         8
503: invokestatic  #31
506: aload         9
508: invokestatic  #31
511: aload         9
513: invokestatic  #32
516: ldc           #35
518: invokestatic  #34
521: aload         14
523: invokestatic  #31
526: aload         14
528: invokestatic  #32
531: ldc           #33
533: invokestatic  #34
536: aload         15
538: invokestatic  #31
541: aload         16
543: invokestatic  #31
546: aload         16
548: invokestatic  #32
551: ldc           #33
553: invokestatic  #34
556: aload         17
558: invokestatic  #31
561: aload         18
563: invokestatic  #31
566: aload         19
568: invokestatic  #31
571: aload         19
573: invokestatic  #32
576: ldc           #33
578: invokestatic  #34
581: aload         20
583: invokestatic  #31
586: aload         21
588: invokestatic  #31
591: aload         21
593: invokestatic  #32
596: ldc           #33
598: invokestatic  #34
601: aload         22
603: invokestatic  #31
606: aload         23
608: invokestatic  #31
611: aload         24
613: invokestatic  #31
616: aload         24
618: invokestatic  #32
621: ldc           #35
623: invokestatic  #34
626: aload         29
628: invokestatic  #31
631: aload         29
633: invokestatic  #32
636: ldc           #35
638: invokestatic  #34
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: iload         31
655: invokevirtual #69
658: ldc           #44
660: invokevirtual #42
663: iconst_1
664: invokevirtual #69
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: iload         31
677: iconst_1
678: if_icmpne     685
681: iconst_1
682: goto          686
685: iconst_0
686: invokestatic  #46
689: new           #39
692: dup
693: invokespecial #40
696: ldc           #41
698: invokevirtual #42
701: iload         32
703: invokevirtual #43
706: ldc           #44
708: invokevirtual #42
711: sipush        1000
714: invokevirtual #43
717: ldc           #41
719: invokevirtual #42
722: invokevirtual #45
725: iload         32
727: sipush        1000
730: if_icmpne     737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #46
741: new           #39
744: dup
745: invokespecial #40
748: ldc           #41
750: invokevirtual #42
753: iload         33
755: invokevirtual #43
758: ldc           #44
760: invokevirtual #42
763: iconst_0
764: invokevirtual #43
767: ldc           #41
769: invokevirtual #42
772: invokevirtual #45
775: iload         33
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #46
788: return
Exception table:
from    to  target type
402   411   414   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1184
End line: 1194
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[][] doubleArray3 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: getfield      #54
46: astore        4
48: aload_2
49: invokestatic  #30
52: new           #39
55: dup
56: invokespecial #40
59: ldc           #41
61: invokevirtual #42
64: iload_3
65: invokevirtual #43
68: ldc           #44
70: invokevirtual #42
73: iconst_0
74: invokevirtual #43
77: ldc           #41
79: invokevirtual #42
82: invokevirtual #45
85: iload_3
86: ifne          93
89: iconst_1
90: goto          94
93: iconst_0
94: invokestatic  #46
97: aload         4
99: invokestatic  #30
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1197
End line: 1268
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) (byte) -1);
        double[][] doubleArray66 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(doubleArray66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: ldc2_w        #11
394: invokevirtual #138
397: aload_1
398: getfield      #54
401: astore        32
403: new           #39
406: dup
407: invokespecial #40
410: ldc           #41
412: invokevirtual #42
415: iload_2
416: invokevirtual #43
419: ldc           #44
421: invokevirtual #42
424: iconst_0
425: invokevirtual #43
428: ldc           #41
430: invokevirtual #42
433: invokevirtual #45
436: iload_2
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #46
448: aload         4
450: invokestatic  #31
453: aload         4
455: invokestatic  #32
458: ldc           #33
460: invokestatic  #34
463: aload         5
465: invokestatic  #31
468: aload         6
470: invokestatic  #31
473: aload         6
475: invokestatic  #32
478: ldc           #33
480: invokestatic  #34
483: aload         7
485: invokestatic  #31
488: aload         8
490: invokestatic  #31
493: aload         9
495: invokestatic  #31
498: aload         9
500: invokestatic  #32
503: ldc           #35
505: invokestatic  #34
508: aload         14
510: invokestatic  #31
513: aload         14
515: invokestatic  #32
518: ldc           #33
520: invokestatic  #34
523: aload         15
525: invokestatic  #31
528: aload         16
530: invokestatic  #31
533: aload         16
535: invokestatic  #32
538: ldc           #33
540: invokestatic  #34
543: aload         17
545: invokestatic  #31
548: aload         18
550: invokestatic  #31
553: aload         19
555: invokestatic  #31
558: aload         19
560: invokestatic  #32
563: ldc           #33
565: invokestatic  #34
568: aload         20
570: invokestatic  #31
573: aload         21
575: invokestatic  #31
578: aload         21
580: invokestatic  #32
583: ldc           #33
585: invokestatic  #34
588: aload         22
590: invokestatic  #31
593: aload         23
595: invokestatic  #31
598: aload         24
600: invokestatic  #31
603: aload         24
605: invokestatic  #32
608: ldc           #35
610: invokestatic  #34
613: aload         29
615: invokestatic  #31
618: aload         29
620: invokestatic  #32
623: ldc           #35
625: invokestatic  #34
628: new           #39
631: dup
632: invokespecial #40
635: ldc           #41
637: invokevirtual #42
640: iload         31
642: invokevirtual #69
645: ldc           #44
647: invokevirtual #42
650: iconst_1
651: invokevirtual #69
654: ldc           #41
656: invokevirtual #42
659: invokevirtual #45
662: iload         31
664: iconst_1
665: if_icmpne     672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #46
676: aload         32
678: invokestatic  #30
681: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1271
End line: 1314
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #157
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: bipush        52
214: invokevirtual #38
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload_2
230: invokevirtual #43
233: ldc           #44
235: invokevirtual #42
238: iconst_0
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload_2
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload_3
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload_3
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #46
307: aload         4
309: invokestatic  #30
312: new           #39
315: dup
316: invokespecial #40
319: ldc           #41
321: invokevirtual #42
324: iload         6
326: invokevirtual #43
329: ldc           #44
331: invokevirtual #42
334: iconst_0
335: invokevirtual #43
338: ldc           #41
340: invokevirtual #42
343: invokevirtual #45
346: iload         6
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #46
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         7
373: invokevirtual #43
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #43
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         7
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #46
406: aload         8
408: invokestatic  #31
411: aload         8
413: invokestatic  #32
416: ldc           #33
418: invokestatic  #34
421: aload         9
423: invokestatic  #31
426: aload         10
428: invokestatic  #31
431: aload         10
433: invokestatic  #32
436: ldc           #33
438: invokestatic  #34
441: aload         11
443: invokestatic  #31
446: aload         12
448: invokestatic  #31
451: aload         13
453: invokestatic  #31
456: aload         13
458: invokestatic  #32
461: ldc           #35
463: invokestatic  #34
466: aload         18
468: invokestatic  #31
471: aload         18
473: invokestatic  #32
476: ldc           #35
478: invokestatic  #34
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: iload         19
495: invokevirtual #43
498: ldc           #44
500: invokevirtual #42
503: iconst_0
504: invokevirtual #43
507: ldc           #41
509: invokevirtual #42
512: invokevirtual #45
515: iload         19
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #46
528: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1317
End line: 1361
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        int int30 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #158
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: invokevirtual #57
215: istore        20
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload_2
230: invokevirtual #43
233: ldc           #44
235: invokevirtual #42
238: iconst_0
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload_2
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload_3
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload_3
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #46
307: aload         4
309: invokestatic  #30
312: new           #39
315: dup
316: invokespecial #40
319: ldc           #41
321: invokevirtual #42
324: iload         6
326: invokevirtual #43
329: ldc           #44
331: invokevirtual #42
334: iconst_0
335: invokevirtual #43
338: ldc           #41
340: invokevirtual #42
343: invokevirtual #45
346: iload         6
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #46
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         7
373: invokevirtual #43
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #43
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         7
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #46
406: aload         8
408: invokestatic  #31
411: aload         8
413: invokestatic  #32
416: ldc           #33
418: invokestatic  #34
421: aload         9
423: invokestatic  #31
426: aload         10
428: invokestatic  #31
431: aload         10
433: invokestatic  #32
436: ldc           #33
438: invokestatic  #34
441: aload         11
443: invokestatic  #31
446: aload         12
448: invokestatic  #31
451: aload         13
453: invokestatic  #31
456: aload         13
458: invokestatic  #32
461: ldc           #35
463: invokestatic  #34
466: aload         18
468: invokestatic  #31
471: aload         18
473: invokestatic  #32
476: ldc           #35
478: invokestatic  #34
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: iload         19
495: invokevirtual #43
498: ldc           #44
500: invokevirtual #42
503: iconst_0
504: invokevirtual #43
507: ldc           #41
509: invokevirtual #42
512: invokevirtual #45
515: iload         19
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #46
528: new           #39
531: dup
532: invokespecial #40
535: ldc           #41
537: invokevirtual #42
540: iload         20
542: invokevirtual #43
545: ldc           #44
547: invokevirtual #42
550: iconst_0
551: invokevirtual #43
554: ldc           #41
556: invokevirtual #42
559: invokevirtual #45
562: iload         20
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #46
575: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1364
End line: 1370
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #160
36: istore_2
37: new           #39
40: dup
41: invokespecial #40
44: ldc           #41
46: invokevirtual #42
49: iload_2
50: invokevirtual #43
53: ldc           #44
55: invokevirtual #42
58: iconst_0
59: invokevirtual #43
62: ldc           #41
64: invokevirtual #42
67: invokevirtual #45
70: iload_2
71: ifne          78
74: iconst_1
75: goto          79
78: iconst_0
79: invokestatic  #46
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1373
End line: 1387
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) 1L);
        int int8 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: dconst_1
55: invokevirtual #162
58: aload_1
59: getfield      #81
62: istore        5
64: aload_2
65: invokestatic  #30
68: new           #39
71: dup
72: invokespecial #40
75: ldc           #41
77: invokevirtual #42
80: iload_3
81: invokevirtual #43
84: ldc           #44
86: invokevirtual #42
89: iconst_0
90: invokevirtual #43
93: ldc           #41
95: invokevirtual #42
98: invokevirtual #45
101: iload_3
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #46
113: aload         4
115: invokestatic  #30
118: new           #39
121: dup
122: invokespecial #40
125: ldc           #41
127: invokevirtual #42
130: iload         5
132: invokevirtual #43
135: ldc           #44
137: invokevirtual #42
140: iconst_0
141: invokevirtual #43
144: ldc           #41
146: invokevirtual #42
149: invokevirtual #45
152: iload         5
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #46
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1390
End line: 1488
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray3 = levenbergMarquardtOptimizer0.objective;
        int int4 = levenbergMarquardtOptimizer0.getEvaluations();
        double[] doubleArray8 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix9 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray8);
        double[] doubleArray14 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix15 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray14);
        realMatrix9.setRow(0, doubleArray14);
        org.apache.commons.math.linear.BigMatrix bigMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray14);
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable20 = null;
        java.lang.Object[] objArray21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray19, localizable20, objArray21);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray19);
        double[] doubleArray24 = vectorialPointValuePair23.getValueRef();
        org.apache.commons.math.exception.Localizable localizable26 = null;
        java.lang.Object[] objArray27 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, localizable26, objArray27);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException40 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray39);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0d, eOFException40 };
        java.lang.ArithmeticException arithmeticException42 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray41);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray52);
        java.util.NoSuchElementException noSuchElementException54 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException42, "", objArray52);
        org.apache.commons.math.exception.Localizable localizable56 = convergenceException55.getLocalizablePattern();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException28, (double) (-1L), localizable56, objArray64);
        org.apache.commons.math.exception.Localizable localizable67 = null;
        double[] doubleArray73 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray74 = new double[][] { doubleArray73 };
        org.apache.commons.math.linear.BigMatrix bigMatrix75 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.io.EOFException eOFException76 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable67, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.linear.BigMatrix bigMatrix77 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.lang.ArithmeticException arithmeticException78 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable56, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.exception.Localizable localizable79 = null;
        double[] doubleArray85 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray86 = new double[][] { doubleArray85 };
        org.apache.commons.math.linear.BigMatrix bigMatrix87 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray86);
        java.util.NoSuchElementException noSuchElementException88 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable79, (java.lang.Object[]) doubleArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24, localizable56, (java.lang.Object[]) doubleArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24);
        double[] doubleArray91 = functionEvaluationException90.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray91;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(bigMatrix17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException42);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException53);
        org.junit.Assert.assertNotNull(noSuchElementException54);
        org.junit.Assert.assertNotNull(localizable56);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(bigMatrix75);
        org.junit.Assert.assertNotNull(eOFException76);
        org.junit.Assert.assertNotNull(bigMatrix77);
        org.junit.Assert.assertNotNull(arithmeticException78);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(bigMatrix87);
        org.junit.Assert.assertNotNull(noSuchElementException88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #163
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #56
46: astore        4
48: aload_1
49: invokevirtual #160
52: istore        5
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: dup
62: iconst_1
63: dconst_0
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #11
70: dastore
71: astore        6
73: aload         6
75: invokestatic  #13
78: astore        7
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_1
86: dastore
87: dup
88: iconst_1
89: dconst_0
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #11
96: dastore
97: astore        8
99: aload         8
101: invokestatic  #13
104: astore        9
106: aload         7
108: iconst_0
109: aload         8
111: invokeinterface #14,  3
116: aload         8
118: invokestatic  #15
121: astore        10
123: iconst_1
124: newarray       double
126: dup
127: iconst_0
128: ldc2_w        #16
131: dastore
132: astore        11
134: aconst_null
135: astore        12
137: aconst_null
138: astore        13
140: new           #18
143: dup
144: aload         11
146: aload         12
148: aload         13
150: invokespecial #19
153: astore        14
155: new           #20
158: dup
159: aload         8
161: aload         11
163: invokespecial #21
166: astore        15
168: aload         15
170: invokevirtual #140
173: astore        16
175: aconst_null
176: astore        17
178: aconst_null
179: astore        18
181: new           #18
184: dup
185: ldc2_w        #48
188: aload         17
190: aload         18
192: invokespecial #106
195: astore        19
197: bipush        6
199: anewarray     #5
202: dup
203: iconst_0
204: dconst_1
205: invokestatic  #107
208: aastore
209: dup
210: iconst_1
211: ldc           #108
213: invokestatic  #109
216: aastore
217: dup
218: iconst_2
219: ldc           #108
221: invokestatic  #109
224: aastore
225: dup
226: iconst_3
227: iconst_0
228: invokestatic  #110
231: aastore
232: dup
233: iconst_4
234: iconst_1
235: invokestatic  #111
238: aastore
239: dup
240: iconst_5
241: iconst_0
242: invokestatic  #111
245: aastore
246: astore        20
248: ldc           #112
250: aload         20
252: invokestatic  #113
255: astore        21
257: iconst_2
258: anewarray     #5
261: dup
262: iconst_0
263: dconst_1
264: invokestatic  #107
267: aastore
268: dup
269: iconst_1
270: aload         21
272: aastore
273: astore        22
275: ldc           #112
277: aload         22
279: invokestatic  #114
282: astore        23
284: bipush        6
286: anewarray     #5
289: dup
290: iconst_0
291: dconst_1
292: invokestatic  #107
295: aastore
296: dup
297: iconst_1
298: ldc           #108
300: invokestatic  #109
303: aastore
304: dup
305: iconst_2
306: ldc           #108
308: invokestatic  #109
311: aastore
312: dup
313: iconst_3
314: iconst_0
315: invokestatic  #110
318: aastore
319: dup
320: iconst_4
321: iconst_1
322: invokestatic  #111
325: aastore
326: dup
327: iconst_5
328: iconst_0
329: invokestatic  #111
332: aastore
333: astore        24
335: ldc           #112
337: aload         24
339: invokestatic  #113
342: astore        25
344: ldc           #115
346: aload         24
348: invokestatic  #116
351: astore        26
353: new           #117
356: dup
357: aload         23
359: ldc           #112
361: aload         24
363: invokespecial #118
366: astore        27
368: aload         27
370: invokevirtual #119
373: astore        28
375: bipush        6
377: anewarray     #5
380: dup
381: iconst_0
382: dconst_1
383: invokestatic  #107
386: aastore
387: dup
388: iconst_1
389: ldc           #108
391: invokestatic  #109
394: aastore
395: dup
396: iconst_2
397: ldc           #108
399: invokestatic  #109
402: aastore
403: dup
404: iconst_3
405: iconst_0
406: invokestatic  #110
409: aastore
410: dup
411: iconst_4
412: iconst_1
413: invokestatic  #111
416: aastore
417: dup
418: iconst_5
419: iconst_0
420: invokestatic  #111
423: aastore
424: astore        29
426: ldc           #112
428: aload         29
430: invokestatic  #113
433: astore        30
435: new           #18
438: dup
439: aload         19
441: ldc2_w        #11
444: aload         28
446: aload         29
448: invokespecial #120
451: astore        31
453: aconst_null
454: astore        32
456: iconst_5
457: newarray       double
459: dup
460: iconst_0
461: ldc2_w        #124
464: dastore
465: dup
466: iconst_1
467: ldc2_w        #62
470: dastore
471: dup
472: iconst_2
473: ldc2_w        #48
476: dastore
477: dup
478: iconst_3
479: ldc2_w        #16
482: dastore
483: dup
484: iconst_4
485: ldc2_w        #11
488: dastore
489: astore        33
491: iconst_1
492: anewarray     #126
495: dup
496: iconst_0
497: aload         33
499: aastore
500: astore        34
502: aload         34
504: invokestatic  #127
507: astore        35
509: aload         32
511: aload         34
513: checkcast     #128
516: invokestatic  #129
519: astore        36
521: aload         34
523: invokestatic  #127
526: astore        37
528: aload         28
530: aload         34
532: checkcast     #128
535: invokestatic  #141
538: astore        38
540: aconst_null
541: astore        39
543: iconst_5
544: newarray       double
546: dup
547: iconst_0
548: ldc2_w        #124
551: dastore
552: dup
553: iconst_1
554: ldc2_w        #62
557: dastore
558: dup
559: iconst_2
560: ldc2_w        #48
563: dastore
564: dup
565: iconst_3
566: ldc2_w        #16
569: dastore
570: dup
571: iconst_4
572: ldc2_w        #11
575: dastore
576: astore        40
578: iconst_1
579: anewarray     #126
582: dup
583: iconst_0
584: aload         40
586: aastore
587: astore        41
589: aload         41
591: invokestatic  #127
594: astore        42
596: aload         39
598: aload         41
600: checkcast     #128
603: invokestatic  #142
606: astore        43
608: new           #18
611: dup
612: aload         16
614: aload         28
616: aload         41
618: checkcast     #128
621: invokespecial #19
624: astore        44
626: new           #18
629: dup
630: aload         16
632: invokespecial #164
635: astore        45
637: aload         45
639: invokevirtual #165
642: astore        46
644: aload_1
645: aload         46
647: putfield      #56
650: new           #39
653: dup
654: invokespecial #40
657: ldc           #41
659: invokevirtual #42
662: iload_2
663: invokevirtual #43
666: ldc           #44
668: invokevirtual #42
671: iconst_0
672: invokevirtual #43
675: ldc           #41
677: invokevirtual #42
680: invokevirtual #45
683: iload_2
684: ifne          691
687: iconst_1
688: goto          692
691: iconst_0
692: invokestatic  #46
695: new           #39
698: dup
699: invokespecial #40
702: ldc           #41
704: invokevirtual #42
707: iload_3
708: invokevirtual #43
711: ldc           #44
713: invokevirtual #42
716: iconst_0
717: invokevirtual #43
720: ldc           #41
722: invokevirtual #42
725: invokevirtual #45
728: iload_3
729: ifne          736
732: iconst_1
733: goto          737
736: iconst_0
737: invokestatic  #46
740: aload         4
742: invokestatic  #30
745: new           #39
748: dup
749: invokespecial #40
752: ldc           #41
754: invokevirtual #42
757: iload         5
759: invokevirtual #43
762: ldc           #44
764: invokevirtual #42
767: iconst_0
768: invokevirtual #43
771: ldc           #41
773: invokevirtual #42
776: invokevirtual #45
779: iload         5
781: ifne          788
784: iconst_1
785: goto          789
788: iconst_0
789: invokestatic  #46
792: aload         6
794: invokestatic  #31
797: aload         6
799: invokestatic  #32
802: ldc           #33
804: invokestatic  #34
807: aload         7
809: invokestatic  #31
812: aload         8
814: invokestatic  #31
817: aload         8
819: invokestatic  #32
822: ldc           #33
824: invokestatic  #34
827: aload         9
829: invokestatic  #31
832: aload         10
834: invokestatic  #31
837: aload         11
839: invokestatic  #31
842: aload         11
844: invokestatic  #32
847: ldc           #35
849: invokestatic  #34
852: aload         16
854: invokestatic  #31
857: aload         16
859: invokestatic  #32
862: ldc           #35
864: invokestatic  #34
867: aload         20
869: invokestatic  #31
872: aload         20
874: invokestatic  #131
877: ldc           #132
879: invokestatic  #34
882: aload         20
884: invokestatic  #133
887: ldc           #132
889: invokestatic  #34
892: aload         21
894: invokestatic  #31
897: aload         22
899: invokestatic  #31
902: aload         22
904: invokestatic  #131
907: ldc           #134
909: invokestatic  #34
912: aload         22
914: invokestatic  #133
917: ldc           #134
919: invokestatic  #34
922: aload         23
924: invokestatic  #31
927: aload         24
929: invokestatic  #31
932: aload         24
934: invokestatic  #131
937: ldc           #132
939: invokestatic  #34
942: aload         24
944: invokestatic  #133
947: ldc           #132
949: invokestatic  #34
952: aload         25
954: invokestatic  #31
957: aload         26
959: invokestatic  #31
962: aload         28
964: invokestatic  #31
967: aload         29
969: invokestatic  #31
972: aload         29
974: invokestatic  #131
977: ldc           #132
979: invokestatic  #34
982: aload         29
984: invokestatic  #133
987: ldc           #132
989: invokestatic  #34
992: aload         30
994: invokestatic  #31
997: aload         33
999: invokestatic  #31
1002: aload         33
1004: invokestatic  #32
1007: ldc           #135
1009: invokestatic  #34
1012: aload         34
1014: invokestatic  #31
1017: aload         35
1019: invokestatic  #31
1022: aload         36
1024: invokestatic  #31
1027: aload         37
1029: invokestatic  #31
1032: aload         38
1034: invokestatic  #31
1037: aload         40
1039: invokestatic  #31
1042: aload         40
1044: invokestatic  #32
1047: ldc           #135
1049: invokestatic  #34
1052: aload         41
1054: invokestatic  #31
1057: aload         42
1059: invokestatic  #31
1062: aload         43
1064: invokestatic  #31
1067: aload         46
1069: invokestatic  #31
1072: aload         46
1074: invokestatic  #32
1077: ldc           #35
1079: invokestatic  #34
1082: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 1491
End line: 1597
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        double double4 = levenbergMarquardtOptimizer0.getRMS();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int6 = levenbergMarquardtOptimizer5.getIterations();
        int int7 = levenbergMarquardtOptimizer5.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker8 = levenbergMarquardtOptimizer5.checker;
        int int9 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double[] doubleArray13 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix14 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray13);
        double[] doubleArray19 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray19);
        realMatrix14.setRow(0, doubleArray19);
        org.apache.commons.math.linear.BigMatrix bigMatrix22 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray19);
        double[] doubleArray24 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable25 = null;
        java.lang.Object[] objArray26 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24, localizable25, objArray26);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair28 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray24);
        double[] doubleArray29 = vectorialPointValuePair28.getValueRef();
        org.apache.commons.math.exception.Localizable localizable31 = null;
        java.lang.Object[] objArray32 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, localizable31, objArray32);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException45 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray44);
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1.0d, eOFException45 };
        java.lang.ArithmeticException arithmeticException47 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray46);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException58 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray57);
        java.util.NoSuchElementException noSuchElementException59 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray57);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException47, "", objArray57);
        org.apache.commons.math.exception.Localizable localizable61 = convergenceException60.getLocalizablePattern();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException70 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException33, (double) (-1L), localizable61, objArray69);
        org.apache.commons.math.exception.Localizable localizable72 = null;
        double[] doubleArray78 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray79 = new double[][] { doubleArray78 };
        org.apache.commons.math.linear.BigMatrix bigMatrix80 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray79);
        java.io.EOFException eOFException81 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable72, (java.lang.Object[]) doubleArray79);
        org.apache.commons.math.linear.BigMatrix bigMatrix82 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray79);
        java.lang.ArithmeticException arithmeticException83 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable61, (java.lang.Object[]) doubleArray79);
        org.apache.commons.math.exception.Localizable localizable84 = null;
        double[] doubleArray90 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray91 = new double[][] { doubleArray90 };
        org.apache.commons.math.linear.BigMatrix bigMatrix92 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray91);
        java.util.NoSuchElementException noSuchElementException93 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable84, (java.lang.Object[]) doubleArray91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException(doubleArray29, localizable61, (java.lang.Object[]) doubleArray91);
        levenbergMarquardtOptimizer5.residuals = doubleArray29;
        org.apache.commons.math.linear.RealVector realVector96 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray29);
        levenbergMarquardtOptimizer0.point = doubleArray29;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix20);
        org.junit.Assert.assertNotNull(bigMatrix22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[97.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException47);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException58);
        org.junit.Assert.assertNotNull(noSuchElementException59);
        org.junit.Assert.assertNotNull(localizable61);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException70);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(bigMatrix80);
        org.junit.Assert.assertNotNull(eOFException81);
        org.junit.Assert.assertNotNull(bigMatrix82);
        org.junit.Assert.assertNotNull(arithmeticException83);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(bigMatrix92);
        org.junit.Assert.assertNotNull(noSuchElementException93);
        org.junit.Assert.assertNotNull(realVector96);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #166
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: invokevirtual #59
46: istore        4
48: aload_1
49: invokevirtual #83
52: dstore        5
54: new           #8
57: dup
58: invokespecial #9
61: astore        7
63: aload         7
65: invokevirtual #37
68: istore        8
70: aload         7
72: invokevirtual #37
75: istore        9
77: aload         7
79: getfield      #53
82: astore        10
84: aload         7
86: invokevirtual #57
89: istore        11
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_0
101: dastore
102: dup
103: iconst_2
104: ldc2_w        #11
107: dastore
108: astore        12
110: aload         12
112: invokestatic  #13
115: astore        13
117: iconst_3
118: newarray       double
120: dup
121: iconst_0
122: dconst_1
123: dastore
124: dup
125: iconst_1
126: dconst_0
127: dastore
128: dup
129: iconst_2
130: ldc2_w        #11
133: dastore
134: astore        14
136: aload         14
138: invokestatic  #13
141: astore        15
143: aload         13
145: iconst_0
146: aload         14
148: invokeinterface #14,  3
153: aload         14
155: invokestatic  #15
158: astore        16
160: iconst_1
161: newarray       double
163: dup
164: iconst_0
165: ldc2_w        #16
168: dastore
169: astore        17
171: aconst_null
172: astore        18
174: aconst_null
175: astore        19
177: new           #18
180: dup
181: aload         17
183: aload         18
185: aload         19
187: invokespecial #19
190: astore        20
192: new           #20
195: dup
196: aload         14
198: aload         17
200: invokespecial #21
203: astore        21
205: aload         21
207: invokevirtual #140
210: astore        22
212: aconst_null
213: astore        23
215: aconst_null
216: astore        24
218: new           #18
221: dup
222: ldc2_w        #48
225: aload         23
227: aload         24
229: invokespecial #106
232: astore        25
234: bipush        6
236: anewarray     #5
239: dup
240: iconst_0
241: dconst_1
242: invokestatic  #107
245: aastore
246: dup
247: iconst_1
248: ldc           #108
250: invokestatic  #109
253: aastore
254: dup
255: iconst_2
256: ldc           #108
258: invokestatic  #109
261: aastore
262: dup
263: iconst_3
264: iconst_0
265: invokestatic  #110
268: aastore
269: dup
270: iconst_4
271: iconst_1
272: invokestatic  #111
275: aastore
276: dup
277: iconst_5
278: iconst_0
279: invokestatic  #111
282: aastore
283: astore        26
285: ldc           #112
287: aload         26
289: invokestatic  #113
292: astore        27
294: iconst_2
295: anewarray     #5
298: dup
299: iconst_0
300: dconst_1
301: invokestatic  #107
304: aastore
305: dup
306: iconst_1
307: aload         27
309: aastore
310: astore        28
312: ldc           #112
314: aload         28
316: invokestatic  #114
319: astore        29
321: bipush        6
323: anewarray     #5
326: dup
327: iconst_0
328: dconst_1
329: invokestatic  #107
332: aastore
333: dup
334: iconst_1
335: ldc           #108
337: invokestatic  #109
340: aastore
341: dup
342: iconst_2
343: ldc           #108
345: invokestatic  #109
348: aastore
349: dup
350: iconst_3
351: iconst_0
352: invokestatic  #110
355: aastore
356: dup
357: iconst_4
358: iconst_1
359: invokestatic  #111
362: aastore
363: dup
364: iconst_5
365: iconst_0
366: invokestatic  #111
369: aastore
370: astore        30
372: ldc           #112
374: aload         30
376: invokestatic  #113
379: astore        31
381: ldc           #115
383: aload         30
385: invokestatic  #116
388: astore        32
390: new           #117
393: dup
394: aload         29
396: ldc           #112
398: aload         30
400: invokespecial #118
403: astore        33
405: aload         33
407: invokevirtual #119
410: astore        34
412: bipush        6
414: anewarray     #5
417: dup
418: iconst_0
419: dconst_1
420: invokestatic  #107
423: aastore
424: dup
425: iconst_1
426: ldc           #108
428: invokestatic  #109
431: aastore
432: dup
433: iconst_2
434: ldc           #108
436: invokestatic  #109
439: aastore
440: dup
441: iconst_3
442: iconst_0
443: invokestatic  #110
446: aastore
447: dup
448: iconst_4
449: iconst_1
450: invokestatic  #111
453: aastore
454: dup
455: iconst_5
456: iconst_0
457: invokestatic  #111
460: aastore
461: astore        35
463: ldc           #112
465: aload         35
467: invokestatic  #113
470: astore        36
472: new           #18
475: dup
476: aload         25
478: ldc2_w        #11
481: aload         34
483: aload         35
485: invokespecial #120
488: astore        37
490: aconst_null
491: astore        38
493: iconst_5
494: newarray       double
496: dup
497: iconst_0
498: ldc2_w        #124
501: dastore
502: dup
503: iconst_1
504: ldc2_w        #62
507: dastore
508: dup
509: iconst_2
510: ldc2_w        #48
513: dastore
514: dup
515: iconst_3
516: ldc2_w        #16
519: dastore
520: dup
521: iconst_4
522: ldc2_w        #11
525: dastore
526: astore        39
528: iconst_1
529: anewarray     #126
532: dup
533: iconst_0
534: aload         39
536: aastore
537: astore        40
539: aload         40
541: invokestatic  #127
544: astore        41
546: aload         38
548: aload         40
550: checkcast     #128
553: invokestatic  #129
556: astore        42
558: aload         40
560: invokestatic  #127
563: astore        43
565: aload         34
567: aload         40
569: checkcast     #128
572: invokestatic  #141
575: astore        44
577: aconst_null
578: astore        45
580: iconst_5
581: newarray       double
583: dup
584: iconst_0
585: ldc2_w        #124
588: dastore
589: dup
590: iconst_1
591: ldc2_w        #62
594: dastore
595: dup
596: iconst_2
597: ldc2_w        #48
600: dastore
601: dup
602: iconst_3
603: ldc2_w        #16
606: dastore
607: dup
608: iconst_4
609: ldc2_w        #11
612: dastore
613: astore        46
615: iconst_1
616: anewarray     #126
619: dup
620: iconst_0
621: aload         46
623: aastore
624: astore        47
626: aload         47
628: invokestatic  #127
631: astore        48
633: aload         45
635: aload         47
637: checkcast     #128
640: invokestatic  #142
643: astore        49
645: new           #18
648: dup
649: aload         22
651: aload         34
653: aload         47
655: checkcast     #128
658: invokespecial #19
661: astore        50
663: aload         7
665: aload         22
667: putfield      #76
670: aload         22
672: invokestatic  #167
675: astore        51
677: aload_1
678: aload         22
680: putfield      #80
683: aload_2
684: invokestatic  #30
687: aload_3
688: invokestatic  #30
691: new           #39
694: dup
695: invokespecial #40
698: ldc           #41
700: invokevirtual #42
703: iload         4
705: invokevirtual #43
708: ldc           #44
710: invokevirtual #42
713: sipush        1000
716: invokevirtual #43
719: ldc           #41
721: invokevirtual #42
724: invokevirtual #45
727: iload         4
729: sipush        1000
732: if_icmpne     739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #46
743: dload         5
745: invokestatic  #86
748: invokestatic  #87
751: new           #39
754: dup
755: invokespecial #40
758: ldc           #41
760: invokevirtual #42
763: iload         8
765: invokevirtual #43
768: ldc           #44
770: invokevirtual #42
773: iconst_0
774: invokevirtual #43
777: ldc           #41
779: invokevirtual #42
782: invokevirtual #45
785: iload         8
787: ifne          794
790: iconst_1
791: goto          795
794: iconst_0
795: invokestatic  #46
798: new           #39
801: dup
802: invokespecial #40
805: ldc           #41
807: invokevirtual #42
810: iload         9
812: invokevirtual #43
815: ldc           #44
817: invokevirtual #42
820: iconst_0
821: invokevirtual #43
824: ldc           #41
826: invokevirtual #42
829: invokevirtual #45
832: iload         9
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #46
845: aload         10
847: invokestatic  #30
850: new           #39
853: dup
854: invokespecial #40
857: ldc           #41
859: invokevirtual #42
862: iload         11
864: invokevirtual #43
867: ldc           #44
869: invokevirtual #42
872: iconst_0
873: invokevirtual #43
876: ldc           #41
878: invokevirtual #42
881: invokevirtual #45
884: iload         11
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #46
897: aload         12
899: invokestatic  #31
902: aload         12
904: invokestatic  #32
907: ldc           #33
909: invokestatic  #34
912: aload         13
914: invokestatic  #31
917: aload         14
919: invokestatic  #31
922: aload         14
924: invokestatic  #32
927: ldc           #33
929: invokestatic  #34
932: aload         15
934: invokestatic  #31
937: aload         16
939: invokestatic  #31
942: aload         17
944: invokestatic  #31
947: aload         17
949: invokestatic  #32
952: ldc           #35
954: invokestatic  #34
957: aload         22
959: invokestatic  #31
962: aload         22
964: invokestatic  #32
967: ldc           #35
969: invokestatic  #34
972: aload         26
974: invokestatic  #31
977: aload         26
979: invokestatic  #131
982: ldc           #132
984: invokestatic  #34
987: aload         26
989: invokestatic  #133
992: ldc           #132
994: invokestatic  #34
997: aload         27
999: invokestatic  #31
1002: aload         28
1004: invokestatic  #31
1007: aload         28
1009: invokestatic  #131
1012: ldc           #134
1014: invokestatic  #34
1017: aload         28
1019: invokestatic  #133
1022: ldc           #134
1024: invokestatic  #34
1027: aload         29
1029: invokestatic  #31
1032: aload         30
1034: invokestatic  #31
1037: aload         30
1039: invokestatic  #131
1042: ldc           #132
1044: invokestatic  #34
1047: aload         30
1049: invokestatic  #133
1052: ldc           #132
1054: invokestatic  #34
1057: aload         31
1059: invokestatic  #31
1062: aload         32
1064: invokestatic  #31
1067: aload         34
1069: invokestatic  #31
1072: aload         35
1074: invokestatic  #31
1077: aload         35
1079: invokestatic  #131
1082: ldc           #132
1084: invokestatic  #34
1087: aload         35
1089: invokestatic  #133
1092: ldc           #132
1094: invokestatic  #34
1097: aload         36
1099: invokestatic  #31
1102: aload         39
1104: invokestatic  #31
1107: aload         39
1109: invokestatic  #32
1112: ldc           #135
1114: invokestatic  #34
1117: aload         40
1119: invokestatic  #31
1122: aload         41
1124: invokestatic  #31
1127: aload         42
1129: invokestatic  #31
1132: aload         43
1134: invokestatic  #31
1137: aload         44
1139: invokestatic  #31
1142: aload         46
1144: invokestatic  #31
1147: aload         46
1149: invokestatic  #32
1152: ldc           #135
1154: invokestatic  #34
1157: aload         47
1159: invokestatic  #31
1162: aload         48
1164: invokestatic  #31
1167: aload         49
1169: invokestatic  #31
1172: aload         51
1174: invokestatic  #31
1177: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 1600
End line: 1614
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        levenbergMarquardtOptimizer0.cols = 0;
        double[] doubleArray8 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #168
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: iconst_0
55: putfield      #58
58: aload_1
59: getfield      #146
62: astore        5
64: aload_2
65: invokestatic  #30
68: new           #39
71: dup
72: invokespecial #40
75: ldc           #41
77: invokevirtual #42
80: iload_3
81: invokevirtual #43
84: ldc           #44
86: invokevirtual #42
89: iconst_0
90: invokevirtual #43
93: ldc           #41
95: invokevirtual #42
98: invokevirtual #45
101: iload_3
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #46
113: aload         4
115: invokestatic  #30
118: aload         5
120: invokestatic  #30
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 1617
End line: 1690
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker7 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray12 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix13 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray12);
        double[] doubleArray18 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray18);
        realMatrix13.setRow(0, doubleArray18);
        org.apache.commons.math.linear.BigMatrix bigMatrix21 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray18);
        double[] doubleArray23 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable24 = null;
        java.lang.Object[] objArray25 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException(doubleArray23, localizable24, objArray25);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair27 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray23);
        double[] doubleArray31 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix32 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray31);
        double[] doubleArray37 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix38 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray37);
        realMatrix32.setRow(0, doubleArray37);
        org.apache.commons.math.linear.BigMatrix bigMatrix40 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray37);
        double[] doubleArray44 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix45 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray44);
        double[] doubleArray50 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix51 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray50);
        realMatrix45.setRow(0, doubleArray50);
        org.apache.commons.math.linear.BigMatrix bigMatrix53 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray50);
        double[] doubleArray55 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable56 = null;
        java.lang.Object[] objArray57 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(doubleArray55, localizable56, objArray57);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray55);
        double[] doubleArray60 = vectorialPointValuePair59.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray60, true);
        boolean boolean63 = simpleVectorialValueChecker7.converged((int) (short) 1, vectorialPointValuePair27, vectorialPointValuePair62);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker7);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix19);
        org.junit.Assert.assertNotNull(bigMatrix21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix38);
        org.junit.Assert.assertNotNull(bigMatrix40);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertNotNull(bigMatrix53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #169
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: invokevirtual #83
46: dstore        4
48: aload_1
49: getfield      #76
52: astore        6
54: new           #61
57: dup
58: ldc2_w        #62
61: dconst_1
62: invokespecial #64
65: astore        7
67: iconst_3
68: newarray       double
70: dup
71: iconst_0
72: dconst_1
73: dastore
74: dup
75: iconst_1
76: dconst_0
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #11
83: dastore
84: astore        8
86: aload         8
88: invokestatic  #13
91: astore        9
93: iconst_3
94: newarray       double
96: dup
97: iconst_0
98: dconst_1
99: dastore
100: dup
101: iconst_1
102: dconst_0
103: dastore
104: dup
105: iconst_2
106: ldc2_w        #11
109: dastore
110: astore        10
112: aload         10
114: invokestatic  #13
117: astore        11
119: aload         9
121: iconst_0
122: aload         10
124: invokeinterface #14,  3
129: aload         10
131: invokestatic  #15
134: astore        12
136: iconst_1
137: newarray       double
139: dup
140: iconst_0
141: ldc2_w        #16
144: dastore
145: astore        13
147: aconst_null
148: astore        14
150: aconst_null
151: astore        15
153: new           #18
156: dup
157: aload         13
159: aload         14
161: aload         15
163: invokespecial #19
166: astore        16
168: new           #20
171: dup
172: aload         10
174: aload         13
176: invokespecial #21
179: astore        17
181: iconst_3
182: newarray       double
184: dup
185: iconst_0
186: dconst_1
187: dastore
188: dup
189: iconst_1
190: dconst_0
191: dastore
192: dup
193: iconst_2
194: ldc2_w        #11
197: dastore
198: astore        18
200: aload         18
202: invokestatic  #13
205: astore        19
207: iconst_3
208: newarray       double
210: dup
211: iconst_0
212: dconst_1
213: dastore
214: dup
215: iconst_1
216: dconst_0
217: dastore
218: dup
219: iconst_2
220: ldc2_w        #11
223: dastore
224: astore        20
226: aload         20
228: invokestatic  #13
231: astore        21
233: aload         19
235: iconst_0
236: aload         20
238: invokeinterface #14,  3
243: aload         20
245: invokestatic  #15
248: astore        22
250: iconst_3
251: newarray       double
253: dup
254: iconst_0
255: dconst_1
256: dastore
257: dup
258: iconst_1
259: dconst_0
260: dastore
261: dup
262: iconst_2
263: ldc2_w        #11
266: dastore
267: astore        23
269: aload         23
271: invokestatic  #13
274: astore        24
276: iconst_3
277: newarray       double
279: dup
280: iconst_0
281: dconst_1
282: dastore
283: dup
284: iconst_1
285: dconst_0
286: dastore
287: dup
288: iconst_2
289: ldc2_w        #11
292: dastore
293: astore        25
295: aload         25
297: invokestatic  #13
300: astore        26
302: aload         24
304: iconst_0
305: aload         25
307: invokeinterface #14,  3
312: aload         25
314: invokestatic  #15
317: astore        27
319: iconst_1
320: newarray       double
322: dup
323: iconst_0
324: ldc2_w        #16
327: dastore
328: astore        28
330: aconst_null
331: astore        29
333: aconst_null
334: astore        30
336: new           #18
339: dup
340: aload         28
342: aload         29
344: aload         30
346: invokespecial #19
349: astore        31
351: new           #20
354: dup
355: aload         25
357: aload         28
359: invokespecial #21
362: astore        32
364: aload         32
366: invokevirtual #22
369: astore        33
371: new           #20
374: dup
375: aload         20
377: aload         33
379: iconst_1
380: invokespecial #23
383: astore        34
385: aload         7
387: iconst_1
388: aload         17
390: aload         34
392: invokevirtual #65
395: istore        35
397: aload_1
398: aload         7
400: invokevirtual #66
403: aload_2
404: invokestatic  #30
407: aload_3
408: invokestatic  #30
411: dload         4
413: invokestatic  #86
416: invokestatic  #87
419: aload         6
421: invokestatic  #30
424: aload         8
426: invokestatic  #31
429: aload         8
431: invokestatic  #32
434: ldc           #33
436: invokestatic  #34
439: aload         9
441: invokestatic  #31
444: aload         10
446: invokestatic  #31
449: aload         10
451: invokestatic  #32
454: ldc           #33
456: invokestatic  #34
459: aload         11
461: invokestatic  #31
464: aload         12
466: invokestatic  #31
469: aload         13
471: invokestatic  #31
474: aload         13
476: invokestatic  #32
479: ldc           #35
481: invokestatic  #34
484: aload         18
486: invokestatic  #31
489: aload         18
491: invokestatic  #32
494: ldc           #33
496: invokestatic  #34
499: aload         19
501: invokestatic  #31
504: aload         20
506: invokestatic  #31
509: aload         20
511: invokestatic  #32
514: ldc           #33
516: invokestatic  #34
519: aload         21
521: invokestatic  #31
524: aload         22
526: invokestatic  #31
529: aload         23
531: invokestatic  #31
534: aload         23
536: invokestatic  #32
539: ldc           #33
541: invokestatic  #34
544: aload         24
546: invokestatic  #31
549: aload         25
551: invokestatic  #31
554: aload         25
556: invokestatic  #32
559: ldc           #33
561: invokestatic  #34
564: aload         26
566: invokestatic  #31
569: aload         27
571: invokestatic  #31
574: aload         28
576: invokestatic  #31
579: aload         28
581: invokestatic  #32
584: ldc           #35
586: invokestatic  #34
589: aload         33
591: invokestatic  #31
594: aload         33
596: invokestatic  #32
599: ldc           #35
601: invokestatic  #34
604: new           #39
607: dup
608: invokespecial #40
611: ldc           #41
613: invokevirtual #42
616: iload         35
618: invokevirtual #69
621: ldc           #44
623: invokevirtual #42
626: iconst_1
627: invokevirtual #69
630: ldc           #41
632: invokevirtual #42
635: invokevirtual #45
638: iload         35
640: iconst_1
641: if_icmpne     648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #46
652: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 1693
End line: 1770
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 97;
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int7 = levenbergMarquardtOptimizer6.getIterations();
        levenbergMarquardtOptimizer6.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker12 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        double[] doubleArray23 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix24 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray23);
        realMatrix18.setRow(0, doubleArray23);
        org.apache.commons.math.linear.BigMatrix bigMatrix26 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray23);
        double[] doubleArray28 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable29 = null;
        java.lang.Object[] objArray30 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(doubleArray28, localizable29, objArray30);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair32 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray23, doubleArray28);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        double[] doubleArray42 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix43 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray42);
        realMatrix37.setRow(0, doubleArray42);
        org.apache.commons.math.linear.BigMatrix bigMatrix45 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray42);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        double[] doubleArray55 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix56 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray55);
        realMatrix50.setRow(0, doubleArray55);
        org.apache.commons.math.linear.BigMatrix bigMatrix58 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray55);
        double[] doubleArray60 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable61 = null;
        java.lang.Object[] objArray62 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(doubleArray60, localizable61, objArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray60);
        double[] doubleArray65 = vectorialPointValuePair64.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray42, doubleArray65, true);
        boolean boolean68 = simpleVectorialValueChecker12.converged((int) (short) 1, vectorialPointValuePair32, vectorialPointValuePair67);
        levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker12);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker12);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix24);
        org.junit.Assert.assertNotNull(bigMatrix26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix43);
        org.junit.Assert.assertNotNull(bigMatrix45);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertNotNull(bigMatrix58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #170
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: bipush        97
45: putfield      #58
48: aload_1
49: invokevirtual #59
52: istore        4
54: new           #8
57: dup
58: invokespecial #9
61: astore        5
63: aload         5
65: invokevirtual #37
68: istore        6
70: aload         5
72: ldc2_w        #48
75: putfield      #50
78: new           #61
81: dup
82: ldc2_w        #62
85: dconst_1
86: invokespecial #64
89: astore        7
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_0
101: dastore
102: dup
103: iconst_2
104: ldc2_w        #11
107: dastore
108: astore        8
110: aload         8
112: invokestatic  #13
115: astore        9
117: iconst_3
118: newarray       double
120: dup
121: iconst_0
122: dconst_1
123: dastore
124: dup
125: iconst_1
126: dconst_0
127: dastore
128: dup
129: iconst_2
130: ldc2_w        #11
133: dastore
134: astore        10
136: aload         10
138: invokestatic  #13
141: astore        11
143: aload         9
145: iconst_0
146: aload         10
148: invokeinterface #14,  3
153: aload         10
155: invokestatic  #15
158: astore        12
160: iconst_1
161: newarray       double
163: dup
164: iconst_0
165: ldc2_w        #16
168: dastore
169: astore        13
171: aconst_null
172: astore        14
174: aconst_null
175: astore        15
177: new           #18
180: dup
181: aload         13
183: aload         14
185: aload         15
187: invokespecial #19
190: astore        16
192: new           #20
195: dup
196: aload         10
198: aload         13
200: invokespecial #21
203: astore        17
205: iconst_3
206: newarray       double
208: dup
209: iconst_0
210: dconst_1
211: dastore
212: dup
213: iconst_1
214: dconst_0
215: dastore
216: dup
217: iconst_2
218: ldc2_w        #11
221: dastore
222: astore        18
224: aload         18
226: invokestatic  #13
229: astore        19
231: iconst_3
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: dconst_0
241: dastore
242: dup
243: iconst_2
244: ldc2_w        #11
247: dastore
248: astore        20
250: aload         20
252: invokestatic  #13
255: astore        21
257: aload         19
259: iconst_0
260: aload         20
262: invokeinterface #14,  3
267: aload         20
269: invokestatic  #15
272: astore        22
274: iconst_3
275: newarray       double
277: dup
278: iconst_0
279: dconst_1
280: dastore
281: dup
282: iconst_1
283: dconst_0
284: dastore
285: dup
286: iconst_2
287: ldc2_w        #11
290: dastore
291: astore        23
293: aload         23
295: invokestatic  #13
298: astore        24
300: iconst_3
301: newarray       double
303: dup
304: iconst_0
305: dconst_1
306: dastore
307: dup
308: iconst_1
309: dconst_0
310: dastore
311: dup
312: iconst_2
313: ldc2_w        #11
316: dastore
317: astore        25
319: aload         25
321: invokestatic  #13
324: astore        26
326: aload         24
328: iconst_0
329: aload         25
331: invokeinterface #14,  3
336: aload         25
338: invokestatic  #15
341: astore        27
343: iconst_1
344: newarray       double
346: dup
347: iconst_0
348: ldc2_w        #16
351: dastore
352: astore        28
354: aconst_null
355: astore        29
357: aconst_null
358: astore        30
360: new           #18
363: dup
364: aload         28
366: aload         29
368: aload         30
370: invokespecial #19
373: astore        31
375: new           #20
378: dup
379: aload         25
381: aload         28
383: invokespecial #21
386: astore        32
388: aload         32
390: invokevirtual #22
393: astore        33
395: new           #20
398: dup
399: aload         20
401: aload         33
403: iconst_1
404: invokespecial #23
407: astore        34
409: aload         7
411: iconst_1
412: aload         17
414: aload         34
416: invokevirtual #65
419: istore        35
421: aload         5
423: aload         7
425: invokevirtual #66
428: aload_1
429: aload         7
431: invokevirtual #66
434: aload_2
435: invokestatic  #30
438: aload_3
439: invokestatic  #30
442: new           #39
445: dup
446: invokespecial #40
449: ldc           #41
451: invokevirtual #42
454: iload         4
456: invokevirtual #43
459: ldc           #44
461: invokevirtual #42
464: sipush        1000
467: invokevirtual #43
470: ldc           #41
472: invokevirtual #42
475: invokevirtual #45
478: iload         4
480: sipush        1000
483: if_icmpne     490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #46
494: new           #39
497: dup
498: invokespecial #40
501: ldc           #41
503: invokevirtual #42
506: iload         6
508: invokevirtual #43
511: ldc           #44
513: invokevirtual #42
516: iconst_0
517: invokevirtual #43
520: ldc           #41
522: invokevirtual #42
525: invokevirtual #45
528: iload         6
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #46
541: aload         8
543: invokestatic  #31
546: aload         8
548: invokestatic  #32
551: ldc           #33
553: invokestatic  #34
556: aload         9
558: invokestatic  #31
561: aload         10
563: invokestatic  #31
566: aload         10
568: invokestatic  #32
571: ldc           #33
573: invokestatic  #34
576: aload         11
578: invokestatic  #31
581: aload         12
583: invokestatic  #31
586: aload         13
588: invokestatic  #31
591: aload         13
593: invokestatic  #32
596: ldc           #35
598: invokestatic  #34
601: aload         18
603: invokestatic  #31
606: aload         18
608: invokestatic  #32
611: ldc           #33
613: invokestatic  #34
616: aload         19
618: invokestatic  #31
621: aload         20
623: invokestatic  #31
626: aload         20
628: invokestatic  #32
631: ldc           #33
633: invokestatic  #34
636: aload         21
638: invokestatic  #31
641: aload         22
643: invokestatic  #31
646: aload         23
648: invokestatic  #31
651: aload         23
653: invokestatic  #32
656: ldc           #33
658: invokestatic  #34
661: aload         24
663: invokestatic  #31
666: aload         25
668: invokestatic  #31
671: aload         25
673: invokestatic  #32
676: ldc           #33
678: invokestatic  #34
681: aload         26
683: invokestatic  #31
686: aload         27
688: invokestatic  #31
691: aload         28
693: invokestatic  #31
696: aload         28
698: invokestatic  #32
701: ldc           #35
703: invokestatic  #34
706: aload         33
708: invokestatic  #31
711: aload         33
713: invokestatic  #32
716: ldc           #35
718: invokestatic  #34
721: new           #39
724: dup
725: invokespecial #40
728: ldc           #41
730: invokevirtual #42
733: iload         35
735: invokevirtual #69
738: ldc           #44
740: invokevirtual #42
743: iconst_1
744: invokevirtual #69
747: ldc           #41
749: invokevirtual #42
752: invokevirtual #45
755: iload         35
757: iconst_1
758: if_icmpne     765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #46
769: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 1773
End line: 1784
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d);
        double double5 = levenbergMarquardtOptimizer0.cost;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #171
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: dconst_0
44: invokevirtual #78
47: aload_1
48: getfield      #50
51: dstore        4
53: aload_2
54: invokestatic  #30
57: aload_3
58: invokestatic  #30
61: new           #39
64: dup
65: invokespecial #40
68: ldc           #41
70: invokevirtual #42
73: dload         4
75: invokevirtual #51
78: ldc           #44
80: invokevirtual #42
83: dconst_0
84: invokevirtual #51
87: ldc           #41
89: invokevirtual #42
92: invokevirtual #45
95: dload         4
97: dconst_0
98: dcmpl
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #46
110: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 1787
End line: 1799
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int4 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: invokevirtual #160
52: istore        5
54: aload_2
55: invokestatic  #30
58: new           #39
61: dup
62: invokespecial #40
65: ldc           #41
67: invokevirtual #42
70: iload_3
71: invokevirtual #43
74: ldc           #44
76: invokevirtual #42
79: iconst_0
80: invokevirtual #43
83: ldc           #41
85: invokevirtual #42
88: invokevirtual #45
91: iload_3
92: ifne          99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #46
103: aload         4
105: invokestatic  #30
108: new           #39
111: dup
112: invokespecial #40
115: ldc           #41
117: invokevirtual #42
120: iload         5
122: invokevirtual #43
125: ldc           #44
127: invokevirtual #42
130: iconst_0
131: invokevirtual #43
134: ldc           #41
136: invokevirtual #42
139: invokevirtual #45
142: iload         5
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #46
155: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 1802
End line: 1871
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        levenbergMarquardtOptimizer0.rows = '4';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: bipush        52
393: putfield      #81
396: new           #39
399: dup
400: invokespecial #40
403: ldc           #41
405: invokevirtual #42
408: iload_2
409: invokevirtual #43
412: ldc           #44
414: invokevirtual #42
417: iconst_0
418: invokevirtual #43
421: ldc           #41
423: invokevirtual #42
426: invokevirtual #45
429: iload_2
430: ifne          437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #46
441: aload         4
443: invokestatic  #31
446: aload         4
448: invokestatic  #32
451: ldc           #33
453: invokestatic  #34
456: aload         5
458: invokestatic  #31
461: aload         6
463: invokestatic  #31
466: aload         6
468: invokestatic  #32
471: ldc           #33
473: invokestatic  #34
476: aload         7
478: invokestatic  #31
481: aload         8
483: invokestatic  #31
486: aload         9
488: invokestatic  #31
491: aload         9
493: invokestatic  #32
496: ldc           #35
498: invokestatic  #34
501: aload         14
503: invokestatic  #31
506: aload         14
508: invokestatic  #32
511: ldc           #33
513: invokestatic  #34
516: aload         15
518: invokestatic  #31
521: aload         16
523: invokestatic  #31
526: aload         16
528: invokestatic  #32
531: ldc           #33
533: invokestatic  #34
536: aload         17
538: invokestatic  #31
541: aload         18
543: invokestatic  #31
546: aload         19
548: invokestatic  #31
551: aload         19
553: invokestatic  #32
556: ldc           #33
558: invokestatic  #34
561: aload         20
563: invokestatic  #31
566: aload         21
568: invokestatic  #31
571: aload         21
573: invokestatic  #32
576: ldc           #33
578: invokestatic  #34
581: aload         22
583: invokestatic  #31
586: aload         23
588: invokestatic  #31
591: aload         24
593: invokestatic  #31
596: aload         24
598: invokestatic  #32
601: ldc           #35
603: invokestatic  #34
606: aload         29
608: invokestatic  #31
611: aload         29
613: invokestatic  #32
616: ldc           #35
618: invokestatic  #34
621: new           #39
624: dup
625: invokespecial #40
628: ldc           #41
630: invokevirtual #42
633: iload         31
635: invokevirtual #69
638: ldc           #44
640: invokevirtual #42
643: iconst_1
644: invokevirtual #69
647: ldc           #41
649: invokevirtual #42
652: invokevirtual #45
655: iload         31
657: iconst_1
658: if_icmpne     665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #46
669: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 1874
End line: 1884
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #174
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: invokevirtual #84
53: aload_2
54: invokestatic  #30
57: dload_3
58: invokestatic  #86
61: invokestatic  #87
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 1887
End line: 1903
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        int int5 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.rows = 0;
        double[] doubleArray8 = levenbergMarquardtOptimizer0.targetValues;
        int int9 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: invokevirtual #57
53: istore        5
55: aload_1
56: iconst_0
57: putfield      #81
60: aload_1
61: getfield      #146
64: astore        6
66: aload_1
67: invokevirtual #71
70: istore        7
72: aload_2
73: invokestatic  #30
76: dload_3
77: invokestatic  #86
80: invokestatic  #87
83: new           #39
86: dup
87: invokespecial #40
90: ldc           #41
92: invokevirtual #42
95: iload         5
97: invokevirtual #43
100: ldc           #44
102: invokevirtual #42
105: iconst_0
106: invokevirtual #43
109: ldc           #41
111: invokevirtual #42
114: invokevirtual #45
117: iload         5
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #46
130: aload         6
132: invokestatic  #30
135: new           #39
138: dup
139: invokespecial #40
142: ldc           #41
144: invokevirtual #42
147: iload         7
149: invokevirtual #43
152: ldc           #44
154: invokevirtual #42
157: ldc           #73
159: invokevirtual #43
162: ldc           #41
164: invokevirtual #42
167: invokevirtual #45
170: iload         7
172: ldc           #73
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #46
185: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 1906
End line: 1922
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = null;
        levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker5);
        double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #176
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: invokevirtual #83
46: dstore        4
48: aload_1
49: getfield      #76
52: astore        6
54: aconst_null
55: astore        7
57: aload_1
58: aload         7
60: invokevirtual #66
63: aload_1
64: getfield      #54
67: astore        8
69: aload_2
70: invokestatic  #30
73: aload_3
74: invokestatic  #30
77: dload         4
79: invokestatic  #86
82: invokestatic  #87
85: aload         6
87: invokestatic  #30
90: aload         8
92: invokestatic  #30
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 1925
End line: 1964
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        int int3 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray7 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix8 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray7);
        double[] doubleArray13 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix14 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray13);
        realMatrix8.setRow(0, doubleArray13);
        org.apache.commons.math.linear.BigMatrix bigMatrix16 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray13);
        double[] doubleArray18 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable19 = null;
        java.lang.Object[] objArray20 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(doubleArray18, localizable19, objArray20);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray18);
        double[] doubleArray23 = vectorialPointValuePair22.getValue();
        double[] doubleArray24 = vectorialPointValuePair22.getValueRef();
        levenbergMarquardtOptimizer0.residuals = doubleArray24;
        double[] doubleArray26 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(bigMatrix16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0]");
        org.junit.Assert.assertNull(doubleArray26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #177
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: invokevirtual #37
46: istore        4
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_1
54: dastore
55: dup
56: iconst_1
57: dconst_0
58: dastore
59: dup
60: iconst_2
61: ldc2_w        #11
64: dastore
65: astore        5
67: aload         5
69: invokestatic  #13
72: astore        6
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_0
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #11
90: dastore
91: astore        7
93: aload         7
95: invokestatic  #13
98: astore        8
100: aload         6
102: iconst_0
103: aload         7
105: invokeinterface #14,  3
110: aload         7
112: invokestatic  #15
115: astore        9
117: iconst_1
118: newarray       double
120: dup
121: iconst_0
122: ldc2_w        #16
125: dastore
126: astore        10
128: aconst_null
129: astore        11
131: aconst_null
132: astore        12
134: new           #18
137: dup
138: aload         10
140: aload         11
142: aload         12
144: invokespecial #19
147: astore        13
149: new           #20
152: dup
153: aload         7
155: aload         10
157: invokespecial #21
160: astore        14
162: aload         14
164: invokevirtual #22
167: astore        15
169: aload         14
171: invokevirtual #140
174: astore        16
176: aload_1
177: aload         16
179: putfield      #76
182: aload_1
183: getfield      #146
186: astore        17
188: new           #39
191: dup
192: invokespecial #40
195: ldc           #41
197: invokevirtual #42
200: iload_2
201: invokevirtual #43
204: ldc           #44
206: invokevirtual #42
209: iconst_0
210: invokevirtual #43
213: ldc           #41
215: invokevirtual #42
218: invokevirtual #45
221: iload_2
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #46
233: new           #39
236: dup
237: invokespecial #40
240: ldc           #41
242: invokevirtual #42
245: iload_3
246: invokevirtual #43
249: ldc           #44
251: invokevirtual #42
254: iconst_0
255: invokevirtual #43
258: ldc           #41
260: invokevirtual #42
263: invokevirtual #45
266: iload_3
267: ifne          274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #46
278: new           #39
281: dup
282: invokespecial #40
285: ldc           #41
287: invokevirtual #42
290: iload         4
292: invokevirtual #43
295: ldc           #44
297: invokevirtual #42
300: iconst_0
301: invokevirtual #43
304: ldc           #41
306: invokevirtual #42
309: invokevirtual #45
312: iload         4
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #46
325: aload         5
327: invokestatic  #31
330: aload         5
332: invokestatic  #32
335: ldc           #33
337: invokestatic  #34
340: aload         6
342: invokestatic  #31
345: aload         7
347: invokestatic  #31
350: aload         7
352: invokestatic  #32
355: ldc           #33
357: invokestatic  #34
360: aload         8
362: invokestatic  #31
365: aload         9
367: invokestatic  #31
370: aload         10
372: invokestatic  #31
375: aload         10
377: invokestatic  #32
380: ldc           #35
382: invokestatic  #34
385: aload         15
387: invokestatic  #31
390: aload         15
392: invokestatic  #32
395: ldc           #35
397: invokestatic  #34
400: aload         16
402: invokestatic  #31
405: aload         16
407: invokestatic  #32
410: ldc           #35
412: invokestatic  #34
415: aload         17
417: invokestatic  #30
420: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 1967
End line: 2036
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #178
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: iconst_m1
392: invokevirtual #91
395: new           #39
398: dup
399: invokespecial #40
402: ldc           #41
404: invokevirtual #42
407: iload_2
408: invokevirtual #43
411: ldc           #44
413: invokevirtual #42
416: iconst_0
417: invokevirtual #43
420: ldc           #41
422: invokevirtual #42
425: invokevirtual #45
428: iload_2
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #46
440: aload         4
442: invokestatic  #31
445: aload         4
447: invokestatic  #32
450: ldc           #33
452: invokestatic  #34
455: aload         5
457: invokestatic  #31
460: aload         6
462: invokestatic  #31
465: aload         6
467: invokestatic  #32
470: ldc           #33
472: invokestatic  #34
475: aload         7
477: invokestatic  #31
480: aload         8
482: invokestatic  #31
485: aload         9
487: invokestatic  #31
490: aload         9
492: invokestatic  #32
495: ldc           #35
497: invokestatic  #34
500: aload         14
502: invokestatic  #31
505: aload         14
507: invokestatic  #32
510: ldc           #33
512: invokestatic  #34
515: aload         15
517: invokestatic  #31
520: aload         16
522: invokestatic  #31
525: aload         16
527: invokestatic  #32
530: ldc           #33
532: invokestatic  #34
535: aload         17
537: invokestatic  #31
540: aload         18
542: invokestatic  #31
545: aload         19
547: invokestatic  #31
550: aload         19
552: invokestatic  #32
555: ldc           #33
557: invokestatic  #34
560: aload         20
562: invokestatic  #31
565: aload         21
567: invokestatic  #31
570: aload         21
572: invokestatic  #32
575: ldc           #33
577: invokestatic  #34
580: aload         22
582: invokestatic  #31
585: aload         23
587: invokestatic  #31
590: aload         24
592: invokestatic  #31
595: aload         24
597: invokestatic  #32
600: ldc           #35
602: invokestatic  #34
605: aload         29
607: invokestatic  #31
610: aload         29
612: invokestatic  #32
615: ldc           #35
617: invokestatic  #34
620: new           #39
623: dup
624: invokespecial #40
627: ldc           #41
629: invokevirtual #42
632: iload         31
634: invokevirtual #69
637: ldc           #44
639: invokevirtual #42
642: iconst_1
643: invokevirtual #69
646: ldc           #41
648: invokevirtual #42
651: invokevirtual #45
654: iload         31
656: iconst_1
657: if_icmpne     664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #46
668: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2039
End line: 2051
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        int int4 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: invokevirtual #83
46: dstore        4
48: aload_1
49: invokevirtual #57
52: istore        6
54: aload_2
55: invokestatic  #30
58: aload_3
59: invokestatic  #30
62: dload         4
64: invokestatic  #86
67: invokestatic  #87
70: new           #39
73: dup
74: invokespecial #40
77: ldc           #41
79: invokevirtual #42
82: iload         6
84: invokevirtual #43
87: ldc           #44
89: invokevirtual #42
92: iconst_0
93: invokevirtual #43
96: ldc           #41
98: invokevirtual #42
101: invokevirtual #45
104: iload         6
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #46
117: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2054
End line: 2096
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        double[] doubleArray27 = vectorialPointValuePair25.getValueRef();
        levenbergMarquardtOptimizer0.residuals = doubleArray27;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker29 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: iconst_3
62: newarray       double
64: dup
65: iconst_0
66: dconst_1
67: dastore
68: dup
69: iconst_1
70: dconst_0
71: dastore
72: dup
73: iconst_2
74: ldc2_w        #11
77: dastore
78: astore        6
80: aload         6
82: invokestatic  #13
85: astore        7
87: iconst_3
88: newarray       double
90: dup
91: iconst_0
92: dconst_1
93: dastore
94: dup
95: iconst_1
96: dconst_0
97: dastore
98: dup
99: iconst_2
100: ldc2_w        #11
103: dastore
104: astore        8
106: aload         8
108: invokestatic  #13
111: astore        9
113: aload         7
115: iconst_0
116: aload         8
118: invokeinterface #14,  3
123: aload         8
125: invokestatic  #15
128: astore        10
130: iconst_1
131: newarray       double
133: dup
134: iconst_0
135: ldc2_w        #16
138: dastore
139: astore        11
141: aconst_null
142: astore        12
144: aconst_null
145: astore        13
147: new           #18
150: dup
151: aload         11
153: aload         12
155: aload         13
157: invokespecial #19
160: astore        14
162: new           #20
165: dup
166: aload         8
168: aload         11
170: invokespecial #21
173: astore        15
175: aload         15
177: invokevirtual #22
180: astore        16
182: aload         15
184: invokevirtual #140
187: astore        17
189: aload_1
190: aload         17
192: putfield      #76
195: aload_1
196: getfield      #53
199: astore        18
201: new           #39
204: dup
205: invokespecial #40
208: ldc           #41
210: invokevirtual #42
213: iload_2
214: invokevirtual #43
217: ldc           #44
219: invokevirtual #42
222: iconst_0
223: invokevirtual #43
226: ldc           #41
228: invokevirtual #42
231: invokevirtual #45
234: iload_2
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #46
246: new           #39
249: dup
250: invokespecial #40
253: ldc           #41
255: invokevirtual #42
258: iload_3
259: invokevirtual #43
262: ldc           #44
264: invokevirtual #42
267: iconst_0
268: invokevirtual #43
271: ldc           #41
273: invokevirtual #42
276: invokevirtual #45
279: iload_3
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #46
291: aload         4
293: invokestatic  #30
296: new           #39
299: dup
300: invokespecial #40
303: ldc           #41
305: invokevirtual #42
308: iload         5
310: invokevirtual #43
313: ldc           #44
315: invokevirtual #42
318: ldc           #73
320: invokevirtual #43
323: ldc           #41
325: invokevirtual #42
328: invokevirtual #45
331: iload         5
333: ldc           #73
335: if_icmpne     342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #46
346: aload         6
348: invokestatic  #31
351: aload         6
353: invokestatic  #32
356: ldc           #33
358: invokestatic  #34
361: aload         7
363: invokestatic  #31
366: aload         8
368: invokestatic  #31
371: aload         8
373: invokestatic  #32
376: ldc           #33
378: invokestatic  #34
381: aload         9
383: invokestatic  #31
386: aload         10
388: invokestatic  #31
391: aload         11
393: invokestatic  #31
396: aload         11
398: invokestatic  #32
401: ldc           #35
403: invokestatic  #34
406: aload         16
408: invokestatic  #31
411: aload         16
413: invokestatic  #32
416: ldc           #35
418: invokestatic  #34
421: aload         17
423: invokestatic  #31
426: aload         17
428: invokestatic  #32
431: ldc           #35
433: invokestatic  #34
436: aload         18
438: invokestatic  #30
441: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2099
End line: 2109
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray2 = levenbergMarquardtOptimizer0.targetValues;
        int int3 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: getfield      #146
41: astore_3
42: aload_1
43: invokevirtual #71
46: istore        4
48: new           #39
51: dup
52: invokespecial #40
55: ldc           #41
57: invokevirtual #42
60: iload_2
61: invokevirtual #43
64: ldc           #44
66: invokevirtual #42
69: iconst_0
70: invokevirtual #43
73: ldc           #41
75: invokevirtual #42
78: invokevirtual #45
81: iload_2
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #46
93: aload_3
94: invokestatic  #30
97: new           #39
100: dup
101: invokespecial #40
104: ldc           #41
106: invokevirtual #42
109: iload         4
111: invokevirtual #43
114: ldc           #44
116: invokevirtual #42
119: ldc           #73
121: invokevirtual #43
124: ldc           #41
126: invokevirtual #42
129: invokevirtual #45
132: iload         4
134: ldc           #73
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #46
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2112
End line: 2128
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray3 = levenbergMarquardtOptimizer0.objective;
        int int4 = levenbergMarquardtOptimizer0.getEvaluations();
        int int5 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray6 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #182
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #56
46: astore        4
48: aload_1
49: invokevirtual #160
52: istore        5
54: aload_1
55: invokevirtual #57
58: istore        6
60: aload_1
61: getfield      #80
64: astore        7
66: new           #39
69: dup
70: invokespecial #40
73: ldc           #41
75: invokevirtual #42
78: iload_2
79: invokevirtual #43
82: ldc           #44
84: invokevirtual #42
87: iconst_0
88: invokevirtual #43
91: ldc           #41
93: invokevirtual #42
96: invokevirtual #45
99: iload_2
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #46
111: new           #39
114: dup
115: invokespecial #40
118: ldc           #41
120: invokevirtual #42
123: iload_3
124: invokevirtual #43
127: ldc           #44
129: invokevirtual #42
132: iconst_0
133: invokevirtual #43
136: ldc           #41
138: invokevirtual #42
141: invokevirtual #45
144: iload_3
145: ifne          152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #46
156: aload         4
158: invokestatic  #30
161: new           #39
164: dup
165: invokespecial #40
168: ldc           #41
170: invokevirtual #42
173: iload         5
175: invokevirtual #43
178: ldc           #44
180: invokevirtual #42
183: iconst_0
184: invokevirtual #43
187: ldc           #41
189: invokevirtual #42
192: invokevirtual #45
195: iload         5
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #46
208: new           #39
211: dup
212: invokespecial #40
215: ldc           #41
217: invokevirtual #42
220: iload         6
222: invokevirtual #43
225: ldc           #44
227: invokevirtual #42
230: iconst_0
231: invokevirtual #43
234: ldc           #41
236: invokevirtual #42
239: invokevirtual #45
242: iload         6
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #46
255: aload         7
257: invokestatic  #30
260: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2131
End line: 2145
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        int int5 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.rows = 0;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(1.6541065600621006d, 1.6541065600621006d);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: invokevirtual #57
53: istore        5
55: aload_1
56: iconst_0
57: putfield      #81
60: new           #61
63: dup
64: ldc2_w        #184
67: ldc2_w        #184
70: invokespecial #64
73: astore        6
75: aload_1
76: aload         6
78: invokevirtual #66
81: aload_2
82: invokestatic  #30
85: dload_3
86: invokestatic  #86
89: invokestatic  #87
92: new           #39
95: dup
96: invokespecial #40
99: ldc           #41
101: invokevirtual #42
104: iload         5
106: invokevirtual #43
109: ldc           #44
111: invokevirtual #42
114: iconst_0
115: invokevirtual #43
118: ldc           #41
120: invokevirtual #42
123: invokevirtual #45
126: iload         5
128: ifne          135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #46
139: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 2148
End line: 2162
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        int int5 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.rows = 0;
        double[] doubleArray8 = levenbergMarquardtOptimizer0.objective;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: invokevirtual #57
53: istore        5
55: aload_1
56: iconst_0
57: putfield      #81
60: aload_1
61: getfield      #56
64: astore        6
66: aload_2
67: invokestatic  #30
70: dload_3
71: invokestatic  #86
74: invokestatic  #87
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload         5
91: invokevirtual #43
94: ldc           #44
96: invokevirtual #42
99: iconst_0
100: invokevirtual #43
103: ldc           #41
105: invokevirtual #42
108: invokevirtual #45
111: iload         5
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #46
124: aload         6
126: invokestatic  #30
129: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 2165
End line: 2181
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.rows = (byte) 0;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNull(vectorialConvergenceChecker9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #187
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: aload_1
62: iconst_0
63: putfield      #81
66: aload_1
67: invokevirtual #10
70: astore        6
72: new           #39
75: dup
76: invokespecial #40
79: ldc           #41
81: invokevirtual #42
84: iload_2
85: invokevirtual #43
88: ldc           #44
90: invokevirtual #42
93: iconst_0
94: invokevirtual #43
97: ldc           #41
99: invokevirtual #42
102: invokevirtual #45
105: iload_2
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #46
117: new           #39
120: dup
121: invokespecial #40
124: ldc           #41
126: invokevirtual #42
129: iload_3
130: invokevirtual #43
133: ldc           #44
135: invokevirtual #42
138: iconst_0
139: invokevirtual #43
142: ldc           #41
144: invokevirtual #42
147: invokevirtual #45
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #46
162: aload         4
164: invokestatic  #30
167: new           #39
170: dup
171: invokespecial #40
174: ldc           #41
176: invokevirtual #42
179: iload         5
181: invokevirtual #43
184: ldc           #44
186: invokevirtual #42
189: ldc           #73
191: invokevirtual #43
194: ldc           #41
196: invokevirtual #42
199: invokevirtual #45
202: iload         5
204: ldc           #73
206: if_icmpne     213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #46
217: aload         6
219: invokestatic  #30
222: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 2184
End line: 2200
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residualsWeights;
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setParRelativeTolerance(Double.NaN);
        int int8 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #188
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: invokevirtual #84
46: aload_1
47: getfield      #72
50: astore        5
52: aload_1
53: invokevirtual #59
56: istore        6
58: aload_1
59: ldc2_w        #190
62: invokevirtual #138
65: aload_1
66: getfield      #58
69: istore        7
71: aload_2
72: invokestatic  #30
75: dload_3
76: invokestatic  #86
79: invokestatic  #87
82: aload         5
84: invokestatic  #30
87: new           #39
90: dup
91: invokespecial #40
94: ldc           #41
96: invokevirtual #42
99: iload         6
101: invokevirtual #43
104: ldc           #44
106: invokevirtual #42
109: sipush        1000
112: invokevirtual #43
115: ldc           #41
117: invokevirtual #42
120: invokevirtual #45
123: iload         6
125: sipush        1000
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #46
139: new           #39
142: dup
143: invokespecial #40
146: ldc           #41
148: invokevirtual #42
151: iload         7
153: invokevirtual #43
156: ldc           #44
158: invokevirtual #42
161: iconst_0
162: invokevirtual #43
165: ldc           #41
167: invokevirtual #42
170: invokevirtual #45
173: iload         7
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #46
186: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 2203
End line: 2216
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        int int2 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cols = 4;
        levenbergMarquardtOptimizer0.cols = 0;
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 100.0f);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #57
41: istore_3
42: aload_1
43: invokevirtual #10
46: astore        4
48: aload_1
49: iconst_4
50: putfield      #58
53: aload_1
54: iconst_0
55: putfield      #58
58: aload_1
59: ldc2_w        #48
62: invokevirtual #96
65: aload_2
66: invokestatic  #30
69: new           #39
72: dup
73: invokespecial #40
76: ldc           #41
78: invokevirtual #42
81: iload_3
82: invokevirtual #43
85: ldc           #44
87: invokevirtual #42
90: iconst_0
91: invokevirtual #43
94: ldc           #41
96: invokevirtual #42
99: invokevirtual #45
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #46
114: aload         4
116: invokestatic  #30
119: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 2219
End line: 2228
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker4 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: aload_1
45: getfield      #53
48: astore_3
49: new           #39
52: dup
53: invokespecial #40
56: ldc           #41
58: invokevirtual #42
61: iload_2
62: invokevirtual #43
65: ldc           #44
67: invokevirtual #42
70: iconst_0
71: invokevirtual #43
74: ldc           #41
76: invokevirtual #42
79: invokevirtual #45
82: iload_2
83: ifne          90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #46
94: aload_3
95: invokestatic  #30
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 2231
End line: 2304
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) (byte) -1);
        int int66 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker67 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #194
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: ldc2_w        #11
394: invokevirtual #138
397: aload_1
398: invokevirtual #71
401: istore        32
403: aload_1
404: getfield      #53
407: astore        33
409: new           #39
412: dup
413: invokespecial #40
416: ldc           #41
418: invokevirtual #42
421: iload_2
422: invokevirtual #43
425: ldc           #44
427: invokevirtual #42
430: iconst_0
431: invokevirtual #43
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: iload_2
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #46
454: aload         4
456: invokestatic  #31
459: aload         4
461: invokestatic  #32
464: ldc           #33
466: invokestatic  #34
469: aload         5
471: invokestatic  #31
474: aload         6
476: invokestatic  #31
479: aload         6
481: invokestatic  #32
484: ldc           #33
486: invokestatic  #34
489: aload         7
491: invokestatic  #31
494: aload         8
496: invokestatic  #31
499: aload         9
501: invokestatic  #31
504: aload         9
506: invokestatic  #32
509: ldc           #35
511: invokestatic  #34
514: aload         14
516: invokestatic  #31
519: aload         14
521: invokestatic  #32
524: ldc           #33
526: invokestatic  #34
529: aload         15
531: invokestatic  #31
534: aload         16
536: invokestatic  #31
539: aload         16
541: invokestatic  #32
544: ldc           #33
546: invokestatic  #34
549: aload         17
551: invokestatic  #31
554: aload         18
556: invokestatic  #31
559: aload         19
561: invokestatic  #31
564: aload         19
566: invokestatic  #32
569: ldc           #33
571: invokestatic  #34
574: aload         20
576: invokestatic  #31
579: aload         21
581: invokestatic  #31
584: aload         21
586: invokestatic  #32
589: ldc           #33
591: invokestatic  #34
594: aload         22
596: invokestatic  #31
599: aload         23
601: invokestatic  #31
604: aload         24
606: invokestatic  #31
609: aload         24
611: invokestatic  #32
614: ldc           #35
616: invokestatic  #34
619: aload         29
621: invokestatic  #31
624: aload         29
626: invokestatic  #32
629: ldc           #35
631: invokestatic  #34
634: new           #39
637: dup
638: invokespecial #40
641: ldc           #41
643: invokevirtual #42
646: iload         31
648: invokevirtual #69
651: ldc           #44
653: invokevirtual #42
656: iconst_1
657: invokevirtual #69
660: ldc           #41
662: invokevirtual #42
665: invokevirtual #45
668: iload         31
670: iconst_1
671: if_icmpne     678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #46
682: new           #39
685: dup
686: invokespecial #40
689: ldc           #41
691: invokevirtual #42
694: iload         32
696: invokevirtual #43
699: ldc           #44
701: invokevirtual #42
704: ldc           #73
706: invokevirtual #43
709: ldc           #41
711: invokevirtual #42
714: invokevirtual #45
717: iload         32
719: ldc           #73
721: if_icmpne     728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #46
732: aload         33
734: invokestatic  #31
737: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 2307
End line: 2317
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) '#');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #195
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: ldc2_w        #124
53: invokevirtual #78
56: new           #39
59: dup
60: invokespecial #40
63: ldc           #41
65: invokevirtual #42
68: iload_2
69: invokevirtual #43
72: ldc           #44
74: invokevirtual #42
77: iconst_0
78: invokevirtual #43
81: ldc           #41
83: invokevirtual #42
86: invokevirtual #45
89: iload_2
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #46
101: new           #39
104: dup
105: invokespecial #40
108: ldc           #41
110: invokevirtual #42
113: iload_3
114: invokevirtual #43
117: ldc           #44
119: invokevirtual #42
122: iconst_0
123: invokevirtual #43
126: ldc           #41
128: invokevirtual #42
131: invokevirtual #45
134: iload_3
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #46
146: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 2320
End line: 2332
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        int int3 = levenbergMarquardtOptimizer0.rows;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker4 = null;
        levenbergMarquardtOptimizer0.checker = vectorialConvergenceChecker4;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #196
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: getfield      #81
46: istore        5
48: aconst_null
49: astore        6
51: aload_1
52: aload         6
54: putfield      #53
57: aload_2
58: invokestatic  #30
61: dload_3
62: invokestatic  #86
65: invokestatic  #87
68: new           #39
71: dup
72: invokespecial #40
75: ldc           #41
77: invokevirtual #42
80: iload         5
82: invokevirtual #43
85: ldc           #44
87: invokevirtual #42
90: iconst_0
91: invokevirtual #43
94: ldc           #41
96: invokevirtual #42
99: invokevirtual #45
102: iload         5
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #46
115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 2335
End line: 2345
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(2.23606797749979d);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aload_1
50: ldc2_w        #198
53: invokevirtual #78
56: aload_2
57: invokestatic  #30
60: dload_3
61: invokestatic  #86
64: invokestatic  #87
67: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 2348
End line: 2446
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        int int4 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray8 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix9 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray8);
        double[] doubleArray14 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix15 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray14);
        realMatrix9.setRow(0, doubleArray14);
        org.apache.commons.math.linear.BigMatrix bigMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray14);
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable20 = null;
        java.lang.Object[] objArray21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray19, localizable20, objArray21);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray19);
        double[] doubleArray24 = vectorialPointValuePair23.getValueRef();
        org.apache.commons.math.exception.Localizable localizable26 = null;
        java.lang.Object[] objArray27 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, localizable26, objArray27);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException40 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray39);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0d, eOFException40 };
        java.lang.ArithmeticException arithmeticException42 = org.apache.commons.math.MathRuntimeException.createArithmeticException("", objArray41);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray52);
        java.util.NoSuchElementException noSuchElementException54 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) arithmeticException42, "", objArray52);
        org.apache.commons.math.exception.Localizable localizable56 = convergenceException55.getLocalizablePattern();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0d, (-1.0f), (-1.0f), (byte) 0, 1, 0 };
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException("", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException28, (double) (-1L), localizable56, objArray64);
        org.apache.commons.math.exception.Localizable localizable67 = null;
        double[] doubleArray73 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray74 = new double[][] { doubleArray73 };
        org.apache.commons.math.linear.BigMatrix bigMatrix75 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.io.EOFException eOFException76 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable67, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.linear.BigMatrix bigMatrix77 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray74);
        java.lang.ArithmeticException arithmeticException78 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable56, (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.exception.Localizable localizable79 = null;
        double[] doubleArray85 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray86 = new double[][] { doubleArray85 };
        org.apache.commons.math.linear.BigMatrix bigMatrix87 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray86);
        java.util.NoSuchElementException noSuchElementException88 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable79, (java.lang.Object[]) doubleArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24, localizable56, (java.lang.Object[]) doubleArray86);
        levenbergMarquardtOptimizer0.residuals = doubleArray24;
        org.apache.commons.math.linear.RealVector realVector91 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        org.apache.commons.math.linear.BigMatrix bigMatrix92 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(bigMatrix17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, org.apache.commons.math.MathRuntimeException$3: ]");
        org.junit.Assert.assertNotNull(arithmeticException42);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException53);
        org.junit.Assert.assertNotNull(noSuchElementException54);
        org.junit.Assert.assertNotNull(localizable56);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, -1.0, -1.0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(bigMatrix75);
        org.junit.Assert.assertNotNull(eOFException76);
        org.junit.Assert.assertNotNull(bigMatrix77);
        org.junit.Assert.assertNotNull(arithmeticException78);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(bigMatrix87);
        org.junit.Assert.assertNotNull(noSuchElementException88);
        org.junit.Assert.assertNotNull(realVector91);
        org.junit.Assert.assertNotNull(bigMatrix92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #200
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: aload_1
49: invokevirtual #57
52: istore        5
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: dup
62: iconst_1
63: dconst_0
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #11
70: dastore
71: astore        6
73: aload         6
75: invokestatic  #13
78: astore        7
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_1
86: dastore
87: dup
88: iconst_1
89: dconst_0
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #11
96: dastore
97: astore        8
99: aload         8
101: invokestatic  #13
104: astore        9
106: aload         7
108: iconst_0
109: aload         8
111: invokeinterface #14,  3
116: aload         8
118: invokestatic  #15
121: astore        10
123: iconst_1
124: newarray       double
126: dup
127: iconst_0
128: ldc2_w        #16
131: dastore
132: astore        11
134: aconst_null
135: astore        12
137: aconst_null
138: astore        13
140: new           #18
143: dup
144: aload         11
146: aload         12
148: aload         13
150: invokespecial #19
153: astore        14
155: new           #20
158: dup
159: aload         8
161: aload         11
163: invokespecial #21
166: astore        15
168: aload         15
170: invokevirtual #140
173: astore        16
175: aconst_null
176: astore        17
178: aconst_null
179: astore        18
181: new           #18
184: dup
185: ldc2_w        #48
188: aload         17
190: aload         18
192: invokespecial #106
195: astore        19
197: bipush        6
199: anewarray     #5
202: dup
203: iconst_0
204: dconst_1
205: invokestatic  #107
208: aastore
209: dup
210: iconst_1
211: ldc           #108
213: invokestatic  #109
216: aastore
217: dup
218: iconst_2
219: ldc           #108
221: invokestatic  #109
224: aastore
225: dup
226: iconst_3
227: iconst_0
228: invokestatic  #110
231: aastore
232: dup
233: iconst_4
234: iconst_1
235: invokestatic  #111
238: aastore
239: dup
240: iconst_5
241: iconst_0
242: invokestatic  #111
245: aastore
246: astore        20
248: ldc           #112
250: aload         20
252: invokestatic  #113
255: astore        21
257: iconst_2
258: anewarray     #5
261: dup
262: iconst_0
263: dconst_1
264: invokestatic  #107
267: aastore
268: dup
269: iconst_1
270: aload         21
272: aastore
273: astore        22
275: ldc           #112
277: aload         22
279: invokestatic  #114
282: astore        23
284: bipush        6
286: anewarray     #5
289: dup
290: iconst_0
291: dconst_1
292: invokestatic  #107
295: aastore
296: dup
297: iconst_1
298: ldc           #108
300: invokestatic  #109
303: aastore
304: dup
305: iconst_2
306: ldc           #108
308: invokestatic  #109
311: aastore
312: dup
313: iconst_3
314: iconst_0
315: invokestatic  #110
318: aastore
319: dup
320: iconst_4
321: iconst_1
322: invokestatic  #111
325: aastore
326: dup
327: iconst_5
328: iconst_0
329: invokestatic  #111
332: aastore
333: astore        24
335: ldc           #112
337: aload         24
339: invokestatic  #113
342: astore        25
344: ldc           #115
346: aload         24
348: invokestatic  #116
351: astore        26
353: new           #117
356: dup
357: aload         23
359: ldc           #112
361: aload         24
363: invokespecial #118
366: astore        27
368: aload         27
370: invokevirtual #119
373: astore        28
375: bipush        6
377: anewarray     #5
380: dup
381: iconst_0
382: dconst_1
383: invokestatic  #107
386: aastore
387: dup
388: iconst_1
389: ldc           #108
391: invokestatic  #109
394: aastore
395: dup
396: iconst_2
397: ldc           #108
399: invokestatic  #109
402: aastore
403: dup
404: iconst_3
405: iconst_0
406: invokestatic  #110
409: aastore
410: dup
411: iconst_4
412: iconst_1
413: invokestatic  #111
416: aastore
417: dup
418: iconst_5
419: iconst_0
420: invokestatic  #111
423: aastore
424: astore        29
426: ldc           #112
428: aload         29
430: invokestatic  #113
433: astore        30
435: new           #18
438: dup
439: aload         19
441: ldc2_w        #11
444: aload         28
446: aload         29
448: invokespecial #120
451: astore        31
453: aconst_null
454: astore        32
456: iconst_5
457: newarray       double
459: dup
460: iconst_0
461: ldc2_w        #124
464: dastore
465: dup
466: iconst_1
467: ldc2_w        #62
470: dastore
471: dup
472: iconst_2
473: ldc2_w        #48
476: dastore
477: dup
478: iconst_3
479: ldc2_w        #16
482: dastore
483: dup
484: iconst_4
485: ldc2_w        #11
488: dastore
489: astore        33
491: iconst_1
492: anewarray     #126
495: dup
496: iconst_0
497: aload         33
499: aastore
500: astore        34
502: aload         34
504: invokestatic  #127
507: astore        35
509: aload         32
511: aload         34
513: checkcast     #128
516: invokestatic  #129
519: astore        36
521: aload         34
523: invokestatic  #127
526: astore        37
528: aload         28
530: aload         34
532: checkcast     #128
535: invokestatic  #141
538: astore        38
540: aconst_null
541: astore        39
543: iconst_5
544: newarray       double
546: dup
547: iconst_0
548: ldc2_w        #124
551: dastore
552: dup
553: iconst_1
554: ldc2_w        #62
557: dastore
558: dup
559: iconst_2
560: ldc2_w        #48
563: dastore
564: dup
565: iconst_3
566: ldc2_w        #16
569: dastore
570: dup
571: iconst_4
572: ldc2_w        #11
575: dastore
576: astore        40
578: iconst_1
579: anewarray     #126
582: dup
583: iconst_0
584: aload         40
586: aastore
587: astore        41
589: aload         41
591: invokestatic  #127
594: astore        42
596: aload         39
598: aload         41
600: checkcast     #128
603: invokestatic  #142
606: astore        43
608: new           #18
611: dup
612: aload         16
614: aload         28
616: aload         41
618: checkcast     #128
621: invokespecial #19
624: astore        44
626: aload_1
627: aload         16
629: putfield      #76
632: aload         16
634: invokestatic  #167
637: astore        45
639: aload         16
641: invokestatic  #15
644: astore        46
646: new           #39
649: dup
650: invokespecial #40
653: ldc           #41
655: invokevirtual #42
658: iload_2
659: invokevirtual #43
662: ldc           #44
664: invokevirtual #42
667: iconst_0
668: invokevirtual #43
671: ldc           #41
673: invokevirtual #42
676: invokevirtual #45
679: iload_2
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #46
691: new           #39
694: dup
695: invokespecial #40
698: ldc           #41
700: invokevirtual #42
703: iload_3
704: invokevirtual #43
707: ldc           #44
709: invokevirtual #42
712: iconst_0
713: invokevirtual #43
716: ldc           #41
718: invokevirtual #42
721: invokevirtual #45
724: iload_3
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #46
736: aload         4
738: invokestatic  #30
741: new           #39
744: dup
745: invokespecial #40
748: ldc           #41
750: invokevirtual #42
753: iload         5
755: invokevirtual #43
758: ldc           #44
760: invokevirtual #42
763: iconst_0
764: invokevirtual #43
767: ldc           #41
769: invokevirtual #42
772: invokevirtual #45
775: iload         5
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #46
788: aload         6
790: invokestatic  #31
793: aload         6
795: invokestatic  #32
798: ldc           #33
800: invokestatic  #34
803: aload         7
805: invokestatic  #31
808: aload         8
810: invokestatic  #31
813: aload         8
815: invokestatic  #32
818: ldc           #33
820: invokestatic  #34
823: aload         9
825: invokestatic  #31
828: aload         10
830: invokestatic  #31
833: aload         11
835: invokestatic  #31
838: aload         11
840: invokestatic  #32
843: ldc           #35
845: invokestatic  #34
848: aload         16
850: invokestatic  #31
853: aload         16
855: invokestatic  #32
858: ldc           #35
860: invokestatic  #34
863: aload         20
865: invokestatic  #31
868: aload         20
870: invokestatic  #131
873: ldc           #132
875: invokestatic  #34
878: aload         20
880: invokestatic  #133
883: ldc           #132
885: invokestatic  #34
888: aload         21
890: invokestatic  #31
893: aload         22
895: invokestatic  #31
898: aload         22
900: invokestatic  #131
903: ldc           #134
905: invokestatic  #34
908: aload         22
910: invokestatic  #133
913: ldc           #134
915: invokestatic  #34
918: aload         23
920: invokestatic  #31
923: aload         24
925: invokestatic  #31
928: aload         24
930: invokestatic  #131
933: ldc           #132
935: invokestatic  #34
938: aload         24
940: invokestatic  #133
943: ldc           #132
945: invokestatic  #34
948: aload         25
950: invokestatic  #31
953: aload         26
955: invokestatic  #31
958: aload         28
960: invokestatic  #31
963: aload         29
965: invokestatic  #31
968: aload         29
970: invokestatic  #131
973: ldc           #132
975: invokestatic  #34
978: aload         29
980: invokestatic  #133
983: ldc           #132
985: invokestatic  #34
988: aload         30
990: invokestatic  #31
993: aload         33
995: invokestatic  #31
998: aload         33
1000: invokestatic  #32
1003: ldc           #135
1005: invokestatic  #34
1008: aload         34
1010: invokestatic  #31
1013: aload         35
1015: invokestatic  #31
1018: aload         36
1020: invokestatic  #31
1023: aload         37
1025: invokestatic  #31
1028: aload         38
1030: invokestatic  #31
1033: aload         40
1035: invokestatic  #31
1038: aload         40
1040: invokestatic  #32
1043: ldc           #135
1045: invokestatic  #34
1048: aload         41
1050: invokestatic  #31
1053: aload         42
1055: invokestatic  #31
1058: aload         43
1060: invokestatic  #31
1063: aload         45
1065: invokestatic  #31
1068: aload         46
1070: invokestatic  #31
1073: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 2449
End line: 2478
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(97.0d);
        org.apache.commons.math.exception.Localizable localizable8 = null;
        double[] doubleArray14 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray15 = new double[][] { doubleArray14 };
        org.apache.commons.math.linear.BigMatrix bigMatrix16 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable8, (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "", (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("Array2DRowRealMatrix{{1.0},{0.0},{-1.0}}", (java.lang.Object[]) doubleArray15);
        levenbergMarquardtOptimizer0.jacobian = doubleArray15;
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateJacobian();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(bigMatrix16);
        org.junit.Assert.assertNotNull(eOFException17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: ldc2_w        #16
46: invokevirtual #96
49: aconst_null
50: astore        5
52: iconst_5
53: newarray       double
55: dup
56: iconst_0
57: ldc2_w        #124
60: dastore
61: dup
62: iconst_1
63: ldc2_w        #62
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #48
72: dastore
73: dup
74: iconst_3
75: ldc2_w        #16
78: dastore
79: dup
80: iconst_4
81: ldc2_w        #11
84: dastore
85: astore        6
87: iconst_1
88: anewarray     #126
91: dup
92: iconst_0
93: aload         6
95: aastore
96: astore        7
98: aload         7
100: invokestatic  #127
103: astore        8
105: aload         5
107: aload         7
109: checkcast     #128
112: invokestatic  #129
115: astore        9
117: new           #18
120: dup
121: ldc2_w        #48
124: ldc           #112
126: aload         7
128: checkcast     #128
131: invokespecial #202
134: astore        10
136: new           #117
139: dup
140: ldc           #203
142: aload         7
144: checkcast     #128
147: invokespecial #204
150: astore        11
152: aload_1
153: aload         7
155: putfield      #54
158: aload_1
159: invokevirtual #205
162: ldc           #102
164: invokestatic  #28
167: goto          172
170: astore        12
172: aload_2
173: invokestatic  #30
176: dload_3
177: invokestatic  #86
180: invokestatic  #87
183: aload         6
185: invokestatic  #31
188: aload         6
190: invokestatic  #32
193: ldc           #135
195: invokestatic  #34
198: aload         7
200: invokestatic  #31
203: aload         8
205: invokestatic  #31
208: aload         9
210: invokestatic  #31
213: return
Exception table:
from    to  target type
158   167   170   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 2481
End line: 2499
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = null;
        levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker5);
        int int7 = levenbergMarquardtOptimizer0.getEvaluations();
        double[] doubleArray8 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #206
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: invokevirtual #83
46: dstore        4
48: aload_1
49: getfield      #76
52: astore        6
54: aconst_null
55: astore        7
57: aload_1
58: aload         7
60: invokevirtual #66
63: aload_1
64: invokevirtual #160
67: istore        8
69: aload_1
70: getfield      #80
73: astore        9
75: aload_2
76: invokestatic  #30
79: aload_3
80: invokestatic  #30
83: dload         4
85: invokestatic  #86
88: invokestatic  #87
91: aload         6
93: invokestatic  #30
96: new           #39
99: dup
100: invokespecial #40
103: ldc           #41
105: invokevirtual #42
108: iload         8
110: invokevirtual #43
113: ldc           #44
115: invokevirtual #42
118: iconst_0
119: invokevirtual #43
122: ldc           #41
124: invokevirtual #42
127: invokevirtual #45
130: iload         8
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #46
143: aload         9
145: invokestatic  #30
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 2502
End line: 2516
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        levenbergMarquardtOptimizer0.setMaxEvaluations(52);
        int int6 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray7 = levenbergMarquardtOptimizer0.residuals;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #207
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: invokevirtual #84
46: aload_1
47: bipush        52
49: invokevirtual #38
52: aload_1
53: invokevirtual #37
56: istore        5
58: aload_1
59: getfield      #76
62: astore        6
64: aload_2
65: invokestatic  #30
68: dload_3
69: invokestatic  #86
72: invokestatic  #87
75: new           #39
78: dup
79: invokespecial #40
82: ldc           #41
84: invokevirtual #42
87: iload         5
89: invokevirtual #43
92: ldc           #44
94: invokevirtual #42
97: iconst_1
98: invokevirtual #43
101: ldc           #41
103: invokevirtual #42
106: invokevirtual #45
109: iload         5
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #46
123: aload         6
125: invokestatic  #30
128: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 2519
End line: 2528
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 97);
        levenbergMarquardtOptimizer0.cost = 52;
        levenbergMarquardtOptimizer0.cost = ' ';
        int int7 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #208
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc2_w        #16
36: invokevirtual #78
39: aload_1
40: ldc2_w        #209
43: putfield      #50
46: aload_1
47: ldc2_w        #211
50: putfield      #50
53: aload_1
54: invokevirtual #71
57: istore_2
58: new           #39
61: dup
62: invokespecial #40
65: ldc           #41
67: invokevirtual #42
70: iload_2
71: invokevirtual #43
74: ldc           #44
76: invokevirtual #42
79: ldc           #73
81: invokevirtual #43
84: ldc           #41
86: invokevirtual #42
89: invokevirtual #45
92: iload_2
93: ldc           #73
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #46
106: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 2531
End line: 2560
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int2 = levenbergMarquardtOptimizer1.getIterations();
        int int3 = levenbergMarquardtOptimizer1.getIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray5 = levenbergMarquardtOptimizer4.objective;
        double double6 = levenbergMarquardtOptimizer4.getRMS();
        levenbergMarquardtOptimizer4.setCostRelativeTolerance(97.0d);
        org.apache.commons.math.exception.Localizable localizable12 = null;
        double[] doubleArray18 = new double[] { '#', 10.0f, (byte) 100, 'a', (byte) -1 };
        double[][] doubleArray19 = new double[][] { doubleArray18 };
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createBigMatrix(doubleArray19);
        java.io.EOFException eOFException21 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable12, (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "", (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("Array2DRowRealMatrix{{1.0},{0.0},{-1.0}}", (java.lang.Object[]) doubleArray19);
        levenbergMarquardtOptimizer4.jacobian = doubleArray19;
        levenbergMarquardtOptimizer1.jacobian = doubleArray19;
        org.apache.commons.math.linear.InvalidMatrixException invalidMatrixException26 = new org.apache.commons.math.linear.InvalidMatrixException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray19);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[35.0, 10.0, 100.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(eOFException21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: new           #8
45: dup
46: invokespecial #9
49: astore        4
51: aload         4
53: getfield      #56
56: astore        5
58: aload         4
60: invokevirtual #83
63: dstore        6
65: aload         4
67: ldc2_w        #16
70: invokevirtual #96
73: aconst_null
74: astore        8
76: iconst_5
77: newarray       double
79: dup
80: iconst_0
81: ldc2_w        #124
84: dastore
85: dup
86: iconst_1
87: ldc2_w        #62
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #48
96: dastore
97: dup
98: iconst_3
99: ldc2_w        #16
102: dastore
103: dup
104: iconst_4
105: ldc2_w        #11
108: dastore
109: astore        9
111: iconst_1
112: anewarray     #126
115: dup
116: iconst_0
117: aload         9
119: aastore
120: astore        10
122: aload         10
124: invokestatic  #127
127: astore        11
129: aload         8
131: aload         10
133: checkcast     #128
136: invokestatic  #129
139: astore        12
141: new           #18
144: dup
145: ldc2_w        #48
148: ldc           #112
150: aload         10
152: checkcast     #128
155: invokespecial #202
158: astore        13
160: new           #117
163: dup
164: ldc           #203
166: aload         10
168: checkcast     #128
171: invokespecial #204
174: astore        14
176: aload         4
178: aload         10
180: putfield      #54
183: aload_1
184: aload         10
186: putfield      #54
189: new           #214
192: dup
193: ldc           #148
195: aload         10
197: checkcast     #128
200: invokespecial #215
203: astore        15
205: new           #39
208: dup
209: invokespecial #40
212: ldc           #41
214: invokevirtual #42
217: iload_2
218: invokevirtual #43
221: ldc           #44
223: invokevirtual #42
226: iconst_0
227: invokevirtual #43
230: ldc           #41
232: invokevirtual #42
235: invokevirtual #45
238: iload_2
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #46
250: new           #39
253: dup
254: invokespecial #40
257: ldc           #41
259: invokevirtual #42
262: iload_3
263: invokevirtual #43
266: ldc           #44
268: invokevirtual #42
271: iconst_0
272: invokevirtual #43
275: ldc           #41
277: invokevirtual #42
280: invokevirtual #45
283: iload_3
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #46
295: aload         5
297: invokestatic  #30
300: dload         6
302: invokestatic  #86
305: invokestatic  #87
308: aload         9
310: invokestatic  #31
313: aload         9
315: invokestatic  #32
318: ldc           #135
320: invokestatic  #34
323: aload         10
325: invokestatic  #31
328: aload         11
330: invokestatic  #31
333: aload         12
335: invokestatic  #31
338: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 2563
End line: 2608
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold(2.23606797749979d);
        int int32 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: ldc2_w        #198
215: invokevirtual #85
218: aload_1
219: invokevirtual #57
222: istore        20
224: new           #39
227: dup
228: invokespecial #40
231: ldc           #41
233: invokevirtual #42
236: iload_2
237: invokevirtual #43
240: ldc           #44
242: invokevirtual #42
245: iconst_0
246: invokevirtual #43
249: ldc           #41
251: invokevirtual #42
254: invokevirtual #45
257: iload_2
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #46
269: new           #39
272: dup
273: invokespecial #40
276: ldc           #41
278: invokevirtual #42
281: iload_3
282: invokevirtual #43
285: ldc           #44
287: invokevirtual #42
290: iconst_0
291: invokevirtual #43
294: ldc           #41
296: invokevirtual #42
299: invokevirtual #45
302: iload_3
303: ifne          310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #46
314: aload         4
316: invokestatic  #30
319: new           #39
322: dup
323: invokespecial #40
326: ldc           #41
328: invokevirtual #42
331: iload         6
333: invokevirtual #43
336: ldc           #44
338: invokevirtual #42
341: iconst_0
342: invokevirtual #43
345: ldc           #41
347: invokevirtual #42
350: invokevirtual #45
353: iload         6
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #46
366: new           #39
369: dup
370: invokespecial #40
373: ldc           #41
375: invokevirtual #42
378: iload         7
380: invokevirtual #43
383: ldc           #44
385: invokevirtual #42
388: iconst_0
389: invokevirtual #43
392: ldc           #41
394: invokevirtual #42
397: invokevirtual #45
400: iload         7
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #46
413: aload         8
415: invokestatic  #31
418: aload         8
420: invokestatic  #32
423: ldc           #33
425: invokestatic  #34
428: aload         9
430: invokestatic  #31
433: aload         10
435: invokestatic  #31
438: aload         10
440: invokestatic  #32
443: ldc           #33
445: invokestatic  #34
448: aload         11
450: invokestatic  #31
453: aload         12
455: invokestatic  #31
458: aload         13
460: invokestatic  #31
463: aload         13
465: invokestatic  #32
468: ldc           #35
470: invokestatic  #34
473: aload         18
475: invokestatic  #31
478: aload         18
480: invokestatic  #32
483: ldc           #35
485: invokestatic  #34
488: new           #39
491: dup
492: invokespecial #40
495: ldc           #41
497: invokevirtual #42
500: iload         19
502: invokevirtual #43
505: ldc           #44
507: invokevirtual #42
510: iconst_0
511: invokevirtual #43
514: ldc           #41
516: invokevirtual #42
519: invokevirtual #45
522: iload         19
524: ifne          531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #46
535: new           #39
538: dup
539: invokespecial #40
542: ldc           #41
544: invokevirtual #42
547: iload         20
549: invokevirtual #43
552: ldc           #44
554: invokevirtual #42
557: iconst_0
558: invokevirtual #43
561: ldc           #41
563: invokevirtual #42
566: invokevirtual #45
569: iload         20
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #46
582: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 2611
End line: 2671
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold(2.23606797749979d);
        int int32 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int33 = levenbergMarquardtOptimizer0.getEvaluations();
        double[] doubleArray34 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray37 = new double[] { (byte) 0, 1.0f };
        double[] doubleArray40 = new double[] { (byte) 0, 1.0f };
        double[][] doubleArray41 = new double[][] { doubleArray37, doubleArray40 };
        double[][] doubleArray42 = org.apache.commons.math.linear.BlockRealMatrix.toBlocksLayout(doubleArray41);
        levenbergMarquardtOptimizer0.jacobian = doubleArray42;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #217
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: ldc2_w        #198
215: invokevirtual #85
218: aload_1
219: invokevirtual #71
222: istore        20
224: aload_1
225: invokevirtual #160
228: istore        21
230: aload_1
231: getfield      #56
234: astore        22
236: iconst_2
237: newarray       double
239: dup
240: iconst_0
241: dconst_0
242: dastore
243: dup
244: iconst_1
245: dconst_1
246: dastore
247: astore        23
249: iconst_2
250: newarray       double
252: dup
253: iconst_0
254: dconst_0
255: dastore
256: dup
257: iconst_1
258: dconst_1
259: dastore
260: astore        24
262: iconst_2
263: anewarray     #126
266: dup
267: iconst_0
268: aload         23
270: aastore
271: dup
272: iconst_1
273: aload         24
275: aastore
276: astore        25
278: aload         25
280: invokestatic  #218
283: astore        26
285: aload_1
286: aload         26
288: putfield      #54
291: new           #39
294: dup
295: invokespecial #40
298: ldc           #41
300: invokevirtual #42
303: iload_2
304: invokevirtual #43
307: ldc           #44
309: invokevirtual #42
312: iconst_0
313: invokevirtual #43
316: ldc           #41
318: invokevirtual #42
321: invokevirtual #45
324: iload_2
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #46
336: new           #39
339: dup
340: invokespecial #40
343: ldc           #41
345: invokevirtual #42
348: iload_3
349: invokevirtual #43
352: ldc           #44
354: invokevirtual #42
357: iconst_0
358: invokevirtual #43
361: ldc           #41
363: invokevirtual #42
366: invokevirtual #45
369: iload_3
370: ifne          377
373: iconst_1
374: goto          378
377: iconst_0
378: invokestatic  #46
381: aload         4
383: invokestatic  #30
386: new           #39
389: dup
390: invokespecial #40
393: ldc           #41
395: invokevirtual #42
398: iload         6
400: invokevirtual #43
403: ldc           #44
405: invokevirtual #42
408: iconst_0
409: invokevirtual #43
412: ldc           #41
414: invokevirtual #42
417: invokevirtual #45
420: iload         6
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #46
433: new           #39
436: dup
437: invokespecial #40
440: ldc           #41
442: invokevirtual #42
445: iload         7
447: invokevirtual #43
450: ldc           #44
452: invokevirtual #42
455: iconst_0
456: invokevirtual #43
459: ldc           #41
461: invokevirtual #42
464: invokevirtual #45
467: iload         7
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #46
480: aload         8
482: invokestatic  #31
485: aload         8
487: invokestatic  #32
490: ldc           #33
492: invokestatic  #34
495: aload         9
497: invokestatic  #31
500: aload         10
502: invokestatic  #31
505: aload         10
507: invokestatic  #32
510: ldc           #33
512: invokestatic  #34
515: aload         11
517: invokestatic  #31
520: aload         12
522: invokestatic  #31
525: aload         13
527: invokestatic  #31
530: aload         13
532: invokestatic  #32
535: ldc           #35
537: invokestatic  #34
540: aload         18
542: invokestatic  #31
545: aload         18
547: invokestatic  #32
550: ldc           #35
552: invokestatic  #34
555: new           #39
558: dup
559: invokespecial #40
562: ldc           #41
564: invokevirtual #42
567: iload         19
569: invokevirtual #43
572: ldc           #44
574: invokevirtual #42
577: iconst_0
578: invokevirtual #43
581: ldc           #41
583: invokevirtual #42
586: invokevirtual #45
589: iload         19
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #46
602: new           #39
605: dup
606: invokespecial #40
609: ldc           #41
611: invokevirtual #42
614: iload         20
616: invokevirtual #43
619: ldc           #44
621: invokevirtual #42
624: ldc           #73
626: invokevirtual #43
629: ldc           #41
631: invokevirtual #42
634: invokevirtual #45
637: iload         20
639: ldc           #73
641: if_icmpne     648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #46
652: new           #39
655: dup
656: invokespecial #40
659: ldc           #41
661: invokevirtual #42
664: iload         21
666: invokevirtual #43
669: ldc           #44
671: invokevirtual #42
674: iconst_0
675: invokevirtual #43
678: ldc           #41
680: invokevirtual #42
683: invokevirtual #45
686: iload         21
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #46
699: aload         22
701: invokestatic  #30
704: aload         23
706: invokestatic  #31
709: aload         23
711: invokestatic  #32
714: ldc           #219
716: invokestatic  #34
719: aload         24
721: invokestatic  #31
724: aload         24
726: invokestatic  #32
729: ldc           #219
731: invokestatic  #34
734: aload         25
736: invokestatic  #31
739: aload         26
741: invokestatic  #31
744: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 2674
End line: 2689
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        double double4 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double[][] doubleArray6 = levenbergMarquardtOptimizer0.jacobian;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker7 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(vectorialConvergenceChecker7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #220
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: aload_1
45: getfield      #50
48: dstore_3
49: aload_1
50: invokevirtual #10
53: astore        5
55: aload_1
56: getfield      #54
59: astore        6
61: aload_1
62: invokevirtual #10
65: astore        7
67: new           #39
70: dup
71: invokespecial #40
74: ldc           #41
76: invokevirtual #42
79: iload_2
80: invokevirtual #43
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #43
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload_2
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #46
112: new           #39
115: dup
116: invokespecial #40
119: ldc           #41
121: invokevirtual #42
124: dload_3
125: invokevirtual #51
128: ldc           #44
130: invokevirtual #42
133: ldc2_w        #48
136: invokevirtual #51
139: ldc           #41
141: invokevirtual #42
144: invokevirtual #45
147: dload_3
148: ldc2_w        #48
151: dcmpl
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #46
163: aload         5
165: invokestatic  #30
168: aload         6
170: invokestatic  #30
173: aload         7
175: invokestatic  #30
178: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 2692
End line: 2741
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        double[] doubleArray27 = vectorialPointValuePair25.getValueRef();
        levenbergMarquardtOptimizer0.residuals = doubleArray27;
        org.apache.commons.math.linear.RealMatrix realMatrix29 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex((org.apache.commons.math.linear.AnyMatrix) realMatrix29, (int) (byte) 10, (int) ' ', 3, 5);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: row index 10 out of allowed range [0, 0]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
        org.junit.Assert.assertNotNull(realMatrix29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #221
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: iconst_3
62: newarray       double
64: dup
65: iconst_0
66: dconst_1
67: dastore
68: dup
69: iconst_1
70: dconst_0
71: dastore
72: dup
73: iconst_2
74: ldc2_w        #11
77: dastore
78: astore        6
80: aload         6
82: invokestatic  #13
85: astore        7
87: iconst_3
88: newarray       double
90: dup
91: iconst_0
92: dconst_1
93: dastore
94: dup
95: iconst_1
96: dconst_0
97: dastore
98: dup
99: iconst_2
100: ldc2_w        #11
103: dastore
104: astore        8
106: aload         8
108: invokestatic  #13
111: astore        9
113: aload         7
115: iconst_0
116: aload         8
118: invokeinterface #14,  3
123: aload         8
125: invokestatic  #15
128: astore        10
130: iconst_1
131: newarray       double
133: dup
134: iconst_0
135: ldc2_w        #16
138: dastore
139: astore        11
141: aconst_null
142: astore        12
144: aconst_null
145: astore        13
147: new           #18
150: dup
151: aload         11
153: aload         12
155: aload         13
157: invokespecial #19
160: astore        14
162: new           #20
165: dup
166: aload         8
168: aload         11
170: invokespecial #21
173: astore        15
175: aload         15
177: invokevirtual #22
180: astore        16
182: aload         15
184: invokevirtual #140
187: astore        17
189: aload_1
190: aload         17
192: putfield      #76
195: aload         17
197: invokestatic  #13
200: astore        18
202: aload         18
204: bipush        10
206: bipush        32
208: iconst_3
209: iconst_5
210: invokestatic  #222
213: ldc           #223
215: invokestatic  #28
218: goto          223
221: astore        19
223: new           #39
226: dup
227: invokespecial #40
230: ldc           #41
232: invokevirtual #42
235: iload_2
236: invokevirtual #43
239: ldc           #44
241: invokevirtual #42
244: iconst_0
245: invokevirtual #43
248: ldc           #41
250: invokevirtual #42
253: invokevirtual #45
256: iload_2
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #46
268: new           #39
271: dup
272: invokespecial #40
275: ldc           #41
277: invokevirtual #42
280: iload_3
281: invokevirtual #43
284: ldc           #44
286: invokevirtual #42
289: iconst_0
290: invokevirtual #43
293: ldc           #41
295: invokevirtual #42
298: invokevirtual #45
301: iload_3
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #46
313: aload         4
315: invokestatic  #30
318: new           #39
321: dup
322: invokespecial #40
325: ldc           #41
327: invokevirtual #42
330: iload         5
332: invokevirtual #43
335: ldc           #44
337: invokevirtual #42
340: ldc           #73
342: invokevirtual #43
345: ldc           #41
347: invokevirtual #42
350: invokevirtual #45
353: iload         5
355: ldc           #73
357: if_icmpne     364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #46
368: aload         6
370: invokestatic  #31
373: aload         6
375: invokestatic  #32
378: ldc           #33
380: invokestatic  #34
383: aload         7
385: invokestatic  #31
388: aload         8
390: invokestatic  #31
393: aload         8
395: invokestatic  #32
398: ldc           #33
400: invokestatic  #34
403: aload         9
405: invokestatic  #31
408: aload         10
410: invokestatic  #31
413: aload         11
415: invokestatic  #31
418: aload         11
420: invokestatic  #32
423: ldc           #35
425: invokestatic  #34
428: aload         16
430: invokestatic  #31
433: aload         16
435: invokestatic  #32
438: ldc           #35
440: invokestatic  #34
443: aload         17
445: invokestatic  #31
448: aload         17
450: invokestatic  #32
453: ldc           #35
455: invokestatic  #34
458: aload         18
460: invokestatic  #31
463: return
Exception table:
from    to  target type
202   218   221   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 2744
End line: 2861
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        int int3 = levenbergMarquardtOptimizer0.rows;
        double[] doubleArray7 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix8 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray7);
        double[] doubleArray13 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix14 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray13);
        realMatrix8.setRow(0, doubleArray13);
        org.apache.commons.math.linear.BigMatrix bigMatrix16 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray13);
        double[] doubleArray18 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable19 = null;
        java.lang.Object[] objArray20 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(doubleArray18, localizable19, objArray20);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray18);
        double[] doubleArray23 = vectorialPointValuePair22.getValue();
        double[] doubleArray24 = vectorialPointValuePair22.getPoint();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix25 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray24);
        org.apache.commons.math.linear.RealMatrix realMatrix26 = array2DRowRealMatrix25.copy();
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray41 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable42 = null;
        java.lang.Object[] objArray43 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException(doubleArray41, localizable42, objArray43);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray41);
        double[] doubleArray46 = vectorialPointValuePair45.getValue();
        double[] doubleArray47 = vectorialPointValuePair45.getPoint();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix48 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray47);
        org.apache.commons.math.linear.RealMatrix realMatrix50 = array2DRowRealMatrix48.scalarMultiply((double) (short) 1);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix51 = array2DRowRealMatrix25.subtract(array2DRowRealMatrix48);
        int int52 = array2DRowRealMatrix48.getColumnDimension();
        double[] doubleArray57 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix58 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray57);
        double[] doubleArray63 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix64 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray63);
        realMatrix58.setRow(0, doubleArray63);
        org.apache.commons.math.linear.BigMatrix bigMatrix66 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray63);
        double[] doubleArray70 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix71 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray70);
        double[] doubleArray76 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix77 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray76);
        realMatrix71.setRow(0, doubleArray76);
        org.apache.commons.math.linear.BigMatrix bigMatrix79 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray76);
        double[] doubleArray81 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable82 = null;
        java.lang.Object[] objArray83 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException(doubleArray81, localizable82, objArray83);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray76, doubleArray81);
        double[] doubleArray86 = vectorialPointValuePair85.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray86, true);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix89 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray86);
        array2DRowRealMatrix48.setRow(0, doubleArray86);
        org.apache.commons.math.linear.BigMatrix bigMatrix91 = org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(doubleArray86);
        levenbergMarquardtOptimizer0.residuals = doubleArray86;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix93 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray86);
        org.apache.commons.math.linear.RealMatrix realMatrix95 = array2DRowRealMatrix93.scalarMultiply(97.0d);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(bigMatrix16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(array2DRowRealMatrix51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix64);
        org.junit.Assert.assertNotNull(bigMatrix66);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertNotNull(bigMatrix79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0]");
        org.junit.Assert.assertNotNull(bigMatrix91);
        org.junit.Assert.assertNotNull(realMatrix95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #225
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: invokevirtual #83
41: dstore_3
42: aload_1
43: getfield      #81
46: istore        5
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_1
54: dastore
55: dup
56: iconst_1
57: dconst_0
58: dastore
59: dup
60: iconst_2
61: ldc2_w        #11
64: dastore
65: astore        6
67: aload         6
69: invokestatic  #13
72: astore        7
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_0
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #11
90: dastore
91: astore        8
93: aload         8
95: invokestatic  #13
98: astore        9
100: aload         7
102: iconst_0
103: aload         8
105: invokeinterface #14,  3
110: aload         8
112: invokestatic  #15
115: astore        10
117: iconst_1
118: newarray       double
120: dup
121: iconst_0
122: ldc2_w        #16
125: dastore
126: astore        11
128: aconst_null
129: astore        12
131: aconst_null
132: astore        13
134: new           #18
137: dup
138: aload         11
140: aload         12
142: aload         13
144: invokespecial #19
147: astore        14
149: new           #20
152: dup
153: aload         8
155: aload         11
157: invokespecial #21
160: astore        15
162: aload         15
164: invokevirtual #22
167: astore        16
169: aload         15
171: invokevirtual #226
174: astore        17
176: new           #24
179: dup
180: aload         17
182: invokespecial #25
185: astore        18
187: aload         18
189: invokevirtual #227
192: astore        19
194: iconst_3
195: newarray       double
197: dup
198: iconst_0
199: dconst_1
200: dastore
201: dup
202: iconst_1
203: dconst_0
204: dastore
205: dup
206: iconst_2
207: ldc2_w        #11
210: dastore
211: astore        20
213: aload         20
215: invokestatic  #13
218: astore        21
220: iconst_3
221: newarray       double
223: dup
224: iconst_0
225: dconst_1
226: dastore
227: dup
228: iconst_1
229: dconst_0
230: dastore
231: dup
232: iconst_2
233: ldc2_w        #11
236: dastore
237: astore        22
239: aload         22
241: invokestatic  #13
244: astore        23
246: aload         21
248: iconst_0
249: aload         22
251: invokeinterface #14,  3
256: aload         22
258: invokestatic  #15
261: astore        24
263: iconst_1
264: newarray       double
266: dup
267: iconst_0
268: ldc2_w        #16
271: dastore
272: astore        25
274: aconst_null
275: astore        26
277: aconst_null
278: astore        27
280: new           #18
283: dup
284: aload         25
286: aload         26
288: aload         27
290: invokespecial #19
293: astore        28
295: new           #20
298: dup
299: aload         22
301: aload         25
303: invokespecial #21
306: astore        29
308: aload         29
310: invokevirtual #22
313: astore        30
315: aload         29
317: invokevirtual #226
320: astore        31
322: new           #24
325: dup
326: aload         31
328: invokespecial #25
331: astore        32
333: aload         32
335: dconst_1
336: invokevirtual #228
339: astore        33
341: aload         18
343: aload         32
345: invokevirtual #229
348: astore        34
350: aload         32
352: invokevirtual #230
355: istore        35
357: iconst_3
358: newarray       double
360: dup
361: iconst_0
362: dconst_1
363: dastore
364: dup
365: iconst_1
366: dconst_0
367: dastore
368: dup
369: iconst_2
370: ldc2_w        #11
373: dastore
374: astore        36
376: aload         36
378: invokestatic  #13
381: astore        37
383: iconst_3
384: newarray       double
386: dup
387: iconst_0
388: dconst_1
389: dastore
390: dup
391: iconst_1
392: dconst_0
393: dastore
394: dup
395: iconst_2
396: ldc2_w        #11
399: dastore
400: astore        38
402: aload         38
404: invokestatic  #13
407: astore        39
409: aload         37
411: iconst_0
412: aload         38
414: invokeinterface #14,  3
419: aload         38
421: invokestatic  #15
424: astore        40
426: iconst_3
427: newarray       double
429: dup
430: iconst_0
431: dconst_1
432: dastore
433: dup
434: iconst_1
435: dconst_0
436: dastore
437: dup
438: iconst_2
439: ldc2_w        #11
442: dastore
443: astore        41
445: aload         41
447: invokestatic  #13
450: astore        42
452: iconst_3
453: newarray       double
455: dup
456: iconst_0
457: dconst_1
458: dastore
459: dup
460: iconst_1
461: dconst_0
462: dastore
463: dup
464: iconst_2
465: ldc2_w        #11
468: dastore
469: astore        43
471: aload         43
473: invokestatic  #13
476: astore        44
478: aload         42
480: iconst_0
481: aload         43
483: invokeinterface #14,  3
488: aload         43
490: invokestatic  #15
493: astore        45
495: iconst_1
496: newarray       double
498: dup
499: iconst_0
500: ldc2_w        #16
503: dastore
504: astore        46
506: aconst_null
507: astore        47
509: aconst_null
510: astore        48
512: new           #18
515: dup
516: aload         46
518: aload         47
520: aload         48
522: invokespecial #19
525: astore        49
527: new           #20
530: dup
531: aload         43
533: aload         46
535: invokespecial #21
538: astore        50
540: aload         50
542: invokevirtual #22
545: astore        51
547: new           #20
550: dup
551: aload         38
553: aload         51
555: iconst_1
556: invokespecial #23
559: astore        52
561: new           #24
564: dup
565: aload         51
567: invokespecial #25
570: astore        53
572: aload         32
574: iconst_0
575: aload         51
577: invokevirtual #231
580: aload         51
582: invokestatic  #144
585: astore        54
587: aload_1
588: aload         51
590: putfield      #76
593: new           #24
596: dup
597: aload         51
599: invokespecial #25
602: astore        55
604: aload         55
606: ldc2_w        #16
609: invokevirtual #228
612: astore        56
614: aload_2
615: invokestatic  #30
618: dload_3
619: invokestatic  #86
622: invokestatic  #87
625: new           #39
628: dup
629: invokespecial #40
632: ldc           #41
634: invokevirtual #42
637: iload         5
639: invokevirtual #43
642: ldc           #44
644: invokevirtual #42
647: iconst_0
648: invokevirtual #43
651: ldc           #41
653: invokevirtual #42
656: invokevirtual #45
659: iload         5
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #46
672: aload         6
674: invokestatic  #31
677: aload         6
679: invokestatic  #32
682: ldc           #33
684: invokestatic  #34
687: aload         7
689: invokestatic  #31
692: aload         8
694: invokestatic  #31
697: aload         8
699: invokestatic  #32
702: ldc           #33
704: invokestatic  #34
707: aload         9
709: invokestatic  #31
712: aload         10
714: invokestatic  #31
717: aload         11
719: invokestatic  #31
722: aload         11
724: invokestatic  #32
727: ldc           #35
729: invokestatic  #34
732: aload         16
734: invokestatic  #31
737: aload         16
739: invokestatic  #32
742: ldc           #35
744: invokestatic  #34
747: aload         17
749: invokestatic  #31
752: aload         17
754: invokestatic  #32
757: ldc           #33
759: invokestatic  #34
762: aload         19
764: invokestatic  #31
767: aload         20
769: invokestatic  #31
772: aload         20
774: invokestatic  #32
777: ldc           #33
779: invokestatic  #34
782: aload         21
784: invokestatic  #31
787: aload         22
789: invokestatic  #31
792: aload         22
794: invokestatic  #32
797: ldc           #33
799: invokestatic  #34
802: aload         23
804: invokestatic  #31
807: aload         24
809: invokestatic  #31
812: aload         25
814: invokestatic  #31
817: aload         25
819: invokestatic  #32
822: ldc           #35
824: invokestatic  #34
827: aload         30
829: invokestatic  #31
832: aload         30
834: invokestatic  #32
837: ldc           #35
839: invokestatic  #34
842: aload         31
844: invokestatic  #31
847: aload         31
849: invokestatic  #32
852: ldc           #33
854: invokestatic  #34
857: aload         33
859: invokestatic  #31
862: aload         34
864: invokestatic  #31
867: new           #39
870: dup
871: invokespecial #40
874: ldc           #41
876: invokevirtual #42
879: iload         35
881: invokevirtual #43
884: ldc           #44
886: invokevirtual #42
889: iconst_1
890: invokevirtual #43
893: ldc           #41
895: invokevirtual #42
898: invokevirtual #45
901: iload         35
903: iconst_1
904: if_icmpne     911
907: iconst_1
908: goto          912
911: iconst_0
912: invokestatic  #46
915: aload         36
917: invokestatic  #31
920: aload         36
922: invokestatic  #32
925: ldc           #33
927: invokestatic  #34
930: aload         37
932: invokestatic  #31
935: aload         38
937: invokestatic  #31
940: aload         38
942: invokestatic  #32
945: ldc           #33
947: invokestatic  #34
950: aload         39
952: invokestatic  #31
955: aload         40
957: invokestatic  #31
960: aload         41
962: invokestatic  #31
965: aload         41
967: invokestatic  #32
970: ldc           #33
972: invokestatic  #34
975: aload         42
977: invokestatic  #31
980: aload         43
982: invokestatic  #31
985: aload         43
987: invokestatic  #32
990: ldc           #33
992: invokestatic  #34
995: aload         44
997: invokestatic  #31
1000: aload         45
1002: invokestatic  #31
1005: aload         46
1007: invokestatic  #31
1010: aload         46
1012: invokestatic  #32
1015: ldc           #35
1017: invokestatic  #34
1020: aload         51
1022: invokestatic  #31
1025: aload         51
1027: invokestatic  #32
1030: ldc           #35
1032: invokestatic  #34
1035: aload         54
1037: invokestatic  #31
1040: aload         56
1042: invokestatic  #31
1045: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 2864
End line: 2877
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        levenbergMarquardtOptimizer0.setParRelativeTolerance((-1.0d));
        levenbergMarquardtOptimizer0.setMaxEvaluations(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: ldc2_w        #11
59: invokevirtual #138
62: aload_1
63: iconst_0
64: invokevirtual #38
67: new           #39
70: dup
71: invokespecial #40
74: ldc           #41
76: invokevirtual #42
79: iload_2
80: invokevirtual #43
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #43
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload_2
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #46
112: new           #39
115: dup
116: invokespecial #40
119: ldc           #41
121: invokevirtual #42
124: iload_3
125: invokevirtual #43
128: ldc           #44
130: invokevirtual #42
133: iconst_0
134: invokevirtual #43
137: ldc           #41
139: invokevirtual #42
142: invokevirtual #45
145: iload_3
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #46
157: aload         4
159: invokestatic  #30
162: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 2880
End line: 2924
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        double[] doubleArray27 = vectorialPointValuePair25.getValueRef();
        levenbergMarquardtOptimizer0.residuals = doubleArray27;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray30 = levenbergMarquardtOptimizer0.residualsWeights;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(doubleArray30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: iconst_3
62: newarray       double
64: dup
65: iconst_0
66: dconst_1
67: dastore
68: dup
69: iconst_1
70: dconst_0
71: dastore
72: dup
73: iconst_2
74: ldc2_w        #11
77: dastore
78: astore        6
80: aload         6
82: invokestatic  #13
85: astore        7
87: iconst_3
88: newarray       double
90: dup
91: iconst_0
92: dconst_1
93: dastore
94: dup
95: iconst_1
96: dconst_0
97: dastore
98: dup
99: iconst_2
100: ldc2_w        #11
103: dastore
104: astore        8
106: aload         8
108: invokestatic  #13
111: astore        9
113: aload         7
115: iconst_0
116: aload         8
118: invokeinterface #14,  3
123: aload         8
125: invokestatic  #15
128: astore        10
130: iconst_1
131: newarray       double
133: dup
134: iconst_0
135: ldc2_w        #16
138: dastore
139: astore        11
141: aconst_null
142: astore        12
144: aconst_null
145: astore        13
147: new           #18
150: dup
151: aload         11
153: aload         12
155: aload         13
157: invokespecial #19
160: astore        14
162: new           #20
165: dup
166: aload         8
168: aload         11
170: invokespecial #21
173: astore        15
175: aload         15
177: invokevirtual #22
180: astore        16
182: aload         15
184: invokevirtual #140
187: astore        17
189: aload_1
190: aload         17
192: putfield      #76
195: aload_1
196: invokevirtual #37
199: istore        18
201: aload_1
202: getfield      #72
205: astore        19
207: new           #39
210: dup
211: invokespecial #40
214: ldc           #41
216: invokevirtual #42
219: iload_2
220: invokevirtual #43
223: ldc           #44
225: invokevirtual #42
228: iconst_0
229: invokevirtual #43
232: ldc           #41
234: invokevirtual #42
237: invokevirtual #45
240: iload_2
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #46
252: new           #39
255: dup
256: invokespecial #40
259: ldc           #41
261: invokevirtual #42
264: iload_3
265: invokevirtual #43
268: ldc           #44
270: invokevirtual #42
273: iconst_0
274: invokevirtual #43
277: ldc           #41
279: invokevirtual #42
282: invokevirtual #45
285: iload_3
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #46
297: aload         4
299: invokestatic  #30
302: new           #39
305: dup
306: invokespecial #40
309: ldc           #41
311: invokevirtual #42
314: iload         5
316: invokevirtual #43
319: ldc           #44
321: invokevirtual #42
324: ldc           #73
326: invokevirtual #43
329: ldc           #41
331: invokevirtual #42
334: invokevirtual #45
337: iload         5
339: ldc           #73
341: if_icmpne     348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #46
352: aload         6
354: invokestatic  #31
357: aload         6
359: invokestatic  #32
362: ldc           #33
364: invokestatic  #34
367: aload         7
369: invokestatic  #31
372: aload         8
374: invokestatic  #31
377: aload         8
379: invokestatic  #32
382: ldc           #33
384: invokestatic  #34
387: aload         9
389: invokestatic  #31
392: aload         10
394: invokestatic  #31
397: aload         11
399: invokestatic  #31
402: aload         11
404: invokestatic  #32
407: ldc           #35
409: invokestatic  #34
412: aload         16
414: invokestatic  #31
417: aload         16
419: invokestatic  #32
422: ldc           #35
424: invokestatic  #34
427: aload         17
429: invokestatic  #31
432: aload         17
434: invokestatic  #32
437: ldc           #35
439: invokestatic  #34
442: new           #39
445: dup
446: invokespecial #40
449: ldc           #41
451: invokevirtual #42
454: iload         18
456: invokevirtual #43
459: ldc           #44
461: invokevirtual #42
464: iconst_0
465: invokevirtual #43
468: ldc           #41
470: invokevirtual #42
473: invokevirtual #45
476: iload         18
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #46
489: aload         19
491: invokestatic  #30
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 2927
End line: 3046
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math.linear.BlockRealMatrix(1, (int) (byte) 100);
        int int3 = blockRealMatrix2.getRowDimension();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        int int7 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray27 = vectorialPointValuePair26.getValue();
        double[] doubleArray28 = vectorialPointValuePair26.getValueRef();
        levenbergMarquardtOptimizer4.residuals = doubleArray28;
        double[] doubleArray30 = blockRealMatrix2.preMultiply(doubleArray28);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker33 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray38 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray38);
        double[] doubleArray44 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix45 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray44);
        realMatrix39.setRow(0, doubleArray44);
        org.apache.commons.math.linear.BigMatrix bigMatrix47 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray44);
        double[] doubleArray49 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable50 = null;
        java.lang.Object[] objArray51 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException(doubleArray49, localizable50, objArray51);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray49);
        double[] doubleArray57 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix58 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray57);
        double[] doubleArray63 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix64 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray63);
        realMatrix58.setRow(0, doubleArray63);
        org.apache.commons.math.linear.BigMatrix bigMatrix66 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray63);
        double[] doubleArray70 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix71 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray70);
        double[] doubleArray76 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix77 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray76);
        realMatrix71.setRow(0, doubleArray76);
        org.apache.commons.math.linear.BigMatrix bigMatrix79 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray76);
        double[] doubleArray81 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable82 = null;
        java.lang.Object[] objArray83 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException(doubleArray81, localizable82, objArray83);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray76, doubleArray81);
        double[] doubleArray86 = vectorialPointValuePair85.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray86, true);
        boolean boolean89 = simpleVectorialValueChecker33.converged((int) (short) 1, vectorialPointValuePair53, vectorialPointValuePair88);
        double[] doubleArray90 = vectorialPointValuePair88.getPointRef();
        double[] doubleArray91 = vectorialPointValuePair88.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray92 = blockRealMatrix2.operate(doubleArray91);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix45);
        org.junit.Assert.assertNotNull(bigMatrix47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix64);
        org.junit.Assert.assertNotNull(bigMatrix66);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertNotNull(bigMatrix79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 0.0, -1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: new           #235
27: dup
28: iconst_1
29: bipush        100
31: invokespecial #236
34: astore_1
35: aload_1
36: invokevirtual #237
39: istore_2
40: new           #8
43: dup
44: invokespecial #9
47: astore_3
48: aload_3
49: invokevirtual #37
52: istore        4
54: aload_3
55: invokevirtual #37
58: istore        5
60: aload_3
61: invokevirtual #37
64: istore        6
66: iconst_3
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_0
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #11
82: dastore
83: astore        7
85: aload         7
87: invokestatic  #13
90: astore        8
92: iconst_3
93: newarray       double
95: dup
96: iconst_0
97: dconst_1
98: dastore
99: dup
100: iconst_1
101: dconst_0
102: dastore
103: dup
104: iconst_2
105: ldc2_w        #11
108: dastore
109: astore        9
111: aload         9
113: invokestatic  #13
116: astore        10
118: aload         8
120: iconst_0
121: aload         9
123: invokeinterface #14,  3
128: aload         9
130: invokestatic  #15
133: astore        11
135: iconst_1
136: newarray       double
138: dup
139: iconst_0
140: ldc2_w        #16
143: dastore
144: astore        12
146: aconst_null
147: astore        13
149: aconst_null
150: astore        14
152: new           #18
155: dup
156: aload         12
158: aload         13
160: aload         14
162: invokespecial #19
165: astore        15
167: new           #20
170: dup
171: aload         9
173: aload         12
175: invokespecial #21
178: astore        16
180: aload         16
182: invokevirtual #22
185: astore        17
187: aload         16
189: invokevirtual #140
192: astore        18
194: aload_3
195: aload         18
197: putfield      #76
200: aload_1
201: aload         18
203: invokevirtual #238
206: astore        19
208: new           #61
211: dup
212: ldc2_w        #62
215: dconst_1
216: invokespecial #64
219: astore        20
221: iconst_3
222: newarray       double
224: dup
225: iconst_0
226: dconst_1
227: dastore
228: dup
229: iconst_1
230: dconst_0
231: dastore
232: dup
233: iconst_2
234: ldc2_w        #11
237: dastore
238: astore        21
240: aload         21
242: invokestatic  #13
245: astore        22
247: iconst_3
248: newarray       double
250: dup
251: iconst_0
252: dconst_1
253: dastore
254: dup
255: iconst_1
256: dconst_0
257: dastore
258: dup
259: iconst_2
260: ldc2_w        #11
263: dastore
264: astore        23
266: aload         23
268: invokestatic  #13
271: astore        24
273: aload         22
275: iconst_0
276: aload         23
278: invokeinterface #14,  3
283: aload         23
285: invokestatic  #15
288: astore        25
290: iconst_1
291: newarray       double
293: dup
294: iconst_0
295: ldc2_w        #16
298: dastore
299: astore        26
301: aconst_null
302: astore        27
304: aconst_null
305: astore        28
307: new           #18
310: dup
311: aload         26
313: aload         27
315: aload         28
317: invokespecial #19
320: astore        29
322: new           #20
325: dup
326: aload         23
328: aload         26
330: invokespecial #21
333: astore        30
335: iconst_3
336: newarray       double
338: dup
339: iconst_0
340: dconst_1
341: dastore
342: dup
343: iconst_1
344: dconst_0
345: dastore
346: dup
347: iconst_2
348: ldc2_w        #11
351: dastore
352: astore        31
354: aload         31
356: invokestatic  #13
359: astore        32
361: iconst_3
362: newarray       double
364: dup
365: iconst_0
366: dconst_1
367: dastore
368: dup
369: iconst_1
370: dconst_0
371: dastore
372: dup
373: iconst_2
374: ldc2_w        #11
377: dastore
378: astore        33
380: aload         33
382: invokestatic  #13
385: astore        34
387: aload         32
389: iconst_0
390: aload         33
392: invokeinterface #14,  3
397: aload         33
399: invokestatic  #15
402: astore        35
404: iconst_3
405: newarray       double
407: dup
408: iconst_0
409: dconst_1
410: dastore
411: dup
412: iconst_1
413: dconst_0
414: dastore
415: dup
416: iconst_2
417: ldc2_w        #11
420: dastore
421: astore        36
423: aload         36
425: invokestatic  #13
428: astore        37
430: iconst_3
431: newarray       double
433: dup
434: iconst_0
435: dconst_1
436: dastore
437: dup
438: iconst_1
439: dconst_0
440: dastore
441: dup
442: iconst_2
443: ldc2_w        #11
446: dastore
447: astore        38
449: aload         38
451: invokestatic  #13
454: astore        39
456: aload         37
458: iconst_0
459: aload         38
461: invokeinterface #14,  3
466: aload         38
468: invokestatic  #15
471: astore        40
473: iconst_1
474: newarray       double
476: dup
477: iconst_0
478: ldc2_w        #16
481: dastore
482: astore        41
484: aconst_null
485: astore        42
487: aconst_null
488: astore        43
490: new           #18
493: dup
494: aload         41
496: aload         42
498: aload         43
500: invokespecial #19
503: astore        44
505: new           #20
508: dup
509: aload         38
511: aload         41
513: invokespecial #21
516: astore        45
518: aload         45
520: invokevirtual #22
523: astore        46
525: new           #20
528: dup
529: aload         33
531: aload         46
533: iconst_1
534: invokespecial #23
537: astore        47
539: aload         20
541: iconst_1
542: aload         30
544: aload         47
546: invokevirtual #65
549: istore        48
551: aload         47
553: invokevirtual #239
556: astore        49
558: aload         47
560: invokevirtual #226
563: astore        50
565: aload_1
566: aload         50
568: invokevirtual #240
571: astore        51
573: ldc           #241
575: invokestatic  #28
578: goto          623
581: astore        51
583: aload         51
585: invokevirtual #243
588: invokevirtual #244
591: ifne          623
594: new           #39
597: dup
598: invokespecial #40
601: ldc           #245
603: invokevirtual #42
606: aload         51
608: invokevirtual #243
611: invokevirtual #246
614: invokevirtual #42
617: invokevirtual #45
620: invokestatic  #28
623: new           #39
626: dup
627: invokespecial #40
630: ldc           #41
632: invokevirtual #42
635: iload_2
636: invokevirtual #43
639: ldc           #44
641: invokevirtual #42
644: iconst_1
645: invokevirtual #43
648: ldc           #41
650: invokevirtual #42
653: invokevirtual #45
656: iload_2
657: iconst_1
658: if_icmpne     665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #46
669: new           #39
672: dup
673: invokespecial #40
676: ldc           #41
678: invokevirtual #42
681: iload         4
683: invokevirtual #43
686: ldc           #44
688: invokevirtual #42
691: iconst_0
692: invokevirtual #43
695: ldc           #41
697: invokevirtual #42
700: invokevirtual #45
703: iload         4
705: ifne          712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #46
716: new           #39
719: dup
720: invokespecial #40
723: ldc           #41
725: invokevirtual #42
728: iload         5
730: invokevirtual #43
733: ldc           #44
735: invokevirtual #42
738: iconst_0
739: invokevirtual #43
742: ldc           #41
744: invokevirtual #42
747: invokevirtual #45
750: iload         5
752: ifne          759
755: iconst_1
756: goto          760
759: iconst_0
760: invokestatic  #46
763: new           #39
766: dup
767: invokespecial #40
770: ldc           #41
772: invokevirtual #42
775: iload         6
777: invokevirtual #43
780: ldc           #44
782: invokevirtual #42
785: iconst_0
786: invokevirtual #43
789: ldc           #41
791: invokevirtual #42
794: invokevirtual #45
797: iload         6
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #46
810: aload         7
812: invokestatic  #31
815: aload         7
817: invokestatic  #32
820: ldc           #33
822: invokestatic  #34
825: aload         8
827: invokestatic  #31
830: aload         9
832: invokestatic  #31
835: aload         9
837: invokestatic  #32
840: ldc           #33
842: invokestatic  #34
845: aload         10
847: invokestatic  #31
850: aload         11
852: invokestatic  #31
855: aload         12
857: invokestatic  #31
860: aload         12
862: invokestatic  #32
865: ldc           #35
867: invokestatic  #34
870: aload         17
872: invokestatic  #31
875: aload         17
877: invokestatic  #32
880: ldc           #35
882: invokestatic  #34
885: aload         18
887: invokestatic  #31
890: aload         18
892: invokestatic  #32
895: ldc           #35
897: invokestatic  #34
900: aload         19
902: invokestatic  #31
905: aload         19
907: invokestatic  #32
910: ldc           #247
912: invokestatic  #34
915: aload         21
917: invokestatic  #31
920: aload         21
922: invokestatic  #32
925: ldc           #33
927: invokestatic  #34
930: aload         22
932: invokestatic  #31
935: aload         23
937: invokestatic  #31
940: aload         23
942: invokestatic  #32
945: ldc           #33
947: invokestatic  #34
950: aload         24
952: invokestatic  #31
955: aload         25
957: invokestatic  #31
960: aload         26
962: invokestatic  #31
965: aload         26
967: invokestatic  #32
970: ldc           #35
972: invokestatic  #34
975: aload         31
977: invokestatic  #31
980: aload         31
982: invokestatic  #32
985: ldc           #33
987: invokestatic  #34
990: aload         32
992: invokestatic  #31
995: aload         33
997: invokestatic  #31
1000: aload         33
1002: invokestatic  #32
1005: ldc           #33
1007: invokestatic  #34
1010: aload         34
1012: invokestatic  #31
1015: aload         35
1017: invokestatic  #31
1020: aload         36
1022: invokestatic  #31
1025: aload         36
1027: invokestatic  #32
1030: ldc           #33
1032: invokestatic  #34
1035: aload         37
1037: invokestatic  #31
1040: aload         38
1042: invokestatic  #31
1045: aload         38
1047: invokestatic  #32
1050: ldc           #33
1052: invokestatic  #34
1055: aload         39
1057: invokestatic  #31
1060: aload         40
1062: invokestatic  #31
1065: aload         41
1067: invokestatic  #31
1070: aload         41
1072: invokestatic  #32
1075: ldc           #35
1077: invokestatic  #34
1080: aload         46
1082: invokestatic  #31
1085: aload         46
1087: invokestatic  #32
1090: ldc           #35
1092: invokestatic  #34
1095: new           #39
1098: dup
1099: invokespecial #40
1102: ldc           #41
1104: invokevirtual #42
1107: iload         48
1109: invokevirtual #69
1112: ldc           #44
1114: invokevirtual #42
1117: iconst_1
1118: invokevirtual #69
1121: ldc           #41
1123: invokevirtual #42
1126: invokevirtual #45
1129: iload         48
1131: iconst_1
1132: if_icmpne     1139
1135: iconst_1
1136: goto          1140
1139: iconst_0
1140: invokestatic  #46
1143: aload         49
1145: invokestatic  #31
1148: aload         49
1150: invokestatic  #32
1153: ldc           #33
1155: invokestatic  #34
1158: aload         50
1160: invokestatic  #31
1163: aload         50
1165: invokestatic  #32
1168: ldc           #33
1170: invokestatic  #34
1173: return
Exception table:
from    to  target type
565   578   581   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 3049
End line: 3068
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        double double4 = levenbergMarquardtOptimizer0.getRMS();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray5 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #56
36: astore_2
37: aload_1
38: getfield      #72
41: astore_3
42: aload_1
43: invokevirtual #59
46: istore        4
48: aload_1
49: invokevirtual #83
52: dstore        5
54: aload_1
55: invokevirtual #67
58: astore        7
60: ldc           #68
62: invokestatic  #28
65: goto          70
68: astore        7
70: aload_2
71: invokestatic  #30
74: aload_3
75: invokestatic  #30
78: new           #39
81: dup
82: invokespecial #40
85: ldc           #41
87: invokevirtual #42
90: iload         4
92: invokevirtual #43
95: ldc           #44
97: invokevirtual #42
100: sipush        1000
103: invokevirtual #43
106: ldc           #41
108: invokevirtual #42
111: invokevirtual #45
114: iload         4
116: sipush        1000
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #46
130: dload         5
132: invokestatic  #86
135: invokestatic  #87
138: return
Exception table:
from    to  target type
54    65    68   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 3071
End line: 3118
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold(2.23606797749979d);
        int int32 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray33 = null;
        levenbergMarquardtOptimizer0.point = doubleArray33;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #249
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: ldc2_w        #198
215: invokevirtual #85
218: aload_1
219: invokevirtual #71
222: istore        20
224: aconst_null
225: astore        21
227: aload_1
228: aload         21
230: putfield      #80
233: new           #39
236: dup
237: invokespecial #40
240: ldc           #41
242: invokevirtual #42
245: iload_2
246: invokevirtual #43
249: ldc           #44
251: invokevirtual #42
254: iconst_0
255: invokevirtual #43
258: ldc           #41
260: invokevirtual #42
263: invokevirtual #45
266: iload_2
267: ifne          274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #46
278: new           #39
281: dup
282: invokespecial #40
285: ldc           #41
287: invokevirtual #42
290: iload_3
291: invokevirtual #43
294: ldc           #44
296: invokevirtual #42
299: iconst_0
300: invokevirtual #43
303: ldc           #41
305: invokevirtual #42
308: invokevirtual #45
311: iload_3
312: ifne          319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #46
323: aload         4
325: invokestatic  #30
328: new           #39
331: dup
332: invokespecial #40
335: ldc           #41
337: invokevirtual #42
340: iload         6
342: invokevirtual #43
345: ldc           #44
347: invokevirtual #42
350: iconst_0
351: invokevirtual #43
354: ldc           #41
356: invokevirtual #42
359: invokevirtual #45
362: iload         6
364: ifne          371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #46
375: new           #39
378: dup
379: invokespecial #40
382: ldc           #41
384: invokevirtual #42
387: iload         7
389: invokevirtual #43
392: ldc           #44
394: invokevirtual #42
397: iconst_0
398: invokevirtual #43
401: ldc           #41
403: invokevirtual #42
406: invokevirtual #45
409: iload         7
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #46
422: aload         8
424: invokestatic  #31
427: aload         8
429: invokestatic  #32
432: ldc           #33
434: invokestatic  #34
437: aload         9
439: invokestatic  #31
442: aload         10
444: invokestatic  #31
447: aload         10
449: invokestatic  #32
452: ldc           #33
454: invokestatic  #34
457: aload         11
459: invokestatic  #31
462: aload         12
464: invokestatic  #31
467: aload         13
469: invokestatic  #31
472: aload         13
474: invokestatic  #32
477: ldc           #35
479: invokestatic  #34
482: aload         18
484: invokestatic  #31
487: aload         18
489: invokestatic  #32
492: ldc           #35
494: invokestatic  #34
497: new           #39
500: dup
501: invokespecial #40
504: ldc           #41
506: invokevirtual #42
509: iload         19
511: invokevirtual #43
514: ldc           #44
516: invokevirtual #42
519: iconst_0
520: invokevirtual #43
523: ldc           #41
525: invokevirtual #42
528: invokevirtual #45
531: iload         19
533: ifne          540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #46
544: new           #39
547: dup
548: invokespecial #40
551: ldc           #41
553: invokevirtual #42
556: iload         20
558: invokevirtual #43
561: ldc           #44
563: invokevirtual #42
566: ldc           #73
568: invokevirtual #43
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload         20
581: ldc           #73
583: if_icmpne     590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #46
594: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 3121
End line: 3139
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.rows = (byte) 0;
        double[][] doubleArray11 = org.apache.commons.math.linear.BlockRealMatrix.createBlocksLayout((-1), (int) (short) 1);
        levenbergMarquardtOptimizer0.jacobian = doubleArray11;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(doubleArray11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: aload_1
62: iconst_0
63: putfield      #81
66: iconst_m1
67: iconst_1
68: invokestatic  #251
71: astore        6
73: aload_1
74: aload         6
76: putfield      #54
79: aload_1
80: bipush        100
82: invokevirtual #38
85: new           #39
88: dup
89: invokespecial #40
92: ldc           #41
94: invokevirtual #42
97: iload_2
98: invokevirtual #43
101: ldc           #44
103: invokevirtual #42
106: iconst_0
107: invokevirtual #43
110: ldc           #41
112: invokevirtual #42
115: invokevirtual #45
118: iload_2
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #46
130: new           #39
133: dup
134: invokespecial #40
137: ldc           #41
139: invokevirtual #42
142: iload_3
143: invokevirtual #43
146: ldc           #44
148: invokevirtual #42
151: iconst_0
152: invokevirtual #43
155: ldc           #41
157: invokevirtual #42
160: invokevirtual #45
163: iload_3
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #46
175: aload         4
177: invokestatic  #30
180: new           #39
183: dup
184: invokespecial #40
187: ldc           #41
189: invokevirtual #42
192: iload         5
194: invokevirtual #43
197: ldc           #44
199: invokevirtual #42
202: ldc           #73
204: invokevirtual #43
207: ldc           #41
209: invokevirtual #42
212: invokevirtual #45
215: iload         5
217: ldc           #73
219: if_icmpne     226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #46
230: aload         6
232: invokestatic  #31
235: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 3142
End line: 3155
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        int int3 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) 10);
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: invokevirtual #37
46: istore        4
48: aload_1
49: bipush        10
51: invokevirtual #91
54: aload_1
55: invokevirtual #160
58: istore        5
60: new           #39
63: dup
64: invokespecial #40
67: ldc           #41
69: invokevirtual #42
72: iload_2
73: invokevirtual #43
76: ldc           #44
78: invokevirtual #42
81: iconst_0
82: invokevirtual #43
85: ldc           #41
87: invokevirtual #42
90: invokevirtual #45
93: iload_2
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #46
105: new           #39
108: dup
109: invokespecial #40
112: ldc           #41
114: invokevirtual #42
117: iload_3
118: invokevirtual #43
121: ldc           #44
123: invokevirtual #42
126: iconst_0
127: invokevirtual #43
130: ldc           #41
132: invokevirtual #42
135: invokevirtual #45
138: iload_3
139: ifne          146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #46
150: new           #39
153: dup
154: invokespecial #40
157: ldc           #41
159: invokevirtual #42
162: iload         4
164: invokevirtual #43
167: ldc           #44
169: invokevirtual #42
172: iconst_0
173: invokevirtual #43
176: ldc           #41
178: invokevirtual #42
181: invokevirtual #45
184: iload         4
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #46
197: new           #39
200: dup
201: invokespecial #40
204: ldc           #41
206: invokevirtual #42
209: iload         5
211: invokevirtual #43
214: ldc           #44
216: invokevirtual #42
219: iconst_0
220: invokevirtual #43
223: ldc           #41
225: invokevirtual #42
228: invokevirtual #45
231: iload         5
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #46
244: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 3158
End line: 3233
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker6 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray30 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix31 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray30);
        double[] doubleArray36 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix37 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray36);
        realMatrix31.setRow(0, doubleArray36);
        org.apache.commons.math.linear.BigMatrix bigMatrix39 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray36);
        double[] doubleArray43 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray43);
        double[] doubleArray49 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix50 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray49);
        realMatrix44.setRow(0, doubleArray49);
        org.apache.commons.math.linear.BigMatrix bigMatrix52 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray49);
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable55 = null;
        java.lang.Object[] objArray56 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray54, localizable55, objArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray54);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray59, true);
        boolean boolean62 = simpleVectorialValueChecker6.converged((int) (short) 1, vectorialPointValuePair26, vectorialPointValuePair61);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker6);
        double[] doubleArray64 = levenbergMarquardtOptimizer0.targetValues;
        int int65 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.cost = 0.0d;
        double[][] doubleArray68 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(bigMatrix39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(bigMatrix52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(doubleArray68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #253
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: ldc2_w        #48
41: putfield      #50
44: new           #61
47: dup
48: ldc2_w        #62
51: dconst_1
52: invokespecial #64
55: astore_3
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #11
72: dastore
73: astore        4
75: aload         4
77: invokestatic  #13
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: dconst_1
88: dastore
89: dup
90: iconst_1
91: dconst_0
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #11
98: dastore
99: astore        6
101: aload         6
103: invokestatic  #13
106: astore        7
108: aload         5
110: iconst_0
111: aload         6
113: invokeinterface #14,  3
118: aload         6
120: invokestatic  #15
123: astore        8
125: iconst_1
126: newarray       double
128: dup
129: iconst_0
130: ldc2_w        #16
133: dastore
134: astore        9
136: aconst_null
137: astore        10
139: aconst_null
140: astore        11
142: new           #18
145: dup
146: aload         9
148: aload         10
150: aload         11
152: invokespecial #19
155: astore        12
157: new           #20
160: dup
161: aload         6
163: aload         9
165: invokespecial #21
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: dconst_0
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #11
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #13
194: astore        15
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #11
212: dastore
213: astore        16
215: aload         16
217: invokestatic  #13
220: astore        17
222: aload         15
224: iconst_0
225: aload         16
227: invokeinterface #14,  3
232: aload         16
234: invokestatic  #15
237: astore        18
239: iconst_3
240: newarray       double
242: dup
243: iconst_0
244: dconst_1
245: dastore
246: dup
247: iconst_1
248: dconst_0
249: dastore
250: dup
251: iconst_2
252: ldc2_w        #11
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #13
263: astore        20
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: dconst_0
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #11
281: dastore
282: astore        21
284: aload         21
286: invokestatic  #13
289: astore        22
291: aload         20
293: iconst_0
294: aload         21
296: invokeinterface #14,  3
301: aload         21
303: invokestatic  #15
306: astore        23
308: iconst_1
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #16
316: dastore
317: astore        24
319: aconst_null
320: astore        25
322: aconst_null
323: astore        26
325: new           #18
328: dup
329: aload         24
331: aload         25
333: aload         26
335: invokespecial #19
338: astore        27
340: new           #20
343: dup
344: aload         21
346: aload         24
348: invokespecial #21
351: astore        28
353: aload         28
355: invokevirtual #22
358: astore        29
360: new           #20
363: dup
364: aload         16
366: aload         29
368: iconst_1
369: invokespecial #23
372: astore        30
374: aload_3
375: iconst_1
376: aload         13
378: aload         30
380: invokevirtual #65
383: istore        31
385: aload_1
386: aload_3
387: invokevirtual #66
390: aload_1
391: getfield      #146
394: astore        32
396: aload_1
397: invokevirtual #160
400: istore        33
402: aload_1
403: dconst_0
404: putfield      #50
407: aload_1
408: getfield      #54
411: astore        34
413: new           #39
416: dup
417: invokespecial #40
420: ldc           #41
422: invokevirtual #42
425: iload_2
426: invokevirtual #43
429: ldc           #44
431: invokevirtual #42
434: iconst_0
435: invokevirtual #43
438: ldc           #41
440: invokevirtual #42
443: invokevirtual #45
446: iload_2
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #46
458: aload         4
460: invokestatic  #31
463: aload         4
465: invokestatic  #32
468: ldc           #33
470: invokestatic  #34
473: aload         5
475: invokestatic  #31
478: aload         6
480: invokestatic  #31
483: aload         6
485: invokestatic  #32
488: ldc           #33
490: invokestatic  #34
493: aload         7
495: invokestatic  #31
498: aload         8
500: invokestatic  #31
503: aload         9
505: invokestatic  #31
508: aload         9
510: invokestatic  #32
513: ldc           #35
515: invokestatic  #34
518: aload         14
520: invokestatic  #31
523: aload         14
525: invokestatic  #32
528: ldc           #33
530: invokestatic  #34
533: aload         15
535: invokestatic  #31
538: aload         16
540: invokestatic  #31
543: aload         16
545: invokestatic  #32
548: ldc           #33
550: invokestatic  #34
553: aload         17
555: invokestatic  #31
558: aload         18
560: invokestatic  #31
563: aload         19
565: invokestatic  #31
568: aload         19
570: invokestatic  #32
573: ldc           #33
575: invokestatic  #34
578: aload         20
580: invokestatic  #31
583: aload         21
585: invokestatic  #31
588: aload         21
590: invokestatic  #32
593: ldc           #33
595: invokestatic  #34
598: aload         22
600: invokestatic  #31
603: aload         23
605: invokestatic  #31
608: aload         24
610: invokestatic  #31
613: aload         24
615: invokestatic  #32
618: ldc           #35
620: invokestatic  #34
623: aload         29
625: invokestatic  #31
628: aload         29
630: invokestatic  #32
633: ldc           #35
635: invokestatic  #34
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload         31
652: invokevirtual #69
655: ldc           #44
657: invokevirtual #42
660: iconst_1
661: invokevirtual #69
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload         31
674: iconst_1
675: if_icmpne     682
678: iconst_1
679: goto          683
682: iconst_0
683: invokestatic  #46
686: aload         32
688: invokestatic  #30
691: new           #39
694: dup
695: invokespecial #40
698: ldc           #41
700: invokevirtual #42
703: iload         33
705: invokevirtual #43
708: ldc           #44
710: invokevirtual #42
713: iconst_0
714: invokevirtual #43
717: ldc           #41
719: invokevirtual #42
722: invokevirtual #45
725: iload         33
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #46
738: aload         34
740: invokestatic  #30
743: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 3236
End line: 3252
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.rows = (byte) 0;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker11 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: ldc2_w        #62
46: putfield      #50
49: aload_1
50: getfield      #56
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: aload_1
62: iconst_0
63: putfield      #81
66: new           #61
69: dup
70: ldc2_w        #62
73: dconst_1
74: invokespecial #64
77: astore        6
79: aload_1
80: aload         6
82: invokevirtual #66
85: new           #39
88: dup
89: invokespecial #40
92: ldc           #41
94: invokevirtual #42
97: iload_2
98: invokevirtual #43
101: ldc           #44
103: invokevirtual #42
106: iconst_0
107: invokevirtual #43
110: ldc           #41
112: invokevirtual #42
115: invokevirtual #45
118: iload_2
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #46
130: new           #39
133: dup
134: invokespecial #40
137: ldc           #41
139: invokevirtual #42
142: iload_3
143: invokevirtual #43
146: ldc           #44
148: invokevirtual #42
151: iconst_0
152: invokevirtual #43
155: ldc           #41
157: invokevirtual #42
160: invokevirtual #45
163: iload_3
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #46
175: aload         4
177: invokestatic  #30
180: new           #39
183: dup
184: invokespecial #40
187: ldc           #41
189: invokevirtual #42
192: iload         5
194: invokevirtual #43
197: ldc           #44
199: invokevirtual #42
202: ldc           #73
204: invokevirtual #43
207: ldc           #41
209: invokevirtual #42
212: invokevirtual #45
215: iload         5
217: ldc           #73
219: if_icmpne     226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #46
230: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 3255
End line: 3299
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        int int30 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #37
36: istore_2
37: aload_1
38: invokevirtual #37
41: istore_3
42: aload_1
43: getfield      #53
46: astore        4
48: new           #8
51: dup
52: invokespecial #9
55: astore        5
57: aload         5
59: invokevirtual #37
62: istore        6
64: aload         5
66: invokevirtual #37
69: istore        7
71: iconst_3
72: newarray       double
74: dup
75: iconst_0
76: dconst_1
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: ldc2_w        #11
87: dastore
88: astore        8
90: aload         8
92: invokestatic  #13
95: astore        9
97: iconst_3
98: newarray       double
100: dup
101: iconst_0
102: dconst_1
103: dastore
104: dup
105: iconst_1
106: dconst_0
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #11
113: dastore
114: astore        10
116: aload         10
118: invokestatic  #13
121: astore        11
123: aload         9
125: iconst_0
126: aload         10
128: invokeinterface #14,  3
133: aload         10
135: invokestatic  #15
138: astore        12
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #16
148: dastore
149: astore        13
151: aconst_null
152: astore        14
154: aconst_null
155: astore        15
157: new           #18
160: dup
161: aload         13
163: aload         14
165: aload         15
167: invokespecial #19
170: astore        16
172: new           #20
175: dup
176: aload         10
178: aload         13
180: invokespecial #21
183: astore        17
185: aload         17
187: invokevirtual #22
190: astore        18
192: aload         5
194: aload         18
196: putfield      #80
199: aload_1
200: aload         18
202: putfield      #76
205: aload_1
206: invokevirtual #37
209: istore        19
211: aload_1
212: invokevirtual #37
215: istore        20
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload_2
230: invokevirtual #43
233: ldc           #44
235: invokevirtual #42
238: iconst_0
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload_2
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload_3
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload_3
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #46
307: aload         4
309: invokestatic  #30
312: new           #39
315: dup
316: invokespecial #40
319: ldc           #41
321: invokevirtual #42
324: iload         6
326: invokevirtual #43
329: ldc           #44
331: invokevirtual #42
334: iconst_0
335: invokevirtual #43
338: ldc           #41
340: invokevirtual #42
343: invokevirtual #45
346: iload         6
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #46
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         7
373: invokevirtual #43
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #43
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         7
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #46
406: aload         8
408: invokestatic  #31
411: aload         8
413: invokestatic  #32
416: ldc           #33
418: invokestatic  #34
421: aload         9
423: invokestatic  #31
426: aload         10
428: invokestatic  #31
431: aload         10
433: invokestatic  #32
436: ldc           #33
438: invokestatic  #34
441: aload         11
443: invokestatic  #31
446: aload         12
448: invokestatic  #31
451: aload         13
453: invokestatic  #31
456: aload         13
458: invokestatic  #32
461: ldc           #35
463: invokestatic  #34
466: aload         18
468: invokestatic  #31
471: aload         18
473: invokestatic  #32
476: ldc           #35
478: invokestatic  #34
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: iload         19
495: invokevirtual #43
498: ldc           #44
500: invokevirtual #42
503: iconst_0
504: invokevirtual #43
507: ldc           #41
509: invokevirtual #42
512: invokevirtual #45
515: iload         19
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #46
528: new           #39
531: dup
532: invokespecial #40
535: ldc           #41
537: invokevirtual #42
540: iload         20
542: invokevirtual #43
545: ldc           #44
547: invokevirtual #42
550: iconst_0
551: invokevirtual #43
554: ldc           #41
556: invokevirtual #42
559: invokevirtual #45
562: iload         20
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #46
575: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 3302
End line: 3320
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.rows = (byte) 0;
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int10 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: ldc2_w        #62
47: putfield      #50
50: aload_1
51: getfield      #56
54: astore        4
56: aload_1
57: invokevirtual #71
60: istore        5
62: aload_1
63: iconst_0
64: putfield      #81
67: aload_1
68: invokevirtual #57
71: istore        6
73: aload_1
74: invokevirtual #160
77: istore        7
79: new           #39
82: dup
83: invokespecial #40
86: ldc           #41
88: invokevirtual #42
91: iload_2
92: invokevirtual #43
95: ldc           #44
97: invokevirtual #42
100: iconst_0
101: invokevirtual #43
104: ldc           #41
106: invokevirtual #42
109: invokevirtual #45
112: iload_2
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #46
124: new           #39
127: dup
128: invokespecial #40
131: ldc           #41
133: invokevirtual #42
136: iload_3
137: invokevirtual #43
140: ldc           #44
142: invokevirtual #42
145: iconst_0
146: invokevirtual #43
149: ldc           #41
151: invokevirtual #42
154: invokevirtual #45
157: iload_3
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #46
169: aload         4
171: invokestatic  #30
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         5
188: invokevirtual #43
191: ldc           #44
193: invokevirtual #42
196: ldc           #73
198: invokevirtual #43
201: ldc           #41
203: invokevirtual #42
206: invokevirtual #45
209: iload         5
211: ldc           #73
213: if_icmpne     220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #46
224: new           #39
227: dup
228: invokespecial #40
231: ldc           #41
233: invokevirtual #42
236: iload         6
238: invokevirtual #43
241: ldc           #44
243: invokevirtual #42
246: iconst_0
247: invokevirtual #43
250: ldc           #41
252: invokevirtual #42
255: invokevirtual #45
258: iload         6
260: ifne          267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #46
271: new           #39
274: dup
275: invokespecial #40
278: ldc           #41
280: invokevirtual #42
283: iload         7
285: invokevirtual #43
288: ldc           #44
290: invokevirtual #42
293: iconst_0
294: invokevirtual #43
297: ldc           #41
299: invokevirtual #42
302: invokevirtual #45
305: iload         7
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #46
318: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 3323
End line: 3339
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        double double4 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double double6 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setMaxEvaluations(97);
        double double9 = levenbergMarquardtOptimizer0.cost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: ldc2_w        #48
42: putfield      #50
45: aload_1
46: getfield      #50
49: dstore_3
50: aload_1
51: invokevirtual #10
54: astore        5
56: aload_1
57: invokevirtual #83
60: dstore        6
62: aload_1
63: bipush        97
65: invokevirtual #38
68: aload_1
69: getfield      #50
72: dstore        8
74: new           #39
77: dup
78: invokespecial #40
81: ldc           #41
83: invokevirtual #42
86: iload_2
87: invokevirtual #43
90: ldc           #44
92: invokevirtual #42
95: iconst_0
96: invokevirtual #43
99: ldc           #41
101: invokevirtual #42
104: invokevirtual #45
107: iload_2
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #46
119: new           #39
122: dup
123: invokespecial #40
126: ldc           #41
128: invokevirtual #42
131: dload_3
132: invokevirtual #51
135: ldc           #44
137: invokevirtual #42
140: ldc2_w        #48
143: invokevirtual #51
146: ldc           #41
148: invokevirtual #42
151: invokevirtual #45
154: dload_3
155: ldc2_w        #48
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #46
170: aload         5
172: invokestatic  #30
175: dload         6
177: invokestatic  #86
180: invokestatic  #87
183: new           #39
186: dup
187: invokespecial #40
190: ldc           #41
192: invokevirtual #42
195: dload         8
197: invokevirtual #51
200: ldc           #44
202: invokevirtual #42
205: ldc2_w        #48
208: invokevirtual #51
211: ldc           #41
213: invokevirtual #42
216: invokevirtual #45
219: dload         8
221: ldc2_w        #48
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #46
236: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 3342
End line: 3384
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        double[] doubleArray27 = vectorialPointValuePair25.getValueRef();
        levenbergMarquardtOptimizer0.residuals = doubleArray27;
        int int29 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: ldc2_w        #62
47: putfield      #50
50: aload_1
51: getfield      #56
54: astore        4
56: aload_1
57: invokevirtual #71
60: istore        5
62: iconst_3
63: newarray       double
65: dup
66: iconst_0
67: dconst_1
68: dastore
69: dup
70: iconst_1
71: dconst_0
72: dastore
73: dup
74: iconst_2
75: ldc2_w        #11
78: dastore
79: astore        6
81: aload         6
83: invokestatic  #13
86: astore        7
88: iconst_3
89: newarray       double
91: dup
92: iconst_0
93: dconst_1
94: dastore
95: dup
96: iconst_1
97: dconst_0
98: dastore
99: dup
100: iconst_2
101: ldc2_w        #11
104: dastore
105: astore        8
107: aload         8
109: invokestatic  #13
112: astore        9
114: aload         7
116: iconst_0
117: aload         8
119: invokeinterface #14,  3
124: aload         8
126: invokestatic  #15
129: astore        10
131: iconst_1
132: newarray       double
134: dup
135: iconst_0
136: ldc2_w        #16
139: dastore
140: astore        11
142: aconst_null
143: astore        12
145: aconst_null
146: astore        13
148: new           #18
151: dup
152: aload         11
154: aload         12
156: aload         13
158: invokespecial #19
161: astore        14
163: new           #20
166: dup
167: aload         8
169: aload         11
171: invokespecial #21
174: astore        15
176: aload         15
178: invokevirtual #22
181: astore        16
183: aload         15
185: invokevirtual #140
188: astore        17
190: aload_1
191: aload         17
193: putfield      #76
196: aload_1
197: invokevirtual #57
200: istore        18
202: new           #39
205: dup
206: invokespecial #40
209: ldc           #41
211: invokevirtual #42
214: iload_2
215: invokevirtual #43
218: ldc           #44
220: invokevirtual #42
223: iconst_0
224: invokevirtual #43
227: ldc           #41
229: invokevirtual #42
232: invokevirtual #45
235: iload_2
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #46
247: new           #39
250: dup
251: invokespecial #40
254: ldc           #41
256: invokevirtual #42
259: iload_3
260: invokevirtual #43
263: ldc           #44
265: invokevirtual #42
268: iconst_0
269: invokevirtual #43
272: ldc           #41
274: invokevirtual #42
277: invokevirtual #45
280: iload_3
281: ifne          288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #46
292: aload         4
294: invokestatic  #30
297: new           #39
300: dup
301: invokespecial #40
304: ldc           #41
306: invokevirtual #42
309: iload         5
311: invokevirtual #43
314: ldc           #44
316: invokevirtual #42
319: ldc           #73
321: invokevirtual #43
324: ldc           #41
326: invokevirtual #42
329: invokevirtual #45
332: iload         5
334: ldc           #73
336: if_icmpne     343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #46
347: aload         6
349: invokestatic  #31
352: aload         6
354: invokestatic  #32
357: ldc           #33
359: invokestatic  #34
362: aload         7
364: invokestatic  #31
367: aload         8
369: invokestatic  #31
372: aload         8
374: invokestatic  #32
377: ldc           #33
379: invokestatic  #34
382: aload         9
384: invokestatic  #31
387: aload         10
389: invokestatic  #31
392: aload         11
394: invokestatic  #31
397: aload         11
399: invokestatic  #32
402: ldc           #35
404: invokestatic  #34
407: aload         16
409: invokestatic  #31
412: aload         16
414: invokestatic  #32
417: ldc           #35
419: invokestatic  #34
422: aload         17
424: invokestatic  #31
427: aload         17
429: invokestatic  #32
432: ldc           #35
434: invokestatic  #34
437: new           #39
440: dup
441: invokespecial #40
444: ldc           #41
446: invokevirtual #42
449: iload         18
451: invokevirtual #43
454: ldc           #44
456: invokevirtual #42
459: iconst_0
460: invokevirtual #43
463: ldc           #41
465: invokevirtual #42
468: invokevirtual #45
471: iload         18
473: ifne          480
476: iconst_1
477: goto          481
480: iconst_0
481: invokestatic  #46
484: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 3387
End line: 3403
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.residuals;
        int int5 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int6 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #259
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #56
37: astore_2
38: aload_1
39: getfield      #72
42: astore_3
43: aload_1
44: invokevirtual #83
47: dstore        4
49: aload_1
50: getfield      #76
53: astore        6
55: aload_1
56: invokevirtual #57
59: istore        7
61: aload_1
62: getfield      #81
65: istore        8
67: aload_2
68: invokestatic  #30
71: aload_3
72: invokestatic  #30
75: dload         4
77: invokestatic  #86
80: invokestatic  #87
83: aload         6
85: invokestatic  #30
88: new           #39
91: dup
92: invokespecial #40
95: ldc           #41
97: invokevirtual #42
100: iload         7
102: invokevirtual #43
105: ldc           #44
107: invokevirtual #42
110: iconst_0
111: invokevirtual #43
114: ldc           #41
116: invokevirtual #42
119: invokevirtual #45
122: iload         7
124: ifne          131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #46
135: new           #39
138: dup
139: invokespecial #40
142: ldc           #41
144: invokevirtual #42
147: iload         8
149: invokevirtual #43
152: ldc           #44
154: invokevirtual #42
157: iconst_0
158: invokevirtual #43
161: ldc           #41
163: invokevirtual #42
166: invokevirtual #45
169: iload         8
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #46
182: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 3406
End line: 3418
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        double double4 = levenbergMarquardtOptimizer0.cost;
        int int5 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #260
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: ldc2_w        #48
42: putfield      #50
45: aload_1
46: getfield      #50
49: dstore_3
50: aload_1
51: invokevirtual #71
54: istore        5
56: aload_1
57: iconst_m1
58: invokevirtual #38
61: new           #39
64: dup
65: invokespecial #40
68: ldc           #41
70: invokevirtual #42
73: iload_2
74: invokevirtual #43
77: ldc           #44
79: invokevirtual #42
82: iconst_0
83: invokevirtual #43
86: ldc           #41
88: invokevirtual #42
91: invokevirtual #45
94: iload_2
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #46
106: new           #39
109: dup
110: invokespecial #40
113: ldc           #41
115: invokevirtual #42
118: dload_3
119: invokevirtual #51
122: ldc           #44
124: invokevirtual #42
127: ldc2_w        #48
130: invokevirtual #51
133: ldc           #41
135: invokevirtual #42
138: invokevirtual #45
141: dload_3
142: ldc2_w        #48
145: dcmpl
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #46
157: new           #39
160: dup
161: invokespecial #40
164: ldc           #41
166: invokevirtual #42
169: iload         5
171: invokevirtual #43
174: ldc           #44
176: invokevirtual #42
179: ldc           #73
181: invokevirtual #43
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload         5
194: ldc           #73
196: if_icmpne     203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #46
207: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 3421
End line: 3433
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        levenbergMarquardtOptimizer0.setMaxEvaluations(52);
        levenbergMarquardtOptimizer0.setMaxEvaluations((-1));
        levenbergMarquardtOptimizer0.cols = 'a';
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #56
37: astore_2
38: aload_1
39: invokevirtual #83
42: dstore_3
43: aload_1
44: invokevirtual #84
47: aload_1
48: bipush        52
50: invokevirtual #38
53: aload_1
54: iconst_m1
55: invokevirtual #38
58: aload_1
59: bipush        97
61: putfield      #58
64: aload_2
65: invokestatic  #30
68: dload_3
69: invokestatic  #86
72: invokestatic  #87
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 3436
End line: 3519
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math.linear.BlockRealMatrix(1, (int) (byte) 100);
        int int3 = blockRealMatrix2.getRowDimension();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        int int7 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray11 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix12 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray11);
        double[] doubleArray17 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix18 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray17);
        realMatrix12.setRow(0, doubleArray17);
        org.apache.commons.math.linear.BigMatrix bigMatrix20 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray17);
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable23 = null;
        java.lang.Object[] objArray24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray22, localizable23, objArray24);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray22);
        double[] doubleArray27 = vectorialPointValuePair26.getValue();
        double[] doubleArray28 = vectorialPointValuePair26.getValueRef();
        levenbergMarquardtOptimizer4.residuals = doubleArray28;
        double[] doubleArray30 = blockRealMatrix2.preMultiply(doubleArray28);
        double[] doubleArray35 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix36 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray35);
        double[] doubleArray41 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix42 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray41);
        realMatrix36.setRow(0, doubleArray41);
        org.apache.commons.math.linear.BigMatrix bigMatrix44 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray41);
        double[] doubleArray46 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable47 = null;
        java.lang.Object[] objArray48 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(doubleArray46, localizable47, objArray48);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray46);
        double[] doubleArray51 = vectorialPointValuePair50.getValue();
        double[] doubleArray52 = vectorialPointValuePair50.getPoint();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix53 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray52);
        int int54 = array2DRowRealMatrix53.getRowDimension();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = array2DRowRealMatrix53.copy();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = realMatrix55.getColumnMatrix(0);
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix2.setRowMatrix((int) (short) -1, realMatrix57);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: row index -1 out of allowed range [0, 0]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(bigMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix36);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix42);
        org.junit.Assert.assertNotNull(bigMatrix44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: new           #235
28: dup
29: iconst_1
30: bipush        100
32: invokespecial #236
35: astore_1
36: aload_1
37: invokevirtual #237
40: istore_2
41: new           #8
44: dup
45: invokespecial #9
48: astore_3
49: aload_3
50: invokevirtual #37
53: istore        4
55: aload_3
56: invokevirtual #37
59: istore        5
61: aload_3
62: invokevirtual #37
65: istore        6
67: iconst_3
68: newarray       double
70: dup
71: iconst_0
72: dconst_1
73: dastore
74: dup
75: iconst_1
76: dconst_0
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #11
83: dastore
84: astore        7
86: aload         7
88: invokestatic  #13
91: astore        8
93: iconst_3
94: newarray       double
96: dup
97: iconst_0
98: dconst_1
99: dastore
100: dup
101: iconst_1
102: dconst_0
103: dastore
104: dup
105: iconst_2
106: ldc2_w        #11
109: dastore
110: astore        9
112: aload         9
114: invokestatic  #13
117: astore        10
119: aload         8
121: iconst_0
122: aload         9
124: invokeinterface #14,  3
129: aload         9
131: invokestatic  #15
134: astore        11
136: iconst_1
137: newarray       double
139: dup
140: iconst_0
141: ldc2_w        #16
144: dastore
145: astore        12
147: aconst_null
148: astore        13
150: aconst_null
151: astore        14
153: new           #18
156: dup
157: aload         12
159: aload         13
161: aload         14
163: invokespecial #19
166: astore        15
168: new           #20
171: dup
172: aload         9
174: aload         12
176: invokespecial #21
179: astore        16
181: aload         16
183: invokevirtual #22
186: astore        17
188: aload         16
190: invokevirtual #140
193: astore        18
195: aload_3
196: aload         18
198: putfield      #76
201: aload_1
202: aload         18
204: invokevirtual #238
207: astore        19
209: iconst_3
210: newarray       double
212: dup
213: iconst_0
214: dconst_1
215: dastore
216: dup
217: iconst_1
218: dconst_0
219: dastore
220: dup
221: iconst_2
222: ldc2_w        #11
225: dastore
226: astore        20
228: aload         20
230: invokestatic  #13
233: astore        21
235: iconst_3
236: newarray       double
238: dup
239: iconst_0
240: dconst_1
241: dastore
242: dup
243: iconst_1
244: dconst_0
245: dastore
246: dup
247: iconst_2
248: ldc2_w        #11
251: dastore
252: astore        22
254: aload         22
256: invokestatic  #13
259: astore        23
261: aload         21
263: iconst_0
264: aload         22
266: invokeinterface #14,  3
271: aload         22
273: invokestatic  #15
276: astore        24
278: iconst_1
279: newarray       double
281: dup
282: iconst_0
283: ldc2_w        #16
286: dastore
287: astore        25
289: aconst_null
290: astore        26
292: aconst_null
293: astore        27
295: new           #18
298: dup
299: aload         25
301: aload         26
303: aload         27
305: invokespecial #19
308: astore        28
310: new           #20
313: dup
314: aload         22
316: aload         25
318: invokespecial #21
321: astore        29
323: aload         29
325: invokevirtual #22
328: astore        30
330: aload         29
332: invokevirtual #226
335: astore        31
337: new           #24
340: dup
341: aload         31
343: invokespecial #25
346: astore        32
348: aload         32
350: invokevirtual #263
353: istore        33
355: aload         32
357: invokevirtual #227
360: astore        34
362: aload         34
364: iconst_0
365: invokeinterface #264,  2
370: astore        35
372: aload_1
373: iconst_m1
374: aload         35
376: invokevirtual #265
379: ldc_w         #266
382: invokestatic  #28
385: goto          390
388: astore        36
390: new           #39
393: dup
394: invokespecial #40
397: ldc           #41
399: invokevirtual #42
402: iload_2
403: invokevirtual #43
406: ldc           #44
408: invokevirtual #42
411: iconst_1
412: invokevirtual #43
415: ldc           #41
417: invokevirtual #42
420: invokevirtual #45
423: iload_2
424: iconst_1
425: if_icmpne     432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #46
436: new           #39
439: dup
440: invokespecial #40
443: ldc           #41
445: invokevirtual #42
448: iload         4
450: invokevirtual #43
453: ldc           #44
455: invokevirtual #42
458: iconst_0
459: invokevirtual #43
462: ldc           #41
464: invokevirtual #42
467: invokevirtual #45
470: iload         4
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #46
483: new           #39
486: dup
487: invokespecial #40
490: ldc           #41
492: invokevirtual #42
495: iload         5
497: invokevirtual #43
500: ldc           #44
502: invokevirtual #42
505: iconst_0
506: invokevirtual #43
509: ldc           #41
511: invokevirtual #42
514: invokevirtual #45
517: iload         5
519: ifne          526
522: iconst_1
523: goto          527
526: iconst_0
527: invokestatic  #46
530: new           #39
533: dup
534: invokespecial #40
537: ldc           #41
539: invokevirtual #42
542: iload         6
544: invokevirtual #43
547: ldc           #44
549: invokevirtual #42
552: iconst_0
553: invokevirtual #43
556: ldc           #41
558: invokevirtual #42
561: invokevirtual #45
564: iload         6
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #46
577: aload         7
579: invokestatic  #31
582: aload         7
584: invokestatic  #32
587: ldc           #33
589: invokestatic  #34
592: aload         8
594: invokestatic  #31
597: aload         9
599: invokestatic  #31
602: aload         9
604: invokestatic  #32
607: ldc           #33
609: invokestatic  #34
612: aload         10
614: invokestatic  #31
617: aload         11
619: invokestatic  #31
622: aload         12
624: invokestatic  #31
627: aload         12
629: invokestatic  #32
632: ldc           #35
634: invokestatic  #34
637: aload         17
639: invokestatic  #31
642: aload         17
644: invokestatic  #32
647: ldc           #35
649: invokestatic  #34
652: aload         18
654: invokestatic  #31
657: aload         18
659: invokestatic  #32
662: ldc           #35
664: invokestatic  #34
667: aload         19
669: invokestatic  #31
672: aload         19
674: invokestatic  #32
677: ldc           #247
679: invokestatic  #34
682: aload         20
684: invokestatic  #31
687: aload         20
689: invokestatic  #32
692: ldc           #33
694: invokestatic  #34
697: aload         21
699: invokestatic  #31
702: aload         22
704: invokestatic  #31
707: aload         22
709: invokestatic  #32
712: ldc           #33
714: invokestatic  #34
717: aload         23
719: invokestatic  #31
722: aload         24
724: invokestatic  #31
727: aload         25
729: invokestatic  #31
732: aload         25
734: invokestatic  #32
737: ldc           #35
739: invokestatic  #34
742: aload         30
744: invokestatic  #31
747: aload         30
749: invokestatic  #32
752: ldc           #35
754: invokestatic  #34
757: aload         31
759: invokestatic  #31
762: aload         31
764: invokestatic  #32
767: ldc           #33
769: invokestatic  #34
772: new           #39
775: dup
776: invokespecial #40
779: ldc           #41
781: invokevirtual #42
784: iload         33
786: invokevirtual #43
789: ldc           #44
791: invokevirtual #42
794: iconst_3
795: invokevirtual #43
798: ldc           #41
800: invokevirtual #42
803: invokevirtual #45
806: iload         33
808: iconst_3
809: if_icmpne     816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #46
820: aload         34
822: invokestatic  #31
825: aload         35
827: invokestatic  #31
830: return
Exception table:
from    to  target type
372   385   388   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 3522
End line: 3618
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0);
        org.apache.commons.math.linear.InvalidMatrixException invalidMatrixException2 = new org.apache.commons.math.linear.InvalidMatrixException((java.lang.Throwable) functionEvaluationException1);
        double[] doubleArray4 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable5 = null;
        java.lang.Object[] objArray6 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(doubleArray4, localizable5, objArray6);
        org.apache.commons.math.linear.RealVector realVector8 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector9 = realVector8.mapLog10();
        org.apache.commons.math.linear.RealVector realVector10 = realVector9.mapLog1pToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = realVector9.mapMultiply((double) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector13 = realVector9.mapCosh();
        org.apache.commons.math.linear.RealVector realVector14 = realVector9.mapAcosToSelf();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int16 = levenbergMarquardtOptimizer15.getIterations();
        int int17 = levenbergMarquardtOptimizer15.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker18 = levenbergMarquardtOptimizer15.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int20 = levenbergMarquardtOptimizer19.getIterations();
        int int21 = levenbergMarquardtOptimizer19.getIterations();
        double[] doubleArray25 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix26 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray25);
        double[] doubleArray31 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix32 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray31);
        realMatrix26.setRow(0, doubleArray31);
        org.apache.commons.math.linear.BigMatrix bigMatrix34 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray31);
        double[] doubleArray36 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable37 = null;
        java.lang.Object[] objArray38 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException(doubleArray36, localizable37, objArray38);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray36);
        double[] doubleArray41 = vectorialPointValuePair40.getValue();
        levenbergMarquardtOptimizer19.point = doubleArray41;
        levenbergMarquardtOptimizer15.residuals = doubleArray41;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix44 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray41);
        org.apache.commons.math.linear.RealVector realVector45 = realVector14.append(doubleArray41);
        double[] doubleArray50 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix51 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray50);
        double[] doubleArray56 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix57 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray56);
        realMatrix51.setRow(0, doubleArray56);
        org.apache.commons.math.linear.BigMatrix bigMatrix59 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray56);
        double[] doubleArray61 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable62 = null;
        java.lang.Object[] objArray63 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(doubleArray61, localizable62, objArray63);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray61);
        double[] doubleArray66 = vectorialPointValuePair65.getValue();
        double[] doubleArray67 = vectorialPointValuePair65.getPoint();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix68 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray67);
        org.apache.commons.math.linear.RealMatrix realMatrix71 = array2DRowRealMatrix68.createMatrix((int) (byte) 10, (int) (byte) 10);
        double[][] doubleArray72 = array2DRowRealMatrix68.getDataRef();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix73 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException1, doubleArray41, "org.apache.commons.math.linear.NonSquareMatrixException: a 1x100 matrix was provided instead of a square matrix", (java.lang.Object[]) doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[97.0]");
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertNotNull(realVector9);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix32);
        org.junit.Assert.assertNotNull(bigMatrix34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix57);
        org.junit.Assert.assertNotNull(bigMatrix59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix71);
        org.junit.Assert.assertNotNull(doubleArray72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #267
20: aastore
21: invokevirtual #7
24: pop
25: new           #18
28: dup
29: dconst_0
30: invokespecial #268
33: astore_1
34: new           #214
37: dup
38: aload_1
39: invokespecial #269
42: astore_2
43: iconst_1
44: newarray       double
46: dup
47: iconst_0
48: ldc2_w        #16
51: dastore
52: astore_3
53: aconst_null
54: astore        4
56: aconst_null
57: astore        5
59: new           #18
62: dup
63: aload_3
64: aload         4
66: aload         5
68: invokespecial #19
71: astore        6
73: aload_3
74: invokestatic  #167
77: astore        7
79: aload         7
81: invokeinterface #270,  1
86: astore        8
88: aload         8
90: invokeinterface #271,  1
95: astore        9
97: aload         8
99: dconst_1
100: invokeinterface #272,  3
105: astore        10
107: aload         8
109: invokeinterface #273,  1
114: astore        11
116: aload         8
118: invokeinterface #274,  1
123: astore        12
125: new           #8
128: dup
129: invokespecial #9
132: astore        13
134: aload         13
136: invokevirtual #37
139: istore        14
141: aload         13
143: invokevirtual #37
146: istore        15
148: aload         13
150: getfield      #53
153: astore        16
155: new           #8
158: dup
159: invokespecial #9
162: astore        17
164: aload         17
166: invokevirtual #37
169: istore        18
171: aload         17
173: invokevirtual #37
176: istore        19
178: iconst_3
179: newarray       double
181: dup
182: iconst_0
183: dconst_1
184: dastore
185: dup
186: iconst_1
187: dconst_0
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #11
194: dastore
195: astore        20
197: aload         20
199: invokestatic  #13
202: astore        21
204: iconst_3
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: dconst_0
214: dastore
215: dup
216: iconst_2
217: ldc2_w        #11
220: dastore
221: astore        22
223: aload         22
225: invokestatic  #13
228: astore        23
230: aload         21
232: iconst_0
233: aload         22
235: invokeinterface #14,  3
240: aload         22
242: invokestatic  #15
245: astore        24
247: iconst_1
248: newarray       double
250: dup
251: iconst_0
252: ldc2_w        #16
255: dastore
256: astore        25
258: aconst_null
259: astore        26
261: aconst_null
262: astore        27
264: new           #18
267: dup
268: aload         25
270: aload         26
272: aload         27
274: invokespecial #19
277: astore        28
279: new           #20
282: dup
283: aload         22
285: aload         25
287: invokespecial #21
290: astore        29
292: aload         29
294: invokevirtual #22
297: astore        30
299: aload         17
301: aload         30
303: putfield      #80
306: aload         13
308: aload         30
310: putfield      #76
313: new           #24
316: dup
317: aload         30
319: invokespecial #25
322: astore        31
324: aload         12
326: aload         30
328: invokeinterface #275,  2
333: astore        32
335: iconst_3
336: newarray       double
338: dup
339: iconst_0
340: dconst_1
341: dastore
342: dup
343: iconst_1
344: dconst_0
345: dastore
346: dup
347: iconst_2
348: ldc2_w        #11
351: dastore
352: astore        33
354: aload         33
356: invokestatic  #13
359: astore        34
361: iconst_3
362: newarray       double
364: dup
365: iconst_0
366: dconst_1
367: dastore
368: dup
369: iconst_1
370: dconst_0
371: dastore
372: dup
373: iconst_2
374: ldc2_w        #11
377: dastore
378: astore        35
380: aload         35
382: invokestatic  #13
385: astore        36
387: aload         34
389: iconst_0
390: aload         35
392: invokeinterface #14,  3
397: aload         35
399: invokestatic  #15
402: astore        37
404: iconst_1
405: newarray       double
407: dup
408: iconst_0
409: ldc2_w        #16
412: dastore
413: astore        38
415: aconst_null
416: astore        39
418: aconst_null
419: astore        40
421: new           #18
424: dup
425: aload         38
427: aload         39
429: aload         40
431: invokespecial #19
434: astore        41
436: new           #20
439: dup
440: aload         35
442: aload         38
444: invokespecial #21
447: astore        42
449: aload         42
451: invokevirtual #22
454: astore        43
456: aload         42
458: invokevirtual #226
461: astore        44
463: new           #24
466: dup
467: aload         44
469: invokespecial #25
472: astore        45
474: aload         45
476: bipush        10
478: bipush        10
480: invokevirtual #276
483: astore        46
485: aload         45
487: invokevirtual #277
490: astore        47
492: new           #24
495: dup
496: aload         47
498: invokespecial #278
501: astore        48
503: new           #18
506: dup
507: aload_1
508: aload         30
510: ldc_w         #279
513: aload         47
515: checkcast     #128
518: invokespecial #280
521: astore        49
523: aload_3
524: invokestatic  #31
527: aload_3
528: invokestatic  #32
531: ldc           #35
533: invokestatic  #34
536: aload         7
538: invokestatic  #31
541: aload         8
543: invokestatic  #31
546: aload         9
548: invokestatic  #31
551: aload         10
553: invokestatic  #31
556: aload         11
558: invokestatic  #31
561: aload         12
563: invokestatic  #31
566: new           #39
569: dup
570: invokespecial #40
573: ldc           #41
575: invokevirtual #42
578: iload         14
580: invokevirtual #43
583: ldc           #44
585: invokevirtual #42
588: iconst_0
589: invokevirtual #43
592: ldc           #41
594: invokevirtual #42
597: invokevirtual #45
600: iload         14
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #46
613: new           #39
616: dup
617: invokespecial #40
620: ldc           #41
622: invokevirtual #42
625: iload         15
627: invokevirtual #43
630: ldc           #44
632: invokevirtual #42
635: iconst_0
636: invokevirtual #43
639: ldc           #41
641: invokevirtual #42
644: invokevirtual #45
647: iload         15
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #46
660: aload         16
662: invokestatic  #30
665: new           #39
668: dup
669: invokespecial #40
672: ldc           #41
674: invokevirtual #42
677: iload         18
679: invokevirtual #43
682: ldc           #44
684: invokevirtual #42
687: iconst_0
688: invokevirtual #43
691: ldc           #41
693: invokevirtual #42
696: invokevirtual #45
699: iload         18
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #46
712: new           #39
715: dup
716: invokespecial #40
719: ldc           #41
721: invokevirtual #42
724: iload         19
726: invokevirtual #43
729: ldc           #44
731: invokevirtual #42
734: iconst_0
735: invokevirtual #43
738: ldc           #41
740: invokevirtual #42
743: invokevirtual #45
746: iload         19
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #46
759: aload         20
761: invokestatic  #31
764: aload         20
766: invokestatic  #32
769: ldc           #33
771: invokestatic  #34
774: aload         21
776: invokestatic  #31
779: aload         22
781: invokestatic  #31
784: aload         22
786: invokestatic  #32
789: ldc           #33
791: invokestatic  #34
794: aload         23
796: invokestatic  #31
799: aload         24
801: invokestatic  #31
804: aload         25
806: invokestatic  #31
809: aload         25
811: invokestatic  #32
814: ldc           #35
816: invokestatic  #34
819: aload         30
821: invokestatic  #31
824: aload         30
826: invokestatic  #32
829: ldc           #35
831: invokestatic  #34
834: aload         32
836: invokestatic  #31
839: aload         33
841: invokestatic  #31
844: aload         33
846: invokestatic  #32
849: ldc           #33
851: invokestatic  #34
854: aload         34
856: invokestatic  #31
859: aload         35
861: invokestatic  #31
864: aload         35
866: invokestatic  #32
869: ldc           #33
871: invokestatic  #34
874: aload         36
876: invokestatic  #31
879: aload         37
881: invokestatic  #31
884: aload         38
886: invokestatic  #31
889: aload         38
891: invokestatic  #32
894: ldc           #35
896: invokestatic  #34
899: aload         43
901: invokestatic  #31
904: aload         43
906: invokestatic  #32
909: ldc           #35
911: invokestatic  #34
914: aload         44
916: invokestatic  #31
919: aload         44
921: invokestatic  #32
924: ldc           #33
926: invokestatic  #34
929: aload         46
931: invokestatic  #31
934: aload         47
936: invokestatic  #31
939: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 3621
End line: 3632
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker5 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) 10.0f, (double) 1L);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker5);
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) (short) 0);
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #56
37: astore_2
38: aload_1
39: getfield      #72
42: astore_3
43: new           #61
46: dup
47: ldc2_w        #62
50: dconst_1
51: invokespecial #64
54: astore        4
56: aload_1
57: aload         4
59: invokevirtual #66
62: aload_1
63: dconst_0
64: invokevirtual #138
67: aload_2
68: invokestatic  #30
71: aload_3
72: invokestatic  #30
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 3635
End line: 3647
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray2 = levenbergMarquardtOptimizer0.targetValues;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        int int4 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: getfield      #146
42: astore_3
43: aload_1
44: invokevirtual #83
47: dstore        4
49: aload_1
50: invokevirtual #71
53: istore        6
55: new           #39
58: dup
59: invokespecial #40
62: ldc           #41
64: invokevirtual #42
67: iload_2
68: invokevirtual #43
71: ldc           #44
73: invokevirtual #42
76: iconst_0
77: invokevirtual #43
80: ldc           #41
82: invokevirtual #42
85: invokevirtual #45
88: iload_2
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #46
100: aload_3
101: invokestatic  #30
104: dload         4
106: invokestatic  #86
109: invokestatic  #87
112: new           #39
115: dup
116: invokespecial #40
119: ldc           #41
121: invokevirtual #42
124: iload         6
126: invokevirtual #43
129: ldc           #44
131: invokevirtual #42
134: ldc           #73
136: invokevirtual #43
139: ldc           #41
141: invokevirtual #42
144: invokevirtual #45
147: iload         6
149: ldc           #73
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #46
162: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 3650
End line: 3664
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 100.0f;
        double double4 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double double6 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.013368264483692507d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #283
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: ldc2_w        #48
42: putfield      #50
45: aload_1
46: getfield      #50
49: dstore_3
50: aload_1
51: invokevirtual #10
54: astore        5
56: aload_1
57: invokevirtual #83
60: dstore        6
62: aload_1
63: ldc2_w        #284
66: invokevirtual #78
69: new           #39
72: dup
73: invokespecial #40
76: ldc           #41
78: invokevirtual #42
81: iload_2
82: invokevirtual #43
85: ldc           #44
87: invokevirtual #42
90: iconst_0
91: invokevirtual #43
94: ldc           #41
96: invokevirtual #42
99: invokevirtual #45
102: iload_2
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #46
114: new           #39
117: dup
118: invokespecial #40
121: ldc           #41
123: invokevirtual #42
126: dload_3
127: invokevirtual #51
130: ldc           #44
132: invokevirtual #42
135: ldc2_w        #48
138: invokevirtual #51
141: ldc           #41
143: invokevirtual #42
146: invokevirtual #45
149: dload_3
150: ldc2_w        #48
153: dcmpl
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #46
165: aload         5
167: invokestatic  #30
170: dload         6
172: invokestatic  #86
175: invokestatic  #87
178: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 3667
End line: 3685
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray3 = levenbergMarquardtOptimizer0.objective;
        int int4 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold(0.9933158677581537d);
        double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian;
        levenbergMarquardtOptimizer0.setMaxIterations((-1));
        double double10 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #286
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: getfield      #56
47: astore        4
49: aload_1
50: invokevirtual #160
53: istore        5
55: aload_1
56: ldc2_w        #287
59: invokevirtual #85
62: aload_1
63: getfield      #54
66: astore        6
68: aload_1
69: iconst_m1
70: invokevirtual #91
73: aload_1
74: invokevirtual #289
77: dstore        7
79: new           #39
82: dup
83: invokespecial #40
86: ldc           #41
88: invokevirtual #42
91: iload_2
92: invokevirtual #43
95: ldc           #44
97: invokevirtual #42
100: iconst_0
101: invokevirtual #43
104: ldc           #41
106: invokevirtual #42
109: invokevirtual #45
112: iload_2
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #46
124: new           #39
127: dup
128: invokespecial #40
131: ldc           #41
133: invokevirtual #42
136: iload_3
137: invokevirtual #43
140: ldc           #44
142: invokevirtual #42
145: iconst_0
146: invokevirtual #43
149: ldc           #41
151: invokevirtual #42
154: invokevirtual #45
157: iload_3
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #46
169: aload         4
171: invokestatic  #30
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         5
188: invokevirtual #43
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #43
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload         5
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #46
221: aload         6
223: invokestatic  #30
226: new           #39
229: dup
230: invokespecial #40
233: ldc           #41
235: invokevirtual #42
238: dload         7
240: invokevirtual #51
243: ldc           #44
245: invokevirtual #42
248: dconst_0
249: invokevirtual #51
252: ldc           #41
254: invokevirtual #42
257: invokevirtual #45
260: dload         7
262: dconst_0
263: dcmpl
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #46
275: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 3688
End line: 3731
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int5 = levenbergMarquardtOptimizer4.getIterations();
        int int6 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray10 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix11 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray10);
        double[] doubleArray16 = new double[] { 1, (short) 0, (-1) };
        org.apache.commons.math.linear.RealMatrix realMatrix17 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        realMatrix11.setRow(0, doubleArray16);
        org.apache.commons.math.linear.BigMatrix bigMatrix19 = org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(doubleArray16);
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.exception.Localizable localizable22 = null;
        java.lang.Object[] objArray23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(doubleArray21, localizable22, objArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray21);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        levenbergMarquardtOptimizer4.point = doubleArray26;
        levenbergMarquardtOptimizer0.residuals = doubleArray26;
        int int29 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(1.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(bigMatrix19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: getfield      #53
47: astore        4
49: new           #8
52: dup
53: invokespecial #9
56: astore        5
58: aload         5
60: invokevirtual #37
63: istore        6
65: aload         5
67: invokevirtual #37
70: istore        7
72: iconst_3
73: newarray       double
75: dup
76: iconst_0
77: dconst_1
78: dastore
79: dup
80: iconst_1
81: dconst_0
82: dastore
83: dup
84: iconst_2
85: ldc2_w        #11
88: dastore
89: astore        8
91: aload         8
93: invokestatic  #13
96: astore        9
98: iconst_3
99: newarray       double
101: dup
102: iconst_0
103: dconst_1
104: dastore
105: dup
106: iconst_1
107: dconst_0
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #11
114: dastore
115: astore        10
117: aload         10
119: invokestatic  #13
122: astore        11
124: aload         9
126: iconst_0
127: aload         10
129: invokeinterface #14,  3
134: aload         10
136: invokestatic  #15
139: astore        12
141: iconst_1
142: newarray       double
144: dup
145: iconst_0
146: ldc2_w        #16
149: dastore
150: astore        13
152: aconst_null
153: astore        14
155: aconst_null
156: astore        15
158: new           #18
161: dup
162: aload         13
164: aload         14
166: aload         15
168: invokespecial #19
171: astore        16
173: new           #20
176: dup
177: aload         10
179: aload         13
181: invokespecial #21
184: astore        17
186: aload         17
188: invokevirtual #22
191: astore        18
193: aload         5
195: aload         18
197: putfield      #80
200: aload_1
201: aload         18
203: putfield      #76
206: aload_1
207: invokevirtual #37
210: istore        19
212: aload_1
213: dconst_1
214: invokevirtual #78
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload_2
230: invokevirtual #43
233: ldc           #44
235: invokevirtual #42
238: iconst_0
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload_2
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload_3
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload_3
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #46
307: aload         4
309: invokestatic  #30
312: new           #39
315: dup
316: invokespecial #40
319: ldc           #41
321: invokevirtual #42
324: iload         6
326: invokevirtual #43
329: ldc           #44
331: invokevirtual #42
334: iconst_0
335: invokevirtual #43
338: ldc           #41
340: invokevirtual #42
343: invokevirtual #45
346: iload         6
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #46
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         7
373: invokevirtual #43
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #43
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         7
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #46
406: aload         8
408: invokestatic  #31
411: aload         8
413: invokestatic  #32
416: ldc           #33
418: invokestatic  #34
421: aload         9
423: invokestatic  #31
426: aload         10
428: invokestatic  #31
431: aload         10
433: invokestatic  #32
436: ldc           #33
438: invokestatic  #34
441: aload         11
443: invokestatic  #31
446: aload         12
448: invokestatic  #31
451: aload         13
453: invokestatic  #31
456: aload         13
458: invokestatic  #32
461: ldc           #35
463: invokestatic  #34
466: aload         18
468: invokestatic  #31
471: aload         18
473: invokestatic  #32
476: ldc           #35
478: invokestatic  #34
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: iload         19
495: invokevirtual #43
498: ldc           #44
500: invokevirtual #42
503: iconst_0
504: invokevirtual #43
507: ldc           #41
509: invokevirtual #42
512: invokevirtual #45
515: iload         19
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #46
528: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 3734
End line: 3749
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray3 = levenbergMarquardtOptimizer0.objective;
        double double4 = levenbergMarquardtOptimizer0.cost;
        levenbergMarquardtOptimizer0.setParRelativeTolerance(35.0d);
        int int7 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: getfield      #56
47: astore        4
49: aload_1
50: getfield      #50
53: dstore        5
55: aload_1
56: ldc2_w        #124
59: invokevirtual #138
62: aload_1
63: invokevirtual #160
66: istore        7
68: new           #39
71: dup
72: invokespecial #40
75: ldc           #41
77: invokevirtual #42
80: iload_2
81: invokevirtual #43
84: ldc           #44
86: invokevirtual #42
89: iconst_0
90: invokevirtual #43
93: ldc           #41
95: invokevirtual #42
98: invokevirtual #45
101: iload_2
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #46
113: new           #39
116: dup
117: invokespecial #40
120: ldc           #41
122: invokevirtual #42
125: iload_3
126: invokevirtual #43
129: ldc           #44
131: invokevirtual #42
134: iconst_0
135: invokevirtual #43
138: ldc           #41
140: invokevirtual #42
143: invokevirtual #45
146: iload_3
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #46
158: aload         4
160: invokestatic  #30
163: new           #39
166: dup
167: invokespecial #40
170: ldc           #41
172: invokevirtual #42
175: dload         5
177: invokevirtual #51
180: ldc           #44
182: invokevirtual #42
185: dconst_0
186: invokevirtual #51
189: ldc           #41
191: invokevirtual #42
194: invokevirtual #45
197: dload         5
199: dconst_0
200: dcmpl
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #46
212: new           #39
215: dup
216: invokespecial #40
219: ldc           #41
221: invokevirtual #42
224: iload         7
226: invokevirtual #43
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #43
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload         7
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #46
259: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 3752
End line: 3764
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double double2 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        levenbergMarquardtOptimizer0.setMaxEvaluations(52);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker6 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNull(vectorialConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #56
37: astore_2
38: aload_1
39: invokevirtual #83
42: dstore_3
43: aload_1
44: invokevirtual #84
47: aload_1
48: bipush        52
50: invokevirtual #38
53: aload_1
54: invokevirtual #10
57: astore        5
59: aload_2
60: invokestatic  #30
63: dload_3
64: invokestatic  #86
67: invokestatic  #87
70: aload         5
72: invokestatic  #30
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 3767
End line: 3783
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.cost = 10.0d;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.objective;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.rows = (byte) 0;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: ldc2_w        #62
47: putfield      #50
50: aload_1
51: getfield      #56
54: astore        4
56: aload_1
57: invokevirtual #71
60: istore        5
62: aload_1
63: iconst_0
64: putfield      #81
67: aload_1
68: invokevirtual #59
71: istore        6
73: new           #39
76: dup
77: invokespecial #40
80: ldc           #41
82: invokevirtual #42
85: iload_2
86: invokevirtual #43
89: ldc           #44
91: invokevirtual #42
94: iconst_0
95: invokevirtual #43
98: ldc           #41
100: invokevirtual #42
103: invokevirtual #45
106: iload_2
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #46
118: new           #39
121: dup
122: invokespecial #40
125: ldc           #41
127: invokevirtual #42
130: iload_3
131: invokevirtual #43
134: ldc           #44
136: invokevirtual #42
139: iconst_0
140: invokevirtual #43
143: ldc           #41
145: invokevirtual #42
148: invokevirtual #45
151: iload_3
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #46
163: aload         4
165: invokestatic  #30
168: new           #39
171: dup
172: invokespecial #40
175: ldc           #41
177: invokevirtual #42
180: iload         5
182: invokevirtual #43
185: ldc           #44
187: invokevirtual #42
190: ldc           #73
192: invokevirtual #43
195: ldc           #41
197: invokevirtual #42
200: invokevirtual #45
203: iload         5
205: ldc           #73
207: if_icmpne     214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #46
218: new           #39
221: dup
222: invokespecial #40
225: ldc           #41
227: invokevirtual #42
230: iload         6
232: invokevirtual #43
235: ldc           #44
237: invokevirtual #42
240: sipush        1000
243: invokevirtual #43
246: ldc           #41
248: invokevirtual #42
251: invokevirtual #45
254: iload         6
256: sipush        1000
259: if_icmpne     266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #46
270: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 3786
End line: 3802
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.objective;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residualsWeights;
        double double3 = levenbergMarquardtOptimizer0.getRMS();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.targetValues;
        double[] doubleArray5 = levenbergMarquardtOptimizer0.point;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.objective;
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #56
37: astore_2
38: aload_1
39: getfield      #72
42: astore_3
43: aload_1
44: invokevirtual #83
47: dstore        4
49: aload_1
50: getfield      #146
53: astore        6
55: aload_1
56: getfield      #80
59: astore        7
61: aload_1
62: getfield      #56
65: astore        8
67: aload_2
68: invokestatic  #30
71: aload_3
72: invokestatic  #30
75: dload         4
77: invokestatic  #86
80: invokestatic  #87
83: aload         6
85: invokestatic  #30
88: aload         7
90: invokestatic  #30
93: aload         8
95: invokestatic  #30
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 3805
End line: 3820
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getIterations();
        int int2 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray3 = levenbergMarquardtOptimizer0.objective;
        int int4 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold(0.9933158677581537d);
        int int7 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #37
37: istore_2
38: aload_1
39: invokevirtual #37
42: istore_3
43: aload_1
44: getfield      #56
47: astore        4
49: aload_1
50: invokevirtual #160
53: istore        5
55: aload_1
56: ldc2_w        #287
59: invokevirtual #85
62: aload_1
63: invokevirtual #71
66: istore        6
68: new           #39
71: dup
72: invokespecial #40
75: ldc           #41
77: invokevirtual #42
80: iload_2
81: invokevirtual #43
84: ldc           #44
86: invokevirtual #42
89: iconst_0
90: invokevirtual #43
93: ldc           #41
95: invokevirtual #42
98: invokevirtual #45
101: iload_2
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #46
113: new           #39
116: dup
117: invokespecial #40
120: ldc           #41
122: invokevirtual #42
125: iload_3
126: invokevirtual #43
129: ldc           #44
131: invokevirtual #42
134: iconst_0
135: invokevirtual #43
138: ldc           #41
140: invokevirtual #42
143: invokevirtual #45
146: iload_3
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #46
158: aload         4
160: invokestatic  #30
163: new           #39
166: dup
167: invokespecial #40
170: ldc           #41
172: invokevirtual #42
175: iload         5
177: invokevirtual #43
180: ldc           #44
182: invokevirtual #42
185: iconst_0
186: invokevirtual #43
189: ldc           #41
191: invokevirtual #42
194: invokevirtual #45
197: iload         5
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #46
210: new           #39
213: dup
214: invokespecial #40
217: ldc           #41
219: invokevirtual #42
222: iload         6
224: invokevirtual #43
227: ldc           #44
229: invokevirtual #42
232: ldc           #73
234: invokevirtual #43
237: ldc           #41
239: invokevirtual #42
242: invokevirtual #45
245: iload         6
247: ldc           #73
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #46
260: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test00
Start line: 22
End line: 29
Method source code: 
  public void test00()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      double double0 = levenbergMarquardtOptimizer0.getRMS();
      assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations());
      assertEquals(Integer.MAX_VALUE, levenbergMarquardtOptimizer0.getMaxEvaluations());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(0.0, levenbergMarquardtOptimizer0.getChiSquare(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #4
12: dstore_2
13: ldc2_w        #5
16: aload_1
17: invokevirtual #7
20: i2l
21: invokestatic  #8
24: ldc2_w        #10
27: aload_1
28: invokevirtual #12
31: i2l
32: invokestatic  #8
35: ldc2_w        #14
38: dload_2
39: ldc2_w        #16
42: invokestatic  #18
45: dconst_0
46: aload_1
47: invokevirtual #19
50: ldc2_w        #16
53: invokestatic  #18
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test01
Start line: 32
End line: 37
Method source code: 
  public void test01()  throws Throwable  {
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false);
      int int0 = gaussNewtonOptimizer0.getMaxEvaluations();
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(100, gaussNewtonOptimizer0.getMaxIterations());
  }
Method byte code: 
0: new           #20
3: dup
4: iconst_0
5: invokespecial #21
8: astore_1
9: aload_1
10: invokevirtual #22
13: istore_2
14: ldc2_w        #10
17: iload_2
18: i2l
19: invokestatic  #8
22: ldc2_w        #23
25: aload_1
26: invokevirtual #25
29: i2l
30: invokestatic  #8
33: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test02
Start line: 40
End line: 46
Method source code: 
  public void test02()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      int int0 = levenbergMarquardtOptimizer0.getIterations();
      assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations());
      assertEquals(Integer.MAX_VALUE, levenbergMarquardtOptimizer0.getMaxEvaluations());
      assertEquals(0, int0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #26
12: istore_2
13: ldc2_w        #5
16: aload_1
17: invokevirtual #7
20: i2l
21: invokestatic  #8
24: ldc2_w        #10
27: aload_1
28: invokevirtual #12
31: i2l
32: invokestatic  #8
35: lconst_0
36: iload_2
37: i2l
38: invokestatic  #8
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test03
Start line: 49
End line: 54
Method source code: 
  public void test03()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      int int0 = levenbergMarquardtOptimizer0.getMaxIterations();
      assertEquals(Integer.MAX_VALUE, levenbergMarquardtOptimizer0.getMaxEvaluations());
      assertEquals(1000, int0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #7
12: istore_2
13: ldc2_w        #10
16: aload_1
17: invokevirtual #12
20: i2l
21: invokestatic  #8
24: ldc2_w        #5
27: iload_2
28: i2l
29: invokestatic  #8
32: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test04
Start line: 57
End line: 63
Method source code: 
  public void test04()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      int int0 = levenbergMarquardtOptimizer0.getEvaluations();
      assertEquals(Integer.MAX_VALUE, levenbergMarquardtOptimizer0.getMaxEvaluations());
      assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations());
      assertEquals(0, int0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #27
12: istore_2
13: ldc2_w        #10
16: aload_1
17: invokevirtual #12
20: i2l
21: invokestatic  #8
24: ldc2_w        #5
27: aload_1
28: invokevirtual #7
31: i2l
32: invokestatic  #8
35: lconst_0
36: iload_2
37: i2l
38: invokestatic  #8
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test05
Start line: 66
End line: 72
Method source code: 
  public void test05()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      int int0 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
      assertEquals(0, int0);
      assertEquals(Integer.MAX_VALUE, levenbergMarquardtOptimizer0.getMaxEvaluations());
      assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #28
12: istore_2
13: lconst_0
14: iload_2
15: i2l
16: invokestatic  #8
19: ldc2_w        #10
22: aload_1
23: invokevirtual #12
26: i2l
27: invokestatic  #8
30: ldc2_w        #5
33: aload_1
34: invokevirtual #7
37: i2l
38: invokestatic  #8
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test06
Start line: 75
End line: 80
Method source code: 
  public void test06()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      levenbergMarquardtOptimizer0.getConvergenceChecker();
      assertEquals(Integer.MAX_VALUE, levenbergMarquardtOptimizer0.getMaxEvaluations());
      assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #29
12: pop
13: ldc2_w        #10
16: aload_1
17: invokevirtual #12
20: i2l
21: invokestatic  #8
24: ldc2_w        #5
27: aload_1
28: invokevirtual #7
31: i2l
32: invokestatic  #8
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test07
Start line: 83
End line: 96
Method source code: 
  public void test07()  throws Throwable  {
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false);
      gaussNewtonOptimizer0.setMaxIterations((-3260));
      try { 
        gaussNewtonOptimizer0.doOptimize();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // maximal number of iterations (-3,260) exceeded
         //
         verifyException("org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #20
3: dup
4: iconst_0
5: invokespecial #21
8: astore_1
9: aload_1
10: sipush        -3260
13: invokevirtual #30
16: aload_1
17: invokevirtual #31
20: pop
21: ldc           #32
23: invokestatic  #33
26: goto          36
29: astore_2
30: ldc           #35
32: aload_2
33: invokestatic  #36
36: return
Exception table:
from    to  target type
16    26    29   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test08
Start line: 99
End line: 118
Method source code: 
  public void test08()  throws Throwable  {
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false);
      double[][] doubleArray0 = new double[1][5];
      MultivariateMatrixFunction multivariateMatrixFunction0 = mock(MultivariateMatrixFunction.class, new ViolatedAssumptionAnswer());
      doReturn(doubleArray0).when(multivariateMatrixFunction0).value(any(double[].class));
      double[] doubleArray1 = new double[7];
      DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction0 = mock(DifferentiableMultivariateVectorialFunction.class, new ViolatedAssumptionAnswer());
      doReturn(multivariateMatrixFunction0).when(differentiableMultivariateVectorialFunction0).jacobian();
      doReturn(doubleArray1).when(differentiableMultivariateVectorialFunction0).value(any(double[].class));
      try { 
        gaussNewtonOptimizer0.optimize(differentiableMultivariateVectorialFunction0, doubleArray1, doubleArray1, doubleArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch 1 != 7
         //
         verifyException("org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #20
3: dup
4: iconst_0
5: invokespecial #21
8: astore_1
9: iconst_1
10: iconst_5
11: multianewarray #37,  2
15: astore_2
16: ldc           #38
18: new           #39
21: dup
22: invokespecial #40
25: invokestatic  #41
28: checkcast     #38
31: astore_3
32: aload_2
33: invokestatic  #42
36: aload_3
37: invokeinterface #43,  2
42: checkcast     #38
45: ldc           #44
47: invokestatic  #45
50: checkcast     #44
53: invokeinterface #46,  2
58: pop
59: bipush        7
61: newarray       double
63: astore        4
65: ldc           #47
67: new           #39
70: dup
71: invokespecial #40
74: invokestatic  #41
77: checkcast     #47
80: astore        5
82: aload_3
83: invokestatic  #42
86: aload         5
88: invokeinterface #43,  2
93: checkcast     #47
96: invokeinterface #48,  1
101: pop
102: aload         4
104: invokestatic  #42
107: aload         5
109: invokeinterface #43,  2
114: checkcast     #47
117: ldc           #44
119: invokestatic  #45
122: checkcast     #44
125: invokeinterface #49,  2
130: pop
131: aload_1
132: aload         5
134: aload         4
136: aload         4
138: aload         4
140: invokevirtual #50
143: pop
144: ldc           #32
146: invokestatic  #33
149: goto          161
152: astore        6
154: ldc           #35
156: aload         6
158: invokestatic  #36
161: return
Exception table:
from    to  target type
131   149   152   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test09
Start line: 121
End line: 140
Method source code: 
  public void test09()  throws Throwable  {
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false);
      double[][] doubleArray0 = new double[1][3];
      MultivariateMatrixFunction multivariateMatrixFunction0 = mock(MultivariateMatrixFunction.class, new ViolatedAssumptionAnswer());
      doReturn(doubleArray0).when(multivariateMatrixFunction0).value(any(double[].class));
      double[] doubleArray1 = new double[1];
      DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction0 = mock(DifferentiableMultivariateVectorialFunction.class, new ViolatedAssumptionAnswer());
      doReturn(multivariateMatrixFunction0).when(differentiableMultivariateVectorialFunction0).jacobian();
      doReturn(doubleArray1).when(differentiableMultivariateVectorialFunction0).value(any(double[].class));
      try { 
        gaussNewtonOptimizer0.optimize(differentiableMultivariateVectorialFunction0, doubleArray1, doubleArray1, doubleArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unable to solve: singular problem
         //
         verifyException("org.apache.commons.math.optimization.general.GaussNewtonOptimizer", e);
      }
  }
Method byte code: 
0: new           #20
3: dup
4: iconst_0
5: invokespecial #21
8: astore_1
9: iconst_1
10: iconst_3
11: multianewarray #37,  2
15: astore_2
16: ldc           #38
18: new           #39
21: dup
22: invokespecial #40
25: invokestatic  #41
28: checkcast     #38
31: astore_3
32: aload_2
33: invokestatic  #42
36: aload_3
37: invokeinterface #43,  2
42: checkcast     #38
45: ldc           #44
47: invokestatic  #45
50: checkcast     #44
53: invokeinterface #46,  2
58: pop
59: iconst_1
60: newarray       double
62: astore        4
64: ldc           #47
66: new           #39
69: dup
70: invokespecial #40
73: invokestatic  #41
76: checkcast     #47
79: astore        5
81: aload_3
82: invokestatic  #42
85: aload         5
87: invokeinterface #43,  2
92: checkcast     #47
95: invokeinterface #48,  1
100: pop
101: aload         4
103: invokestatic  #42
106: aload         5
108: invokeinterface #43,  2
113: checkcast     #47
116: ldc           #44
118: invokestatic  #45
121: checkcast     #44
124: invokeinterface #49,  2
129: pop
130: aload_1
131: aload         5
133: aload         4
135: aload         4
137: aload         4
139: invokevirtual #50
142: pop
143: ldc           #32
145: invokestatic  #33
148: goto          160
151: astore        6
153: ldc           #51
155: aload         6
157: invokestatic  #36
160: return
Exception table:
from    to  target type
130   148   151   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test10
Start line: 143
End line: 157
Method source code: 
  public void test10()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      levenbergMarquardtOptimizer0.setMaxEvaluations((-917));
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.FunctionEvaluationException", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: sipush        -917
12: invokevirtual #52
15: aload_1
16: invokevirtual #53
19: pop
20: ldc           #54
22: invokestatic  #33
25: goto          35
28: astore_2
29: ldc           #56
31: aload_2
32: invokestatic  #36
35: return
Exception table:
from    to  target type
15    25    28   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test11
Start line: 160
End line: 179
Method source code: 
  public void test11()  throws Throwable  {
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false);
      MultivariateMatrixFunction multivariateMatrixFunction0 = mock(MultivariateMatrixFunction.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[1];
      DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction0 = mock(DifferentiableMultivariateVectorialFunction.class, new ViolatedAssumptionAnswer());
      doReturn(multivariateMatrixFunction0).when(differentiableMultivariateVectorialFunction0).jacobian();
      doReturn((double[]) null).when(differentiableMultivariateVectorialFunction0).value(any(double[].class));
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        gaussNewtonOptimizer0.optimize(differentiableMultivariateVectorialFunction0, doubleArray1, doubleArray1, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #20
3: dup
4: iconst_0
5: invokespecial #21
8: astore_1
9: ldc           #38
11: new           #39
14: dup
15: invokespecial #40
18: invokestatic  #41
21: checkcast     #38
24: astore_2
25: iconst_1
26: newarray       double
28: astore_3
29: ldc           #47
31: new           #39
34: dup
35: invokespecial #40
38: invokestatic  #41
41: checkcast     #47
44: astore        4
46: aload_2
47: invokestatic  #42
50: aload         4
52: invokeinterface #43,  2
57: checkcast     #47
60: invokeinterface #48,  1
65: pop
66: aconst_null
67: checkcast     #44
70: invokestatic  #42
73: aload         4
75: invokeinterface #43,  2
80: checkcast     #47
83: ldc           #44
85: invokestatic  #45
88: checkcast     #44
91: invokeinterface #49,  2
96: pop
97: iconst_0
98: newarray       double
100: astore        5
102: aload_1
103: aload         4
105: aload         5
107: aload         5
109: aload         5
111: invokevirtual #50
114: pop
115: ldc           #54
117: invokestatic  #33
120: goto          132
123: astore        6
125: ldc           #35
127: aload         6
129: invokestatic  #36
132: return
Exception table:
from    to  target type
102   120   123   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test12
Start line: 182
End line: 196
Method source code: 
  public void test12()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      levenbergMarquardtOptimizer0.rows = 100;
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.guessParametersErrors();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: bipush        100
11: putfield      #57
14: aload_1
15: invokevirtual #58
18: pop
19: ldc           #54
21: invokestatic  #33
24: goto          34
27: astore_2
28: ldc           #35
30: aload_2
31: invokestatic  #36
34: return
Exception table:
from    to  target type
14    24    27   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test13
Start line: 199
End line: 211
Method source code: 
  public void test13()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      try { 
        levenbergMarquardtOptimizer0.guessParametersErrors();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no degrees of freedom (0 measurements, 0 parameters)
         //
         verifyException("org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #58
12: pop
13: ldc           #32
15: invokestatic  #33
18: goto          28
21: astore_2
22: ldc           #35
24: aload_2
25: invokestatic  #36
28: return
Exception table:
from    to  target type
8    18    21   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test14
Start line: 214
End line: 228
Method source code: 
  public void test14()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[9];
      try { 
        levenbergMarquardtOptimizer0.optimize((DifferentiableMultivariateVectorialFunction) null, doubleArray0, doubleArray1, doubleArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch 0 != 9
         //
         verifyException("org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_0
9: newarray       double
11: astore_2
12: bipush        9
14: newarray       double
16: astore_3
17: aload_1
18: aconst_null
19: checkcast     #47
22: aload_2
23: aload_3
24: aload_3
25: invokevirtual #59
28: pop
29: ldc           #32
31: invokestatic  #33
34: goto          46
37: astore        4
39: ldc           #35
41: aload         4
43: invokestatic  #36
46: return
Exception table:
from    to  target type
17    34    37   Class java/lang/Exception
}
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testTrivial
Start line: 105
End line: 122
Method source code: 
    public void testTrivial() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        try {
            optimizer.guessParametersErrors();
            fail("an exception should have been thrown");
        } catch (OptimizationException ee) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }
        assertEquals(1.5, optimum.getPoint()[0], 1.0e-10);
        assertEquals(3.0, optimum.getValue()[0], 1.0e-10);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_1
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #4
18: dastore
19: aastore
20: iconst_1
21: newarray       double
23: dup
24: iconst_0
25: ldc2_w        #6
28: dastore
29: invokespecial #8
32: astore_1
33: new           #9
36: dup
37: invokespecial #10
40: astore_2
41: aload_2
42: aload_1
43: aload_1
44: getfield      #11
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: dconst_1
53: dastore
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: invokevirtual #12
64: astore_3
65: dconst_0
66: aload_2
67: invokevirtual #13
70: ldc2_w        #14
73: invokestatic  #16
76: aload_2
77: invokevirtual #17
80: pop
81: ldc           #18
83: invokestatic  #19
86: goto          101
89: astore        4
91: goto          101
94: astore        4
96: ldc           #22
98: invokestatic  #19
101: ldc2_w        #23
104: aload_3
105: invokevirtual #25
108: iconst_0
109: daload
110: ldc2_w        #14
113: invokestatic  #16
116: ldc2_w        #6
119: aload_3
120: invokevirtual #26
123: iconst_0
124: daload
125: ldc2_w        #14
128: invokestatic  #16
131: return
Exception table:
from    to  target type
76    86    89   Class org/apache/commons/math/optimization/OptimizationException
76    86    94   Class java/lang/Exception
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testQRColumnsPermutation
Start line: 124
End line: 140
Method source code: 
    public void testQRColumnsPermutation() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem =
            new LinearProblem(new double[][] { { 1.0, -1.0 }, { 0.0, 2.0 }, { 1.0, -2.0 } },
                              new double[] { 4.0, 6.0, 1.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(7.0, optimum.getPoint()[0], 1.0e-10);
        assertEquals(3.0, optimum.getPoint()[1], 1.0e-10);
        assertEquals(4.0, optimum.getValue()[0], 1.0e-10);
        assertEquals(6.0, optimum.getValue()[1], 1.0e-10);
        assertEquals(1.0, optimum.getValue()[2], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #27
22: dastore
23: aastore
24: dup
25: iconst_1
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #4
38: dastore
39: aastore
40: dup
41: iconst_2
42: iconst_2
43: newarray       double
45: dup
46: iconst_0
47: dconst_1
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #29
54: dastore
55: aastore
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: ldc2_w        #31
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #33
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: invokespecial #8
78: astore_1
79: new           #9
82: dup
83: invokespecial #10
86: astore_2
87: aload_2
88: aload_1
89: aload_1
90: getfield      #11
93: iconst_3
94: newarray       double
96: dup
97: iconst_0
98: dconst_1
99: dastore
100: dup
101: iconst_1
102: dconst_1
103: dastore
104: dup
105: iconst_2
106: dconst_1
107: dastore
108: iconst_2
109: newarray       double
111: dup
112: iconst_0
113: dconst_0
114: dastore
115: dup
116: iconst_1
117: dconst_0
118: dastore
119: invokevirtual #12
122: astore_3
123: dconst_0
124: aload_2
125: invokevirtual #13
128: ldc2_w        #14
131: invokestatic  #16
134: ldc2_w        #35
137: aload_3
138: invokevirtual #25
141: iconst_0
142: daload
143: ldc2_w        #14
146: invokestatic  #16
149: ldc2_w        #6
152: aload_3
153: invokevirtual #25
156: iconst_1
157: daload
158: ldc2_w        #14
161: invokestatic  #16
164: ldc2_w        #31
167: aload_3
168: invokevirtual #26
171: iconst_0
172: daload
173: ldc2_w        #14
176: invokestatic  #16
179: ldc2_w        #33
182: aload_3
183: invokevirtual #26
186: iconst_1
187: daload
188: ldc2_w        #14
191: invokestatic  #16
194: dconst_1
195: aload_3
196: invokevirtual #26
199: iconst_2
200: daload
201: ldc2_w        #14
204: invokestatic  #16
207: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testNoDependency
Start line: 142
End line: 159
Method source code: 
    public void testNoDependency() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 2, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 0, 0 },
                { 0, 0, 2, 0, 0, 0 },
                { 0, 0, 0, 2, 0, 0 },
                { 0, 0, 0, 0, 2, 0 },
                { 0, 0, 0, 0, 0, 2 }
        }, new double[] { 0.0, 1.1, 2.2, 3.3, 4.4, 5.5 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },
                               new double[] { 0, 0, 0, 0, 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        for (int i = 0; i < problem.target.length; ++i) {
            assertEquals(0.55 * i, optimum.getPoint()[i], 1.0e-10);
        }
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: anewarray     #3
9: dup
10: iconst_0
11: bipush        6
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #4
20: dastore
21: dup
22: iconst_1
23: dconst_0
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: dup
34: iconst_4
35: dconst_0
36: dastore
37: dup
38: iconst_5
39: dconst_0
40: dastore
41: aastore
42: dup
43: iconst_1
44: bipush        6
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #4
57: dastore
58: dup
59: iconst_2
60: dconst_0
61: dastore
62: dup
63: iconst_3
64: dconst_0
65: dastore
66: dup
67: iconst_4
68: dconst_0
69: dastore
70: dup
71: iconst_5
72: dconst_0
73: dastore
74: aastore
75: dup
76: iconst_2
77: bipush        6
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: dconst_0
88: dastore
89: dup
90: iconst_2
91: ldc2_w        #4
94: dastore
95: dup
96: iconst_3
97: dconst_0
98: dastore
99: dup
100: iconst_4
101: dconst_0
102: dastore
103: dup
104: iconst_5
105: dconst_0
106: dastore
107: aastore
108: dup
109: iconst_3
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_0
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: ldc2_w        #4
131: dastore
132: dup
133: iconst_4
134: dconst_0
135: dastore
136: dup
137: iconst_5
138: dconst_0
139: dastore
140: aastore
141: dup
142: iconst_4
143: bipush        6
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: dconst_0
154: dastore
155: dup
156: iconst_2
157: dconst_0
158: dastore
159: dup
160: iconst_3
161: dconst_0
162: dastore
163: dup
164: iconst_4
165: ldc2_w        #4
168: dastore
169: dup
170: iconst_5
171: dconst_0
172: dastore
173: aastore
174: dup
175: iconst_5
176: bipush        6
178: newarray       double
180: dup
181: iconst_0
182: dconst_0
183: dastore
184: dup
185: iconst_1
186: dconst_0
187: dastore
188: dup
189: iconst_2
190: dconst_0
191: dastore
192: dup
193: iconst_3
194: dconst_0
195: dastore
196: dup
197: iconst_4
198: dconst_0
199: dastore
200: dup
201: iconst_5
202: ldc2_w        #4
205: dastore
206: aastore
207: bipush        6
209: newarray       double
211: dup
212: iconst_0
213: dconst_0
214: dastore
215: dup
216: iconst_1
217: ldc2_w        #37
220: dastore
221: dup
222: iconst_2
223: ldc2_w        #39
226: dastore
227: dup
228: iconst_3
229: ldc2_w        #41
232: dastore
233: dup
234: iconst_4
235: ldc2_w        #43
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #45
244: dastore
245: invokespecial #8
248: astore_1
249: new           #9
252: dup
253: invokespecial #10
256: astore_2
257: aload_2
258: aload_1
259: aload_1
260: getfield      #11
263: bipush        6
265: newarray       double
267: dup
268: iconst_0
269: dconst_1
270: dastore
271: dup
272: iconst_1
273: dconst_1
274: dastore
275: dup
276: iconst_2
277: dconst_1
278: dastore
279: dup
280: iconst_3
281: dconst_1
282: dastore
283: dup
284: iconst_4
285: dconst_1
286: dastore
287: dup
288: iconst_5
289: dconst_1
290: dastore
291: bipush        6
293: newarray       double
295: dup
296: iconst_0
297: dconst_0
298: dastore
299: dup
300: iconst_1
301: dconst_0
302: dastore
303: dup
304: iconst_2
305: dconst_0
306: dastore
307: dup
308: iconst_3
309: dconst_0
310: dastore
311: dup
312: iconst_4
313: dconst_0
314: dastore
315: dup
316: iconst_5
317: dconst_0
318: dastore
319: invokevirtual #12
322: astore_3
323: dconst_0
324: aload_2
325: invokevirtual #13
328: ldc2_w        #14
331: invokestatic  #16
334: iconst_0
335: istore        4
337: iload         4
339: aload_1
340: getfield      #11
343: arraylength
344: if_icmpge     373
347: ldc2_w        #47
350: iload         4
352: i2d
353: dmul
354: aload_3
355: invokevirtual #25
358: iload         4
360: daload
361: ldc2_w        #14
364: invokestatic  #16
367: iinc          4, 1
370: goto          337
373: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testOneSet
Start line: 161
End line: 176
Method source code: 
    public void testOneSet() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1,  0, 0 },
                { -1,  1, 0 },
                {  0, -1, 1 }
        }, new double[] { 1, 1, 1});
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(1.0, optimum.getPoint()[0], 1.0e-10);
        assertEquals(2.0, optimum.getPoint()[1], 1.0e-10);
        assertEquals(3.0, optimum.getPoint()[2], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: dup
22: iconst_2
23: dconst_0
24: dastore
25: aastore
26: dup
27: iconst_1
28: iconst_3
29: newarray       double
31: dup
32: iconst_0
33: ldc2_w        #27
36: dastore
37: dup
38: iconst_1
39: dconst_1
40: dastore
41: dup
42: iconst_2
43: dconst_0
44: dastore
45: aastore
46: dup
47: iconst_2
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #27
60: dastore
61: dup
62: iconst_2
63: dconst_1
64: dastore
65: aastore
66: iconst_3
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_1
76: dastore
77: dup
78: iconst_2
79: dconst_1
80: dastore
81: invokespecial #8
84: astore_1
85: new           #9
88: dup
89: invokespecial #10
92: astore_2
93: aload_2
94: aload_1
95: aload_1
96: getfield      #11
99: iconst_3
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: dup
111: iconst_2
112: dconst_1
113: dastore
114: iconst_3
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: dconst_0
124: dastore
125: dup
126: iconst_2
127: dconst_0
128: dastore
129: invokevirtual #12
132: astore_3
133: dconst_0
134: aload_2
135: invokevirtual #13
138: ldc2_w        #14
141: invokestatic  #16
144: dconst_1
145: aload_3
146: invokevirtual #25
149: iconst_0
150: daload
151: ldc2_w        #14
154: invokestatic  #16
157: ldc2_w        #4
160: aload_3
161: invokevirtual #25
164: iconst_1
165: daload
166: ldc2_w        #14
169: invokestatic  #16
172: ldc2_w        #6
175: aload_3
176: invokevirtual #25
179: iconst_2
180: daload
181: ldc2_w        #14
184: invokestatic  #16
187: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testTwoSets
Start line: 178
End line: 201
Method source code: 
    public void testTwoSets() throws FunctionEvaluationException, OptimizationException {
        double epsilon = 1.0e-7;
        LinearProblem problem = new LinearProblem(new double[][] {
                {  2,  1,   0,  4,       0, 0 },
                { -4, -2,   3, -7,       0, 0 },
                {  4,  1,  -2,  8,       0, 0 },
                {  0, -3, -12, -1,       0, 0 },
                {  0,  0,   0,  0, epsilon, 1 },
                {  0,  0,   0,  0,       1, 1 }
        }, new double[] { 2, -9, 2, 2, 1 + epsilon * epsilon, 2});

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },
                               new double[] { 0, 0, 0, 0, 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals( 3.0, optimum.getPoint()[0], 1.0e-10);
        assertEquals( 4.0, optimum.getPoint()[1], 1.0e-10);
        assertEquals(-1.0, optimum.getPoint()[2], 1.0e-10);
        assertEquals(-2.0, optimum.getPoint()[3], 1.0e-10);
        assertEquals( 1.0 + epsilon, optimum.getPoint()[4], 1.0e-10);
        assertEquals( 1.0 - epsilon, optimum.getPoint()[5], 1.0e-10);

    }
Method byte code: 
0: ldc2_w        #49
3: dstore_1
4: new           #2
7: dup
8: bipush        6
10: anewarray     #3
13: dup
14: iconst_0
15: bipush        6
17: newarray       double
19: dup
20: iconst_0
21: ldc2_w        #4
24: dastore
25: dup
26: iconst_1
27: dconst_1
28: dastore
29: dup
30: iconst_2
31: dconst_0
32: dastore
33: dup
34: iconst_3
35: ldc2_w        #31
38: dastore
39: dup
40: iconst_4
41: dconst_0
42: dastore
43: dup
44: iconst_5
45: dconst_0
46: dastore
47: aastore
48: dup
49: iconst_1
50: bipush        6
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #51
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #29
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #6
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #53
77: dastore
78: dup
79: iconst_4
80: dconst_0
81: dastore
82: dup
83: iconst_5
84: dconst_0
85: dastore
86: aastore
87: dup
88: iconst_2
89: bipush        6
91: newarray       double
93: dup
94: iconst_0
95: ldc2_w        #31
98: dastore
99: dup
100: iconst_1
101: dconst_1
102: dastore
103: dup
104: iconst_2
105: ldc2_w        #29
108: dastore
109: dup
110: iconst_3
111: ldc2_w        #55
114: dastore
115: dup
116: iconst_4
117: dconst_0
118: dastore
119: dup
120: iconst_5
121: dconst_0
122: dastore
123: aastore
124: dup
125: iconst_3
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #57
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #59
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #27
151: dastore
152: dup
153: iconst_4
154: dconst_0
155: dastore
156: dup
157: iconst_5
158: dconst_0
159: dastore
160: aastore
161: dup
162: iconst_4
163: bipush        6
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: dup
172: iconst_1
173: dconst_0
174: dastore
175: dup
176: iconst_2
177: dconst_0
178: dastore
179: dup
180: iconst_3
181: dconst_0
182: dastore
183: dup
184: iconst_4
185: dload_1
186: dastore
187: dup
188: iconst_5
189: dconst_1
190: dastore
191: aastore
192: dup
193: iconst_5
194: bipush        6
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: dup
203: iconst_1
204: dconst_0
205: dastore
206: dup
207: iconst_2
208: dconst_0
209: dastore
210: dup
211: iconst_3
212: dconst_0
213: dastore
214: dup
215: iconst_4
216: dconst_1
217: dastore
218: dup
219: iconst_5
220: dconst_1
221: dastore
222: aastore
223: bipush        6
225: newarray       double
227: dup
228: iconst_0
229: ldc2_w        #4
232: dastore
233: dup
234: iconst_1
235: ldc2_w        #61
238: dastore
239: dup
240: iconst_2
241: ldc2_w        #4
244: dastore
245: dup
246: iconst_3
247: ldc2_w        #4
250: dastore
251: dup
252: iconst_4
253: dconst_1
254: dload_1
255: dload_1
256: dmul
257: dadd
258: dastore
259: dup
260: iconst_5
261: ldc2_w        #4
264: dastore
265: invokespecial #8
268: astore_3
269: new           #9
272: dup
273: invokespecial #10
276: astore        4
278: aload         4
280: aload_3
281: aload_3
282: getfield      #11
285: bipush        6
287: newarray       double
289: dup
290: iconst_0
291: dconst_1
292: dastore
293: dup
294: iconst_1
295: dconst_1
296: dastore
297: dup
298: iconst_2
299: dconst_1
300: dastore
301: dup
302: iconst_3
303: dconst_1
304: dastore
305: dup
306: iconst_4
307: dconst_1
308: dastore
309: dup
310: iconst_5
311: dconst_1
312: dastore
313: bipush        6
315: newarray       double
317: dup
318: iconst_0
319: dconst_0
320: dastore
321: dup
322: iconst_1
323: dconst_0
324: dastore
325: dup
326: iconst_2
327: dconst_0
328: dastore
329: dup
330: iconst_3
331: dconst_0
332: dastore
333: dup
334: iconst_4
335: dconst_0
336: dastore
337: dup
338: iconst_5
339: dconst_0
340: dastore
341: invokevirtual #12
344: astore        5
346: dconst_0
347: aload         4
349: invokevirtual #13
352: ldc2_w        #14
355: invokestatic  #16
358: ldc2_w        #6
361: aload         5
363: invokevirtual #25
366: iconst_0
367: daload
368: ldc2_w        #14
371: invokestatic  #16
374: ldc2_w        #31
377: aload         5
379: invokevirtual #25
382: iconst_1
383: daload
384: ldc2_w        #14
387: invokestatic  #16
390: ldc2_w        #27
393: aload         5
395: invokevirtual #25
398: iconst_2
399: daload
400: ldc2_w        #14
403: invokestatic  #16
406: ldc2_w        #29
409: aload         5
411: invokevirtual #25
414: iconst_3
415: daload
416: ldc2_w        #14
419: invokestatic  #16
422: dconst_1
423: dload_1
424: dadd
425: aload         5
427: invokevirtual #25
430: iconst_4
431: daload
432: ldc2_w        #14
435: invokestatic  #16
438: dconst_1
439: dload_1
440: dsub
441: aload         5
443: invokevirtual #25
446: iconst_5
447: daload
448: ldc2_w        #14
451: invokestatic  #16
454: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testNonInversible
Start line: 203
End line: 223
Method source code: 
    public void testNonInversible() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1, 2, -3 },
                {  2, 1,  3 },
                { -3, 0, -9 }
        }, new double[] { 1, 1, 1 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });
        assertTrue(Math.sqrt(problem.target.length) * optimizer.getRMS() > 0.6);
        try {
            optimizer.getCovariances();
            fail("an exception should have been thrown");
        } catch (OptimizationException ee) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #4
22: dastore
23: dup
24: iconst_2
25: ldc2_w        #57
28: dastore
29: aastore
30: dup
31: iconst_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #4
40: dastore
41: dup
42: iconst_1
43: dconst_1
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #6
50: dastore
51: aastore
52: dup
53: iconst_2
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #57
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #61
72: dastore
73: aastore
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_1
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: invokespecial #8
92: astore_1
93: new           #9
96: dup
97: invokespecial #10
100: astore_2
101: aload_2
102: aload_1
103: aload_1
104: getfield      #11
107: iconst_3
108: newarray       double
110: dup
111: iconst_0
112: dconst_1
113: dastore
114: dup
115: iconst_1
116: dconst_1
117: dastore
118: dup
119: iconst_2
120: dconst_1
121: dastore
122: iconst_3
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: dup
130: iconst_1
131: dconst_0
132: dastore
133: dup
134: iconst_2
135: dconst_0
136: dastore
137: invokevirtual #12
140: pop
141: aload_1
142: getfield      #11
145: arraylength
146: i2d
147: invokestatic  #63
150: aload_2
151: invokevirtual #13
154: dmul
155: ldc2_w        #64
158: dcmpl
159: ifle          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #66
170: aload_2
171: invokevirtual #67
174: pop
175: ldc           #18
177: invokestatic  #19
180: goto          193
183: astore_3
184: goto          193
187: astore_3
188: ldc           #22
190: invokestatic  #19
193: return
Exception table:
from    to  target type
170   180   183   Class org/apache/commons/math/optimization/OptimizationException
170   180   187   Class java/lang/Exception
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testIllConditioned
Start line: 225
End line: 257
Method source code: 
    public void testIllConditioned() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem1 = new LinearProblem(new double[][] {
                { 10.0, 7.0,  8.0,  7.0 },
                {  7.0, 5.0,  6.0,  5.0 },
                {  8.0, 6.0, 10.0,  9.0 },
                {  7.0, 5.0,  9.0, 10.0 }
        }, new double[] { 32, 23, 33, 31 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum1 =
            optimizer.optimize(problem1, problem1.target, new double[] { 1, 1, 1, 1 },
                               new double[] { 0, 1, 2, 3 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[0], 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[1], 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[2], 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[3], 1.0e-10);

        LinearProblem problem2 = new LinearProblem(new double[][] {
                { 10.00, 7.00, 8.10, 7.20 },
                {  7.08, 5.04, 6.00, 5.00 },
                {  8.00, 5.98, 9.89, 9.00 },
                {  6.99, 4.99, 9.00, 9.98 }
        }, new double[] { 32, 23, 33, 31 });
        VectorialPointValuePair optimum2 =
            optimizer.optimize(problem2, problem2.target, new double[] { 1, 1, 1, 1 },
                               new double[] { 0, 1, 2, 3 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(-81.0, optimum2.getPoint()[0], 1.0e-8);
        assertEquals(137.0, optimum2.getPoint()[1], 1.0e-8);
        assertEquals(-34.0, optimum2.getPoint()[2], 1.0e-8);
        assertEquals( 22.0, optimum2.getPoint()[3], 1.0e-8);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_4
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #68
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #35
24: dastore
25: dup
26: iconst_2
27: ldc2_w        #55
30: dastore
31: dup
32: iconst_3
33: ldc2_w        #35
36: dastore
37: aastore
38: dup
39: iconst_1
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #35
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #70
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #33
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #70
66: dastore
67: aastore
68: dup
69: iconst_2
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #55
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #33
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #68
90: dastore
91: dup
92: iconst_3
93: ldc2_w        #72
96: dastore
97: aastore
98: dup
99: iconst_3
100: iconst_4
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #35
108: dastore
109: dup
110: iconst_1
111: ldc2_w        #70
114: dastore
115: dup
116: iconst_2
117: ldc2_w        #72
120: dastore
121: dup
122: iconst_3
123: ldc2_w        #68
126: dastore
127: aastore
128: iconst_4
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #74
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #76
142: dastore
143: dup
144: iconst_2
145: ldc2_w        #78
148: dastore
149: dup
150: iconst_3
151: ldc2_w        #80
154: dastore
155: invokespecial #8
158: astore_1
159: new           #9
162: dup
163: invokespecial #10
166: astore_2
167: aload_2
168: aload_1
169: aload_1
170: getfield      #11
173: iconst_4
174: newarray       double
176: dup
177: iconst_0
178: dconst_1
179: dastore
180: dup
181: iconst_1
182: dconst_1
183: dastore
184: dup
185: iconst_2
186: dconst_1
187: dastore
188: dup
189: iconst_3
190: dconst_1
191: dastore
192: iconst_4
193: newarray       double
195: dup
196: iconst_0
197: dconst_0
198: dastore
199: dup
200: iconst_1
201: dconst_1
202: dastore
203: dup
204: iconst_2
205: ldc2_w        #4
208: dastore
209: dup
210: iconst_3
211: ldc2_w        #6
214: dastore
215: invokevirtual #12
218: astore_3
219: dconst_0
220: aload_2
221: invokevirtual #13
224: ldc2_w        #14
227: invokestatic  #16
230: dconst_1
231: aload_3
232: invokevirtual #25
235: iconst_0
236: daload
237: ldc2_w        #14
240: invokestatic  #16
243: dconst_1
244: aload_3
245: invokevirtual #25
248: iconst_1
249: daload
250: ldc2_w        #14
253: invokestatic  #16
256: dconst_1
257: aload_3
258: invokevirtual #25
261: iconst_2
262: daload
263: ldc2_w        #14
266: invokestatic  #16
269: dconst_1
270: aload_3
271: invokevirtual #25
274: iconst_3
275: daload
276: ldc2_w        #14
279: invokestatic  #16
282: new           #2
285: dup
286: iconst_4
287: anewarray     #3
290: dup
291: iconst_0
292: iconst_4
293: newarray       double
295: dup
296: iconst_0
297: ldc2_w        #68
300: dastore
301: dup
302: iconst_1
303: ldc2_w        #35
306: dastore
307: dup
308: iconst_2
309: ldc2_w        #82
312: dastore
313: dup
314: iconst_3
315: ldc2_w        #84
318: dastore
319: aastore
320: dup
321: iconst_1
322: iconst_4
323: newarray       double
325: dup
326: iconst_0
327: ldc2_w        #86
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #88
336: dastore
337: dup
338: iconst_2
339: ldc2_w        #33
342: dastore
343: dup
344: iconst_3
345: ldc2_w        #70
348: dastore
349: aastore
350: dup
351: iconst_2
352: iconst_4
353: newarray       double
355: dup
356: iconst_0
357: ldc2_w        #55
360: dastore
361: dup
362: iconst_1
363: ldc2_w        #90
366: dastore
367: dup
368: iconst_2
369: ldc2_w        #92
372: dastore
373: dup
374: iconst_3
375: ldc2_w        #72
378: dastore
379: aastore
380: dup
381: iconst_3
382: iconst_4
383: newarray       double
385: dup
386: iconst_0
387: ldc2_w        #94
390: dastore
391: dup
392: iconst_1
393: ldc2_w        #96
396: dastore
397: dup
398: iconst_2
399: ldc2_w        #72
402: dastore
403: dup
404: iconst_3
405: ldc2_w        #98
408: dastore
409: aastore
410: iconst_4
411: newarray       double
413: dup
414: iconst_0
415: ldc2_w        #74
418: dastore
419: dup
420: iconst_1
421: ldc2_w        #76
424: dastore
425: dup
426: iconst_2
427: ldc2_w        #78
430: dastore
431: dup
432: iconst_3
433: ldc2_w        #80
436: dastore
437: invokespecial #8
440: astore        4
442: aload_2
443: aload         4
445: aload         4
447: getfield      #11
450: iconst_4
451: newarray       double
453: dup
454: iconst_0
455: dconst_1
456: dastore
457: dup
458: iconst_1
459: dconst_1
460: dastore
461: dup
462: iconst_2
463: dconst_1
464: dastore
465: dup
466: iconst_3
467: dconst_1
468: dastore
469: iconst_4
470: newarray       double
472: dup
473: iconst_0
474: dconst_0
475: dastore
476: dup
477: iconst_1
478: dconst_1
479: dastore
480: dup
481: iconst_2
482: ldc2_w        #4
485: dastore
486: dup
487: iconst_3
488: ldc2_w        #6
491: dastore
492: invokevirtual #12
495: astore        5
497: dconst_0
498: aload_2
499: invokevirtual #13
502: ldc2_w        #14
505: invokestatic  #16
508: ldc2_w        #100
511: aload         5
513: invokevirtual #25
516: iconst_0
517: daload
518: ldc2_w        #102
521: invokestatic  #16
524: ldc2_w        #104
527: aload         5
529: invokevirtual #25
532: iconst_1
533: daload
534: ldc2_w        #102
537: invokestatic  #16
540: ldc2_w        #106
543: aload         5
545: invokevirtual #25
548: iconst_2
549: daload
550: ldc2_w        #102
553: invokestatic  #16
556: ldc2_w        #108
559: aload         5
561: invokevirtual #25
564: iconst_3
565: daload
566: ldc2_w        #102
569: invokestatic  #16
572: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testMoreEstimatedParametersSimple
Start line: 259
End line: 272
Method source code: 
    public void testMoreEstimatedParametersSimple() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem = new LinearProblem(new double[][] {
                { 3.0, 2.0,  0.0, 0.0 },
                { 0.0, 1.0, -1.0, 1.0 },
                { 2.0, 0.0,  1.0, 0.0 }
        }, new double[] { 7.0, 3.0, 5.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },
                new double[] { 7, 6, 5, 4 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #6
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #4
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: aastore
34: dup
35: iconst_1
36: iconst_4
37: newarray       double
39: dup
40: iconst_0
41: dconst_0
42: dastore
43: dup
44: iconst_1
45: dconst_1
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #27
52: dastore
53: dup
54: iconst_3
55: dconst_1
56: dastore
57: aastore
58: dup
59: iconst_2
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: ldc2_w        #4
68: dastore
69: dup
70: iconst_1
71: dconst_0
72: dastore
73: dup
74: iconst_2
75: dconst_1
76: dastore
77: dup
78: iconst_3
79: dconst_0
80: dastore
81: aastore
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #35
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #6
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #70
102: dastore
103: invokespecial #8
106: astore_1
107: new           #9
110: dup
111: invokespecial #10
114: astore_2
115: aload_2
116: aload_1
117: aload_1
118: getfield      #11
121: iconst_3
122: newarray       double
124: dup
125: iconst_0
126: dconst_1
127: dastore
128: dup
129: iconst_1
130: dconst_1
131: dastore
132: dup
133: iconst_2
134: dconst_1
135: dastore
136: iconst_4
137: newarray       double
139: dup
140: iconst_0
141: ldc2_w        #35
144: dastore
145: dup
146: iconst_1
147: ldc2_w        #33
150: dastore
151: dup
152: iconst_2
153: ldc2_w        #70
156: dastore
157: dup
158: iconst_3
159: ldc2_w        #31
162: dastore
163: invokevirtual #12
166: pop
167: dconst_0
168: aload_2
169: invokevirtual #13
172: ldc2_w        #14
175: invokestatic  #16
178: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testMoreEstimatedParametersUnsorted
Start line: 274
End line: 293
Method source code: 
    public void testMoreEstimatedParametersUnsorted() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0, 1.0,  0.0,  0.0, 0.0,  0.0 },
                { 0.0, 0.0,  1.0,  1.0, 1.0,  0.0 },
                { 0.0, 0.0,  0.0,  0.0, 1.0, -1.0 },
                { 0.0, 0.0, -1.0,  1.0, 0.0,  1.0 },
                { 0.0, 0.0,  0.0, -1.0, 1.0,  0.0 }
       }, new double[] { 3.0, 12.0, -1.0, 7.0, 1.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1 },
                               new double[] { 2, 2, 2, 2, 2, 2 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(3.0, optimum.getPointRef()[2], 1.0e-10);
        assertEquals(4.0, optimum.getPointRef()[3], 1.0e-10);
        assertEquals(5.0, optimum.getPointRef()[4], 1.0e-10);
        assertEquals(6.0, optimum.getPointRef()[5], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_5
5: anewarray     #3
8: dup
9: iconst_0
10: bipush        6
12: newarray       double
14: dup
15: iconst_0
16: dconst_1
17: dastore
18: dup
19: iconst_1
20: dconst_1
21: dastore
22: dup
23: iconst_2
24: dconst_0
25: dastore
26: dup
27: iconst_3
28: dconst_0
29: dastore
30: dup
31: iconst_4
32: dconst_0
33: dastore
34: dup
35: iconst_5
36: dconst_0
37: dastore
38: aastore
39: dup
40: iconst_1
41: bipush        6
43: newarray       double
45: dup
46: iconst_0
47: dconst_0
48: dastore
49: dup
50: iconst_1
51: dconst_0
52: dastore
53: dup
54: iconst_2
55: dconst_1
56: dastore
57: dup
58: iconst_3
59: dconst_1
60: dastore
61: dup
62: iconst_4
63: dconst_1
64: dastore
65: dup
66: iconst_5
67: dconst_0
68: dastore
69: aastore
70: dup
71: iconst_2
72: bipush        6
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: dconst_0
83: dastore
84: dup
85: iconst_2
86: dconst_0
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #27
101: dastore
102: aastore
103: dup
104: iconst_3
105: bipush        6
107: newarray       double
109: dup
110: iconst_0
111: dconst_0
112: dastore
113: dup
114: iconst_1
115: dconst_0
116: dastore
117: dup
118: iconst_2
119: ldc2_w        #27
122: dastore
123: dup
124: iconst_3
125: dconst_1
126: dastore
127: dup
128: iconst_4
129: dconst_0
130: dastore
131: dup
132: iconst_5
133: dconst_1
134: dastore
135: aastore
136: dup
137: iconst_4
138: bipush        6
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: dup
147: iconst_1
148: dconst_0
149: dastore
150: dup
151: iconst_2
152: dconst_0
153: dastore
154: dup
155: iconst_3
156: ldc2_w        #27
159: dastore
160: dup
161: iconst_4
162: dconst_1
163: dastore
164: dup
165: iconst_5
166: dconst_0
167: dastore
168: aastore
169: iconst_5
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #6
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #110
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #27
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #35
195: dastore
196: dup
197: iconst_4
198: dconst_1
199: dastore
200: invokespecial #8
203: astore_1
204: new           #9
207: dup
208: invokespecial #10
211: astore_2
212: aload_2
213: aload_1
214: aload_1
215: getfield      #11
218: iconst_5
219: newarray       double
221: dup
222: iconst_0
223: dconst_1
224: dastore
225: dup
226: iconst_1
227: dconst_1
228: dastore
229: dup
230: iconst_2
231: dconst_1
232: dastore
233: dup
234: iconst_3
235: dconst_1
236: dastore
237: dup
238: iconst_4
239: dconst_1
240: dastore
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: ldc2_w        #4
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #4
256: dastore
257: dup
258: iconst_2
259: ldc2_w        #4
262: dastore
263: dup
264: iconst_3
265: ldc2_w        #4
268: dastore
269: dup
270: iconst_4
271: ldc2_w        #4
274: dastore
275: dup
276: iconst_5
277: ldc2_w        #4
280: dastore
281: invokevirtual #12
284: astore_3
285: dconst_0
286: aload_2
287: invokevirtual #13
290: ldc2_w        #14
293: invokestatic  #16
296: ldc2_w        #6
299: aload_3
300: invokevirtual #112
303: iconst_2
304: daload
305: ldc2_w        #14
308: invokestatic  #16
311: ldc2_w        #31
314: aload_3
315: invokevirtual #112
318: iconst_3
319: daload
320: ldc2_w        #14
323: invokestatic  #16
326: ldc2_w        #70
329: aload_3
330: invokevirtual #112
333: iconst_4
334: daload
335: ldc2_w        #14
338: invokestatic  #16
341: ldc2_w        #33
344: aload_3
345: invokevirtual #112
348: iconst_5
349: daload
350: ldc2_w        #14
353: invokestatic  #16
356: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testRedundantEquations
Start line: 295
End line: 310
Method source code: 
    public void testRedundantEquations() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0,  1.0 },
                { 1.0, -1.0 },
                { 1.0,  3.0 }
        }, new double[] { 3.0, 1.0, 5.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },
                               new double[] { 1, 1 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(2.0, optimum.getPointRef()[0], 1.0e-10);
        assertEquals(1.0, optimum.getPointRef()[1], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #27
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #6
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #6
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #70
72: dastore
73: invokespecial #8
76: astore_1
77: new           #9
80: dup
81: invokespecial #10
84: astore_2
85: aload_2
86: aload_1
87: aload_1
88: getfield      #11
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_1
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: iconst_2
107: newarray       double
109: dup
110: iconst_0
111: dconst_1
112: dastore
113: dup
114: iconst_1
115: dconst_1
116: dastore
117: invokevirtual #12
120: astore_3
121: dconst_0
122: aload_2
123: invokevirtual #13
126: ldc2_w        #14
129: invokestatic  #16
132: ldc2_w        #4
135: aload_3
136: invokevirtual #112
139: iconst_0
140: daload
141: ldc2_w        #14
144: invokestatic  #16
147: dconst_1
148: aload_3
149: invokevirtual #112
152: iconst_1
153: daload
154: ldc2_w        #14
157: invokestatic  #16
160: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testInconsistentEquations
Start line: 312
End line: 323
Method source code: 
    public void testInconsistentEquations() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0,  1.0 },
                { 1.0, -1.0 },
                { 1.0,  3.0 }
        }, new double[] { 3.0, 1.0, 4.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });
        assertTrue(optimizer.getRMS() > 0.1);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #27
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #6
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #6
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #31
72: dastore
73: invokespecial #8
76: astore_1
77: new           #9
80: dup
81: invokespecial #10
84: astore_2
85: aload_2
86: aload_1
87: aload_1
88: getfield      #11
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_1
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: iconst_2
107: newarray       double
109: dup
110: iconst_0
111: dconst_1
112: dastore
113: dup
114: iconst_1
115: dconst_1
116: dastore
117: invokevirtual #12
120: pop
121: aload_2
122: invokevirtual #13
125: ldc2_w        #113
128: dcmpl
129: ifle          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #66
140: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testInconsistentSizes
Start line: 325
End line: 358
Method source code: 
    public void testInconsistentSizes() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } }, new double[] { -1, 1 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();

        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(-1, optimum.getPoint()[0], 1.0e-10);
        assertEquals(+1, optimum.getPoint()[1], 1.0e-10);

        try {
            optimizer.optimize(problem, problem.target,
                               new double[] { 1 },
                               new double[] { 0, 0 });
            fail("an exception should have been thrown");
        } catch (OptimizationException oe) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }

        try {
            optimizer.optimize(problem, new double[] { 1 },
                               new double[] { 1 },
                               new double[] { 0, 0 });
            fail("an exception should have been thrown");
        } catch (FunctionEvaluationException oe) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: dconst_1
34: dastore
35: aastore
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #27
44: dastore
45: dup
46: iconst_1
47: dconst_1
48: dastore
49: invokespecial #8
52: astore_1
53: new           #9
56: dup
57: invokespecial #10
60: astore_2
61: aload_2
62: aload_1
63: aload_1
64: getfield      #11
67: iconst_2
68: newarray       double
70: dup
71: iconst_0
72: dconst_1
73: dastore
74: dup
75: iconst_1
76: dconst_1
77: dastore
78: iconst_2
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: dconst_0
88: dastore
89: invokevirtual #12
92: astore_3
93: dconst_0
94: aload_2
95: invokevirtual #13
98: ldc2_w        #14
101: invokestatic  #16
104: ldc2_w        #27
107: aload_3
108: invokevirtual #25
111: iconst_0
112: daload
113: ldc2_w        #14
116: invokestatic  #16
119: dconst_1
120: aload_3
121: invokevirtual #25
124: iconst_1
125: daload
126: ldc2_w        #14
129: invokestatic  #16
132: aload_2
133: aload_1
134: aload_1
135: getfield      #11
138: iconst_1
139: newarray       double
141: dup
142: iconst_0
143: dconst_1
144: dastore
145: iconst_2
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: dconst_0
155: dastore
156: invokevirtual #12
159: pop
160: ldc           #18
162: invokestatic  #19
165: goto          180
168: astore        4
170: goto          180
173: astore        4
175: ldc           #22
177: invokestatic  #19
180: aload_2
181: aload_1
182: iconst_1
183: newarray       double
185: dup
186: iconst_0
187: dconst_1
188: dastore
189: iconst_1
190: newarray       double
192: dup
193: iconst_0
194: dconst_1
195: dastore
196: iconst_2
197: newarray       double
199: dup
200: iconst_0
201: dconst_0
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: invokevirtual #12
210: pop
211: ldc           #18
213: invokestatic  #19
216: goto          231
219: astore        4
221: goto          231
224: astore        4
226: ldc           #22
228: invokestatic  #19
231: return
Exception table:
from    to  target type
132   165   168   Class org/apache/commons/math/optimization/OptimizationException
132   165   173   Class java/lang/Exception
180   216   219   Class org/apache/commons/math/FunctionEvaluationException
180   216   224   Class java/lang/Exception
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testControlParameters
Start line: 360
End line: 372
Method source code: 
    public void testControlParameters() {
        Circle circle = new Circle();
        circle.addPoint( 30.0,  68.0);
        circle.addPoint( 50.0,  -6.0);
        circle.addPoint(110.0, -20.0);
        circle.addPoint( 35.0,  15.0);
        circle.addPoint( 45.0,  97.0);
        checkEstimate(circle, 0.1, 10, 1.0e-14, 1.0e-16, 1.0e-10, false);
        checkEstimate(circle, 0.1, 10, 1.0e-15, 1.0e-17, 1.0e-10, true);
        checkEstimate(circle, 0.1,  5, 1.0e-15, 1.0e-16, 1.0e-10, true);
        circle.addPoint(300, -300);
        checkEstimate(circle, 0.1, 20, 1.0e-18, 1.0e-16, 1.0e-10, true);
    }
Method byte code: 
0: new           #116
3: dup
4: invokespecial #117
7: astore_1
8: aload_1
9: ldc2_w        #118
12: ldc2_w        #120
15: invokevirtual #122
18: aload_1
19: ldc2_w        #123
22: ldc2_w        #125
25: invokevirtual #122
28: aload_1
29: ldc2_w        #127
32: ldc2_w        #129
35: invokevirtual #122
38: aload_1
39: ldc2_w        #131
42: ldc2_w        #133
45: invokevirtual #122
48: aload_1
49: ldc2_w        #135
52: ldc2_w        #137
55: invokevirtual #122
58: aload_0
59: aload_1
60: ldc2_w        #113
63: bipush        10
65: ldc2_w        #139
68: ldc2_w        #141
71: ldc2_w        #14
74: iconst_0
75: invokespecial #143
78: aload_0
79: aload_1
80: ldc2_w        #113
83: bipush        10
85: ldc2_w        #144
88: ldc2_w        #146
91: ldc2_w        #14
94: iconst_1
95: invokespecial #143
98: aload_0
99: aload_1
100: ldc2_w        #113
103: iconst_5
104: ldc2_w        #144
107: ldc2_w        #141
110: ldc2_w        #14
113: iconst_1
114: invokespecial #143
117: aload_1
118: ldc2_w        #148
121: ldc2_w        #150
124: invokevirtual #122
127: aload_0
128: aload_1
129: ldc2_w        #113
132: bipush        20
134: ldc2_w        #152
137: ldc2_w        #141
140: ldc2_w        #14
143: iconst_1
144: invokespecial #143
147: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testCircleFitting
Start line: 397
End line: 444
Method source code: 
    public void testCircleFitting() throws FunctionEvaluationException, OptimizationException {
        Circle circle = new Circle();
        circle.addPoint( 30.0,  68.0);
        circle.addPoint( 50.0,  -6.0);
        circle.addPoint(110.0, -20.0);
        circle.addPoint( 35.0,  15.0);
        circle.addPoint( 45.0,  97.0);
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(circle, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 },
                               new double[] { 98.680, 47.345 });
        assertTrue(optimizer.getEvaluations() < 10);
        assertTrue(optimizer.getJacobianEvaluations() < 10);
        double rms = optimizer.getRMS();
        assertEquals(1.768262623567235,  Math.sqrt(circle.getN()) * rms,  1.0e-10);
        Point2D.Double center = new Point2D.Double(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        assertEquals(69.96016176931406, circle.getRadius(center), 1.0e-10);
        assertEquals(96.07590211815305, center.x,      1.0e-10);
        assertEquals(48.13516790438953, center.y,      1.0e-10);
        double[][] cov = optimizer.getCovariances();
        assertEquals(1.839, cov[0][0], 0.001);
        assertEquals(0.731, cov[0][1], 0.001);
        assertEquals(cov[0][1], cov[1][0], 1.0e-14);
        assertEquals(0.786, cov[1][1], 0.001);
        double[] errors = optimizer.guessParametersErrors();
        assertEquals(1.384, errors[0], 0.001);
        assertEquals(0.905, errors[1], 0.001);

        // add perfect measurements and check errors are reduced
        double  r = circle.getRadius(center);
        for (double d= 0; d < 2 * Math.PI; d += 0.01) {
            circle.addPoint(center.x + r * Math.cos(d), center.y + r * Math.sin(d));
        }
        double[] target = new double[circle.getN()];
        Arrays.fill(target, 0.0);
        double[] weights = new double[circle.getN()];
        Arrays.fill(weights, 2.0);
        optimizer.optimize(circle, target, weights, new double[] { 98.680, 47.345 });
        cov = optimizer.getCovariances();
        assertEquals(0.0016, cov[0][0], 0.001);
        assertEquals(3.2e-7, cov[0][1], 1.0e-9);
        assertEquals(cov[0][1], cov[1][0], 1.0e-14);
        assertEquals(0.0016, cov[1][1], 0.001);
        errors = optimizer.guessParametersErrors();
        assertEquals(0.004, errors[0], 0.001);
        assertEquals(0.004, errors[1], 0.001);

    }
Method byte code: 
0: new           #116
3: dup
4: invokespecial #117
7: astore_1
8: aload_1
9: ldc2_w        #118
12: ldc2_w        #120
15: invokevirtual #122
18: aload_1
19: ldc2_w        #123
22: ldc2_w        #125
25: invokevirtual #122
28: aload_1
29: ldc2_w        #127
32: ldc2_w        #129
35: invokevirtual #122
38: aload_1
39: ldc2_w        #131
42: ldc2_w        #133
45: invokevirtual #122
48: aload_1
49: ldc2_w        #135
52: ldc2_w        #137
55: invokevirtual #122
58: new           #9
61: dup
62: invokespecial #10
65: astore_2
66: aload_2
67: aload_1
68: iconst_5
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_0
78: dastore
79: dup
80: iconst_2
81: dconst_0
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_0
90: dastore
91: iconst_5
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_1
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: dup
107: iconst_3
108: dconst_1
109: dastore
110: dup
111: iconst_4
112: dconst_1
113: dastore
114: iconst_2
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #159
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #161
128: dastore
129: invokevirtual #12
132: astore_3
133: aload_2
134: invokevirtual #164
137: bipush        10
139: if_icmpge     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #66
150: aload_2
151: invokevirtual #165
154: bipush        10
156: if_icmpge     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #66
167: aload_2
168: invokevirtual #13
171: dstore        4
173: ldc2_w        #166
176: aload_1
177: invokevirtual #168
180: i2d
181: invokestatic  #63
184: dload         4
186: dmul
187: ldc2_w        #14
190: invokestatic  #16
193: new           #169
196: dup
197: aload_3
198: invokevirtual #112
201: iconst_0
202: daload
203: aload_3
204: invokevirtual #112
207: iconst_1
208: daload
209: invokespecial #170
212: astore        6
214: ldc2_w        #171
217: aload_1
218: aload         6
220: invokevirtual #173
223: ldc2_w        #14
226: invokestatic  #16
229: ldc2_w        #174
232: aload         6
234: getfield      #176
237: ldc2_w        #14
240: invokestatic  #16
243: ldc2_w        #177
246: aload         6
248: getfield      #179
251: ldc2_w        #14
254: invokestatic  #16
257: aload_2
258: invokevirtual #67
261: astore        7
263: ldc2_w        #180
266: aload         7
268: iconst_0
269: aaload
270: iconst_0
271: daload
272: ldc2_w        #182
275: invokestatic  #16
278: ldc2_w        #184
281: aload         7
283: iconst_0
284: aaload
285: iconst_1
286: daload
287: ldc2_w        #182
290: invokestatic  #16
293: aload         7
295: iconst_0
296: aaload
297: iconst_1
298: daload
299: aload         7
301: iconst_1
302: aaload
303: iconst_0
304: daload
305: ldc2_w        #139
308: invokestatic  #16
311: ldc2_w        #186
314: aload         7
316: iconst_1
317: aaload
318: iconst_1
319: daload
320: ldc2_w        #182
323: invokestatic  #16
326: aload_2
327: invokevirtual #17
330: astore        8
332: ldc2_w        #188
335: aload         8
337: iconst_0
338: daload
339: ldc2_w        #182
342: invokestatic  #16
345: ldc2_w        #190
348: aload         8
350: iconst_1
351: daload
352: ldc2_w        #182
355: invokestatic  #16
358: aload_1
359: aload         6
361: invokevirtual #173
364: dstore        9
366: dconst_0
367: dstore        11
369: dload         11
371: ldc2_w        #193
374: dcmpg
375: ifge          421
378: aload_1
379: aload         6
381: getfield      #176
384: dload         9
386: dload         11
388: invokestatic  #195
391: dmul
392: dadd
393: aload         6
395: getfield      #179
398: dload         9
400: dload         11
402: invokestatic  #196
405: dmul
406: dadd
407: invokevirtual #122
410: dload         11
412: ldc2_w        #197
415: dadd
416: dstore        11
418: goto          369
421: aload_1
422: invokevirtual #168
425: newarray       double
427: astore        11
429: aload         11
431: dconst_0
432: invokestatic  #199
435: aload_1
436: invokevirtual #168
439: newarray       double
441: astore        12
443: aload         12
445: ldc2_w        #4
448: invokestatic  #199
451: aload_2
452: aload_1
453: aload         11
455: aload         12
457: iconst_2
458: newarray       double
460: dup
461: iconst_0
462: ldc2_w        #159
465: dastore
466: dup
467: iconst_1
468: ldc2_w        #161
471: dastore
472: invokevirtual #12
475: pop
476: aload_2
477: invokevirtual #67
480: astore        7
482: ldc2_w        #200
485: aload         7
487: iconst_0
488: aaload
489: iconst_0
490: daload
491: ldc2_w        #182
494: invokestatic  #16
497: ldc2_w        #202
500: aload         7
502: iconst_0
503: aaload
504: iconst_1
505: daload
506: ldc2_w        #204
509: invokestatic  #16
512: aload         7
514: iconst_0
515: aaload
516: iconst_1
517: daload
518: aload         7
520: iconst_1
521: aaload
522: iconst_0
523: daload
524: ldc2_w        #139
527: invokestatic  #16
530: ldc2_w        #200
533: aload         7
535: iconst_1
536: aaload
537: iconst_1
538: daload
539: ldc2_w        #182
542: invokestatic  #16
545: aload_2
546: invokevirtual #17
549: astore        8
551: ldc2_w        #206
554: aload         8
556: iconst_0
557: daload
558: ldc2_w        #182
561: invokestatic  #16
564: ldc2_w        #206
567: aload         8
569: iconst_1
570: daload
571: ldc2_w        #182
574: invokestatic  #16
577: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testCircleFittingBadInit
Start line: 446
End line: 497
Method source code: 
    public void testCircleFittingBadInit() throws FunctionEvaluationException, OptimizationException {
        Circle circle = new Circle();
        double[][] points = new double[][] {
                {-0.312967,  0.072366}, {-0.339248,  0.132965}, {-0.379780,  0.202724},
                {-0.390426,  0.260487}, {-0.361212,  0.328325}, {-0.346039,  0.392619},
                {-0.280579,  0.444306}, {-0.216035,  0.470009}, {-0.149127,  0.493832},
                {-0.075133,  0.483271}, {-0.007759,  0.452680}, { 0.060071,  0.410235},
                { 0.103037,  0.341076}, { 0.118438,  0.273884}, { 0.131293,  0.192201},
                { 0.115869,  0.129797}, { 0.072223,  0.058396}, { 0.022884,  0.000718},
                {-0.053355, -0.020405}, {-0.123584, -0.032451}, {-0.216248, -0.032862},
                {-0.278592, -0.005008}, {-0.337655,  0.056658}, {-0.385899,  0.112526},
                {-0.405517,  0.186957}, {-0.415374,  0.262071}, {-0.387482,  0.343398},
                {-0.347322,  0.397943}, {-0.287623,  0.458425}, {-0.223502,  0.475513},
                {-0.135352,  0.478186}, {-0.061221,  0.483371}, { 0.003711,  0.422737},
                { 0.065054,  0.375830}, { 0.108108,  0.297099}, { 0.123882,  0.222850},
                { 0.117729,  0.134382}, { 0.085195,  0.056820}, { 0.029800, -0.019138},
                {-0.027520, -0.072374}, {-0.102268, -0.091555}, {-0.200299, -0.106578},
                {-0.292731, -0.091473}, {-0.356288, -0.051108}, {-0.420561,  0.014926},
                {-0.471036,  0.074716}, {-0.488638,  0.182508}, {-0.485990,  0.254068},
                {-0.463943,  0.338438}, {-0.406453,  0.404704}, {-0.334287,  0.466119},
                {-0.254244,  0.503188}, {-0.161548,  0.495769}, {-0.075733,  0.495560},
                { 0.001375,  0.434937}, { 0.082787,  0.385806}, { 0.115490,  0.323807},
                { 0.141089,  0.223450}, { 0.138693,  0.131703}, { 0.126415,  0.049174},
                { 0.066518, -0.010217}, {-0.005184, -0.070647}, {-0.080985, -0.103635},
                {-0.177377, -0.116887}, {-0.260628, -0.100258}, {-0.335756, -0.056251},
                {-0.405195, -0.000895}, {-0.444937,  0.085456}, {-0.484357,  0.175597},
                {-0.472453,  0.248681}, {-0.438580,  0.347463}, {-0.402304,  0.422428},
                {-0.326777,  0.479438}, {-0.247797,  0.505581}, {-0.152676,  0.519380},
                {-0.071754,  0.516264}, { 0.015942,  0.472802}, { 0.076608,  0.419077},
                { 0.127673,  0.330264}, { 0.159951,  0.262150}, { 0.153530,  0.172681},
                { 0.140653,  0.089229}, { 0.078666,  0.024981}, { 0.023807, -0.037022},
                {-0.048837, -0.077056}, {-0.127729, -0.075338}, {-0.221271, -0.067526}
        };
        double[] target = new double[points.length];
        Arrays.fill(target, 0.0);
        double[] weights = new double[points.length];
        Arrays.fill(weights, 2.0);
        for (int i = 0; i < points.length; ++i) {
            circle.addPoint(points[i][0], points[i][1]);
        }
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.setConvergenceChecker(new SimpleVectorialValueChecker(1.0e-8, 1.0e-8));
        VectorialPointValuePair optimum =
            optimizer.optimize(circle, target, weights, new double[] { -12, -12 });
        Point2D.Double center = new Point2D.Double(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        assertTrue(optimizer.getEvaluations() < 25);
        assertTrue(optimizer.getJacobianEvaluations() < 20);
        assertEquals( 0.043, optimizer.getRMS(), 1.0e-3);
        assertEquals( 0.292235,  circle.getRadius(center), 1.0e-6);
        assertEquals(-0.151738,  center.x,      1.0e-6);
        assertEquals( 0.2075001, center.y,      1.0e-6);
    }
Method byte code: 
0: new           #116
3: dup
4: invokespecial #117
7: astore_1
8: bipush        87
10: anewarray     #3
13: dup
14: iconst_0
15: iconst_2
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #208
23: dastore
24: dup
25: iconst_1
26: ldc2_w        #210
29: dastore
30: aastore
31: dup
32: iconst_1
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #212
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #214
47: dastore
48: aastore
49: dup
50: iconst_2
51: iconst_2
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #216
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #218
65: dastore
66: aastore
67: dup
68: iconst_3
69: iconst_2
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #220
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #222
83: dastore
84: aastore
85: dup
86: iconst_4
87: iconst_2
88: newarray       double
90: dup
91: iconst_0
92: ldc2_w        #224
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #226
101: dastore
102: aastore
103: dup
104: iconst_5
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: ldc2_w        #228
113: dastore
114: dup
115: iconst_1
116: ldc2_w        #230
119: dastore
120: aastore
121: dup
122: bipush        6
124: iconst_2
125: newarray       double
127: dup
128: iconst_0
129: ldc2_w        #232
132: dastore
133: dup
134: iconst_1
135: ldc2_w        #234
138: dastore
139: aastore
140: dup
141: bipush        7
143: iconst_2
144: newarray       double
146: dup
147: iconst_0
148: ldc2_w        #236
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #238
157: dastore
158: aastore
159: dup
160: bipush        8
162: iconst_2
163: newarray       double
165: dup
166: iconst_0
167: ldc2_w        #240
170: dastore
171: dup
172: iconst_1
173: ldc2_w        #242
176: dastore
177: aastore
178: dup
179: bipush        9
181: iconst_2
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #244
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #246
195: dastore
196: aastore
197: dup
198: bipush        10
200: iconst_2
201: newarray       double
203: dup
204: iconst_0
205: ldc2_w        #248
208: dastore
209: dup
210: iconst_1
211: ldc2_w        #250
214: dastore
215: aastore
216: dup
217: bipush        11
219: iconst_2
220: newarray       double
222: dup
223: iconst_0
224: ldc2_w        #252
227: dastore
228: dup
229: iconst_1
230: ldc2_w        #254
233: dastore
234: aastore
235: dup
236: bipush        12
238: iconst_2
239: newarray       double
241: dup
242: iconst_0
243: ldc2_w        #256
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #258
252: dastore
253: aastore
254: dup
255: bipush        13
257: iconst_2
258: newarray       double
260: dup
261: iconst_0
262: ldc2_w        #260
265: dastore
266: dup
267: iconst_1
268: ldc2_w        #262
271: dastore
272: aastore
273: dup
274: bipush        14
276: iconst_2
277: newarray       double
279: dup
280: iconst_0
281: ldc2_w        #264
284: dastore
285: dup
286: iconst_1
287: ldc2_w        #266
290: dastore
291: aastore
292: dup
293: bipush        15
295: iconst_2
296: newarray       double
298: dup
299: iconst_0
300: ldc2_w        #268
303: dastore
304: dup
305: iconst_1
306: ldc2_w        #270
309: dastore
310: aastore
311: dup
312: bipush        16
314: iconst_2
315: newarray       double
317: dup
318: iconst_0
319: ldc2_w        #272
322: dastore
323: dup
324: iconst_1
325: ldc2_w        #274
328: dastore
329: aastore
330: dup
331: bipush        17
333: iconst_2
334: newarray       double
336: dup
337: iconst_0
338: ldc2_w        #276
341: dastore
342: dup
343: iconst_1
344: ldc2_w        #278
347: dastore
348: aastore
349: dup
350: bipush        18
352: iconst_2
353: newarray       double
355: dup
356: iconst_0
357: ldc2_w        #280
360: dastore
361: dup
362: iconst_1
363: ldc2_w        #282
366: dastore
367: aastore
368: dup
369: bipush        19
371: iconst_2
372: newarray       double
374: dup
375: iconst_0
376: ldc2_w        #284
379: dastore
380: dup
381: iconst_1
382: ldc2_w        #286
385: dastore
386: aastore
387: dup
388: bipush        20
390: iconst_2
391: newarray       double
393: dup
394: iconst_0
395: ldc2_w        #288
398: dastore
399: dup
400: iconst_1
401: ldc2_w        #290
404: dastore
405: aastore
406: dup
407: bipush        21
409: iconst_2
410: newarray       double
412: dup
413: iconst_0
414: ldc2_w        #292
417: dastore
418: dup
419: iconst_1
420: ldc2_w        #294
423: dastore
424: aastore
425: dup
426: bipush        22
428: iconst_2
429: newarray       double
431: dup
432: iconst_0
433: ldc2_w        #296
436: dastore
437: dup
438: iconst_1
439: ldc2_w        #298
442: dastore
443: aastore
444: dup
445: bipush        23
447: iconst_2
448: newarray       double
450: dup
451: iconst_0
452: ldc2_w        #300
455: dastore
456: dup
457: iconst_1
458: ldc2_w        #302
461: dastore
462: aastore
463: dup
464: bipush        24
466: iconst_2
467: newarray       double
469: dup
470: iconst_0
471: ldc2_w        #304
474: dastore
475: dup
476: iconst_1
477: ldc2_w        #306
480: dastore
481: aastore
482: dup
483: bipush        25
485: iconst_2
486: newarray       double
488: dup
489: iconst_0
490: ldc2_w        #308
493: dastore
494: dup
495: iconst_1
496: ldc2_w        #310
499: dastore
500: aastore
501: dup
502: bipush        26
504: iconst_2
505: newarray       double
507: dup
508: iconst_0
509: ldc2_w        #312
512: dastore
513: dup
514: iconst_1
515: ldc2_w        #314
518: dastore
519: aastore
520: dup
521: bipush        27
523: iconst_2
524: newarray       double
526: dup
527: iconst_0
528: ldc2_w        #316
531: dastore
532: dup
533: iconst_1
534: ldc2_w        #318
537: dastore
538: aastore
539: dup
540: bipush        28
542: iconst_2
543: newarray       double
545: dup
546: iconst_0
547: ldc2_w        #320
550: dastore
551: dup
552: iconst_1
553: ldc2_w        #322
556: dastore
557: aastore
558: dup
559: bipush        29
561: iconst_2
562: newarray       double
564: dup
565: iconst_0
566: ldc2_w        #324
569: dastore
570: dup
571: iconst_1
572: ldc2_w        #326
575: dastore
576: aastore
577: dup
578: bipush        30
580: iconst_2
581: newarray       double
583: dup
584: iconst_0
585: ldc2_w        #328
588: dastore
589: dup
590: iconst_1
591: ldc2_w        #330
594: dastore
595: aastore
596: dup
597: bipush        31
599: iconst_2
600: newarray       double
602: dup
603: iconst_0
604: ldc2_w        #332
607: dastore
608: dup
609: iconst_1
610: ldc2_w        #334
613: dastore
614: aastore
615: dup
616: bipush        32
618: iconst_2
619: newarray       double
621: dup
622: iconst_0
623: ldc2_w        #336
626: dastore
627: dup
628: iconst_1
629: ldc2_w        #338
632: dastore
633: aastore
634: dup
635: bipush        33
637: iconst_2
638: newarray       double
640: dup
641: iconst_0
642: ldc2_w        #340
645: dastore
646: dup
647: iconst_1
648: ldc2_w        #342
651: dastore
652: aastore
653: dup
654: bipush        34
656: iconst_2
657: newarray       double
659: dup
660: iconst_0
661: ldc2_w        #344
664: dastore
665: dup
666: iconst_1
667: ldc2_w        #346
670: dastore
671: aastore
672: dup
673: bipush        35
675: iconst_2
676: newarray       double
678: dup
679: iconst_0
680: ldc2_w        #348
683: dastore
684: dup
685: iconst_1
686: ldc2_w        #350
689: dastore
690: aastore
691: dup
692: bipush        36
694: iconst_2
695: newarray       double
697: dup
698: iconst_0
699: ldc2_w        #352
702: dastore
703: dup
704: iconst_1
705: ldc2_w        #354
708: dastore
709: aastore
710: dup
711: bipush        37
713: iconst_2
714: newarray       double
716: dup
717: iconst_0
718: ldc2_w        #356
721: dastore
722: dup
723: iconst_1
724: ldc2_w        #358
727: dastore
728: aastore
729: dup
730: bipush        38
732: iconst_2
733: newarray       double
735: dup
736: iconst_0
737: ldc2_w        #360
740: dastore
741: dup
742: iconst_1
743: ldc2_w        #362
746: dastore
747: aastore
748: dup
749: bipush        39
751: iconst_2
752: newarray       double
754: dup
755: iconst_0
756: ldc2_w        #364
759: dastore
760: dup
761: iconst_1
762: ldc2_w        #366
765: dastore
766: aastore
767: dup
768: bipush        40
770: iconst_2
771: newarray       double
773: dup
774: iconst_0
775: ldc2_w        #368
778: dastore
779: dup
780: iconst_1
781: ldc2_w        #370
784: dastore
785: aastore
786: dup
787: bipush        41
789: iconst_2
790: newarray       double
792: dup
793: iconst_0
794: ldc2_w        #372
797: dastore
798: dup
799: iconst_1
800: ldc2_w        #374
803: dastore
804: aastore
805: dup
806: bipush        42
808: iconst_2
809: newarray       double
811: dup
812: iconst_0
813: ldc2_w        #376
816: dastore
817: dup
818: iconst_1
819: ldc2_w        #378
822: dastore
823: aastore
824: dup
825: bipush        43
827: iconst_2
828: newarray       double
830: dup
831: iconst_0
832: ldc2_w        #380
835: dastore
836: dup
837: iconst_1
838: ldc2_w        #382
841: dastore
842: aastore
843: dup
844: bipush        44
846: iconst_2
847: newarray       double
849: dup
850: iconst_0
851: ldc2_w        #384
854: dastore
855: dup
856: iconst_1
857: ldc2_w        #386
860: dastore
861: aastore
862: dup
863: bipush        45
865: iconst_2
866: newarray       double
868: dup
869: iconst_0
870: ldc2_w        #388
873: dastore
874: dup
875: iconst_1
876: ldc2_w        #390
879: dastore
880: aastore
881: dup
882: bipush        46
884: iconst_2
885: newarray       double
887: dup
888: iconst_0
889: ldc2_w        #392
892: dastore
893: dup
894: iconst_1
895: ldc2_w        #394
898: dastore
899: aastore
900: dup
901: bipush        47
903: iconst_2
904: newarray       double
906: dup
907: iconst_0
908: ldc2_w        #396
911: dastore
912: dup
913: iconst_1
914: ldc2_w        #398
917: dastore
918: aastore
919: dup
920: bipush        48
922: iconst_2
923: newarray       double
925: dup
926: iconst_0
927: ldc2_w        #400
930: dastore
931: dup
932: iconst_1
933: ldc2_w        #402
936: dastore
937: aastore
938: dup
939: bipush        49
941: iconst_2
942: newarray       double
944: dup
945: iconst_0
946: ldc2_w        #404
949: dastore
950: dup
951: iconst_1
952: ldc2_w        #406
955: dastore
956: aastore
957: dup
958: bipush        50
960: iconst_2
961: newarray       double
963: dup
964: iconst_0
965: ldc2_w        #408
968: dastore
969: dup
970: iconst_1
971: ldc2_w        #410
974: dastore
975: aastore
976: dup
977: bipush        51
979: iconst_2
980: newarray       double
982: dup
983: iconst_0
984: ldc2_w        #412
987: dastore
988: dup
989: iconst_1
990: ldc2_w        #414
993: dastore
994: aastore
995: dup
996: bipush        52
998: iconst_2
999: newarray       double
1001: dup
1002: iconst_0
1003: ldc2_w        #416
1006: dastore
1007: dup
1008: iconst_1
1009: ldc2_w        #418
1012: dastore
1013: aastore
1014: dup
1015: bipush        53
1017: iconst_2
1018: newarray       double
1020: dup
1021: iconst_0
1022: ldc2_w        #420
1025: dastore
1026: dup
1027: iconst_1
1028: ldc2_w        #422
1031: dastore
1032: aastore
1033: dup
1034: bipush        54
1036: iconst_2
1037: newarray       double
1039: dup
1040: iconst_0
1041: ldc2_w        #424
1044: dastore
1045: dup
1046: iconst_1
1047: ldc2_w        #426
1050: dastore
1051: aastore
1052: dup
1053: bipush        55
1055: iconst_2
1056: newarray       double
1058: dup
1059: iconst_0
1060: ldc2_w        #428
1063: dastore
1064: dup
1065: iconst_1
1066: ldc2_w        #430
1069: dastore
1070: aastore
1071: dup
1072: bipush        56
1074: iconst_2
1075: newarray       double
1077: dup
1078: iconst_0
1079: ldc2_w        #432
1082: dastore
1083: dup
1084: iconst_1
1085: ldc2_w        #434
1088: dastore
1089: aastore
1090: dup
1091: bipush        57
1093: iconst_2
1094: newarray       double
1096: dup
1097: iconst_0
1098: ldc2_w        #436
1101: dastore
1102: dup
1103: iconst_1
1104: ldc2_w        #438
1107: dastore
1108: aastore
1109: dup
1110: bipush        58
1112: iconst_2
1113: newarray       double
1115: dup
1116: iconst_0
1117: ldc2_w        #440
1120: dastore
1121: dup
1122: iconst_1
1123: ldc2_w        #442
1126: dastore
1127: aastore
1128: dup
1129: bipush        59
1131: iconst_2
1132: newarray       double
1134: dup
1135: iconst_0
1136: ldc2_w        #444
1139: dastore
1140: dup
1141: iconst_1
1142: ldc2_w        #446
1145: dastore
1146: aastore
1147: dup
1148: bipush        60
1150: iconst_2
1151: newarray       double
1153: dup
1154: iconst_0
1155: ldc2_w        #448
1158: dastore
1159: dup
1160: iconst_1
1161: ldc2_w        #450
1164: dastore
1165: aastore
1166: dup
1167: bipush        61
1169: iconst_2
1170: newarray       double
1172: dup
1173: iconst_0
1174: ldc2_w        #452
1177: dastore
1178: dup
1179: iconst_1
1180: ldc2_w        #454
1183: dastore
1184: aastore
1185: dup
1186: bipush        62
1188: iconst_2
1189: newarray       double
1191: dup
1192: iconst_0
1193: ldc2_w        #456
1196: dastore
1197: dup
1198: iconst_1
1199: ldc2_w        #458
1202: dastore
1203: aastore
1204: dup
1205: bipush        63
1207: iconst_2
1208: newarray       double
1210: dup
1211: iconst_0
1212: ldc2_w        #460
1215: dastore
1216: dup
1217: iconst_1
1218: ldc2_w        #462
1221: dastore
1222: aastore
1223: dup
1224: bipush        64
1226: iconst_2
1227: newarray       double
1229: dup
1230: iconst_0
1231: ldc2_w        #464
1234: dastore
1235: dup
1236: iconst_1
1237: ldc2_w        #466
1240: dastore
1241: aastore
1242: dup
1243: bipush        65
1245: iconst_2
1246: newarray       double
1248: dup
1249: iconst_0
1250: ldc2_w        #468
1253: dastore
1254: dup
1255: iconst_1
1256: ldc2_w        #470
1259: dastore
1260: aastore
1261: dup
1262: bipush        66
1264: iconst_2
1265: newarray       double
1267: dup
1268: iconst_0
1269: ldc2_w        #472
1272: dastore
1273: dup
1274: iconst_1
1275: ldc2_w        #474
1278: dastore
1279: aastore
1280: dup
1281: bipush        67
1283: iconst_2
1284: newarray       double
1286: dup
1287: iconst_0
1288: ldc2_w        #476
1291: dastore
1292: dup
1293: iconst_1
1294: ldc2_w        #478
1297: dastore
1298: aastore
1299: dup
1300: bipush        68
1302: iconst_2
1303: newarray       double
1305: dup
1306: iconst_0
1307: ldc2_w        #480
1310: dastore
1311: dup
1312: iconst_1
1313: ldc2_w        #482
1316: dastore
1317: aastore
1318: dup
1319: bipush        69
1321: iconst_2
1322: newarray       double
1324: dup
1325: iconst_0
1326: ldc2_w        #484
1329: dastore
1330: dup
1331: iconst_1
1332: ldc2_w        #486
1335: dastore
1336: aastore
1337: dup
1338: bipush        70
1340: iconst_2
1341: newarray       double
1343: dup
1344: iconst_0
1345: ldc2_w        #488
1348: dastore
1349: dup
1350: iconst_1
1351: ldc2_w        #490
1354: dastore
1355: aastore
1356: dup
1357: bipush        71
1359: iconst_2
1360: newarray       double
1362: dup
1363: iconst_0
1364: ldc2_w        #492
1367: dastore
1368: dup
1369: iconst_1
1370: ldc2_w        #494
1373: dastore
1374: aastore
1375: dup
1376: bipush        72
1378: iconst_2
1379: newarray       double
1381: dup
1382: iconst_0
1383: ldc2_w        #496
1386: dastore
1387: dup
1388: iconst_1
1389: ldc2_w        #498
1392: dastore
1393: aastore
1394: dup
1395: bipush        73
1397: iconst_2
1398: newarray       double
1400: dup
1401: iconst_0
1402: ldc2_w        #500
1405: dastore
1406: dup
1407: iconst_1
1408: ldc2_w        #502
1411: dastore
1412: aastore
1413: dup
1414: bipush        74
1416: iconst_2
1417: newarray       double
1419: dup
1420: iconst_0
1421: ldc2_w        #504
1424: dastore
1425: dup
1426: iconst_1
1427: ldc2_w        #506
1430: dastore
1431: aastore
1432: dup
1433: bipush        75
1435: iconst_2
1436: newarray       double
1438: dup
1439: iconst_0
1440: ldc2_w        #508
1443: dastore
1444: dup
1445: iconst_1
1446: ldc2_w        #510
1449: dastore
1450: aastore
1451: dup
1452: bipush        76
1454: iconst_2
1455: newarray       double
1457: dup
1458: iconst_0
1459: ldc2_w        #512
1462: dastore
1463: dup
1464: iconst_1
1465: ldc2_w        #514
1468: dastore
1469: aastore
1470: dup
1471: bipush        77
1473: iconst_2
1474: newarray       double
1476: dup
1477: iconst_0
1478: ldc2_w        #516
1481: dastore
1482: dup
1483: iconst_1
1484: ldc2_w        #518
1487: dastore
1488: aastore
1489: dup
1490: bipush        78
1492: iconst_2
1493: newarray       double
1495: dup
1496: iconst_0
1497: ldc2_w        #520
1500: dastore
1501: dup
1502: iconst_1
1503: ldc2_w        #522
1506: dastore
1507: aastore
1508: dup
1509: bipush        79
1511: iconst_2
1512: newarray       double
1514: dup
1515: iconst_0
1516: ldc2_w        #524
1519: dastore
1520: dup
1521: iconst_1
1522: ldc2_w        #526
1525: dastore
1526: aastore
1527: dup
1528: bipush        80
1530: iconst_2
1531: newarray       double
1533: dup
1534: iconst_0
1535: ldc2_w        #528
1538: dastore
1539: dup
1540: iconst_1
1541: ldc2_w        #530
1544: dastore
1545: aastore
1546: dup
1547: bipush        81
1549: iconst_2
1550: newarray       double
1552: dup
1553: iconst_0
1554: ldc2_w        #532
1557: dastore
1558: dup
1559: iconst_1
1560: ldc2_w        #534
1563: dastore
1564: aastore
1565: dup
1566: bipush        82
1568: iconst_2
1569: newarray       double
1571: dup
1572: iconst_0
1573: ldc2_w        #536
1576: dastore
1577: dup
1578: iconst_1
1579: ldc2_w        #538
1582: dastore
1583: aastore
1584: dup
1585: bipush        83
1587: iconst_2
1588: newarray       double
1590: dup
1591: iconst_0
1592: ldc2_w        #540
1595: dastore
1596: dup
1597: iconst_1
1598: ldc2_w        #542
1601: dastore
1602: aastore
1603: dup
1604: bipush        84
1606: iconst_2
1607: newarray       double
1609: dup
1610: iconst_0
1611: ldc2_w        #544
1614: dastore
1615: dup
1616: iconst_1
1617: ldc2_w        #546
1620: dastore
1621: aastore
1622: dup
1623: bipush        85
1625: iconst_2
1626: newarray       double
1628: dup
1629: iconst_0
1630: ldc2_w        #548
1633: dastore
1634: dup
1635: iconst_1
1636: ldc2_w        #550
1639: dastore
1640: aastore
1641: dup
1642: bipush        86
1644: iconst_2
1645: newarray       double
1647: dup
1648: iconst_0
1649: ldc2_w        #552
1652: dastore
1653: dup
1654: iconst_1
1655: ldc2_w        #554
1658: dastore
1659: aastore
1660: astore_2
1661: aload_2
1662: arraylength
1663: newarray       double
1665: astore_3
1666: aload_3
1667: dconst_0
1668: invokestatic  #199
1671: aload_2
1672: arraylength
1673: newarray       double
1675: astore        4
1677: aload         4
1679: ldc2_w        #4
1682: invokestatic  #199
1685: iconst_0
1686: istore        5
1688: iload         5
1690: aload_2
1691: arraylength
1692: if_icmpge     1717
1695: aload_1
1696: aload_2
1697: iload         5
1699: aaload
1700: iconst_0
1701: daload
1702: aload_2
1703: iload         5
1705: aaload
1706: iconst_1
1707: daload
1708: invokevirtual #122
1711: iinc          5, 1
1714: goto          1688
1717: new           #9
1720: dup
1721: invokespecial #10
1724: astore        5
1726: aload         5
1728: new           #556
1731: dup
1732: ldc2_w        #102
1735: ldc2_w        #102
1738: invokespecial #557
1741: invokevirtual #558
1744: aload         5
1746: aload_1
1747: aload_3
1748: aload         4
1750: iconst_2
1751: newarray       double
1753: dup
1754: iconst_0
1755: ldc2_w        #59
1758: dastore
1759: dup
1760: iconst_1
1761: ldc2_w        #59
1764: dastore
1765: invokevirtual #12
1768: astore        6
1770: new           #169
1773: dup
1774: aload         6
1776: invokevirtual #112
1779: iconst_0
1780: daload
1781: aload         6
1783: invokevirtual #112
1786: iconst_1
1787: daload
1788: invokespecial #170
1791: astore        7
1793: aload         5
1795: invokevirtual #164
1798: bipush        25
1800: if_icmpge     1807
1803: iconst_1
1804: goto          1808
1807: iconst_0
1808: invokestatic  #66
1811: aload         5
1813: invokevirtual #165
1816: bipush        20
1818: if_icmpge     1825
1821: iconst_1
1822: goto          1826
1825: iconst_0
1826: invokestatic  #66
1829: ldc2_w        #559
1832: aload         5
1834: invokevirtual #13
1837: ldc2_w        #182
1840: invokestatic  #16
1843: ldc2_w        #561
1846: aload_1
1847: aload         7
1849: invokevirtual #173
1852: ldc2_w        #563
1855: invokestatic  #16
1858: ldc2_w        #565
1861: aload         7
1863: getfield      #176
1866: ldc2_w        #563
1869: invokestatic  #16
1872: ldc2_w        #567
1875: aload         7
1877: getfield      #179
1880: ldc2_w        #563
1883: invokestatic  #16
1886: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/65/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testMath199
Start line: 499
End line: 518
Method source code: 
    public void testMath199() throws FunctionEvaluationException {
        try {
            QuadraticProblem problem = new QuadraticProblem();
            problem.addPoint (0, -3.182591015485607);
            problem.addPoint (1, -2.5581184967730577);
            problem.addPoint (2, -2.1488478161387325);
            problem.addPoint (3, -1.9122489313410047);
            problem.addPoint (4, 1.7785661310051026);
            LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
            optimizer.setQRRankingThreshold(0);
            optimizer.optimize(problem,
                               new double[] { 0, 0, 0, 0, 0 },
                               new double[] { 0.0, 4.4e-323, 1.0, 4.4e-323, 0.0 },
                               new double[] { 0, 0, 0 });
            fail("an exception should have been thrown");
        } catch (OptimizationException ee) {
            // expected behavior
        }

    }
Method byte code: 
0: new           #569
3: dup
4: invokespecial #570
7: astore_1
8: aload_1
9: dconst_0
10: ldc2_w        #571
13: invokevirtual #573
16: aload_1
17: dconst_1
18: ldc2_w        #574
21: invokevirtual #573
24: aload_1
25: ldc2_w        #4
28: ldc2_w        #576
31: invokevirtual #573
34: aload_1
35: ldc2_w        #6
38: ldc2_w        #578
41: invokevirtual #573
44: aload_1
45: ldc2_w        #31
48: ldc2_w        #580
51: invokevirtual #573
54: new           #9
57: dup
58: invokespecial #10
61: astore_2
62: aload_2
63: dconst_0
64: invokevirtual #582
67: aload_2
68: aload_1
69: iconst_5
70: newarray       double
72: dup
73: iconst_0
74: dconst_0
75: dastore
76: dup
77: iconst_1
78: dconst_0
79: dastore
80: dup
81: iconst_2
82: dconst_0
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_0
91: dastore
92: iconst_5
93: newarray       double
95: dup
96: iconst_0
97: dconst_0
98: dastore
99: dup
100: iconst_1
101: ldc2_w        #583
104: dastore
105: dup
106: iconst_2
107: dconst_1
108: dastore
109: dup
110: iconst_3
111: ldc2_w        #583
114: dastore
115: dup
116: iconst_4
117: dconst_0
118: dastore
119: iconst_3
120: newarray       double
122: dup
123: iconst_0
124: dconst_0
125: dastore
126: dup
127: iconst_1
128: dconst_0
129: dastore
130: dup
131: iconst_2
132: dconst_0
133: dastore
134: invokevirtual #12
137: pop
138: ldc           #18
140: invokestatic  #19
143: goto          147
146: astore_1
147: return
Exception table:
from    to  target type
0   143   146   Class org/apache/commons/math/optimization/OptimizationException
}
