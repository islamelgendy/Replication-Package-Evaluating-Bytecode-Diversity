Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 23
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-0.0d), (double) 'a', univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -0 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #9
33: ldc2_w        #11
36: aload_1
37: invokespecial #13
40: astore_2
41: ldc           #14
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
26    46    49   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 26
End line: 37
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) (-1), 0.0d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -1 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #17
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #18
33: dconst_0
34: aload_1
35: invokespecial #13
38: astore_2
39: ldc           #20
41: invokestatic  #15
44: goto          48
47: astore_2
48: return
Exception table:
from    to  target type
26    44    47   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 40
End line: 51
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-1.0d), 0.0d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -1 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #21
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #18
33: dconst_0
34: aload_1
35: invokespecial #13
38: astore_2
39: ldc           #20
41: invokestatic  #15
44: goto          48
47: astore_2
48: return
Exception table:
from    to  target type
26    44    47   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 54
End line: 64
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) (-1), 0.8414709825806044d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -1 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #22
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #18
31: ldc2_w        #23
34: invokespecial #25
37: astore_1
38: ldc           #20
40: invokestatic  #15
43: goto          47
46: astore_1
47: return
Exception table:
from    to  target type
24    43    46   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 67
End line: 77
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.0d, (-2.356194490192345d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #26
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: ldc2_w        #27
32: invokespecial #25
35: astore_1
36: ldc           #29
38: invokestatic  #15
41: goto          45
44: astore_1
45: return
Exception table:
from    to  target type
24    41    44   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 80
End line: 96
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction5 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction5, (double) 20L);
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair12 = brentOptimizer3.optimize((int) ' ', univariateFunction7, goalType8, 4.619848063268439E-25d, 2.2250738585072014E-308d, 0.9735361584457501d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateFunction7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #30
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aconst_null
42: astore_3
43: aload_3
44: ldc2_w        #35
47: invokestatic  #37
50: astore        4
52: aconst_null
53: astore        5
55: aload_2
56: bipush        32
58: aload         4
60: aload         5
62: ldc2_w        #38
65: ldc2_w        #40
68: ldc2_w        #42
71: invokevirtual #44
74: astore        6
76: ldc           #45
78: invokestatic  #15
81: goto          86
84: astore        6
86: aload         4
88: invokestatic  #47
91: return
Exception table:
from    to  target type
55    81    84   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 99
End line: 115
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair6 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #48
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #49
45: dstore_3
46: aload_2
47: invokevirtual #50
50: istore        5
52: aload_2
53: invokevirtual #51
56: astore        6
58: ldc           #52
60: invokestatic  #15
63: goto          68
66: astore        6
68: new           #54
71: dup
72: invokespecial #55
75: ldc           #56
77: invokevirtual #57
80: dload_3
81: invokevirtual #58
84: ldc           #59
86: invokevirtual #57
89: dconst_0
90: invokevirtual #58
93: ldc           #56
95: invokevirtual #57
98: invokevirtual #60
101: dload_3
102: dconst_0
103: dcmpl
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #61
115: new           #54
118: dup
119: invokespecial #55
122: ldc           #56
124: invokevirtual #57
127: iload         5
129: invokevirtual #62
132: ldc           #59
134: invokevirtual #57
137: iconst_0
138: invokevirtual #62
141: ldc           #56
143: invokevirtual #57
146: invokevirtual #60
149: iload         5
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #61
162: return
Exception table:
from    to  target type
52    63    66   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 118
End line: 129
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(11014.0d, (double) (-100.0f), univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -100 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #63
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #64
33: ldc2_w        #66
36: aload_1
37: invokespecial #13
40: astore_2
41: ldc           #68
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
26    46    49   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 132
End line: 236
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = sin9.derivative();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray13 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin8, sin9, sin11, sin12 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray13);
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray33 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, univariateDifferentiable14, univariateDifferentiable21, sin22, sin24, univariateDifferentiable32 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray33);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer38 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker37);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray46 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin41, sin42, sin44, sin45 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray53 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin48, sin49, sin51, sin52 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable54 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray53);
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = sin55.derivative();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction58 = sin57.derivative();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction61 = sin60.derivative();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray64 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin59, sin60, sin62, sin63 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable65 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray64);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, univariateDifferentiable47, univariateDifferentiable54, sin55, sin57, univariateDifferentiable65 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.GoalType goalType68 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair71 = brentOptimizer38.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable67, goalType68, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable34, goalType68, (double) 97L, (double) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray13);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray53);
        org.junit.Assert.assertNotNull(univariateDifferentiable54);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertNotNull(univariateFunction58);
        org.junit.Assert.assertNotNull(univariateFunction61);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray64);
        org.junit.Assert.assertNotNull(univariateDifferentiable65);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertTrue("'" + goalType68 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType68.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair71);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #71
50: istore        4
52: new           #72
55: dup
56: invokespecial #73
59: astore        5
61: new           #72
64: dup
65: invokespecial #73
68: astore        6
70: new           #72
73: dup
74: invokespecial #73
77: astore        7
79: aload         7
81: invokevirtual #74
84: astore        8
86: new           #72
89: dup
90: invokespecial #73
93: astore        9
95: new           #72
98: dup
99: invokespecial #73
102: astore        10
104: iconst_4
105: anewarray     #75
108: dup
109: iconst_0
110: aload         6
112: aastore
113: dup
114: iconst_1
115: aload         7
117: aastore
118: dup
119: iconst_2
120: aload         9
122: aastore
123: dup
124: iconst_3
125: aload         10
127: aastore
128: astore        11
130: aload         11
132: invokestatic  #76
135: astore        12
137: new           #72
140: dup
141: invokespecial #73
144: astore        13
146: new           #72
149: dup
150: invokespecial #73
153: astore        14
155: aload         14
157: invokevirtual #74
160: astore        15
162: new           #72
165: dup
166: invokespecial #73
169: astore        16
171: new           #72
174: dup
175: invokespecial #73
178: astore        17
180: iconst_4
181: anewarray     #75
184: dup
185: iconst_0
186: aload         13
188: aastore
189: dup
190: iconst_1
191: aload         14
193: aastore
194: dup
195: iconst_2
196: aload         16
198: aastore
199: dup
200: iconst_3
201: aload         17
203: aastore
204: astore        18
206: aload         18
208: invokestatic  #76
211: astore        19
213: new           #72
216: dup
217: invokespecial #73
220: astore        20
222: aload         20
224: invokevirtual #74
227: astore        21
229: new           #72
232: dup
233: invokespecial #73
236: astore        22
238: aload         22
240: invokevirtual #74
243: astore        23
245: new           #72
248: dup
249: invokespecial #73
252: astore        24
254: new           #72
257: dup
258: invokespecial #73
261: astore        25
263: aload         25
265: invokevirtual #74
268: astore        26
270: new           #72
273: dup
274: invokespecial #73
277: astore        27
279: new           #72
282: dup
283: invokespecial #73
286: astore        28
288: iconst_4
289: anewarray     #75
292: dup
293: iconst_0
294: aload         24
296: aastore
297: dup
298: iconst_1
299: aload         25
301: aastore
302: dup
303: iconst_2
304: aload         27
306: aastore
307: dup
308: iconst_3
309: aload         28
311: aastore
312: astore        29
314: aload         29
316: invokestatic  #76
319: astore        30
321: bipush        6
323: anewarray     #75
326: dup
327: iconst_0
328: aload         5
330: aastore
331: dup
332: iconst_1
333: aload         12
335: aastore
336: dup
337: iconst_2
338: aload         19
340: aastore
341: dup
342: iconst_3
343: aload         20
345: aastore
346: dup
347: iconst_4
348: aload         22
350: aastore
351: dup
352: iconst_5
353: aload         30
355: aastore
356: astore        31
358: aload         31
360: invokestatic  #77
363: astore        32
365: aconst_null
366: astore        33
368: new           #8
371: dup
372: ldc2_w        #31
375: ldc2_w        #33
378: aload         33
380: invokespecial #13
383: astore        34
385: new           #72
388: dup
389: invokespecial #73
392: astore        35
394: new           #72
397: dup
398: invokespecial #73
401: astore        36
403: new           #72
406: dup
407: invokespecial #73
410: astore        37
412: aload         37
414: invokevirtual #74
417: astore        38
419: new           #72
422: dup
423: invokespecial #73
426: astore        39
428: new           #72
431: dup
432: invokespecial #73
435: astore        40
437: iconst_4
438: anewarray     #75
441: dup
442: iconst_0
443: aload         36
445: aastore
446: dup
447: iconst_1
448: aload         37
450: aastore
451: dup
452: iconst_2
453: aload         39
455: aastore
456: dup
457: iconst_3
458: aload         40
460: aastore
461: astore        41
463: aload         41
465: invokestatic  #76
468: astore        42
470: new           #72
473: dup
474: invokespecial #73
477: astore        43
479: new           #72
482: dup
483: invokespecial #73
486: astore        44
488: aload         44
490: invokevirtual #74
493: astore        45
495: new           #72
498: dup
499: invokespecial #73
502: astore        46
504: new           #72
507: dup
508: invokespecial #73
511: astore        47
513: iconst_4
514: anewarray     #75
517: dup
518: iconst_0
519: aload         43
521: aastore
522: dup
523: iconst_1
524: aload         44
526: aastore
527: dup
528: iconst_2
529: aload         46
531: aastore
532: dup
533: iconst_3
534: aload         47
536: aastore
537: astore        48
539: aload         48
541: invokestatic  #76
544: astore        49
546: new           #72
549: dup
550: invokespecial #73
553: astore        50
555: aload         50
557: invokevirtual #74
560: astore        51
562: new           #72
565: dup
566: invokespecial #73
569: astore        52
571: aload         52
573: invokevirtual #74
576: astore        53
578: new           #72
581: dup
582: invokespecial #73
585: astore        54
587: new           #72
590: dup
591: invokespecial #73
594: astore        55
596: aload         55
598: invokevirtual #74
601: astore        56
603: new           #72
606: dup
607: invokespecial #73
610: astore        57
612: new           #72
615: dup
616: invokespecial #73
619: astore        58
621: iconst_4
622: anewarray     #75
625: dup
626: iconst_0
627: aload         54
629: aastore
630: dup
631: iconst_1
632: aload         55
634: aastore
635: dup
636: iconst_2
637: aload         57
639: aastore
640: dup
641: iconst_3
642: aload         58
644: aastore
645: astore        59
647: aload         59
649: invokestatic  #76
652: astore        60
654: bipush        6
656: anewarray     #75
659: dup
660: iconst_0
661: aload         35
663: aastore
664: dup
665: iconst_1
666: aload         42
668: aastore
669: dup
670: iconst_2
671: aload         49
673: aastore
674: dup
675: iconst_3
676: aload         50
678: aastore
679: dup
680: iconst_4
681: aload         52
683: aastore
684: dup
685: iconst_5
686: aload         60
688: aastore
689: astore        61
691: aload         61
693: invokestatic  #77
696: astore        62
698: getstatic     #78
701: astore        63
703: aload         34
705: bipush        10
707: aload         62
709: aload         63
711: dconst_0
712: ldc2_w        #79
715: invokevirtual #81
718: astore        64
720: aload_2
721: iconst_0
722: aload         32
724: aload         63
726: ldc2_w        #11
729: dconst_1
730: invokevirtual #81
733: astore        65
735: ldc           #52
737: invokestatic  #15
740: goto          745
743: astore        65
745: new           #54
748: dup
749: invokespecial #55
752: ldc           #56
754: invokevirtual #57
757: iload_3
758: invokevirtual #62
761: ldc           #59
763: invokevirtual #57
766: iconst_0
767: invokevirtual #62
770: ldc           #56
772: invokevirtual #57
775: invokevirtual #60
778: iload_3
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #61
790: new           #54
793: dup
794: invokespecial #55
797: ldc           #56
799: invokevirtual #57
802: iload         4
804: invokevirtual #62
807: ldc           #59
809: invokevirtual #57
812: iconst_0
813: invokevirtual #62
816: ldc           #56
818: invokevirtual #57
821: invokevirtual #60
824: iload         4
826: ifne          833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #61
837: aload         8
839: invokestatic  #47
842: aload         11
844: invokestatic  #47
847: aload         12
849: invokestatic  #47
852: aload         15
854: invokestatic  #47
857: aload         18
859: invokestatic  #47
862: aload         19
864: invokestatic  #47
867: aload         21
869: invokestatic  #47
872: aload         23
874: invokestatic  #47
877: aload         26
879: invokestatic  #47
882: aload         29
884: invokestatic  #47
887: aload         30
889: invokestatic  #47
892: aload         31
894: invokestatic  #47
897: aload         32
899: invokestatic  #47
902: aload         38
904: invokestatic  #47
907: aload         41
909: invokestatic  #47
912: aload         42
914: invokestatic  #47
917: aload         45
919: invokestatic  #47
922: aload         48
924: invokestatic  #47
927: aload         49
929: invokestatic  #47
932: aload         51
934: invokestatic  #47
937: aload         53
939: invokestatic  #47
942: aload         56
944: invokestatic  #47
947: aload         59
949: invokestatic  #47
952: aload         60
954: invokestatic  #47
957: aload         61
959: invokestatic  #47
962: aload         62
964: invokestatic  #47
967: new           #54
970: dup
971: invokespecial #55
974: ldc           #56
976: invokevirtual #57
979: aload         63
981: invokevirtual #82
984: ldc           #59
986: invokevirtual #57
989: getstatic     #78
992: invokevirtual #82
995: ldc           #56
997: invokevirtual #57
1000: invokevirtual #60
1003: aload         63
1005: getstatic     #78
1008: invokevirtual #83
1011: invokestatic  #61
1014: aload         64
1016: invokestatic  #47
1019: return
Exception table:
from    to  target type
720   740   743   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 239
End line: 255
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair6 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #84
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #71
50: istore        4
52: aload_2
53: invokevirtual #51
56: astore        5
58: ldc           #52
60: invokestatic  #15
63: goto          68
66: astore        5
68: new           #54
71: dup
72: invokespecial #55
75: ldc           #56
77: invokevirtual #57
80: iload_3
81: invokevirtual #62
84: ldc           #59
86: invokevirtual #57
89: iconst_0
90: invokevirtual #62
93: ldc           #56
95: invokevirtual #57
98: invokevirtual #60
101: iload_3
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #61
113: new           #54
116: dup
117: invokespecial #55
120: ldc           #56
122: invokevirtual #57
125: iload         4
127: invokevirtual #62
130: ldc           #59
132: invokevirtual #57
135: iconst_0
136: invokevirtual #62
139: ldc           #56
141: invokevirtual #57
144: invokevirtual #60
147: iload         4
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #61
160: return
Exception table:
from    to  target type
52    63    66   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 258
End line: 301
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = sin6.derivative();
        double double9 = sin6.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = sin6.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin6.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer15 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker14);
        int int16 = brentOptimizer15.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction20 = sin19.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray21 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable22 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray21);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray21);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray21);
        org.apache.commons.math3.optimization.GoalType goalType25 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair29 = brentOptimizer15.optimize(97, univariateFunction24, goalType25, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair33 = brentOptimizer3.optimize((-127), univariateFunction11, goalType25, 1.0205068250273364d, 36.40055311432538d, 6.6917246496340396E41d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-127) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.8414709825806044d + "'", double9 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(univariateFunction20);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray21);
        org.junit.Assert.assertNotNull(univariateDifferentiable22);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType25.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #85
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #49
45: dstore_3
46: new           #72
49: dup
50: invokespecial #73
53: astore        5
55: aload         5
57: invokevirtual #74
60: astore        6
62: aload         5
64: ldc2_w        #86
67: invokevirtual #88
70: dstore        7
72: aload         5
74: invokevirtual #74
77: astore        9
79: aload         5
81: invokevirtual #74
84: astore        10
86: aconst_null
87: astore        11
89: new           #8
92: dup
93: ldc2_w        #31
96: ldc2_w        #33
99: aload         11
101: invokespecial #13
104: astore        12
106: aload         12
108: invokevirtual #71
111: istore        13
113: new           #72
116: dup
117: invokespecial #73
120: astore        14
122: new           #72
125: dup
126: invokespecial #73
129: astore        15
131: aload         15
133: invokevirtual #74
136: astore        16
138: iconst_2
139: anewarray     #75
142: dup
143: iconst_0
144: aload         14
146: aastore
147: dup
148: iconst_1
149: aload         15
151: aastore
152: astore        17
154: aload         17
156: invokestatic  #76
159: astore        18
161: aload         17
163: invokestatic  #77
166: astore        19
168: aload         17
170: checkcast     #89
173: invokestatic  #90
176: astore        20
178: getstatic     #78
181: astore        21
183: aload         12
185: bipush        97
187: aload         20
189: aload         21
191: ldc2_w        #91
194: ldc2_w        #93
197: ldc2_w        #91
200: invokevirtual #44
203: astore        22
205: aload_2
206: bipush        -127
208: aload         10
210: aload         21
212: ldc2_w        #95
215: ldc2_w        #97
218: ldc2_w        #99
221: invokevirtual #44
224: astore        23
226: ldc           #101
228: invokestatic  #15
231: goto          236
234: astore        23
236: new           #54
239: dup
240: invokespecial #55
243: ldc           #56
245: invokevirtual #57
248: dload_3
249: invokevirtual #58
252: ldc           #59
254: invokevirtual #57
257: dconst_0
258: invokevirtual #58
261: ldc           #56
263: invokevirtual #57
266: invokevirtual #60
269: dload_3
270: dconst_0
271: dcmpl
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #61
283: aload         6
285: invokestatic  #47
288: new           #54
291: dup
292: invokespecial #55
295: ldc           #56
297: invokevirtual #57
300: dload         7
302: invokevirtual #58
305: ldc           #59
307: invokevirtual #57
310: ldc2_w        #23
313: invokevirtual #58
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: dload         7
326: ldc2_w        #23
329: dcmpl
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #61
341: aload         9
343: invokestatic  #47
346: aload         10
348: invokestatic  #47
351: new           #54
354: dup
355: invokespecial #55
358: ldc           #56
360: invokevirtual #57
363: iload         13
365: invokevirtual #62
368: ldc           #59
370: invokevirtual #57
373: iconst_0
374: invokevirtual #62
377: ldc           #56
379: invokevirtual #57
382: invokevirtual #60
385: iload         13
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #61
398: aload         16
400: invokestatic  #47
403: aload         17
405: invokestatic  #47
408: aload         18
410: invokestatic  #47
413: aload         19
415: invokestatic  #47
418: aload         20
420: invokestatic  #47
423: new           #54
426: dup
427: invokespecial #55
430: ldc           #56
432: invokevirtual #57
435: aload         21
437: invokevirtual #82
440: ldc           #59
442: invokevirtual #57
445: getstatic     #78
448: invokevirtual #82
451: ldc           #56
453: invokevirtual #57
456: invokevirtual #60
459: aload         21
461: getstatic     #78
464: invokevirtual #83
467: invokestatic  #61
470: aload         22
472: invokestatic  #47
475: return
Exception table:
from    to  target type
205   231   234   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 304
End line: 322
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair7 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #102
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #49
45: dstore_3
46: aload_2
47: invokevirtual #50
50: istore        5
52: aload_2
53: invokevirtual #103
56: astore        6
58: aload_2
59: invokevirtual #51
62: astore        7
64: ldc           #52
66: invokestatic  #15
69: goto          74
72: astore        7
74: new           #54
77: dup
78: invokespecial #55
81: ldc           #56
83: invokevirtual #57
86: dload_3
87: invokevirtual #58
90: ldc           #59
92: invokevirtual #57
95: dconst_0
96: invokevirtual #58
99: ldc           #56
101: invokevirtual #57
104: invokevirtual #60
107: dload_3
108: dconst_0
109: dcmpl
110: ifne          117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #61
121: new           #54
124: dup
125: invokespecial #55
128: ldc           #56
130: invokevirtual #57
133: iload         5
135: invokevirtual #62
138: ldc           #59
140: invokevirtual #57
143: iconst_0
144: invokevirtual #62
147: ldc           #56
149: invokevirtual #57
152: invokevirtual #60
155: iload         5
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #61
168: aload         6
170: invokestatic  #104
173: return
Exception table:
from    to  target type
58    69    72   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 325
End line: 348
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = sin6.derivative();
        double double9 = sin6.value(0.9999999958776927d);
        double double11 = sin6.value((double) 0);
        org.apache.commons.math3.optimization.GoalType goalType12 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair15 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) sin6, goalType12, 36.40055311432538d, (double) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.8414709825806044d + "'", double9 == 0.8414709825806044d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType12 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType12.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #105
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: new           #72
49: dup
50: invokespecial #73
53: astore        4
55: aload         4
57: invokevirtual #74
60: astore        5
62: aload         4
64: ldc2_w        #86
67: invokevirtual #88
70: dstore        6
72: aload         4
74: dconst_0
75: invokevirtual #88
78: dstore        8
80: getstatic     #78
83: astore        10
85: aload_2
86: iconst_0
87: aload         4
89: aload         10
91: ldc2_w        #97
94: ldc2_w        #106
97: invokevirtual #81
100: astore        11
102: ldc           #52
104: invokestatic  #15
107: goto          112
110: astore        11
112: new           #54
115: dup
116: invokespecial #55
119: ldc           #56
121: invokevirtual #57
124: iload_3
125: invokevirtual #62
128: ldc           #59
130: invokevirtual #57
133: iconst_0
134: invokevirtual #62
137: ldc           #56
139: invokevirtual #57
142: invokevirtual #60
145: iload_3
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #61
157: aload         5
159: invokestatic  #47
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: dload         6
176: invokevirtual #58
179: ldc           #59
181: invokevirtual #57
184: ldc2_w        #23
187: invokevirtual #58
190: ldc           #56
192: invokevirtual #57
195: invokevirtual #60
198: dload         6
200: ldc2_w        #23
203: dcmpl
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #61
215: new           #54
218: dup
219: invokespecial #55
222: ldc           #56
224: invokevirtual #57
227: dload         8
229: invokevirtual #58
232: ldc           #59
234: invokevirtual #57
237: dconst_0
238: invokevirtual #58
241: ldc           #56
243: invokevirtual #57
246: invokevirtual #60
249: dload         8
251: dconst_0
252: dcmpl
253: ifne          260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #61
264: new           #54
267: dup
268: invokespecial #55
271: ldc           #56
273: invokevirtual #57
276: aload         10
278: invokevirtual #82
281: ldc           #59
283: invokevirtual #57
286: getstatic     #78
289: invokevirtual #82
292: ldc           #56
294: invokevirtual #57
297: invokevirtual #60
300: aload         10
302: getstatic     #78
305: invokevirtual #83
308: invokestatic  #61
311: return
Exception table:
from    to  target type
85   107   110   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 351
End line: 403
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray12 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, sin8, sin10, sin11 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable13 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray12);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray12);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer18 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker17);
        int int19 = brentOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray24);
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer18.optimize(97, univariateFunction27, goalType28, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair33 = brentOptimizer18.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType34 = brentOptimizer18.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer3.optimize((int) (byte) 10, univariateFunction14, goalType34, (-2.812644285236262E-103d), 7.930067261567154E14d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (10) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray12);
        org.junit.Assert.assertNotNull(univariateDifferentiable13);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertNotNull(univariatePointValuePair33);
        org.junit.Assert.assertTrue("'" + goalType34 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType34.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #50
50: istore        4
52: new           #72
55: dup
56: invokespecial #73
59: astore        5
61: new           #72
64: dup
65: invokespecial #73
68: astore        6
70: aload         6
72: invokevirtual #74
75: astore        7
77: new           #72
80: dup
81: invokespecial #73
84: astore        8
86: new           #72
89: dup
90: invokespecial #73
93: astore        9
95: iconst_4
96: anewarray     #75
99: dup
100: iconst_0
101: aload         5
103: aastore
104: dup
105: iconst_1
106: aload         6
108: aastore
109: dup
110: iconst_2
111: aload         8
113: aastore
114: dup
115: iconst_3
116: aload         9
118: aastore
119: astore        10
121: aload         10
123: invokestatic  #76
126: astore        11
128: aload         10
130: checkcast     #89
133: invokestatic  #109
136: astore        12
138: aconst_null
139: astore        13
141: new           #8
144: dup
145: ldc2_w        #31
148: ldc2_w        #33
151: aload         13
153: invokespecial #13
156: astore        14
158: aload         14
160: invokevirtual #71
163: istore        15
165: new           #72
168: dup
169: invokespecial #73
172: astore        16
174: new           #72
177: dup
178: invokespecial #73
181: astore        17
183: aload         17
185: invokevirtual #74
188: astore        18
190: iconst_2
191: anewarray     #75
194: dup
195: iconst_0
196: aload         16
198: aastore
199: dup
200: iconst_1
201: aload         17
203: aastore
204: astore        19
206: aload         19
208: invokestatic  #76
211: astore        20
213: aload         19
215: invokestatic  #77
218: astore        21
220: aload         19
222: checkcast     #89
225: invokestatic  #90
228: astore        22
230: getstatic     #78
233: astore        23
235: aload         14
237: bipush        97
239: aload         22
241: aload         23
243: ldc2_w        #91
246: ldc2_w        #93
249: ldc2_w        #91
252: invokevirtual #44
255: astore        24
257: aload         14
259: invokevirtual #51
262: astore        25
264: aload         14
266: invokevirtual #110
269: astore        26
271: aload_2
272: bipush        10
274: aload         12
276: aload         26
278: ldc2_w        #111
281: ldc2_w        #113
284: invokevirtual #81
287: astore        27
289: ldc           #115
291: invokestatic  #15
294: goto          299
297: astore        27
299: new           #54
302: dup
303: invokespecial #55
306: ldc           #56
308: invokevirtual #57
311: iload_3
312: invokevirtual #62
315: ldc           #59
317: invokevirtual #57
320: iconst_0
321: invokevirtual #62
324: ldc           #56
326: invokevirtual #57
329: invokevirtual #60
332: iload_3
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #61
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: iload         4
358: invokevirtual #62
361: ldc           #59
363: invokevirtual #57
366: iconst_0
367: invokevirtual #62
370: ldc           #56
372: invokevirtual #57
375: invokevirtual #60
378: iload         4
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #61
391: aload         7
393: invokestatic  #47
396: aload         10
398: invokestatic  #47
401: aload         11
403: invokestatic  #47
406: aload         12
408: invokestatic  #47
411: new           #54
414: dup
415: invokespecial #55
418: ldc           #56
420: invokevirtual #57
423: iload         15
425: invokevirtual #62
428: ldc           #59
430: invokevirtual #57
433: iconst_0
434: invokevirtual #62
437: ldc           #56
439: invokevirtual #57
442: invokevirtual #60
445: iload         15
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #61
458: aload         18
460: invokestatic  #47
463: aload         19
465: invokestatic  #47
468: aload         20
470: invokestatic  #47
473: aload         21
475: invokestatic  #47
478: aload         22
480: invokestatic  #47
483: new           #54
486: dup
487: invokespecial #55
490: ldc           #56
492: invokevirtual #57
495: aload         23
497: invokevirtual #82
500: ldc           #59
502: invokevirtual #57
505: getstatic     #78
508: invokevirtual #82
511: ldc           #56
513: invokevirtual #57
516: invokevirtual #60
519: aload         23
521: getstatic     #78
524: invokevirtual #83
527: invokestatic  #61
530: aload         24
532: invokestatic  #47
535: aload         25
537: invokestatic  #47
540: new           #54
543: dup
544: invokespecial #55
547: ldc           #56
549: invokevirtual #57
552: aload         26
554: invokevirtual #82
557: ldc           #59
559: invokevirtual #57
562: getstatic     #78
565: invokevirtual #82
568: ldc           #56
570: invokevirtual #57
573: invokevirtual #60
576: aload         26
578: getstatic     #78
581: invokevirtual #83
584: invokestatic  #61
587: return
Exception table:
from    to  target type
271   294   297   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 406
End line: 445
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray21 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateFunctionArray21);
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize((int) (byte) 100, univariateFunction22, goalType23, (-100.0d), 0.0d, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #116
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: new           #72
49: dup
50: invokespecial #73
53: astore        4
55: new           #72
58: dup
59: invokespecial #73
62: astore        5
64: aload         5
66: invokevirtual #74
69: astore        6
71: iconst_2
72: anewarray     #75
75: dup
76: iconst_0
77: aload         4
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        7
87: aload         7
89: invokestatic  #76
92: astore        8
94: aload         7
96: invokestatic  #77
99: astore        9
101: aload         7
103: checkcast     #89
106: invokestatic  #90
109: astore        10
111: getstatic     #78
114: astore        11
116: aload_2
117: bipush        97
119: aload         10
121: aload         11
123: ldc2_w        #91
126: ldc2_w        #93
129: ldc2_w        #91
132: invokevirtual #44
135: astore        12
137: aload_2
138: invokevirtual #51
141: astore        13
143: aload_2
144: invokevirtual #110
147: astore        14
149: aconst_null
150: astore        15
152: aload         15
154: invokestatic  #117
157: astore        16
159: getstatic     #118
162: astore        17
164: aload_2
165: bipush        100
167: aload         16
169: aload         17
171: ldc2_w        #66
174: dconst_0
175: dconst_1
176: invokevirtual #44
179: astore        18
181: ldc           #119
183: invokestatic  #15
186: goto          191
189: astore        18
191: new           #54
194: dup
195: invokespecial #55
198: ldc           #56
200: invokevirtual #57
203: iload_3
204: invokevirtual #62
207: ldc           #59
209: invokevirtual #57
212: iconst_0
213: invokevirtual #62
216: ldc           #56
218: invokevirtual #57
221: invokevirtual #60
224: iload_3
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #61
236: aload         6
238: invokestatic  #47
241: aload         7
243: invokestatic  #47
246: aload         8
248: invokestatic  #47
251: aload         9
253: invokestatic  #47
256: aload         10
258: invokestatic  #47
261: new           #54
264: dup
265: invokespecial #55
268: ldc           #56
270: invokevirtual #57
273: aload         11
275: invokevirtual #82
278: ldc           #59
280: invokevirtual #57
283: getstatic     #78
286: invokevirtual #82
289: ldc           #56
291: invokevirtual #57
294: invokevirtual #60
297: aload         11
299: getstatic     #78
302: invokevirtual #83
305: invokestatic  #61
308: aload         12
310: invokestatic  #47
313: aload         13
315: invokestatic  #47
318: new           #54
321: dup
322: invokespecial #55
325: ldc           #56
327: invokevirtual #57
330: aload         14
332: invokevirtual #82
335: ldc           #59
337: invokevirtual #57
340: getstatic     #78
343: invokevirtual #82
346: ldc           #56
348: invokevirtual #57
351: invokevirtual #60
354: aload         14
356: getstatic     #78
359: invokevirtual #83
362: invokestatic  #61
365: aload         16
367: invokestatic  #47
370: new           #54
373: dup
374: invokespecial #55
377: ldc           #56
379: invokevirtual #57
382: aload         17
384: invokevirtual #82
387: ldc           #59
389: invokevirtual #57
392: getstatic     #118
395: invokevirtual #82
398: ldc           #56
400: invokevirtual #57
403: invokevirtual #60
406: aload         17
408: getstatic     #118
411: invokevirtual #83
414: invokestatic  #61
417: return
Exception table:
from    to  target type
164   186   189   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 448
End line: 545
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable21 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24, sin26, sin27 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException30 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable22, (java.lang.Object[]) univariateDifferentiableArray28);
        org.apache.commons.math3.exception.MathInternalError mathInternalError31 = new org.apache.commons.math3.exception.MathInternalError(localizable21, (java.lang.Object[]) univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray28);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer36 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker35);
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin46, sin47, sin49, sin50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction54 = sin53.derivative();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = sin55.derivative();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray62 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58, sin60, sin61 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable63 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray62);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray64 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin38, univariateDifferentiable45, univariateDifferentiable52, sin53, sin55, univariateDifferentiable63 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable65 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray64);
        org.apache.commons.math3.optimization.GoalType goalType66 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer36.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable65, goalType66, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair72 = brentOptimizer3.optimize((int) (short) 1, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, goalType66, 54.58370209760676d, (double) 97.00001f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction54);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray62);
        org.junit.Assert.assertNotNull(univariateDifferentiable63);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray64);
        org.junit.Assert.assertNotNull(univariateDifferentiable65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #121
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: new           #72
49: dup
50: invokespecial #73
53: astore        4
55: new           #72
58: dup
59: invokespecial #73
62: astore        5
64: aload         5
66: invokevirtual #74
69: astore        6
71: iconst_2
72: anewarray     #75
75: dup
76: iconst_0
77: aload         4
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        7
87: aload         7
89: invokestatic  #76
92: astore        8
94: aload         7
96: invokestatic  #77
99: astore        9
101: aload         7
103: checkcast     #89
106: invokestatic  #90
109: astore        10
111: getstatic     #78
114: astore        11
116: aload_2
117: bipush        97
119: aload         10
121: aload         11
123: ldc2_w        #91
126: ldc2_w        #93
129: ldc2_w        #91
132: invokevirtual #44
135: astore        12
137: aload_2
138: invokevirtual #51
141: astore        13
143: aload_2
144: invokevirtual #49
147: dstore        14
149: aconst_null
150: astore        16
152: aconst_null
153: astore        17
155: new           #72
158: dup
159: invokespecial #73
162: astore        18
164: new           #72
167: dup
168: invokespecial #73
171: astore        19
173: aload         19
175: invokevirtual #74
178: astore        20
180: new           #72
183: dup
184: invokespecial #73
187: astore        21
189: new           #72
192: dup
193: invokespecial #73
196: astore        22
198: iconst_4
199: anewarray     #75
202: dup
203: iconst_0
204: aload         18
206: aastore
207: dup
208: iconst_1
209: aload         19
211: aastore
212: dup
213: iconst_2
214: aload         21
216: aastore
217: dup
218: iconst_3
219: aload         22
221: aastore
222: astore        23
224: aload         23
226: invokestatic  #76
229: astore        24
231: new           #122
234: dup
235: aload         17
237: aload         23
239: checkcast     #123
242: invokespecial #124
245: astore        25
247: new           #125
250: dup
251: aload         16
253: aload         23
255: checkcast     #123
258: invokespecial #126
261: astore        26
263: aload         23
265: invokestatic  #77
268: astore        27
270: aconst_null
271: astore        28
273: new           #8
276: dup
277: ldc2_w        #31
280: ldc2_w        #33
283: aload         28
285: invokespecial #13
288: astore        29
290: new           #72
293: dup
294: invokespecial #73
297: astore        30
299: new           #72
302: dup
303: invokespecial #73
306: astore        31
308: new           #72
311: dup
312: invokespecial #73
315: astore        32
317: aload         32
319: invokevirtual #74
322: astore        33
324: new           #72
327: dup
328: invokespecial #73
331: astore        34
333: new           #72
336: dup
337: invokespecial #73
340: astore        35
342: iconst_4
343: anewarray     #75
346: dup
347: iconst_0
348: aload         31
350: aastore
351: dup
352: iconst_1
353: aload         32
355: aastore
356: dup
357: iconst_2
358: aload         34
360: aastore
361: dup
362: iconst_3
363: aload         35
365: aastore
366: astore        36
368: aload         36
370: invokestatic  #76
373: astore        37
375: new           #72
378: dup
379: invokespecial #73
382: astore        38
384: new           #72
387: dup
388: invokespecial #73
391: astore        39
393: aload         39
395: invokevirtual #74
398: astore        40
400: new           #72
403: dup
404: invokespecial #73
407: astore        41
409: new           #72
412: dup
413: invokespecial #73
416: astore        42
418: iconst_4
419: anewarray     #75
422: dup
423: iconst_0
424: aload         38
426: aastore
427: dup
428: iconst_1
429: aload         39
431: aastore
432: dup
433: iconst_2
434: aload         41
436: aastore
437: dup
438: iconst_3
439: aload         42
441: aastore
442: astore        43
444: aload         43
446: invokestatic  #76
449: astore        44
451: new           #72
454: dup
455: invokespecial #73
458: astore        45
460: aload         45
462: invokevirtual #74
465: astore        46
467: new           #72
470: dup
471: invokespecial #73
474: astore        47
476: aload         47
478: invokevirtual #74
481: astore        48
483: new           #72
486: dup
487: invokespecial #73
490: astore        49
492: new           #72
495: dup
496: invokespecial #73
499: astore        50
501: aload         50
503: invokevirtual #74
506: astore        51
508: new           #72
511: dup
512: invokespecial #73
515: astore        52
517: new           #72
520: dup
521: invokespecial #73
524: astore        53
526: iconst_4
527: anewarray     #75
530: dup
531: iconst_0
532: aload         49
534: aastore
535: dup
536: iconst_1
537: aload         50
539: aastore
540: dup
541: iconst_2
542: aload         52
544: aastore
545: dup
546: iconst_3
547: aload         53
549: aastore
550: astore        54
552: aload         54
554: invokestatic  #76
557: astore        55
559: bipush        6
561: anewarray     #75
564: dup
565: iconst_0
566: aload         30
568: aastore
569: dup
570: iconst_1
571: aload         37
573: aastore
574: dup
575: iconst_2
576: aload         44
578: aastore
579: dup
580: iconst_3
581: aload         45
583: aastore
584: dup
585: iconst_4
586: aload         47
588: aastore
589: dup
590: iconst_5
591: aload         55
593: aastore
594: astore        56
596: aload         56
598: invokestatic  #77
601: astore        57
603: getstatic     #78
606: astore        58
608: aload         29
610: bipush        10
612: aload         57
614: aload         58
616: dconst_0
617: ldc2_w        #79
620: invokevirtual #81
623: astore        59
625: aload_2
626: iconst_1
627: aload         27
629: aload         58
631: ldc2_w        #127
634: ldc2_w        #129
637: invokevirtual #81
640: astore        60
642: ldc           #131
644: invokestatic  #15
647: goto          652
650: astore        60
652: new           #54
655: dup
656: invokespecial #55
659: ldc           #56
661: invokevirtual #57
664: iload_3
665: invokevirtual #62
668: ldc           #59
670: invokevirtual #57
673: iconst_0
674: invokevirtual #62
677: ldc           #56
679: invokevirtual #57
682: invokevirtual #60
685: iload_3
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #61
697: aload         6
699: invokestatic  #47
702: aload         7
704: invokestatic  #47
707: aload         8
709: invokestatic  #47
712: aload         9
714: invokestatic  #47
717: aload         10
719: invokestatic  #47
722: new           #54
725: dup
726: invokespecial #55
729: ldc           #56
731: invokevirtual #57
734: aload         11
736: invokevirtual #82
739: ldc           #59
741: invokevirtual #57
744: getstatic     #78
747: invokevirtual #82
750: ldc           #56
752: invokevirtual #57
755: invokevirtual #60
758: aload         11
760: getstatic     #78
763: invokevirtual #83
766: invokestatic  #61
769: aload         12
771: invokestatic  #47
774: aload         13
776: invokestatic  #47
779: new           #54
782: dup
783: invokespecial #55
786: ldc           #56
788: invokevirtual #57
791: dload         14
793: invokevirtual #58
796: ldc           #59
798: invokevirtual #57
801: ldc2_w        #93
804: invokevirtual #58
807: ldc           #56
809: invokevirtual #57
812: invokevirtual #60
815: dload         14
817: ldc2_w        #93
820: dcmpl
821: ifne          828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #61
832: aload         20
834: invokestatic  #47
837: aload         23
839: invokestatic  #47
842: aload         24
844: invokestatic  #47
847: aload         27
849: invokestatic  #47
852: aload         33
854: invokestatic  #47
857: aload         36
859: invokestatic  #47
862: aload         37
864: invokestatic  #47
867: aload         40
869: invokestatic  #47
872: aload         43
874: invokestatic  #47
877: aload         44
879: invokestatic  #47
882: aload         46
884: invokestatic  #47
887: aload         48
889: invokestatic  #47
892: aload         51
894: invokestatic  #47
897: aload         54
899: invokestatic  #47
902: aload         55
904: invokestatic  #47
907: aload         56
909: invokestatic  #47
912: aload         57
914: invokestatic  #47
917: new           #54
920: dup
921: invokespecial #55
924: ldc           #56
926: invokevirtual #57
929: aload         58
931: invokevirtual #82
934: ldc           #59
936: invokevirtual #57
939: getstatic     #78
942: invokevirtual #82
945: ldc           #56
947: invokevirtual #57
950: invokevirtual #60
953: aload         58
955: getstatic     #78
958: invokevirtual #83
961: invokestatic  #61
964: aload         59
966: invokestatic  #47
969: return
Exception table:
from    to  target type
625   647   650   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 548
End line: 627
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin22, sin23, sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer32 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker31);
        int int33 = brentOptimizer32.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin35, sin36 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray38);
        org.apache.commons.math3.optimization.GoalType goalType42 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer32.optimize(97, univariateFunction41, goalType42, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer32.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType48 = brentOptimizer32.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer32.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction52 = sin51.derivative();
        org.apache.commons.math3.optimization.GoalType goalType53 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair56 = brentOptimizer32.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin51, goalType53, 3.141592653589793d, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair60 = brentOptimizer3.optimize((int) (short) 0, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable28, goalType53, (double) 1.0f, 0.04991687205886359d, 1.248514024842681E14d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
        org.junit.Assert.assertNotNull(univariatePointValuePair47);
        org.junit.Assert.assertTrue("'" + goalType48 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType48.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair49);
        org.junit.Assert.assertNotNull(univariateFunction52);
        org.junit.Assert.assertTrue("'" + goalType53 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType53.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: new           #72
49: dup
50: invokespecial #73
53: astore        4
55: new           #72
58: dup
59: invokespecial #73
62: astore        5
64: aload         5
66: invokevirtual #74
69: astore        6
71: iconst_2
72: anewarray     #75
75: dup
76: iconst_0
77: aload         4
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        7
87: aload         7
89: invokestatic  #76
92: astore        8
94: aload         7
96: invokestatic  #77
99: astore        9
101: aload         7
103: checkcast     #89
106: invokestatic  #90
109: astore        10
111: getstatic     #78
114: astore        11
116: aload_2
117: bipush        97
119: aload         10
121: aload         11
123: ldc2_w        #91
126: ldc2_w        #93
129: ldc2_w        #91
132: invokevirtual #44
135: astore        12
137: aload_2
138: invokevirtual #51
141: astore        13
143: aload_2
144: invokevirtual #110
147: astore        14
149: aload_2
150: invokevirtual #51
153: astore        15
155: new           #72
158: dup
159: invokespecial #73
162: astore        16
164: new           #72
167: dup
168: invokespecial #73
171: astore        17
173: aload         17
175: invokevirtual #74
178: astore        18
180: new           #72
183: dup
184: invokespecial #73
187: astore        19
189: new           #72
192: dup
193: invokespecial #73
196: astore        20
198: iconst_4
199: anewarray     #75
202: dup
203: iconst_0
204: aload         16
206: aastore
207: dup
208: iconst_1
209: aload         17
211: aastore
212: dup
213: iconst_2
214: aload         19
216: aastore
217: dup
218: iconst_3
219: aload         20
221: aastore
222: astore        21
224: aload         21
226: invokestatic  #76
229: astore        22
231: aconst_null
232: astore        23
234: new           #8
237: dup
238: ldc2_w        #31
241: ldc2_w        #33
244: aload         23
246: invokespecial #13
249: astore        24
251: aload         24
253: invokevirtual #71
256: istore        25
258: new           #72
261: dup
262: invokespecial #73
265: astore        26
267: new           #72
270: dup
271: invokespecial #73
274: astore        27
276: aload         27
278: invokevirtual #74
281: astore        28
283: iconst_2
284: anewarray     #75
287: dup
288: iconst_0
289: aload         26
291: aastore
292: dup
293: iconst_1
294: aload         27
296: aastore
297: astore        29
299: aload         29
301: invokestatic  #76
304: astore        30
306: aload         29
308: invokestatic  #77
311: astore        31
313: aload         29
315: checkcast     #89
318: invokestatic  #90
321: astore        32
323: getstatic     #78
326: astore        33
328: aload         24
330: bipush        97
332: aload         32
334: aload         33
336: ldc2_w        #91
339: ldc2_w        #93
342: ldc2_w        #91
345: invokevirtual #44
348: astore        34
350: aload         24
352: invokevirtual #51
355: astore        35
357: aload         24
359: invokevirtual #110
362: astore        36
364: aload         24
366: invokevirtual #51
369: astore        37
371: new           #72
374: dup
375: invokespecial #73
378: astore        38
380: aload         38
382: invokevirtual #74
385: astore        39
387: getstatic     #78
390: astore        40
392: aload         24
394: bipush        97
396: aload         38
398: aload         40
400: ldc2_w        #133
403: dconst_0
404: invokevirtual #81
407: astore        41
409: aload_2
410: iconst_0
411: aload         22
413: aload         40
415: dconst_1
416: ldc2_w        #135
419: ldc2_w        #137
422: invokevirtual #44
425: astore        42
427: ldc           #52
429: invokestatic  #15
432: goto          437
435: astore        42
437: new           #54
440: dup
441: invokespecial #55
444: ldc           #56
446: invokevirtual #57
449: iload_3
450: invokevirtual #62
453: ldc           #59
455: invokevirtual #57
458: iconst_0
459: invokevirtual #62
462: ldc           #56
464: invokevirtual #57
467: invokevirtual #60
470: iload_3
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #61
482: aload         6
484: invokestatic  #47
487: aload         7
489: invokestatic  #47
492: aload         8
494: invokestatic  #47
497: aload         9
499: invokestatic  #47
502: aload         10
504: invokestatic  #47
507: new           #54
510: dup
511: invokespecial #55
514: ldc           #56
516: invokevirtual #57
519: aload         11
521: invokevirtual #82
524: ldc           #59
526: invokevirtual #57
529: getstatic     #78
532: invokevirtual #82
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: aload         11
545: getstatic     #78
548: invokevirtual #83
551: invokestatic  #61
554: aload         12
556: invokestatic  #47
559: aload         13
561: invokestatic  #47
564: new           #54
567: dup
568: invokespecial #55
571: ldc           #56
573: invokevirtual #57
576: aload         14
578: invokevirtual #82
581: ldc           #59
583: invokevirtual #57
586: getstatic     #78
589: invokevirtual #82
592: ldc           #56
594: invokevirtual #57
597: invokevirtual #60
600: aload         14
602: getstatic     #78
605: invokevirtual #83
608: invokestatic  #61
611: aload         15
613: invokestatic  #47
616: aload         18
618: invokestatic  #47
621: aload         21
623: invokestatic  #47
626: aload         22
628: invokestatic  #47
631: new           #54
634: dup
635: invokespecial #55
638: ldc           #56
640: invokevirtual #57
643: iload         25
645: invokevirtual #62
648: ldc           #59
650: invokevirtual #57
653: iconst_0
654: invokevirtual #62
657: ldc           #56
659: invokevirtual #57
662: invokevirtual #60
665: iload         25
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #61
678: aload         28
680: invokestatic  #47
683: aload         29
685: invokestatic  #47
688: aload         30
690: invokestatic  #47
693: aload         31
695: invokestatic  #47
698: aload         32
700: invokestatic  #47
703: new           #54
706: dup
707: invokespecial #55
710: ldc           #56
712: invokevirtual #57
715: aload         33
717: invokevirtual #82
720: ldc           #59
722: invokevirtual #57
725: getstatic     #78
728: invokevirtual #82
731: ldc           #56
733: invokevirtual #57
736: invokevirtual #60
739: aload         33
741: getstatic     #78
744: invokevirtual #83
747: invokestatic  #61
750: aload         34
752: invokestatic  #47
755: aload         35
757: invokestatic  #47
760: new           #54
763: dup
764: invokespecial #55
767: ldc           #56
769: invokevirtual #57
772: aload         36
774: invokevirtual #82
777: ldc           #59
779: invokevirtual #57
782: getstatic     #78
785: invokevirtual #82
788: ldc           #56
790: invokevirtual #57
793: invokevirtual #60
796: aload         36
798: getstatic     #78
801: invokevirtual #83
804: invokestatic  #61
807: aload         37
809: invokestatic  #47
812: aload         39
814: invokestatic  #47
817: new           #54
820: dup
821: invokespecial #55
824: ldc           #56
826: invokevirtual #57
829: aload         40
831: invokevirtual #82
834: ldc           #59
836: invokevirtual #57
839: getstatic     #78
842: invokevirtual #82
845: ldc           #56
847: invokevirtual #57
850: invokevirtual #60
853: aload         40
855: getstatic     #78
858: invokevirtual #83
861: invokestatic  #61
864: aload         41
866: invokestatic  #47
869: return
Exception table:
from    to  target type
409   432   435   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 630
End line: 644
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair5 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #51
50: astore        4
52: ldc           #52
54: invokestatic  #15
57: goto          62
60: astore        4
62: new           #54
65: dup
66: invokespecial #55
69: ldc           #56
71: invokevirtual #57
74: iload_3
75: invokevirtual #62
78: ldc           #59
80: invokevirtual #57
83: iconst_0
84: invokevirtual #62
87: ldc           #56
89: invokevirtual #57
92: invokevirtual #60
95: iload_3
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #61
107: return
Exception table:
from    to  target type
46    57    60   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 647
End line: 707
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray21 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction22 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray21);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction22);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer27 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker26);
        int int28 = brentOptimizer27.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray33 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin30, sin31 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray33);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray33);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray33);
        org.apache.commons.math3.optimization.GoalType goalType37 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer27.optimize(97, univariateFunction36, goalType37, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer3.optimize(6, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction22, goalType37, 201.71315737027922d, (double) (-49.999996f), 2.154434690031884d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (6) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray21);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertTrue("'" + goalType37 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType37.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: new           #72
49: dup
50: invokespecial #73
53: astore        4
55: new           #72
58: dup
59: invokespecial #73
62: astore        5
64: aload         5
66: invokevirtual #74
69: astore        6
71: iconst_2
72: anewarray     #75
75: dup
76: iconst_0
77: aload         4
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        7
87: aload         7
89: invokestatic  #76
92: astore        8
94: aload         7
96: invokestatic  #77
99: astore        9
101: aload         7
103: checkcast     #89
106: invokestatic  #90
109: astore        10
111: getstatic     #78
114: astore        11
116: aload_2
117: bipush        97
119: aload         10
121: aload         11
123: ldc2_w        #91
126: ldc2_w        #93
129: ldc2_w        #91
132: invokevirtual #44
135: astore        12
137: aload_2
138: invokevirtual #51
141: astore        13
143: aload_2
144: invokevirtual #110
147: astore        14
149: iconst_0
150: anewarray     #141
153: astore        15
155: aload         15
157: invokestatic  #142
160: astore        16
162: aload         16
164: invokestatic  #143
167: astore        17
169: aconst_null
170: astore        18
172: new           #8
175: dup
176: ldc2_w        #31
179: ldc2_w        #33
182: aload         18
184: invokespecial #13
187: astore        19
189: aload         19
191: invokevirtual #71
194: istore        20
196: new           #72
199: dup
200: invokespecial #73
203: astore        21
205: new           #72
208: dup
209: invokespecial #73
212: astore        22
214: aload         22
216: invokevirtual #74
219: astore        23
221: iconst_2
222: anewarray     #75
225: dup
226: iconst_0
227: aload         21
229: aastore
230: dup
231: iconst_1
232: aload         22
234: aastore
235: astore        24
237: aload         24
239: invokestatic  #76
242: astore        25
244: aload         24
246: invokestatic  #77
249: astore        26
251: aload         24
253: checkcast     #89
256: invokestatic  #90
259: astore        27
261: getstatic     #78
264: astore        28
266: aload         19
268: bipush        97
270: aload         27
272: aload         28
274: ldc2_w        #91
277: ldc2_w        #93
280: ldc2_w        #91
283: invokevirtual #44
286: astore        29
288: aload_2
289: bipush        6
291: aload         16
293: aload         28
295: ldc2_w        #144
298: ldc2_w        #146
301: ldc2_w        #148
304: invokevirtual #44
307: astore        30
309: ldc           #150
311: invokestatic  #15
314: goto          319
317: astore        30
319: new           #54
322: dup
323: invokespecial #55
326: ldc           #56
328: invokevirtual #57
331: iload_3
332: invokevirtual #62
335: ldc           #59
337: invokevirtual #57
340: iconst_0
341: invokevirtual #62
344: ldc           #56
346: invokevirtual #57
349: invokevirtual #60
352: iload_3
353: ifne          360
356: iconst_1
357: goto          361
360: iconst_0
361: invokestatic  #61
364: aload         6
366: invokestatic  #47
369: aload         7
371: invokestatic  #47
374: aload         8
376: invokestatic  #47
379: aload         9
381: invokestatic  #47
384: aload         10
386: invokestatic  #47
389: new           #54
392: dup
393: invokespecial #55
396: ldc           #56
398: invokevirtual #57
401: aload         11
403: invokevirtual #82
406: ldc           #59
408: invokevirtual #57
411: getstatic     #78
414: invokevirtual #82
417: ldc           #56
419: invokevirtual #57
422: invokevirtual #60
425: aload         11
427: getstatic     #78
430: invokevirtual #83
433: invokestatic  #61
436: aload         12
438: invokestatic  #47
441: aload         13
443: invokestatic  #47
446: new           #54
449: dup
450: invokespecial #55
453: ldc           #56
455: invokevirtual #57
458: aload         14
460: invokevirtual #82
463: ldc           #59
465: invokevirtual #57
468: getstatic     #78
471: invokevirtual #82
474: ldc           #56
476: invokevirtual #57
479: invokevirtual #60
482: aload         14
484: getstatic     #78
487: invokevirtual #83
490: invokestatic  #61
493: aload         15
495: invokestatic  #47
498: aload         16
500: invokestatic  #47
503: aload         17
505: invokestatic  #47
508: new           #54
511: dup
512: invokespecial #55
515: ldc           #56
517: invokevirtual #57
520: iload         20
522: invokevirtual #62
525: ldc           #59
527: invokevirtual #57
530: iconst_0
531: invokevirtual #62
534: ldc           #56
536: invokevirtual #57
539: invokevirtual #60
542: iload         20
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #61
555: aload         23
557: invokestatic  #47
560: aload         24
562: invokestatic  #47
565: aload         25
567: invokestatic  #47
570: aload         26
572: invokestatic  #47
575: aload         27
577: invokestatic  #47
580: new           #54
583: dup
584: invokespecial #55
587: ldc           #56
589: invokevirtual #57
592: aload         28
594: invokevirtual #82
597: ldc           #59
599: invokevirtual #57
602: getstatic     #78
605: invokevirtual #82
608: ldc           #56
610: invokevirtual #57
613: invokevirtual #60
616: aload         28
618: getstatic     #78
621: invokevirtual #83
624: invokestatic  #61
627: aload         29
629: invokestatic  #47
632: return
Exception table:
from    to  target type
288   314   317   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 710
End line: 778
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(bivariateFunction8, (double) 20L);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker13 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer14 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker13);
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction19 = sin18.derivative();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray22 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin17, sin18, sin20, sin21 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray22);
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray40 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin35, sin36, sin38, sin39 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable41 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray40);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray42 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin16, univariateDifferentiable23, univariateDifferentiable30, sin31, sin33, univariateDifferentiable41 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable43 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray42);
        org.apache.commons.math3.optimization.GoalType goalType44 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer14.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable43, goalType44, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer3.optimize(0, univariateFunction10, goalType44, (double) 100L, (double) (byte) 0, 52.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertNotNull(univariateFunction19);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray22);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray40);
        org.junit.Assert.assertNotNull(univariateDifferentiable41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray42);
        org.junit.Assert.assertNotNull(univariateDifferentiable43);
        org.junit.Assert.assertTrue("'" + goalType44 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType44.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #49
45: dstore_3
46: aload_2
47: invokevirtual #50
50: istore        5
52: aload_2
53: invokevirtual #103
56: astore        6
58: aconst_null
59: astore        7
61: aload         7
63: ldc2_w        #35
66: invokestatic  #152
69: astore        8
71: aconst_null
72: astore        9
74: new           #8
77: dup
78: ldc2_w        #31
81: ldc2_w        #33
84: aload         9
86: invokespecial #13
89: astore        10
91: new           #72
94: dup
95: invokespecial #73
98: astore        11
100: new           #72
103: dup
104: invokespecial #73
107: astore        12
109: new           #72
112: dup
113: invokespecial #73
116: astore        13
118: aload         13
120: invokevirtual #74
123: astore        14
125: new           #72
128: dup
129: invokespecial #73
132: astore        15
134: new           #72
137: dup
138: invokespecial #73
141: astore        16
143: iconst_4
144: anewarray     #75
147: dup
148: iconst_0
149: aload         12
151: aastore
152: dup
153: iconst_1
154: aload         13
156: aastore
157: dup
158: iconst_2
159: aload         15
161: aastore
162: dup
163: iconst_3
164: aload         16
166: aastore
167: astore        17
169: aload         17
171: invokestatic  #76
174: astore        18
176: new           #72
179: dup
180: invokespecial #73
183: astore        19
185: new           #72
188: dup
189: invokespecial #73
192: astore        20
194: aload         20
196: invokevirtual #74
199: astore        21
201: new           #72
204: dup
205: invokespecial #73
208: astore        22
210: new           #72
213: dup
214: invokespecial #73
217: astore        23
219: iconst_4
220: anewarray     #75
223: dup
224: iconst_0
225: aload         19
227: aastore
228: dup
229: iconst_1
230: aload         20
232: aastore
233: dup
234: iconst_2
235: aload         22
237: aastore
238: dup
239: iconst_3
240: aload         23
242: aastore
243: astore        24
245: aload         24
247: invokestatic  #76
250: astore        25
252: new           #72
255: dup
256: invokespecial #73
259: astore        26
261: aload         26
263: invokevirtual #74
266: astore        27
268: new           #72
271: dup
272: invokespecial #73
275: astore        28
277: aload         28
279: invokevirtual #74
282: astore        29
284: new           #72
287: dup
288: invokespecial #73
291: astore        30
293: new           #72
296: dup
297: invokespecial #73
300: astore        31
302: aload         31
304: invokevirtual #74
307: astore        32
309: new           #72
312: dup
313: invokespecial #73
316: astore        33
318: new           #72
321: dup
322: invokespecial #73
325: astore        34
327: iconst_4
328: anewarray     #75
331: dup
332: iconst_0
333: aload         30
335: aastore
336: dup
337: iconst_1
338: aload         31
340: aastore
341: dup
342: iconst_2
343: aload         33
345: aastore
346: dup
347: iconst_3
348: aload         34
350: aastore
351: astore        35
353: aload         35
355: invokestatic  #76
358: astore        36
360: bipush        6
362: anewarray     #75
365: dup
366: iconst_0
367: aload         11
369: aastore
370: dup
371: iconst_1
372: aload         18
374: aastore
375: dup
376: iconst_2
377: aload         25
379: aastore
380: dup
381: iconst_3
382: aload         26
384: aastore
385: dup
386: iconst_4
387: aload         28
389: aastore
390: dup
391: iconst_5
392: aload         36
394: aastore
395: astore        37
397: aload         37
399: invokestatic  #77
402: astore        38
404: getstatic     #78
407: astore        39
409: aload         10
411: bipush        10
413: aload         38
415: aload         39
417: dconst_0
418: ldc2_w        #79
421: invokevirtual #81
424: astore        40
426: aload_2
427: iconst_0
428: aload         8
430: aload         39
432: ldc2_w        #153
435: dconst_0
436: ldc2_w        #155
439: invokevirtual #44
442: astore        41
444: ldc           #52
446: invokestatic  #15
449: goto          454
452: astore        41
454: new           #54
457: dup
458: invokespecial #55
461: ldc           #56
463: invokevirtual #57
466: dload_3
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload_3
488: dconst_0
489: dcmpl
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #61
501: new           #54
504: dup
505: invokespecial #55
508: ldc           #56
510: invokevirtual #57
513: iload         5
515: invokevirtual #62
518: ldc           #59
520: invokevirtual #57
523: iconst_0
524: invokevirtual #62
527: ldc           #56
529: invokevirtual #57
532: invokevirtual #60
535: iload         5
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #61
548: aload         6
550: invokestatic  #104
553: aload         8
555: invokestatic  #47
558: aload         14
560: invokestatic  #47
563: aload         17
565: invokestatic  #47
568: aload         18
570: invokestatic  #47
573: aload         21
575: invokestatic  #47
578: aload         24
580: invokestatic  #47
583: aload         25
585: invokestatic  #47
588: aload         27
590: invokestatic  #47
593: aload         29
595: invokestatic  #47
598: aload         32
600: invokestatic  #47
603: aload         35
605: invokestatic  #47
608: aload         36
610: invokestatic  #47
613: aload         37
615: invokestatic  #47
618: aload         38
620: invokestatic  #47
623: new           #54
626: dup
627: invokespecial #55
630: ldc           #56
632: invokevirtual #57
635: aload         39
637: invokevirtual #82
640: ldc           #59
642: invokevirtual #57
645: getstatic     #78
648: invokevirtual #82
651: ldc           #56
653: invokevirtual #57
656: invokevirtual #60
659: aload         39
661: getstatic     #78
664: invokevirtual #83
667: invokestatic  #61
670: aload         40
672: invokestatic  #47
675: return
Exception table:
from    to  target type
426   449   452   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 781
End line: 799
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double double8 = brentOptimizer3.computeObjectiveValue((double) 97);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #157
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #71
50: istore        4
52: aload_2
53: invokevirtual #71
56: istore        5
58: aload_2
59: ldc2_w        #11
62: invokevirtual #158
65: dstore        6
67: ldc           #52
69: invokestatic  #15
72: goto          77
75: astore        6
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: iload_3
90: invokevirtual #62
93: ldc           #59
95: invokevirtual #57
98: iconst_0
99: invokevirtual #62
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #61
122: new           #54
125: dup
126: invokespecial #55
129: ldc           #56
131: invokevirtual #57
134: iload         4
136: invokevirtual #62
139: ldc           #59
141: invokevirtual #57
144: iconst_0
145: invokevirtual #62
148: ldc           #56
150: invokevirtual #57
153: invokevirtual #60
156: iload         4
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #61
169: new           #54
172: dup
173: invokespecial #55
176: ldc           #56
178: invokevirtual #57
181: iload         5
183: invokevirtual #62
186: ldc           #59
188: invokevirtual #57
191: iconst_0
192: invokevirtual #62
195: ldc           #56
197: invokevirtual #57
200: invokevirtual #60
203: iload         5
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #61
216: return
Exception table:
from    to  target type
58    72    75   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 802
End line: 843
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction6 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction6, (-0.0874913248293193d));
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker11 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer12 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker11);
        int int13 = brentOptimizer12.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray18 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable19 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable20 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray18);
        org.apache.commons.math3.optimization.GoalType goalType22 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair26 = brentOptimizer12.optimize(97, univariateFunction21, goalType22, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer12.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType28 = brentOptimizer12.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer3.optimize((-127), univariateFunction8, goalType28, (double) (byte) 10, 0.35427054092435967d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-127) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray18);
        org.junit.Assert.assertNotNull(univariateDifferentiable19);
        org.junit.Assert.assertNotNull(univariateDifferentiable20);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertTrue("'" + goalType22 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType22.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair26);
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #50
45: istore_3
46: aconst_null
47: astore        4
49: aload         4
51: ldc2_w        #160
54: invokestatic  #37
57: astore        5
59: aconst_null
60: astore        6
62: new           #8
65: dup
66: ldc2_w        #31
69: ldc2_w        #33
72: aload         6
74: invokespecial #13
77: astore        7
79: aload         7
81: invokevirtual #71
84: istore        8
86: new           #72
89: dup
90: invokespecial #73
93: astore        9
95: new           #72
98: dup
99: invokespecial #73
102: astore        10
104: aload         10
106: invokevirtual #74
109: astore        11
111: iconst_2
112: anewarray     #75
115: dup
116: iconst_0
117: aload         9
119: aastore
120: dup
121: iconst_1
122: aload         10
124: aastore
125: astore        12
127: aload         12
129: invokestatic  #76
132: astore        13
134: aload         12
136: invokestatic  #77
139: astore        14
141: aload         12
143: checkcast     #89
146: invokestatic  #90
149: astore        15
151: getstatic     #78
154: astore        16
156: aload         7
158: bipush        97
160: aload         15
162: aload         16
164: ldc2_w        #91
167: ldc2_w        #93
170: ldc2_w        #91
173: invokevirtual #44
176: astore        17
178: aload         7
180: invokevirtual #51
183: astore        18
185: aload         7
187: invokevirtual #110
190: astore        19
192: aload_2
193: bipush        -127
195: aload         5
197: aload         19
199: ldc2_w        #91
202: ldc2_w        #162
205: invokevirtual #81
208: astore        20
210: ldc           #101
212: invokestatic  #15
215: goto          220
218: astore        20
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: iload_3
233: invokevirtual #62
236: ldc           #59
238: invokevirtual #57
241: iconst_0
242: invokevirtual #62
245: ldc           #56
247: invokevirtual #57
250: invokevirtual #60
253: iload_3
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #61
265: aload         5
267: invokestatic  #47
270: new           #54
273: dup
274: invokespecial #55
277: ldc           #56
279: invokevirtual #57
282: iload         8
284: invokevirtual #62
287: ldc           #59
289: invokevirtual #57
292: iconst_0
293: invokevirtual #62
296: ldc           #56
298: invokevirtual #57
301: invokevirtual #60
304: iload         8
306: ifne          313
309: iconst_1
310: goto          314
313: iconst_0
314: invokestatic  #61
317: aload         11
319: invokestatic  #47
322: aload         12
324: invokestatic  #47
327: aload         13
329: invokestatic  #47
332: aload         14
334: invokestatic  #47
337: aload         15
339: invokestatic  #47
342: new           #54
345: dup
346: invokespecial #55
349: ldc           #56
351: invokevirtual #57
354: aload         16
356: invokevirtual #82
359: ldc           #59
361: invokevirtual #57
364: getstatic     #78
367: invokevirtual #82
370: ldc           #56
372: invokevirtual #57
375: invokevirtual #60
378: aload         16
380: getstatic     #78
383: invokevirtual #83
386: invokestatic  #61
389: aload         17
391: invokestatic  #47
394: aload         18
396: invokestatic  #47
399: new           #54
402: dup
403: invokespecial #55
406: ldc           #56
408: invokevirtual #57
411: aload         19
413: invokevirtual #82
416: ldc           #59
418: invokevirtual #57
421: getstatic     #78
424: invokevirtual #82
427: ldc           #56
429: invokevirtual #57
432: invokevirtual #60
435: aload         19
437: getstatic     #78
440: invokevirtual #83
443: invokestatic  #61
446: return
Exception table:
from    to  target type
192   215   218   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 846
End line: 865
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair12 = brentOptimizer3.optimize(100, univariateFunction7, goalType8, 0.04991687205886359d, 20.000000953674316d, 1010.0499987500625d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #164
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #49
45: dstore_3
46: aload_2
47: invokevirtual #50
50: istore        5
52: aconst_null
53: astore        6
55: getstatic     #78
58: astore        7
60: aload_2
61: bipush        100
63: aload         6
65: aload         7
67: ldc2_w        #135
70: ldc2_w        #165
73: ldc2_w        #167
76: invokevirtual #44
79: astore        8
81: ldc           #45
83: invokestatic  #15
86: goto          91
89: astore        8
91: new           #54
94: dup
95: invokespecial #55
98: ldc           #56
100: invokevirtual #57
103: dload_3
104: invokevirtual #58
107: ldc           #59
109: invokevirtual #57
112: dconst_0
113: invokevirtual #58
116: ldc           #56
118: invokevirtual #57
121: invokevirtual #60
124: dload_3
125: dconst_0
126: dcmpl
127: ifne          134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #61
138: new           #54
141: dup
142: invokespecial #55
145: ldc           #56
147: invokevirtual #57
150: iload         5
152: invokevirtual #62
155: ldc           #59
157: invokevirtual #57
160: iconst_0
161: invokevirtual #62
164: ldc           #56
166: invokevirtual #57
169: invokevirtual #60
172: iload         5
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #61
185: new           #54
188: dup
189: invokespecial #55
192: ldc           #56
194: invokevirtual #57
197: aload         7
199: invokevirtual #82
202: ldc           #59
204: invokevirtual #57
207: getstatic     #78
210: invokevirtual #82
213: ldc           #56
215: invokevirtual #57
218: invokevirtual #60
221: aload         7
223: getstatic     #78
226: invokevirtual #83
229: invokestatic  #61
232: return
Exception table:
from    to  target type
60    86    89   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 868
End line: 930
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction6 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer10 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker9);
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin14.derivative();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray18 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin13, sin14, sin16, sin17 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable19 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray25 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin20, sin21, sin23, sin24 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray25);
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin29.derivative();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = sin32.derivative();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray36 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin31, sin32, sin34, sin35 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable37 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin12, univariateDifferentiable19, univariateDifferentiable26, sin27, sin29, univariateDifferentiable37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray38);
        org.apache.commons.math3.optimization.GoalType goalType40 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair43 = brentOptimizer10.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable39, goalType40, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer3.optimize((int) 'a', univariateFunction6, goalType40, 2.0d, (double) 97.00001f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray18);
        org.junit.Assert.assertNotNull(univariateDifferentiable19);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray25);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray36);
        org.junit.Assert.assertNotNull(univariateDifferentiable37);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #169
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #50
45: istore_3
46: aconst_null
47: astore        4
49: aconst_null
50: astore        5
52: new           #8
55: dup
56: ldc2_w        #31
59: ldc2_w        #33
62: aload         5
64: invokespecial #13
67: astore        6
69: new           #72
72: dup
73: invokespecial #73
76: astore        7
78: new           #72
81: dup
82: invokespecial #73
85: astore        8
87: new           #72
90: dup
91: invokespecial #73
94: astore        9
96: aload         9
98: invokevirtual #74
101: astore        10
103: new           #72
106: dup
107: invokespecial #73
110: astore        11
112: new           #72
115: dup
116: invokespecial #73
119: astore        12
121: iconst_4
122: anewarray     #75
125: dup
126: iconst_0
127: aload         8
129: aastore
130: dup
131: iconst_1
132: aload         9
134: aastore
135: dup
136: iconst_2
137: aload         11
139: aastore
140: dup
141: iconst_3
142: aload         12
144: aastore
145: astore        13
147: aload         13
149: invokestatic  #76
152: astore        14
154: new           #72
157: dup
158: invokespecial #73
161: astore        15
163: new           #72
166: dup
167: invokespecial #73
170: astore        16
172: aload         16
174: invokevirtual #74
177: astore        17
179: new           #72
182: dup
183: invokespecial #73
186: astore        18
188: new           #72
191: dup
192: invokespecial #73
195: astore        19
197: iconst_4
198: anewarray     #75
201: dup
202: iconst_0
203: aload         15
205: aastore
206: dup
207: iconst_1
208: aload         16
210: aastore
211: dup
212: iconst_2
213: aload         18
215: aastore
216: dup
217: iconst_3
218: aload         19
220: aastore
221: astore        20
223: aload         20
225: invokestatic  #76
228: astore        21
230: new           #72
233: dup
234: invokespecial #73
237: astore        22
239: aload         22
241: invokevirtual #74
244: astore        23
246: new           #72
249: dup
250: invokespecial #73
253: astore        24
255: aload         24
257: invokevirtual #74
260: astore        25
262: new           #72
265: dup
266: invokespecial #73
269: astore        26
271: new           #72
274: dup
275: invokespecial #73
278: astore        27
280: aload         27
282: invokevirtual #74
285: astore        28
287: new           #72
290: dup
291: invokespecial #73
294: astore        29
296: new           #72
299: dup
300: invokespecial #73
303: astore        30
305: iconst_4
306: anewarray     #75
309: dup
310: iconst_0
311: aload         26
313: aastore
314: dup
315: iconst_1
316: aload         27
318: aastore
319: dup
320: iconst_2
321: aload         29
323: aastore
324: dup
325: iconst_3
326: aload         30
328: aastore
329: astore        31
331: aload         31
333: invokestatic  #76
336: astore        32
338: bipush        6
340: anewarray     #75
343: dup
344: iconst_0
345: aload         7
347: aastore
348: dup
349: iconst_1
350: aload         14
352: aastore
353: dup
354: iconst_2
355: aload         21
357: aastore
358: dup
359: iconst_3
360: aload         22
362: aastore
363: dup
364: iconst_4
365: aload         24
367: aastore
368: dup
369: iconst_5
370: aload         32
372: aastore
373: astore        33
375: aload         33
377: invokestatic  #77
380: astore        34
382: getstatic     #78
385: astore        35
387: aload         6
389: bipush        10
391: aload         34
393: aload         35
395: dconst_0
396: ldc2_w        #79
399: invokevirtual #81
402: astore        36
404: aload_2
405: bipush        97
407: aload         4
409: aload         35
411: ldc2_w        #170
414: ldc2_w        #129
417: invokevirtual #81
420: astore        37
422: ldc           #45
424: invokestatic  #15
427: goto          432
430: astore        37
432: new           #54
435: dup
436: invokespecial #55
439: ldc           #56
441: invokevirtual #57
444: iload_3
445: invokevirtual #62
448: ldc           #59
450: invokevirtual #57
453: iconst_0
454: invokevirtual #62
457: ldc           #56
459: invokevirtual #57
462: invokevirtual #60
465: iload_3
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #61
477: aload         10
479: invokestatic  #47
482: aload         13
484: invokestatic  #47
487: aload         14
489: invokestatic  #47
492: aload         17
494: invokestatic  #47
497: aload         20
499: invokestatic  #47
502: aload         21
504: invokestatic  #47
507: aload         23
509: invokestatic  #47
512: aload         25
514: invokestatic  #47
517: aload         28
519: invokestatic  #47
522: aload         31
524: invokestatic  #47
527: aload         32
529: invokestatic  #47
532: aload         33
534: invokestatic  #47
537: aload         34
539: invokestatic  #47
542: new           #54
545: dup
546: invokespecial #55
549: ldc           #56
551: invokevirtual #57
554: aload         35
556: invokevirtual #82
559: ldc           #59
561: invokevirtual #57
564: getstatic     #78
567: invokevirtual #82
570: ldc           #56
572: invokevirtual #57
575: invokevirtual #60
578: aload         35
580: getstatic     #78
583: invokevirtual #83
586: invokestatic  #61
589: aload         36
591: invokestatic  #47
594: return
Exception table:
from    to  target type
404   427   430   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 933
End line: 982
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray12 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, sin8, sin10, sin11 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable13 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray12);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray12);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer18 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker17);
        int int19 = brentOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray24);
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer18.optimize(97, univariateFunction27, goalType28, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair33 = brentOptimizer18.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType34 = brentOptimizer18.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer3.optimize((int) ' ', univariateFunction14, goalType34, 4.000043427276863d, 1.3017526366697145d);
        double double38 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray12);
        org.junit.Assert.assertNotNull(univariateDifferentiable13);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertNotNull(univariatePointValuePair33);
        org.junit.Assert.assertTrue("'" + goalType34 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType34.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.6508980319732887d + "'", double38 == 2.6508980319732887d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #50
45: istore_3
46: aload_2
47: invokevirtual #49
50: dstore        4
52: new           #72
55: dup
56: invokespecial #73
59: astore        6
61: new           #72
64: dup
65: invokespecial #73
68: astore        7
70: aload         7
72: invokevirtual #74
75: astore        8
77: new           #72
80: dup
81: invokespecial #73
84: astore        9
86: new           #72
89: dup
90: invokespecial #73
93: astore        10
95: iconst_4
96: anewarray     #75
99: dup
100: iconst_0
101: aload         6
103: aastore
104: dup
105: iconst_1
106: aload         7
108: aastore
109: dup
110: iconst_2
111: aload         9
113: aastore
114: dup
115: iconst_3
116: aload         10
118: aastore
119: astore        11
121: aload         11
123: invokestatic  #76
126: astore        12
128: aload         11
130: checkcast     #89
133: invokestatic  #109
136: astore        13
138: aconst_null
139: astore        14
141: new           #8
144: dup
145: ldc2_w        #31
148: ldc2_w        #33
151: aload         14
153: invokespecial #13
156: astore        15
158: aload         15
160: invokevirtual #71
163: istore        16
165: new           #72
168: dup
169: invokespecial #73
172: astore        17
174: new           #72
177: dup
178: invokespecial #73
181: astore        18
183: aload         18
185: invokevirtual #74
188: astore        19
190: iconst_2
191: anewarray     #75
194: dup
195: iconst_0
196: aload         17
198: aastore
199: dup
200: iconst_1
201: aload         18
203: aastore
204: astore        20
206: aload         20
208: invokestatic  #76
211: astore        21
213: aload         20
215: invokestatic  #77
218: astore        22
220: aload         20
222: checkcast     #89
225: invokestatic  #90
228: astore        23
230: getstatic     #78
233: astore        24
235: aload         15
237: bipush        97
239: aload         23
241: aload         24
243: ldc2_w        #91
246: ldc2_w        #93
249: ldc2_w        #91
252: invokevirtual #44
255: astore        25
257: aload         15
259: invokevirtual #51
262: astore        26
264: aload         15
266: invokevirtual #110
269: astore        27
271: aload_2
272: bipush        32
274: aload         13
276: aload         27
278: ldc2_w        #173
281: ldc2_w        #175
284: invokevirtual #81
287: astore        28
289: aload_2
290: invokevirtual #177
293: dstore        29
295: new           #54
298: dup
299: invokespecial #55
302: ldc           #56
304: invokevirtual #57
307: iload_3
308: invokevirtual #62
311: ldc           #59
313: invokevirtual #57
316: iconst_0
317: invokevirtual #62
320: ldc           #56
322: invokevirtual #57
325: invokevirtual #60
328: iload_3
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #61
340: new           #54
343: dup
344: invokespecial #55
347: ldc           #56
349: invokevirtual #57
352: dload         4
354: invokevirtual #58
357: ldc           #59
359: invokevirtual #57
362: dconst_0
363: invokevirtual #58
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: dload         4
376: dconst_0
377: dcmpl
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #61
389: aload         8
391: invokestatic  #47
394: aload         11
396: invokestatic  #47
399: aload         12
401: invokestatic  #47
404: aload         13
406: invokestatic  #47
409: new           #54
412: dup
413: invokespecial #55
416: ldc           #56
418: invokevirtual #57
421: iload         16
423: invokevirtual #62
426: ldc           #59
428: invokevirtual #57
431: iconst_0
432: invokevirtual #62
435: ldc           #56
437: invokevirtual #57
440: invokevirtual #60
443: iload         16
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #61
456: aload         19
458: invokestatic  #47
461: aload         20
463: invokestatic  #47
466: aload         21
468: invokestatic  #47
471: aload         22
473: invokestatic  #47
476: aload         23
478: invokestatic  #47
481: new           #54
484: dup
485: invokespecial #55
488: ldc           #56
490: invokevirtual #57
493: aload         24
495: invokevirtual #82
498: ldc           #59
500: invokevirtual #57
503: getstatic     #78
506: invokevirtual #82
509: ldc           #56
511: invokevirtual #57
514: invokevirtual #60
517: aload         24
519: getstatic     #78
522: invokevirtual #83
525: invokestatic  #61
528: aload         25
530: invokestatic  #47
533: aload         26
535: invokestatic  #47
538: new           #54
541: dup
542: invokespecial #55
545: ldc           #56
547: invokevirtual #57
550: aload         27
552: invokevirtual #82
555: ldc           #59
557: invokevirtual #57
560: getstatic     #78
563: invokevirtual #82
566: ldc           #56
568: invokevirtual #57
571: invokevirtual #60
574: aload         27
576: getstatic     #78
579: invokevirtual #83
582: invokestatic  #61
585: aload         28
587: invokestatic  #47
590: new           #54
593: dup
594: invokespecial #55
597: ldc           #56
599: invokevirtual #57
602: dload         29
604: invokevirtual #58
607: ldc           #59
609: invokevirtual #57
612: ldc2_w        #178
615: invokevirtual #58
618: ldc           #56
620: invokevirtual #57
623: invokevirtual #60
626: dload         29
628: ldc2_w        #178
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #61
643: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 985
End line: 1025
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, goalType20, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure26 = univariateDifferentiable17.value(derivativeStructure25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(multivariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #71
50: istore        4
52: aload_2
53: invokevirtual #71
56: istore        5
58: aconst_null
59: astore        6
61: new           #72
64: dup
65: invokespecial #73
68: astore        7
70: new           #72
73: dup
74: invokespecial #73
77: astore        8
79: aload         8
81: invokevirtual #74
84: astore        9
86: new           #72
89: dup
90: invokespecial #73
93: astore        10
95: new           #72
98: dup
99: invokespecial #73
102: astore        11
104: iconst_4
105: anewarray     #75
108: dup
109: iconst_0
110: aload         7
112: aastore
113: dup
114: iconst_1
115: aload         8
117: aastore
118: dup
119: iconst_2
120: aload         10
122: aastore
123: dup
124: iconst_3
125: aload         11
127: aastore
128: astore        12
130: aload         12
132: invokestatic  #76
135: astore        13
137: aload         12
139: checkcast     #89
142: invokestatic  #109
145: astore        14
147: aload         12
149: invokestatic  #77
152: astore        15
154: aload         6
156: aload         15
158: ldc2_w        #181
161: invokestatic  #183
164: astore        16
166: getstatic     #118
169: astore        17
171: aload_2
172: bipush        10
174: aload         15
176: aload         17
178: ldc2_w        #184
181: ldc2_w        #186
184: ldc2_w        #188
187: invokevirtual #44
190: astore        18
192: aconst_null
193: astore        19
195: aload         15
197: aload         19
199: invokeinterface #190,  2
204: astore        20
206: ldc           #119
208: invokestatic  #15
211: goto          216
214: astore        20
216: new           #54
219: dup
220: invokespecial #55
223: ldc           #56
225: invokevirtual #57
228: iload_3
229: invokevirtual #62
232: ldc           #59
234: invokevirtual #57
237: iconst_0
238: invokevirtual #62
241: ldc           #56
243: invokevirtual #57
246: invokevirtual #60
249: iload_3
250: ifne          257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #61
261: new           #54
264: dup
265: invokespecial #55
268: ldc           #56
270: invokevirtual #57
273: iload         4
275: invokevirtual #62
278: ldc           #59
280: invokevirtual #57
283: iconst_0
284: invokevirtual #62
287: ldc           #56
289: invokevirtual #57
292: invokevirtual #60
295: iload         4
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #61
308: new           #54
311: dup
312: invokespecial #55
315: ldc           #56
317: invokevirtual #57
320: iload         5
322: invokevirtual #62
325: ldc           #59
327: invokevirtual #57
330: iconst_0
331: invokevirtual #62
334: ldc           #56
336: invokevirtual #57
339: invokevirtual #60
342: iload         5
344: ifne          351
347: iconst_1
348: goto          352
351: iconst_0
352: invokestatic  #61
355: aload         9
357: invokestatic  #47
360: aload         12
362: invokestatic  #47
365: aload         13
367: invokestatic  #47
370: aload         14
372: invokestatic  #47
375: aload         15
377: invokestatic  #47
380: aload         16
382: invokestatic  #47
385: new           #54
388: dup
389: invokespecial #55
392: ldc           #56
394: invokevirtual #57
397: aload         17
399: invokevirtual #82
402: ldc           #59
404: invokevirtual #57
407: getstatic     #118
410: invokevirtual #82
413: ldc           #56
415: invokevirtual #57
418: invokevirtual #60
421: aload         17
423: getstatic     #118
426: invokevirtual #83
429: invokestatic  #61
432: aload         18
434: invokestatic  #47
437: return
Exception table:
from    to  target type
195   211   214   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1028
End line: 1140
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double[] doubleArray8 = new double[] { (-1L), 100.0d };
        double[] doubleArray14 = new double[] { 4.9E-324d, 1.0d, 0.0d, (-1.0d), (short) -1 };
        double double15 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray8, doubleArray14);
        double[] doubleArray16 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray8);
        double[] doubleArray19 = new double[] { (-1L), 100.0d };
        double[] doubleArray25 = new double[] { 4.9E-324d, 1.0d, 0.0d, (-1.0d), (short) -1 };
        double double26 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray19, doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19);
        double[] doubleArray30 = new double[] { (-1L), 100.0d };
        double[] doubleArray36 = new double[] { 4.9E-324d, 1.0d, 0.0d, (-1.0d), (short) -1 };
        double double37 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray30, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray30);
        boolean boolean39 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray19, doubleArray30);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray30);
        double[] doubleArray43 = new double[] { (-1L), 100.0d };
        double[] doubleArray49 = new double[] { 4.9E-324d, 1.0d, 0.0d, (-1.0d), (short) -1 };
        double double50 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray43, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray30, doubleArray49);
        org.apache.commons.math3.analysis.function.StepFunction stepFunction52 = new org.apache.commons.math3.analysis.function.StepFunction(doubleArray8, doubleArray30);
        double double54 = stepFunction52.value(2.1544346900318834d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer58 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker57);
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin62.derivative();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin65 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin61, sin62, sin64, sin65 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.function.Sin sin68 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin69 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = sin69.derivative();
        org.apache.commons.math3.analysis.function.Sin sin71 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin72 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray73 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin68, sin69, sin71, sin72 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable74 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray73);
        org.apache.commons.math3.analysis.function.Sin sin75 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction76 = sin75.derivative();
        org.apache.commons.math3.analysis.function.Sin sin77 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction78 = sin77.derivative();
        org.apache.commons.math3.analysis.function.Sin sin79 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin80 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction81 = sin80.derivative();
        org.apache.commons.math3.analysis.function.Sin sin82 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin83 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray84 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin79, sin80, sin82, sin83 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable85 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray84);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray86 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin60, univariateDifferentiable67, univariateDifferentiable74, sin75, sin77, univariateDifferentiable85 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable87 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray86);
        org.apache.commons.math3.optimization.GoalType goalType88 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer58.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable87, goalType88, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair95 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) stepFunction52, goalType88, 5729.5779513082325d, 5.916079783099616d, 4.041945072145264d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[4.9E-324, 1.0, 0.0, -1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 99.0d + "'", double15 == 99.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[4.9E-324, 1.0, 0.0, -1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 99.0d + "'", double26 == 99.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[4.9E-324, 1.0, 0.0, -1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 99.0d + "'", double37 == 99.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[4.9E-324, 1.0, 0.0, -1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 99.0d + "'", double50 == 99.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateFunction70);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray73);
        org.junit.Assert.assertNotNull(univariateDifferentiable74);
        org.junit.Assert.assertNotNull(univariateFunction76);
        org.junit.Assert.assertNotNull(univariateFunction78);
        org.junit.Assert.assertNotNull(univariateFunction81);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray84);
        org.junit.Assert.assertNotNull(univariateDifferentiable85);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray86);
        org.junit.Assert.assertNotNull(univariateDifferentiable87);
        org.junit.Assert.assertTrue("'" + goalType88 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType88.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #191
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #50
45: istore_3
46: iconst_2
47: newarray       double
49: dup
50: iconst_0
51: ldc2_w        #18
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #153
60: dastore
61: astore        4
63: iconst_5
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #192
71: dastore
72: dup
73: iconst_1
74: dconst_1
75: dastore
76: dup
77: iconst_2
78: dconst_0
79: dastore
80: dup
81: iconst_3
82: ldc2_w        #18
85: dastore
86: dup
87: iconst_4
88: ldc2_w        #18
91: dastore
92: astore        5
94: aload         4
96: aload         5
98: invokestatic  #194
101: dstore        6
103: aload         4
105: invokestatic  #195
108: astore        8
110: iconst_2
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #18
118: dastore
119: dup
120: iconst_1
121: ldc2_w        #153
124: dastore
125: astore        9
127: iconst_5
128: newarray       double
130: dup
131: iconst_0
132: ldc2_w        #192
135: dastore
136: dup
137: iconst_1
138: dconst_1
139: dastore
140: dup
141: iconst_2
142: dconst_0
143: dastore
144: dup
145: iconst_3
146: ldc2_w        #18
149: dastore
150: dup
151: iconst_4
152: ldc2_w        #18
155: dastore
156: astore        10
158: aload         9
160: aload         10
162: invokestatic  #194
165: dstore        11
167: aload         9
169: invokestatic  #195
172: astore        13
174: iconst_2
175: newarray       double
177: dup
178: iconst_0
179: ldc2_w        #18
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #153
188: dastore
189: astore        14
191: iconst_5
192: newarray       double
194: dup
195: iconst_0
196: ldc2_w        #192
199: dastore
200: dup
201: iconst_1
202: dconst_1
203: dastore
204: dup
205: iconst_2
206: dconst_0
207: dastore
208: dup
209: iconst_3
210: ldc2_w        #18
213: dastore
214: dup
215: iconst_4
216: ldc2_w        #18
219: dastore
220: astore        15
222: aload         14
224: aload         15
226: invokestatic  #194
229: dstore        16
231: aload         14
233: invokestatic  #195
236: astore        18
238: aload         9
240: aload         14
242: invokestatic  #196
245: istore        19
247: aload         14
249: invokestatic  #195
252: astore        20
254: iconst_2
255: newarray       double
257: dup
258: iconst_0
259: ldc2_w        #18
262: dastore
263: dup
264: iconst_1
265: ldc2_w        #153
268: dastore
269: astore        21
271: iconst_5
272: newarray       double
274: dup
275: iconst_0
276: ldc2_w        #192
279: dastore
280: dup
281: iconst_1
282: dconst_1
283: dastore
284: dup
285: iconst_2
286: dconst_0
287: dastore
288: dup
289: iconst_3
290: ldc2_w        #18
293: dastore
294: dup
295: iconst_4
296: ldc2_w        #18
299: dastore
300: astore        22
302: aload         21
304: aload         22
306: invokestatic  #194
309: dstore        23
311: aload         14
313: aload         22
315: invokestatic  #196
318: istore        25
320: new           #197
323: dup
324: aload         4
326: aload         14
328: invokespecial #198
331: astore        26
333: aload         26
335: ldc2_w        #199
338: invokevirtual #201
341: dstore        27
343: aconst_null
344: astore        29
346: new           #8
349: dup
350: ldc2_w        #31
353: ldc2_w        #33
356: aload         29
358: invokespecial #13
361: astore        30
363: new           #72
366: dup
367: invokespecial #73
370: astore        31
372: new           #72
375: dup
376: invokespecial #73
379: astore        32
381: new           #72
384: dup
385: invokespecial #73
388: astore        33
390: aload         33
392: invokevirtual #74
395: astore        34
397: new           #72
400: dup
401: invokespecial #73
404: astore        35
406: new           #72
409: dup
410: invokespecial #73
413: astore        36
415: iconst_4
416: anewarray     #75
419: dup
420: iconst_0
421: aload         32
423: aastore
424: dup
425: iconst_1
426: aload         33
428: aastore
429: dup
430: iconst_2
431: aload         35
433: aastore
434: dup
435: iconst_3
436: aload         36
438: aastore
439: astore        37
441: aload         37
443: invokestatic  #76
446: astore        38
448: new           #72
451: dup
452: invokespecial #73
455: astore        39
457: new           #72
460: dup
461: invokespecial #73
464: astore        40
466: aload         40
468: invokevirtual #74
471: astore        41
473: new           #72
476: dup
477: invokespecial #73
480: astore        42
482: new           #72
485: dup
486: invokespecial #73
489: astore        43
491: iconst_4
492: anewarray     #75
495: dup
496: iconst_0
497: aload         39
499: aastore
500: dup
501: iconst_1
502: aload         40
504: aastore
505: dup
506: iconst_2
507: aload         42
509: aastore
510: dup
511: iconst_3
512: aload         43
514: aastore
515: astore        44
517: aload         44
519: invokestatic  #76
522: astore        45
524: new           #72
527: dup
528: invokespecial #73
531: astore        46
533: aload         46
535: invokevirtual #74
538: astore        47
540: new           #72
543: dup
544: invokespecial #73
547: astore        48
549: aload         48
551: invokevirtual #74
554: astore        49
556: new           #72
559: dup
560: invokespecial #73
563: astore        50
565: new           #72
568: dup
569: invokespecial #73
572: astore        51
574: aload         51
576: invokevirtual #74
579: astore        52
581: new           #72
584: dup
585: invokespecial #73
588: astore        53
590: new           #72
593: dup
594: invokespecial #73
597: astore        54
599: iconst_4
600: anewarray     #75
603: dup
604: iconst_0
605: aload         50
607: aastore
608: dup
609: iconst_1
610: aload         51
612: aastore
613: dup
614: iconst_2
615: aload         53
617: aastore
618: dup
619: iconst_3
620: aload         54
622: aastore
623: astore        55
625: aload         55
627: invokestatic  #76
630: astore        56
632: bipush        6
634: anewarray     #75
637: dup
638: iconst_0
639: aload         31
641: aastore
642: dup
643: iconst_1
644: aload         38
646: aastore
647: dup
648: iconst_2
649: aload         45
651: aastore
652: dup
653: iconst_3
654: aload         46
656: aastore
657: dup
658: iconst_4
659: aload         48
661: aastore
662: dup
663: iconst_5
664: aload         56
666: aastore
667: astore        57
669: aload         57
671: invokestatic  #77
674: astore        58
676: getstatic     #78
679: astore        59
681: aload         30
683: bipush        10
685: aload         58
687: aload         59
689: dconst_0
690: ldc2_w        #79
693: invokevirtual #81
696: astore        60
698: aload_2
699: iconst_0
700: aload         26
702: aload         59
704: ldc2_w        #202
707: ldc2_w        #204
710: ldc2_w        #206
713: invokevirtual #44
716: astore        61
718: ldc           #52
720: invokestatic  #15
723: goto          728
726: astore        61
728: new           #54
731: dup
732: invokespecial #55
735: ldc           #56
737: invokevirtual #57
740: iload_3
741: invokevirtual #62
744: ldc           #59
746: invokevirtual #57
749: iconst_0
750: invokevirtual #62
753: ldc           #56
755: invokevirtual #57
758: invokevirtual #60
761: iload_3
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #61
773: aload         4
775: invokestatic  #47
778: aload         4
780: invokestatic  #208
783: ldc           #209
785: invokestatic  #210
788: aload         5
790: invokestatic  #47
793: aload         5
795: invokestatic  #208
798: ldc           #211
800: invokestatic  #210
803: new           #54
806: dup
807: invokespecial #55
810: ldc           #56
812: invokevirtual #57
815: dload         6
817: invokevirtual #58
820: ldc           #59
822: invokevirtual #57
825: ldc2_w        #212
828: invokevirtual #58
831: ldc           #56
833: invokevirtual #57
836: invokevirtual #60
839: dload         6
841: ldc2_w        #212
844: dcmpl
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #61
856: aload         8
858: invokestatic  #47
861: aload         8
863: invokestatic  #208
866: ldc           #209
868: invokestatic  #210
871: aload         9
873: invokestatic  #47
876: aload         9
878: invokestatic  #208
881: ldc           #209
883: invokestatic  #210
886: aload         10
888: invokestatic  #47
891: aload         10
893: invokestatic  #208
896: ldc           #211
898: invokestatic  #210
901: new           #54
904: dup
905: invokespecial #55
908: ldc           #56
910: invokevirtual #57
913: dload         11
915: invokevirtual #58
918: ldc           #59
920: invokevirtual #57
923: ldc2_w        #212
926: invokevirtual #58
929: ldc           #56
931: invokevirtual #57
934: invokevirtual #60
937: dload         11
939: ldc2_w        #212
942: dcmpl
943: ifne          950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #61
954: aload         13
956: invokestatic  #47
959: aload         13
961: invokestatic  #208
964: ldc           #209
966: invokestatic  #210
969: aload         14
971: invokestatic  #47
974: aload         14
976: invokestatic  #208
979: ldc           #209
981: invokestatic  #210
984: aload         15
986: invokestatic  #47
989: aload         15
991: invokestatic  #208
994: ldc           #211
996: invokestatic  #210
999: new           #54
1002: dup
1003: invokespecial #55
1006: ldc           #56
1008: invokevirtual #57
1011: dload         16
1013: invokevirtual #58
1016: ldc           #59
1018: invokevirtual #57
1021: ldc2_w        #212
1024: invokevirtual #58
1027: ldc           #56
1029: invokevirtual #57
1032: invokevirtual #60
1035: dload         16
1037: ldc2_w        #212
1040: dcmpl
1041: ifne          1048
1044: iconst_1
1045: goto          1049
1048: iconst_0
1049: invokestatic  #61
1052: aload         18
1054: invokestatic  #47
1057: aload         18
1059: invokestatic  #208
1062: ldc           #209
1064: invokestatic  #210
1067: new           #54
1070: dup
1071: invokespecial #55
1074: ldc           #56
1076: invokevirtual #57
1079: iload         19
1081: invokevirtual #214
1084: ldc           #59
1086: invokevirtual #57
1089: iconst_1
1090: invokevirtual #214
1093: ldc           #56
1095: invokevirtual #57
1098: invokevirtual #60
1101: iload         19
1103: iconst_1
1104: if_icmpne     1111
1107: iconst_1
1108: goto          1112
1111: iconst_0
1112: invokestatic  #61
1115: aload         20
1117: invokestatic  #47
1120: aload         20
1122: invokestatic  #208
1125: ldc           #209
1127: invokestatic  #210
1130: aload         21
1132: invokestatic  #47
1135: aload         21
1137: invokestatic  #208
1140: ldc           #209
1142: invokestatic  #210
1145: aload         22
1147: invokestatic  #47
1150: aload         22
1152: invokestatic  #208
1155: ldc           #211
1157: invokestatic  #210
1160: new           #54
1163: dup
1164: invokespecial #55
1167: ldc           #56
1169: invokevirtual #57
1172: dload         23
1174: invokevirtual #58
1177: ldc           #59
1179: invokevirtual #57
1182: ldc2_w        #212
1185: invokevirtual #58
1188: ldc           #56
1190: invokevirtual #57
1193: invokevirtual #60
1196: dload         23
1198: ldc2_w        #212
1201: dcmpl
1202: ifne          1209
1205: iconst_1
1206: goto          1210
1209: iconst_0
1210: invokestatic  #61
1213: new           #54
1216: dup
1217: invokespecial #55
1220: ldc           #56
1222: invokevirtual #57
1225: iload         25
1227: invokevirtual #214
1230: ldc           #59
1232: invokevirtual #57
1235: iconst_0
1236: invokevirtual #214
1239: ldc           #56
1241: invokevirtual #57
1244: invokevirtual #60
1247: iload         25
1249: ifne          1256
1252: iconst_1
1253: goto          1257
1256: iconst_0
1257: invokestatic  #61
1260: new           #54
1263: dup
1264: invokespecial #55
1267: ldc           #56
1269: invokevirtual #57
1272: dload         27
1274: invokevirtual #58
1277: ldc           #59
1279: invokevirtual #57
1282: ldc2_w        #18
1285: invokevirtual #58
1288: ldc           #56
1290: invokevirtual #57
1293: invokevirtual #60
1296: dload         27
1298: ldc2_w        #18
1301: dcmpl
1302: ifne          1309
1305: iconst_1
1306: goto          1310
1309: iconst_0
1310: invokestatic  #61
1313: aload         34
1315: invokestatic  #47
1318: aload         37
1320: invokestatic  #47
1323: aload         38
1325: invokestatic  #47
1328: aload         41
1330: invokestatic  #47
1333: aload         44
1335: invokestatic  #47
1338: aload         45
1340: invokestatic  #47
1343: aload         47
1345: invokestatic  #47
1348: aload         49
1350: invokestatic  #47
1353: aload         52
1355: invokestatic  #47
1358: aload         55
1360: invokestatic  #47
1363: aload         56
1365: invokestatic  #47
1368: aload         57
1370: invokestatic  #47
1373: aload         58
1375: invokestatic  #47
1378: new           #54
1381: dup
1382: invokespecial #55
1385: ldc           #56
1387: invokevirtual #57
1390: aload         59
1392: invokevirtual #82
1395: ldc           #59
1397: invokevirtual #57
1400: getstatic     #78
1403: invokevirtual #82
1406: ldc           #56
1408: invokevirtual #57
1411: invokevirtual #60
1414: aload         59
1416: getstatic     #78
1419: invokevirtual #83
1422: invokestatic  #61
1425: aload         60
1427: invokestatic  #47
1430: return
Exception table:
from    to  target type
698   723   726   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1143
End line: 1155
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(2704.000238418579d, 2.1544346900318834d, univariatePointValuePairConvergenceChecker2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair4 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #215
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #216
33: ldc2_w        #199
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #51
45: astore_3
46: ldc           #52
48: invokestatic  #15
51: goto          55
54: astore_3
55: return
Exception table:
from    to  target type
41    51    54   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1158
End line: 1221
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker11 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer12 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker11);
        int int13 = brentOptimizer12.getMaxEvaluations();
        double double14 = brentOptimizer12.getMax();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction18 = sin17.derivative();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray21 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin16, sin17, sin19, sin20 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable22 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray21);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray21);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer27 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker26);
        int int28 = brentOptimizer27.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray33 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin30, sin31 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray33);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray33);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray33);
        org.apache.commons.math3.optimization.GoalType goalType37 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer27.optimize(97, univariateFunction36, goalType37, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair42 = brentOptimizer27.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType43 = brentOptimizer27.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer12.optimize((int) ' ', univariateFunction23, goalType43, 4.000043427276863d, 1.3017526366697145d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer3.optimize((int) (short) 0, univariateFunction8, goalType43, (-120.00000095367432d), (-9.079985908828064E-5d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction18);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray21);
        org.junit.Assert.assertNotNull(univariateDifferentiable22);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertTrue("'" + goalType37 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType37.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertNotNull(univariatePointValuePair42);
        org.junit.Assert.assertTrue("'" + goalType43 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType43.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #49
45: dstore_3
46: aload_2
47: invokevirtual #50
50: istore        5
52: aload_2
53: invokevirtual #103
56: astore        6
58: aconst_null
59: astore        7
61: aconst_null
62: astore        8
64: new           #8
67: dup
68: ldc2_w        #31
71: ldc2_w        #33
74: aload         8
76: invokespecial #13
79: astore        9
81: aload         9
83: invokevirtual #50
86: istore        10
88: aload         9
90: invokevirtual #49
93: dstore        11
95: new           #72
98: dup
99: invokespecial #73
102: astore        13
104: new           #72
107: dup
108: invokespecial #73
111: astore        14
113: aload         14
115: invokevirtual #74
118: astore        15
120: new           #72
123: dup
124: invokespecial #73
127: astore        16
129: new           #72
132: dup
133: invokespecial #73
136: astore        17
138: iconst_4
139: anewarray     #75
142: dup
143: iconst_0
144: aload         13
146: aastore
147: dup
148: iconst_1
149: aload         14
151: aastore
152: dup
153: iconst_2
154: aload         16
156: aastore
157: dup
158: iconst_3
159: aload         17
161: aastore
162: astore        18
164: aload         18
166: invokestatic  #76
169: astore        19
171: aload         18
173: checkcast     #89
176: invokestatic  #109
179: astore        20
181: aconst_null
182: astore        21
184: new           #8
187: dup
188: ldc2_w        #31
191: ldc2_w        #33
194: aload         21
196: invokespecial #13
199: astore        22
201: aload         22
203: invokevirtual #71
206: istore        23
208: new           #72
211: dup
212: invokespecial #73
215: astore        24
217: new           #72
220: dup
221: invokespecial #73
224: astore        25
226: aload         25
228: invokevirtual #74
231: astore        26
233: iconst_2
234: anewarray     #75
237: dup
238: iconst_0
239: aload         24
241: aastore
242: dup
243: iconst_1
244: aload         25
246: aastore
247: astore        27
249: aload         27
251: invokestatic  #76
254: astore        28
256: aload         27
258: invokestatic  #77
261: astore        29
263: aload         27
265: checkcast     #89
268: invokestatic  #90
271: astore        30
273: getstatic     #78
276: astore        31
278: aload         22
280: bipush        97
282: aload         30
284: aload         31
286: ldc2_w        #91
289: ldc2_w        #93
292: ldc2_w        #91
295: invokevirtual #44
298: astore        32
300: aload         22
302: invokevirtual #51
305: astore        33
307: aload         22
309: invokevirtual #110
312: astore        34
314: aload         9
316: bipush        32
318: aload         20
320: aload         34
322: ldc2_w        #173
325: ldc2_w        #175
328: invokevirtual #81
331: astore        35
333: aload_2
334: iconst_0
335: aload         7
337: aload         34
339: ldc2_w        #219
342: ldc2_w        #221
345: invokevirtual #81
348: astore        36
350: ldc           #45
352: invokestatic  #15
355: goto          360
358: astore        36
360: new           #54
363: dup
364: invokespecial #55
367: ldc           #56
369: invokevirtual #57
372: dload_3
373: invokevirtual #58
376: ldc           #59
378: invokevirtual #57
381: dconst_0
382: invokevirtual #58
385: ldc           #56
387: invokevirtual #57
390: invokevirtual #60
393: dload_3
394: dconst_0
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #61
407: new           #54
410: dup
411: invokespecial #55
414: ldc           #56
416: invokevirtual #57
419: iload         5
421: invokevirtual #62
424: ldc           #59
426: invokevirtual #57
429: iconst_0
430: invokevirtual #62
433: ldc           #56
435: invokevirtual #57
438: invokevirtual #60
441: iload         5
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #61
454: aload         6
456: invokestatic  #104
459: new           #54
462: dup
463: invokespecial #55
466: ldc           #56
468: invokevirtual #57
471: iload         10
473: invokevirtual #62
476: ldc           #59
478: invokevirtual #57
481: iconst_0
482: invokevirtual #62
485: ldc           #56
487: invokevirtual #57
490: invokevirtual #60
493: iload         10
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #61
506: new           #54
509: dup
510: invokespecial #55
513: ldc           #56
515: invokevirtual #57
518: dload         11
520: invokevirtual #58
523: ldc           #59
525: invokevirtual #57
528: dconst_0
529: invokevirtual #58
532: ldc           #56
534: invokevirtual #57
537: invokevirtual #60
540: dload         11
542: dconst_0
543: dcmpl
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #61
555: aload         15
557: invokestatic  #47
560: aload         18
562: invokestatic  #47
565: aload         19
567: invokestatic  #47
570: aload         20
572: invokestatic  #47
575: new           #54
578: dup
579: invokespecial #55
582: ldc           #56
584: invokevirtual #57
587: iload         23
589: invokevirtual #62
592: ldc           #59
594: invokevirtual #57
597: iconst_0
598: invokevirtual #62
601: ldc           #56
603: invokevirtual #57
606: invokevirtual #60
609: iload         23
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #61
622: aload         26
624: invokestatic  #47
627: aload         27
629: invokestatic  #47
632: aload         28
634: invokestatic  #47
637: aload         29
639: invokestatic  #47
642: aload         30
644: invokestatic  #47
647: new           #54
650: dup
651: invokespecial #55
654: ldc           #56
656: invokevirtual #57
659: aload         31
661: invokevirtual #82
664: ldc           #59
666: invokevirtual #57
669: getstatic     #78
672: invokevirtual #82
675: ldc           #56
677: invokevirtual #57
680: invokevirtual #60
683: aload         31
685: getstatic     #78
688: invokevirtual #83
691: invokestatic  #61
694: aload         32
696: invokestatic  #47
699: aload         33
701: invokestatic  #47
704: new           #54
707: dup
708: invokespecial #55
711: ldc           #56
713: invokevirtual #57
716: aload         34
718: invokevirtual #82
721: ldc           #59
723: invokevirtual #57
726: getstatic     #78
729: invokevirtual #82
732: ldc           #56
734: invokevirtual #57
737: invokevirtual #60
740: aload         34
742: getstatic     #78
745: invokevirtual #83
748: invokestatic  #61
751: aload         35
753: invokestatic  #47
756: return
Exception table:
from    to  target type
333   355   358   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1224
End line: 1319
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.analysis.function.Sin sin5 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray11 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7, sin9, sin10 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray11);
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin14.derivative();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray18 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin13, sin14, sin16, sin17 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable19 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin5, univariateDifferentiable12, univariateDifferentiable19, sin20, sin22, univariateDifferentiable30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray31);
        org.apache.commons.math3.optimization.GoalType goalType33 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer3.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, goalType33, 0.0d, 0.17453292519943295d);
        double double37 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = sin39.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker43 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer44 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker43);
        int int45 = brentOptimizer44.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction49 = sin48.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray50 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable51 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray50);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray50);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray50);
        org.apache.commons.math3.optimization.GoalType goalType54 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer44.optimize(97, univariateFunction53, goalType54, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer44.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType60 = brentOptimizer44.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer44.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction64 = sin63.derivative();
        org.apache.commons.math3.optimization.GoalType goalType65 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer44.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin63, goalType65, 3.141592653589793d, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair72 = brentOptimizer3.optimize((int) (byte) 0, univariateFunction40, goalType65, 1.1368683772161603E-13d, 0.34574329181385116d, (-1.3017526366697145d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray18);
        org.junit.Assert.assertNotNull(univariateDifferentiable19);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.17453292519943295d + "'", double37 == 0.17453292519943295d);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(univariateFunction49);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray50);
        org.junit.Assert.assertNotNull(univariateDifferentiable51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertTrue("'" + goalType54 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType54.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair61);
        org.junit.Assert.assertNotNull(univariateFunction64);
        org.junit.Assert.assertTrue("'" + goalType65 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType65.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #223
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: new           #72
44: dup
45: invokespecial #73
48: astore_3
49: new           #72
52: dup
53: invokespecial #73
56: astore        4
58: new           #72
61: dup
62: invokespecial #73
65: astore        5
67: aload         5
69: invokevirtual #74
72: astore        6
74: new           #72
77: dup
78: invokespecial #73
81: astore        7
83: new           #72
86: dup
87: invokespecial #73
90: astore        8
92: iconst_4
93: anewarray     #75
96: dup
97: iconst_0
98: aload         4
100: aastore
101: dup
102: iconst_1
103: aload         5
105: aastore
106: dup
107: iconst_2
108: aload         7
110: aastore
111: dup
112: iconst_3
113: aload         8
115: aastore
116: astore        9
118: aload         9
120: invokestatic  #76
123: astore        10
125: new           #72
128: dup
129: invokespecial #73
132: astore        11
134: new           #72
137: dup
138: invokespecial #73
141: astore        12
143: aload         12
145: invokevirtual #74
148: astore        13
150: new           #72
153: dup
154: invokespecial #73
157: astore        14
159: new           #72
162: dup
163: invokespecial #73
166: astore        15
168: iconst_4
169: anewarray     #75
172: dup
173: iconst_0
174: aload         11
176: aastore
177: dup
178: iconst_1
179: aload         12
181: aastore
182: dup
183: iconst_2
184: aload         14
186: aastore
187: dup
188: iconst_3
189: aload         15
191: aastore
192: astore        16
194: aload         16
196: invokestatic  #76
199: astore        17
201: new           #72
204: dup
205: invokespecial #73
208: astore        18
210: aload         18
212: invokevirtual #74
215: astore        19
217: new           #72
220: dup
221: invokespecial #73
224: astore        20
226: aload         20
228: invokevirtual #74
231: astore        21
233: new           #72
236: dup
237: invokespecial #73
240: astore        22
242: new           #72
245: dup
246: invokespecial #73
249: astore        23
251: aload         23
253: invokevirtual #74
256: astore        24
258: new           #72
261: dup
262: invokespecial #73
265: astore        25
267: new           #72
270: dup
271: invokespecial #73
274: astore        26
276: iconst_4
277: anewarray     #75
280: dup
281: iconst_0
282: aload         22
284: aastore
285: dup
286: iconst_1
287: aload         23
289: aastore
290: dup
291: iconst_2
292: aload         25
294: aastore
295: dup
296: iconst_3
297: aload         26
299: aastore
300: astore        27
302: aload         27
304: invokestatic  #76
307: astore        28
309: bipush        6
311: anewarray     #75
314: dup
315: iconst_0
316: aload_3
317: aastore
318: dup
319: iconst_1
320: aload         10
322: aastore
323: dup
324: iconst_2
325: aload         17
327: aastore
328: dup
329: iconst_3
330: aload         18
332: aastore
333: dup
334: iconst_4
335: aload         20
337: aastore
338: dup
339: iconst_5
340: aload         28
342: aastore
343: astore        29
345: aload         29
347: invokestatic  #77
350: astore        30
352: getstatic     #78
355: astore        31
357: aload_2
358: bipush        10
360: aload         30
362: aload         31
364: dconst_0
365: ldc2_w        #79
368: invokevirtual #81
371: astore        32
373: aload_2
374: invokevirtual #49
377: dstore        33
379: new           #72
382: dup
383: invokespecial #73
386: astore        35
388: aload         35
390: invokevirtual #74
393: astore        36
395: aconst_null
396: astore        37
398: new           #8
401: dup
402: ldc2_w        #31
405: ldc2_w        #33
408: aload         37
410: invokespecial #13
413: astore        38
415: aload         38
417: invokevirtual #71
420: istore        39
422: new           #72
425: dup
426: invokespecial #73
429: astore        40
431: new           #72
434: dup
435: invokespecial #73
438: astore        41
440: aload         41
442: invokevirtual #74
445: astore        42
447: iconst_2
448: anewarray     #75
451: dup
452: iconst_0
453: aload         40
455: aastore
456: dup
457: iconst_1
458: aload         41
460: aastore
461: astore        43
463: aload         43
465: invokestatic  #76
468: astore        44
470: aload         43
472: invokestatic  #77
475: astore        45
477: aload         43
479: checkcast     #89
482: invokestatic  #90
485: astore        46
487: getstatic     #78
490: astore        47
492: aload         38
494: bipush        97
496: aload         46
498: aload         47
500: ldc2_w        #91
503: ldc2_w        #93
506: ldc2_w        #91
509: invokevirtual #44
512: astore        48
514: aload         38
516: invokevirtual #51
519: astore        49
521: aload         38
523: invokevirtual #110
526: astore        50
528: aload         38
530: invokevirtual #51
533: astore        51
535: new           #72
538: dup
539: invokespecial #73
542: astore        52
544: aload         52
546: invokevirtual #74
549: astore        53
551: getstatic     #78
554: astore        54
556: aload         38
558: bipush        97
560: aload         52
562: aload         54
564: ldc2_w        #133
567: dconst_0
568: invokevirtual #81
571: astore        55
573: aload_2
574: iconst_0
575: aload         36
577: aload         54
579: ldc2_w        #224
582: ldc2_w        #226
585: ldc2_w        #228
588: invokevirtual #44
591: astore        56
593: ldc           #52
595: invokestatic  #15
598: goto          603
601: astore        56
603: aload         6
605: invokestatic  #47
608: aload         9
610: invokestatic  #47
613: aload         10
615: invokestatic  #47
618: aload         13
620: invokestatic  #47
623: aload         16
625: invokestatic  #47
628: aload         17
630: invokestatic  #47
633: aload         19
635: invokestatic  #47
638: aload         21
640: invokestatic  #47
643: aload         24
645: invokestatic  #47
648: aload         27
650: invokestatic  #47
653: aload         28
655: invokestatic  #47
658: aload         29
660: invokestatic  #47
663: aload         30
665: invokestatic  #47
668: new           #54
671: dup
672: invokespecial #55
675: ldc           #56
677: invokevirtual #57
680: aload         31
682: invokevirtual #82
685: ldc           #59
687: invokevirtual #57
690: getstatic     #78
693: invokevirtual #82
696: ldc           #56
698: invokevirtual #57
701: invokevirtual #60
704: aload         31
706: getstatic     #78
709: invokevirtual #83
712: invokestatic  #61
715: aload         32
717: invokestatic  #47
720: new           #54
723: dup
724: invokespecial #55
727: ldc           #56
729: invokevirtual #57
732: dload         33
734: invokevirtual #58
737: ldc           #59
739: invokevirtual #57
742: ldc2_w        #79
745: invokevirtual #58
748: ldc           #56
750: invokevirtual #57
753: invokevirtual #60
756: dload         33
758: ldc2_w        #79
761: dcmpl
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #61
773: aload         36
775: invokestatic  #47
778: new           #54
781: dup
782: invokespecial #55
785: ldc           #56
787: invokevirtual #57
790: iload         39
792: invokevirtual #62
795: ldc           #59
797: invokevirtual #57
800: iconst_0
801: invokevirtual #62
804: ldc           #56
806: invokevirtual #57
809: invokevirtual #60
812: iload         39
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #61
825: aload         42
827: invokestatic  #47
830: aload         43
832: invokestatic  #47
835: aload         44
837: invokestatic  #47
840: aload         45
842: invokestatic  #47
845: aload         46
847: invokestatic  #47
850: new           #54
853: dup
854: invokespecial #55
857: ldc           #56
859: invokevirtual #57
862: aload         47
864: invokevirtual #82
867: ldc           #59
869: invokevirtual #57
872: getstatic     #78
875: invokevirtual #82
878: ldc           #56
880: invokevirtual #57
883: invokevirtual #60
886: aload         47
888: getstatic     #78
891: invokevirtual #83
894: invokestatic  #61
897: aload         48
899: invokestatic  #47
902: aload         49
904: invokestatic  #47
907: new           #54
910: dup
911: invokespecial #55
914: ldc           #56
916: invokevirtual #57
919: aload         50
921: invokevirtual #82
924: ldc           #59
926: invokevirtual #57
929: getstatic     #78
932: invokevirtual #82
935: ldc           #56
937: invokevirtual #57
940: invokevirtual #60
943: aload         50
945: getstatic     #78
948: invokevirtual #83
951: invokestatic  #61
954: aload         51
956: invokestatic  #47
959: aload         53
961: invokestatic  #47
964: new           #54
967: dup
968: invokespecial #55
971: ldc           #56
973: invokevirtual #57
976: aload         54
978: invokevirtual #82
981: ldc           #59
983: invokevirtual #57
986: getstatic     #78
989: invokevirtual #82
992: ldc           #56
994: invokevirtual #57
997: invokevirtual #60
1000: aload         54
1002: getstatic     #78
1005: invokevirtual #83
1008: invokestatic  #61
1011: aload         55
1013: invokestatic  #47
1016: return
Exception table:
from    to  target type
573   598   601   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1322
End line: 1337
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        double double7 = brentOptimizer3.getMin();
        int int8 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #71
50: istore        4
52: aload_2
53: invokevirtual #71
56: istore        5
58: aload_2
59: invokevirtual #231
62: dstore        6
64: aload_2
65: invokevirtual #71
68: istore        8
70: new           #54
73: dup
74: invokespecial #55
77: ldc           #56
79: invokevirtual #57
82: iload_3
83: invokevirtual #62
86: ldc           #59
88: invokevirtual #57
91: iconst_0
92: invokevirtual #62
95: ldc           #56
97: invokevirtual #57
100: invokevirtual #60
103: iload_3
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #61
115: new           #54
118: dup
119: invokespecial #55
122: ldc           #56
124: invokevirtual #57
127: iload         4
129: invokevirtual #62
132: ldc           #59
134: invokevirtual #57
137: iconst_0
138: invokevirtual #62
141: ldc           #56
143: invokevirtual #57
146: invokevirtual #60
149: iload         4
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #61
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload         5
176: invokevirtual #62
179: ldc           #59
181: invokevirtual #57
184: iconst_0
185: invokevirtual #62
188: ldc           #56
190: invokevirtual #57
193: invokevirtual #60
196: iload         5
198: ifne          205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #61
209: new           #54
212: dup
213: invokespecial #55
216: ldc           #56
218: invokevirtual #57
221: dload         6
223: invokevirtual #58
226: ldc           #59
228: invokevirtual #57
231: dconst_0
232: invokevirtual #58
235: ldc           #56
237: invokevirtual #57
240: invokevirtual #60
243: dload         6
245: dconst_0
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #61
258: new           #54
261: dup
262: invokespecial #55
265: ldc           #56
267: invokevirtual #57
270: iload         8
272: invokevirtual #62
275: ldc           #59
277: invokevirtual #57
280: iconst_0
281: invokevirtual #62
284: ldc           #56
286: invokevirtual #57
289: invokevirtual #60
292: iload         8
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #61
305: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1340
End line: 1351
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair3 = brentOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #233
31: ldc2_w        #91
34: invokespecial #25
37: astore_1
38: aload_1
39: invokevirtual #51
42: astore_2
43: ldc           #52
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
38    48    51   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1354
End line: 1365
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-0.2720105554446849d), 1.2786363145140075E-4d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -0.272 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #236
33: ldc2_w        #238
36: aload_1
37: invokespecial #13
40: astore_2
41: ldc           #240
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
26    46    49   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1368
End line: 1379
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = brentOptimizer2.computeObjectiveValue(2.6469779601696886E-23d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #241
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #233
31: ldc2_w        #91
34: invokespecial #25
37: astore_1
38: aload_1
39: ldc2_w        #242
42: invokevirtual #158
45: dstore_2
46: ldc           #52
48: invokestatic  #15
51: goto          55
54: astore_2
55: return
Exception table:
from    to  target type
38    51    54   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1382
End line: 1413
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray10 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException13 = new org.apache.commons.math3.exception.NullArgumentException(localizable9, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.optimization.GoalType goalType15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair19 = brentOptimizer3.optimize(12, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction14, goalType15, 5.916079783099616d, (double) (byte) 10, 0.9922682874719476d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray10);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction12);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #71
45: istore_3
46: aload_2
47: invokevirtual #71
50: istore        4
52: aload_2
53: invokevirtual #71
56: istore        5
58: aload_2
59: invokevirtual #50
62: istore        6
64: aconst_null
65: astore        7
67: iconst_0
68: anewarray     #141
71: astore        8
73: aload         8
75: invokestatic  #142
78: astore        9
80: aload         8
82: invokestatic  #245
85: astore        10
87: new           #46
90: dup
91: aload         7
93: aload         8
95: checkcast     #123
98: invokespecial #246
101: astore        11
103: aload         8
105: invokestatic  #142
108: astore        12
110: aconst_null
111: astore        13
113: aload_2
114: bipush        12
116: aload         12
118: aload         13
120: ldc2_w        #204
123: ldc2_w        #91
126: ldc2_w        #247
129: invokevirtual #44
132: astore        14
134: ldc           #45
136: invokestatic  #15
139: goto          144
142: astore        14
144: new           #54
147: dup
148: invokespecial #55
151: ldc           #56
153: invokevirtual #57
156: iload_3
157: invokevirtual #62
160: ldc           #59
162: invokevirtual #57
165: iconst_0
166: invokevirtual #62
169: ldc           #56
171: invokevirtual #57
174: invokevirtual #60
177: iload_3
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #61
189: new           #54
192: dup
193: invokespecial #55
196: ldc           #56
198: invokevirtual #57
201: iload         4
203: invokevirtual #62
206: ldc           #59
208: invokevirtual #57
211: iconst_0
212: invokevirtual #62
215: ldc           #56
217: invokevirtual #57
220: invokevirtual #60
223: iload         4
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #61
236: new           #54
239: dup
240: invokespecial #55
243: ldc           #56
245: invokevirtual #57
248: iload         5
250: invokevirtual #62
253: ldc           #59
255: invokevirtual #57
258: iconst_0
259: invokevirtual #62
262: ldc           #56
264: invokevirtual #57
267: invokevirtual #60
270: iload         5
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #61
283: new           #54
286: dup
287: invokespecial #55
290: ldc           #56
292: invokevirtual #57
295: iload         6
297: invokevirtual #62
300: ldc           #59
302: invokevirtual #57
305: iconst_0
306: invokevirtual #62
309: ldc           #56
311: invokevirtual #57
314: invokevirtual #60
317: iload         6
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #61
330: aload         8
332: invokestatic  #47
335: aload         9
337: invokestatic  #47
340: aload         10
342: invokestatic  #47
345: aload         12
347: invokestatic  #47
350: return
Exception table:
from    to  target type
113   139   142   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1416
End line: 1441
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction9 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction9, 2.0d);
        org.apache.commons.math3.optimization.GoalType goalType12 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair15 = brentOptimizer3.optimize((int) ' ', univariateFunction11, goalType12, (double) 2.3841858E-7f, 3.948148009134034E13d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + goalType12 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType12.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #249
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #31
33: ldc2_w        #33
36: aload_1
37: invokespecial #13
40: astore_2
41: aload_2
42: invokevirtual #50
45: istore_3
46: aload_2
47: invokevirtual #49
50: dstore        4
52: aload_2
53: invokevirtual #50
56: istore        6
58: aload_2
59: invokevirtual #50
62: istore        7
64: aconst_null
65: astore        8
67: aload         8
69: ldc2_w        #170
72: invokestatic  #37
75: astore        9
77: getstatic     #118
80: astore        10
82: aload_2
83: bipush        32
85: aload         9
87: aload         10
89: ldc2_w        #250
92: ldc2_w        #252
95: invokevirtual #81
98: astore        11
100: ldc           #119
102: invokestatic  #15
105: goto          110
108: astore        11
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: iload_3
123: invokevirtual #62
126: ldc           #59
128: invokevirtual #57
131: iconst_0
132: invokevirtual #62
135: ldc           #56
137: invokevirtual #57
140: invokevirtual #60
143: iload_3
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #61
155: new           #54
158: dup
159: invokespecial #55
162: ldc           #56
164: invokevirtual #57
167: dload         4
169: invokevirtual #58
172: ldc           #59
174: invokevirtual #57
177: dconst_0
178: invokevirtual #58
181: ldc           #56
183: invokevirtual #57
186: invokevirtual #60
189: dload         4
191: dconst_0
192: dcmpl
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #61
204: new           #54
207: dup
208: invokespecial #55
211: ldc           #56
213: invokevirtual #57
216: iload         6
218: invokevirtual #62
221: ldc           #59
223: invokevirtual #57
226: iconst_0
227: invokevirtual #62
230: ldc           #56
232: invokevirtual #57
235: invokevirtual #60
238: iload         6
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #61
251: new           #54
254: dup
255: invokespecial #55
258: ldc           #56
260: invokevirtual #57
263: iload         7
265: invokevirtual #62
268: ldc           #59
270: invokevirtual #57
273: iconst_0
274: invokevirtual #62
277: ldc           #56
279: invokevirtual #57
282: invokevirtual #60
285: iload         7
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #61
298: aload         9
300: invokestatic  #47
303: new           #54
306: dup
307: invokespecial #55
310: ldc           #56
312: invokevirtual #57
315: aload         10
317: invokevirtual #82
320: ldc           #59
322: invokevirtual #57
325: getstatic     #118
328: invokevirtual #82
331: ldc           #56
333: invokevirtual #57
336: invokevirtual #60
339: aload         10
341: getstatic     #118
344: invokevirtual #83
347: invokestatic  #61
350: return
Exception table:
from    to  target type
82   105   108   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1444
End line: 1454
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(2.1544346900318834d, (double) (-0.9999999f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -1 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #199
31: ldc2_w        #255
34: invokespecial #25
37: astore_1
38: ldc_w         #257
41: invokestatic  #15
44: goto          48
47: astore_1
48: return
Exception table:
from    to  target type
24    44    47   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1457
End line: 1468
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = brentOptimizer2.computeObjectiveValue(1.0000004817893995d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: ldc2_w        #259
43: invokevirtual #158
46: dstore_2
47: ldc           #52
49: invokestatic  #15
52: goto          56
55: astore_2
56: return
Exception table:
from    to  target type
39    52    55   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1471
End line: 1489
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair7 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #51
63: astore        6
65: ldc           #52
67: invokestatic  #15
70: goto          75
73: astore        6
75: new           #54
78: dup
79: invokespecial #55
82: ldc           #56
84: invokevirtual #57
87: iload_3
88: invokevirtual #62
91: ldc           #59
93: invokevirtual #57
96: iconst_0
97: invokevirtual #62
100: ldc           #56
102: invokevirtual #57
105: invokevirtual #60
108: iload_3
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #61
120: new           #54
123: dup
124: invokespecial #55
127: ldc           #56
129: invokevirtual #57
132: iload         4
134: invokevirtual #62
137: ldc           #59
139: invokevirtual #57
142: iconst_0
143: invokevirtual #62
146: ldc           #56
148: invokevirtual #57
151: invokevirtual #60
154: iload         4
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #61
167: new           #54
170: dup
171: invokespecial #55
174: ldc           #56
176: invokevirtual #57
179: iload         5
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload         5
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #61
214: return
Exception table:
from    to  target type
59    70    73   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1492
End line: 1560
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction8, (double) '#');
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker13 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer14 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker13);
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction19 = sin18.derivative();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray22 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin17, sin18, sin20, sin21 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray22);
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray40 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin35, sin36, sin38, sin39 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable41 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray40);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray42 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin16, univariateDifferentiable23, univariateDifferentiable30, sin31, sin33, univariateDifferentiable41 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable43 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray42);
        org.apache.commons.math3.optimization.GoalType goalType44 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer14.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable43, goalType44, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer3.optimize(0, univariateFunction10, goalType44, 0.04995839334370268d, (-2.225073858507201E-308d), (double) 35.000004f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertNotNull(univariateFunction19);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray22);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray40);
        org.junit.Assert.assertNotNull(univariateDifferentiable41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray42);
        org.junit.Assert.assertNotNull(univariateDifferentiable43);
        org.junit.Assert.assertTrue("'" + goalType44 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType44.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aconst_null
60: astore        7
62: aload         7
64: ldc2_w        #263
67: invokestatic  #37
70: astore        8
72: aconst_null
73: astore        9
75: new           #8
78: dup
79: ldc2_w        #31
82: ldc2_w        #33
85: aload         9
87: invokespecial #13
90: astore        10
92: new           #72
95: dup
96: invokespecial #73
99: astore        11
101: new           #72
104: dup
105: invokespecial #73
108: astore        12
110: new           #72
113: dup
114: invokespecial #73
117: astore        13
119: aload         13
121: invokevirtual #74
124: astore        14
126: new           #72
129: dup
130: invokespecial #73
133: astore        15
135: new           #72
138: dup
139: invokespecial #73
142: astore        16
144: iconst_4
145: anewarray     #75
148: dup
149: iconst_0
150: aload         12
152: aastore
153: dup
154: iconst_1
155: aload         13
157: aastore
158: dup
159: iconst_2
160: aload         15
162: aastore
163: dup
164: iconst_3
165: aload         16
167: aastore
168: astore        17
170: aload         17
172: invokestatic  #76
175: astore        18
177: new           #72
180: dup
181: invokespecial #73
184: astore        19
186: new           #72
189: dup
190: invokespecial #73
193: astore        20
195: aload         20
197: invokevirtual #74
200: astore        21
202: new           #72
205: dup
206: invokespecial #73
209: astore        22
211: new           #72
214: dup
215: invokespecial #73
218: astore        23
220: iconst_4
221: anewarray     #75
224: dup
225: iconst_0
226: aload         19
228: aastore
229: dup
230: iconst_1
231: aload         20
233: aastore
234: dup
235: iconst_2
236: aload         22
238: aastore
239: dup
240: iconst_3
241: aload         23
243: aastore
244: astore        24
246: aload         24
248: invokestatic  #76
251: astore        25
253: new           #72
256: dup
257: invokespecial #73
260: astore        26
262: aload         26
264: invokevirtual #74
267: astore        27
269: new           #72
272: dup
273: invokespecial #73
276: astore        28
278: aload         28
280: invokevirtual #74
283: astore        29
285: new           #72
288: dup
289: invokespecial #73
292: astore        30
294: new           #72
297: dup
298: invokespecial #73
301: astore        31
303: aload         31
305: invokevirtual #74
308: astore        32
310: new           #72
313: dup
314: invokespecial #73
317: astore        33
319: new           #72
322: dup
323: invokespecial #73
326: astore        34
328: iconst_4
329: anewarray     #75
332: dup
333: iconst_0
334: aload         30
336: aastore
337: dup
338: iconst_1
339: aload         31
341: aastore
342: dup
343: iconst_2
344: aload         33
346: aastore
347: dup
348: iconst_3
349: aload         34
351: aastore
352: astore        35
354: aload         35
356: invokestatic  #76
359: astore        36
361: bipush        6
363: anewarray     #75
366: dup
367: iconst_0
368: aload         11
370: aastore
371: dup
372: iconst_1
373: aload         18
375: aastore
376: dup
377: iconst_2
378: aload         25
380: aastore
381: dup
382: iconst_3
383: aload         26
385: aastore
386: dup
387: iconst_4
388: aload         28
390: aastore
391: dup
392: iconst_5
393: aload         36
395: aastore
396: astore        37
398: aload         37
400: invokestatic  #77
403: astore        38
405: getstatic     #78
408: astore        39
410: aload         10
412: bipush        10
414: aload         38
416: aload         39
418: dconst_0
419: ldc2_w        #79
422: invokevirtual #81
425: astore        40
427: aload_2
428: iconst_0
429: aload         8
431: aload         39
433: ldc2_w        #265
436: ldc2_w        #267
439: ldc2_w        #269
442: invokevirtual #44
445: astore        41
447: ldc           #52
449: invokestatic  #15
452: goto          457
455: astore        41
457: new           #54
460: dup
461: invokespecial #55
464: ldc           #56
466: invokevirtual #57
469: dload_3
470: invokevirtual #58
473: ldc           #59
475: invokevirtual #57
478: dconst_0
479: invokevirtual #58
482: ldc           #56
484: invokevirtual #57
487: invokevirtual #60
490: dload_3
491: dconst_0
492: dcmpl
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #61
504: new           #54
507: dup
508: invokespecial #55
511: ldc           #56
513: invokevirtual #57
516: iload         5
518: invokevirtual #62
521: ldc           #59
523: invokevirtual #57
526: iconst_0
527: invokevirtual #62
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: iload         5
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #61
551: aload         6
553: invokestatic  #104
556: aload         8
558: invokestatic  #47
561: aload         14
563: invokestatic  #47
566: aload         17
568: invokestatic  #47
571: aload         18
573: invokestatic  #47
576: aload         21
578: invokestatic  #47
581: aload         24
583: invokestatic  #47
586: aload         25
588: invokestatic  #47
591: aload         27
593: invokestatic  #47
596: aload         29
598: invokestatic  #47
601: aload         32
603: invokestatic  #47
606: aload         35
608: invokestatic  #47
611: aload         36
613: invokestatic  #47
616: aload         37
618: invokestatic  #47
621: aload         38
623: invokestatic  #47
626: new           #54
629: dup
630: invokespecial #55
633: ldc           #56
635: invokevirtual #57
638: aload         39
640: invokevirtual #82
643: ldc           #59
645: invokevirtual #57
648: getstatic     #78
651: invokevirtual #82
654: ldc           #56
656: invokevirtual #57
659: invokevirtual #60
662: aload         39
664: getstatic     #78
667: invokevirtual #83
670: invokestatic  #61
673: aload         40
675: invokestatic  #47
678: return
Exception table:
from    to  target type
427   452   455   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 1563
End line: 1581
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double double8 = brentOptimizer3.computeObjectiveValue((double) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #271
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: dconst_1
61: invokevirtual #158
64: dstore        7
66: ldc           #52
68: invokestatic  #15
71: goto          76
74: astore        7
76: new           #54
79: dup
80: invokespecial #55
83: ldc           #56
85: invokevirtual #57
88: dload_3
89: invokevirtual #58
92: ldc           #59
94: invokevirtual #57
97: dconst_0
98: invokevirtual #58
101: ldc           #56
103: invokevirtual #57
106: invokevirtual #60
109: dload_3
110: dconst_0
111: dcmpl
112: ifne          119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #61
123: new           #54
126: dup
127: invokespecial #55
130: ldc           #56
132: invokevirtual #57
135: iload         5
137: invokevirtual #62
140: ldc           #59
142: invokevirtual #57
145: iconst_0
146: invokevirtual #62
149: ldc           #56
151: invokevirtual #57
154: invokevirtual #60
157: iload         5
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #61
170: aload         6
172: invokestatic  #104
175: return
Exception table:
from    to  target type
59    71    74   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 1584
End line: 1617
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray10 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException12 = new org.apache.commons.math3.exception.MathArithmeticException(localizable9, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException14 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable8, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction15 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.optimization.GoalType goalType17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.optimize((-127), (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction16, goalType17, (-0.0015270116852034877d), 1.208662425748988d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray10);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction15);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #71
57: istore        6
59: aconst_null
60: astore        7
62: aconst_null
63: astore        8
65: iconst_0
66: anewarray     #141
69: astore        9
71: aload         9
73: invokestatic  #142
76: astore        10
78: new           #273
81: dup
82: aload         8
84: aload         9
86: checkcast     #123
89: invokespecial #274
92: astore        11
94: aload         9
96: invokestatic  #245
99: astore        12
101: new           #122
104: dup
105: aload         7
107: aload         9
109: checkcast     #123
112: invokespecial #124
115: astore        13
117: aload         9
119: invokestatic  #142
122: astore        14
124: aload         9
126: invokestatic  #142
129: astore        15
131: aconst_null
132: astore        16
134: aload_2
135: bipush        -127
137: aload         15
139: aload         16
141: ldc2_w        #275
144: ldc2_w        #277
147: invokevirtual #81
150: astore        17
152: ldc           #45
154: invokestatic  #15
157: goto          162
160: astore        17
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: new           #54
210: dup
211: invokespecial #55
214: ldc           #56
216: invokevirtual #57
219: dload         4
221: invokevirtual #58
224: ldc           #59
226: invokevirtual #57
229: dconst_0
230: invokevirtual #58
233: ldc           #56
235: invokevirtual #57
238: invokevirtual #60
241: dload         4
243: dconst_0
244: dcmpl
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: new           #54
259: dup
260: invokespecial #55
263: ldc           #56
265: invokevirtual #57
268: iload         6
270: invokevirtual #62
273: ldc           #59
275: invokevirtual #57
278: iconst_0
279: invokevirtual #62
282: ldc           #56
284: invokevirtual #57
287: invokevirtual #60
290: iload         6
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #61
303: aload         9
305: invokestatic  #47
308: aload         10
310: invokestatic  #47
313: aload         12
315: invokestatic  #47
318: aload         14
320: invokestatic  #47
323: aload         15
325: invokestatic  #47
328: return
Exception table:
from    to  target type
134   157   160   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 1620
End line: 1696
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        org.apache.commons.math3.analysis.function.Sin sin4 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin5 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction6 = sin5.derivative();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin4, sin5, sin7, sin8 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.compose(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable12);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction13);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer18 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker17);
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray26 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22, sin24, sin25 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin29.derivative();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray33 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin28, sin29, sin31, sin32 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray33);
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction38 = sin37.derivative();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray46 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin20, univariateDifferentiable27, univariateDifferentiable34, sin35, sin37, univariateDifferentiable45 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray46);
        org.apache.commons.math3.optimization.GoalType goalType48 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer18.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType48, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair55 = brentOptimizer2.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable14, goalType48, 0.0d, 0.0d, 2704.000238418579d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateFunction6);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateFunction38);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertTrue("'" + goalType48 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType48.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair51);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: new           #72
42: dup
43: invokespecial #73
46: astore_2
47: new           #72
50: dup
51: invokespecial #73
54: astore_3
55: aload_3
56: invokevirtual #74
59: astore        4
61: new           #72
64: dup
65: invokespecial #73
68: astore        5
70: new           #72
73: dup
74: invokespecial #73
77: astore        6
79: iconst_4
80: anewarray     #75
83: dup
84: iconst_0
85: aload_2
86: aastore
87: dup
88: iconst_1
89: aload_3
90: aastore
91: dup
92: iconst_2
93: aload         5
95: aastore
96: dup
97: iconst_3
98: aload         6
100: aastore
101: astore        7
103: aload         7
105: invokestatic  #76
108: astore        8
110: aload         7
112: checkcast     #89
115: invokestatic  #109
118: astore        9
120: aload         7
122: invokestatic  #280
125: astore        10
127: aload         10
129: invokestatic  #281
132: astore        11
134: aload         11
136: invokestatic  #143
139: astore        12
141: aconst_null
142: astore        13
144: new           #8
147: dup
148: ldc2_w        #31
151: ldc2_w        #33
154: aload         13
156: invokespecial #13
159: astore        14
161: new           #72
164: dup
165: invokespecial #73
168: astore        15
170: new           #72
173: dup
174: invokespecial #73
177: astore        16
179: new           #72
182: dup
183: invokespecial #73
186: astore        17
188: aload         17
190: invokevirtual #74
193: astore        18
195: new           #72
198: dup
199: invokespecial #73
202: astore        19
204: new           #72
207: dup
208: invokespecial #73
211: astore        20
213: iconst_4
214: anewarray     #75
217: dup
218: iconst_0
219: aload         16
221: aastore
222: dup
223: iconst_1
224: aload         17
226: aastore
227: dup
228: iconst_2
229: aload         19
231: aastore
232: dup
233: iconst_3
234: aload         20
236: aastore
237: astore        21
239: aload         21
241: invokestatic  #76
244: astore        22
246: new           #72
249: dup
250: invokespecial #73
253: astore        23
255: new           #72
258: dup
259: invokespecial #73
262: astore        24
264: aload         24
266: invokevirtual #74
269: astore        25
271: new           #72
274: dup
275: invokespecial #73
278: astore        26
280: new           #72
283: dup
284: invokespecial #73
287: astore        27
289: iconst_4
290: anewarray     #75
293: dup
294: iconst_0
295: aload         23
297: aastore
298: dup
299: iconst_1
300: aload         24
302: aastore
303: dup
304: iconst_2
305: aload         26
307: aastore
308: dup
309: iconst_3
310: aload         27
312: aastore
313: astore        28
315: aload         28
317: invokestatic  #76
320: astore        29
322: new           #72
325: dup
326: invokespecial #73
329: astore        30
331: aload         30
333: invokevirtual #74
336: astore        31
338: new           #72
341: dup
342: invokespecial #73
345: astore        32
347: aload         32
349: invokevirtual #74
352: astore        33
354: new           #72
357: dup
358: invokespecial #73
361: astore        34
363: new           #72
366: dup
367: invokespecial #73
370: astore        35
372: aload         35
374: invokevirtual #74
377: astore        36
379: new           #72
382: dup
383: invokespecial #73
386: astore        37
388: new           #72
391: dup
392: invokespecial #73
395: astore        38
397: iconst_4
398: anewarray     #75
401: dup
402: iconst_0
403: aload         34
405: aastore
406: dup
407: iconst_1
408: aload         35
410: aastore
411: dup
412: iconst_2
413: aload         37
415: aastore
416: dup
417: iconst_3
418: aload         38
420: aastore
421: astore        39
423: aload         39
425: invokestatic  #76
428: astore        40
430: bipush        6
432: anewarray     #75
435: dup
436: iconst_0
437: aload         15
439: aastore
440: dup
441: iconst_1
442: aload         22
444: aastore
445: dup
446: iconst_2
447: aload         29
449: aastore
450: dup
451: iconst_3
452: aload         30
454: aastore
455: dup
456: iconst_4
457: aload         32
459: aastore
460: dup
461: iconst_5
462: aload         40
464: aastore
465: astore        41
467: aload         41
469: invokestatic  #77
472: astore        42
474: getstatic     #78
477: astore        43
479: aload         14
481: bipush        10
483: aload         42
485: aload         43
487: dconst_0
488: ldc2_w        #79
491: invokevirtual #81
494: astore        44
496: aload_1
497: iconst_0
498: aload         12
500: aload         43
502: dconst_0
503: dconst_0
504: ldc2_w        #216
507: invokevirtual #44
510: astore        45
512: ldc           #52
514: invokestatic  #15
517: goto          522
520: astore        45
522: aload         4
524: invokestatic  #47
527: aload         7
529: invokestatic  #47
532: aload         8
534: invokestatic  #47
537: aload         9
539: invokestatic  #47
542: aload         10
544: invokestatic  #47
547: aload         11
549: invokestatic  #47
552: aload         12
554: invokestatic  #47
557: aload         18
559: invokestatic  #47
562: aload         21
564: invokestatic  #47
567: aload         22
569: invokestatic  #47
572: aload         25
574: invokestatic  #47
577: aload         28
579: invokestatic  #47
582: aload         29
584: invokestatic  #47
587: aload         31
589: invokestatic  #47
592: aload         33
594: invokestatic  #47
597: aload         36
599: invokestatic  #47
602: aload         39
604: invokestatic  #47
607: aload         40
609: invokestatic  #47
612: aload         41
614: invokestatic  #47
617: aload         42
619: invokestatic  #47
622: new           #54
625: dup
626: invokespecial #55
629: ldc           #56
631: invokevirtual #57
634: aload         43
636: invokevirtual #82
639: ldc           #59
641: invokevirtual #57
644: getstatic     #78
647: invokevirtual #82
650: ldc           #56
652: invokevirtual #57
655: invokevirtual #60
658: aload         43
660: getstatic     #78
663: invokevirtual #83
666: invokestatic  #61
669: aload         44
671: invokestatic  #47
674: return
Exception table:
from    to  target type
496   517   520   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 1699
End line: 1771
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = sin12.derivative();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray15 = new org.apache.commons.math3.analysis.UnivariateFunction[] { univariateFunction11, univariateFunction13, sin14 };
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateFunctionArray15);
        org.apache.commons.math3.exception.MathIllegalArgumentException mathIllegalArgumentException17 = new org.apache.commons.math3.exception.MathIllegalArgumentException(localizable9, (java.lang.Object[]) univariateFunctionArray15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction18 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateFunctionArray15);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker21 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer22 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker21);
        int int23 = brentOptimizer22.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin26.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray28);
        org.apache.commons.math3.optimization.GoalType goalType32 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer22.optimize(97, univariateFunction31, goalType32, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer22.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType38 = brentOptimizer22.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer22.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.optimization.GoalType goalType43 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer22.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin41, goalType43, 3.141592653589793d, 0.0d);
        double double47 = brentOptimizer22.getMax();
        org.apache.commons.math3.optimization.GoalType goalType48 = brentOptimizer22.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer3.optimize((-45), univariateFunction18, goalType48, (double) (short) 10, 6.6917246496340396E41d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-45) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertNotNull(univariateFunctionArray15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateFunction18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + goalType32 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType32.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertNotNull(univariatePointValuePair37);
        org.junit.Assert.assertTrue("'" + goalType38 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType38.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertTrue("'" + goalType43 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType43.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType48 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType48.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #50
63: istore        7
65: aconst_null
66: astore        8
68: new           #72
71: dup
72: invokespecial #73
75: astore        9
77: aload         9
79: invokevirtual #74
82: astore        10
84: new           #72
87: dup
88: invokespecial #73
91: astore        11
93: aload         11
95: invokevirtual #74
98: astore        12
100: new           #72
103: dup
104: invokespecial #73
107: astore        13
109: iconst_3
110: anewarray     #283
113: dup
114: iconst_0
115: aload         10
117: aastore
118: dup
119: iconst_1
120: aload         12
122: aastore
123: dup
124: iconst_2
125: aload         13
127: aastore
128: astore        14
130: aload         14
132: invokestatic  #117
135: astore        15
137: new           #284
140: dup
141: aload         8
143: aload         14
145: checkcast     #123
148: invokespecial #285
151: astore        16
153: aload         14
155: invokestatic  #117
158: astore        17
160: aconst_null
161: astore        18
163: new           #8
166: dup
167: ldc2_w        #31
170: ldc2_w        #33
173: aload         18
175: invokespecial #13
178: astore        19
180: aload         19
182: invokevirtual #71
185: istore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: new           #72
199: dup
200: invokespecial #73
203: astore        22
205: aload         22
207: invokevirtual #74
210: astore        23
212: iconst_2
213: anewarray     #75
216: dup
217: iconst_0
218: aload         21
220: aastore
221: dup
222: iconst_1
223: aload         22
225: aastore
226: astore        24
228: aload         24
230: invokestatic  #76
233: astore        25
235: aload         24
237: invokestatic  #77
240: astore        26
242: aload         24
244: checkcast     #89
247: invokestatic  #90
250: astore        27
252: getstatic     #78
255: astore        28
257: aload         19
259: bipush        97
261: aload         27
263: aload         28
265: ldc2_w        #91
268: ldc2_w        #93
271: ldc2_w        #91
274: invokevirtual #44
277: astore        29
279: aload         19
281: invokevirtual #51
284: astore        30
286: aload         19
288: invokevirtual #110
291: astore        31
293: aload         19
295: invokevirtual #51
298: astore        32
300: new           #72
303: dup
304: invokespecial #73
307: astore        33
309: aload         33
311: invokevirtual #74
314: astore        34
316: getstatic     #78
319: astore        35
321: aload         19
323: bipush        97
325: aload         33
327: aload         35
329: ldc2_w        #133
332: dconst_0
333: invokevirtual #81
336: astore        36
338: aload         19
340: invokevirtual #49
343: dstore        37
345: aload         19
347: invokevirtual #110
350: astore        39
352: aload_2
353: bipush        -45
355: aload         17
357: aload         39
359: ldc2_w        #91
362: ldc2_w        #99
365: invokevirtual #81
368: astore        40
370: ldc_w         #286
373: invokestatic  #15
376: goto          381
379: astore        40
381: new           #54
384: dup
385: invokespecial #55
388: ldc           #56
390: invokevirtual #57
393: iload_3
394: invokevirtual #62
397: ldc           #59
399: invokevirtual #57
402: iconst_0
403: invokevirtual #62
406: ldc           #56
408: invokevirtual #57
411: invokevirtual #60
414: iload_3
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #61
426: new           #54
429: dup
430: invokespecial #55
433: ldc           #56
435: invokevirtual #57
438: dload         4
440: invokevirtual #58
443: ldc           #59
445: invokevirtual #57
448: dconst_0
449: invokevirtual #58
452: ldc           #56
454: invokevirtual #57
457: invokevirtual #60
460: dload         4
462: dconst_0
463: dcmpl
464: ifne          471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #61
475: new           #54
478: dup
479: invokespecial #55
482: ldc           #56
484: invokevirtual #57
487: iload         6
489: invokevirtual #62
492: ldc           #59
494: invokevirtual #57
497: iconst_0
498: invokevirtual #62
501: ldc           #56
503: invokevirtual #57
506: invokevirtual #60
509: iload         6
511: ifne          518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #61
522: new           #54
525: dup
526: invokespecial #55
529: ldc           #56
531: invokevirtual #57
534: iload         7
536: invokevirtual #62
539: ldc           #59
541: invokevirtual #57
544: iconst_0
545: invokevirtual #62
548: ldc           #56
550: invokevirtual #57
553: invokevirtual #60
556: iload         7
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #61
569: aload         10
571: invokestatic  #47
574: aload         12
576: invokestatic  #47
579: aload         14
581: invokestatic  #47
584: aload         15
586: invokestatic  #47
589: aload         17
591: invokestatic  #47
594: new           #54
597: dup
598: invokespecial #55
601: ldc           #56
603: invokevirtual #57
606: iload         20
608: invokevirtual #62
611: ldc           #59
613: invokevirtual #57
616: iconst_0
617: invokevirtual #62
620: ldc           #56
622: invokevirtual #57
625: invokevirtual #60
628: iload         20
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #61
641: aload         23
643: invokestatic  #47
646: aload         24
648: invokestatic  #47
651: aload         25
653: invokestatic  #47
656: aload         26
658: invokestatic  #47
661: aload         27
663: invokestatic  #47
666: new           #54
669: dup
670: invokespecial #55
673: ldc           #56
675: invokevirtual #57
678: aload         28
680: invokevirtual #82
683: ldc           #59
685: invokevirtual #57
688: getstatic     #78
691: invokevirtual #82
694: ldc           #56
696: invokevirtual #57
699: invokevirtual #60
702: aload         28
704: getstatic     #78
707: invokevirtual #83
710: invokestatic  #61
713: aload         29
715: invokestatic  #47
718: aload         30
720: invokestatic  #47
723: new           #54
726: dup
727: invokespecial #55
730: ldc           #56
732: invokevirtual #57
735: aload         31
737: invokevirtual #82
740: ldc           #59
742: invokevirtual #57
745: getstatic     #78
748: invokevirtual #82
751: ldc           #56
753: invokevirtual #57
756: invokevirtual #60
759: aload         31
761: getstatic     #78
764: invokevirtual #83
767: invokestatic  #61
770: aload         32
772: invokestatic  #47
775: aload         34
777: invokestatic  #47
780: new           #54
783: dup
784: invokespecial #55
787: ldc           #56
789: invokevirtual #57
792: aload         35
794: invokevirtual #82
797: ldc           #59
799: invokevirtual #57
802: getstatic     #78
805: invokevirtual #82
808: ldc           #56
810: invokevirtual #57
813: invokevirtual #60
816: aload         35
818: getstatic     #78
821: invokevirtual #83
824: invokestatic  #61
827: aload         36
829: invokestatic  #47
832: new           #54
835: dup
836: invokespecial #55
839: ldc           #56
841: invokevirtual #57
844: dload         37
846: invokevirtual #58
849: ldc           #59
851: invokevirtual #57
854: dconst_0
855: invokevirtual #58
858: ldc           #56
860: invokevirtual #57
863: invokevirtual #60
866: dload         37
868: dconst_0
869: dcmpl
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #61
881: new           #54
884: dup
885: invokespecial #55
888: ldc           #56
890: invokevirtual #57
893: aload         39
895: invokevirtual #82
898: ldc           #59
900: invokevirtual #57
903: getstatic     #78
906: invokevirtual #82
909: ldc           #56
911: invokevirtual #57
914: invokevirtual #60
917: aload         39
919: getstatic     #78
922: invokevirtual #83
925: invokestatic  #61
928: return
Exception table:
from    to  target type
352   376   379   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 1774
End line: 1805
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        double double11 = sin8.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin8);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = sin8.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = sin8.derivative();
        org.apache.commons.math3.optimization.GoalType goalType15 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.optimize(5, (org.apache.commons.math3.analysis.UnivariateFunction) sin8, goalType15, 3.6757332503588205d, (double) (-127));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (5) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.8414709825806044d + "'", double11 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertTrue("'" + goalType15 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType15.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: new           #72
62: dup
63: invokespecial #73
66: astore        7
68: aload         7
70: invokevirtual #74
73: astore        8
75: aload         7
77: ldc2_w        #86
80: invokevirtual #88
83: dstore        9
85: aload         7
87: invokestatic  #143
90: astore        11
92: aload         7
94: invokevirtual #74
97: astore        12
99: aload         7
101: invokevirtual #74
104: astore        13
106: getstatic     #118
109: astore        14
111: aload_2
112: iconst_5
113: aload         7
115: aload         14
117: ldc2_w        #288
120: ldc2_w        #290
123: invokevirtual #81
126: astore        15
128: ldc_w         #292
131: invokestatic  #15
134: goto          139
137: astore        15
139: new           #54
142: dup
143: invokespecial #55
146: ldc           #56
148: invokevirtual #57
151: iload_3
152: invokevirtual #62
155: ldc           #59
157: invokevirtual #57
160: iconst_0
161: invokevirtual #62
164: ldc           #56
166: invokevirtual #57
169: invokevirtual #60
172: iload_3
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #61
184: new           #54
187: dup
188: invokespecial #55
191: ldc           #56
193: invokevirtual #57
196: dload         4
198: invokevirtual #58
201: ldc           #59
203: invokevirtual #57
206: dconst_0
207: invokevirtual #58
210: ldc           #56
212: invokevirtual #57
215: invokevirtual #60
218: dload         4
220: dconst_0
221: dcmpl
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #61
233: new           #54
236: dup
237: invokespecial #55
240: ldc           #56
242: invokevirtual #57
245: iload         6
247: invokevirtual #62
250: ldc           #59
252: invokevirtual #57
255: iconst_0
256: invokevirtual #62
259: ldc           #56
261: invokevirtual #57
264: invokevirtual #60
267: iload         6
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #61
280: aload         8
282: invokestatic  #47
285: new           #54
288: dup
289: invokespecial #55
292: ldc           #56
294: invokevirtual #57
297: dload         9
299: invokevirtual #58
302: ldc           #59
304: invokevirtual #57
307: ldc2_w        #23
310: invokevirtual #58
313: ldc           #56
315: invokevirtual #57
318: invokevirtual #60
321: dload         9
323: ldc2_w        #23
326: dcmpl
327: ifne          334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #61
338: aload         11
340: invokestatic  #47
343: aload         12
345: invokestatic  #47
348: aload         13
350: invokestatic  #47
353: new           #54
356: dup
357: invokespecial #55
360: ldc           #56
362: invokevirtual #57
365: aload         14
367: invokevirtual #82
370: ldc           #59
372: invokevirtual #57
375: getstatic     #118
378: invokevirtual #82
381: ldc           #56
383: invokevirtual #57
386: invokevirtual #60
389: aload         14
391: getstatic     #118
394: invokevirtual #83
397: invokestatic  #61
400: return
Exception table:
from    to  target type
111   134   137   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 1808
End line: 1819
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) (-127), 1.3617928857159403d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -127 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #290
34: ldc2_w        #294
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #296
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 1822
End line: 1840
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair11 = brentOptimizer3.optimize((-127), univariateFunction7, goalType8, 1000.0d, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #297
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aconst_null
54: astore        5
56: aconst_null
57: astore        6
59: aload_2
60: bipush        -127
62: aload         5
64: aload         6
66: ldc2_w        #298
69: dconst_0
70: invokevirtual #81
73: astore        7
75: ldc           #45
77: invokestatic  #15
80: goto          85
83: astore        7
85: new           #54
88: dup
89: invokespecial #55
92: ldc           #56
94: invokevirtual #57
97: iload_3
98: invokevirtual #62
101: ldc           #59
103: invokevirtual #57
106: iconst_0
107: invokevirtual #62
110: ldc           #56
112: invokevirtual #57
115: invokevirtual #60
118: iload_3
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #61
130: new           #54
133: dup
134: invokespecial #55
137: ldc           #56
139: invokevirtual #57
142: iload         4
144: invokevirtual #62
147: ldc           #59
149: invokevirtual #57
152: iconst_0
153: invokevirtual #62
156: ldc           #56
158: invokevirtual #57
161: invokevirtual #60
164: iload         4
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #61
177: return
Exception table:
from    to  target type
59    80    83   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 1843
End line: 1910
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getMaxEvaluations();
        int int20 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        double double22 = brentOptimizer3.getMin();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction24 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(bivariateFunction24, (double) '#');
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer30 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker29);
        int int31 = brentOptimizer30.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray36 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable37 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray36);
        org.apache.commons.math3.optimization.GoalType goalType40 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer30.optimize(97, univariateFunction39, goalType40, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer30.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType46 = brentOptimizer30.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair50 = brentOptimizer3.optimize((-1), univariateFunction26, goalType46, (double) Float.NaN, 1.1102230246251565E-16d, 1.2177655131703127d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray36);
        org.junit.Assert.assertNotNull(univariateDifferentiable37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateFunction39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair44);
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
        org.junit.Assert.assertTrue("'" + goalType46 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType46.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #300
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #50
148: istore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: aload_2
157: invokevirtual #51
160: astore        16
162: aload_2
163: invokevirtual #231
166: dstore        17
168: aconst_null
169: astore        19
171: aload         19
173: ldc2_w        #263
176: invokestatic  #152
179: astore        20
181: aconst_null
182: astore        21
184: new           #8
187: dup
188: ldc2_w        #31
191: ldc2_w        #33
194: aload         21
196: invokespecial #13
199: astore        22
201: aload         22
203: invokevirtual #71
206: istore        23
208: new           #72
211: dup
212: invokespecial #73
215: astore        24
217: new           #72
220: dup
221: invokespecial #73
224: astore        25
226: aload         25
228: invokevirtual #74
231: astore        26
233: iconst_2
234: anewarray     #75
237: dup
238: iconst_0
239: aload         24
241: aastore
242: dup
243: iconst_1
244: aload         25
246: aastore
247: astore        27
249: aload         27
251: invokestatic  #76
254: astore        28
256: aload         27
258: invokestatic  #77
261: astore        29
263: aload         27
265: checkcast     #89
268: invokestatic  #90
271: astore        30
273: getstatic     #78
276: astore        31
278: aload         22
280: bipush        97
282: aload         30
284: aload         31
286: ldc2_w        #91
289: ldc2_w        #93
292: ldc2_w        #91
295: invokevirtual #44
298: astore        32
300: aload         22
302: invokevirtual #51
305: astore        33
307: aload         22
309: invokevirtual #110
312: astore        34
314: aload_2
315: iconst_m1
316: aload         20
318: aload         34
320: ldc2_w        #302
323: ldc2_w        #304
326: ldc2_w        #306
329: invokevirtual #44
332: astore        35
334: ldc_w         #308
337: invokestatic  #15
340: goto          345
343: astore        35
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: iload_3
358: invokevirtual #62
361: ldc           #59
363: invokevirtual #57
366: iconst_0
367: invokevirtual #62
370: ldc           #56
372: invokevirtual #57
375: invokevirtual #60
378: iload_3
379: ifne          386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #61
390: aload         6
392: invokestatic  #47
395: aload         7
397: invokestatic  #47
400: aload         8
402: invokestatic  #47
405: aload         9
407: invokestatic  #47
410: aload         10
412: invokestatic  #47
415: new           #54
418: dup
419: invokespecial #55
422: ldc           #56
424: invokevirtual #57
427: aload         11
429: invokevirtual #82
432: ldc           #59
434: invokevirtual #57
437: getstatic     #78
440: invokevirtual #82
443: ldc           #56
445: invokevirtual #57
448: invokevirtual #60
451: aload         11
453: getstatic     #78
456: invokevirtual #83
459: invokestatic  #61
462: aload         12
464: invokestatic  #47
467: aload         13
469: invokestatic  #47
472: new           #54
475: dup
476: invokespecial #55
479: ldc           #56
481: invokevirtual #57
484: iload         14
486: invokevirtual #62
489: ldc           #59
491: invokevirtual #57
494: bipush        97
496: invokevirtual #62
499: ldc           #56
501: invokevirtual #57
504: invokevirtual #60
507: iload         14
509: bipush        97
511: if_icmpne     518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #61
522: new           #54
525: dup
526: invokespecial #55
529: ldc           #56
531: invokevirtual #57
534: iload         15
536: invokevirtual #62
539: ldc           #59
541: invokevirtual #57
544: bipush        97
546: invokevirtual #62
549: ldc           #56
551: invokevirtual #57
554: invokevirtual #60
557: iload         15
559: bipush        97
561: if_icmpne     568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #61
572: aload         16
574: invokestatic  #47
577: new           #54
580: dup
581: invokespecial #55
584: ldc           #56
586: invokevirtual #57
589: dload         17
591: invokevirtual #58
594: ldc           #59
596: invokevirtual #57
599: ldc2_w        #91
602: invokevirtual #58
605: ldc           #56
607: invokevirtual #57
610: invokevirtual #60
613: dload         17
615: ldc2_w        #91
618: dcmpl
619: ifne          626
622: iconst_1
623: goto          627
626: iconst_0
627: invokestatic  #61
630: aload         20
632: invokestatic  #47
635: new           #54
638: dup
639: invokespecial #55
642: ldc           #56
644: invokevirtual #57
647: iload         23
649: invokevirtual #62
652: ldc           #59
654: invokevirtual #57
657: iconst_0
658: invokevirtual #62
661: ldc           #56
663: invokevirtual #57
666: invokevirtual #60
669: iload         23
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #61
682: aload         26
684: invokestatic  #47
687: aload         27
689: invokestatic  #47
692: aload         28
694: invokestatic  #47
697: aload         29
699: invokestatic  #47
702: aload         30
704: invokestatic  #47
707: new           #54
710: dup
711: invokespecial #55
714: ldc           #56
716: invokevirtual #57
719: aload         31
721: invokevirtual #82
724: ldc           #59
726: invokevirtual #57
729: getstatic     #78
732: invokevirtual #82
735: ldc           #56
737: invokevirtual #57
740: invokevirtual #60
743: aload         31
745: getstatic     #78
748: invokevirtual #83
751: invokestatic  #61
754: aload         32
756: invokestatic  #47
759: aload         33
761: invokestatic  #47
764: new           #54
767: dup
768: invokespecial #55
771: ldc           #56
773: invokevirtual #57
776: aload         34
778: invokevirtual #82
781: ldc           #59
783: invokevirtual #57
786: getstatic     #78
789: invokevirtual #82
792: ldc           #56
794: invokevirtual #57
797: invokevirtual #60
800: aload         34
802: getstatic     #78
805: invokevirtual #83
808: invokestatic  #61
811: return
Exception table:
from    to  target type
314   340   343   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 1913
End line: 1924
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-1.3017526366697145d), (-1.3017526366697145d), univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -1.302 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #309
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #228
34: ldc2_w        #228
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #310
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 1927
End line: 1958
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        int int21 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #311
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: aload_2
157: invokevirtual #50
160: istore        16
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: aload         14
303: invokevirtual #82
306: ldc           #59
308: invokevirtual #57
311: getstatic     #78
314: invokevirtual #82
317: ldc           #56
319: invokevirtual #57
322: invokevirtual #60
325: aload         14
327: getstatic     #78
330: invokevirtual #83
333: invokestatic  #61
336: aload         15
338: invokestatic  #47
341: new           #54
344: dup
345: invokespecial #55
348: ldc           #56
350: invokevirtual #57
353: iload         16
355: invokevirtual #62
358: ldc           #59
360: invokevirtual #57
363: bipush        97
365: invokevirtual #62
368: ldc           #56
370: invokevirtual #57
373: invokevirtual #60
376: iload         16
378: bipush        97
380: if_icmpne     387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #61
391: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 1961
End line: 2054
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: invokevirtual #51
590: astore        58
592: new           #54
595: dup
596: invokespecial #55
599: ldc           #56
601: invokevirtual #57
604: iload_3
605: invokevirtual #62
608: ldc           #59
610: invokevirtual #57
613: iconst_0
614: invokevirtual #62
617: ldc           #56
619: invokevirtual #57
622: invokevirtual #60
625: iload_3
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #61
637: aload         6
639: invokestatic  #47
642: aload         7
644: invokestatic  #47
647: aload         8
649: invokestatic  #47
652: aload         9
654: invokestatic  #47
657: aload         10
659: invokestatic  #47
662: new           #54
665: dup
666: invokespecial #55
669: ldc           #56
671: invokevirtual #57
674: aload         11
676: invokevirtual #82
679: ldc           #59
681: invokevirtual #57
684: getstatic     #78
687: invokevirtual #82
690: ldc           #56
692: invokevirtual #57
695: invokevirtual #60
698: aload         11
700: getstatic     #78
703: invokevirtual #83
706: invokestatic  #61
709: aload         12
711: invokestatic  #47
714: new           #54
717: dup
718: invokespecial #55
721: ldc           #56
723: invokevirtual #57
726: iload         13
728: invokevirtual #62
731: ldc           #59
733: invokevirtual #57
736: bipush        97
738: invokevirtual #62
741: ldc           #56
743: invokevirtual #57
746: invokevirtual #60
749: iload         13
751: bipush        97
753: if_icmpne     760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #61
764: aload         19
766: invokestatic  #47
769: aload         22
771: invokestatic  #47
774: aload         23
776: invokestatic  #47
779: aload         26
781: invokestatic  #47
784: aload         28
786: invokestatic  #47
789: new           #54
792: dup
793: invokespecial #55
796: ldc           #56
798: invokevirtual #57
801: iload         31
803: invokevirtual #62
806: ldc           #59
808: invokevirtual #57
811: iconst_0
812: invokevirtual #62
815: ldc           #56
817: invokevirtual #57
820: invokevirtual #60
823: iload         31
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #61
836: new           #54
839: dup
840: invokespecial #55
843: ldc           #56
845: invokevirtual #57
848: dload         32
850: invokevirtual #58
853: ldc           #59
855: invokevirtual #57
858: dconst_0
859: invokevirtual #58
862: ldc           #56
864: invokevirtual #57
867: invokevirtual #60
870: dload         32
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #61
885: aload         36
887: invokestatic  #47
890: aload         39
892: invokestatic  #47
895: aload         40
897: invokestatic  #47
900: aload         41
902: invokestatic  #47
905: new           #54
908: dup
909: invokespecial #55
912: ldc           #56
914: invokevirtual #57
917: iload         44
919: invokevirtual #62
922: ldc           #59
924: invokevirtual #57
927: iconst_0
928: invokevirtual #62
931: ldc           #56
933: invokevirtual #57
936: invokevirtual #60
939: iload         44
941: ifne          948
944: iconst_1
945: goto          949
948: iconst_0
949: invokestatic  #61
952: aload         47
954: invokestatic  #47
957: aload         48
959: invokestatic  #47
962: aload         49
964: invokestatic  #47
967: aload         50
969: invokestatic  #47
972: aload         51
974: invokestatic  #47
977: new           #54
980: dup
981: invokespecial #55
984: ldc           #56
986: invokevirtual #57
989: aload         52
991: invokevirtual #82
994: ldc           #59
996: invokevirtual #57
999: getstatic     #78
1002: invokevirtual #82
1005: ldc           #56
1007: invokevirtual #57
1010: invokevirtual #60
1013: aload         52
1015: getstatic     #78
1018: invokevirtual #83
1021: invokestatic  #61
1024: aload         53
1026: invokestatic  #47
1029: aload         54
1031: invokestatic  #47
1034: new           #54
1037: dup
1038: invokespecial #55
1041: ldc           #56
1043: invokevirtual #57
1046: aload         55
1048: invokevirtual #82
1051: ldc           #59
1053: invokevirtual #57
1056: getstatic     #78
1059: invokevirtual #82
1062: ldc           #56
1064: invokevirtual #57
1067: invokevirtual #60
1070: aload         55
1072: getstatic     #78
1075: invokevirtual #83
1078: invokestatic  #61
1081: aload         56
1083: invokestatic  #47
1086: aload         57
1088: invokestatic  #47
1091: aload         58
1093: invokestatic  #47
1096: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 2057
End line: 2075
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair7 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #318
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #51
63: astore        6
65: ldc           #52
67: invokestatic  #15
70: goto          75
73: astore        6
75: new           #54
78: dup
79: invokespecial #55
82: ldc           #56
84: invokevirtual #57
87: iload_3
88: invokevirtual #62
91: ldc           #59
93: invokevirtual #57
96: iconst_0
97: invokevirtual #62
100: ldc           #56
102: invokevirtual #57
105: invokevirtual #60
108: iload_3
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #61
120: new           #54
123: dup
124: invokespecial #55
127: ldc           #56
129: invokevirtual #57
132: iload         4
134: invokevirtual #62
137: ldc           #59
139: invokevirtual #57
142: iconst_0
143: invokevirtual #62
146: ldc           #56
148: invokevirtual #57
151: invokevirtual #60
154: iload         4
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #61
167: new           #54
170: dup
171: invokespecial #55
174: ldc           #56
176: invokevirtual #57
179: iload         5
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload         5
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #61
214: return
Exception table:
from    to  target type
59    70    73   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2078
End line: 2109
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        double double21 = brentOptimizer3.computeObjectiveValue(20.000000953674316d);
        int int22 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.7913081858681398d + "'", double21 == 0.7913081858681398d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: ldc2_w        #165
154: invokevirtual #158
157: dstore        15
159: aload_2
160: invokevirtual #50
163: istore        17
165: new           #54
168: dup
169: invokespecial #55
172: ldc           #56
174: invokevirtual #57
177: iload_3
178: invokevirtual #62
181: ldc           #59
183: invokevirtual #57
186: iconst_0
187: invokevirtual #62
190: ldc           #56
192: invokevirtual #57
195: invokevirtual #60
198: iload_3
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #61
210: aload         6
212: invokestatic  #47
215: aload         7
217: invokestatic  #47
220: aload         8
222: invokestatic  #47
225: aload         9
227: invokestatic  #47
230: aload         10
232: invokestatic  #47
235: new           #54
238: dup
239: invokespecial #55
242: ldc           #56
244: invokevirtual #57
247: aload         11
249: invokevirtual #82
252: ldc           #59
254: invokevirtual #57
257: getstatic     #78
260: invokevirtual #82
263: ldc           #56
265: invokevirtual #57
268: invokevirtual #60
271: aload         11
273: getstatic     #78
276: invokevirtual #83
279: invokestatic  #61
282: aload         12
284: invokestatic  #47
287: aload         13
289: invokestatic  #47
292: new           #54
295: dup
296: invokespecial #55
299: ldc           #56
301: invokevirtual #57
304: aload         14
306: invokevirtual #82
309: ldc           #59
311: invokevirtual #57
314: getstatic     #78
317: invokevirtual #82
320: ldc           #56
322: invokevirtual #57
325: invokevirtual #60
328: aload         14
330: getstatic     #78
333: invokevirtual #83
336: invokestatic  #61
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: dload         15
353: invokevirtual #58
356: ldc           #59
358: invokevirtual #57
361: ldc2_w        #320
364: invokevirtual #58
367: ldc           #56
369: invokevirtual #57
372: invokevirtual #60
375: dload         15
377: ldc2_w        #320
380: dcmpl
381: ifne          388
384: iconst_1
385: goto          389
388: iconst_0
389: invokestatic  #61
392: new           #54
395: dup
396: invokespecial #55
399: ldc           #56
401: invokevirtual #57
404: iload         17
406: invokevirtual #62
409: ldc           #59
411: invokevirtual #57
414: bipush        97
416: invokevirtual #62
419: ldc           #56
421: invokevirtual #57
424: invokevirtual #60
427: iload         17
429: bipush        97
431: if_icmpne     438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #61
442: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2112
End line: 2164
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable6 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray7 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction8 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray7);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException9 = new org.apache.commons.math3.exception.MathArithmeticException(localizable6, (java.lang.Object[]) differentiableUnivariateFunctionArray7);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray7);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray7);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray7);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable13 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction12);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer17 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker16);
        int int18 = brentOptimizer17.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray23 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin20, sin21 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray23);
        org.apache.commons.math3.optimization.GoalType goalType27 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer17.optimize(97, univariateFunction26, goalType27, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer17.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType33 = brentOptimizer17.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable13, goalType33, (double) (byte) 0, 89009.0d, (-0.903690571697673d));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray7);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction8);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction10);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction12);
        org.junit.Assert.assertNotNull(univariateDifferentiable13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray23);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType27.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair31);
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #322
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aconst_null
48: astore        5
50: iconst_0
51: anewarray     #141
54: astore        6
56: aload         6
58: invokestatic  #142
61: astore        7
63: new           #273
66: dup
67: aload         5
69: aload         6
71: checkcast     #123
74: invokespecial #274
77: astore        8
79: aload         6
81: invokestatic  #245
84: astore        9
86: aload         6
88: invokestatic  #245
91: astore        10
93: aload         6
95: invokestatic  #245
98: astore        11
100: aload         11
102: invokestatic  #143
105: astore        12
107: aconst_null
108: astore        13
110: new           #8
113: dup
114: ldc2_w        #31
117: ldc2_w        #33
120: aload         13
122: invokespecial #13
125: astore        14
127: aload         14
129: invokevirtual #71
132: istore        15
134: new           #72
137: dup
138: invokespecial #73
141: astore        16
143: new           #72
146: dup
147: invokespecial #73
150: astore        17
152: aload         17
154: invokevirtual #74
157: astore        18
159: iconst_2
160: anewarray     #75
163: dup
164: iconst_0
165: aload         16
167: aastore
168: dup
169: iconst_1
170: aload         17
172: aastore
173: astore        19
175: aload         19
177: invokestatic  #76
180: astore        20
182: aload         19
184: invokestatic  #77
187: astore        21
189: aload         19
191: checkcast     #89
194: invokestatic  #90
197: astore        22
199: getstatic     #78
202: astore        23
204: aload         14
206: bipush        97
208: aload         22
210: aload         23
212: ldc2_w        #91
215: ldc2_w        #93
218: ldc2_w        #91
221: invokevirtual #44
224: astore        24
226: aload         14
228: invokevirtual #51
231: astore        25
233: aload         14
235: invokevirtual #110
238: astore        26
240: aload_2
241: iconst_2
242: aload         12
244: aload         26
246: dconst_0
247: ldc2_w        #323
250: ldc2_w        #325
253: invokevirtual #44
256: astore        27
258: ldc_w         #327
261: invokestatic  #15
264: goto          269
267: astore        27
269: new           #54
272: dup
273: invokespecial #55
276: ldc           #56
278: invokevirtual #57
281: dload_3
282: invokevirtual #58
285: ldc           #59
287: invokevirtual #57
290: dconst_0
291: invokevirtual #58
294: ldc           #56
296: invokevirtual #57
299: invokevirtual #60
302: dload_3
303: dconst_0
304: dcmpl
305: ifne          312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #61
316: aload         6
318: invokestatic  #47
321: aload         7
323: invokestatic  #47
326: aload         9
328: invokestatic  #47
331: aload         10
333: invokestatic  #47
336: aload         11
338: invokestatic  #47
341: aload         12
343: invokestatic  #47
346: new           #54
349: dup
350: invokespecial #55
353: ldc           #56
355: invokevirtual #57
358: iload         15
360: invokevirtual #62
363: ldc           #59
365: invokevirtual #57
368: iconst_0
369: invokevirtual #62
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: iload         15
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #61
393: aload         18
395: invokestatic  #47
398: aload         19
400: invokestatic  #47
403: aload         20
405: invokestatic  #47
408: aload         21
410: invokestatic  #47
413: aload         22
415: invokestatic  #47
418: new           #54
421: dup
422: invokespecial #55
425: ldc           #56
427: invokevirtual #57
430: aload         23
432: invokevirtual #82
435: ldc           #59
437: invokevirtual #57
440: getstatic     #78
443: invokevirtual #82
446: ldc           #56
448: invokevirtual #57
451: invokevirtual #60
454: aload         23
456: getstatic     #78
459: invokevirtual #83
462: invokestatic  #61
465: aload         24
467: invokestatic  #47
470: aload         25
472: invokestatic  #47
475: new           #54
478: dup
479: invokespecial #55
482: ldc           #56
484: invokevirtual #57
487: aload         26
489: invokevirtual #82
492: ldc           #59
494: invokevirtual #57
497: getstatic     #78
500: invokevirtual #82
503: ldc           #56
505: invokevirtual #57
508: invokevirtual #60
511: aload         26
513: getstatic     #78
516: invokevirtual #83
519: invokestatic  #61
522: return
Exception table:
from    to  target type
240   264   267   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2167
End line: 2209
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #329
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #103
209: astore        23
211: new           #54
214: dup
215: invokespecial #55
218: ldc           #56
220: invokevirtual #57
223: iload_3
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload_3
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: aload         6
258: invokestatic  #47
261: aload         7
263: invokestatic  #47
266: aload         8
268: invokestatic  #47
271: aload         9
273: invokestatic  #47
276: aload         10
278: invokestatic  #47
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: aload         11
295: invokevirtual #82
298: ldc           #59
300: invokevirtual #57
303: getstatic     #78
306: invokevirtual #82
309: ldc           #56
311: invokevirtual #57
314: invokevirtual #60
317: aload         11
319: getstatic     #78
322: invokevirtual #83
325: invokestatic  #61
328: aload         12
330: invokestatic  #47
333: aload         13
335: invokestatic  #47
338: new           #54
341: dup
342: invokespecial #55
345: ldc           #56
347: invokevirtual #57
350: aload         14
352: invokevirtual #82
355: ldc           #59
357: invokevirtual #57
360: getstatic     #78
363: invokevirtual #82
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: aload         14
376: getstatic     #78
379: invokevirtual #83
382: invokestatic  #61
385: aload         15
387: invokestatic  #47
390: aload         17
392: invokestatic  #47
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: aload         18
409: invokevirtual #82
412: ldc           #59
414: invokevirtual #57
417: getstatic     #78
420: invokevirtual #82
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: aload         18
433: getstatic     #78
436: invokevirtual #83
439: invokestatic  #61
442: aload         19
444: invokestatic  #47
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: dload         20
461: invokevirtual #58
464: ldc           #59
466: invokevirtual #57
469: dconst_0
470: invokevirtual #58
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: dload         20
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #61
496: new           #54
499: dup
500: invokespecial #55
503: ldc           #56
505: invokevirtual #57
508: iload         22
510: invokevirtual #62
513: ldc           #59
515: invokevirtual #57
518: bipush        97
520: invokevirtual #62
523: ldc           #56
525: invokevirtual #57
528: invokevirtual #60
531: iload         22
533: bipush        97
535: if_icmpne     542
538: iconst_1
539: goto          543
542: iconst_0
543: invokestatic  #61
546: aload         23
548: invokestatic  #104
551: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2212
End line: 2316
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, goalType20, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair25 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray27 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction28 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray27);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction29 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction29, (double) '#');
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin51, sin52, sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray58 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, univariateDifferentiable39, univariateDifferentiable46, sin47, sin49, univariateDifferentiable57 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray58);
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction61 = sin60.derivative();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin62.derivative();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray66 = new org.apache.commons.math3.analysis.UnivariateFunction[] { differentiableUnivariateFunction28, univariateFunction31, univariateDifferentiable59, sin60, univariateFunction63, sin64 };
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction67 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateFunctionArray66);
        org.apache.commons.math3.optimization.GoalType goalType68 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair71 = brentOptimizer3.optimize((int) (byte) 100, univariateFunction67, goalType68, 1.4916681462400413E-154d, 4.041945072145264d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(multivariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertNotNull(univariatePointValuePair25);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray27);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction28);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertNotNull(univariateFunction61);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateFunctionArray66);
        org.junit.Assert.assertNotNull(univariateFunction67);
        org.junit.Assert.assertTrue("'" + goalType68 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType68.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aconst_null
60: astore        6
62: new           #72
65: dup
66: invokespecial #73
69: astore        7
71: new           #72
74: dup
75: invokespecial #73
78: astore        8
80: aload         8
82: invokevirtual #74
85: astore        9
87: new           #72
90: dup
91: invokespecial #73
94: astore        10
96: new           #72
99: dup
100: invokespecial #73
103: astore        11
105: iconst_4
106: anewarray     #75
109: dup
110: iconst_0
111: aload         7
113: aastore
114: dup
115: iconst_1
116: aload         8
118: aastore
119: dup
120: iconst_2
121: aload         10
123: aastore
124: dup
125: iconst_3
126: aload         11
128: aastore
129: astore        12
131: aload         12
133: invokestatic  #76
136: astore        13
138: aload         12
140: checkcast     #89
143: invokestatic  #109
146: astore        14
148: aload         12
150: invokestatic  #77
153: astore        15
155: aload         6
157: aload         15
159: ldc2_w        #181
162: invokestatic  #183
165: astore        16
167: getstatic     #118
170: astore        17
172: aload_2
173: bipush        10
175: aload         15
177: aload         17
179: ldc2_w        #184
182: ldc2_w        #186
185: ldc2_w        #188
188: invokevirtual #44
191: astore        18
193: aload_2
194: invokevirtual #51
197: astore        19
199: iconst_0
200: anewarray     #141
203: astore        20
205: aload         20
207: invokestatic  #142
210: astore        21
212: aconst_null
213: astore        22
215: aload         22
217: ldc2_w        #263
220: invokestatic  #37
223: astore        23
225: new           #72
228: dup
229: invokespecial #73
232: astore        24
234: new           #72
237: dup
238: invokespecial #73
241: astore        25
243: new           #72
246: dup
247: invokespecial #73
250: astore        26
252: aload         26
254: invokevirtual #74
257: astore        27
259: new           #72
262: dup
263: invokespecial #73
266: astore        28
268: new           #72
271: dup
272: invokespecial #73
275: astore        29
277: iconst_4
278: anewarray     #75
281: dup
282: iconst_0
283: aload         25
285: aastore
286: dup
287: iconst_1
288: aload         26
290: aastore
291: dup
292: iconst_2
293: aload         28
295: aastore
296: dup
297: iconst_3
298: aload         29
300: aastore
301: astore        30
303: aload         30
305: invokestatic  #76
308: astore        31
310: new           #72
313: dup
314: invokespecial #73
317: astore        32
319: new           #72
322: dup
323: invokespecial #73
326: astore        33
328: aload         33
330: invokevirtual #74
333: astore        34
335: new           #72
338: dup
339: invokespecial #73
342: astore        35
344: new           #72
347: dup
348: invokespecial #73
351: astore        36
353: iconst_4
354: anewarray     #75
357: dup
358: iconst_0
359: aload         32
361: aastore
362: dup
363: iconst_1
364: aload         33
366: aastore
367: dup
368: iconst_2
369: aload         35
371: aastore
372: dup
373: iconst_3
374: aload         36
376: aastore
377: astore        37
379: aload         37
381: invokestatic  #76
384: astore        38
386: new           #72
389: dup
390: invokespecial #73
393: astore        39
395: aload         39
397: invokevirtual #74
400: astore        40
402: new           #72
405: dup
406: invokespecial #73
409: astore        41
411: aload         41
413: invokevirtual #74
416: astore        42
418: new           #72
421: dup
422: invokespecial #73
425: astore        43
427: new           #72
430: dup
431: invokespecial #73
434: astore        44
436: aload         44
438: invokevirtual #74
441: astore        45
443: new           #72
446: dup
447: invokespecial #73
450: astore        46
452: new           #72
455: dup
456: invokespecial #73
459: astore        47
461: iconst_4
462: anewarray     #75
465: dup
466: iconst_0
467: aload         43
469: aastore
470: dup
471: iconst_1
472: aload         44
474: aastore
475: dup
476: iconst_2
477: aload         46
479: aastore
480: dup
481: iconst_3
482: aload         47
484: aastore
485: astore        48
487: aload         48
489: invokestatic  #76
492: astore        49
494: bipush        6
496: anewarray     #75
499: dup
500: iconst_0
501: aload         24
503: aastore
504: dup
505: iconst_1
506: aload         31
508: aastore
509: dup
510: iconst_2
511: aload         38
513: aastore
514: dup
515: iconst_3
516: aload         39
518: aastore
519: dup
520: iconst_4
521: aload         41
523: aastore
524: dup
525: iconst_5
526: aload         49
528: aastore
529: astore        50
531: aload         50
533: invokestatic  #77
536: astore        51
538: new           #72
541: dup
542: invokespecial #73
545: astore        52
547: aload         52
549: invokevirtual #74
552: astore        53
554: new           #72
557: dup
558: invokespecial #73
561: astore        54
563: aload         54
565: invokevirtual #74
568: astore        55
570: new           #72
573: dup
574: invokespecial #73
577: astore        56
579: aload         56
581: invokevirtual #74
584: astore        57
586: bipush        6
588: anewarray     #283
591: dup
592: iconst_0
593: aload         21
595: aastore
596: dup
597: iconst_1
598: aload         23
600: aastore
601: dup
602: iconst_2
603: aload         51
605: aastore
606: dup
607: iconst_3
608: aload         52
610: aastore
611: dup
612: iconst_4
613: aload         55
615: aastore
616: dup
617: iconst_5
618: aload         56
620: aastore
621: astore        58
623: aload         58
625: invokestatic  #109
628: astore        59
630: getstatic     #78
633: astore        60
635: aload_2
636: bipush        100
638: aload         59
640: aload         60
642: ldc2_w        #331
645: ldc2_w        #206
648: invokevirtual #81
651: astore        61
653: ldc           #119
655: invokestatic  #15
658: goto          663
661: astore        61
663: new           #54
666: dup
667: invokespecial #55
670: ldc           #56
672: invokevirtual #57
675: iload_3
676: invokevirtual #62
679: ldc           #59
681: invokevirtual #57
684: iconst_0
685: invokevirtual #62
688: ldc           #56
690: invokevirtual #57
693: invokevirtual #60
696: iload_3
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #61
708: new           #54
711: dup
712: invokespecial #55
715: ldc           #56
717: invokevirtual #57
720: iload         4
722: invokevirtual #62
725: ldc           #59
727: invokevirtual #57
730: iconst_0
731: invokevirtual #62
734: ldc           #56
736: invokevirtual #57
739: invokevirtual #60
742: iload         4
744: ifne          751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #61
755: new           #54
758: dup
759: invokespecial #55
762: ldc           #56
764: invokevirtual #57
767: iload         5
769: invokevirtual #62
772: ldc           #59
774: invokevirtual #57
777: iconst_0
778: invokevirtual #62
781: ldc           #56
783: invokevirtual #57
786: invokevirtual #60
789: iload         5
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #61
802: aload         9
804: invokestatic  #47
807: aload         12
809: invokestatic  #47
812: aload         13
814: invokestatic  #47
817: aload         14
819: invokestatic  #47
822: aload         15
824: invokestatic  #47
827: aload         16
829: invokestatic  #47
832: new           #54
835: dup
836: invokespecial #55
839: ldc           #56
841: invokevirtual #57
844: aload         17
846: invokevirtual #82
849: ldc           #59
851: invokevirtual #57
854: getstatic     #118
857: invokevirtual #82
860: ldc           #56
862: invokevirtual #57
865: invokevirtual #60
868: aload         17
870: getstatic     #118
873: invokevirtual #83
876: invokestatic  #61
879: aload         18
881: invokestatic  #47
884: aload         19
886: invokestatic  #47
889: aload         20
891: invokestatic  #47
894: aload         21
896: invokestatic  #47
899: aload         23
901: invokestatic  #47
904: aload         27
906: invokestatic  #47
909: aload         30
911: invokestatic  #47
914: aload         31
916: invokestatic  #47
919: aload         34
921: invokestatic  #47
924: aload         37
926: invokestatic  #47
929: aload         38
931: invokestatic  #47
934: aload         40
936: invokestatic  #47
939: aload         42
941: invokestatic  #47
944: aload         45
946: invokestatic  #47
949: aload         48
951: invokestatic  #47
954: aload         49
956: invokestatic  #47
959: aload         50
961: invokestatic  #47
964: aload         51
966: invokestatic  #47
969: aload         53
971: invokestatic  #47
974: aload         55
976: invokestatic  #47
979: aload         57
981: invokestatic  #47
984: aload         58
986: invokestatic  #47
989: aload         59
991: invokestatic  #47
994: new           #54
997: dup
998: invokespecial #55
1001: ldc           #56
1003: invokevirtual #57
1006: aload         60
1008: invokevirtual #82
1011: ldc           #59
1013: invokevirtual #57
1016: getstatic     #78
1019: invokevirtual #82
1022: ldc           #56
1024: invokevirtual #57
1027: invokevirtual #60
1030: aload         60
1032: getstatic     #78
1035: invokevirtual #83
1038: invokestatic  #61
1041: return
Exception table:
from    to  target type
635   658   661   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2319
End line: 2323
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 2, (double) 4L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #170
32: ldc2_w        #334
35: invokespecial #25
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 2326
End line: 2344
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair7 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #51
63: astore        6
65: ldc           #52
67: invokestatic  #15
70: goto          75
73: astore        6
75: new           #54
78: dup
79: invokespecial #55
82: ldc           #56
84: invokevirtual #57
87: iload_3
88: invokevirtual #62
91: ldc           #59
93: invokevirtual #57
96: iconst_0
97: invokevirtual #62
100: ldc           #56
102: invokevirtual #57
105: invokevirtual #60
108: iload_3
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #61
120: new           #54
123: dup
124: invokespecial #55
127: ldc           #56
129: invokevirtual #57
132: iload         4
134: invokevirtual #62
137: ldc           #59
139: invokevirtual #57
142: iconst_0
143: invokevirtual #62
146: ldc           #56
148: invokevirtual #57
151: invokevirtual #60
154: iload         4
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #61
167: new           #54
170: dup
171: invokespecial #55
174: ldc           #56
176: invokevirtual #57
179: iload         5
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload         5
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #61
214: return
Exception table:
from    to  target type
59    70    73   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 2347
End line: 2378
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        int int21 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #337
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aload_2
157: invokevirtual #50
160: istore        16
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: iload         14
303: invokevirtual #62
306: ldc           #59
308: invokevirtual #57
311: bipush        8
313: invokevirtual #62
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: iload         14
326: bipush        8
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #61
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: iload         15
353: invokevirtual #62
356: ldc           #59
358: invokevirtual #57
361: bipush        8
363: invokevirtual #62
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: iload         15
376: bipush        8
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #61
389: new           #54
392: dup
393: invokespecial #55
396: ldc           #56
398: invokevirtual #57
401: iload         16
403: invokevirtual #62
406: ldc           #59
408: invokevirtual #57
411: bipush        97
413: invokevirtual #62
416: ldc           #56
418: invokevirtual #57
421: invokevirtual #60
424: iload         16
426: bipush        97
428: if_icmpne     435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #61
439: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 2381
End line: 2446
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction9 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(bivariateFunction9, 0.0d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer15 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker14);
        int int16 = brentOptimizer15.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction20 = sin19.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray21 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable22 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray21);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray21);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray21);
        org.apache.commons.math3.optimization.GoalType goalType25 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair29 = brentOptimizer15.optimize(97, univariateFunction24, goalType25, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer15.doOptimize();
        int int31 = brentOptimizer15.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable33 = null;
        org.apache.commons.math3.exception.util.Localizable localizable34 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray35 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray35);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException37 = new org.apache.commons.math3.exception.MathArithmeticException(localizable34, (java.lang.Object[]) differentiableUnivariateFunctionArray35);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction38 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray35);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException39 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable33, (java.lang.Object[]) differentiableUnivariateFunctionArray35);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray35);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray35);
        org.apache.commons.math3.optimization.GoalType goalType42 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer15.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction41, goalType42, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer3.optimize(0, univariateFunction11, goalType42, 2.154434690031884d, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(univariateFunction20);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray21);
        org.junit.Assert.assertNotNull(univariateDifferentiable22);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType25.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair29);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray35);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction36);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction38);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #50
63: istore        7
65: aconst_null
66: astore        8
68: aload         8
70: dconst_0
71: invokestatic  #152
74: astore        9
76: aconst_null
77: astore        10
79: new           #8
82: dup
83: ldc2_w        #31
86: ldc2_w        #33
89: aload         10
91: invokespecial #13
94: astore        11
96: aload         11
98: invokevirtual #71
101: istore        12
103: new           #72
106: dup
107: invokespecial #73
110: astore        13
112: new           #72
115: dup
116: invokespecial #73
119: astore        14
121: aload         14
123: invokevirtual #74
126: astore        15
128: iconst_2
129: anewarray     #75
132: dup
133: iconst_0
134: aload         13
136: aastore
137: dup
138: iconst_1
139: aload         14
141: aastore
142: astore        16
144: aload         16
146: invokestatic  #76
149: astore        17
151: aload         16
153: invokestatic  #77
156: astore        18
158: aload         16
160: checkcast     #89
163: invokestatic  #90
166: astore        19
168: getstatic     #78
171: astore        20
173: aload         11
175: bipush        97
177: aload         19
179: aload         20
181: ldc2_w        #91
184: ldc2_w        #93
187: ldc2_w        #91
190: invokevirtual #44
193: astore        21
195: aload         11
197: invokevirtual #51
200: astore        22
202: aload         11
204: invokevirtual #50
207: istore        23
209: aconst_null
210: astore        24
212: aconst_null
213: astore        25
215: iconst_0
216: anewarray     #141
219: astore        26
221: aload         26
223: invokestatic  #142
226: astore        27
228: new           #273
231: dup
232: aload         25
234: aload         26
236: checkcast     #123
239: invokespecial #274
242: astore        28
244: aload         26
246: invokestatic  #245
249: astore        29
251: new           #122
254: dup
255: aload         24
257: aload         26
259: checkcast     #123
262: invokespecial #124
265: astore        30
267: aload         26
269: checkcast     #89
272: invokestatic  #90
275: astore        31
277: aload         26
279: invokestatic  #142
282: astore        32
284: getstatic     #118
287: astore        33
289: aload         11
291: bipush        97
293: aload         32
295: aload         33
297: ldc2_w        #339
300: ldc2_w        #341
303: invokevirtual #81
306: astore        34
308: aload_2
309: iconst_0
310: aload         9
312: aload         33
314: ldc2_w        #148
317: ldc2_w        #91
320: invokevirtual #81
323: astore        35
325: ldc           #52
327: invokestatic  #15
330: goto          335
333: astore        35
335: new           #54
338: dup
339: invokespecial #55
342: ldc           #56
344: invokevirtual #57
347: iload_3
348: invokevirtual #62
351: ldc           #59
353: invokevirtual #57
356: iconst_0
357: invokevirtual #62
360: ldc           #56
362: invokevirtual #57
365: invokevirtual #60
368: iload_3
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #61
380: new           #54
383: dup
384: invokespecial #55
387: ldc           #56
389: invokevirtual #57
392: dload         4
394: invokevirtual #58
397: ldc           #59
399: invokevirtual #57
402: dconst_0
403: invokevirtual #58
406: ldc           #56
408: invokevirtual #57
411: invokevirtual #60
414: dload         4
416: dconst_0
417: dcmpl
418: ifne          425
421: iconst_1
422: goto          426
425: iconst_0
426: invokestatic  #61
429: new           #54
432: dup
433: invokespecial #55
436: ldc           #56
438: invokevirtual #57
441: iload         6
443: invokevirtual #62
446: ldc           #59
448: invokevirtual #57
451: iconst_0
452: invokevirtual #62
455: ldc           #56
457: invokevirtual #57
460: invokevirtual #60
463: iload         6
465: ifne          472
468: iconst_1
469: goto          473
472: iconst_0
473: invokestatic  #61
476: new           #54
479: dup
480: invokespecial #55
483: ldc           #56
485: invokevirtual #57
488: iload         7
490: invokevirtual #62
493: ldc           #59
495: invokevirtual #57
498: iconst_0
499: invokevirtual #62
502: ldc           #56
504: invokevirtual #57
507: invokevirtual #60
510: iload         7
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #61
523: aload         9
525: invokestatic  #47
528: new           #54
531: dup
532: invokespecial #55
535: ldc           #56
537: invokevirtual #57
540: iload         12
542: invokevirtual #62
545: ldc           #59
547: invokevirtual #57
550: iconst_0
551: invokevirtual #62
554: ldc           #56
556: invokevirtual #57
559: invokevirtual #60
562: iload         12
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #61
575: aload         15
577: invokestatic  #47
580: aload         16
582: invokestatic  #47
585: aload         17
587: invokestatic  #47
590: aload         18
592: invokestatic  #47
595: aload         19
597: invokestatic  #47
600: new           #54
603: dup
604: invokespecial #55
607: ldc           #56
609: invokevirtual #57
612: aload         20
614: invokevirtual #82
617: ldc           #59
619: invokevirtual #57
622: getstatic     #78
625: invokevirtual #82
628: ldc           #56
630: invokevirtual #57
633: invokevirtual #60
636: aload         20
638: getstatic     #78
641: invokevirtual #83
644: invokestatic  #61
647: aload         21
649: invokestatic  #47
652: aload         22
654: invokestatic  #47
657: new           #54
660: dup
661: invokespecial #55
664: ldc           #56
666: invokevirtual #57
669: iload         23
671: invokevirtual #62
674: ldc           #59
676: invokevirtual #57
679: bipush        97
681: invokevirtual #62
684: ldc           #56
686: invokevirtual #57
689: invokevirtual #60
692: iload         23
694: bipush        97
696: if_icmpne     703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #61
707: aload         26
709: invokestatic  #47
712: aload         27
714: invokestatic  #47
717: aload         29
719: invokestatic  #47
722: aload         31
724: invokestatic  #47
727: aload         32
729: invokestatic  #47
732: new           #54
735: dup
736: invokespecial #55
739: ldc           #56
741: invokevirtual #57
744: aload         33
746: invokevirtual #82
749: ldc           #59
751: invokevirtual #57
754: getstatic     #118
757: invokevirtual #82
760: ldc           #56
762: invokevirtual #57
765: invokevirtual #60
768: aload         33
770: getstatic     #118
773: invokevirtual #83
776: invokestatic  #61
779: aload         34
781: invokestatic  #47
784: return
Exception table:
from    to  target type
308   330   333   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 2449
End line: 2542
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        double double78 = brentOptimizer3.computeObjectiveValue((double) 9.999998f);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.08759068068109035d + "'", double78 == 0.08759068068109035d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: ldc2_w        #344
590: invokevirtual #158
593: dstore        58
595: new           #54
598: dup
599: invokespecial #55
602: ldc           #56
604: invokevirtual #57
607: iload_3
608: invokevirtual #62
611: ldc           #59
613: invokevirtual #57
616: iconst_0
617: invokevirtual #62
620: ldc           #56
622: invokevirtual #57
625: invokevirtual #60
628: iload_3
629: ifne          636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #61
640: aload         6
642: invokestatic  #47
645: aload         7
647: invokestatic  #47
650: aload         8
652: invokestatic  #47
655: aload         9
657: invokestatic  #47
660: aload         10
662: invokestatic  #47
665: new           #54
668: dup
669: invokespecial #55
672: ldc           #56
674: invokevirtual #57
677: aload         11
679: invokevirtual #82
682: ldc           #59
684: invokevirtual #57
687: getstatic     #78
690: invokevirtual #82
693: ldc           #56
695: invokevirtual #57
698: invokevirtual #60
701: aload         11
703: getstatic     #78
706: invokevirtual #83
709: invokestatic  #61
712: aload         12
714: invokestatic  #47
717: new           #54
720: dup
721: invokespecial #55
724: ldc           #56
726: invokevirtual #57
729: iload         13
731: invokevirtual #62
734: ldc           #59
736: invokevirtual #57
739: bipush        97
741: invokevirtual #62
744: ldc           #56
746: invokevirtual #57
749: invokevirtual #60
752: iload         13
754: bipush        97
756: if_icmpne     763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #61
767: aload         19
769: invokestatic  #47
772: aload         22
774: invokestatic  #47
777: aload         23
779: invokestatic  #47
782: aload         26
784: invokestatic  #47
787: aload         28
789: invokestatic  #47
792: new           #54
795: dup
796: invokespecial #55
799: ldc           #56
801: invokevirtual #57
804: iload         31
806: invokevirtual #62
809: ldc           #59
811: invokevirtual #57
814: iconst_0
815: invokevirtual #62
818: ldc           #56
820: invokevirtual #57
823: invokevirtual #60
826: iload         31
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #61
839: new           #54
842: dup
843: invokespecial #55
846: ldc           #56
848: invokevirtual #57
851: dload         32
853: invokevirtual #58
856: ldc           #59
858: invokevirtual #57
861: dconst_0
862: invokevirtual #58
865: ldc           #56
867: invokevirtual #57
870: invokevirtual #60
873: dload         32
875: dconst_0
876: dcmpl
877: ifne          884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #61
888: aload         36
890: invokestatic  #47
893: aload         39
895: invokestatic  #47
898: aload         40
900: invokestatic  #47
903: aload         41
905: invokestatic  #47
908: new           #54
911: dup
912: invokespecial #55
915: ldc           #56
917: invokevirtual #57
920: iload         44
922: invokevirtual #62
925: ldc           #59
927: invokevirtual #57
930: iconst_0
931: invokevirtual #62
934: ldc           #56
936: invokevirtual #57
939: invokevirtual #60
942: iload         44
944: ifne          951
947: iconst_1
948: goto          952
951: iconst_0
952: invokestatic  #61
955: aload         47
957: invokestatic  #47
960: aload         48
962: invokestatic  #47
965: aload         49
967: invokestatic  #47
970: aload         50
972: invokestatic  #47
975: aload         51
977: invokestatic  #47
980: new           #54
983: dup
984: invokespecial #55
987: ldc           #56
989: invokevirtual #57
992: aload         52
994: invokevirtual #82
997: ldc           #59
999: invokevirtual #57
1002: getstatic     #78
1005: invokevirtual #82
1008: ldc           #56
1010: invokevirtual #57
1013: invokevirtual #60
1016: aload         52
1018: getstatic     #78
1021: invokevirtual #83
1024: invokestatic  #61
1027: aload         53
1029: invokestatic  #47
1032: aload         54
1034: invokestatic  #47
1037: new           #54
1040: dup
1041: invokespecial #55
1044: ldc           #56
1046: invokevirtual #57
1049: aload         55
1051: invokevirtual #82
1054: ldc           #59
1056: invokevirtual #57
1059: getstatic     #78
1062: invokevirtual #82
1065: ldc           #56
1067: invokevirtual #57
1070: invokevirtual #60
1073: aload         55
1075: getstatic     #78
1078: invokevirtual #83
1081: invokestatic  #61
1084: aload         56
1086: invokestatic  #47
1089: aload         57
1091: invokestatic  #47
1094: new           #54
1097: dup
1098: invokespecial #55
1101: ldc           #56
1103: invokevirtual #57
1106: dload         58
1108: invokevirtual #58
1111: ldc           #59
1113: invokevirtual #57
1116: ldc2_w        #346
1119: invokevirtual #58
1122: ldc           #56
1124: invokevirtual #57
1127: invokevirtual #60
1130: dload         58
1132: ldc2_w        #346
1135: dcmpl
1136: ifne          1143
1139: iconst_1
1140: goto          1144
1143: iconst_0
1144: invokestatic  #61
1147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 2545
End line: 2558
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair4 = brentOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #51
48: astore_3
49: ldc           #52
51: invokestatic  #15
54: goto          58
57: astore_3
58: new           #54
61: dup
62: invokespecial #55
65: ldc           #56
67: invokevirtual #57
70: iload_2
71: invokevirtual #62
74: ldc           #59
76: invokevirtual #57
79: iconst_0
80: invokevirtual #62
83: ldc           #56
85: invokevirtual #57
88: invokevirtual #60
91: iload_2
92: ifne          99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #61
103: return
Exception table:
from    to  target type
44    54    57   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 2561
End line: 2583
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        int int8 = brentOptimizer3.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair9 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #349
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #50
69: istore        9
71: aload_2
72: invokevirtual #51
75: astore        10
77: ldc           #52
79: invokestatic  #15
82: goto          87
85: astore        10
87: new           #54
90: dup
91: invokespecial #55
94: ldc           #56
96: invokevirtual #57
99: dload_3
100: invokevirtual #58
103: ldc           #59
105: invokevirtual #57
108: dconst_0
109: invokevirtual #58
112: ldc           #56
114: invokevirtual #57
117: invokevirtual #60
120: dload_3
121: dconst_0
122: dcmpl
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #61
134: new           #54
137: dup
138: invokespecial #55
141: ldc           #56
143: invokevirtual #57
146: iload         5
148: invokevirtual #62
151: ldc           #59
153: invokevirtual #57
156: iconst_0
157: invokevirtual #62
160: ldc           #56
162: invokevirtual #57
165: invokevirtual #60
168: iload         5
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #61
181: aload         6
183: invokestatic  #104
186: new           #54
189: dup
190: invokespecial #55
193: ldc           #56
195: invokevirtual #57
198: dload         7
200: invokevirtual #58
203: ldc           #59
205: invokevirtual #57
208: dconst_0
209: invokevirtual #58
212: ldc           #56
214: invokevirtual #57
217: invokevirtual #60
220: dload         7
222: dconst_0
223: dcmpl
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #61
235: new           #54
238: dup
239: invokespecial #55
242: ldc           #56
244: invokevirtual #57
247: iload         9
249: invokevirtual #62
252: ldc           #59
254: invokevirtual #57
257: iconst_0
258: invokevirtual #62
261: ldc           #56
263: invokevirtual #57
266: invokevirtual #60
269: iload         9
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #61
282: return
Exception table:
from    to  target type
71    82    85   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 2586
End line: 2652
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer26 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker25);
        int int27 = brentOptimizer26.getEvaluations();
        int int28 = brentOptimizer26.getEvaluations();
        int int29 = brentOptimizer26.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction31 = null;
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray37 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, sin33, sin35, sin36 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction42 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction31, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable40, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType43 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer26.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable40, goalType43, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer3.optimize((int) (short) 0, univariateFunction22, goalType43, (-0.88966182231646d), (-0.8687261884639957d), 81377.39571257407d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateFunction39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(multivariateFunction42);
        org.junit.Assert.assertTrue("'" + goalType43 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType43.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: aload_2
151: invokevirtual #51
154: astore        16
156: aconst_null
157: astore        17
159: aconst_null
160: astore        18
162: new           #8
165: dup
166: ldc2_w        #31
169: ldc2_w        #33
172: aload         18
174: invokespecial #13
177: astore        19
179: aload         19
181: invokevirtual #71
184: istore        20
186: aload         19
188: invokevirtual #71
191: istore        21
193: aload         19
195: invokevirtual #71
198: istore        22
200: aconst_null
201: astore        23
203: new           #72
206: dup
207: invokespecial #73
210: astore        24
212: new           #72
215: dup
216: invokespecial #73
219: astore        25
221: aload         25
223: invokevirtual #74
226: astore        26
228: new           #72
231: dup
232: invokespecial #73
235: astore        27
237: new           #72
240: dup
241: invokespecial #73
244: astore        28
246: iconst_4
247: anewarray     #75
250: dup
251: iconst_0
252: aload         24
254: aastore
255: dup
256: iconst_1
257: aload         25
259: aastore
260: dup
261: iconst_2
262: aload         27
264: aastore
265: dup
266: iconst_3
267: aload         28
269: aastore
270: astore        29
272: aload         29
274: invokestatic  #76
277: astore        30
279: aload         29
281: checkcast     #89
284: invokestatic  #109
287: astore        31
289: aload         29
291: invokestatic  #77
294: astore        32
296: aload         23
298: aload         32
300: ldc2_w        #181
303: invokestatic  #183
306: astore        33
308: getstatic     #118
311: astore        34
313: aload         19
315: bipush        10
317: aload         32
319: aload         34
321: ldc2_w        #184
324: ldc2_w        #186
327: ldc2_w        #188
330: invokevirtual #44
333: astore        35
335: aload_2
336: iconst_0
337: aload         17
339: aload         34
341: ldc2_w        #351
344: ldc2_w        #353
347: ldc2_w        #355
350: invokevirtual #44
353: astore        36
355: ldc           #45
357: invokestatic  #15
360: goto          365
363: astore        36
365: new           #54
368: dup
369: invokespecial #55
372: ldc           #56
374: invokevirtual #57
377: iload_3
378: invokevirtual #62
381: ldc           #59
383: invokevirtual #57
386: iconst_0
387: invokevirtual #62
390: ldc           #56
392: invokevirtual #57
395: invokevirtual #60
398: iload_3
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #61
410: aload         6
412: invokestatic  #47
415: aload         7
417: invokestatic  #47
420: aload         8
422: invokestatic  #47
425: aload         9
427: invokestatic  #47
430: aload         10
432: invokestatic  #47
435: new           #54
438: dup
439: invokespecial #55
442: ldc           #56
444: invokevirtual #57
447: aload         11
449: invokevirtual #82
452: ldc           #59
454: invokevirtual #57
457: getstatic     #78
460: invokevirtual #82
463: ldc           #56
465: invokevirtual #57
468: invokevirtual #60
471: aload         11
473: getstatic     #78
476: invokevirtual #83
479: invokestatic  #61
482: aload         12
484: invokestatic  #47
487: aload         13
489: invokestatic  #47
492: new           #54
495: dup
496: invokespecial #55
499: ldc           #56
501: invokevirtual #57
504: dload         14
506: invokevirtual #58
509: ldc           #59
511: invokevirtual #57
514: ldc2_w        #91
517: invokevirtual #58
520: ldc           #56
522: invokevirtual #57
525: invokevirtual #60
528: dload         14
530: ldc2_w        #91
533: dcmpl
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #61
545: aload         16
547: invokestatic  #47
550: new           #54
553: dup
554: invokespecial #55
557: ldc           #56
559: invokevirtual #57
562: iload         20
564: invokevirtual #62
567: ldc           #59
569: invokevirtual #57
572: iconst_0
573: invokevirtual #62
576: ldc           #56
578: invokevirtual #57
581: invokevirtual #60
584: iload         20
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #61
597: new           #54
600: dup
601: invokespecial #55
604: ldc           #56
606: invokevirtual #57
609: iload         21
611: invokevirtual #62
614: ldc           #59
616: invokevirtual #57
619: iconst_0
620: invokevirtual #62
623: ldc           #56
625: invokevirtual #57
628: invokevirtual #60
631: iload         21
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #61
644: new           #54
647: dup
648: invokespecial #55
651: ldc           #56
653: invokevirtual #57
656: iload         22
658: invokevirtual #62
661: ldc           #59
663: invokevirtual #57
666: iconst_0
667: invokevirtual #62
670: ldc           #56
672: invokevirtual #57
675: invokevirtual #60
678: iload         22
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #61
691: aload         26
693: invokestatic  #47
696: aload         29
698: invokestatic  #47
701: aload         30
703: invokestatic  #47
706: aload         31
708: invokestatic  #47
711: aload         32
713: invokestatic  #47
716: aload         33
718: invokestatic  #47
721: new           #54
724: dup
725: invokespecial #55
728: ldc           #56
730: invokevirtual #57
733: aload         34
735: invokevirtual #82
738: ldc           #59
740: invokevirtual #57
743: getstatic     #118
746: invokevirtual #82
749: ldc           #56
751: invokevirtual #57
754: invokevirtual #60
757: aload         34
759: getstatic     #118
762: invokevirtual #83
765: invokestatic  #61
768: aload         35
770: invokestatic  #47
773: return
Exception table:
from    to  target type
335   360   363   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 2655
End line: 2707
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        double double11 = sin8.value(0.8414709825806044d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer15 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker14);
        int int16 = brentOptimizer15.getEvaluations();
        int int17 = brentOptimizer15.getEvaluations();
        int int18 = brentOptimizer15.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction20 = null;
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray26 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22, sin24, sin25 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction20, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType32 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer15.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, goalType32, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair40 = brentOptimizer3.optimize((int) (short) -1, (org.apache.commons.math3.analysis.UnivariateFunction) sin8, goalType32, 4.641666190203543d, (-0.8687261884639957d), (double) (-126.99999f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.7456241401813645d + "'", double11 == 0.7456241401813645d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(multivariateFunction31);
        org.junit.Assert.assertTrue("'" + goalType32 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType32.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #103
57: astore        5
59: new           #72
62: dup
63: invokespecial #73
66: astore        6
68: aload         6
70: invokevirtual #74
73: astore        7
75: aload         6
77: ldc2_w        #23
80: invokevirtual #88
83: dstore        8
85: aconst_null
86: astore        10
88: new           #8
91: dup
92: ldc2_w        #31
95: ldc2_w        #33
98: aload         10
100: invokespecial #13
103: astore        11
105: aload         11
107: invokevirtual #71
110: istore        12
112: aload         11
114: invokevirtual #71
117: istore        13
119: aload         11
121: invokevirtual #71
124: istore        14
126: aconst_null
127: astore        15
129: new           #72
132: dup
133: invokespecial #73
136: astore        16
138: new           #72
141: dup
142: invokespecial #73
145: astore        17
147: aload         17
149: invokevirtual #74
152: astore        18
154: new           #72
157: dup
158: invokespecial #73
161: astore        19
163: new           #72
166: dup
167: invokespecial #73
170: astore        20
172: iconst_4
173: anewarray     #75
176: dup
177: iconst_0
178: aload         16
180: aastore
181: dup
182: iconst_1
183: aload         17
185: aastore
186: dup
187: iconst_2
188: aload         19
190: aastore
191: dup
192: iconst_3
193: aload         20
195: aastore
196: astore        21
198: aload         21
200: invokestatic  #76
203: astore        22
205: aload         21
207: checkcast     #89
210: invokestatic  #109
213: astore        23
215: aload         21
217: invokestatic  #77
220: astore        24
222: aload         15
224: aload         24
226: ldc2_w        #181
229: invokestatic  #183
232: astore        25
234: getstatic     #118
237: astore        26
239: aload         11
241: bipush        10
243: aload         24
245: aload         26
247: ldc2_w        #184
250: ldc2_w        #186
253: ldc2_w        #188
256: invokevirtual #44
259: astore        27
261: aload_2
262: iconst_m1
263: aload         6
265: aload         26
267: ldc2_w        #358
270: ldc2_w        #353
273: ldc2_w        #360
276: invokevirtual #44
279: astore        28
281: ldc_w         #308
284: invokestatic  #15
287: goto          292
290: astore        28
292: new           #54
295: dup
296: invokespecial #55
299: ldc           #56
301: invokevirtual #57
304: iload_3
305: invokevirtual #62
308: ldc           #59
310: invokevirtual #57
313: iconst_0
314: invokevirtual #62
317: ldc           #56
319: invokevirtual #57
322: invokevirtual #60
325: iload_3
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #61
337: new           #54
340: dup
341: invokespecial #55
344: ldc           #56
346: invokevirtual #57
349: iload         4
351: invokevirtual #62
354: ldc           #59
356: invokevirtual #57
359: iconst_0
360: invokevirtual #62
363: ldc           #56
365: invokevirtual #57
368: invokevirtual #60
371: iload         4
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #61
384: aload         5
386: invokestatic  #104
389: aload         7
391: invokestatic  #47
394: new           #54
397: dup
398: invokespecial #55
401: ldc           #56
403: invokevirtual #57
406: dload         8
408: invokevirtual #58
411: ldc           #59
413: invokevirtual #57
416: ldc2_w        #362
419: invokevirtual #58
422: ldc           #56
424: invokevirtual #57
427: invokevirtual #60
430: dload         8
432: ldc2_w        #362
435: dcmpl
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #61
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: iload         12
461: invokevirtual #62
464: ldc           #59
466: invokevirtual #57
469: iconst_0
470: invokevirtual #62
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: iload         12
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #61
494: new           #54
497: dup
498: invokespecial #55
501: ldc           #56
503: invokevirtual #57
506: iload         13
508: invokevirtual #62
511: ldc           #59
513: invokevirtual #57
516: iconst_0
517: invokevirtual #62
520: ldc           #56
522: invokevirtual #57
525: invokevirtual #60
528: iload         13
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #61
541: new           #54
544: dup
545: invokespecial #55
548: ldc           #56
550: invokevirtual #57
553: iload         14
555: invokevirtual #62
558: ldc           #59
560: invokevirtual #57
563: iconst_0
564: invokevirtual #62
567: ldc           #56
569: invokevirtual #57
572: invokevirtual #60
575: iload         14
577: ifne          584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #61
588: aload         18
590: invokestatic  #47
593: aload         21
595: invokestatic  #47
598: aload         22
600: invokestatic  #47
603: aload         23
605: invokestatic  #47
608: aload         24
610: invokestatic  #47
613: aload         25
615: invokestatic  #47
618: new           #54
621: dup
622: invokespecial #55
625: ldc           #56
627: invokevirtual #57
630: aload         26
632: invokevirtual #82
635: ldc           #59
637: invokevirtual #57
640: getstatic     #118
643: invokevirtual #82
646: ldc           #56
648: invokevirtual #57
651: invokevirtual #60
654: aload         26
656: getstatic     #118
659: invokevirtual #83
662: invokestatic  #61
665: aload         27
667: invokestatic  #47
670: return
Exception table:
from    to  target type
261   287   290   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 2710
End line: 2827
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        double double6 = brentOptimizer3.getMax();
        double double7 = brentOptimizer3.getMin();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction9 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker12 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer13 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker12);
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction18 = sin17.derivative();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray21 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin16, sin17, sin19, sin20 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable22 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray21);
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24, sin26, sin27 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = sin32.derivative();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray39 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin34, sin35, sin37, sin38 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray41 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, univariateDifferentiable22, univariateDifferentiable29, sin30, sin32, univariateDifferentiable40 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable42 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray41);
        org.apache.commons.math3.optimization.GoalType goalType43 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer13.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable42, goalType43, 0.0d, 0.17453292519943295d);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction48 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction9, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable42, (double) 51.999996f);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer52 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker51);
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin56 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = sin56.derivative();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin55, sin56, sin58, sin59 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction64 = sin63.derivative();
        org.apache.commons.math3.analysis.function.Sin sin65 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray67 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin62, sin63, sin65, sin66 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray67);
        org.apache.commons.math3.analysis.function.Sin sin69 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = sin69.derivative();
        org.apache.commons.math3.analysis.function.Sin sin71 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = sin71.derivative();
        org.apache.commons.math3.analysis.function.Sin sin73 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin74 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction75 = sin74.derivative();
        org.apache.commons.math3.analysis.function.Sin sin76 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin77 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray78 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin73, sin74, sin76, sin77 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable79 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray78);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray80 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin54, univariateDifferentiable61, univariateDifferentiable68, sin69, sin71, univariateDifferentiable79 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable81 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray80);
        org.apache.commons.math3.optimization.GoalType goalType82 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer52.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable81, goalType82, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair88 = brentOptimizer3.optimize((-45), (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable42, goalType82, 0.8414709825806044d, (double) 0L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-45) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction18);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray21);
        org.junit.Assert.assertNotNull(univariateDifferentiable22);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray41);
        org.junit.Assert.assertNotNull(univariateDifferentiable42);
        org.junit.Assert.assertTrue("'" + goalType43 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType43.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
        org.junit.Assert.assertNotNull(multivariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateFunction64);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateFunction70);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertNotNull(univariateFunction75);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray78);
        org.junit.Assert.assertNotNull(univariateDifferentiable79);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray80);
        org.junit.Assert.assertNotNull(univariateDifferentiable81);
        org.junit.Assert.assertTrue("'" + goalType82 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType82.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #49
57: dstore        6
59: aload_2
60: invokevirtual #231
63: dstore        8
65: aconst_null
66: astore        10
68: aconst_null
69: astore        11
71: new           #8
74: dup
75: ldc2_w        #31
78: ldc2_w        #33
81: aload         11
83: invokespecial #13
86: astore        12
88: new           #72
91: dup
92: invokespecial #73
95: astore        13
97: new           #72
100: dup
101: invokespecial #73
104: astore        14
106: new           #72
109: dup
110: invokespecial #73
113: astore        15
115: aload         15
117: invokevirtual #74
120: astore        16
122: new           #72
125: dup
126: invokespecial #73
129: astore        17
131: new           #72
134: dup
135: invokespecial #73
138: astore        18
140: iconst_4
141: anewarray     #75
144: dup
145: iconst_0
146: aload         14
148: aastore
149: dup
150: iconst_1
151: aload         15
153: aastore
154: dup
155: iconst_2
156: aload         17
158: aastore
159: dup
160: iconst_3
161: aload         18
163: aastore
164: astore        19
166: aload         19
168: invokestatic  #76
171: astore        20
173: new           #72
176: dup
177: invokespecial #73
180: astore        21
182: new           #72
185: dup
186: invokespecial #73
189: astore        22
191: aload         22
193: invokevirtual #74
196: astore        23
198: new           #72
201: dup
202: invokespecial #73
205: astore        24
207: new           #72
210: dup
211: invokespecial #73
214: astore        25
216: iconst_4
217: anewarray     #75
220: dup
221: iconst_0
222: aload         21
224: aastore
225: dup
226: iconst_1
227: aload         22
229: aastore
230: dup
231: iconst_2
232: aload         24
234: aastore
235: dup
236: iconst_3
237: aload         25
239: aastore
240: astore        26
242: aload         26
244: invokestatic  #76
247: astore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        28
258: aload         28
260: invokevirtual #74
263: astore        29
265: new           #72
268: dup
269: invokespecial #73
272: astore        30
274: aload         30
276: invokevirtual #74
279: astore        31
281: new           #72
284: dup
285: invokespecial #73
288: astore        32
290: new           #72
293: dup
294: invokespecial #73
297: astore        33
299: aload         33
301: invokevirtual #74
304: astore        34
306: new           #72
309: dup
310: invokespecial #73
313: astore        35
315: new           #72
318: dup
319: invokespecial #73
322: astore        36
324: iconst_4
325: anewarray     #75
328: dup
329: iconst_0
330: aload         32
332: aastore
333: dup
334: iconst_1
335: aload         33
337: aastore
338: dup
339: iconst_2
340: aload         35
342: aastore
343: dup
344: iconst_3
345: aload         36
347: aastore
348: astore        37
350: aload         37
352: invokestatic  #76
355: astore        38
357: bipush        6
359: anewarray     #75
362: dup
363: iconst_0
364: aload         13
366: aastore
367: dup
368: iconst_1
369: aload         20
371: aastore
372: dup
373: iconst_2
374: aload         27
376: aastore
377: dup
378: iconst_3
379: aload         28
381: aastore
382: dup
383: iconst_4
384: aload         30
386: aastore
387: dup
388: iconst_5
389: aload         38
391: aastore
392: astore        39
394: aload         39
396: invokestatic  #77
399: astore        40
401: getstatic     #78
404: astore        41
406: aload         12
408: bipush        10
410: aload         40
412: aload         41
414: dconst_0
415: ldc2_w        #79
418: invokevirtual #81
421: astore        42
423: aload         10
425: aload         40
427: ldc2_w        #365
430: invokestatic  #183
433: astore        43
435: aconst_null
436: astore        44
438: new           #8
441: dup
442: ldc2_w        #31
445: ldc2_w        #33
448: aload         44
450: invokespecial #13
453: astore        45
455: new           #72
458: dup
459: invokespecial #73
462: astore        46
464: new           #72
467: dup
468: invokespecial #73
471: astore        47
473: new           #72
476: dup
477: invokespecial #73
480: astore        48
482: aload         48
484: invokevirtual #74
487: astore        49
489: new           #72
492: dup
493: invokespecial #73
496: astore        50
498: new           #72
501: dup
502: invokespecial #73
505: astore        51
507: iconst_4
508: anewarray     #75
511: dup
512: iconst_0
513: aload         47
515: aastore
516: dup
517: iconst_1
518: aload         48
520: aastore
521: dup
522: iconst_2
523: aload         50
525: aastore
526: dup
527: iconst_3
528: aload         51
530: aastore
531: astore        52
533: aload         52
535: invokestatic  #76
538: astore        53
540: new           #72
543: dup
544: invokespecial #73
547: astore        54
549: new           #72
552: dup
553: invokespecial #73
556: astore        55
558: aload         55
560: invokevirtual #74
563: astore        56
565: new           #72
568: dup
569: invokespecial #73
572: astore        57
574: new           #72
577: dup
578: invokespecial #73
581: astore        58
583: iconst_4
584: anewarray     #75
587: dup
588: iconst_0
589: aload         54
591: aastore
592: dup
593: iconst_1
594: aload         55
596: aastore
597: dup
598: iconst_2
599: aload         57
601: aastore
602: dup
603: iconst_3
604: aload         58
606: aastore
607: astore        59
609: aload         59
611: invokestatic  #76
614: astore        60
616: new           #72
619: dup
620: invokespecial #73
623: astore        61
625: aload         61
627: invokevirtual #74
630: astore        62
632: new           #72
635: dup
636: invokespecial #73
639: astore        63
641: aload         63
643: invokevirtual #74
646: astore        64
648: new           #72
651: dup
652: invokespecial #73
655: astore        65
657: new           #72
660: dup
661: invokespecial #73
664: astore        66
666: aload         66
668: invokevirtual #74
671: astore        67
673: new           #72
676: dup
677: invokespecial #73
680: astore        68
682: new           #72
685: dup
686: invokespecial #73
689: astore        69
691: iconst_4
692: anewarray     #75
695: dup
696: iconst_0
697: aload         65
699: aastore
700: dup
701: iconst_1
702: aload         66
704: aastore
705: dup
706: iconst_2
707: aload         68
709: aastore
710: dup
711: iconst_3
712: aload         69
714: aastore
715: astore        70
717: aload         70
719: invokestatic  #76
722: astore        71
724: bipush        6
726: anewarray     #75
729: dup
730: iconst_0
731: aload         46
733: aastore
734: dup
735: iconst_1
736: aload         53
738: aastore
739: dup
740: iconst_2
741: aload         60
743: aastore
744: dup
745: iconst_3
746: aload         61
748: aastore
749: dup
750: iconst_4
751: aload         63
753: aastore
754: dup
755: iconst_5
756: aload         71
758: aastore
759: astore        72
761: aload         72
763: invokestatic  #77
766: astore        73
768: getstatic     #78
771: astore        74
773: aload         45
775: bipush        10
777: aload         73
779: aload         74
781: dconst_0
782: ldc2_w        #79
785: invokevirtual #81
788: astore        75
790: aload_2
791: bipush        -45
793: aload         40
795: aload         74
797: ldc2_w        #23
800: dconst_0
801: invokevirtual #81
804: astore        76
806: ldc_w         #286
809: invokestatic  #15
812: goto          817
815: astore        76
817: new           #54
820: dup
821: invokespecial #55
824: ldc           #56
826: invokevirtual #57
829: iload_3
830: invokevirtual #62
833: ldc           #59
835: invokevirtual #57
838: iconst_0
839: invokevirtual #62
842: ldc           #56
844: invokevirtual #57
847: invokevirtual #60
850: iload_3
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #61
862: new           #54
865: dup
866: invokespecial #55
869: ldc           #56
871: invokevirtual #57
874: dload         4
876: invokevirtual #58
879: ldc           #59
881: invokevirtual #57
884: dconst_0
885: invokevirtual #58
888: ldc           #56
890: invokevirtual #57
893: invokevirtual #60
896: dload         4
898: dconst_0
899: dcmpl
900: ifne          907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #61
911: new           #54
914: dup
915: invokespecial #55
918: ldc           #56
920: invokevirtual #57
923: dload         6
925: invokevirtual #58
928: ldc           #59
930: invokevirtual #57
933: dconst_0
934: invokevirtual #58
937: ldc           #56
939: invokevirtual #57
942: invokevirtual #60
945: dload         6
947: dconst_0
948: dcmpl
949: ifne          956
952: iconst_1
953: goto          957
956: iconst_0
957: invokestatic  #61
960: new           #54
963: dup
964: invokespecial #55
967: ldc           #56
969: invokevirtual #57
972: dload         8
974: invokevirtual #58
977: ldc           #59
979: invokevirtual #57
982: dconst_0
983: invokevirtual #58
986: ldc           #56
988: invokevirtual #57
991: invokevirtual #60
994: dload         8
996: dconst_0
997: dcmpl
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #61
1009: aload         16
1011: invokestatic  #47
1014: aload         19
1016: invokestatic  #47
1019: aload         20
1021: invokestatic  #47
1024: aload         23
1026: invokestatic  #47
1029: aload         26
1031: invokestatic  #47
1034: aload         27
1036: invokestatic  #47
1039: aload         29
1041: invokestatic  #47
1044: aload         31
1046: invokestatic  #47
1049: aload         34
1051: invokestatic  #47
1054: aload         37
1056: invokestatic  #47
1059: aload         38
1061: invokestatic  #47
1064: aload         39
1066: invokestatic  #47
1069: aload         40
1071: invokestatic  #47
1074: new           #54
1077: dup
1078: invokespecial #55
1081: ldc           #56
1083: invokevirtual #57
1086: aload         41
1088: invokevirtual #82
1091: ldc           #59
1093: invokevirtual #57
1096: getstatic     #78
1099: invokevirtual #82
1102: ldc           #56
1104: invokevirtual #57
1107: invokevirtual #60
1110: aload         41
1112: getstatic     #78
1115: invokevirtual #83
1118: invokestatic  #61
1121: aload         42
1123: invokestatic  #47
1126: aload         43
1128: invokestatic  #47
1131: aload         49
1133: invokestatic  #47
1136: aload         52
1138: invokestatic  #47
1141: aload         53
1143: invokestatic  #47
1146: aload         56
1148: invokestatic  #47
1151: aload         59
1153: invokestatic  #47
1156: aload         60
1158: invokestatic  #47
1161: aload         62
1163: invokestatic  #47
1166: aload         64
1168: invokestatic  #47
1171: aload         67
1173: invokestatic  #47
1176: aload         70
1178: invokestatic  #47
1181: aload         71
1183: invokestatic  #47
1186: aload         72
1188: invokestatic  #47
1191: aload         73
1193: invokestatic  #47
1196: new           #54
1199: dup
1200: invokespecial #55
1203: ldc           #56
1205: invokevirtual #57
1208: aload         74
1210: invokevirtual #82
1213: ldc           #59
1215: invokevirtual #57
1218: getstatic     #78
1221: invokevirtual #82
1224: ldc           #56
1226: invokevirtual #57
1229: invokevirtual #60
1232: aload         74
1234: getstatic     #78
1237: invokevirtual #83
1240: invokestatic  #61
1243: aload         75
1245: invokestatic  #47
1248: return
Exception table:
from    to  target type
790   812   815   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 2830
End line: 2937
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        double double6 = brentOptimizer3.getMax();
        double double7 = brentOptimizer3.getMin();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = sin13.derivative();
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray17 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin12, sin13, sin15, sin16 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin19, sin20, sin22, sin23 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin26.derivative();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = sin28.derivative();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray35 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin30, sin31, sin33, sin34 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable36 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray35);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray37 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin11, univariateDifferentiable18, univariateDifferentiable25, sin26, sin28, univariateDifferentiable36 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray37);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException39 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable9, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray37);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker43 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer44 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker43);
        int int45 = brentOptimizer44.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction49 = sin48.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray50 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable51 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray50);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray50);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray50);
        org.apache.commons.math3.optimization.GoalType goalType54 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer44.optimize(97, univariateFunction53, goalType54, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer44.doOptimize();
        int int60 = brentOptimizer44.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable62 = null;
        org.apache.commons.math3.exception.util.Localizable localizable63 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray64 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction65 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray64);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException66 = new org.apache.commons.math3.exception.MathArithmeticException(localizable63, (java.lang.Object[]) differentiableUnivariateFunctionArray64);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray64);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException68 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable62, (java.lang.Object[]) differentiableUnivariateFunctionArray64);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray64);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction70 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray64);
        org.apache.commons.math3.optimization.GoalType goalType71 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer44.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction70, goalType71, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable40, goalType71, 0.009998666886625245d, (-0.08738008713805967d), (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray17);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray35);
        org.junit.Assert.assertNotNull(univariateDifferentiable36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(univariateFunction49);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray50);
        org.junit.Assert.assertNotNull(univariateDifferentiable51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertTrue("'" + goalType54 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType54.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 97 + "'", int60 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray64);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction65);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction67);
        org.junit.Assert.assertNotNull(univariateFunction69);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction70);
        org.junit.Assert.assertTrue("'" + goalType71 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType71.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #49
57: dstore        6
59: aload_2
60: invokevirtual #231
63: dstore        8
65: aconst_null
66: astore        10
68: new           #72
71: dup
72: invokespecial #73
75: astore        11
77: new           #72
80: dup
81: invokespecial #73
84: astore        12
86: new           #72
89: dup
90: invokespecial #73
93: astore        13
95: aload         13
97: invokevirtual #74
100: astore        14
102: new           #72
105: dup
106: invokespecial #73
109: astore        15
111: new           #72
114: dup
115: invokespecial #73
118: astore        16
120: iconst_4
121: anewarray     #75
124: dup
125: iconst_0
126: aload         12
128: aastore
129: dup
130: iconst_1
131: aload         13
133: aastore
134: dup
135: iconst_2
136: aload         15
138: aastore
139: dup
140: iconst_3
141: aload         16
143: aastore
144: astore        17
146: aload         17
148: invokestatic  #76
151: astore        18
153: new           #72
156: dup
157: invokespecial #73
160: astore        19
162: new           #72
165: dup
166: invokespecial #73
169: astore        20
171: aload         20
173: invokevirtual #74
176: astore        21
178: new           #72
181: dup
182: invokespecial #73
185: astore        22
187: new           #72
190: dup
191: invokespecial #73
194: astore        23
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         19
204: aastore
205: dup
206: iconst_1
207: aload         20
209: aastore
210: dup
211: iconst_2
212: aload         22
214: aastore
215: dup
216: iconst_3
217: aload         23
219: aastore
220: astore        24
222: aload         24
224: invokestatic  #76
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: new           #72
248: dup
249: invokespecial #73
252: astore        28
254: aload         28
256: invokevirtual #74
259: astore        29
261: new           #72
264: dup
265: invokespecial #73
268: astore        30
270: new           #72
273: dup
274: invokespecial #73
277: astore        31
279: aload         31
281: invokevirtual #74
284: astore        32
286: new           #72
289: dup
290: invokespecial #73
293: astore        33
295: new           #72
298: dup
299: invokespecial #73
302: astore        34
304: iconst_4
305: anewarray     #75
308: dup
309: iconst_0
310: aload         30
312: aastore
313: dup
314: iconst_1
315: aload         31
317: aastore
318: dup
319: iconst_2
320: aload         33
322: aastore
323: dup
324: iconst_3
325: aload         34
327: aastore
328: astore        35
330: aload         35
332: invokestatic  #76
335: astore        36
337: bipush        6
339: anewarray     #75
342: dup
343: iconst_0
344: aload         11
346: aastore
347: dup
348: iconst_1
349: aload         18
351: aastore
352: dup
353: iconst_2
354: aload         25
356: aastore
357: dup
358: iconst_3
359: aload         26
361: aastore
362: dup
363: iconst_4
364: aload         28
366: aastore
367: dup
368: iconst_5
369: aload         36
371: aastore
372: astore        37
374: aload         37
376: invokestatic  #77
379: astore        38
381: new           #313
384: dup
385: aload         10
387: ldc2_w        #219
390: invokestatic  #314
393: aload         37
395: checkcast     #123
398: invokespecial #315
401: astore        39
403: aload         37
405: invokestatic  #76
408: astore        40
410: aconst_null
411: astore        41
413: new           #8
416: dup
417: ldc2_w        #31
420: ldc2_w        #33
423: aload         41
425: invokespecial #13
428: astore        42
430: aload         42
432: invokevirtual #71
435: istore        43
437: new           #72
440: dup
441: invokespecial #73
444: astore        44
446: new           #72
449: dup
450: invokespecial #73
453: astore        45
455: aload         45
457: invokevirtual #74
460: astore        46
462: iconst_2
463: anewarray     #75
466: dup
467: iconst_0
468: aload         44
470: aastore
471: dup
472: iconst_1
473: aload         45
475: aastore
476: astore        47
478: aload         47
480: invokestatic  #76
483: astore        48
485: aload         47
487: invokestatic  #77
490: astore        49
492: aload         47
494: checkcast     #89
497: invokestatic  #90
500: astore        50
502: getstatic     #78
505: astore        51
507: aload         42
509: bipush        97
511: aload         50
513: aload         51
515: ldc2_w        #91
518: ldc2_w        #93
521: ldc2_w        #91
524: invokevirtual #44
527: astore        52
529: aload         42
531: invokevirtual #51
534: astore        53
536: aload         42
538: invokevirtual #50
541: istore        54
543: aconst_null
544: astore        55
546: aconst_null
547: astore        56
549: iconst_0
550: anewarray     #141
553: astore        57
555: aload         57
557: invokestatic  #142
560: astore        58
562: new           #273
565: dup
566: aload         56
568: aload         57
570: checkcast     #123
573: invokespecial #274
576: astore        59
578: aload         57
580: invokestatic  #245
583: astore        60
585: new           #122
588: dup
589: aload         55
591: aload         57
593: checkcast     #123
596: invokespecial #124
599: astore        61
601: aload         57
603: checkcast     #89
606: invokestatic  #90
609: astore        62
611: aload         57
613: invokestatic  #142
616: astore        63
618: getstatic     #118
621: astore        64
623: aload         42
625: bipush        97
627: aload         63
629: aload         64
631: ldc2_w        #339
634: ldc2_w        #341
637: invokevirtual #81
640: astore        65
642: aload_2
643: iconst_0
644: aload         40
646: aload         64
648: ldc2_w        #368
651: ldc2_w        #370
654: dconst_1
655: invokevirtual #44
658: astore        66
660: ldc           #52
662: invokestatic  #15
665: goto          670
668: astore        66
670: new           #54
673: dup
674: invokespecial #55
677: ldc           #56
679: invokevirtual #57
682: iload_3
683: invokevirtual #62
686: ldc           #59
688: invokevirtual #57
691: iconst_0
692: invokevirtual #62
695: ldc           #56
697: invokevirtual #57
700: invokevirtual #60
703: iload_3
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #61
715: new           #54
718: dup
719: invokespecial #55
722: ldc           #56
724: invokevirtual #57
727: dload         4
729: invokevirtual #58
732: ldc           #59
734: invokevirtual #57
737: dconst_0
738: invokevirtual #58
741: ldc           #56
743: invokevirtual #57
746: invokevirtual #60
749: dload         4
751: dconst_0
752: dcmpl
753: ifne          760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #61
764: new           #54
767: dup
768: invokespecial #55
771: ldc           #56
773: invokevirtual #57
776: dload         6
778: invokevirtual #58
781: ldc           #59
783: invokevirtual #57
786: dconst_0
787: invokevirtual #58
790: ldc           #56
792: invokevirtual #57
795: invokevirtual #60
798: dload         6
800: dconst_0
801: dcmpl
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #61
813: new           #54
816: dup
817: invokespecial #55
820: ldc           #56
822: invokevirtual #57
825: dload         8
827: invokevirtual #58
830: ldc           #59
832: invokevirtual #57
835: dconst_0
836: invokevirtual #58
839: ldc           #56
841: invokevirtual #57
844: invokevirtual #60
847: dload         8
849: dconst_0
850: dcmpl
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #61
862: aload         14
864: invokestatic  #47
867: aload         17
869: invokestatic  #47
872: aload         18
874: invokestatic  #47
877: aload         21
879: invokestatic  #47
882: aload         24
884: invokestatic  #47
887: aload         25
889: invokestatic  #47
892: aload         27
894: invokestatic  #47
897: aload         29
899: invokestatic  #47
902: aload         32
904: invokestatic  #47
907: aload         35
909: invokestatic  #47
912: aload         36
914: invokestatic  #47
917: aload         37
919: invokestatic  #47
922: aload         38
924: invokestatic  #47
927: aload         40
929: invokestatic  #47
932: new           #54
935: dup
936: invokespecial #55
939: ldc           #56
941: invokevirtual #57
944: iload         43
946: invokevirtual #62
949: ldc           #59
951: invokevirtual #57
954: iconst_0
955: invokevirtual #62
958: ldc           #56
960: invokevirtual #57
963: invokevirtual #60
966: iload         43
968: ifne          975
971: iconst_1
972: goto          976
975: iconst_0
976: invokestatic  #61
979: aload         46
981: invokestatic  #47
984: aload         47
986: invokestatic  #47
989: aload         48
991: invokestatic  #47
994: aload         49
996: invokestatic  #47
999: aload         50
1001: invokestatic  #47
1004: new           #54
1007: dup
1008: invokespecial #55
1011: ldc           #56
1013: invokevirtual #57
1016: aload         51
1018: invokevirtual #82
1021: ldc           #59
1023: invokevirtual #57
1026: getstatic     #78
1029: invokevirtual #82
1032: ldc           #56
1034: invokevirtual #57
1037: invokevirtual #60
1040: aload         51
1042: getstatic     #78
1045: invokevirtual #83
1048: invokestatic  #61
1051: aload         52
1053: invokestatic  #47
1056: aload         53
1058: invokestatic  #47
1061: new           #54
1064: dup
1065: invokespecial #55
1068: ldc           #56
1070: invokevirtual #57
1073: iload         54
1075: invokevirtual #62
1078: ldc           #59
1080: invokevirtual #57
1083: bipush        97
1085: invokevirtual #62
1088: ldc           #56
1090: invokevirtual #57
1093: invokevirtual #60
1096: iload         54
1098: bipush        97
1100: if_icmpne     1107
1103: iconst_1
1104: goto          1108
1107: iconst_0
1108: invokestatic  #61
1111: aload         57
1113: invokestatic  #47
1116: aload         58
1118: invokestatic  #47
1121: aload         60
1123: invokestatic  #47
1126: aload         62
1128: invokestatic  #47
1131: aload         63
1133: invokestatic  #47
1136: new           #54
1139: dup
1140: invokespecial #55
1143: ldc           #56
1145: invokevirtual #57
1148: aload         64
1150: invokevirtual #82
1153: ldc           #59
1155: invokevirtual #57
1158: getstatic     #118
1161: invokevirtual #82
1164: ldc           #56
1166: invokevirtual #57
1169: invokevirtual #60
1172: aload         64
1174: getstatic     #118
1177: invokevirtual #83
1180: invokestatic  #61
1183: aload         65
1185: invokestatic  #47
1188: return
Exception table:
from    to  target type
642   665   668   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 2940
End line: 3005
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray10 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, sin8 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer17 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker16);
        int int18 = brentOptimizer17.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray23 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin20, sin21 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray23);
        org.apache.commons.math3.optimization.GoalType goalType27 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer17.optimize(97, univariateFunction26, goalType27, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer17.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType33 = brentOptimizer17.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair34 = brentOptimizer17.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        org.apache.commons.math3.optimization.GoalType goalType38 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer17.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin36, goalType38, 3.141592653589793d, 0.0d);
        double double42 = brentOptimizer17.getMax();
        org.apache.commons.math3.optimization.GoalType goalType43 = brentOptimizer17.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer3.optimize(3, univariateFunction13, goalType43, (double) 0, 1.695228608386943d, 5729.57829566771d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (3) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray23);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType27.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair31);
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair34);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertTrue("'" + goalType38 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType38.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType43 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType43.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #71
51: istore        5
53: new           #72
56: dup
57: invokespecial #73
60: astore        6
62: new           #72
65: dup
66: invokespecial #73
69: astore        7
71: aload         7
73: invokevirtual #74
76: astore        8
78: iconst_2
79: anewarray     #75
82: dup
83: iconst_0
84: aload         6
86: aastore
87: dup
88: iconst_1
89: aload         7
91: aastore
92: astore        9
94: aload         9
96: invokestatic  #76
99: astore        10
101: aload         9
103: invokestatic  #77
106: astore        11
108: aload         9
110: checkcast     #89
113: invokestatic  #90
116: astore        12
118: aconst_null
119: astore        13
121: new           #8
124: dup
125: ldc2_w        #31
128: ldc2_w        #33
131: aload         13
133: invokespecial #13
136: astore        14
138: aload         14
140: invokevirtual #71
143: istore        15
145: new           #72
148: dup
149: invokespecial #73
152: astore        16
154: new           #72
157: dup
158: invokespecial #73
161: astore        17
163: aload         17
165: invokevirtual #74
168: astore        18
170: iconst_2
171: anewarray     #75
174: dup
175: iconst_0
176: aload         16
178: aastore
179: dup
180: iconst_1
181: aload         17
183: aastore
184: astore        19
186: aload         19
188: invokestatic  #76
191: astore        20
193: aload         19
195: invokestatic  #77
198: astore        21
200: aload         19
202: checkcast     #89
205: invokestatic  #90
208: astore        22
210: getstatic     #78
213: astore        23
215: aload         14
217: bipush        97
219: aload         22
221: aload         23
223: ldc2_w        #91
226: ldc2_w        #93
229: ldc2_w        #91
232: invokevirtual #44
235: astore        24
237: aload         14
239: invokevirtual #51
242: astore        25
244: aload         14
246: invokevirtual #110
249: astore        26
251: aload         14
253: invokevirtual #51
256: astore        27
258: new           #72
261: dup
262: invokespecial #73
265: astore        28
267: aload         28
269: invokevirtual #74
272: astore        29
274: getstatic     #78
277: astore        30
279: aload         14
281: bipush        97
283: aload         28
285: aload         30
287: ldc2_w        #133
290: dconst_0
291: invokevirtual #81
294: astore        31
296: aload         14
298: invokevirtual #49
301: dstore        32
303: aload         14
305: invokevirtual #110
308: astore        34
310: aload_2
311: iconst_3
312: aload         12
314: aload         34
316: dconst_0
317: ldc2_w        #373
320: ldc2_w        #375
323: invokevirtual #44
326: astore        35
328: ldc_w         #377
331: invokestatic  #15
334: goto          339
337: astore        35
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: dload_3
352: invokevirtual #58
355: ldc           #59
357: invokevirtual #57
360: dconst_0
361: invokevirtual #58
364: ldc           #56
366: invokevirtual #57
369: invokevirtual #60
372: dload_3
373: dconst_0
374: dcmpl
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #61
386: new           #54
389: dup
390: invokespecial #55
393: ldc           #56
395: invokevirtual #57
398: iload         5
400: invokevirtual #62
403: ldc           #59
405: invokevirtual #57
408: iconst_0
409: invokevirtual #62
412: ldc           #56
414: invokevirtual #57
417: invokevirtual #60
420: iload         5
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #61
433: aload         8
435: invokestatic  #47
438: aload         9
440: invokestatic  #47
443: aload         10
445: invokestatic  #47
448: aload         11
450: invokestatic  #47
453: aload         12
455: invokestatic  #47
458: new           #54
461: dup
462: invokespecial #55
465: ldc           #56
467: invokevirtual #57
470: iload         15
472: invokevirtual #62
475: ldc           #59
477: invokevirtual #57
480: iconst_0
481: invokevirtual #62
484: ldc           #56
486: invokevirtual #57
489: invokevirtual #60
492: iload         15
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #61
505: aload         18
507: invokestatic  #47
510: aload         19
512: invokestatic  #47
515: aload         20
517: invokestatic  #47
520: aload         21
522: invokestatic  #47
525: aload         22
527: invokestatic  #47
530: new           #54
533: dup
534: invokespecial #55
537: ldc           #56
539: invokevirtual #57
542: aload         23
544: invokevirtual #82
547: ldc           #59
549: invokevirtual #57
552: getstatic     #78
555: invokevirtual #82
558: ldc           #56
560: invokevirtual #57
563: invokevirtual #60
566: aload         23
568: getstatic     #78
571: invokevirtual #83
574: invokestatic  #61
577: aload         24
579: invokestatic  #47
582: aload         25
584: invokestatic  #47
587: new           #54
590: dup
591: invokespecial #55
594: ldc           #56
596: invokevirtual #57
599: aload         26
601: invokevirtual #82
604: ldc           #59
606: invokevirtual #57
609: getstatic     #78
612: invokevirtual #82
615: ldc           #56
617: invokevirtual #57
620: invokevirtual #60
623: aload         26
625: getstatic     #78
628: invokevirtual #83
631: invokestatic  #61
634: aload         27
636: invokestatic  #47
639: aload         29
641: invokestatic  #47
644: new           #54
647: dup
648: invokespecial #55
651: ldc           #56
653: invokevirtual #57
656: aload         30
658: invokevirtual #82
661: ldc           #59
663: invokevirtual #57
666: getstatic     #78
669: invokevirtual #82
672: ldc           #56
674: invokevirtual #57
677: invokevirtual #60
680: aload         30
682: getstatic     #78
685: invokevirtual #83
688: invokestatic  #61
691: aload         31
693: invokestatic  #47
696: new           #54
699: dup
700: invokespecial #55
703: ldc           #56
705: invokevirtual #57
708: dload         32
710: invokevirtual #58
713: ldc           #59
715: invokevirtual #57
718: dconst_0
719: invokevirtual #58
722: ldc           #56
724: invokevirtual #57
727: invokevirtual #60
730: dload         32
732: dconst_0
733: dcmpl
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #61
745: new           #54
748: dup
749: invokespecial #55
752: ldc           #56
754: invokevirtual #57
757: aload         34
759: invokevirtual #82
762: ldc           #59
764: invokevirtual #57
767: getstatic     #78
770: invokevirtual #82
773: ldc           #56
775: invokevirtual #57
778: invokevirtual #60
781: aload         34
783: getstatic     #78
786: invokevirtual #83
789: invokestatic  #61
792: return
Exception table:
from    to  target type
310   334   337   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 3008
End line: 3074
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker11 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer12 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker11);
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin22, sin23, sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin29.derivative();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray40 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin14, univariateDifferentiable21, univariateDifferentiable28, sin29, sin31, univariateDifferentiable39 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable41 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray40);
        org.apache.commons.math3.optimization.GoalType goalType42 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer12.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable41, goalType42, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer3.optimize(0, univariateFunction8, goalType42, 0.021453837029642757d, 100.00499987500625d, (-0.02403739749259852d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray40);
        org.junit.Assert.assertNotNull(univariateDifferentiable41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aconst_null
60: astore        6
62: aconst_null
63: astore        7
65: new           #8
68: dup
69: ldc2_w        #31
72: ldc2_w        #33
75: aload         7
77: invokespecial #13
80: astore        8
82: new           #72
85: dup
86: invokespecial #73
89: astore        9
91: new           #72
94: dup
95: invokespecial #73
98: astore        10
100: new           #72
103: dup
104: invokespecial #73
107: astore        11
109: aload         11
111: invokevirtual #74
114: astore        12
116: new           #72
119: dup
120: invokespecial #73
123: astore        13
125: new           #72
128: dup
129: invokespecial #73
132: astore        14
134: iconst_4
135: anewarray     #75
138: dup
139: iconst_0
140: aload         10
142: aastore
143: dup
144: iconst_1
145: aload         11
147: aastore
148: dup
149: iconst_2
150: aload         13
152: aastore
153: dup
154: iconst_3
155: aload         14
157: aastore
158: astore        15
160: aload         15
162: invokestatic  #76
165: astore        16
167: new           #72
170: dup
171: invokespecial #73
174: astore        17
176: new           #72
179: dup
180: invokespecial #73
183: astore        18
185: aload         18
187: invokevirtual #74
190: astore        19
192: new           #72
195: dup
196: invokespecial #73
199: astore        20
201: new           #72
204: dup
205: invokespecial #73
208: astore        21
210: iconst_4
211: anewarray     #75
214: dup
215: iconst_0
216: aload         17
218: aastore
219: dup
220: iconst_1
221: aload         18
223: aastore
224: dup
225: iconst_2
226: aload         20
228: aastore
229: dup
230: iconst_3
231: aload         21
233: aastore
234: astore        22
236: aload         22
238: invokestatic  #76
241: astore        23
243: new           #72
246: dup
247: invokespecial #73
250: astore        24
252: aload         24
254: invokevirtual #74
257: astore        25
259: new           #72
262: dup
263: invokespecial #73
266: astore        26
268: aload         26
270: invokevirtual #74
273: astore        27
275: new           #72
278: dup
279: invokespecial #73
282: astore        28
284: new           #72
287: dup
288: invokespecial #73
291: astore        29
293: aload         29
295: invokevirtual #74
298: astore        30
300: new           #72
303: dup
304: invokespecial #73
307: astore        31
309: new           #72
312: dup
313: invokespecial #73
316: astore        32
318: iconst_4
319: anewarray     #75
322: dup
323: iconst_0
324: aload         28
326: aastore
327: dup
328: iconst_1
329: aload         29
331: aastore
332: dup
333: iconst_2
334: aload         31
336: aastore
337: dup
338: iconst_3
339: aload         32
341: aastore
342: astore        33
344: aload         33
346: invokestatic  #76
349: astore        34
351: bipush        6
353: anewarray     #75
356: dup
357: iconst_0
358: aload         9
360: aastore
361: dup
362: iconst_1
363: aload         16
365: aastore
366: dup
367: iconst_2
368: aload         23
370: aastore
371: dup
372: iconst_3
373: aload         24
375: aastore
376: dup
377: iconst_4
378: aload         26
380: aastore
381: dup
382: iconst_5
383: aload         34
385: aastore
386: astore        35
388: aload         35
390: invokestatic  #77
393: astore        36
395: getstatic     #78
398: astore        37
400: aload         8
402: bipush        10
404: aload         36
406: aload         37
408: dconst_0
409: ldc2_w        #79
412: invokevirtual #81
415: astore        38
417: aload_2
418: iconst_0
419: aload         6
421: aload         37
423: ldc2_w        #379
426: ldc2_w        #381
429: ldc2_w        #383
432: invokevirtual #44
435: astore        39
437: ldc           #45
439: invokestatic  #15
442: goto          447
445: astore        39
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: iload_3
460: invokevirtual #62
463: ldc           #59
465: invokevirtual #57
468: iconst_0
469: invokevirtual #62
472: ldc           #56
474: invokevirtual #57
477: invokevirtual #60
480: iload_3
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #61
492: new           #54
495: dup
496: invokespecial #55
499: ldc           #56
501: invokevirtual #57
504: iload         4
506: invokevirtual #62
509: ldc           #59
511: invokevirtual #57
514: iconst_0
515: invokevirtual #62
518: ldc           #56
520: invokevirtual #57
523: invokevirtual #60
526: iload         4
528: ifne          535
531: iconst_1
532: goto          536
535: iconst_0
536: invokestatic  #61
539: new           #54
542: dup
543: invokespecial #55
546: ldc           #56
548: invokevirtual #57
551: iload         5
553: invokevirtual #62
556: ldc           #59
558: invokevirtual #57
561: iconst_0
562: invokevirtual #62
565: ldc           #56
567: invokevirtual #57
570: invokevirtual #60
573: iload         5
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #61
586: aload         12
588: invokestatic  #47
591: aload         15
593: invokestatic  #47
596: aload         16
598: invokestatic  #47
601: aload         19
603: invokestatic  #47
606: aload         22
608: invokestatic  #47
611: aload         23
613: invokestatic  #47
616: aload         25
618: invokestatic  #47
621: aload         27
623: invokestatic  #47
626: aload         30
628: invokestatic  #47
631: aload         33
633: invokestatic  #47
636: aload         34
638: invokestatic  #47
641: aload         35
643: invokestatic  #47
646: aload         36
648: invokestatic  #47
651: new           #54
654: dup
655: invokespecial #55
658: ldc           #56
660: invokevirtual #57
663: aload         37
665: invokevirtual #82
668: ldc           #59
670: invokevirtual #57
673: getstatic     #78
676: invokevirtual #82
679: ldc           #56
681: invokevirtual #57
684: invokevirtual #60
687: aload         37
689: getstatic     #78
692: invokevirtual #83
695: invokestatic  #61
698: aload         38
700: invokestatic  #47
703: return
Exception table:
from    to  target type
417   442   445   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 3077
End line: 3097
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair8 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #385
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #71
63: istore        6
65: aload_2
66: invokevirtual #51
69: astore        7
71: ldc           #52
73: invokestatic  #15
76: goto          81
79: astore        7
81: new           #54
84: dup
85: invokespecial #55
88: ldc           #56
90: invokevirtual #57
93: iload_3
94: invokevirtual #62
97: ldc           #59
99: invokevirtual #57
102: iconst_0
103: invokevirtual #62
106: ldc           #56
108: invokevirtual #57
111: invokevirtual #60
114: iload_3
115: ifne          122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #61
126: new           #54
129: dup
130: invokespecial #55
133: ldc           #56
135: invokevirtual #57
138: iload         4
140: invokevirtual #62
143: ldc           #59
145: invokevirtual #57
148: iconst_0
149: invokevirtual #62
152: ldc           #56
154: invokevirtual #57
157: invokevirtual #60
160: iload         4
162: ifne          169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #61
173: new           #54
176: dup
177: invokespecial #55
180: ldc           #56
182: invokevirtual #57
185: iload         5
187: invokevirtual #62
190: ldc           #59
192: invokevirtual #57
195: iconst_0
196: invokevirtual #62
199: ldc           #56
201: invokevirtual #57
204: invokevirtual #60
207: iload         5
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #61
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: iload         6
234: invokevirtual #62
237: ldc           #59
239: invokevirtual #57
242: iconst_0
243: invokevirtual #62
246: ldc           #56
248: invokevirtual #57
251: invokevirtual #60
254: iload         6
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #61
267: return
Exception table:
from    to  target type
65    76    79   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 3100
End line: 3111
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 3.8146973E-6f, 5729.57829566771d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair3 = brentOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #341
32: ldc2_w        #375
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #51
43: astore_2
44: ldc           #52
46: invokestatic  #15
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
39    49    52   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 3114
End line: 3189
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable21 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray23 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction24 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException25 = new org.apache.commons.math3.exception.MathArithmeticException(localizable22, (java.lang.Object[]) differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException27 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable21, (java.lang.Object[]) differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer32 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker31);
        int int33 = brentOptimizer32.getEvaluations();
        int int34 = brentOptimizer32.getEvaluations();
        int int35 = brentOptimizer32.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction37 = null;
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = sin39.derivative();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray43 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin38, sin39, sin41, sin42 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable44 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray43);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray43);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray43);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction48 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction37, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable46, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType49 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair53 = brentOptimizer32.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable46, goalType49, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair57 = brentOptimizer3.optimize(0, univariateFunction28, goalType49, 0.04991687205886359d, 4.000043427276863d, 0.5149900333324824d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray23);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction24);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction26);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray43);
        org.junit.Assert.assertNotNull(univariateDifferentiable44);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(multivariateFunction48);
        org.junit.Assert.assertTrue("'" + goalType49 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType49.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair53);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aload_2
145: invokevirtual #103
148: astore        14
150: aconst_null
151: astore        15
153: aconst_null
154: astore        16
156: iconst_0
157: anewarray     #141
160: astore        17
162: aload         17
164: invokestatic  #142
167: astore        18
169: new           #273
172: dup
173: aload         16
175: aload         17
177: checkcast     #123
180: invokespecial #274
183: astore        19
185: aload         17
187: invokestatic  #245
190: astore        20
192: new           #122
195: dup
196: aload         15
198: aload         17
200: checkcast     #123
203: invokespecial #124
206: astore        21
208: aload         17
210: checkcast     #89
213: invokestatic  #90
216: astore        22
218: aconst_null
219: astore        23
221: new           #8
224: dup
225: ldc2_w        #31
228: ldc2_w        #33
231: aload         23
233: invokespecial #13
236: astore        24
238: aload         24
240: invokevirtual #71
243: istore        25
245: aload         24
247: invokevirtual #71
250: istore        26
252: aload         24
254: invokevirtual #71
257: istore        27
259: aconst_null
260: astore        28
262: new           #72
265: dup
266: invokespecial #73
269: astore        29
271: new           #72
274: dup
275: invokespecial #73
278: astore        30
280: aload         30
282: invokevirtual #74
285: astore        31
287: new           #72
290: dup
291: invokespecial #73
294: astore        32
296: new           #72
299: dup
300: invokespecial #73
303: astore        33
305: iconst_4
306: anewarray     #75
309: dup
310: iconst_0
311: aload         29
313: aastore
314: dup
315: iconst_1
316: aload         30
318: aastore
319: dup
320: iconst_2
321: aload         32
323: aastore
324: dup
325: iconst_3
326: aload         33
328: aastore
329: astore        34
331: aload         34
333: invokestatic  #76
336: astore        35
338: aload         34
340: checkcast     #89
343: invokestatic  #109
346: astore        36
348: aload         34
350: invokestatic  #77
353: astore        37
355: aload         28
357: aload         37
359: ldc2_w        #181
362: invokestatic  #183
365: astore        38
367: getstatic     #118
370: astore        39
372: aload         24
374: bipush        10
376: aload         37
378: aload         39
380: ldc2_w        #184
383: ldc2_w        #186
386: ldc2_w        #188
389: invokevirtual #44
392: astore        40
394: aload_2
395: iconst_0
396: aload         22
398: aload         39
400: ldc2_w        #135
403: ldc2_w        #173
406: ldc2_w        #388
409: invokevirtual #44
412: astore        41
414: ldc           #52
416: invokestatic  #15
419: goto          424
422: astore        41
424: new           #54
427: dup
428: invokespecial #55
431: ldc           #56
433: invokevirtual #57
436: iload_3
437: invokevirtual #62
440: ldc           #59
442: invokevirtual #57
445: iconst_0
446: invokevirtual #62
449: ldc           #56
451: invokevirtual #57
454: invokevirtual #60
457: iload_3
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #61
469: aload         6
471: invokestatic  #47
474: aload         7
476: invokestatic  #47
479: aload         8
481: invokestatic  #47
484: aload         9
486: invokestatic  #47
489: aload         10
491: invokestatic  #47
494: new           #54
497: dup
498: invokespecial #55
501: ldc           #56
503: invokevirtual #57
506: aload         11
508: invokevirtual #82
511: ldc           #59
513: invokevirtual #57
516: getstatic     #78
519: invokevirtual #82
522: ldc           #56
524: invokevirtual #57
527: invokevirtual #60
530: aload         11
532: getstatic     #78
535: invokevirtual #83
538: invokestatic  #61
541: aload         12
543: invokestatic  #47
546: new           #54
549: dup
550: invokespecial #55
553: ldc           #56
555: invokevirtual #57
558: iload         13
560: invokevirtual #62
563: ldc           #59
565: invokevirtual #57
568: bipush        97
570: invokevirtual #62
573: ldc           #56
575: invokevirtual #57
578: invokevirtual #60
581: iload         13
583: bipush        97
585: if_icmpne     592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #61
596: aload         14
598: invokestatic  #104
601: aload         17
603: invokestatic  #47
606: aload         18
608: invokestatic  #47
611: aload         20
613: invokestatic  #47
616: aload         22
618: invokestatic  #47
621: new           #54
624: dup
625: invokespecial #55
628: ldc           #56
630: invokevirtual #57
633: iload         25
635: invokevirtual #62
638: ldc           #59
640: invokevirtual #57
643: iconst_0
644: invokevirtual #62
647: ldc           #56
649: invokevirtual #57
652: invokevirtual #60
655: iload         25
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #61
668: new           #54
671: dup
672: invokespecial #55
675: ldc           #56
677: invokevirtual #57
680: iload         26
682: invokevirtual #62
685: ldc           #59
687: invokevirtual #57
690: iconst_0
691: invokevirtual #62
694: ldc           #56
696: invokevirtual #57
699: invokevirtual #60
702: iload         26
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #61
715: new           #54
718: dup
719: invokespecial #55
722: ldc           #56
724: invokevirtual #57
727: iload         27
729: invokevirtual #62
732: ldc           #59
734: invokevirtual #57
737: iconst_0
738: invokevirtual #62
741: ldc           #56
743: invokevirtual #57
746: invokevirtual #60
749: iload         27
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #61
762: aload         31
764: invokestatic  #47
767: aload         34
769: invokestatic  #47
772: aload         35
774: invokestatic  #47
777: aload         36
779: invokestatic  #47
782: aload         37
784: invokestatic  #47
787: aload         38
789: invokestatic  #47
792: new           #54
795: dup
796: invokespecial #55
799: ldc           #56
801: invokevirtual #57
804: aload         39
806: invokevirtual #82
809: ldc           #59
811: invokevirtual #57
814: getstatic     #118
817: invokevirtual #82
820: ldc           #56
822: invokevirtual #57
825: invokevirtual #60
828: aload         39
830: getstatic     #118
833: invokevirtual #83
836: invokestatic  #61
839: aload         40
841: invokestatic  #47
844: return
Exception table:
from    to  target type
394   419   422   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 3192
End line: 3250
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        double double11 = sin8.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin8);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable13 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin8);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer18 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker17);
        int int19 = brentOptimizer18.getEvaluations();
        int int20 = brentOptimizer18.getEvaluations();
        int int21 = brentOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction34 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction23, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType35 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer18.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, goalType35, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair42 = brentOptimizer3.optimize((int) (byte) -1, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction14, goalType35, 0.4332456533524551d, 0.4663073293037834d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.8414709825806044d + "'", double11 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateDifferentiable13);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(multivariateFunction34);
        org.junit.Assert.assertTrue("'" + goalType35 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType35.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: new           #72
62: dup
63: invokespecial #73
66: astore        6
68: aload         6
70: invokevirtual #74
73: astore        7
75: aload         6
77: ldc2_w        #86
80: invokevirtual #88
83: dstore        8
85: aload         6
87: invokestatic  #143
90: astore        10
92: aload         6
94: invokestatic  #143
97: astore        11
99: aload         6
101: invokestatic  #281
104: astore        12
106: aconst_null
107: astore        13
109: new           #8
112: dup
113: ldc2_w        #31
116: ldc2_w        #33
119: aload         13
121: invokespecial #13
124: astore        14
126: aload         14
128: invokevirtual #71
131: istore        15
133: aload         14
135: invokevirtual #71
138: istore        16
140: aload         14
142: invokevirtual #71
145: istore        17
147: aconst_null
148: astore        18
150: new           #72
153: dup
154: invokespecial #73
157: astore        19
159: new           #72
162: dup
163: invokespecial #73
166: astore        20
168: aload         20
170: invokevirtual #74
173: astore        21
175: new           #72
178: dup
179: invokespecial #73
182: astore        22
184: new           #72
187: dup
188: invokespecial #73
191: astore        23
193: iconst_4
194: anewarray     #75
197: dup
198: iconst_0
199: aload         19
201: aastore
202: dup
203: iconst_1
204: aload         20
206: aastore
207: dup
208: iconst_2
209: aload         22
211: aastore
212: dup
213: iconst_3
214: aload         23
216: aastore
217: astore        24
219: aload         24
221: invokestatic  #76
224: astore        25
226: aload         24
228: checkcast     #89
231: invokestatic  #109
234: astore        26
236: aload         24
238: invokestatic  #77
241: astore        27
243: aload         18
245: aload         27
247: ldc2_w        #181
250: invokestatic  #183
253: astore        28
255: getstatic     #118
258: astore        29
260: aload         14
262: bipush        10
264: aload         27
266: aload         29
268: ldc2_w        #184
271: ldc2_w        #186
274: ldc2_w        #188
277: invokevirtual #44
280: astore        30
282: aload_2
283: iconst_m1
284: aload         12
286: aload         29
288: ldc2_w        #391
291: ldc2_w        #393
294: invokevirtual #81
297: astore        31
299: ldc_w         #308
302: invokestatic  #15
305: goto          310
308: astore        31
310: new           #54
313: dup
314: invokespecial #55
317: ldc           #56
319: invokevirtual #57
322: iload_3
323: invokevirtual #62
326: ldc           #59
328: invokevirtual #57
331: iconst_0
332: invokevirtual #62
335: ldc           #56
337: invokevirtual #57
340: invokevirtual #60
343: iload_3
344: ifne          351
347: iconst_1
348: goto          352
351: iconst_0
352: invokestatic  #61
355: new           #54
358: dup
359: invokespecial #55
362: ldc           #56
364: invokevirtual #57
367: iload         4
369: invokevirtual #62
372: ldc           #59
374: invokevirtual #57
377: iconst_0
378: invokevirtual #62
381: ldc           #56
383: invokevirtual #57
386: invokevirtual #60
389: iload         4
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #61
402: new           #54
405: dup
406: invokespecial #55
409: ldc           #56
411: invokevirtual #57
414: iload         5
416: invokevirtual #62
419: ldc           #59
421: invokevirtual #57
424: iconst_0
425: invokevirtual #62
428: ldc           #56
430: invokevirtual #57
433: invokevirtual #60
436: iload         5
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #61
449: aload         7
451: invokestatic  #47
454: new           #54
457: dup
458: invokespecial #55
461: ldc           #56
463: invokevirtual #57
466: dload         8
468: invokevirtual #58
471: ldc           #59
473: invokevirtual #57
476: ldc2_w        #23
479: invokevirtual #58
482: ldc           #56
484: invokevirtual #57
487: invokevirtual #60
490: dload         8
492: ldc2_w        #23
495: dcmpl
496: ifne          503
499: iconst_1
500: goto          504
503: iconst_0
504: invokestatic  #61
507: aload         10
509: invokestatic  #47
512: aload         11
514: invokestatic  #47
517: aload         12
519: invokestatic  #47
522: new           #54
525: dup
526: invokespecial #55
529: ldc           #56
531: invokevirtual #57
534: iload         15
536: invokevirtual #62
539: ldc           #59
541: invokevirtual #57
544: iconst_0
545: invokevirtual #62
548: ldc           #56
550: invokevirtual #57
553: invokevirtual #60
556: iload         15
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #61
569: new           #54
572: dup
573: invokespecial #55
576: ldc           #56
578: invokevirtual #57
581: iload         16
583: invokevirtual #62
586: ldc           #59
588: invokevirtual #57
591: iconst_0
592: invokevirtual #62
595: ldc           #56
597: invokevirtual #57
600: invokevirtual #60
603: iload         16
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #61
616: new           #54
619: dup
620: invokespecial #55
623: ldc           #56
625: invokevirtual #57
628: iload         17
630: invokevirtual #62
633: ldc           #59
635: invokevirtual #57
638: iconst_0
639: invokevirtual #62
642: ldc           #56
644: invokevirtual #57
647: invokevirtual #60
650: iload         17
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #61
663: aload         21
665: invokestatic  #47
668: aload         24
670: invokestatic  #47
673: aload         25
675: invokestatic  #47
678: aload         26
680: invokestatic  #47
683: aload         27
685: invokestatic  #47
688: aload         28
690: invokestatic  #47
693: new           #54
696: dup
697: invokespecial #55
700: ldc           #56
702: invokevirtual #57
705: aload         29
707: invokevirtual #82
710: ldc           #59
712: invokevirtual #57
715: getstatic     #118
718: invokevirtual #82
721: ldc           #56
723: invokevirtual #57
726: invokevirtual #60
729: aload         29
731: getstatic     #118
734: invokevirtual #83
737: invokestatic  #61
740: aload         30
742: invokestatic  #47
745: return
Exception table:
from    to  target type
282   305   308   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 3253
End line: 3327
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = sin11.derivative();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray15 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin10, sin11, sin13, sin14 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray15);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException17 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable9, (java.lang.Object[]) univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray15);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException19 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable8, (java.lang.Object[]) univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction20 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray15);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer24 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker23);
        int int25 = brentOptimizer24.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = sin28.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray30 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable31 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray30);
        org.apache.commons.math3.optimization.GoalType goalType34 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer24.optimize(97, univariateFunction33, goalType34, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType40 = brentOptimizer24.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.optimization.GoalType goalType45 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer24.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin43, goalType45, 3.141592653589793d, 0.0d);
        double double49 = brentOptimizer24.getMax();
        int int50 = brentOptimizer24.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType52 = brentOptimizer24.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair55 = brentOptimizer3.optimize((int) (byte) 1, univariateFunction20, goalType52, 2.6469779601696886E-23d, 1.7391304347826086d);
        int int56 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray15);
        org.junit.Assert.assertNotNull(univariateDifferentiable16);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateFunction20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray30);
        org.junit.Assert.assertNotNull(univariateDifferentiable31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertTrue("'" + goalType34 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType34.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertTrue("'" + goalType45 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType45.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair51);
        org.junit.Assert.assertTrue("'" + goalType52 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType52.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aconst_null
60: astore        7
62: aconst_null
63: astore        8
65: new           #72
68: dup
69: invokespecial #73
72: astore        9
74: new           #72
77: dup
78: invokespecial #73
81: astore        10
83: aload         10
85: invokevirtual #74
88: astore        11
90: new           #72
93: dup
94: invokespecial #73
97: astore        12
99: new           #72
102: dup
103: invokespecial #73
106: astore        13
108: iconst_4
109: anewarray     #75
112: dup
113: iconst_0
114: aload         9
116: aastore
117: dup
118: iconst_1
119: aload         10
121: aastore
122: dup
123: iconst_2
124: aload         12
126: aastore
127: dup
128: iconst_3
129: aload         13
131: aastore
132: astore        14
134: aload         14
136: invokestatic  #76
139: astore        15
141: new           #122
144: dup
145: aload         8
147: aload         14
149: checkcast     #123
152: invokespecial #124
155: astore        16
157: aload         14
159: invokestatic  #77
162: astore        17
164: new           #122
167: dup
168: aload         7
170: aload         14
172: checkcast     #123
175: invokespecial #124
178: astore        18
180: aload         14
182: checkcast     #89
185: invokestatic  #90
188: astore        19
190: aconst_null
191: astore        20
193: new           #8
196: dup
197: ldc2_w        #31
200: ldc2_w        #33
203: aload         20
205: invokespecial #13
208: astore        21
210: aload         21
212: invokevirtual #71
215: istore        22
217: new           #72
220: dup
221: invokespecial #73
224: astore        23
226: new           #72
229: dup
230: invokespecial #73
233: astore        24
235: aload         24
237: invokevirtual #74
240: astore        25
242: iconst_2
243: anewarray     #75
246: dup
247: iconst_0
248: aload         23
250: aastore
251: dup
252: iconst_1
253: aload         24
255: aastore
256: astore        26
258: aload         26
260: invokestatic  #76
263: astore        27
265: aload         26
267: invokestatic  #77
270: astore        28
272: aload         26
274: checkcast     #89
277: invokestatic  #90
280: astore        29
282: getstatic     #78
285: astore        30
287: aload         21
289: bipush        97
291: aload         29
293: aload         30
295: ldc2_w        #91
298: ldc2_w        #93
301: ldc2_w        #91
304: invokevirtual #44
307: astore        31
309: aload         21
311: invokevirtual #51
314: astore        32
316: aload         21
318: invokevirtual #110
321: astore        33
323: aload         21
325: invokevirtual #51
328: astore        34
330: new           #72
333: dup
334: invokespecial #73
337: astore        35
339: aload         35
341: invokevirtual #74
344: astore        36
346: getstatic     #78
349: astore        37
351: aload         21
353: bipush        97
355: aload         35
357: aload         37
359: ldc2_w        #133
362: dconst_0
363: invokevirtual #81
366: astore        38
368: aload         21
370: invokevirtual #49
373: dstore        39
375: aload         21
377: invokevirtual #50
380: istore        41
382: aload         21
384: invokevirtual #51
387: astore        42
389: aload         21
391: invokevirtual #110
394: astore        43
396: aload_2
397: iconst_1
398: aload         19
400: aload         43
402: ldc2_w        #242
405: ldc2_w        #396
408: invokevirtual #81
411: astore        44
413: aload_2
414: invokevirtual #71
417: istore        45
419: new           #54
422: dup
423: invokespecial #55
426: ldc           #56
428: invokevirtual #57
431: dload_3
432: invokevirtual #58
435: ldc           #59
437: invokevirtual #57
440: dconst_0
441: invokevirtual #58
444: ldc           #56
446: invokevirtual #57
449: invokevirtual #60
452: dload_3
453: dconst_0
454: dcmpl
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #61
466: new           #54
469: dup
470: invokespecial #55
473: ldc           #56
475: invokevirtual #57
478: iload         5
480: invokevirtual #62
483: ldc           #59
485: invokevirtual #57
488: iconst_0
489: invokevirtual #62
492: ldc           #56
494: invokevirtual #57
497: invokevirtual #60
500: iload         5
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #61
513: aload         6
515: invokestatic  #104
518: aload         11
520: invokestatic  #47
523: aload         14
525: invokestatic  #47
528: aload         15
530: invokestatic  #47
533: aload         17
535: invokestatic  #47
538: aload         19
540: invokestatic  #47
543: new           #54
546: dup
547: invokespecial #55
550: ldc           #56
552: invokevirtual #57
555: iload         22
557: invokevirtual #62
560: ldc           #59
562: invokevirtual #57
565: iconst_0
566: invokevirtual #62
569: ldc           #56
571: invokevirtual #57
574: invokevirtual #60
577: iload         22
579: ifne          586
582: iconst_1
583: goto          587
586: iconst_0
587: invokestatic  #61
590: aload         25
592: invokestatic  #47
595: aload         26
597: invokestatic  #47
600: aload         27
602: invokestatic  #47
605: aload         28
607: invokestatic  #47
610: aload         29
612: invokestatic  #47
615: new           #54
618: dup
619: invokespecial #55
622: ldc           #56
624: invokevirtual #57
627: aload         30
629: invokevirtual #82
632: ldc           #59
634: invokevirtual #57
637: getstatic     #78
640: invokevirtual #82
643: ldc           #56
645: invokevirtual #57
648: invokevirtual #60
651: aload         30
653: getstatic     #78
656: invokevirtual #83
659: invokestatic  #61
662: aload         31
664: invokestatic  #47
667: aload         32
669: invokestatic  #47
672: new           #54
675: dup
676: invokespecial #55
679: ldc           #56
681: invokevirtual #57
684: aload         33
686: invokevirtual #82
689: ldc           #59
691: invokevirtual #57
694: getstatic     #78
697: invokevirtual #82
700: ldc           #56
702: invokevirtual #57
705: invokevirtual #60
708: aload         33
710: getstatic     #78
713: invokevirtual #83
716: invokestatic  #61
719: aload         34
721: invokestatic  #47
724: aload         36
726: invokestatic  #47
729: new           #54
732: dup
733: invokespecial #55
736: ldc           #56
738: invokevirtual #57
741: aload         37
743: invokevirtual #82
746: ldc           #59
748: invokevirtual #57
751: getstatic     #78
754: invokevirtual #82
757: ldc           #56
759: invokevirtual #57
762: invokevirtual #60
765: aload         37
767: getstatic     #78
770: invokevirtual #83
773: invokestatic  #61
776: aload         38
778: invokestatic  #47
781: new           #54
784: dup
785: invokespecial #55
788: ldc           #56
790: invokevirtual #57
793: dload         39
795: invokevirtual #58
798: ldc           #59
800: invokevirtual #57
803: dconst_0
804: invokevirtual #58
807: ldc           #56
809: invokevirtual #57
812: invokevirtual #60
815: dload         39
817: dconst_0
818: dcmpl
819: ifne          826
822: iconst_1
823: goto          827
826: iconst_0
827: invokestatic  #61
830: new           #54
833: dup
834: invokespecial #55
837: ldc           #56
839: invokevirtual #57
842: iload         41
844: invokevirtual #62
847: ldc           #59
849: invokevirtual #57
852: bipush        97
854: invokevirtual #62
857: ldc           #56
859: invokevirtual #57
862: invokevirtual #60
865: iload         41
867: bipush        97
869: if_icmpne     876
872: iconst_1
873: goto          877
876: iconst_0
877: invokestatic  #61
880: aload         42
882: invokestatic  #47
885: new           #54
888: dup
889: invokespecial #55
892: ldc           #56
894: invokevirtual #57
897: aload         43
899: invokevirtual #82
902: ldc           #59
904: invokevirtual #57
907: getstatic     #78
910: invokevirtual #82
913: ldc           #56
915: invokevirtual #57
918: invokevirtual #60
921: aload         43
923: getstatic     #78
926: invokevirtual #83
929: invokestatic  #61
932: aload         44
934: invokestatic  #47
937: new           #54
940: dup
941: invokespecial #55
944: ldc           #56
946: invokevirtual #57
949: iload         45
951: invokevirtual #62
954: ldc           #59
956: invokevirtual #57
959: iconst_1
960: invokevirtual #62
963: ldc           #56
965: invokevirtual #57
968: invokevirtual #60
971: iload         45
973: iconst_1
974: if_icmpne     981
977: iconst_1
978: goto          982
981: iconst_0
982: invokestatic  #61
985: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 3330
End line: 3453
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = sin12.derivative();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray15 = new org.apache.commons.math3.analysis.UnivariateFunction[] { univariateFunction11, univariateFunction13, sin14 };
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateFunctionArray15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = org.apache.commons.math3.analysis.FunctionUtils.compose(univariateFunctionArray15);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker20 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer21 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker20);
        int int22 = brentOptimizer21.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray27);
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer21.optimize(97, univariateFunction30, goalType31, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int36 = brentOptimizer21.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable38 = null;
        org.apache.commons.math3.exception.util.Localizable localizable40 = null;
        org.apache.commons.math3.exception.util.Localizable localizable41 = null;
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray47 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin42, sin43, sin45, sin46 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray47);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException49 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable41, (java.lang.Object[]) univariateDifferentiableArray47);
        org.apache.commons.math3.exception.MathInternalError mathInternalError50 = new org.apache.commons.math3.exception.MathInternalError(localizable40, (java.lang.Object[]) univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable51 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray47);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException52 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable38, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable53 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer57 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker56);
        int int58 = brentOptimizer57.getMaxEvaluations();
        double double59 = brentOptimizer57.getMax();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin62.derivative();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin65 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin61, sin62, sin64, sin65 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction68 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer72 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker71);
        int int73 = brentOptimizer72.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin75 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin76 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction77 = sin76.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray78 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin75, sin76 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable79 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray78);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable80 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray78);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction81 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray78);
        org.apache.commons.math3.optimization.GoalType goalType82 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair86 = brentOptimizer72.optimize(97, univariateFunction81, goalType82, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair87 = brentOptimizer72.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType88 = brentOptimizer72.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer57.optimize((int) ' ', univariateFunction68, goalType88, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair94 = brentOptimizer21.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable53, goalType88, (-1.5707963267948912d), (double) (-0.9999999f));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair98 = brentOptimizer3.optimize(0, univariateFunction17, goalType88, 1.208662425748988d, 0.0d, 0.7456241401813645d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertNotNull(univariateFunctionArray15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(univariateDifferentiable51);
        org.junit.Assert.assertNotNull(univariateDifferentiable53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateFunction68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(univariateFunction77);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray78);
        org.junit.Assert.assertNotNull(univariateDifferentiable79);
        org.junit.Assert.assertNotNull(univariateDifferentiable80);
        org.junit.Assert.assertNotNull(univariateFunction81);
        org.junit.Assert.assertTrue("'" + goalType82 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType82.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair86);
        org.junit.Assert.assertNotNull(univariatePointValuePair87);
        org.junit.Assert.assertTrue("'" + goalType88 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType88.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
        org.junit.Assert.assertNotNull(univariatePointValuePair94);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #103
63: astore        7
65: aload_2
66: invokevirtual #50
69: istore        8
71: new           #72
74: dup
75: invokespecial #73
78: astore        9
80: aload         9
82: invokevirtual #74
85: astore        10
87: new           #72
90: dup
91: invokespecial #73
94: astore        11
96: aload         11
98: invokevirtual #74
101: astore        12
103: new           #72
106: dup
107: invokespecial #73
110: astore        13
112: iconst_3
113: anewarray     #283
116: dup
117: iconst_0
118: aload         10
120: aastore
121: dup
122: iconst_1
123: aload         12
125: aastore
126: dup
127: iconst_2
128: aload         13
130: aastore
131: astore        14
133: aload         14
135: invokestatic  #117
138: astore        15
140: aload         14
142: invokestatic  #90
145: astore        16
147: aconst_null
148: astore        17
150: new           #8
153: dup
154: ldc2_w        #31
157: ldc2_w        #33
160: aload         17
162: invokespecial #13
165: astore        18
167: aload         18
169: invokevirtual #71
172: istore        19
174: new           #72
177: dup
178: invokespecial #73
181: astore        20
183: new           #72
186: dup
187: invokespecial #73
190: astore        21
192: aload         21
194: invokevirtual #74
197: astore        22
199: iconst_2
200: anewarray     #75
203: dup
204: iconst_0
205: aload         20
207: aastore
208: dup
209: iconst_1
210: aload         21
212: aastore
213: astore        23
215: aload         23
217: invokestatic  #76
220: astore        24
222: aload         23
224: invokestatic  #77
227: astore        25
229: aload         23
231: checkcast     #89
234: invokestatic  #90
237: astore        26
239: getstatic     #78
242: astore        27
244: aload         18
246: bipush        97
248: aload         26
250: aload         27
252: ldc2_w        #91
255: ldc2_w        #93
258: ldc2_w        #91
261: invokevirtual #44
264: astore        28
266: aload         18
268: invokevirtual #50
271: istore        29
273: aconst_null
274: astore        30
276: aconst_null
277: astore        31
279: aconst_null
280: astore        32
282: new           #72
285: dup
286: invokespecial #73
289: astore        33
291: new           #72
294: dup
295: invokespecial #73
298: astore        34
300: aload         34
302: invokevirtual #74
305: astore        35
307: new           #72
310: dup
311: invokespecial #73
314: astore        36
316: new           #72
319: dup
320: invokespecial #73
323: astore        37
325: iconst_4
326: anewarray     #75
329: dup
330: iconst_0
331: aload         33
333: aastore
334: dup
335: iconst_1
336: aload         34
338: aastore
339: dup
340: iconst_2
341: aload         36
343: aastore
344: dup
345: iconst_3
346: aload         37
348: aastore
349: astore        38
351: aload         38
353: invokestatic  #76
356: astore        39
358: new           #122
361: dup
362: aload         32
364: aload         38
366: checkcast     #123
369: invokespecial #124
372: astore        40
374: new           #125
377: dup
378: aload         31
380: aload         38
382: checkcast     #123
385: invokespecial #126
388: astore        41
390: aload         38
392: invokestatic  #77
395: astore        42
397: new           #313
400: dup
401: aload         30
403: ldc2_w        #79
406: invokestatic  #314
409: aload         38
411: checkcast     #123
414: invokespecial #315
417: astore        43
419: aload         38
421: invokestatic  #76
424: astore        44
426: aconst_null
427: astore        45
429: new           #8
432: dup
433: ldc2_w        #31
436: ldc2_w        #33
439: aload         45
441: invokespecial #13
444: astore        46
446: aload         46
448: invokevirtual #50
451: istore        47
453: aload         46
455: invokevirtual #49
458: dstore        48
460: new           #72
463: dup
464: invokespecial #73
467: astore        50
469: new           #72
472: dup
473: invokespecial #73
476: astore        51
478: aload         51
480: invokevirtual #74
483: astore        52
485: new           #72
488: dup
489: invokespecial #73
492: astore        53
494: new           #72
497: dup
498: invokespecial #73
501: astore        54
503: iconst_4
504: anewarray     #75
507: dup
508: iconst_0
509: aload         50
511: aastore
512: dup
513: iconst_1
514: aload         51
516: aastore
517: dup
518: iconst_2
519: aload         53
521: aastore
522: dup
523: iconst_3
524: aload         54
526: aastore
527: astore        55
529: aload         55
531: invokestatic  #76
534: astore        56
536: aload         55
538: checkcast     #89
541: invokestatic  #109
544: astore        57
546: aconst_null
547: astore        58
549: new           #8
552: dup
553: ldc2_w        #31
556: ldc2_w        #33
559: aload         58
561: invokespecial #13
564: astore        59
566: aload         59
568: invokevirtual #71
571: istore        60
573: new           #72
576: dup
577: invokespecial #73
580: astore        61
582: new           #72
585: dup
586: invokespecial #73
589: astore        62
591: aload         62
593: invokevirtual #74
596: astore        63
598: iconst_2
599: anewarray     #75
602: dup
603: iconst_0
604: aload         61
606: aastore
607: dup
608: iconst_1
609: aload         62
611: aastore
612: astore        64
614: aload         64
616: invokestatic  #76
619: astore        65
621: aload         64
623: invokestatic  #77
626: astore        66
628: aload         64
630: checkcast     #89
633: invokestatic  #90
636: astore        67
638: getstatic     #78
641: astore        68
643: aload         59
645: bipush        97
647: aload         67
649: aload         68
651: ldc2_w        #91
654: ldc2_w        #93
657: ldc2_w        #91
660: invokevirtual #44
663: astore        69
665: aload         59
667: invokevirtual #51
670: astore        70
672: aload         59
674: invokevirtual #110
677: astore        71
679: aload         46
681: bipush        32
683: aload         57
685: aload         71
687: ldc2_w        #173
690: ldc2_w        #175
693: invokevirtual #81
696: astore        72
698: aload         18
700: iconst_2
701: aload         44
703: aload         71
705: ldc2_w        #316
708: ldc2_w        #255
711: invokevirtual #81
714: astore        73
716: aload_2
717: iconst_0
718: aload         16
720: aload         71
722: ldc2_w        #277
725: dconst_0
726: ldc2_w        #362
729: invokevirtual #44
732: astore        74
734: ldc           #52
736: invokestatic  #15
739: goto          744
742: astore        74
744: new           #54
747: dup
748: invokespecial #55
751: ldc           #56
753: invokevirtual #57
756: iload_3
757: invokevirtual #62
760: ldc           #59
762: invokevirtual #57
765: iconst_0
766: invokevirtual #62
769: ldc           #56
771: invokevirtual #57
774: invokevirtual #60
777: iload_3
778: ifne          785
781: iconst_1
782: goto          786
785: iconst_0
786: invokestatic  #61
789: new           #54
792: dup
793: invokespecial #55
796: ldc           #56
798: invokevirtual #57
801: dload         4
803: invokevirtual #58
806: ldc           #59
808: invokevirtual #57
811: dconst_0
812: invokevirtual #58
815: ldc           #56
817: invokevirtual #57
820: invokevirtual #60
823: dload         4
825: dconst_0
826: dcmpl
827: ifne          834
830: iconst_1
831: goto          835
834: iconst_0
835: invokestatic  #61
838: new           #54
841: dup
842: invokespecial #55
845: ldc           #56
847: invokevirtual #57
850: iload         6
852: invokevirtual #62
855: ldc           #59
857: invokevirtual #57
860: iconst_0
861: invokevirtual #62
864: ldc           #56
866: invokevirtual #57
869: invokevirtual #60
872: iload         6
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #61
885: aload         7
887: invokestatic  #104
890: new           #54
893: dup
894: invokespecial #55
897: ldc           #56
899: invokevirtual #57
902: iload         8
904: invokevirtual #62
907: ldc           #59
909: invokevirtual #57
912: iconst_0
913: invokevirtual #62
916: ldc           #56
918: invokevirtual #57
921: invokevirtual #60
924: iload         8
926: ifne          933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #61
937: aload         10
939: invokestatic  #47
942: aload         12
944: invokestatic  #47
947: aload         14
949: invokestatic  #47
952: aload         15
954: invokestatic  #47
957: aload         16
959: invokestatic  #47
962: new           #54
965: dup
966: invokespecial #55
969: ldc           #56
971: invokevirtual #57
974: iload         19
976: invokevirtual #62
979: ldc           #59
981: invokevirtual #57
984: iconst_0
985: invokevirtual #62
988: ldc           #56
990: invokevirtual #57
993: invokevirtual #60
996: iload         19
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #61
1009: aload         22
1011: invokestatic  #47
1014: aload         23
1016: invokestatic  #47
1019: aload         24
1021: invokestatic  #47
1024: aload         25
1026: invokestatic  #47
1029: aload         26
1031: invokestatic  #47
1034: new           #54
1037: dup
1038: invokespecial #55
1041: ldc           #56
1043: invokevirtual #57
1046: aload         27
1048: invokevirtual #82
1051: ldc           #59
1053: invokevirtual #57
1056: getstatic     #78
1059: invokevirtual #82
1062: ldc           #56
1064: invokevirtual #57
1067: invokevirtual #60
1070: aload         27
1072: getstatic     #78
1075: invokevirtual #83
1078: invokestatic  #61
1081: aload         28
1083: invokestatic  #47
1086: new           #54
1089: dup
1090: invokespecial #55
1093: ldc           #56
1095: invokevirtual #57
1098: iload         29
1100: invokevirtual #62
1103: ldc           #59
1105: invokevirtual #57
1108: bipush        97
1110: invokevirtual #62
1113: ldc           #56
1115: invokevirtual #57
1118: invokevirtual #60
1121: iload         29
1123: bipush        97
1125: if_icmpne     1132
1128: iconst_1
1129: goto          1133
1132: iconst_0
1133: invokestatic  #61
1136: aload         35
1138: invokestatic  #47
1141: aload         38
1143: invokestatic  #47
1146: aload         39
1148: invokestatic  #47
1151: aload         42
1153: invokestatic  #47
1156: aload         44
1158: invokestatic  #47
1161: new           #54
1164: dup
1165: invokespecial #55
1168: ldc           #56
1170: invokevirtual #57
1173: iload         47
1175: invokevirtual #62
1178: ldc           #59
1180: invokevirtual #57
1183: iconst_0
1184: invokevirtual #62
1187: ldc           #56
1189: invokevirtual #57
1192: invokevirtual #60
1195: iload         47
1197: ifne          1204
1200: iconst_1
1201: goto          1205
1204: iconst_0
1205: invokestatic  #61
1208: new           #54
1211: dup
1212: invokespecial #55
1215: ldc           #56
1217: invokevirtual #57
1220: dload         48
1222: invokevirtual #58
1225: ldc           #59
1227: invokevirtual #57
1230: dconst_0
1231: invokevirtual #58
1234: ldc           #56
1236: invokevirtual #57
1239: invokevirtual #60
1242: dload         48
1244: dconst_0
1245: dcmpl
1246: ifne          1253
1249: iconst_1
1250: goto          1254
1253: iconst_0
1254: invokestatic  #61
1257: aload         52
1259: invokestatic  #47
1262: aload         55
1264: invokestatic  #47
1267: aload         56
1269: invokestatic  #47
1272: aload         57
1274: invokestatic  #47
1277: new           #54
1280: dup
1281: invokespecial #55
1284: ldc           #56
1286: invokevirtual #57
1289: iload         60
1291: invokevirtual #62
1294: ldc           #59
1296: invokevirtual #57
1299: iconst_0
1300: invokevirtual #62
1303: ldc           #56
1305: invokevirtual #57
1308: invokevirtual #60
1311: iload         60
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #61
1324: aload         63
1326: invokestatic  #47
1329: aload         64
1331: invokestatic  #47
1334: aload         65
1336: invokestatic  #47
1339: aload         66
1341: invokestatic  #47
1344: aload         67
1346: invokestatic  #47
1349: new           #54
1352: dup
1353: invokespecial #55
1356: ldc           #56
1358: invokevirtual #57
1361: aload         68
1363: invokevirtual #82
1366: ldc           #59
1368: invokevirtual #57
1371: getstatic     #78
1374: invokevirtual #82
1377: ldc           #56
1379: invokevirtual #57
1382: invokevirtual #60
1385: aload         68
1387: getstatic     #78
1390: invokevirtual #83
1393: invokestatic  #61
1396: aload         69
1398: invokestatic  #47
1401: aload         70
1403: invokestatic  #47
1406: new           #54
1409: dup
1410: invokespecial #55
1413: ldc           #56
1415: invokevirtual #57
1418: aload         71
1420: invokevirtual #82
1423: ldc           #59
1425: invokevirtual #57
1428: getstatic     #78
1431: invokevirtual #82
1434: ldc           #56
1436: invokevirtual #57
1439: invokevirtual #60
1442: aload         71
1444: getstatic     #78
1447: invokevirtual #83
1450: invokestatic  #61
1453: aload         72
1455: invokestatic  #47
1458: aload         73
1460: invokestatic  #47
1463: return
Exception table:
from    to  target type
716   739   742   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 3456
End line: 3556
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction0 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer4 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker3);
        int int5 = brentOptimizer4.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray10 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, sin8 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray10);
        org.apache.commons.math3.optimization.GoalType goalType14 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer4.optimize(97, univariateFunction13, goalType14, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair19 = brentOptimizer4.doOptimize();
        double double20 = brentOptimizer4.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24, sin26, sin27 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException30 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable22, (java.lang.Object[]) univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray28);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getEvaluations();
        int int37 = brentOptimizer35.getEvaluations();
        int int38 = brentOptimizer35.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction40 = null;
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray46 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin41, sin42, sin44, sin45 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction51 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction40, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable49, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType52 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair56 = brentOptimizer35.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable49, goalType52, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair60 = brentOptimizer4.optimize((int) (byte) 100, univariateFunction31, goalType52, 1.2786363145140075E-4d, (-1.5596856728972892d), 2.2227587494850775E-162d);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction61 = null;
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin62.derivative();
        double double65 = sin62.value((double) (short) 10);
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction67 = sin66.derivative();
        double double69 = sin66.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = sin66.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction71 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction61, (org.apache.commons.math3.analysis.UnivariateFunction) sin62, (org.apache.commons.math3.analysis.UnivariateFunction) sin66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = sin62.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction73 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction0, univariateFunction31, (org.apache.commons.math3.analysis.UnivariateFunction) sin62);
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure75 = sin62.value(derivativeStructure74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertTrue("'" + goalType14 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType14.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertNotNull(univariatePointValuePair19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.4210854715202004E-14d + "'", double20 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(multivariateFunction51);
        org.junit.Assert.assertTrue("'" + goalType52 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType52.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair56);
        org.junit.Assert.assertNotNull(univariatePointValuePair60);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.5440211108893698d) + "'", double65 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(univariateFunction67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.8414709825806044d + "'", double69 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction70);
        org.junit.Assert.assertNotNull(univariateFunction71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertNotNull(univariateFunction73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: new           #8
32: dup
33: ldc2_w        #31
36: ldc2_w        #33
39: aload_2
40: invokespecial #13
43: astore_3
44: aload_3
45: invokevirtual #71
48: istore        4
50: new           #72
53: dup
54: invokespecial #73
57: astore        5
59: new           #72
62: dup
63: invokespecial #73
66: astore        6
68: aload         6
70: invokevirtual #74
73: astore        7
75: iconst_2
76: anewarray     #75
79: dup
80: iconst_0
81: aload         5
83: aastore
84: dup
85: iconst_1
86: aload         6
88: aastore
89: astore        8
91: aload         8
93: invokestatic  #76
96: astore        9
98: aload         8
100: invokestatic  #77
103: astore        10
105: aload         8
107: checkcast     #89
110: invokestatic  #90
113: astore        11
115: getstatic     #78
118: astore        12
120: aload_3
121: bipush        97
123: aload         11
125: aload         12
127: ldc2_w        #91
130: ldc2_w        #93
133: ldc2_w        #91
136: invokevirtual #44
139: astore        13
141: aload_3
142: invokevirtual #51
145: astore        14
147: aload_3
148: invokevirtual #49
151: dstore        15
153: aconst_null
154: astore        17
156: new           #72
159: dup
160: invokespecial #73
163: astore        18
165: new           #72
168: dup
169: invokespecial #73
172: astore        19
174: aload         19
176: invokevirtual #74
179: astore        20
181: new           #72
184: dup
185: invokespecial #73
188: astore        21
190: new           #72
193: dup
194: invokespecial #73
197: astore        22
199: iconst_4
200: anewarray     #75
203: dup
204: iconst_0
205: aload         18
207: aastore
208: dup
209: iconst_1
210: aload         19
212: aastore
213: dup
214: iconst_2
215: aload         21
217: aastore
218: dup
219: iconst_3
220: aload         22
222: aastore
223: astore        23
225: aload         23
227: invokestatic  #76
230: astore        24
232: new           #122
235: dup
236: aload         17
238: aload         23
240: checkcast     #123
243: invokespecial #124
246: astore        25
248: aload         23
250: checkcast     #89
253: invokestatic  #109
256: astore        26
258: aconst_null
259: astore        27
261: new           #8
264: dup
265: ldc2_w        #31
268: ldc2_w        #33
271: aload         27
273: invokespecial #13
276: astore        28
278: aload         28
280: invokevirtual #71
283: istore        29
285: aload         28
287: invokevirtual #71
290: istore        30
292: aload         28
294: invokevirtual #71
297: istore        31
299: aconst_null
300: astore        32
302: new           #72
305: dup
306: invokespecial #73
309: astore        33
311: new           #72
314: dup
315: invokespecial #73
318: astore        34
320: aload         34
322: invokevirtual #74
325: astore        35
327: new           #72
330: dup
331: invokespecial #73
334: astore        36
336: new           #72
339: dup
340: invokespecial #73
343: astore        37
345: iconst_4
346: anewarray     #75
349: dup
350: iconst_0
351: aload         33
353: aastore
354: dup
355: iconst_1
356: aload         34
358: aastore
359: dup
360: iconst_2
361: aload         36
363: aastore
364: dup
365: iconst_3
366: aload         37
368: aastore
369: astore        38
371: aload         38
373: invokestatic  #76
376: astore        39
378: aload         38
380: checkcast     #89
383: invokestatic  #109
386: astore        40
388: aload         38
390: invokestatic  #77
393: astore        41
395: aload         32
397: aload         41
399: ldc2_w        #181
402: invokestatic  #183
405: astore        42
407: getstatic     #118
410: astore        43
412: aload         28
414: bipush        10
416: aload         41
418: aload         43
420: ldc2_w        #184
423: ldc2_w        #186
426: ldc2_w        #188
429: invokevirtual #44
432: astore        44
434: aload_3
435: bipush        100
437: aload         26
439: aload         43
441: ldc2_w        #238
444: ldc2_w        #400
447: ldc2_w        #402
450: invokevirtual #44
453: astore        45
455: aconst_null
456: astore        46
458: new           #72
461: dup
462: invokespecial #73
465: astore        47
467: aload         47
469: invokevirtual #74
472: astore        48
474: aload         47
476: ldc2_w        #91
479: invokevirtual #88
482: dstore        49
484: new           #72
487: dup
488: invokespecial #73
491: astore        51
493: aload         51
495: invokevirtual #74
498: astore        52
500: aload         51
502: ldc2_w        #86
505: invokevirtual #88
508: dstore        53
510: aload         51
512: invokevirtual #74
515: astore        55
517: aload         46
519: aload         47
521: aload         51
523: invokestatic  #404
526: astore        56
528: aload         47
530: invokevirtual #74
533: astore        57
535: aload_1
536: aload         26
538: aload         47
540: invokestatic  #404
543: astore        58
545: aconst_null
546: astore        59
548: aload         47
550: aload         59
552: invokevirtual #405
555: astore        60
557: ldc           #119
559: invokestatic  #15
562: goto          567
565: astore        60
567: new           #54
570: dup
571: invokespecial #55
574: ldc           #56
576: invokevirtual #57
579: iload         4
581: invokevirtual #62
584: ldc           #59
586: invokevirtual #57
589: iconst_0
590: invokevirtual #62
593: ldc           #56
595: invokevirtual #57
598: invokevirtual #60
601: iload         4
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #61
614: aload         7
616: invokestatic  #47
619: aload         8
621: invokestatic  #47
624: aload         9
626: invokestatic  #47
629: aload         10
631: invokestatic  #47
634: aload         11
636: invokestatic  #47
639: new           #54
642: dup
643: invokespecial #55
646: ldc           #56
648: invokevirtual #57
651: aload         12
653: invokevirtual #82
656: ldc           #59
658: invokevirtual #57
661: getstatic     #78
664: invokevirtual #82
667: ldc           #56
669: invokevirtual #57
672: invokevirtual #60
675: aload         12
677: getstatic     #78
680: invokevirtual #83
683: invokestatic  #61
686: aload         13
688: invokestatic  #47
691: aload         14
693: invokestatic  #47
696: new           #54
699: dup
700: invokespecial #55
703: ldc           #56
705: invokevirtual #57
708: dload         15
710: invokevirtual #58
713: ldc           #59
715: invokevirtual #57
718: ldc2_w        #93
721: invokevirtual #58
724: ldc           #56
726: invokevirtual #57
729: invokevirtual #60
732: dload         15
734: ldc2_w        #93
737: dcmpl
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #61
749: aload         20
751: invokestatic  #47
754: aload         23
756: invokestatic  #47
759: aload         24
761: invokestatic  #47
764: aload         26
766: invokestatic  #47
769: new           #54
772: dup
773: invokespecial #55
776: ldc           #56
778: invokevirtual #57
781: iload         29
783: invokevirtual #62
786: ldc           #59
788: invokevirtual #57
791: iconst_0
792: invokevirtual #62
795: ldc           #56
797: invokevirtual #57
800: invokevirtual #60
803: iload         29
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #61
816: new           #54
819: dup
820: invokespecial #55
823: ldc           #56
825: invokevirtual #57
828: iload         30
830: invokevirtual #62
833: ldc           #59
835: invokevirtual #57
838: iconst_0
839: invokevirtual #62
842: ldc           #56
844: invokevirtual #57
847: invokevirtual #60
850: iload         30
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #61
863: new           #54
866: dup
867: invokespecial #55
870: ldc           #56
872: invokevirtual #57
875: iload         31
877: invokevirtual #62
880: ldc           #59
882: invokevirtual #57
885: iconst_0
886: invokevirtual #62
889: ldc           #56
891: invokevirtual #57
894: invokevirtual #60
897: iload         31
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #61
910: aload         35
912: invokestatic  #47
915: aload         38
917: invokestatic  #47
920: aload         39
922: invokestatic  #47
925: aload         40
927: invokestatic  #47
930: aload         41
932: invokestatic  #47
935: aload         42
937: invokestatic  #47
940: new           #54
943: dup
944: invokespecial #55
947: ldc           #56
949: invokevirtual #57
952: aload         43
954: invokevirtual #82
957: ldc           #59
959: invokevirtual #57
962: getstatic     #118
965: invokevirtual #82
968: ldc           #56
970: invokevirtual #57
973: invokevirtual #60
976: aload         43
978: getstatic     #118
981: invokevirtual #83
984: invokestatic  #61
987: aload         44
989: invokestatic  #47
992: aload         45
994: invokestatic  #47
997: aload         48
999: invokestatic  #47
1002: new           #54
1005: dup
1006: invokespecial #55
1009: ldc           #56
1011: invokevirtual #57
1014: dload         49
1016: invokevirtual #58
1019: ldc           #59
1021: invokevirtual #57
1024: ldc2_w        #406
1027: invokevirtual #58
1030: ldc           #56
1032: invokevirtual #57
1035: invokevirtual #60
1038: dload         49
1040: ldc2_w        #406
1043: dcmpl
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #61
1055: aload         52
1057: invokestatic  #47
1060: new           #54
1063: dup
1064: invokespecial #55
1067: ldc           #56
1069: invokevirtual #57
1072: dload         53
1074: invokevirtual #58
1077: ldc           #59
1079: invokevirtual #57
1082: ldc2_w        #23
1085: invokevirtual #58
1088: ldc           #56
1090: invokevirtual #57
1093: invokevirtual #60
1096: dload         53
1098: ldc2_w        #23
1101: dcmpl
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #61
1113: aload         55
1115: invokestatic  #47
1118: aload         56
1120: invokestatic  #47
1123: aload         57
1125: invokestatic  #47
1128: aload         58
1130: invokestatic  #47
1133: return
Exception table:
from    to  target type
548   562   565   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 3559
End line: 3679
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = sin32.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray34 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin31, sin32 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray34);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable36 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray34);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction37 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable36);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction38 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker41 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer42 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker41);
        double double43 = brentOptimizer42.getMax();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        double double48 = sin45.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction49 = sin45.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin45.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getMaxEvaluations();
        double double56 = brentOptimizer54.getMax();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = sin59.derivative();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray63 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin58, sin59, sin61, sin62 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable64 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer69 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker68);
        int int70 = brentOptimizer69.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin72 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin73 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction74 = sin73.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray75 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin72, sin73 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable76 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray75);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable77 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray75);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction78 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray75);
        org.apache.commons.math3.optimization.GoalType goalType79 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer69.optimize(97, univariateFunction78, goalType79, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair84 = brentOptimizer69.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType85 = brentOptimizer69.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair88 = brentOptimizer54.optimize((int) ' ', univariateFunction65, goalType85, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer42.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin45, goalType85, 2.7182818284590446d, (double) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair94 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable36, goalType85, (double) Float.NaN, (-2.2250738585072014E-308d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (32) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray34);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertNotNull(univariateDifferentiable36);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction37);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction38);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.8414709825806044d + "'", double48 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction60);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray63);
        org.junit.Assert.assertNotNull(univariateDifferentiable64);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(univariateFunction74);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray75);
        org.junit.Assert.assertNotNull(univariateDifferentiable76);
        org.junit.Assert.assertNotNull(univariateDifferentiable77);
        org.junit.Assert.assertNotNull(univariateFunction78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertNotNull(univariatePointValuePair84);
        org.junit.Assert.assertTrue("'" + goalType85 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType85.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair88);
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #408
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: new           #72
208: dup
209: invokespecial #73
212: astore        23
214: new           #72
217: dup
218: invokespecial #73
221: astore        24
223: aload         24
225: invokevirtual #74
228: astore        25
230: iconst_2
231: anewarray     #75
234: dup
235: iconst_0
236: aload         23
238: aastore
239: dup
240: iconst_1
241: aload         24
243: aastore
244: astore        26
246: aload         26
248: invokestatic  #76
251: astore        27
253: aload         26
255: invokestatic  #77
258: astore        28
260: aload         28
262: invokestatic  #281
265: astore        29
267: aload         28
269: invokestatic  #281
272: astore        30
274: aconst_null
275: astore        31
277: new           #8
280: dup
281: ldc2_w        #31
284: ldc2_w        #33
287: aload         31
289: invokespecial #13
292: astore        32
294: aload         32
296: invokevirtual #49
299: dstore        33
301: new           #72
304: dup
305: invokespecial #73
308: astore        35
310: aload         35
312: invokevirtual #74
315: astore        36
317: aload         35
319: ldc2_w        #86
322: invokevirtual #88
325: dstore        37
327: aload         35
329: invokevirtual #74
332: astore        39
334: aload         35
336: invokevirtual #74
339: astore        40
341: aconst_null
342: astore        41
344: new           #8
347: dup
348: ldc2_w        #31
351: ldc2_w        #33
354: aload         41
356: invokespecial #13
359: astore        42
361: aload         42
363: invokevirtual #50
366: istore        43
368: aload         42
370: invokevirtual #49
373: dstore        44
375: new           #72
378: dup
379: invokespecial #73
382: astore        46
384: new           #72
387: dup
388: invokespecial #73
391: astore        47
393: aload         47
395: invokevirtual #74
398: astore        48
400: new           #72
403: dup
404: invokespecial #73
407: astore        49
409: new           #72
412: dup
413: invokespecial #73
416: astore        50
418: iconst_4
419: anewarray     #75
422: dup
423: iconst_0
424: aload         46
426: aastore
427: dup
428: iconst_1
429: aload         47
431: aastore
432: dup
433: iconst_2
434: aload         49
436: aastore
437: dup
438: iconst_3
439: aload         50
441: aastore
442: astore        51
444: aload         51
446: invokestatic  #76
449: astore        52
451: aload         51
453: checkcast     #89
456: invokestatic  #109
459: astore        53
461: aconst_null
462: astore        54
464: new           #8
467: dup
468: ldc2_w        #31
471: ldc2_w        #33
474: aload         54
476: invokespecial #13
479: astore        55
481: aload         55
483: invokevirtual #71
486: istore        56
488: new           #72
491: dup
492: invokespecial #73
495: astore        57
497: new           #72
500: dup
501: invokespecial #73
504: astore        58
506: aload         58
508: invokevirtual #74
511: astore        59
513: iconst_2
514: anewarray     #75
517: dup
518: iconst_0
519: aload         57
521: aastore
522: dup
523: iconst_1
524: aload         58
526: aastore
527: astore        60
529: aload         60
531: invokestatic  #76
534: astore        61
536: aload         60
538: invokestatic  #77
541: astore        62
543: aload         60
545: checkcast     #89
548: invokestatic  #90
551: astore        63
553: getstatic     #78
556: astore        64
558: aload         55
560: bipush        97
562: aload         63
564: aload         64
566: ldc2_w        #91
569: ldc2_w        #93
572: ldc2_w        #91
575: invokevirtual #44
578: astore        65
580: aload         55
582: invokevirtual #51
585: astore        66
587: aload         55
589: invokevirtual #110
592: astore        67
594: aload         42
596: bipush        32
598: aload         53
600: aload         67
602: ldc2_w        #173
605: ldc2_w        #175
608: invokevirtual #81
611: astore        68
613: aload         32
615: bipush        10
617: aload         35
619: aload         67
621: ldc2_w        #409
624: ldc2_w        #153
627: invokevirtual #81
630: astore        69
632: aload_2
633: bipush        32
635: aload         28
637: aload         67
639: ldc2_w        #302
642: ldc2_w        #339
645: invokevirtual #81
648: astore        70
650: ldc_w         #411
653: invokestatic  #15
656: goto          661
659: astore        70
661: new           #54
664: dup
665: invokespecial #55
668: ldc           #56
670: invokevirtual #57
673: iload_3
674: invokevirtual #62
677: ldc           #59
679: invokevirtual #57
682: iconst_0
683: invokevirtual #62
686: ldc           #56
688: invokevirtual #57
691: invokevirtual #60
694: iload_3
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #61
706: aload         6
708: invokestatic  #47
711: aload         7
713: invokestatic  #47
716: aload         8
718: invokestatic  #47
721: aload         9
723: invokestatic  #47
726: aload         10
728: invokestatic  #47
731: new           #54
734: dup
735: invokespecial #55
738: ldc           #56
740: invokevirtual #57
743: aload         11
745: invokevirtual #82
748: ldc           #59
750: invokevirtual #57
753: getstatic     #78
756: invokevirtual #82
759: ldc           #56
761: invokevirtual #57
764: invokevirtual #60
767: aload         11
769: getstatic     #78
772: invokevirtual #83
775: invokestatic  #61
778: aload         12
780: invokestatic  #47
783: aload         13
785: invokestatic  #47
788: new           #54
791: dup
792: invokespecial #55
795: ldc           #56
797: invokevirtual #57
800: aload         14
802: invokevirtual #82
805: ldc           #59
807: invokevirtual #57
810: getstatic     #78
813: invokevirtual #82
816: ldc           #56
818: invokevirtual #57
821: invokevirtual #60
824: aload         14
826: getstatic     #78
829: invokevirtual #83
832: invokestatic  #61
835: aload         15
837: invokestatic  #47
840: aload         17
842: invokestatic  #47
845: new           #54
848: dup
849: invokespecial #55
852: ldc           #56
854: invokevirtual #57
857: aload         18
859: invokevirtual #82
862: ldc           #59
864: invokevirtual #57
867: getstatic     #78
870: invokevirtual #82
873: ldc           #56
875: invokevirtual #57
878: invokevirtual #60
881: aload         18
883: getstatic     #78
886: invokevirtual #83
889: invokestatic  #61
892: aload         19
894: invokestatic  #47
897: new           #54
900: dup
901: invokespecial #55
904: ldc           #56
906: invokevirtual #57
909: dload         20
911: invokevirtual #58
914: ldc           #59
916: invokevirtual #57
919: dconst_0
920: invokevirtual #58
923: ldc           #56
925: invokevirtual #57
928: invokevirtual #60
931: dload         20
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #61
946: new           #54
949: dup
950: invokespecial #55
953: ldc           #56
955: invokevirtual #57
958: aload         22
960: invokevirtual #82
963: ldc           #59
965: invokevirtual #57
968: getstatic     #78
971: invokevirtual #82
974: ldc           #56
976: invokevirtual #57
979: invokevirtual #60
982: aload         22
984: getstatic     #78
987: invokevirtual #83
990: invokestatic  #61
993: aload         25
995: invokestatic  #47
998: aload         26
1000: invokestatic  #47
1003: aload         27
1005: invokestatic  #47
1008: aload         28
1010: invokestatic  #47
1013: aload         29
1015: invokestatic  #47
1018: aload         30
1020: invokestatic  #47
1023: new           #54
1026: dup
1027: invokespecial #55
1030: ldc           #56
1032: invokevirtual #57
1035: dload         33
1037: invokevirtual #58
1040: ldc           #59
1042: invokevirtual #57
1045: dconst_0
1046: invokevirtual #58
1049: ldc           #56
1051: invokevirtual #57
1054: invokevirtual #60
1057: dload         33
1059: dconst_0
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #61
1072: aload         36
1074: invokestatic  #47
1077: new           #54
1080: dup
1081: invokespecial #55
1084: ldc           #56
1086: invokevirtual #57
1089: dload         37
1091: invokevirtual #58
1094: ldc           #59
1096: invokevirtual #57
1099: ldc2_w        #23
1102: invokevirtual #58
1105: ldc           #56
1107: invokevirtual #57
1110: invokevirtual #60
1113: dload         37
1115: ldc2_w        #23
1118: dcmpl
1119: ifne          1126
1122: iconst_1
1123: goto          1127
1126: iconst_0
1127: invokestatic  #61
1130: aload         39
1132: invokestatic  #47
1135: aload         40
1137: invokestatic  #47
1140: new           #54
1143: dup
1144: invokespecial #55
1147: ldc           #56
1149: invokevirtual #57
1152: iload         43
1154: invokevirtual #62
1157: ldc           #59
1159: invokevirtual #57
1162: iconst_0
1163: invokevirtual #62
1166: ldc           #56
1168: invokevirtual #57
1171: invokevirtual #60
1174: iload         43
1176: ifne          1183
1179: iconst_1
1180: goto          1184
1183: iconst_0
1184: invokestatic  #61
1187: new           #54
1190: dup
1191: invokespecial #55
1194: ldc           #56
1196: invokevirtual #57
1199: dload         44
1201: invokevirtual #58
1204: ldc           #59
1206: invokevirtual #57
1209: dconst_0
1210: invokevirtual #58
1213: ldc           #56
1215: invokevirtual #57
1218: invokevirtual #60
1221: dload         44
1223: dconst_0
1224: dcmpl
1225: ifne          1232
1228: iconst_1
1229: goto          1233
1232: iconst_0
1233: invokestatic  #61
1236: aload         48
1238: invokestatic  #47
1241: aload         51
1243: invokestatic  #47
1246: aload         52
1248: invokestatic  #47
1251: aload         53
1253: invokestatic  #47
1256: new           #54
1259: dup
1260: invokespecial #55
1263: ldc           #56
1265: invokevirtual #57
1268: iload         56
1270: invokevirtual #62
1273: ldc           #59
1275: invokevirtual #57
1278: iconst_0
1279: invokevirtual #62
1282: ldc           #56
1284: invokevirtual #57
1287: invokevirtual #60
1290: iload         56
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #61
1303: aload         59
1305: invokestatic  #47
1308: aload         60
1310: invokestatic  #47
1313: aload         61
1315: invokestatic  #47
1318: aload         62
1320: invokestatic  #47
1323: aload         63
1325: invokestatic  #47
1328: new           #54
1331: dup
1332: invokespecial #55
1335: ldc           #56
1337: invokevirtual #57
1340: aload         64
1342: invokevirtual #82
1345: ldc           #59
1347: invokevirtual #57
1350: getstatic     #78
1353: invokevirtual #82
1356: ldc           #56
1358: invokevirtual #57
1361: invokevirtual #60
1364: aload         64
1366: getstatic     #78
1369: invokevirtual #83
1372: invokestatic  #61
1375: aload         65
1377: invokestatic  #47
1380: aload         66
1382: invokestatic  #47
1385: new           #54
1388: dup
1389: invokespecial #55
1392: ldc           #56
1394: invokevirtual #57
1397: aload         67
1399: invokevirtual #82
1402: ldc           #59
1404: invokevirtual #57
1407: getstatic     #78
1410: invokevirtual #82
1413: ldc           #56
1415: invokevirtual #57
1418: invokevirtual #60
1421: aload         67
1423: getstatic     #78
1426: invokevirtual #83
1429: invokestatic  #61
1432: aload         68
1434: invokestatic  #47
1437: aload         69
1439: invokestatic  #47
1442: return
Exception table:
from    to  target type
632   656   659   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 3682
End line: 3691
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(2704.000238418579d, 2.1544346900318834d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker5 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #412
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #216
34: ldc2_w        #199
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #103
51: astore        5
53: new           #54
56: dup
57: invokespecial #55
60: ldc           #56
62: invokevirtual #57
65: dload_3
66: invokevirtual #58
69: ldc           #59
71: invokevirtual #57
74: dconst_0
75: invokevirtual #58
78: ldc           #56
80: invokevirtual #57
83: invokevirtual #60
86: dload_3
87: dconst_0
88: dcmpl
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #61
100: aload         5
102: invokestatic  #104
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 3694
End line: 3738
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        double double30 = brentOptimizer3.getMin();
        int int31 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3.141592653589793d + "'", double30 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: aload_2
206: invokevirtual #231
209: dstore        23
211: aload_2
212: invokevirtual #71
215: istore        25
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         20
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         20
489: dconst_0
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #61
502: new           #54
505: dup
506: invokespecial #55
509: ldc           #56
511: invokevirtual #57
514: aload         22
516: invokevirtual #82
519: ldc           #59
521: invokevirtual #57
524: getstatic     #78
527: invokevirtual #82
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: aload         22
540: getstatic     #78
543: invokevirtual #83
546: invokestatic  #61
549: new           #54
552: dup
553: invokespecial #55
556: ldc           #56
558: invokevirtual #57
561: dload         23
563: invokevirtual #58
566: ldc           #59
568: invokevirtual #57
571: ldc2_w        #133
574: invokevirtual #58
577: ldc           #56
579: invokevirtual #57
582: invokevirtual #60
585: dload         23
587: ldc2_w        #133
590: dcmpl
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #61
602: new           #54
605: dup
606: invokespecial #55
609: ldc           #56
611: invokevirtual #57
614: iload         25
616: invokevirtual #62
619: ldc           #59
621: invokevirtual #57
624: iconst_1
625: invokevirtual #62
628: ldc           #56
630: invokevirtual #57
633: invokevirtual #60
636: iload         25
638: iconst_1
639: if_icmpne     646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #61
650: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 3741
End line: 3761
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = brentOptimizer3.computeObjectiveValue((double) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #414
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: ldc2_w        #91
69: invokevirtual #158
72: dstore        9
74: ldc           #52
76: invokestatic  #15
79: goto          84
82: astore        9
84: new           #54
87: dup
88: invokespecial #55
91: ldc           #56
93: invokevirtual #57
96: dload_3
97: invokevirtual #58
100: ldc           #59
102: invokevirtual #57
105: dconst_0
106: invokevirtual #58
109: ldc           #56
111: invokevirtual #57
114: invokevirtual #60
117: dload_3
118: dconst_0
119: dcmpl
120: ifne          127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #61
131: new           #54
134: dup
135: invokespecial #55
138: ldc           #56
140: invokevirtual #57
143: iload         5
145: invokevirtual #62
148: ldc           #59
150: invokevirtual #57
153: iconst_0
154: invokevirtual #62
157: ldc           #56
159: invokevirtual #57
162: invokevirtual #60
165: iload         5
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #61
178: aload         6
180: invokestatic  #104
183: new           #54
186: dup
187: invokespecial #55
190: ldc           #56
192: invokevirtual #57
195: dload         7
197: invokevirtual #58
200: ldc           #59
202: invokevirtual #57
205: dconst_0
206: invokevirtual #58
209: ldc           #56
211: invokevirtual #57
214: invokevirtual #60
217: dload         7
219: dconst_0
220: dcmpl
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #61
232: return
Exception table:
from    to  target type
65    79    82   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 3764
End line: 3857
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker77 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #415
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: invokevirtual #103
590: astore        58
592: new           #54
595: dup
596: invokespecial #55
599: ldc           #56
601: invokevirtual #57
604: iload_3
605: invokevirtual #62
608: ldc           #59
610: invokevirtual #57
613: iconst_0
614: invokevirtual #62
617: ldc           #56
619: invokevirtual #57
622: invokevirtual #60
625: iload_3
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #61
637: aload         6
639: invokestatic  #47
642: aload         7
644: invokestatic  #47
647: aload         8
649: invokestatic  #47
652: aload         9
654: invokestatic  #47
657: aload         10
659: invokestatic  #47
662: new           #54
665: dup
666: invokespecial #55
669: ldc           #56
671: invokevirtual #57
674: aload         11
676: invokevirtual #82
679: ldc           #59
681: invokevirtual #57
684: getstatic     #78
687: invokevirtual #82
690: ldc           #56
692: invokevirtual #57
695: invokevirtual #60
698: aload         11
700: getstatic     #78
703: invokevirtual #83
706: invokestatic  #61
709: aload         12
711: invokestatic  #47
714: new           #54
717: dup
718: invokespecial #55
721: ldc           #56
723: invokevirtual #57
726: iload         13
728: invokevirtual #62
731: ldc           #59
733: invokevirtual #57
736: bipush        97
738: invokevirtual #62
741: ldc           #56
743: invokevirtual #57
746: invokevirtual #60
749: iload         13
751: bipush        97
753: if_icmpne     760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #61
764: aload         19
766: invokestatic  #47
769: aload         22
771: invokestatic  #47
774: aload         23
776: invokestatic  #47
779: aload         26
781: invokestatic  #47
784: aload         28
786: invokestatic  #47
789: new           #54
792: dup
793: invokespecial #55
796: ldc           #56
798: invokevirtual #57
801: iload         31
803: invokevirtual #62
806: ldc           #59
808: invokevirtual #57
811: iconst_0
812: invokevirtual #62
815: ldc           #56
817: invokevirtual #57
820: invokevirtual #60
823: iload         31
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #61
836: new           #54
839: dup
840: invokespecial #55
843: ldc           #56
845: invokevirtual #57
848: dload         32
850: invokevirtual #58
853: ldc           #59
855: invokevirtual #57
858: dconst_0
859: invokevirtual #58
862: ldc           #56
864: invokevirtual #57
867: invokevirtual #60
870: dload         32
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #61
885: aload         36
887: invokestatic  #47
890: aload         39
892: invokestatic  #47
895: aload         40
897: invokestatic  #47
900: aload         41
902: invokestatic  #47
905: new           #54
908: dup
909: invokespecial #55
912: ldc           #56
914: invokevirtual #57
917: iload         44
919: invokevirtual #62
922: ldc           #59
924: invokevirtual #57
927: iconst_0
928: invokevirtual #62
931: ldc           #56
933: invokevirtual #57
936: invokevirtual #60
939: iload         44
941: ifne          948
944: iconst_1
945: goto          949
948: iconst_0
949: invokestatic  #61
952: aload         47
954: invokestatic  #47
957: aload         48
959: invokestatic  #47
962: aload         49
964: invokestatic  #47
967: aload         50
969: invokestatic  #47
972: aload         51
974: invokestatic  #47
977: new           #54
980: dup
981: invokespecial #55
984: ldc           #56
986: invokevirtual #57
989: aload         52
991: invokevirtual #82
994: ldc           #59
996: invokevirtual #57
999: getstatic     #78
1002: invokevirtual #82
1005: ldc           #56
1007: invokevirtual #57
1010: invokevirtual #60
1013: aload         52
1015: getstatic     #78
1018: invokevirtual #83
1021: invokestatic  #61
1024: aload         53
1026: invokestatic  #47
1029: aload         54
1031: invokestatic  #47
1034: new           #54
1037: dup
1038: invokespecial #55
1041: ldc           #56
1043: invokevirtual #57
1046: aload         55
1048: invokevirtual #82
1051: ldc           #59
1053: invokevirtual #57
1056: getstatic     #78
1059: invokevirtual #82
1062: ldc           #56
1064: invokevirtual #57
1067: invokevirtual #60
1070: aload         55
1072: getstatic     #78
1075: invokevirtual #83
1078: invokestatic  #61
1081: aload         56
1083: invokestatic  #47
1086: aload         57
1088: invokestatic  #47
1091: aload         58
1093: invokestatic  #104
1096: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 3860
End line: 3904
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        int int30 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: aload_2
206: invokevirtual #50
209: istore        23
211: aload_2
212: invokevirtual #103
215: astore        24
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         20
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         20
489: dconst_0
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #61
502: new           #54
505: dup
506: invokespecial #55
509: ldc           #56
511: invokevirtual #57
514: aload         22
516: invokevirtual #82
519: ldc           #59
521: invokevirtual #57
524: getstatic     #78
527: invokevirtual #82
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: aload         22
540: getstatic     #78
543: invokevirtual #83
546: invokestatic  #61
549: new           #54
552: dup
553: invokespecial #55
556: ldc           #56
558: invokevirtual #57
561: iload         23
563: invokevirtual #62
566: ldc           #59
568: invokevirtual #57
571: bipush        97
573: invokevirtual #62
576: ldc           #56
578: invokevirtual #57
581: invokevirtual #60
584: iload         23
586: bipush        97
588: if_icmpne     595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #61
599: aload         24
601: invokestatic  #104
604: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 3907
End line: 3918
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #417
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: iload_3
72: invokevirtual #62
75: ldc           #59
77: invokevirtual #57
80: iconst_0
81: invokevirtual #62
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #61
104: new           #54
107: dup
108: invokespecial #55
111: ldc           #56
113: invokevirtual #57
116: iload         4
118: invokevirtual #62
121: ldc           #59
123: invokevirtual #57
126: iconst_0
127: invokevirtual #62
130: ldc           #56
132: invokevirtual #57
135: invokevirtual #60
138: iload         4
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #61
151: new           #54
154: dup
155: invokespecial #55
158: ldc           #56
160: invokevirtual #57
163: iload         5
165: invokevirtual #62
168: ldc           #59
170: invokevirtual #57
173: iconst_0
174: invokevirtual #62
177: ldc           #56
179: invokevirtual #57
182: invokevirtual #60
185: iload         5
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #61
198: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 3921
End line: 3992
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        double double8 = brentOptimizer3.getMax();
        double double9 = brentOptimizer3.getMax();
        int int10 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction12 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction12, (-0.0874913248293193d));
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer18 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker17);
        int int19 = brentOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray24);
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer18.optimize(97, univariateFunction27, goalType28, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair33 = brentOptimizer18.doOptimize();
        int int34 = brentOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable36 = null;
        org.apache.commons.math3.exception.util.Localizable localizable37 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray38 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray38);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException40 = new org.apache.commons.math3.exception.MathArithmeticException(localizable37, (java.lang.Object[]) differentiableUnivariateFunctionArray38);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray38);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException42 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable36, (java.lang.Object[]) differentiableUnivariateFunctionArray38);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray38);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction44 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray38);
        org.apache.commons.math3.optimization.GoalType goalType45 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer18.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction44, goalType45, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair52 = brentOptimizer3.optimize(4, univariateFunction14, goalType45, 0.8342233605065102d, (double) 524L, 80372.16322833701d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertNotNull(univariatePointValuePair33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray38);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction39);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction44);
        org.junit.Assert.assertTrue("'" + goalType45 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType45.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #418
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #49
69: dstore        9
71: aload_2
72: invokevirtual #49
75: dstore        11
77: aload_2
78: invokevirtual #71
81: istore        13
83: aconst_null
84: astore        14
86: aload         14
88: ldc2_w        #160
91: invokestatic  #37
94: astore        15
96: aconst_null
97: astore        16
99: new           #8
102: dup
103: ldc2_w        #31
106: ldc2_w        #33
109: aload         16
111: invokespecial #13
114: astore        17
116: aload         17
118: invokevirtual #71
121: istore        18
123: new           #72
126: dup
127: invokespecial #73
130: astore        19
132: new           #72
135: dup
136: invokespecial #73
139: astore        20
141: aload         20
143: invokevirtual #74
146: astore        21
148: iconst_2
149: anewarray     #75
152: dup
153: iconst_0
154: aload         19
156: aastore
157: dup
158: iconst_1
159: aload         20
161: aastore
162: astore        22
164: aload         22
166: invokestatic  #76
169: astore        23
171: aload         22
173: invokestatic  #77
176: astore        24
178: aload         22
180: checkcast     #89
183: invokestatic  #90
186: astore        25
188: getstatic     #78
191: astore        26
193: aload         17
195: bipush        97
197: aload         25
199: aload         26
201: ldc2_w        #91
204: ldc2_w        #93
207: ldc2_w        #91
210: invokevirtual #44
213: astore        27
215: aload         17
217: invokevirtual #51
220: astore        28
222: aload         17
224: invokevirtual #50
227: istore        29
229: aconst_null
230: astore        30
232: aconst_null
233: astore        31
235: iconst_0
236: anewarray     #141
239: astore        32
241: aload         32
243: invokestatic  #142
246: astore        33
248: new           #273
251: dup
252: aload         31
254: aload         32
256: checkcast     #123
259: invokespecial #274
262: astore        34
264: aload         32
266: invokestatic  #245
269: astore        35
271: new           #122
274: dup
275: aload         30
277: aload         32
279: checkcast     #123
282: invokespecial #124
285: astore        36
287: aload         32
289: checkcast     #89
292: invokestatic  #90
295: astore        37
297: aload         32
299: invokestatic  #142
302: astore        38
304: getstatic     #118
307: astore        39
309: aload         17
311: bipush        97
313: aload         38
315: aload         39
317: ldc2_w        #339
320: ldc2_w        #341
323: invokevirtual #81
326: astore        40
328: aload_2
329: iconst_4
330: aload         15
332: aload         39
334: ldc2_w        #419
337: ldc2_w        #421
340: ldc2_w        #233
343: invokevirtual #44
346: astore        41
348: ldc           #119
350: invokestatic  #15
353: goto          358
356: astore        41
358: new           #54
361: dup
362: invokespecial #55
365: ldc           #56
367: invokevirtual #57
370: dload_3
371: invokevirtual #58
374: ldc           #59
376: invokevirtual #57
379: dconst_0
380: invokevirtual #58
383: ldc           #56
385: invokevirtual #57
388: invokevirtual #60
391: dload_3
392: dconst_0
393: dcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #61
405: new           #54
408: dup
409: invokespecial #55
412: ldc           #56
414: invokevirtual #57
417: iload         5
419: invokevirtual #62
422: ldc           #59
424: invokevirtual #57
427: iconst_0
428: invokevirtual #62
431: ldc           #56
433: invokevirtual #57
436: invokevirtual #60
439: iload         5
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #61
452: aload         6
454: invokestatic  #104
457: new           #54
460: dup
461: invokespecial #55
464: ldc           #56
466: invokevirtual #57
469: dload         7
471: invokevirtual #58
474: ldc           #59
476: invokevirtual #57
479: dconst_0
480: invokevirtual #58
483: ldc           #56
485: invokevirtual #57
488: invokevirtual #60
491: dload         7
493: dconst_0
494: dcmpl
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #61
506: new           #54
509: dup
510: invokespecial #55
513: ldc           #56
515: invokevirtual #57
518: dload         9
520: invokevirtual #58
523: ldc           #59
525: invokevirtual #57
528: dconst_0
529: invokevirtual #58
532: ldc           #56
534: invokevirtual #57
537: invokevirtual #60
540: dload         9
542: dconst_0
543: dcmpl
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #61
555: new           #54
558: dup
559: invokespecial #55
562: ldc           #56
564: invokevirtual #57
567: dload         11
569: invokevirtual #58
572: ldc           #59
574: invokevirtual #57
577: dconst_0
578: invokevirtual #58
581: ldc           #56
583: invokevirtual #57
586: invokevirtual #60
589: dload         11
591: dconst_0
592: dcmpl
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #61
604: new           #54
607: dup
608: invokespecial #55
611: ldc           #56
613: invokevirtual #57
616: iload         13
618: invokevirtual #62
621: ldc           #59
623: invokevirtual #57
626: iconst_0
627: invokevirtual #62
630: ldc           #56
632: invokevirtual #57
635: invokevirtual #60
638: iload         13
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #61
651: aload         15
653: invokestatic  #47
656: new           #54
659: dup
660: invokespecial #55
663: ldc           #56
665: invokevirtual #57
668: iload         18
670: invokevirtual #62
673: ldc           #59
675: invokevirtual #57
678: iconst_0
679: invokevirtual #62
682: ldc           #56
684: invokevirtual #57
687: invokevirtual #60
690: iload         18
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #61
703: aload         21
705: invokestatic  #47
708: aload         22
710: invokestatic  #47
713: aload         23
715: invokestatic  #47
718: aload         24
720: invokestatic  #47
723: aload         25
725: invokestatic  #47
728: new           #54
731: dup
732: invokespecial #55
735: ldc           #56
737: invokevirtual #57
740: aload         26
742: invokevirtual #82
745: ldc           #59
747: invokevirtual #57
750: getstatic     #78
753: invokevirtual #82
756: ldc           #56
758: invokevirtual #57
761: invokevirtual #60
764: aload         26
766: getstatic     #78
769: invokevirtual #83
772: invokestatic  #61
775: aload         27
777: invokestatic  #47
780: aload         28
782: invokestatic  #47
785: new           #54
788: dup
789: invokespecial #55
792: ldc           #56
794: invokevirtual #57
797: iload         29
799: invokevirtual #62
802: ldc           #59
804: invokevirtual #57
807: bipush        97
809: invokevirtual #62
812: ldc           #56
814: invokevirtual #57
817: invokevirtual #60
820: iload         29
822: bipush        97
824: if_icmpne     831
827: iconst_1
828: goto          832
831: iconst_0
832: invokestatic  #61
835: aload         32
837: invokestatic  #47
840: aload         33
842: invokestatic  #47
845: aload         35
847: invokestatic  #47
850: aload         37
852: invokestatic  #47
855: aload         38
857: invokestatic  #47
860: new           #54
863: dup
864: invokespecial #55
867: ldc           #56
869: invokevirtual #57
872: aload         39
874: invokevirtual #82
877: ldc           #59
879: invokevirtual #57
882: getstatic     #118
885: invokevirtual #82
888: ldc           #56
890: invokevirtual #57
893: invokevirtual #60
896: aload         39
898: getstatic     #118
901: invokevirtual #83
904: invokestatic  #61
907: aload         40
909: invokestatic  #47
912: return
Exception table:
from    to  target type
328   353   356   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 3995
End line: 4006
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 10, (double) 0L, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #423
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #91
34: dconst_0
35: aload_1
36: invokespecial #13
39: astore_2
40: ldc_w         #424
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
27    46    49   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 4009
End line: 4020
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #425
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #71
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: dload_3
72: invokevirtual #58
75: ldc           #59
77: invokevirtual #57
80: dconst_0
81: invokevirtual #58
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: dload_3
93: dconst_0
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #61
106: new           #54
109: dup
110: invokespecial #55
113: ldc           #56
115: invokevirtual #57
118: iload         5
120: invokevirtual #62
123: ldc           #59
125: invokevirtual #57
128: iconst_0
129: invokevirtual #62
132: ldc           #56
134: invokevirtual #57
137: invokevirtual #60
140: iload         5
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #61
153: aload         6
155: invokestatic  #104
158: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 4023
End line: 4136
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin51, sin52, sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray58 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, univariateDifferentiable39, univariateDifferentiable46, sin47, sin49, univariateDifferentiable57 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer63 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker62);
        int int64 = brentOptimizer63.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin67 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction68 = sin67.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray69 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin66, sin67 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable70 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable71 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray69);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer63.optimize(97, univariateFunction72, goalType73, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer63.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType79 = brentOptimizer63.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable59, goalType79, 0.0d, (double) (-127L), (-0.017453292519943295d));
        int int84 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker30);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(univariateFunction68);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray69);
        org.junit.Assert.assertNotNull(univariateDifferentiable70);
        org.junit.Assert.assertNotNull(univariateDifferentiable71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 32 + "'", int84 == 32);
        org.junit.Assert.assertNotNull(univariatePointValuePair85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #426
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #103
209: astore        23
211: new           #72
214: dup
215: invokespecial #73
218: astore        24
220: new           #72
223: dup
224: invokespecial #73
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: new           #72
248: dup
249: invokespecial #73
252: astore        28
254: new           #72
257: dup
258: invokespecial #73
261: astore        29
263: iconst_4
264: anewarray     #75
267: dup
268: iconst_0
269: aload         25
271: aastore
272: dup
273: iconst_1
274: aload         26
276: aastore
277: dup
278: iconst_2
279: aload         28
281: aastore
282: dup
283: iconst_3
284: aload         29
286: aastore
287: astore        30
289: aload         30
291: invokestatic  #76
294: astore        31
296: new           #72
299: dup
300: invokespecial #73
303: astore        32
305: new           #72
308: dup
309: invokespecial #73
312: astore        33
314: aload         33
316: invokevirtual #74
319: astore        34
321: new           #72
324: dup
325: invokespecial #73
328: astore        35
330: new           #72
333: dup
334: invokespecial #73
337: astore        36
339: iconst_4
340: anewarray     #75
343: dup
344: iconst_0
345: aload         32
347: aastore
348: dup
349: iconst_1
350: aload         33
352: aastore
353: dup
354: iconst_2
355: aload         35
357: aastore
358: dup
359: iconst_3
360: aload         36
362: aastore
363: astore        37
365: aload         37
367: invokestatic  #76
370: astore        38
372: new           #72
375: dup
376: invokespecial #73
379: astore        39
381: aload         39
383: invokevirtual #74
386: astore        40
388: new           #72
391: dup
392: invokespecial #73
395: astore        41
397: aload         41
399: invokevirtual #74
402: astore        42
404: new           #72
407: dup
408: invokespecial #73
411: astore        43
413: new           #72
416: dup
417: invokespecial #73
420: astore        44
422: aload         44
424: invokevirtual #74
427: astore        45
429: new           #72
432: dup
433: invokespecial #73
436: astore        46
438: new           #72
441: dup
442: invokespecial #73
445: astore        47
447: iconst_4
448: anewarray     #75
451: dup
452: iconst_0
453: aload         43
455: aastore
456: dup
457: iconst_1
458: aload         44
460: aastore
461: dup
462: iconst_2
463: aload         46
465: aastore
466: dup
467: iconst_3
468: aload         47
470: aastore
471: astore        48
473: aload         48
475: invokestatic  #76
478: astore        49
480: bipush        6
482: anewarray     #75
485: dup
486: iconst_0
487: aload         24
489: aastore
490: dup
491: iconst_1
492: aload         31
494: aastore
495: dup
496: iconst_2
497: aload         38
499: aastore
500: dup
501: iconst_3
502: aload         39
504: aastore
505: dup
506: iconst_4
507: aload         41
509: aastore
510: dup
511: iconst_5
512: aload         49
514: aastore
515: astore        50
517: aload         50
519: invokestatic  #77
522: astore        51
524: aconst_null
525: astore        52
527: new           #8
530: dup
531: ldc2_w        #31
534: ldc2_w        #33
537: aload         52
539: invokespecial #13
542: astore        53
544: aload         53
546: invokevirtual #71
549: istore        54
551: new           #72
554: dup
555: invokespecial #73
558: astore        55
560: new           #72
563: dup
564: invokespecial #73
567: astore        56
569: aload         56
571: invokevirtual #74
574: astore        57
576: iconst_2
577: anewarray     #75
580: dup
581: iconst_0
582: aload         55
584: aastore
585: dup
586: iconst_1
587: aload         56
589: aastore
590: astore        58
592: aload         58
594: invokestatic  #76
597: astore        59
599: aload         58
601: invokestatic  #77
604: astore        60
606: aload         58
608: checkcast     #89
611: invokestatic  #90
614: astore        61
616: getstatic     #78
619: astore        62
621: aload         53
623: bipush        97
625: aload         61
627: aload         62
629: ldc2_w        #91
632: ldc2_w        #93
635: ldc2_w        #91
638: invokevirtual #44
641: astore        63
643: aload         53
645: invokevirtual #51
648: astore        64
650: aload         53
652: invokevirtual #110
655: astore        65
657: aload_2
658: bipush        32
660: aload         51
662: aload         65
664: dconst_0
665: ldc2_w        #290
668: ldc2_w        #427
671: invokevirtual #44
674: astore        66
676: aload_2
677: invokevirtual #50
680: istore        67
682: aload_2
683: invokevirtual #51
686: astore        68
688: new           #54
691: dup
692: invokespecial #55
695: ldc           #56
697: invokevirtual #57
700: iload_3
701: invokevirtual #62
704: ldc           #59
706: invokevirtual #57
709: iconst_0
710: invokevirtual #62
713: ldc           #56
715: invokevirtual #57
718: invokevirtual #60
721: iload_3
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #61
733: aload         6
735: invokestatic  #47
738: aload         7
740: invokestatic  #47
743: aload         8
745: invokestatic  #47
748: aload         9
750: invokestatic  #47
753: aload         10
755: invokestatic  #47
758: new           #54
761: dup
762: invokespecial #55
765: ldc           #56
767: invokevirtual #57
770: aload         11
772: invokevirtual #82
775: ldc           #59
777: invokevirtual #57
780: getstatic     #78
783: invokevirtual #82
786: ldc           #56
788: invokevirtual #57
791: invokevirtual #60
794: aload         11
796: getstatic     #78
799: invokevirtual #83
802: invokestatic  #61
805: aload         12
807: invokestatic  #47
810: aload         13
812: invokestatic  #47
815: new           #54
818: dup
819: invokespecial #55
822: ldc           #56
824: invokevirtual #57
827: aload         14
829: invokevirtual #82
832: ldc           #59
834: invokevirtual #57
837: getstatic     #78
840: invokevirtual #82
843: ldc           #56
845: invokevirtual #57
848: invokevirtual #60
851: aload         14
853: getstatic     #78
856: invokevirtual #83
859: invokestatic  #61
862: aload         15
864: invokestatic  #47
867: aload         17
869: invokestatic  #47
872: new           #54
875: dup
876: invokespecial #55
879: ldc           #56
881: invokevirtual #57
884: aload         18
886: invokevirtual #82
889: ldc           #59
891: invokevirtual #57
894: getstatic     #78
897: invokevirtual #82
900: ldc           #56
902: invokevirtual #57
905: invokevirtual #60
908: aload         18
910: getstatic     #78
913: invokevirtual #83
916: invokestatic  #61
919: aload         19
921: invokestatic  #47
924: new           #54
927: dup
928: invokespecial #55
931: ldc           #56
933: invokevirtual #57
936: dload         20
938: invokevirtual #58
941: ldc           #59
943: invokevirtual #57
946: dconst_0
947: invokevirtual #58
950: ldc           #56
952: invokevirtual #57
955: invokevirtual #60
958: dload         20
960: dconst_0
961: dcmpl
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #61
973: new           #54
976: dup
977: invokespecial #55
980: ldc           #56
982: invokevirtual #57
985: iload         22
987: invokevirtual #62
990: ldc           #59
992: invokevirtual #57
995: bipush        97
997: invokevirtual #62
1000: ldc           #56
1002: invokevirtual #57
1005: invokevirtual #60
1008: iload         22
1010: bipush        97
1012: if_icmpne     1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #61
1023: aload         23
1025: invokestatic  #104
1028: aload         27
1030: invokestatic  #47
1033: aload         30
1035: invokestatic  #47
1038: aload         31
1040: invokestatic  #47
1043: aload         34
1045: invokestatic  #47
1048: aload         37
1050: invokestatic  #47
1053: aload         38
1055: invokestatic  #47
1058: aload         40
1060: invokestatic  #47
1063: aload         42
1065: invokestatic  #47
1068: aload         45
1070: invokestatic  #47
1073: aload         48
1075: invokestatic  #47
1078: aload         49
1080: invokestatic  #47
1083: aload         50
1085: invokestatic  #47
1088: aload         51
1090: invokestatic  #47
1093: new           #54
1096: dup
1097: invokespecial #55
1100: ldc           #56
1102: invokevirtual #57
1105: iload         54
1107: invokevirtual #62
1110: ldc           #59
1112: invokevirtual #57
1115: iconst_0
1116: invokevirtual #62
1119: ldc           #56
1121: invokevirtual #57
1124: invokevirtual #60
1127: iload         54
1129: ifne          1136
1132: iconst_1
1133: goto          1137
1136: iconst_0
1137: invokestatic  #61
1140: aload         57
1142: invokestatic  #47
1145: aload         58
1147: invokestatic  #47
1150: aload         59
1152: invokestatic  #47
1155: aload         60
1157: invokestatic  #47
1160: aload         61
1162: invokestatic  #47
1165: new           #54
1168: dup
1169: invokespecial #55
1172: ldc           #56
1174: invokevirtual #57
1177: aload         62
1179: invokevirtual #82
1182: ldc           #59
1184: invokevirtual #57
1187: getstatic     #78
1190: invokevirtual #82
1193: ldc           #56
1195: invokevirtual #57
1198: invokevirtual #60
1201: aload         62
1203: getstatic     #78
1206: invokevirtual #83
1209: invokestatic  #61
1212: aload         63
1214: invokestatic  #47
1217: aload         64
1219: invokestatic  #47
1222: new           #54
1225: dup
1226: invokespecial #55
1229: ldc           #56
1231: invokevirtual #57
1234: aload         65
1236: invokevirtual #82
1239: ldc           #59
1241: invokevirtual #57
1244: getstatic     #78
1247: invokevirtual #82
1250: ldc           #56
1252: invokevirtual #57
1255: invokevirtual #60
1258: aload         65
1260: getstatic     #78
1263: invokevirtual #83
1266: invokestatic  #61
1269: aload         66
1271: invokestatic  #47
1274: new           #54
1277: dup
1278: invokespecial #55
1281: ldc           #56
1283: invokevirtual #57
1286: iload         67
1288: invokevirtual #62
1291: ldc           #59
1293: invokevirtual #57
1296: bipush        32
1298: invokevirtual #62
1301: ldc           #56
1303: invokevirtual #57
1306: invokevirtual #60
1309: iload         67
1311: bipush        32
1313: if_icmpne     1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #61
1324: aload         68
1326: invokestatic  #47
1329: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 4139
End line: 4144
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(22.248715438260383d, 7.85555250883871E7d, univariatePointValuePairConvergenceChecker2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #429
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #430
34: ldc2_w        #432
37: aload_1
38: invokespecial #13
41: astore_2
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 4147
End line: 4187
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin22.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin22);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload         16
195: invokevirtual #74
198: astore        20
200: aload         16
202: invokestatic  #143
205: astore        21
207: new           #54
210: dup
211: invokespecial #55
214: ldc           #56
216: invokevirtual #57
219: iload_3
220: invokevirtual #62
223: ldc           #59
225: invokevirtual #57
228: iconst_0
229: invokevirtual #62
232: ldc           #56
234: invokevirtual #57
237: invokevirtual #60
240: iload_3
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #61
252: aload         6
254: invokestatic  #47
257: aload         7
259: invokestatic  #47
262: aload         8
264: invokestatic  #47
267: aload         9
269: invokestatic  #47
272: aload         10
274: invokestatic  #47
277: new           #54
280: dup
281: invokespecial #55
284: ldc           #56
286: invokevirtual #57
289: aload         11
291: invokevirtual #82
294: ldc           #59
296: invokevirtual #57
299: getstatic     #78
302: invokevirtual #82
305: ldc           #56
307: invokevirtual #57
310: invokevirtual #60
313: aload         11
315: getstatic     #78
318: invokevirtual #83
321: invokestatic  #61
324: aload         12
326: invokestatic  #47
329: aload         13
331: invokestatic  #47
334: new           #54
337: dup
338: invokespecial #55
341: ldc           #56
343: invokevirtual #57
346: aload         14
348: invokevirtual #82
351: ldc           #59
353: invokevirtual #57
356: getstatic     #78
359: invokevirtual #82
362: ldc           #56
364: invokevirtual #57
367: invokevirtual #60
370: aload         14
372: getstatic     #78
375: invokevirtual #83
378: invokestatic  #61
381: aload         15
383: invokestatic  #47
386: aload         17
388: invokestatic  #47
391: new           #54
394: dup
395: invokespecial #55
398: ldc           #56
400: invokevirtual #57
403: aload         18
405: invokevirtual #82
408: ldc           #59
410: invokevirtual #57
413: getstatic     #78
416: invokevirtual #82
419: ldc           #56
421: invokevirtual #57
424: invokevirtual #60
427: aload         18
429: getstatic     #78
432: invokevirtual #83
435: invokestatic  #61
438: aload         19
440: invokestatic  #47
443: aload         20
445: invokestatic  #47
448: aload         21
450: invokestatic  #47
453: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 4190
End line: 4252
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        double double13 = sin10.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin10.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = sin10.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer20 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker19);
        int int21 = brentOptimizer20.getEvaluations();
        int int22 = brentOptimizer20.getEvaluations();
        int int23 = brentOptimizer20.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction25 = null;
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction25, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable34, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType37 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer20.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable34, goalType37, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer3.optimize(0, univariateFunction16, goalType37, (-9.079985908828064E-5d), 1.7391304347826086d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.8414709825806044d + "'", double13 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(multivariateFunction36);
        org.junit.Assert.assertTrue("'" + goalType37 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType37.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #435
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #103
63: astore        7
65: aload_2
66: invokevirtual #50
69: istore        8
71: new           #72
74: dup
75: invokespecial #73
78: astore        9
80: aload         9
82: invokevirtual #74
85: astore        10
87: aload         9
89: ldc2_w        #86
92: invokevirtual #88
95: dstore        11
97: aload         9
99: invokestatic  #143
102: astore        13
104: aload         9
106: invokevirtual #74
109: astore        14
111: aload         9
113: invokevirtual #74
116: astore        15
118: aconst_null
119: astore        16
121: new           #8
124: dup
125: ldc2_w        #31
128: ldc2_w        #33
131: aload         16
133: invokespecial #13
136: astore        17
138: aload         17
140: invokevirtual #71
143: istore        18
145: aload         17
147: invokevirtual #71
150: istore        19
152: aload         17
154: invokevirtual #71
157: istore        20
159: aconst_null
160: astore        21
162: new           #72
165: dup
166: invokespecial #73
169: astore        22
171: new           #72
174: dup
175: invokespecial #73
178: astore        23
180: aload         23
182: invokevirtual #74
185: astore        24
187: new           #72
190: dup
191: invokespecial #73
194: astore        25
196: new           #72
199: dup
200: invokespecial #73
203: astore        26
205: iconst_4
206: anewarray     #75
209: dup
210: iconst_0
211: aload         22
213: aastore
214: dup
215: iconst_1
216: aload         23
218: aastore
219: dup
220: iconst_2
221: aload         25
223: aastore
224: dup
225: iconst_3
226: aload         26
228: aastore
229: astore        27
231: aload         27
233: invokestatic  #76
236: astore        28
238: aload         27
240: checkcast     #89
243: invokestatic  #109
246: astore        29
248: aload         27
250: invokestatic  #77
253: astore        30
255: aload         21
257: aload         30
259: ldc2_w        #181
262: invokestatic  #183
265: astore        31
267: getstatic     #118
270: astore        32
272: aload         17
274: bipush        10
276: aload         30
278: aload         32
280: ldc2_w        #184
283: ldc2_w        #186
286: ldc2_w        #188
289: invokevirtual #44
292: astore        33
294: aload_2
295: iconst_0
296: aload         15
298: aload         32
300: ldc2_w        #221
303: ldc2_w        #396
306: invokevirtual #81
309: astore        34
311: ldc           #52
313: invokestatic  #15
316: goto          321
319: astore        34
321: new           #54
324: dup
325: invokespecial #55
328: ldc           #56
330: invokevirtual #57
333: iload_3
334: invokevirtual #62
337: ldc           #59
339: invokevirtual #57
342: iconst_0
343: invokevirtual #62
346: ldc           #56
348: invokevirtual #57
351: invokevirtual #60
354: iload_3
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #61
366: new           #54
369: dup
370: invokespecial #55
373: ldc           #56
375: invokevirtual #57
378: dload         4
380: invokevirtual #58
383: ldc           #59
385: invokevirtual #57
388: dconst_0
389: invokevirtual #58
392: ldc           #56
394: invokevirtual #57
397: invokevirtual #60
400: dload         4
402: dconst_0
403: dcmpl
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #61
415: new           #54
418: dup
419: invokespecial #55
422: ldc           #56
424: invokevirtual #57
427: iload         6
429: invokevirtual #62
432: ldc           #59
434: invokevirtual #57
437: iconst_0
438: invokevirtual #62
441: ldc           #56
443: invokevirtual #57
446: invokevirtual #60
449: iload         6
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #61
462: aload         7
464: invokestatic  #104
467: new           #54
470: dup
471: invokespecial #55
474: ldc           #56
476: invokevirtual #57
479: iload         8
481: invokevirtual #62
484: ldc           #59
486: invokevirtual #57
489: iconst_0
490: invokevirtual #62
493: ldc           #56
495: invokevirtual #57
498: invokevirtual #60
501: iload         8
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #61
514: aload         10
516: invokestatic  #47
519: new           #54
522: dup
523: invokespecial #55
526: ldc           #56
528: invokevirtual #57
531: dload         11
533: invokevirtual #58
536: ldc           #59
538: invokevirtual #57
541: ldc2_w        #23
544: invokevirtual #58
547: ldc           #56
549: invokevirtual #57
552: invokevirtual #60
555: dload         11
557: ldc2_w        #23
560: dcmpl
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #61
572: aload         13
574: invokestatic  #47
577: aload         14
579: invokestatic  #47
582: aload         15
584: invokestatic  #47
587: new           #54
590: dup
591: invokespecial #55
594: ldc           #56
596: invokevirtual #57
599: iload         18
601: invokevirtual #62
604: ldc           #59
606: invokevirtual #57
609: iconst_0
610: invokevirtual #62
613: ldc           #56
615: invokevirtual #57
618: invokevirtual #60
621: iload         18
623: ifne          630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #61
634: new           #54
637: dup
638: invokespecial #55
641: ldc           #56
643: invokevirtual #57
646: iload         19
648: invokevirtual #62
651: ldc           #59
653: invokevirtual #57
656: iconst_0
657: invokevirtual #62
660: ldc           #56
662: invokevirtual #57
665: invokevirtual #60
668: iload         19
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #61
681: new           #54
684: dup
685: invokespecial #55
688: ldc           #56
690: invokevirtual #57
693: iload         20
695: invokevirtual #62
698: ldc           #59
700: invokevirtual #57
703: iconst_0
704: invokevirtual #62
707: ldc           #56
709: invokevirtual #57
712: invokevirtual #60
715: iload         20
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #61
728: aload         24
730: invokestatic  #47
733: aload         27
735: invokestatic  #47
738: aload         28
740: invokestatic  #47
743: aload         29
745: invokestatic  #47
748: aload         30
750: invokestatic  #47
753: aload         31
755: invokestatic  #47
758: new           #54
761: dup
762: invokespecial #55
765: ldc           #56
767: invokevirtual #57
770: aload         32
772: invokevirtual #82
775: ldc           #59
777: invokevirtual #57
780: getstatic     #118
783: invokevirtual #82
786: ldc           #56
788: invokevirtual #57
791: invokevirtual #60
794: aload         32
796: getstatic     #118
799: invokevirtual #83
802: invokestatic  #61
805: aload         33
807: invokestatic  #47
810: return
Exception table:
from    to  target type
294   316   319   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 4255
End line: 4266
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.7904227392038957d, 0.0d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #436
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #437
34: dconst_0
35: aload_1
36: invokespecial #13
39: astore_2
40: ldc_w         #424
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
27    46    49   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 4269
End line: 4309
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin22);
        double double30 = univariateDifferentiable28.value(2.154434758519516d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.8344631700193664d + "'", double30 == 0.8344631700193664d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #439
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload         16
195: invokestatic  #143
198: astore        20
200: aload         20
202: ldc2_w        #440
205: invokeinterface #442,  3
210: dstore        21
212: new           #54
215: dup
216: invokespecial #55
219: ldc           #56
221: invokevirtual #57
224: iload_3
225: invokevirtual #62
228: ldc           #59
230: invokevirtual #57
233: iconst_0
234: invokevirtual #62
237: ldc           #56
239: invokevirtual #57
242: invokevirtual #60
245: iload_3
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #61
257: aload         6
259: invokestatic  #47
262: aload         7
264: invokestatic  #47
267: aload         8
269: invokestatic  #47
272: aload         9
274: invokestatic  #47
277: aload         10
279: invokestatic  #47
282: new           #54
285: dup
286: invokespecial #55
289: ldc           #56
291: invokevirtual #57
294: aload         11
296: invokevirtual #82
299: ldc           #59
301: invokevirtual #57
304: getstatic     #78
307: invokevirtual #82
310: ldc           #56
312: invokevirtual #57
315: invokevirtual #60
318: aload         11
320: getstatic     #78
323: invokevirtual #83
326: invokestatic  #61
329: aload         12
331: invokestatic  #47
334: aload         13
336: invokestatic  #47
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: aload         14
353: invokevirtual #82
356: ldc           #59
358: invokevirtual #57
361: getstatic     #78
364: invokevirtual #82
367: ldc           #56
369: invokevirtual #57
372: invokevirtual #60
375: aload         14
377: getstatic     #78
380: invokevirtual #83
383: invokestatic  #61
386: aload         15
388: invokestatic  #47
391: aload         17
393: invokestatic  #47
396: new           #54
399: dup
400: invokespecial #55
403: ldc           #56
405: invokevirtual #57
408: aload         18
410: invokevirtual #82
413: ldc           #59
415: invokevirtual #57
418: getstatic     #78
421: invokevirtual #82
424: ldc           #56
426: invokevirtual #57
429: invokevirtual #60
432: aload         18
434: getstatic     #78
437: invokevirtual #83
440: invokestatic  #61
443: aload         19
445: invokestatic  #47
448: aload         20
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         21
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: ldc2_w        #443
478: invokevirtual #58
481: ldc           #56
483: invokevirtual #57
486: invokevirtual #60
489: dload         21
491: ldc2_w        #443
494: dcmpl
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #61
506: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 4312
End line: 4320
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(6.6917246496340396E41d, Double.NaN);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = brentOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker3);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #445
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #99
32: ldc2_w        #302
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #103
43: astore_2
44: aload_1
45: invokevirtual #103
48: astore_3
49: aload_2
50: invokestatic  #104
53: aload_3
54: invokestatic  #104
57: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 4323
End line: 4336
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(6.6917246496340396E41d, Double.NaN);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = brentOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double double5 = brentOptimizer2.computeObjectiveValue(81377.39571257407d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #99
32: ldc2_w        #302
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #103
43: astore_2
44: aload_1
45: ldc2_w        #355
48: invokevirtual #158
51: dstore_3
52: ldc           #52
54: invokestatic  #15
57: goto          61
60: astore_3
61: aload_2
62: invokestatic  #104
65: return
Exception table:
from    to  target type
44    57    60   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 4339
End line: 4383
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer9 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker8);
        int int10 = brentOptimizer9.getEvaluations();
        int int11 = brentOptimizer9.getEvaluations();
        int int12 = brentOptimizer9.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction14 = null;
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction25 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction14, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable23, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType26 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer9.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable23, goalType26, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.GoalType goalType31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair34 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable23, goalType31, 9.999999046325684d, (double) (-0.0f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(multivariateFunction25);
        org.junit.Assert.assertTrue("'" + goalType26 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType26.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aconst_null
48: astore        4
50: new           #8
53: dup
54: ldc2_w        #31
57: ldc2_w        #33
60: aload         4
62: invokespecial #13
65: astore        5
67: aload         5
69: invokevirtual #71
72: istore        6
74: aload         5
76: invokevirtual #71
79: istore        7
81: aload         5
83: invokevirtual #71
86: istore        8
88: aconst_null
89: astore        9
91: new           #72
94: dup
95: invokespecial #73
98: astore        10
100: new           #72
103: dup
104: invokespecial #73
107: astore        11
109: aload         11
111: invokevirtual #74
114: astore        12
116: new           #72
119: dup
120: invokespecial #73
123: astore        13
125: new           #72
128: dup
129: invokespecial #73
132: astore        14
134: iconst_4
135: anewarray     #75
138: dup
139: iconst_0
140: aload         10
142: aastore
143: dup
144: iconst_1
145: aload         11
147: aastore
148: dup
149: iconst_2
150: aload         13
152: aastore
153: dup
154: iconst_3
155: aload         14
157: aastore
158: astore        15
160: aload         15
162: invokestatic  #76
165: astore        16
167: aload         15
169: checkcast     #89
172: invokestatic  #109
175: astore        17
177: aload         15
179: invokestatic  #77
182: astore        18
184: aload         9
186: aload         18
188: ldc2_w        #181
191: invokestatic  #183
194: astore        19
196: getstatic     #118
199: astore        20
201: aload         5
203: bipush        10
205: aload         18
207: aload         20
209: ldc2_w        #184
212: ldc2_w        #186
215: ldc2_w        #188
218: invokevirtual #44
221: astore        21
223: aconst_null
224: astore        22
226: aload_2
227: bipush        97
229: aload         18
231: aload         22
233: ldc2_w        #449
236: ldc2_w        #9
239: invokevirtual #81
242: astore        23
244: ldc           #45
246: invokestatic  #15
249: goto          254
252: astore        23
254: new           #54
257: dup
258: invokespecial #55
261: ldc           #56
263: invokevirtual #57
266: iload_3
267: invokevirtual #62
270: ldc           #59
272: invokevirtual #57
275: iconst_0
276: invokevirtual #62
279: ldc           #56
281: invokevirtual #57
284: invokevirtual #60
287: iload_3
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #61
299: new           #54
302: dup
303: invokespecial #55
306: ldc           #56
308: invokevirtual #57
311: iload         6
313: invokevirtual #62
316: ldc           #59
318: invokevirtual #57
321: iconst_0
322: invokevirtual #62
325: ldc           #56
327: invokevirtual #57
330: invokevirtual #60
333: iload         6
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #61
346: new           #54
349: dup
350: invokespecial #55
353: ldc           #56
355: invokevirtual #57
358: iload         7
360: invokevirtual #62
363: ldc           #59
365: invokevirtual #57
368: iconst_0
369: invokevirtual #62
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: iload         7
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #61
393: new           #54
396: dup
397: invokespecial #55
400: ldc           #56
402: invokevirtual #57
405: iload         8
407: invokevirtual #62
410: ldc           #59
412: invokevirtual #57
415: iconst_0
416: invokevirtual #62
419: ldc           #56
421: invokevirtual #57
424: invokevirtual #60
427: iload         8
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #61
440: aload         12
442: invokestatic  #47
445: aload         15
447: invokestatic  #47
450: aload         16
452: invokestatic  #47
455: aload         17
457: invokestatic  #47
460: aload         18
462: invokestatic  #47
465: aload         19
467: invokestatic  #47
470: new           #54
473: dup
474: invokespecial #55
477: ldc           #56
479: invokevirtual #57
482: aload         20
484: invokevirtual #82
487: ldc           #59
489: invokevirtual #57
492: getstatic     #118
495: invokevirtual #82
498: ldc           #56
500: invokevirtual #57
503: invokevirtual #60
506: aload         20
508: getstatic     #118
511: invokevirtual #83
514: invokestatic  #61
517: aload         21
519: invokestatic  #47
522: return
Exception table:
from    to  target type
226   249   252   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 4386
End line: 4402
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getStartValue();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair6 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #451
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #177
51: dstore        4
53: aload_2
54: invokevirtual #51
57: astore        6
59: ldc           #52
61: invokestatic  #15
64: goto          69
67: astore        6
69: new           #54
72: dup
73: invokespecial #55
76: ldc           #56
78: invokevirtual #57
81: iload_3
82: invokevirtual #62
85: ldc           #59
87: invokevirtual #57
90: iconst_0
91: invokevirtual #62
94: ldc           #56
96: invokevirtual #57
99: invokevirtual #60
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #61
114: new           #54
117: dup
118: invokespecial #55
121: ldc           #56
123: invokevirtual #57
126: dload         4
128: invokevirtual #58
131: ldc           #59
133: invokevirtual #57
136: dconst_0
137: invokevirtual #58
140: ldc           #56
142: invokevirtual #57
145: invokevirtual #60
148: dload         4
150: dconst_0
151: dcmpl
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #61
163: return
Exception table:
from    to  target type
53    64    67   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 4405
End line: 4424
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        double double10 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #50
69: istore        7
71: aload_2
72: invokevirtual #103
75: astore        8
77: aload_2
78: invokevirtual #177
81: dstore        9
83: new           #54
86: dup
87: invokespecial #55
90: ldc           #56
92: invokevirtual #57
95: iload_3
96: invokevirtual #62
99: ldc           #59
101: invokevirtual #57
104: iconst_0
105: invokevirtual #62
108: ldc           #56
110: invokevirtual #57
113: invokevirtual #60
116: iload_3
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #61
128: new           #54
131: dup
132: invokespecial #55
135: ldc           #56
137: invokevirtual #57
140: iload         4
142: invokevirtual #62
145: ldc           #59
147: invokevirtual #57
150: iconst_0
151: invokevirtual #62
154: ldc           #56
156: invokevirtual #57
159: invokevirtual #60
162: iload         4
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #61
175: new           #54
178: dup
179: invokespecial #55
182: ldc           #56
184: invokevirtual #57
187: iload         5
189: invokevirtual #62
192: ldc           #59
194: invokevirtual #57
197: iconst_0
198: invokevirtual #62
201: ldc           #56
203: invokevirtual #57
206: invokevirtual #60
209: iload         5
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #61
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: iload         6
236: invokevirtual #62
239: ldc           #59
241: invokevirtual #57
244: iconst_0
245: invokevirtual #62
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: iload         6
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #61
269: new           #54
272: dup
273: invokespecial #55
276: ldc           #56
278: invokevirtual #57
281: iload         7
283: invokevirtual #62
286: ldc           #59
288: invokevirtual #57
291: iconst_0
292: invokevirtual #62
295: ldc           #56
297: invokevirtual #57
300: invokevirtual #60
303: iload         7
305: ifne          312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #61
316: aload         8
318: invokestatic  #104
321: new           #54
324: dup
325: invokespecial #55
328: ldc           #56
330: invokevirtual #57
333: dload         9
335: invokevirtual #58
338: ldc           #59
340: invokevirtual #57
343: dconst_0
344: invokevirtual #58
347: ldc           #56
349: invokevirtual #57
352: invokevirtual #60
355: dload         9
357: dconst_0
358: dcmpl
359: ifne          366
362: iconst_1
363: goto          367
366: iconst_0
367: invokestatic  #61
370: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 4427
End line: 4438
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(1.2177655131703127d, (-5698.384124911726d), univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -5,698.384 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #306
34: ldc2_w        #454
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #456
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 4441
End line: 4446
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 10L, 3.7581226324091723d, univariatePointValuePairConvergenceChecker2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #457
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #91
34: ldc2_w        #458
37: aload_1
38: invokespecial #13
41: astore_2
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 4449
End line: 4460
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #460
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: iload_3
72: invokevirtual #62
75: ldc           #59
77: invokevirtual #57
80: iconst_0
81: invokevirtual #62
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #61
104: new           #54
107: dup
108: invokespecial #55
111: ldc           #56
113: invokevirtual #57
116: iload         4
118: invokevirtual #62
121: ldc           #59
123: invokevirtual #57
126: iconst_0
127: invokevirtual #62
130: ldc           #56
132: invokevirtual #57
135: invokevirtual #60
138: iload         4
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #61
151: new           #54
154: dup
155: invokespecial #55
158: ldc           #56
160: invokevirtual #57
163: iload         5
165: invokevirtual #62
168: ldc           #59
170: invokevirtual #57
173: iconst_0
174: invokevirtual #62
177: ldc           #56
179: invokevirtual #57
182: invokevirtual #60
185: iload         5
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #61
198: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 4463
End line: 4475
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(2704.000238418579d, 2.1544346900318834d, univariatePointValuePairConvergenceChecker2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair4 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #461
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #216
34: ldc2_w        #199
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #51
46: astore_3
47: ldc           #52
49: invokestatic  #15
52: goto          56
55: astore_3
56: return
Exception table:
from    to  target type
42    52    55   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 4478
End line: 4499
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType10 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker11 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertNull(goalType10);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #462
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #50
69: istore        7
71: aload_2
72: invokevirtual #103
75: astore        8
77: aload_2
78: invokevirtual #110
81: astore        9
83: aload_2
84: invokevirtual #103
87: astore        10
89: new           #54
92: dup
93: invokespecial #55
96: ldc           #56
98: invokevirtual #57
101: iload_3
102: invokevirtual #62
105: ldc           #59
107: invokevirtual #57
110: iconst_0
111: invokevirtual #62
114: ldc           #56
116: invokevirtual #57
119: invokevirtual #60
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #61
134: new           #54
137: dup
138: invokespecial #55
141: ldc           #56
143: invokevirtual #57
146: iload         4
148: invokevirtual #62
151: ldc           #59
153: invokevirtual #57
156: iconst_0
157: invokevirtual #62
160: ldc           #56
162: invokevirtual #57
165: invokevirtual #60
168: iload         4
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #61
181: new           #54
184: dup
185: invokespecial #55
188: ldc           #56
190: invokevirtual #57
193: iload         5
195: invokevirtual #62
198: ldc           #59
200: invokevirtual #57
203: iconst_0
204: invokevirtual #62
207: ldc           #56
209: invokevirtual #57
212: invokevirtual #60
215: iload         5
217: ifne          224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #61
228: new           #54
231: dup
232: invokespecial #55
235: ldc           #56
237: invokevirtual #57
240: iload         6
242: invokevirtual #62
245: ldc           #59
247: invokevirtual #57
250: iconst_0
251: invokevirtual #62
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: iload         6
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #61
275: new           #54
278: dup
279: invokespecial #55
282: ldc           #56
284: invokevirtual #57
287: iload         7
289: invokevirtual #62
292: ldc           #59
294: invokevirtual #57
297: iconst_0
298: invokevirtual #62
301: ldc           #56
303: invokevirtual #57
306: invokevirtual #60
309: iload         7
311: ifne          318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #61
322: aload         8
324: invokestatic  #104
327: aload         9
329: invokestatic  #104
332: aload         10
334: invokestatic  #104
337: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 4502
End line: 4517
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = brentOptimizer3.getGoalType();
        double double6 = brentOptimizer3.getMin();
        int int7 = brentOptimizer3.getMaxEvaluations();
        int int8 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #463
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #110
51: astore        4
53: aload_2
54: invokevirtual #231
57: dstore        5
59: aload_2
60: invokevirtual #50
63: istore        7
65: aload_2
66: invokevirtual #71
69: istore        8
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: iload_3
84: invokevirtual #62
87: ldc           #59
89: invokevirtual #57
92: iconst_0
93: invokevirtual #62
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: aload         4
118: invokestatic  #104
121: new           #54
124: dup
125: invokespecial #55
128: ldc           #56
130: invokevirtual #57
133: dload         5
135: invokevirtual #58
138: ldc           #59
140: invokevirtual #57
143: dconst_0
144: invokevirtual #58
147: ldc           #56
149: invokevirtual #57
152: invokevirtual #60
155: dload         5
157: dconst_0
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #61
170: new           #54
173: dup
174: invokespecial #55
177: ldc           #56
179: invokevirtual #57
182: iload         7
184: invokevirtual #62
187: ldc           #59
189: invokevirtual #57
192: iconst_0
193: invokevirtual #62
196: ldc           #56
198: invokevirtual #57
201: invokevirtual #60
204: iload         7
206: ifne          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #61
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload         8
231: invokevirtual #62
234: ldc           #59
236: invokevirtual #57
239: iconst_0
240: invokevirtual #62
243: ldc           #56
245: invokevirtual #57
248: invokevirtual #60
251: iload         8
253: ifne          260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #61
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 4520
End line: 4530
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-2.356194490192345d), (double) 5.0000005f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -2.356 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #464
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #27
32: ldc2_w        #465
35: invokespecial #25
38: astore_1
39: ldc_w         #467
42: invokestatic  #15
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 4533
End line: 4550
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        double double6 = brentOptimizer3.getMax();
        double double7 = brentOptimizer3.getMin();
        int int8 = brentOptimizer3.getMaxEvaluations();
        double double9 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #468
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #49
57: dstore        6
59: aload_2
60: invokevirtual #231
63: dstore        8
65: aload_2
66: invokevirtual #50
69: istore        10
71: aload_2
72: invokevirtual #177
75: dstore        11
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: iload_3
90: invokevirtual #62
93: ldc           #59
95: invokevirtual #57
98: iconst_0
99: invokevirtual #62
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #61
122: new           #54
125: dup
126: invokespecial #55
129: ldc           #56
131: invokevirtual #57
134: dload         4
136: invokevirtual #58
139: ldc           #59
141: invokevirtual #57
144: dconst_0
145: invokevirtual #58
148: ldc           #56
150: invokevirtual #57
153: invokevirtual #60
156: dload         4
158: dconst_0
159: dcmpl
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #61
171: new           #54
174: dup
175: invokespecial #55
178: ldc           #56
180: invokevirtual #57
183: dload         6
185: invokevirtual #58
188: ldc           #59
190: invokevirtual #57
193: dconst_0
194: invokevirtual #58
197: ldc           #56
199: invokevirtual #57
202: invokevirtual #60
205: dload         6
207: dconst_0
208: dcmpl
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #61
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: dload         8
234: invokevirtual #58
237: ldc           #59
239: invokevirtual #57
242: dconst_0
243: invokevirtual #58
246: ldc           #56
248: invokevirtual #57
251: invokevirtual #60
254: dload         8
256: dconst_0
257: dcmpl
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #61
269: new           #54
272: dup
273: invokespecial #55
276: ldc           #56
278: invokevirtual #57
281: iload         10
283: invokevirtual #62
286: ldc           #59
288: invokevirtual #57
291: iconst_0
292: invokevirtual #62
295: ldc           #56
297: invokevirtual #57
300: invokevirtual #60
303: iload         10
305: ifne          312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #61
316: new           #54
319: dup
320: invokespecial #55
323: ldc           #56
325: invokevirtual #57
328: dload         11
330: invokevirtual #58
333: ldc           #59
335: invokevirtual #57
338: dconst_0
339: invokevirtual #58
342: ldc           #56
344: invokevirtual #57
347: invokevirtual #60
350: dload         11
352: dconst_0
353: dcmpl
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #61
365: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 4553
End line: 4584
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        double double20 = brentOptimizer3.getStartValue();
        double double21 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.4210854715202004E-14d + "'", double21 == 1.4210854715202004E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #469
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #177
154: dstore        15
156: aload_2
157: invokevirtual #49
160: dstore        17
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: iload         14
303: invokevirtual #62
306: ldc           #59
308: invokevirtual #57
311: bipush        8
313: invokevirtual #62
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: iload         14
326: bipush        8
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #61
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: dload         15
353: invokevirtual #58
356: ldc           #59
358: invokevirtual #57
361: ldc2_w        #91
364: invokevirtual #58
367: ldc           #56
369: invokevirtual #57
372: invokevirtual #60
375: dload         15
377: ldc2_w        #91
380: dcmpl
381: ifne          388
384: iconst_1
385: goto          389
388: iconst_0
389: invokestatic  #61
392: new           #54
395: dup
396: invokespecial #55
399: ldc           #56
401: invokevirtual #57
404: dload         17
406: invokevirtual #58
409: ldc           #59
411: invokevirtual #57
414: ldc2_w        #93
417: invokevirtual #58
420: ldc           #56
422: invokevirtual #57
425: invokevirtual #60
428: dload         17
430: ldc2_w        #93
433: dcmpl
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #61
445: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 4587
End line: 4611
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        double double8 = brentOptimizer3.getMax();
        int int9 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double double11 = brentOptimizer3.computeObjectiveValue((double) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #470
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #49
69: dstore        7
71: aload_2
72: invokevirtual #71
75: istore        9
77: aload_2
78: ldc2_w        #11
81: invokevirtual #158
84: dstore        10
86: ldc           #52
88: invokestatic  #15
91: goto          96
94: astore        10
96: new           #54
99: dup
100: invokespecial #55
103: ldc           #56
105: invokevirtual #57
108: iload_3
109: invokevirtual #62
112: ldc           #59
114: invokevirtual #57
117: iconst_0
118: invokevirtual #62
121: ldc           #56
123: invokevirtual #57
126: invokevirtual #60
129: iload_3
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #61
141: new           #54
144: dup
145: invokespecial #55
148: ldc           #56
150: invokevirtual #57
153: iload         4
155: invokevirtual #62
158: ldc           #59
160: invokevirtual #57
163: iconst_0
164: invokevirtual #62
167: ldc           #56
169: invokevirtual #57
172: invokevirtual #60
175: iload         4
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #61
188: new           #54
191: dup
192: invokespecial #55
195: ldc           #56
197: invokevirtual #57
200: iload         5
202: invokevirtual #62
205: ldc           #59
207: invokevirtual #57
210: iconst_0
211: invokevirtual #62
214: ldc           #56
216: invokevirtual #57
219: invokevirtual #60
222: iload         5
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #61
235: new           #54
238: dup
239: invokespecial #55
242: ldc           #56
244: invokevirtual #57
247: iload         6
249: invokevirtual #62
252: ldc           #59
254: invokevirtual #57
257: iconst_0
258: invokevirtual #62
261: ldc           #56
263: invokevirtual #57
266: invokevirtual #60
269: iload         6
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #61
282: new           #54
285: dup
286: invokespecial #55
289: ldc           #56
291: invokevirtual #57
294: dload         7
296: invokevirtual #58
299: ldc           #59
301: invokevirtual #57
304: dconst_0
305: invokevirtual #58
308: ldc           #56
310: invokevirtual #57
313: invokevirtual #60
316: dload         7
318: dconst_0
319: dcmpl
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #61
331: new           #54
334: dup
335: invokespecial #55
338: ldc           #56
340: invokevirtual #57
343: iload         9
345: invokevirtual #62
348: ldc           #59
350: invokevirtual #57
353: iconst_0
354: invokevirtual #62
357: ldc           #56
359: invokevirtual #57
362: invokevirtual #60
365: iload         9
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #61
378: return
Exception table:
from    to  target type
77    91    94   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 4614
End line: 4723
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double74 = brentOptimizer3.getMin();
        int int75 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin77 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin78 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction79 = sin78.derivative();
        org.apache.commons.math3.analysis.function.Sin sin80 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin81 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray82 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin77, sin78, sin80, sin81 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable83 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray82);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction84 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray82);
        double double86 = univariateFunction84.value((double) (short) 1);
        org.apache.commons.math3.optimization.GoalType goalType87 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer3.optimize((int) (byte) 100, univariateFunction84, goalType87, (-36.04365338911715d), 0.0d, 9.223372036854776E18d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.22766967171598d + "'", double74 == 5.22766967171598d);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertNotNull(univariateFunction79);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray82);
        org.junit.Assert.assertNotNull(univariateDifferentiable83);
        org.junit.Assert.assertNotNull(univariateFunction84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 3.365883939231586d + "'", double86 == 3.365883939231586d);
        org.junit.Assert.assertTrue("'" + goalType87 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType87.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #471
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #231
512: dstore        53
514: aload_2
515: invokevirtual #71
518: istore        55
520: new           #72
523: dup
524: invokespecial #73
527: astore        56
529: new           #72
532: dup
533: invokespecial #73
536: astore        57
538: aload         57
540: invokevirtual #74
543: astore        58
545: new           #72
548: dup
549: invokespecial #73
552: astore        59
554: new           #72
557: dup
558: invokespecial #73
561: astore        60
563: iconst_4
564: anewarray     #75
567: dup
568: iconst_0
569: aload         56
571: aastore
572: dup
573: iconst_1
574: aload         57
576: aastore
577: dup
578: iconst_2
579: aload         59
581: aastore
582: dup
583: iconst_3
584: aload         60
586: aastore
587: astore        61
589: aload         61
591: invokestatic  #76
594: astore        62
596: aload         61
598: checkcast     #89
601: invokestatic  #109
604: astore        63
606: aload         63
608: dconst_1
609: invokeinterface #474,  3
614: dstore        64
616: getstatic     #78
619: astore        66
621: aload_2
622: bipush        100
624: aload         63
626: aload         66
628: ldc2_w        #475
631: dconst_0
632: ldc2_w        #477
635: invokevirtual #44
638: astore        67
640: new           #54
643: dup
644: invokespecial #55
647: ldc           #56
649: invokevirtual #57
652: iload_3
653: invokevirtual #62
656: ldc           #59
658: invokevirtual #57
661: iconst_0
662: invokevirtual #62
665: ldc           #56
667: invokevirtual #57
670: invokevirtual #60
673: iload_3
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #61
685: aload         6
687: invokestatic  #47
690: aload         7
692: invokestatic  #47
695: aload         8
697: invokestatic  #47
700: aload         9
702: invokestatic  #47
705: aload         10
707: invokestatic  #47
710: new           #54
713: dup
714: invokespecial #55
717: ldc           #56
719: invokevirtual #57
722: aload         11
724: invokevirtual #82
727: ldc           #59
729: invokevirtual #57
732: getstatic     #78
735: invokevirtual #82
738: ldc           #56
740: invokevirtual #57
743: invokevirtual #60
746: aload         11
748: getstatic     #78
751: invokevirtual #83
754: invokestatic  #61
757: aload         12
759: invokestatic  #47
762: aload         13
764: invokestatic  #47
767: new           #54
770: dup
771: invokespecial #55
774: ldc           #56
776: invokevirtual #57
779: aload         14
781: invokevirtual #82
784: ldc           #59
786: invokevirtual #57
789: getstatic     #78
792: invokevirtual #82
795: ldc           #56
797: invokevirtual #57
800: invokevirtual #60
803: aload         14
805: getstatic     #78
808: invokevirtual #83
811: invokestatic  #61
814: aload         15
816: invokestatic  #47
819: aload         17
821: invokestatic  #47
824: new           #54
827: dup
828: invokespecial #55
831: ldc           #56
833: invokevirtual #57
836: aload         18
838: invokevirtual #82
841: ldc           #59
843: invokevirtual #57
846: getstatic     #78
849: invokevirtual #82
852: ldc           #56
854: invokevirtual #57
857: invokevirtual #60
860: aload         18
862: getstatic     #78
865: invokevirtual #83
868: invokestatic  #61
871: aload         19
873: invokestatic  #47
876: new           #54
879: dup
880: invokespecial #55
883: ldc           #56
885: invokevirtual #57
888: dload         20
890: invokevirtual #58
893: ldc           #59
895: invokevirtual #57
898: dconst_0
899: invokevirtual #58
902: ldc           #56
904: invokevirtual #57
907: invokevirtual #60
910: dload         20
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #61
925: aload         23
927: invokestatic  #47
930: new           #54
933: dup
934: invokespecial #55
937: ldc           #56
939: invokevirtual #57
942: iload         26
944: invokevirtual #62
947: ldc           #59
949: invokevirtual #57
952: iconst_0
953: invokevirtual #62
956: ldc           #56
958: invokevirtual #57
961: invokevirtual #60
964: iload         26
966: ifne          973
969: iconst_1
970: goto          974
973: iconst_0
974: invokestatic  #61
977: new           #54
980: dup
981: invokespecial #55
984: ldc           #56
986: invokevirtual #57
989: dload         27
991: invokevirtual #58
994: ldc           #59
996: invokevirtual #57
999: dconst_0
1000: invokevirtual #58
1003: ldc           #56
1005: invokevirtual #57
1008: invokevirtual #60
1011: dload         27
1013: dconst_0
1014: dcmpl
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #61
1026: aload         31
1028: invokestatic  #47
1031: aload         34
1033: invokestatic  #47
1036: aload         35
1038: invokestatic  #47
1041: aload         36
1043: invokestatic  #47
1046: new           #54
1049: dup
1050: invokespecial #55
1053: ldc           #56
1055: invokevirtual #57
1058: iload         39
1060: invokevirtual #62
1063: ldc           #59
1065: invokevirtual #57
1068: iconst_0
1069: invokevirtual #62
1072: ldc           #56
1074: invokevirtual #57
1077: invokevirtual #60
1080: iload         39
1082: ifne          1089
1085: iconst_1
1086: goto          1090
1089: iconst_0
1090: invokestatic  #61
1093: aload         42
1095: invokestatic  #47
1098: aload         43
1100: invokestatic  #47
1103: aload         44
1105: invokestatic  #47
1108: aload         45
1110: invokestatic  #47
1113: aload         46
1115: invokestatic  #47
1118: new           #54
1121: dup
1122: invokespecial #55
1125: ldc           #56
1127: invokevirtual #57
1130: aload         47
1132: invokevirtual #82
1135: ldc           #59
1137: invokevirtual #57
1140: getstatic     #78
1143: invokevirtual #82
1146: ldc           #56
1148: invokevirtual #57
1151: invokevirtual #60
1154: aload         47
1156: getstatic     #78
1159: invokevirtual #83
1162: invokestatic  #61
1165: aload         48
1167: invokestatic  #47
1170: aload         49
1172: invokestatic  #47
1175: new           #54
1178: dup
1179: invokespecial #55
1182: ldc           #56
1184: invokevirtual #57
1187: aload         50
1189: invokevirtual #82
1192: ldc           #59
1194: invokevirtual #57
1197: getstatic     #78
1200: invokevirtual #82
1203: ldc           #56
1205: invokevirtual #57
1208: invokevirtual #60
1211: aload         50
1213: getstatic     #78
1216: invokevirtual #83
1219: invokestatic  #61
1222: aload         51
1224: invokestatic  #47
1227: aload         52
1229: invokestatic  #47
1232: new           #54
1235: dup
1236: invokespecial #55
1239: ldc           #56
1241: invokevirtual #57
1244: dload         53
1246: invokevirtual #58
1249: ldc           #59
1251: invokevirtual #57
1254: ldc2_w        #472
1257: invokevirtual #58
1260: ldc           #56
1262: invokevirtual #57
1265: invokevirtual #60
1268: dload         53
1270: ldc2_w        #472
1273: dcmpl
1274: ifne          1281
1277: iconst_1
1278: goto          1282
1281: iconst_0
1282: invokestatic  #61
1285: new           #54
1288: dup
1289: invokespecial #55
1292: ldc           #56
1294: invokevirtual #57
1297: iload         55
1299: invokevirtual #62
1302: ldc           #59
1304: invokevirtual #57
1307: bipush        7
1309: invokevirtual #62
1312: ldc           #56
1314: invokevirtual #57
1317: invokevirtual #60
1320: iload         55
1322: bipush        7
1324: if_icmpne     1331
1327: iconst_1
1328: goto          1332
1331: iconst_0
1332: invokestatic  #61
1335: aload         58
1337: invokestatic  #47
1340: aload         61
1342: invokestatic  #47
1345: aload         62
1347: invokestatic  #47
1350: aload         63
1352: invokestatic  #47
1355: new           #54
1358: dup
1359: invokespecial #55
1362: ldc           #56
1364: invokevirtual #57
1367: dload         64
1369: invokevirtual #58
1372: ldc           #59
1374: invokevirtual #57
1377: ldc2_w        #479
1380: invokevirtual #58
1383: ldc           #56
1385: invokevirtual #57
1388: invokevirtual #60
1391: dload         64
1393: ldc2_w        #479
1396: dcmpl
1397: ifne          1404
1400: iconst_1
1401: goto          1405
1404: iconst_0
1405: invokestatic  #61
1408: new           #54
1411: dup
1412: invokespecial #55
1415: ldc           #56
1417: invokevirtual #57
1420: aload         66
1422: invokevirtual #82
1425: ldc           #59
1427: invokevirtual #57
1430: getstatic     #78
1433: invokevirtual #82
1436: ldc           #56
1438: invokevirtual #57
1441: invokevirtual #60
1444: aload         66
1446: getstatic     #78
1449: invokevirtual #83
1452: invokestatic  #61
1455: aload         67
1457: invokestatic  #47
1460: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 4726
End line: 4739
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #481
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: new           #54
68: dup
69: invokespecial #55
72: ldc           #56
74: invokevirtual #57
77: iload_3
78: invokevirtual #62
81: ldc           #59
83: invokevirtual #57
86: iconst_0
87: invokevirtual #62
90: ldc           #56
92: invokevirtual #57
95: invokevirtual #60
98: iload_3
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #61
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: iload         4
124: invokevirtual #62
127: ldc           #59
129: invokevirtual #57
132: iconst_0
133: invokevirtual #62
136: ldc           #56
138: invokevirtual #57
141: invokevirtual #60
144: iload         4
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #61
157: new           #54
160: dup
161: invokespecial #55
164: ldc           #56
166: invokevirtual #57
169: iload         5
171: invokevirtual #62
174: ldc           #59
176: invokevirtual #57
179: iconst_0
180: invokevirtual #62
183: ldc           #56
185: invokevirtual #57
188: invokevirtual #60
191: iload         5
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #61
204: new           #54
207: dup
208: invokespecial #55
211: ldc           #56
213: invokevirtual #57
216: iload         6
218: invokevirtual #62
221: ldc           #59
223: invokevirtual #57
226: iconst_0
227: invokevirtual #62
230: ldc           #56
232: invokevirtual #57
235: invokevirtual #60
238: iload         6
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #61
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 4742
End line: 4837
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        double double78 = brentOptimizer3.computeObjectiveValue((-0.88966182231646d));
        int int79 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3642239251822542d + "'", double78 == 0.3642239251822542d);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: ldc2_w        #351
590: invokevirtual #158
593: dstore        58
595: aload_2
596: invokevirtual #71
599: istore        60
601: new           #54
604: dup
605: invokespecial #55
608: ldc           #56
610: invokevirtual #57
613: iload_3
614: invokevirtual #62
617: ldc           #59
619: invokevirtual #57
622: iconst_0
623: invokevirtual #62
626: ldc           #56
628: invokevirtual #57
631: invokevirtual #60
634: iload_3
635: ifne          642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #61
646: aload         6
648: invokestatic  #47
651: aload         7
653: invokestatic  #47
656: aload         8
658: invokestatic  #47
661: aload         9
663: invokestatic  #47
666: aload         10
668: invokestatic  #47
671: new           #54
674: dup
675: invokespecial #55
678: ldc           #56
680: invokevirtual #57
683: aload         11
685: invokevirtual #82
688: ldc           #59
690: invokevirtual #57
693: getstatic     #78
696: invokevirtual #82
699: ldc           #56
701: invokevirtual #57
704: invokevirtual #60
707: aload         11
709: getstatic     #78
712: invokevirtual #83
715: invokestatic  #61
718: aload         12
720: invokestatic  #47
723: new           #54
726: dup
727: invokespecial #55
730: ldc           #56
732: invokevirtual #57
735: iload         13
737: invokevirtual #62
740: ldc           #59
742: invokevirtual #57
745: bipush        97
747: invokevirtual #62
750: ldc           #56
752: invokevirtual #57
755: invokevirtual #60
758: iload         13
760: bipush        97
762: if_icmpne     769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #61
773: aload         19
775: invokestatic  #47
778: aload         22
780: invokestatic  #47
783: aload         23
785: invokestatic  #47
788: aload         26
790: invokestatic  #47
793: aload         28
795: invokestatic  #47
798: new           #54
801: dup
802: invokespecial #55
805: ldc           #56
807: invokevirtual #57
810: iload         31
812: invokevirtual #62
815: ldc           #59
817: invokevirtual #57
820: iconst_0
821: invokevirtual #62
824: ldc           #56
826: invokevirtual #57
829: invokevirtual #60
832: iload         31
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #61
845: new           #54
848: dup
849: invokespecial #55
852: ldc           #56
854: invokevirtual #57
857: dload         32
859: invokevirtual #58
862: ldc           #59
864: invokevirtual #57
867: dconst_0
868: invokevirtual #58
871: ldc           #56
873: invokevirtual #57
876: invokevirtual #60
879: dload         32
881: dconst_0
882: dcmpl
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #61
894: aload         36
896: invokestatic  #47
899: aload         39
901: invokestatic  #47
904: aload         40
906: invokestatic  #47
909: aload         41
911: invokestatic  #47
914: new           #54
917: dup
918: invokespecial #55
921: ldc           #56
923: invokevirtual #57
926: iload         44
928: invokevirtual #62
931: ldc           #59
933: invokevirtual #57
936: iconst_0
937: invokevirtual #62
940: ldc           #56
942: invokevirtual #57
945: invokevirtual #60
948: iload         44
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #61
961: aload         47
963: invokestatic  #47
966: aload         48
968: invokestatic  #47
971: aload         49
973: invokestatic  #47
976: aload         50
978: invokestatic  #47
981: aload         51
983: invokestatic  #47
986: new           #54
989: dup
990: invokespecial #55
993: ldc           #56
995: invokevirtual #57
998: aload         52
1000: invokevirtual #82
1003: ldc           #59
1005: invokevirtual #57
1008: getstatic     #78
1011: invokevirtual #82
1014: ldc           #56
1016: invokevirtual #57
1019: invokevirtual #60
1022: aload         52
1024: getstatic     #78
1027: invokevirtual #83
1030: invokestatic  #61
1033: aload         53
1035: invokestatic  #47
1038: aload         54
1040: invokestatic  #47
1043: new           #54
1046: dup
1047: invokespecial #55
1050: ldc           #56
1052: invokevirtual #57
1055: aload         55
1057: invokevirtual #82
1060: ldc           #59
1062: invokevirtual #57
1065: getstatic     #78
1068: invokevirtual #82
1071: ldc           #56
1073: invokevirtual #57
1076: invokevirtual #60
1079: aload         55
1081: getstatic     #78
1084: invokevirtual #83
1087: invokestatic  #61
1090: aload         56
1092: invokestatic  #47
1095: aload         57
1097: invokestatic  #47
1100: new           #54
1103: dup
1104: invokespecial #55
1107: ldc           #56
1109: invokevirtual #57
1112: dload         58
1114: invokevirtual #58
1117: ldc           #59
1119: invokevirtual #57
1122: ldc2_w        #483
1125: invokevirtual #58
1128: ldc           #56
1130: invokevirtual #57
1133: invokevirtual #60
1136: dload         58
1138: ldc2_w        #483
1141: dcmpl
1142: ifne          1149
1145: iconst_1
1146: goto          1150
1149: iconst_0
1150: invokestatic  #61
1153: new           #54
1156: dup
1157: invokespecial #55
1160: ldc           #56
1162: invokevirtual #57
1165: iload         60
1167: invokevirtual #62
1170: ldc           #59
1172: invokevirtual #57
1175: iconst_2
1176: invokevirtual #62
1179: ldc           #56
1181: invokevirtual #57
1184: invokevirtual #60
1187: iload         60
1189: iconst_2
1190: if_icmpne     1197
1193: iconst_1
1194: goto          1198
1197: iconst_0
1198: invokestatic  #61
1201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 4840
End line: 4871
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        int int21 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #485
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: aload_2
151: invokevirtual #51
154: astore        16
156: aload_2
157: invokevirtual #50
160: istore        17
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: dload         14
303: invokevirtual #58
306: ldc           #59
308: invokevirtual #57
311: ldc2_w        #91
314: invokevirtual #58
317: ldc           #56
319: invokevirtual #57
322: invokevirtual #60
325: dload         14
327: ldc2_w        #91
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #61
342: aload         16
344: invokestatic  #47
347: new           #54
350: dup
351: invokespecial #55
354: ldc           #56
356: invokevirtual #57
359: iload         17
361: invokevirtual #62
364: ldc           #59
366: invokevirtual #57
369: bipush        97
371: invokevirtual #62
374: ldc           #56
376: invokevirtual #57
379: invokevirtual #60
382: iload         17
384: bipush        97
386: if_icmpne     393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #61
397: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 4874
End line: 4928
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.analysis.function.Sin sin5 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray11 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7, sin9, sin10 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray11);
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin14.derivative();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray18 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin13, sin14, sin16, sin17 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable19 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin5, univariateDifferentiable12, univariateDifferentiable19, sin20, sin22, univariateDifferentiable30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray31);
        org.apache.commons.math3.optimization.GoalType goalType33 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer3.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, goalType33, 0.0d, 0.17453292519943295d);
        double double37 = brentOptimizer3.getMax();
        double double38 = brentOptimizer3.getMax();
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray18);
        org.junit.Assert.assertNotNull(univariateDifferentiable19);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.17453292519943295d + "'", double37 == 0.17453292519943295d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.17453292519943295d + "'", double38 == 0.17453292519943295d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #486
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: new           #72
45: dup
46: invokespecial #73
49: astore_3
50: new           #72
53: dup
54: invokespecial #73
57: astore        4
59: new           #72
62: dup
63: invokespecial #73
66: astore        5
68: aload         5
70: invokevirtual #74
73: astore        6
75: new           #72
78: dup
79: invokespecial #73
82: astore        7
84: new           #72
87: dup
88: invokespecial #73
91: astore        8
93: iconst_4
94: anewarray     #75
97: dup
98: iconst_0
99: aload         4
101: aastore
102: dup
103: iconst_1
104: aload         5
106: aastore
107: dup
108: iconst_2
109: aload         7
111: aastore
112: dup
113: iconst_3
114: aload         8
116: aastore
117: astore        9
119: aload         9
121: invokestatic  #76
124: astore        10
126: new           #72
129: dup
130: invokespecial #73
133: astore        11
135: new           #72
138: dup
139: invokespecial #73
142: astore        12
144: aload         12
146: invokevirtual #74
149: astore        13
151: new           #72
154: dup
155: invokespecial #73
158: astore        14
160: new           #72
163: dup
164: invokespecial #73
167: astore        15
169: iconst_4
170: anewarray     #75
173: dup
174: iconst_0
175: aload         11
177: aastore
178: dup
179: iconst_1
180: aload         12
182: aastore
183: dup
184: iconst_2
185: aload         14
187: aastore
188: dup
189: iconst_3
190: aload         15
192: aastore
193: astore        16
195: aload         16
197: invokestatic  #76
200: astore        17
202: new           #72
205: dup
206: invokespecial #73
209: astore        18
211: aload         18
213: invokevirtual #74
216: astore        19
218: new           #72
221: dup
222: invokespecial #73
225: astore        20
227: aload         20
229: invokevirtual #74
232: astore        21
234: new           #72
237: dup
238: invokespecial #73
241: astore        22
243: new           #72
246: dup
247: invokespecial #73
250: astore        23
252: aload         23
254: invokevirtual #74
257: astore        24
259: new           #72
262: dup
263: invokespecial #73
266: astore        25
268: new           #72
271: dup
272: invokespecial #73
275: astore        26
277: iconst_4
278: anewarray     #75
281: dup
282: iconst_0
283: aload         22
285: aastore
286: dup
287: iconst_1
288: aload         23
290: aastore
291: dup
292: iconst_2
293: aload         25
295: aastore
296: dup
297: iconst_3
298: aload         26
300: aastore
301: astore        27
303: aload         27
305: invokestatic  #76
308: astore        28
310: bipush        6
312: anewarray     #75
315: dup
316: iconst_0
317: aload_3
318: aastore
319: dup
320: iconst_1
321: aload         10
323: aastore
324: dup
325: iconst_2
326: aload         17
328: aastore
329: dup
330: iconst_3
331: aload         18
333: aastore
334: dup
335: iconst_4
336: aload         20
338: aastore
339: dup
340: iconst_5
341: aload         28
343: aastore
344: astore        29
346: aload         29
348: invokestatic  #77
351: astore        30
353: getstatic     #78
356: astore        31
358: aload_2
359: bipush        10
361: aload         30
363: aload         31
365: dconst_0
366: ldc2_w        #79
369: invokevirtual #81
372: astore        32
374: aload_2
375: invokevirtual #49
378: dstore        33
380: aload_2
381: invokevirtual #49
384: dstore        35
386: aload         6
388: invokestatic  #47
391: aload         9
393: invokestatic  #47
396: aload         10
398: invokestatic  #47
401: aload         13
403: invokestatic  #47
406: aload         16
408: invokestatic  #47
411: aload         17
413: invokestatic  #47
416: aload         19
418: invokestatic  #47
421: aload         21
423: invokestatic  #47
426: aload         24
428: invokestatic  #47
431: aload         27
433: invokestatic  #47
436: aload         28
438: invokestatic  #47
441: aload         29
443: invokestatic  #47
446: aload         30
448: invokestatic  #47
451: new           #54
454: dup
455: invokespecial #55
458: ldc           #56
460: invokevirtual #57
463: aload         31
465: invokevirtual #82
468: ldc           #59
470: invokevirtual #57
473: getstatic     #78
476: invokevirtual #82
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: aload         31
489: getstatic     #78
492: invokevirtual #83
495: invokestatic  #61
498: aload         32
500: invokestatic  #47
503: new           #54
506: dup
507: invokespecial #55
510: ldc           #56
512: invokevirtual #57
515: dload         33
517: invokevirtual #58
520: ldc           #59
522: invokevirtual #57
525: ldc2_w        #79
528: invokevirtual #58
531: ldc           #56
533: invokevirtual #57
536: invokevirtual #60
539: dload         33
541: ldc2_w        #79
544: dcmpl
545: ifne          552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #61
556: new           #54
559: dup
560: invokespecial #55
563: ldc           #56
565: invokevirtual #57
568: dload         35
570: invokevirtual #58
573: ldc           #59
575: invokevirtual #57
578: ldc2_w        #79
581: invokevirtual #58
584: ldc           #56
586: invokevirtual #57
589: invokevirtual #60
592: dload         35
594: ldc2_w        #79
597: dcmpl
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #61
609: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 4931
End line: 5003
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        double double8 = brentOptimizer3.getMax();
        double double9 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer15 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker14);
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction20 = sin19.derivative();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray23 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin18, sin19, sin21, sin22 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin26.derivative();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray30 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, sin26, sin28, sin29 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable31 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = sin32.derivative();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction38 = sin37.derivative();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray41 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin36, sin37, sin39, sin40 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable42 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray41);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray43 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin17, univariateDifferentiable24, univariateDifferentiable31, sin32, sin34, univariateDifferentiable42 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable44 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray43);
        org.apache.commons.math3.optimization.GoalType goalType45 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer15.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable44, goalType45, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair52 = brentOptimizer3.optimize((-22), univariateFunction11, goalType45, 0.0d, 1.5707963267948895d, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction20);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray23);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray30);
        org.junit.Assert.assertNotNull(univariateDifferentiable31);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateFunction38);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray41);
        org.junit.Assert.assertNotNull(univariateDifferentiable42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray43);
        org.junit.Assert.assertNotNull(univariateDifferentiable44);
        org.junit.Assert.assertTrue("'" + goalType45 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType45.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #487
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #49
69: dstore        9
71: aload_2
72: invokevirtual #49
75: dstore        11
77: aconst_null
78: astore        13
80: aconst_null
81: astore        14
83: new           #8
86: dup
87: ldc2_w        #31
90: ldc2_w        #33
93: aload         14
95: invokespecial #13
98: astore        15
100: new           #72
103: dup
104: invokespecial #73
107: astore        16
109: new           #72
112: dup
113: invokespecial #73
116: astore        17
118: new           #72
121: dup
122: invokespecial #73
125: astore        18
127: aload         18
129: invokevirtual #74
132: astore        19
134: new           #72
137: dup
138: invokespecial #73
141: astore        20
143: new           #72
146: dup
147: invokespecial #73
150: astore        21
152: iconst_4
153: anewarray     #75
156: dup
157: iconst_0
158: aload         17
160: aastore
161: dup
162: iconst_1
163: aload         18
165: aastore
166: dup
167: iconst_2
168: aload         20
170: aastore
171: dup
172: iconst_3
173: aload         21
175: aastore
176: astore        22
178: aload         22
180: invokestatic  #76
183: astore        23
185: new           #72
188: dup
189: invokespecial #73
192: astore        24
194: new           #72
197: dup
198: invokespecial #73
201: astore        25
203: aload         25
205: invokevirtual #74
208: astore        26
210: new           #72
213: dup
214: invokespecial #73
217: astore        27
219: new           #72
222: dup
223: invokespecial #73
226: astore        28
228: iconst_4
229: anewarray     #75
232: dup
233: iconst_0
234: aload         24
236: aastore
237: dup
238: iconst_1
239: aload         25
241: aastore
242: dup
243: iconst_2
244: aload         27
246: aastore
247: dup
248: iconst_3
249: aload         28
251: aastore
252: astore        29
254: aload         29
256: invokestatic  #76
259: astore        30
261: new           #72
264: dup
265: invokespecial #73
268: astore        31
270: aload         31
272: invokevirtual #74
275: astore        32
277: new           #72
280: dup
281: invokespecial #73
284: astore        33
286: aload         33
288: invokevirtual #74
291: astore        34
293: new           #72
296: dup
297: invokespecial #73
300: astore        35
302: new           #72
305: dup
306: invokespecial #73
309: astore        36
311: aload         36
313: invokevirtual #74
316: astore        37
318: new           #72
321: dup
322: invokespecial #73
325: astore        38
327: new           #72
330: dup
331: invokespecial #73
334: astore        39
336: iconst_4
337: anewarray     #75
340: dup
341: iconst_0
342: aload         35
344: aastore
345: dup
346: iconst_1
347: aload         36
349: aastore
350: dup
351: iconst_2
352: aload         38
354: aastore
355: dup
356: iconst_3
357: aload         39
359: aastore
360: astore        40
362: aload         40
364: invokestatic  #76
367: astore        41
369: bipush        6
371: anewarray     #75
374: dup
375: iconst_0
376: aload         16
378: aastore
379: dup
380: iconst_1
381: aload         23
383: aastore
384: dup
385: iconst_2
386: aload         30
388: aastore
389: dup
390: iconst_3
391: aload         31
393: aastore
394: dup
395: iconst_4
396: aload         33
398: aastore
399: dup
400: iconst_5
401: aload         41
403: aastore
404: astore        42
406: aload         42
408: invokestatic  #77
411: astore        43
413: getstatic     #78
416: astore        44
418: aload         15
420: bipush        10
422: aload         43
424: aload         44
426: dconst_0
427: ldc2_w        #79
430: invokevirtual #81
433: astore        45
435: aload_2
436: bipush        -22
438: aload         13
440: aload         44
442: dconst_0
443: ldc2_w        #488
446: dconst_0
447: invokevirtual #44
450: astore        46
452: ldc           #45
454: invokestatic  #15
457: goto          462
460: astore        46
462: new           #54
465: dup
466: invokespecial #55
469: ldc           #56
471: invokevirtual #57
474: dload_3
475: invokevirtual #58
478: ldc           #59
480: invokevirtual #57
483: dconst_0
484: invokevirtual #58
487: ldc           #56
489: invokevirtual #57
492: invokevirtual #60
495: dload_3
496: dconst_0
497: dcmpl
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #61
509: new           #54
512: dup
513: invokespecial #55
516: ldc           #56
518: invokevirtual #57
521: iload         5
523: invokevirtual #62
526: ldc           #59
528: invokevirtual #57
531: iconst_0
532: invokevirtual #62
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: iload         5
545: ifne          552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #61
556: aload         6
558: invokestatic  #104
561: new           #54
564: dup
565: invokespecial #55
568: ldc           #56
570: invokevirtual #57
573: dload         7
575: invokevirtual #58
578: ldc           #59
580: invokevirtual #57
583: dconst_0
584: invokevirtual #58
587: ldc           #56
589: invokevirtual #57
592: invokevirtual #60
595: dload         7
597: dconst_0
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #61
610: new           #54
613: dup
614: invokespecial #55
617: ldc           #56
619: invokevirtual #57
622: dload         9
624: invokevirtual #58
627: ldc           #59
629: invokevirtual #57
632: dconst_0
633: invokevirtual #58
636: ldc           #56
638: invokevirtual #57
641: invokevirtual #60
644: dload         9
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #61
659: new           #54
662: dup
663: invokespecial #55
666: ldc           #56
668: invokevirtual #57
671: dload         11
673: invokevirtual #58
676: ldc           #59
678: invokevirtual #57
681: dconst_0
682: invokevirtual #58
685: ldc           #56
687: invokevirtual #57
690: invokevirtual #60
693: dload         11
695: dconst_0
696: dcmpl
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #61
708: aload         19
710: invokestatic  #47
713: aload         22
715: invokestatic  #47
718: aload         23
720: invokestatic  #47
723: aload         26
725: invokestatic  #47
728: aload         29
730: invokestatic  #47
733: aload         30
735: invokestatic  #47
738: aload         32
740: invokestatic  #47
743: aload         34
745: invokestatic  #47
748: aload         37
750: invokestatic  #47
753: aload         40
755: invokestatic  #47
758: aload         41
760: invokestatic  #47
763: aload         42
765: invokestatic  #47
768: aload         43
770: invokestatic  #47
773: new           #54
776: dup
777: invokespecial #55
780: ldc           #56
782: invokevirtual #57
785: aload         44
787: invokevirtual #82
790: ldc           #59
792: invokevirtual #57
795: getstatic     #78
798: invokevirtual #82
801: ldc           #56
803: invokevirtual #57
806: invokevirtual #60
809: aload         44
811: getstatic     #78
814: invokevirtual #83
817: invokestatic  #61
820: aload         45
822: invokestatic  #47
825: return
Exception table:
from    to  target type
435   457   460   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 5006
End line: 5045
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction21 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction21, (-0.0874913248293193d));
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(12, univariateFunction23, goalType24, (double) 1.0141205E31f, 4.644483415289244d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: aconst_null
151: astore        16
153: aload         16
155: ldc2_w        #160
158: invokestatic  #37
161: astore        17
163: getstatic     #118
166: astore        18
168: aload_2
169: bipush        12
171: aload         17
173: aload         18
175: ldc2_w        #491
178: ldc2_w        #493
181: invokevirtual #81
184: astore        19
186: ldc           #119
188: invokestatic  #15
191: goto          196
194: astore        19
196: new           #54
199: dup
200: invokespecial #55
203: ldc           #56
205: invokevirtual #57
208: iload_3
209: invokevirtual #62
212: ldc           #59
214: invokevirtual #57
217: iconst_0
218: invokevirtual #62
221: ldc           #56
223: invokevirtual #57
226: invokevirtual #60
229: iload_3
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #61
241: aload         6
243: invokestatic  #47
246: aload         7
248: invokestatic  #47
251: aload         8
253: invokestatic  #47
256: aload         9
258: invokestatic  #47
261: aload         10
263: invokestatic  #47
266: new           #54
269: dup
270: invokespecial #55
273: ldc           #56
275: invokevirtual #57
278: aload         11
280: invokevirtual #82
283: ldc           #59
285: invokevirtual #57
288: getstatic     #78
291: invokevirtual #82
294: ldc           #56
296: invokevirtual #57
299: invokevirtual #60
302: aload         11
304: getstatic     #78
307: invokevirtual #83
310: invokestatic  #61
313: aload         12
315: invokestatic  #47
318: aload         13
320: invokestatic  #47
323: new           #54
326: dup
327: invokespecial #55
330: ldc           #56
332: invokevirtual #57
335: dload         14
337: invokevirtual #58
340: ldc           #59
342: invokevirtual #57
345: ldc2_w        #91
348: invokevirtual #58
351: ldc           #56
353: invokevirtual #57
356: invokevirtual #60
359: dload         14
361: ldc2_w        #91
364: dcmpl
365: ifne          372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #61
376: aload         17
378: invokestatic  #47
381: new           #54
384: dup
385: invokespecial #55
388: ldc           #56
390: invokevirtual #57
393: aload         18
395: invokevirtual #82
398: ldc           #59
400: invokevirtual #57
403: getstatic     #118
406: invokevirtual #82
409: ldc           #56
411: invokevirtual #57
414: invokevirtual #60
417: aload         18
419: getstatic     #118
422: invokevirtual #83
425: invokestatic  #61
428: return
Exception table:
from    to  target type
168   191   194   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 5048
End line: 5092
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        double double24 = sin21.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin21);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin21.derivative();
        org.apache.commons.math3.optimization.GoalType goalType27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer3.optimize(52, (org.apache.commons.math3.analysis.UnivariateFunction) sin21, goalType27, (double) 89009L, (-0.88966182231646d), 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.8414709825806044d + "'", double24 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #495
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: new           #72
153: dup
154: invokespecial #73
157: astore        16
159: aload         16
161: invokevirtual #74
164: astore        17
166: aload         16
168: ldc2_w        #86
171: invokevirtual #88
174: dstore        18
176: aload         16
178: invokestatic  #143
181: astore        20
183: aload         16
185: invokevirtual #74
188: astore        21
190: aconst_null
191: astore        22
193: aload_2
194: bipush        52
196: aload         16
198: aload         22
200: ldc2_w        #323
203: ldc2_w        #351
206: dconst_0
207: invokevirtual #44
210: astore        23
212: ldc           #45
214: invokestatic  #15
217: goto          222
220: astore        23
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: iload_3
235: invokevirtual #62
238: ldc           #59
240: invokevirtual #57
243: iconst_0
244: invokevirtual #62
247: ldc           #56
249: invokevirtual #57
252: invokevirtual #60
255: iload_3
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #61
267: aload         6
269: invokestatic  #47
272: aload         7
274: invokestatic  #47
277: aload         8
279: invokestatic  #47
282: aload         9
284: invokestatic  #47
287: aload         10
289: invokestatic  #47
292: new           #54
295: dup
296: invokespecial #55
299: ldc           #56
301: invokevirtual #57
304: aload         11
306: invokevirtual #82
309: ldc           #59
311: invokevirtual #57
314: getstatic     #78
317: invokevirtual #82
320: ldc           #56
322: invokevirtual #57
325: invokevirtual #60
328: aload         11
330: getstatic     #78
333: invokevirtual #83
336: invokestatic  #61
339: aload         12
341: invokestatic  #47
344: aload         13
346: invokestatic  #47
349: new           #54
352: dup
353: invokespecial #55
356: ldc           #56
358: invokevirtual #57
361: dload         14
363: invokevirtual #58
366: ldc           #59
368: invokevirtual #57
371: ldc2_w        #91
374: invokevirtual #58
377: ldc           #56
379: invokevirtual #57
382: invokevirtual #60
385: dload         14
387: ldc2_w        #91
390: dcmpl
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #61
402: aload         17
404: invokestatic  #47
407: new           #54
410: dup
411: invokespecial #55
414: ldc           #56
416: invokevirtual #57
419: dload         18
421: invokevirtual #58
424: ldc           #59
426: invokevirtual #57
429: ldc2_w        #23
432: invokevirtual #58
435: ldc           #56
437: invokevirtual #57
440: invokevirtual #60
443: dload         18
445: ldc2_w        #23
448: dcmpl
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #61
460: aload         20
462: invokestatic  #47
465: aload         21
467: invokestatic  #47
470: return
Exception table:
from    to  target type
193   217   220   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 5095
End line: 5218
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.exception.util.Localizable localizable12 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray13 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException15 = new org.apache.commons.math3.exception.MathArithmeticException(localizable12, (java.lang.Object[]) differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction17 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.exception.MathInternalError mathInternalError18 = new org.apache.commons.math3.exception.MathInternalError(localizable11, (java.lang.Object[]) differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException19 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable9, (java.lang.Number) 89009.0d, (java.lang.Object[]) differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction20 = org.apache.commons.math3.analysis.FunctionUtils.add(differentiableUnivariateFunctionArray13);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer24 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker23);
        int int25 = brentOptimizer24.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = sin28.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray30 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable31 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray30);
        org.apache.commons.math3.optimization.GoalType goalType34 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer24.optimize(97, univariateFunction33, goalType34, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType40 = brentOptimizer24.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.optimization.GoalType goalType45 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer24.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin43, goalType45, 3.141592653589793d, 0.0d);
        double double49 = brentOptimizer24.getMax();
        int int50 = brentOptimizer24.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType52 = brentOptimizer24.getGoalType();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        double double57 = sin54.value((double) (short) 10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction58 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer62 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker61);
        int int63 = brentOptimizer62.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin65 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction67 = sin66.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray68 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin65, sin66 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable69 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray68);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable70 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray68);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction71 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray68);
        org.apache.commons.math3.optimization.GoalType goalType72 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer62.optimize(97, univariateFunction71, goalType72, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer62.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType78 = brentOptimizer62.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair79 = brentOptimizer62.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin81 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction82 = sin81.derivative();
        org.apache.commons.math3.optimization.GoalType goalType83 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair86 = brentOptimizer62.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin81, goalType83, 3.141592653589793d, 0.0d);
        double double87 = brentOptimizer62.getMax();
        org.apache.commons.math3.optimization.GoalType goalType88 = brentOptimizer62.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer24.optimize(11, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction58, goalType88, 0.0d, 1.6929693744344998d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair94 = brentOptimizer3.optimize((int) (byte) 100, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction20, goalType88, (double) 52, 1.9612661109026501d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray13);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction14);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction16);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction17);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray30);
        org.junit.Assert.assertNotNull(univariateDifferentiable31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertTrue("'" + goalType34 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType34.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertTrue("'" + goalType45 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType45.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair51);
        org.junit.Assert.assertTrue("'" + goalType52 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType52.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.5440211108893698d) + "'", double57 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(univariateFunction67);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray68);
        org.junit.Assert.assertNotNull(univariateDifferentiable69);
        org.junit.Assert.assertNotNull(univariateDifferentiable70);
        org.junit.Assert.assertNotNull(univariateFunction71);
        org.junit.Assert.assertTrue("'" + goalType72 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType72.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertTrue("'" + goalType78 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType78.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair79);
        org.junit.Assert.assertNotNull(univariateFunction82);
        org.junit.Assert.assertTrue("'" + goalType83 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType83.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType88 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType88.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #496
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aconst_null
66: astore        9
68: aconst_null
69: astore        10
71: aconst_null
72: astore        11
74: iconst_0
75: anewarray     #141
78: astore        12
80: aload         12
82: invokestatic  #142
85: astore        13
87: new           #273
90: dup
91: aload         11
93: aload         12
95: checkcast     #123
98: invokespecial #274
101: astore        14
103: aload         12
105: invokestatic  #245
108: astore        15
110: aload         12
112: invokestatic  #245
115: astore        16
117: new           #125
120: dup
121: aload         10
123: aload         12
125: checkcast     #123
128: invokespecial #126
131: astore        17
133: new           #313
136: dup
137: aload         9
139: ldc2_w        #323
142: invokestatic  #314
145: aload         12
147: checkcast     #123
150: invokespecial #315
153: astore        18
155: aload         12
157: invokestatic  #497
160: astore        19
162: aconst_null
163: astore        20
165: new           #8
168: dup
169: ldc2_w        #31
172: ldc2_w        #33
175: aload         20
177: invokespecial #13
180: astore        21
182: aload         21
184: invokevirtual #71
187: istore        22
189: new           #72
192: dup
193: invokespecial #73
196: astore        23
198: new           #72
201: dup
202: invokespecial #73
205: astore        24
207: aload         24
209: invokevirtual #74
212: astore        25
214: iconst_2
215: anewarray     #75
218: dup
219: iconst_0
220: aload         23
222: aastore
223: dup
224: iconst_1
225: aload         24
227: aastore
228: astore        26
230: aload         26
232: invokestatic  #76
235: astore        27
237: aload         26
239: invokestatic  #77
242: astore        28
244: aload         26
246: checkcast     #89
249: invokestatic  #90
252: astore        29
254: getstatic     #78
257: astore        30
259: aload         21
261: bipush        97
263: aload         29
265: aload         30
267: ldc2_w        #91
270: ldc2_w        #93
273: ldc2_w        #91
276: invokevirtual #44
279: astore        31
281: aload         21
283: invokevirtual #51
286: astore        32
288: aload         21
290: invokevirtual #110
293: astore        33
295: aload         21
297: invokevirtual #51
300: astore        34
302: new           #72
305: dup
306: invokespecial #73
309: astore        35
311: aload         35
313: invokevirtual #74
316: astore        36
318: getstatic     #78
321: astore        37
323: aload         21
325: bipush        97
327: aload         35
329: aload         37
331: ldc2_w        #133
334: dconst_0
335: invokevirtual #81
338: astore        38
340: aload         21
342: invokevirtual #49
345: dstore        39
347: aload         21
349: invokevirtual #50
352: istore        41
354: aload         21
356: invokevirtual #51
359: astore        42
361: aload         21
363: invokevirtual #110
366: astore        43
368: new           #72
371: dup
372: invokespecial #73
375: astore        44
377: aload         44
379: invokevirtual #74
382: astore        45
384: aload         44
386: ldc2_w        #91
389: invokevirtual #88
392: dstore        46
394: aload         44
396: invokestatic  #281
399: astore        48
401: aconst_null
402: astore        49
404: new           #8
407: dup
408: ldc2_w        #31
411: ldc2_w        #33
414: aload         49
416: invokespecial #13
419: astore        50
421: aload         50
423: invokevirtual #71
426: istore        51
428: new           #72
431: dup
432: invokespecial #73
435: astore        52
437: new           #72
440: dup
441: invokespecial #73
444: astore        53
446: aload         53
448: invokevirtual #74
451: astore        54
453: iconst_2
454: anewarray     #75
457: dup
458: iconst_0
459: aload         52
461: aastore
462: dup
463: iconst_1
464: aload         53
466: aastore
467: astore        55
469: aload         55
471: invokestatic  #76
474: astore        56
476: aload         55
478: invokestatic  #77
481: astore        57
483: aload         55
485: checkcast     #89
488: invokestatic  #90
491: astore        58
493: getstatic     #78
496: astore        59
498: aload         50
500: bipush        97
502: aload         58
504: aload         59
506: ldc2_w        #91
509: ldc2_w        #93
512: ldc2_w        #91
515: invokevirtual #44
518: astore        60
520: aload         50
522: invokevirtual #51
525: astore        61
527: aload         50
529: invokevirtual #110
532: astore        62
534: aload         50
536: invokevirtual #51
539: astore        63
541: new           #72
544: dup
545: invokespecial #73
548: astore        64
550: aload         64
552: invokevirtual #74
555: astore        65
557: getstatic     #78
560: astore        66
562: aload         50
564: bipush        97
566: aload         64
568: aload         66
570: ldc2_w        #133
573: dconst_0
574: invokevirtual #81
577: astore        67
579: aload         50
581: invokevirtual #49
584: dstore        68
586: aload         50
588: invokevirtual #110
591: astore        70
593: aload         21
595: bipush        11
597: aload         48
599: aload         70
601: dconst_0
602: ldc2_w        #498
605: invokevirtual #81
608: astore        71
610: aload_2
611: bipush        100
613: aload         19
615: aload         70
617: ldc2_w        #155
620: ldc2_w        #500
623: invokevirtual #81
626: astore        72
628: ldc_w         #327
631: invokestatic  #15
634: goto          639
637: astore        72
639: new           #54
642: dup
643: invokespecial #55
646: ldc           #56
648: invokevirtual #57
651: dload_3
652: invokevirtual #58
655: ldc           #59
657: invokevirtual #57
660: dconst_0
661: invokevirtual #58
664: ldc           #56
666: invokevirtual #57
669: invokevirtual #60
672: dload_3
673: dconst_0
674: dcmpl
675: ifne          682
678: iconst_1
679: goto          683
682: iconst_0
683: invokestatic  #61
686: new           #54
689: dup
690: invokespecial #55
693: ldc           #56
695: invokevirtual #57
698: iload         5
700: invokevirtual #62
703: ldc           #59
705: invokevirtual #57
708: iconst_0
709: invokevirtual #62
712: ldc           #56
714: invokevirtual #57
717: invokevirtual #60
720: iload         5
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #61
733: aload         6
735: invokestatic  #104
738: new           #54
741: dup
742: invokespecial #55
745: ldc           #56
747: invokevirtual #57
750: dload         7
752: invokevirtual #58
755: ldc           #59
757: invokevirtual #57
760: dconst_0
761: invokevirtual #58
764: ldc           #56
766: invokevirtual #57
769: invokevirtual #60
772: dload         7
774: dconst_0
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #61
787: aload         12
789: invokestatic  #47
792: aload         13
794: invokestatic  #47
797: aload         15
799: invokestatic  #47
802: aload         16
804: invokestatic  #47
807: aload         19
809: invokestatic  #47
812: new           #54
815: dup
816: invokespecial #55
819: ldc           #56
821: invokevirtual #57
824: iload         22
826: invokevirtual #62
829: ldc           #59
831: invokevirtual #57
834: iconst_0
835: invokevirtual #62
838: ldc           #56
840: invokevirtual #57
843: invokevirtual #60
846: iload         22
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #61
859: aload         25
861: invokestatic  #47
864: aload         26
866: invokestatic  #47
869: aload         27
871: invokestatic  #47
874: aload         28
876: invokestatic  #47
879: aload         29
881: invokestatic  #47
884: new           #54
887: dup
888: invokespecial #55
891: ldc           #56
893: invokevirtual #57
896: aload         30
898: invokevirtual #82
901: ldc           #59
903: invokevirtual #57
906: getstatic     #78
909: invokevirtual #82
912: ldc           #56
914: invokevirtual #57
917: invokevirtual #60
920: aload         30
922: getstatic     #78
925: invokevirtual #83
928: invokestatic  #61
931: aload         31
933: invokestatic  #47
936: aload         32
938: invokestatic  #47
941: new           #54
944: dup
945: invokespecial #55
948: ldc           #56
950: invokevirtual #57
953: aload         33
955: invokevirtual #82
958: ldc           #59
960: invokevirtual #57
963: getstatic     #78
966: invokevirtual #82
969: ldc           #56
971: invokevirtual #57
974: invokevirtual #60
977: aload         33
979: getstatic     #78
982: invokevirtual #83
985: invokestatic  #61
988: aload         34
990: invokestatic  #47
993: aload         36
995: invokestatic  #47
998: new           #54
1001: dup
1002: invokespecial #55
1005: ldc           #56
1007: invokevirtual #57
1010: aload         37
1012: invokevirtual #82
1015: ldc           #59
1017: invokevirtual #57
1020: getstatic     #78
1023: invokevirtual #82
1026: ldc           #56
1028: invokevirtual #57
1031: invokevirtual #60
1034: aload         37
1036: getstatic     #78
1039: invokevirtual #83
1042: invokestatic  #61
1045: aload         38
1047: invokestatic  #47
1050: new           #54
1053: dup
1054: invokespecial #55
1057: ldc           #56
1059: invokevirtual #57
1062: dload         39
1064: invokevirtual #58
1067: ldc           #59
1069: invokevirtual #57
1072: dconst_0
1073: invokevirtual #58
1076: ldc           #56
1078: invokevirtual #57
1081: invokevirtual #60
1084: dload         39
1086: dconst_0
1087: dcmpl
1088: ifne          1095
1091: iconst_1
1092: goto          1096
1095: iconst_0
1096: invokestatic  #61
1099: new           #54
1102: dup
1103: invokespecial #55
1106: ldc           #56
1108: invokevirtual #57
1111: iload         41
1113: invokevirtual #62
1116: ldc           #59
1118: invokevirtual #57
1121: bipush        97
1123: invokevirtual #62
1126: ldc           #56
1128: invokevirtual #57
1131: invokevirtual #60
1134: iload         41
1136: bipush        97
1138: if_icmpne     1145
1141: iconst_1
1142: goto          1146
1145: iconst_0
1146: invokestatic  #61
1149: aload         42
1151: invokestatic  #47
1154: new           #54
1157: dup
1158: invokespecial #55
1161: ldc           #56
1163: invokevirtual #57
1166: aload         43
1168: invokevirtual #82
1171: ldc           #59
1173: invokevirtual #57
1176: getstatic     #78
1179: invokevirtual #82
1182: ldc           #56
1184: invokevirtual #57
1187: invokevirtual #60
1190: aload         43
1192: getstatic     #78
1195: invokevirtual #83
1198: invokestatic  #61
1201: aload         45
1203: invokestatic  #47
1206: new           #54
1209: dup
1210: invokespecial #55
1213: ldc           #56
1215: invokevirtual #57
1218: dload         46
1220: invokevirtual #58
1223: ldc           #59
1225: invokevirtual #57
1228: ldc2_w        #406
1231: invokevirtual #58
1234: ldc           #56
1236: invokevirtual #57
1239: invokevirtual #60
1242: dload         46
1244: ldc2_w        #406
1247: dcmpl
1248: ifne          1255
1251: iconst_1
1252: goto          1256
1255: iconst_0
1256: invokestatic  #61
1259: aload         48
1261: invokestatic  #47
1264: new           #54
1267: dup
1268: invokespecial #55
1271: ldc           #56
1273: invokevirtual #57
1276: iload         51
1278: invokevirtual #62
1281: ldc           #59
1283: invokevirtual #57
1286: iconst_0
1287: invokevirtual #62
1290: ldc           #56
1292: invokevirtual #57
1295: invokevirtual #60
1298: iload         51
1300: ifne          1307
1303: iconst_1
1304: goto          1308
1307: iconst_0
1308: invokestatic  #61
1311: aload         54
1313: invokestatic  #47
1316: aload         55
1318: invokestatic  #47
1321: aload         56
1323: invokestatic  #47
1326: aload         57
1328: invokestatic  #47
1331: aload         58
1333: invokestatic  #47
1336: new           #54
1339: dup
1340: invokespecial #55
1343: ldc           #56
1345: invokevirtual #57
1348: aload         59
1350: invokevirtual #82
1353: ldc           #59
1355: invokevirtual #57
1358: getstatic     #78
1361: invokevirtual #82
1364: ldc           #56
1366: invokevirtual #57
1369: invokevirtual #60
1372: aload         59
1374: getstatic     #78
1377: invokevirtual #83
1380: invokestatic  #61
1383: aload         60
1385: invokestatic  #47
1388: aload         61
1390: invokestatic  #47
1393: new           #54
1396: dup
1397: invokespecial #55
1400: ldc           #56
1402: invokevirtual #57
1405: aload         62
1407: invokevirtual #82
1410: ldc           #59
1412: invokevirtual #57
1415: getstatic     #78
1418: invokevirtual #82
1421: ldc           #56
1423: invokevirtual #57
1426: invokevirtual #60
1429: aload         62
1431: getstatic     #78
1434: invokevirtual #83
1437: invokestatic  #61
1440: aload         63
1442: invokestatic  #47
1445: aload         65
1447: invokestatic  #47
1450: new           #54
1453: dup
1454: invokespecial #55
1457: ldc           #56
1459: invokevirtual #57
1462: aload         66
1464: invokevirtual #82
1467: ldc           #59
1469: invokevirtual #57
1472: getstatic     #78
1475: invokevirtual #82
1478: ldc           #56
1480: invokevirtual #57
1483: invokevirtual #60
1486: aload         66
1488: getstatic     #78
1491: invokevirtual #83
1494: invokestatic  #61
1497: aload         67
1499: invokestatic  #47
1502: new           #54
1505: dup
1506: invokespecial #55
1509: ldc           #56
1511: invokevirtual #57
1514: dload         68
1516: invokevirtual #58
1519: ldc           #59
1521: invokevirtual #57
1524: dconst_0
1525: invokevirtual #58
1528: ldc           #56
1530: invokevirtual #57
1533: invokevirtual #60
1536: dload         68
1538: dconst_0
1539: dcmpl
1540: ifne          1547
1543: iconst_1
1544: goto          1548
1547: iconst_0
1548: invokestatic  #61
1551: new           #54
1554: dup
1555: invokespecial #55
1558: ldc           #56
1560: invokevirtual #57
1563: aload         70
1565: invokevirtual #82
1568: ldc           #59
1570: invokevirtual #57
1573: getstatic     #78
1576: invokevirtual #82
1579: ldc           #56
1581: invokevirtual #57
1584: invokevirtual #60
1587: aload         70
1589: getstatic     #78
1592: invokevirtual #83
1595: invokestatic  #61
1598: aload         71
1600: invokestatic  #47
1603: return
Exception table:
from    to  target type
610   634   637   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 5221
End line: 5255
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, goalType20, (double) 6.0f, 7.544137102816975d, (double) 12);
        double double25 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(multivariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 12.0d + "'", double25 == 12.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #502
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aconst_null
60: astore        6
62: new           #72
65: dup
66: invokespecial #73
69: astore        7
71: new           #72
74: dup
75: invokespecial #73
78: astore        8
80: aload         8
82: invokevirtual #74
85: astore        9
87: new           #72
90: dup
91: invokespecial #73
94: astore        10
96: new           #72
99: dup
100: invokespecial #73
103: astore        11
105: iconst_4
106: anewarray     #75
109: dup
110: iconst_0
111: aload         7
113: aastore
114: dup
115: iconst_1
116: aload         8
118: aastore
119: dup
120: iconst_2
121: aload         10
123: aastore
124: dup
125: iconst_3
126: aload         11
128: aastore
129: astore        12
131: aload         12
133: invokestatic  #76
136: astore        13
138: aload         12
140: checkcast     #89
143: invokestatic  #109
146: astore        14
148: aload         12
150: invokestatic  #77
153: astore        15
155: aload         6
157: aload         15
159: ldc2_w        #181
162: invokestatic  #183
165: astore        16
167: getstatic     #118
170: astore        17
172: aload_2
173: bipush        10
175: aload         15
177: aload         17
179: ldc2_w        #184
182: ldc2_w        #186
185: ldc2_w        #188
188: invokevirtual #44
191: astore        18
193: aload_2
194: invokevirtual #177
197: dstore        19
199: new           #54
202: dup
203: invokespecial #55
206: ldc           #56
208: invokevirtual #57
211: iload_3
212: invokevirtual #62
215: ldc           #59
217: invokevirtual #57
220: iconst_0
221: invokevirtual #62
224: ldc           #56
226: invokevirtual #57
229: invokevirtual #60
232: iload_3
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #61
244: new           #54
247: dup
248: invokespecial #55
251: ldc           #56
253: invokevirtual #57
256: iload         4
258: invokevirtual #62
261: ldc           #59
263: invokevirtual #57
266: iconst_0
267: invokevirtual #62
270: ldc           #56
272: invokevirtual #57
275: invokevirtual #60
278: iload         4
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #61
291: new           #54
294: dup
295: invokespecial #55
298: ldc           #56
300: invokevirtual #57
303: iload         5
305: invokevirtual #62
308: ldc           #59
310: invokevirtual #57
313: iconst_0
314: invokevirtual #62
317: ldc           #56
319: invokevirtual #57
322: invokevirtual #60
325: iload         5
327: ifne          334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #61
338: aload         9
340: invokestatic  #47
343: aload         12
345: invokestatic  #47
348: aload         13
350: invokestatic  #47
353: aload         14
355: invokestatic  #47
358: aload         15
360: invokestatic  #47
363: aload         16
365: invokestatic  #47
368: new           #54
371: dup
372: invokespecial #55
375: ldc           #56
377: invokevirtual #57
380: aload         17
382: invokevirtual #82
385: ldc           #59
387: invokevirtual #57
390: getstatic     #118
393: invokevirtual #82
396: ldc           #56
398: invokevirtual #57
401: invokevirtual #60
404: aload         17
406: getstatic     #118
409: invokevirtual #83
412: invokestatic  #61
415: aload         18
417: invokestatic  #47
420: new           #54
423: dup
424: invokespecial #55
427: ldc           #56
429: invokevirtual #57
432: dload         19
434: invokevirtual #58
437: ldc           #59
439: invokevirtual #57
442: ldc2_w        #188
445: invokevirtual #58
448: ldc           #56
450: invokevirtual #57
453: invokevirtual #60
456: dload         19
458: ldc2_w        #188
461: dcmpl
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #61
473: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 5258
End line: 5339
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction7 = null;
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.exception.util.Localizable localizable10 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = sin13.derivative();
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray17 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin12, sin13, sin15, sin16 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray17);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException19 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable11, (java.lang.Object[]) univariateDifferentiableArray17);
        org.apache.commons.math3.exception.MathInternalError mathInternalError20 = new org.apache.commons.math3.exception.MathInternalError(localizable10, (java.lang.Object[]) univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray17);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException22 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable8, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin26.derivative();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray29 = new org.apache.commons.math3.analysis.UnivariateFunction[] { univariateFunction25, univariateFunction27, sin28 };
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateFunctionArray29);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction7, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable23, univariateFunction30);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction32 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable23);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer36 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker35);
        int int37 = brentOptimizer36.getEvaluations();
        int int38 = brentOptimizer36.getEvaluations();
        int int39 = brentOptimizer36.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction41 = null;
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray47 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin42, sin43, sin45, sin46 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction52 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction41, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable50, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType53 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair57 = brentOptimizer36.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable50, goalType53, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction32, goalType53, 12.000000000000002d, (double) 35.000004f, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray17);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateFunctionArray29);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(univariateFunction49);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertNotNull(multivariateFunction52);
        org.junit.Assert.assertTrue("'" + goalType53 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType53.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #503
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aconst_null
54: astore        5
56: aconst_null
57: astore        6
59: aconst_null
60: astore        7
62: aconst_null
63: astore        8
65: new           #72
68: dup
69: invokespecial #73
72: astore        9
74: new           #72
77: dup
78: invokespecial #73
81: astore        10
83: aload         10
85: invokevirtual #74
88: astore        11
90: new           #72
93: dup
94: invokespecial #73
97: astore        12
99: new           #72
102: dup
103: invokespecial #73
106: astore        13
108: iconst_4
109: anewarray     #75
112: dup
113: iconst_0
114: aload         9
116: aastore
117: dup
118: iconst_1
119: aload         10
121: aastore
122: dup
123: iconst_2
124: aload         12
126: aastore
127: dup
128: iconst_3
129: aload         13
131: aastore
132: astore        14
134: aload         14
136: invokestatic  #76
139: astore        15
141: new           #122
144: dup
145: aload         8
147: aload         14
149: checkcast     #123
152: invokespecial #124
155: astore        16
157: new           #125
160: dup
161: aload         7
163: aload         14
165: checkcast     #123
168: invokespecial #126
171: astore        17
173: aload         14
175: invokestatic  #77
178: astore        18
180: new           #313
183: dup
184: aload         6
186: ldc2_w        #79
189: invokestatic  #314
192: aload         14
194: checkcast     #123
197: invokespecial #315
200: astore        19
202: aload         14
204: invokestatic  #76
207: astore        20
209: new           #72
212: dup
213: invokespecial #73
216: astore        21
218: aload         21
220: invokevirtual #74
223: astore        22
225: new           #72
228: dup
229: invokespecial #73
232: astore        23
234: aload         23
236: invokevirtual #74
239: astore        24
241: new           #72
244: dup
245: invokespecial #73
248: astore        25
250: iconst_3
251: anewarray     #283
254: dup
255: iconst_0
256: aload         22
258: aastore
259: dup
260: iconst_1
261: aload         24
263: aastore
264: dup
265: iconst_2
266: aload         25
268: aastore
269: astore        26
271: aload         26
273: invokestatic  #117
276: astore        27
278: aload         5
280: aload         20
282: aload         27
284: invokestatic  #404
287: astore        28
289: aload         20
291: invokestatic  #281
294: astore        29
296: aconst_null
297: astore        30
299: new           #8
302: dup
303: ldc2_w        #31
306: ldc2_w        #33
309: aload         30
311: invokespecial #13
314: astore        31
316: aload         31
318: invokevirtual #71
321: istore        32
323: aload         31
325: invokevirtual #71
328: istore        33
330: aload         31
332: invokevirtual #71
335: istore        34
337: aconst_null
338: astore        35
340: new           #72
343: dup
344: invokespecial #73
347: astore        36
349: new           #72
352: dup
353: invokespecial #73
356: astore        37
358: aload         37
360: invokevirtual #74
363: astore        38
365: new           #72
368: dup
369: invokespecial #73
372: astore        39
374: new           #72
377: dup
378: invokespecial #73
381: astore        40
383: iconst_4
384: anewarray     #75
387: dup
388: iconst_0
389: aload         36
391: aastore
392: dup
393: iconst_1
394: aload         37
396: aastore
397: dup
398: iconst_2
399: aload         39
401: aastore
402: dup
403: iconst_3
404: aload         40
406: aastore
407: astore        41
409: aload         41
411: invokestatic  #76
414: astore        42
416: aload         41
418: checkcast     #89
421: invokestatic  #109
424: astore        43
426: aload         41
428: invokestatic  #77
431: astore        44
433: aload         35
435: aload         44
437: ldc2_w        #181
440: invokestatic  #183
443: astore        45
445: getstatic     #118
448: astore        46
450: aload         31
452: bipush        10
454: aload         44
456: aload         46
458: ldc2_w        #184
461: ldc2_w        #186
464: ldc2_w        #188
467: invokevirtual #44
470: astore        47
472: aload_2
473: iconst_0
474: aload         29
476: aload         46
478: ldc2_w        #504
481: ldc2_w        #269
484: dconst_0
485: invokevirtual #44
488: astore        48
490: ldc           #52
492: invokestatic  #15
495: goto          500
498: astore        48
500: new           #54
503: dup
504: invokespecial #55
507: ldc           #56
509: invokevirtual #57
512: iload_3
513: invokevirtual #62
516: ldc           #59
518: invokevirtual #57
521: iconst_0
522: invokevirtual #62
525: ldc           #56
527: invokevirtual #57
530: invokevirtual #60
533: iload_3
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #61
545: new           #54
548: dup
549: invokespecial #55
552: ldc           #56
554: invokevirtual #57
557: iload         4
559: invokevirtual #62
562: ldc           #59
564: invokevirtual #57
567: iconst_0
568: invokevirtual #62
571: ldc           #56
573: invokevirtual #57
576: invokevirtual #60
579: iload         4
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #61
592: aload         11
594: invokestatic  #47
597: aload         14
599: invokestatic  #47
602: aload         15
604: invokestatic  #47
607: aload         18
609: invokestatic  #47
612: aload         20
614: invokestatic  #47
617: aload         22
619: invokestatic  #47
622: aload         24
624: invokestatic  #47
627: aload         26
629: invokestatic  #47
632: aload         27
634: invokestatic  #47
637: aload         28
639: invokestatic  #47
642: aload         29
644: invokestatic  #47
647: new           #54
650: dup
651: invokespecial #55
654: ldc           #56
656: invokevirtual #57
659: iload         32
661: invokevirtual #62
664: ldc           #59
666: invokevirtual #57
669: iconst_0
670: invokevirtual #62
673: ldc           #56
675: invokevirtual #57
678: invokevirtual #60
681: iload         32
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #61
694: new           #54
697: dup
698: invokespecial #55
701: ldc           #56
703: invokevirtual #57
706: iload         33
708: invokevirtual #62
711: ldc           #59
713: invokevirtual #57
716: iconst_0
717: invokevirtual #62
720: ldc           #56
722: invokevirtual #57
725: invokevirtual #60
728: iload         33
730: ifne          737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #61
741: new           #54
744: dup
745: invokespecial #55
748: ldc           #56
750: invokevirtual #57
753: iload         34
755: invokevirtual #62
758: ldc           #59
760: invokevirtual #57
763: iconst_0
764: invokevirtual #62
767: ldc           #56
769: invokevirtual #57
772: invokevirtual #60
775: iload         34
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #61
788: aload         38
790: invokestatic  #47
793: aload         41
795: invokestatic  #47
798: aload         42
800: invokestatic  #47
803: aload         43
805: invokestatic  #47
808: aload         44
810: invokestatic  #47
813: aload         45
815: invokestatic  #47
818: new           #54
821: dup
822: invokespecial #55
825: ldc           #56
827: invokevirtual #57
830: aload         46
832: invokevirtual #82
835: ldc           #59
837: invokevirtual #57
840: getstatic     #118
843: invokevirtual #82
846: ldc           #56
848: invokevirtual #57
851: invokevirtual #60
854: aload         46
856: getstatic     #118
859: invokevirtual #83
862: invokestatic  #61
865: aload         47
867: invokestatic  #47
870: return
Exception table:
from    to  target type
472   495   498   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 5342
End line: 5444
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray49 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin44, sin45, sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray49);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, univariateDifferentiable32, univariateDifferentiable39, sin40, sin42, univariateDifferentiable50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException53 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable23, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException54 = new org.apache.commons.math3.exception.NullArgumentException(localizable22, (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer60 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker59);
        int int61 = brentOptimizer60.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin63, sin64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.GoalType goalType70 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer60.optimize(97, univariateFunction69, goalType70, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.optimize(17, univariateFunction56, goalType70, 99.99999999999999d, 2.238693057170856d, 0.8687261884639957d);
        double double79 = univariatePointValuePair78.getPoint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray49);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateFunction69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 35.966151356677d + "'", double79 == 35.966151356677d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #506
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aconst_null
157: astore        16
159: aconst_null
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: new           #72
174: dup
175: invokespecial #73
178: astore        19
180: new           #72
183: dup
184: invokespecial #73
187: astore        20
189: aload         20
191: invokevirtual #74
194: astore        21
196: new           #72
199: dup
200: invokespecial #73
203: astore        22
205: new           #72
208: dup
209: invokespecial #73
212: astore        23
214: iconst_4
215: anewarray     #75
218: dup
219: iconst_0
220: aload         19
222: aastore
223: dup
224: iconst_1
225: aload         20
227: aastore
228: dup
229: iconst_2
230: aload         22
232: aastore
233: dup
234: iconst_3
235: aload         23
237: aastore
238: astore        24
240: aload         24
242: invokestatic  #76
245: astore        25
247: new           #72
250: dup
251: invokespecial #73
254: astore        26
256: new           #72
259: dup
260: invokespecial #73
263: astore        27
265: aload         27
267: invokevirtual #74
270: astore        28
272: new           #72
275: dup
276: invokespecial #73
279: astore        29
281: new           #72
284: dup
285: invokespecial #73
288: astore        30
290: iconst_4
291: anewarray     #75
294: dup
295: iconst_0
296: aload         26
298: aastore
299: dup
300: iconst_1
301: aload         27
303: aastore
304: dup
305: iconst_2
306: aload         29
308: aastore
309: dup
310: iconst_3
311: aload         30
313: aastore
314: astore        31
316: aload         31
318: invokestatic  #76
321: astore        32
323: new           #72
326: dup
327: invokespecial #73
330: astore        33
332: aload         33
334: invokevirtual #74
337: astore        34
339: new           #72
342: dup
343: invokespecial #73
346: astore        35
348: aload         35
350: invokevirtual #74
353: astore        36
355: new           #72
358: dup
359: invokespecial #73
362: astore        37
364: new           #72
367: dup
368: invokespecial #73
371: astore        38
373: aload         38
375: invokevirtual #74
378: astore        39
380: new           #72
383: dup
384: invokespecial #73
387: astore        40
389: new           #72
392: dup
393: invokespecial #73
396: astore        41
398: iconst_4
399: anewarray     #75
402: dup
403: iconst_0
404: aload         37
406: aastore
407: dup
408: iconst_1
409: aload         38
411: aastore
412: dup
413: iconst_2
414: aload         40
416: aastore
417: dup
418: iconst_3
419: aload         41
421: aastore
422: astore        42
424: aload         42
426: invokestatic  #76
429: astore        43
431: bipush        6
433: anewarray     #75
436: dup
437: iconst_0
438: aload         18
440: aastore
441: dup
442: iconst_1
443: aload         25
445: aastore
446: dup
447: iconst_2
448: aload         32
450: aastore
451: dup
452: iconst_3
453: aload         33
455: aastore
456: dup
457: iconst_4
458: aload         35
460: aastore
461: dup
462: iconst_5
463: aload         43
465: aastore
466: astore        44
468: aload         44
470: invokestatic  #77
473: astore        45
475: new           #313
478: dup
479: aload         17
481: ldc2_w        #219
484: invokestatic  #314
487: aload         44
489: checkcast     #123
492: invokespecial #315
495: astore        46
497: new           #46
500: dup
501: aload         16
503: aload         44
505: checkcast     #123
508: invokespecial #246
511: astore        47
513: aload         44
515: checkcast     #89
518: invokestatic  #117
521: astore        48
523: aload         44
525: checkcast     #89
528: invokestatic  #90
531: astore        49
533: aconst_null
534: astore        50
536: new           #8
539: dup
540: ldc2_w        #31
543: ldc2_w        #33
546: aload         50
548: invokespecial #13
551: astore        51
553: aload         51
555: invokevirtual #71
558: istore        52
560: new           #72
563: dup
564: invokespecial #73
567: astore        53
569: new           #72
572: dup
573: invokespecial #73
576: astore        54
578: aload         54
580: invokevirtual #74
583: astore        55
585: iconst_2
586: anewarray     #75
589: dup
590: iconst_0
591: aload         53
593: aastore
594: dup
595: iconst_1
596: aload         54
598: aastore
599: astore        56
601: aload         56
603: invokestatic  #76
606: astore        57
608: aload         56
610: invokestatic  #77
613: astore        58
615: aload         56
617: checkcast     #89
620: invokestatic  #90
623: astore        59
625: getstatic     #78
628: astore        60
630: aload         51
632: bipush        97
634: aload         59
636: aload         60
638: ldc2_w        #91
641: ldc2_w        #93
644: ldc2_w        #91
647: invokevirtual #44
650: astore        61
652: aload_2
653: bipush        17
655: aload         49
657: aload         60
659: ldc2_w        #507
662: ldc2_w        #509
665: ldc2_w        #511
668: invokevirtual #44
671: astore        62
673: aload         62
675: invokevirtual #513
678: dstore        63
680: new           #54
683: dup
684: invokespecial #55
687: ldc           #56
689: invokevirtual #57
692: iload_3
693: invokevirtual #62
696: ldc           #59
698: invokevirtual #57
701: iconst_0
702: invokevirtual #62
705: ldc           #56
707: invokevirtual #57
710: invokevirtual #60
713: iload_3
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #61
725: aload         6
727: invokestatic  #47
730: aload         7
732: invokestatic  #47
735: aload         8
737: invokestatic  #47
740: aload         9
742: invokestatic  #47
745: aload         10
747: invokestatic  #47
750: new           #54
753: dup
754: invokespecial #55
757: ldc           #56
759: invokevirtual #57
762: aload         11
764: invokevirtual #82
767: ldc           #59
769: invokevirtual #57
772: getstatic     #78
775: invokevirtual #82
778: ldc           #56
780: invokevirtual #57
783: invokevirtual #60
786: aload         11
788: getstatic     #78
791: invokevirtual #83
794: invokestatic  #61
797: aload         12
799: invokestatic  #47
802: aload         13
804: invokestatic  #47
807: new           #54
810: dup
811: invokespecial #55
814: ldc           #56
816: invokevirtual #57
819: iload         14
821: invokevirtual #62
824: ldc           #59
826: invokevirtual #57
829: bipush        8
831: invokevirtual #62
834: ldc           #56
836: invokevirtual #57
839: invokevirtual #60
842: iload         14
844: bipush        8
846: if_icmpne     853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #61
857: new           #54
860: dup
861: invokespecial #55
864: ldc           #56
866: invokevirtual #57
869: iload         15
871: invokevirtual #62
874: ldc           #59
876: invokevirtual #57
879: bipush        8
881: invokevirtual #62
884: ldc           #56
886: invokevirtual #57
889: invokevirtual #60
892: iload         15
894: bipush        8
896: if_icmpne     903
899: iconst_1
900: goto          904
903: iconst_0
904: invokestatic  #61
907: aload         21
909: invokestatic  #47
912: aload         24
914: invokestatic  #47
917: aload         25
919: invokestatic  #47
922: aload         28
924: invokestatic  #47
927: aload         31
929: invokestatic  #47
932: aload         32
934: invokestatic  #47
937: aload         34
939: invokestatic  #47
942: aload         36
944: invokestatic  #47
947: aload         39
949: invokestatic  #47
952: aload         42
954: invokestatic  #47
957: aload         43
959: invokestatic  #47
962: aload         44
964: invokestatic  #47
967: aload         45
969: invokestatic  #47
972: aload         48
974: invokestatic  #47
977: aload         49
979: invokestatic  #47
982: new           #54
985: dup
986: invokespecial #55
989: ldc           #56
991: invokevirtual #57
994: iload         52
996: invokevirtual #62
999: ldc           #59
1001: invokevirtual #57
1004: iconst_0
1005: invokevirtual #62
1008: ldc           #56
1010: invokevirtual #57
1013: invokevirtual #60
1016: iload         52
1018: ifne          1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #61
1029: aload         55
1031: invokestatic  #47
1034: aload         56
1036: invokestatic  #47
1039: aload         57
1041: invokestatic  #47
1044: aload         58
1046: invokestatic  #47
1049: aload         59
1051: invokestatic  #47
1054: new           #54
1057: dup
1058: invokespecial #55
1061: ldc           #56
1063: invokevirtual #57
1066: aload         60
1068: invokevirtual #82
1071: ldc           #59
1073: invokevirtual #57
1076: getstatic     #78
1079: invokevirtual #82
1082: ldc           #56
1084: invokevirtual #57
1087: invokevirtual #60
1090: aload         60
1092: getstatic     #78
1095: invokevirtual #83
1098: invokestatic  #61
1101: aload         61
1103: invokestatic  #47
1106: aload         62
1108: invokestatic  #47
1111: new           #54
1114: dup
1115: invokespecial #55
1118: ldc           #56
1120: invokevirtual #57
1123: dload         63
1125: invokevirtual #58
1128: ldc           #59
1130: invokevirtual #57
1133: ldc2_w        #514
1136: invokevirtual #58
1139: ldc           #56
1141: invokevirtual #57
1144: invokevirtual #60
1147: dload         63
1149: ldc2_w        #514
1152: dcmpl
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #61
1164: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 5447
End line: 5464
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        double double8 = brentOptimizer3.getMax();
        double double9 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #516
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #49
69: dstore        7
71: aload_2
72: invokevirtual #177
75: dstore        9
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: iload_3
90: invokevirtual #62
93: ldc           #59
95: invokevirtual #57
98: iconst_0
99: invokevirtual #62
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #61
122: new           #54
125: dup
126: invokespecial #55
129: ldc           #56
131: invokevirtual #57
134: iload         4
136: invokevirtual #62
139: ldc           #59
141: invokevirtual #57
144: iconst_0
145: invokevirtual #62
148: ldc           #56
150: invokevirtual #57
153: invokevirtual #60
156: iload         4
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #61
169: new           #54
172: dup
173: invokespecial #55
176: ldc           #56
178: invokevirtual #57
181: iload         5
183: invokevirtual #62
186: ldc           #59
188: invokevirtual #57
191: iconst_0
192: invokevirtual #62
195: ldc           #56
197: invokevirtual #57
200: invokevirtual #60
203: iload         5
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #61
216: new           #54
219: dup
220: invokespecial #55
223: ldc           #56
225: invokevirtual #57
228: iload         6
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload         6
252: ifne          259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #61
263: new           #54
266: dup
267: invokespecial #55
270: ldc           #56
272: invokevirtual #57
275: dload         7
277: invokevirtual #58
280: ldc           #59
282: invokevirtual #57
285: dconst_0
286: invokevirtual #58
289: ldc           #56
291: invokevirtual #57
294: invokevirtual #60
297: dload         7
299: dconst_0
300: dcmpl
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #61
312: new           #54
315: dup
316: invokespecial #55
319: ldc           #56
321: invokevirtual #57
324: dload         9
326: invokevirtual #58
329: ldc           #59
331: invokevirtual #57
334: dconst_0
335: invokevirtual #58
338: ldc           #56
340: invokevirtual #57
343: invokevirtual #60
346: dload         9
348: dconst_0
349: dcmpl
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #61
361: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 5467
End line: 5587
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 3.8146973E-6f, 5729.57829566771d);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction4 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction6 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction4, 0.0d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer10 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker9);
        int int11 = brentOptimizer10.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin14.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray16 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin13, sin14 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray16);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray16);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray16);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer10.optimize(97, univariateFunction19, goalType20, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair25 = brentOptimizer10.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType26 = brentOptimizer10.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer10.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin29.derivative();
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair34 = brentOptimizer10.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin29, goalType31, 3.141592653589793d, 0.0d);
        double double35 = brentOptimizer10.getMax();
        int int36 = brentOptimizer10.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker37 = brentOptimizer10.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction49 = sin48.derivative();
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray52 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin47, sin48, sin50, sin51 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable53 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray52);
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.function.Sin sin56 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = sin56.derivative();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = sin59.derivative();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray63 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin58, sin59, sin61, sin62 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable64 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray65 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, univariateDifferentiable46, univariateDifferentiable53, sin54, sin56, univariateDifferentiable64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable66 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray65);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer70 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker69);
        int int71 = brentOptimizer70.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin73 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin74 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction75 = sin74.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray76 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin73, sin74 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable77 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray76);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable78 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray76);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction79 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray76);
        org.apache.commons.math3.optimization.GoalType goalType80 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair84 = brentOptimizer70.optimize(97, univariateFunction79, goalType80, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer70.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType86 = brentOptimizer70.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair90 = brentOptimizer10.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable66, goalType86, 0.0d, (double) (-127L), (-0.017453292519943295d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair93 = brentOptimizer2.optimize((int) (byte) 100, univariateFunction6, goalType86, (-0.7014315007859525d), 0.9735361584457501d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateFunction6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertNotNull(univariatePointValuePair25);
        org.junit.Assert.assertTrue("'" + goalType26 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType26.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker37);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction49);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray52);
        org.junit.Assert.assertNotNull(univariateDifferentiable53);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertNotNull(univariateFunction60);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray63);
        org.junit.Assert.assertNotNull(univariateDifferentiable64);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray65);
        org.junit.Assert.assertNotNull(univariateDifferentiable66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(univariateFunction75);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray76);
        org.junit.Assert.assertNotNull(univariateDifferentiable77);
        org.junit.Assert.assertNotNull(univariateDifferentiable78);
        org.junit.Assert.assertNotNull(univariateFunction79);
        org.junit.Assert.assertTrue("'" + goalType80 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType80.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair84);
        org.junit.Assert.assertNotNull(univariatePointValuePair85);
        org.junit.Assert.assertTrue("'" + goalType86 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType86.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #517
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #341
32: ldc2_w        #375
35: invokespecial #25
38: astore_1
39: aconst_null
40: astore_2
41: aload_2
42: dconst_0
43: invokestatic  #37
46: astore_3
47: aconst_null
48: astore        4
50: new           #8
53: dup
54: ldc2_w        #31
57: ldc2_w        #33
60: aload         4
62: invokespecial #13
65: astore        5
67: aload         5
69: invokevirtual #71
72: istore        6
74: new           #72
77: dup
78: invokespecial #73
81: astore        7
83: new           #72
86: dup
87: invokespecial #73
90: astore        8
92: aload         8
94: invokevirtual #74
97: astore        9
99: iconst_2
100: anewarray     #75
103: dup
104: iconst_0
105: aload         7
107: aastore
108: dup
109: iconst_1
110: aload         8
112: aastore
113: astore        10
115: aload         10
117: invokestatic  #76
120: astore        11
122: aload         10
124: invokestatic  #77
127: astore        12
129: aload         10
131: checkcast     #89
134: invokestatic  #90
137: astore        13
139: getstatic     #78
142: astore        14
144: aload         5
146: bipush        97
148: aload         13
150: aload         14
152: ldc2_w        #91
155: ldc2_w        #93
158: ldc2_w        #91
161: invokevirtual #44
164: astore        15
166: aload         5
168: invokevirtual #51
171: astore        16
173: aload         5
175: invokevirtual #110
178: astore        17
180: aload         5
182: invokevirtual #51
185: astore        18
187: new           #72
190: dup
191: invokespecial #73
194: astore        19
196: aload         19
198: invokevirtual #74
201: astore        20
203: getstatic     #78
206: astore        21
208: aload         5
210: bipush        97
212: aload         19
214: aload         21
216: ldc2_w        #133
219: dconst_0
220: invokevirtual #81
223: astore        22
225: aload         5
227: invokevirtual #49
230: dstore        23
232: aload         5
234: invokevirtual #50
237: istore        25
239: aload         5
241: invokevirtual #103
244: astore        26
246: new           #72
249: dup
250: invokespecial #73
253: astore        27
255: new           #72
258: dup
259: invokespecial #73
262: astore        28
264: new           #72
267: dup
268: invokespecial #73
271: astore        29
273: aload         29
275: invokevirtual #74
278: astore        30
280: new           #72
283: dup
284: invokespecial #73
287: astore        31
289: new           #72
292: dup
293: invokespecial #73
296: astore        32
298: iconst_4
299: anewarray     #75
302: dup
303: iconst_0
304: aload         28
306: aastore
307: dup
308: iconst_1
309: aload         29
311: aastore
312: dup
313: iconst_2
314: aload         31
316: aastore
317: dup
318: iconst_3
319: aload         32
321: aastore
322: astore        33
324: aload         33
326: invokestatic  #76
329: astore        34
331: new           #72
334: dup
335: invokespecial #73
338: astore        35
340: new           #72
343: dup
344: invokespecial #73
347: astore        36
349: aload         36
351: invokevirtual #74
354: astore        37
356: new           #72
359: dup
360: invokespecial #73
363: astore        38
365: new           #72
368: dup
369: invokespecial #73
372: astore        39
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         35
382: aastore
383: dup
384: iconst_1
385: aload         36
387: aastore
388: dup
389: iconst_2
390: aload         38
392: aastore
393: dup
394: iconst_3
395: aload         39
397: aastore
398: astore        40
400: aload         40
402: invokestatic  #76
405: astore        41
407: new           #72
410: dup
411: invokespecial #73
414: astore        42
416: aload         42
418: invokevirtual #74
421: astore        43
423: new           #72
426: dup
427: invokespecial #73
430: astore        44
432: aload         44
434: invokevirtual #74
437: astore        45
439: new           #72
442: dup
443: invokespecial #73
446: astore        46
448: new           #72
451: dup
452: invokespecial #73
455: astore        47
457: aload         47
459: invokevirtual #74
462: astore        48
464: new           #72
467: dup
468: invokespecial #73
471: astore        49
473: new           #72
476: dup
477: invokespecial #73
480: astore        50
482: iconst_4
483: anewarray     #75
486: dup
487: iconst_0
488: aload         46
490: aastore
491: dup
492: iconst_1
493: aload         47
495: aastore
496: dup
497: iconst_2
498: aload         49
500: aastore
501: dup
502: iconst_3
503: aload         50
505: aastore
506: astore        51
508: aload         51
510: invokestatic  #76
513: astore        52
515: bipush        6
517: anewarray     #75
520: dup
521: iconst_0
522: aload         27
524: aastore
525: dup
526: iconst_1
527: aload         34
529: aastore
530: dup
531: iconst_2
532: aload         41
534: aastore
535: dup
536: iconst_3
537: aload         42
539: aastore
540: dup
541: iconst_4
542: aload         44
544: aastore
545: dup
546: iconst_5
547: aload         52
549: aastore
550: astore        53
552: aload         53
554: invokestatic  #77
557: astore        54
559: aconst_null
560: astore        55
562: new           #8
565: dup
566: ldc2_w        #31
569: ldc2_w        #33
572: aload         55
574: invokespecial #13
577: astore        56
579: aload         56
581: invokevirtual #71
584: istore        57
586: new           #72
589: dup
590: invokespecial #73
593: astore        58
595: new           #72
598: dup
599: invokespecial #73
602: astore        59
604: aload         59
606: invokevirtual #74
609: astore        60
611: iconst_2
612: anewarray     #75
615: dup
616: iconst_0
617: aload         58
619: aastore
620: dup
621: iconst_1
622: aload         59
624: aastore
625: astore        61
627: aload         61
629: invokestatic  #76
632: astore        62
634: aload         61
636: invokestatic  #77
639: astore        63
641: aload         61
643: checkcast     #89
646: invokestatic  #90
649: astore        64
651: getstatic     #78
654: astore        65
656: aload         56
658: bipush        97
660: aload         64
662: aload         65
664: ldc2_w        #91
667: ldc2_w        #93
670: ldc2_w        #91
673: invokevirtual #44
676: astore        66
678: aload         56
680: invokevirtual #51
683: astore        67
685: aload         56
687: invokevirtual #110
690: astore        68
692: aload         5
694: bipush        32
696: aload         54
698: aload         68
700: dconst_0
701: ldc2_w        #290
704: ldc2_w        #427
707: invokevirtual #44
710: astore        69
712: aload_1
713: bipush        100
715: aload_3
716: aload         68
718: ldc2_w        #518
721: ldc2_w        #42
724: invokevirtual #81
727: astore        70
729: ldc           #119
731: invokestatic  #15
734: goto          739
737: astore        70
739: aload_3
740: invokestatic  #47
743: new           #54
746: dup
747: invokespecial #55
750: ldc           #56
752: invokevirtual #57
755: iload         6
757: invokevirtual #62
760: ldc           #59
762: invokevirtual #57
765: iconst_0
766: invokevirtual #62
769: ldc           #56
771: invokevirtual #57
774: invokevirtual #60
777: iload         6
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #61
790: aload         9
792: invokestatic  #47
795: aload         10
797: invokestatic  #47
800: aload         11
802: invokestatic  #47
805: aload         12
807: invokestatic  #47
810: aload         13
812: invokestatic  #47
815: new           #54
818: dup
819: invokespecial #55
822: ldc           #56
824: invokevirtual #57
827: aload         14
829: invokevirtual #82
832: ldc           #59
834: invokevirtual #57
837: getstatic     #78
840: invokevirtual #82
843: ldc           #56
845: invokevirtual #57
848: invokevirtual #60
851: aload         14
853: getstatic     #78
856: invokevirtual #83
859: invokestatic  #61
862: aload         15
864: invokestatic  #47
867: aload         16
869: invokestatic  #47
872: new           #54
875: dup
876: invokespecial #55
879: ldc           #56
881: invokevirtual #57
884: aload         17
886: invokevirtual #82
889: ldc           #59
891: invokevirtual #57
894: getstatic     #78
897: invokevirtual #82
900: ldc           #56
902: invokevirtual #57
905: invokevirtual #60
908: aload         17
910: getstatic     #78
913: invokevirtual #83
916: invokestatic  #61
919: aload         18
921: invokestatic  #47
924: aload         20
926: invokestatic  #47
929: new           #54
932: dup
933: invokespecial #55
936: ldc           #56
938: invokevirtual #57
941: aload         21
943: invokevirtual #82
946: ldc           #59
948: invokevirtual #57
951: getstatic     #78
954: invokevirtual #82
957: ldc           #56
959: invokevirtual #57
962: invokevirtual #60
965: aload         21
967: getstatic     #78
970: invokevirtual #83
973: invokestatic  #61
976: aload         22
978: invokestatic  #47
981: new           #54
984: dup
985: invokespecial #55
988: ldc           #56
990: invokevirtual #57
993: dload         23
995: invokevirtual #58
998: ldc           #59
1000: invokevirtual #57
1003: dconst_0
1004: invokevirtual #58
1007: ldc           #56
1009: invokevirtual #57
1012: invokevirtual #60
1015: dload         23
1017: dconst_0
1018: dcmpl
1019: ifne          1026
1022: iconst_1
1023: goto          1027
1026: iconst_0
1027: invokestatic  #61
1030: new           #54
1033: dup
1034: invokespecial #55
1037: ldc           #56
1039: invokevirtual #57
1042: iload         25
1044: invokevirtual #62
1047: ldc           #59
1049: invokevirtual #57
1052: bipush        97
1054: invokevirtual #62
1057: ldc           #56
1059: invokevirtual #57
1062: invokevirtual #60
1065: iload         25
1067: bipush        97
1069: if_icmpne     1076
1072: iconst_1
1073: goto          1077
1076: iconst_0
1077: invokestatic  #61
1080: aload         26
1082: invokestatic  #104
1085: aload         30
1087: invokestatic  #47
1090: aload         33
1092: invokestatic  #47
1095: aload         34
1097: invokestatic  #47
1100: aload         37
1102: invokestatic  #47
1105: aload         40
1107: invokestatic  #47
1110: aload         41
1112: invokestatic  #47
1115: aload         43
1117: invokestatic  #47
1120: aload         45
1122: invokestatic  #47
1125: aload         48
1127: invokestatic  #47
1130: aload         51
1132: invokestatic  #47
1135: aload         52
1137: invokestatic  #47
1140: aload         53
1142: invokestatic  #47
1145: aload         54
1147: invokestatic  #47
1150: new           #54
1153: dup
1154: invokespecial #55
1157: ldc           #56
1159: invokevirtual #57
1162: iload         57
1164: invokevirtual #62
1167: ldc           #59
1169: invokevirtual #57
1172: iconst_0
1173: invokevirtual #62
1176: ldc           #56
1178: invokevirtual #57
1181: invokevirtual #60
1184: iload         57
1186: ifne          1193
1189: iconst_1
1190: goto          1194
1193: iconst_0
1194: invokestatic  #61
1197: aload         60
1199: invokestatic  #47
1202: aload         61
1204: invokestatic  #47
1207: aload         62
1209: invokestatic  #47
1212: aload         63
1214: invokestatic  #47
1217: aload         64
1219: invokestatic  #47
1222: new           #54
1225: dup
1226: invokespecial #55
1229: ldc           #56
1231: invokevirtual #57
1234: aload         65
1236: invokevirtual #82
1239: ldc           #59
1241: invokevirtual #57
1244: getstatic     #78
1247: invokevirtual #82
1250: ldc           #56
1252: invokevirtual #57
1255: invokevirtual #60
1258: aload         65
1260: getstatic     #78
1263: invokevirtual #83
1266: invokestatic  #61
1269: aload         66
1271: invokestatic  #47
1274: aload         67
1276: invokestatic  #47
1279: new           #54
1282: dup
1283: invokespecial #55
1286: ldc           #56
1288: invokevirtual #57
1291: aload         68
1293: invokevirtual #82
1296: ldc           #59
1298: invokevirtual #57
1301: getstatic     #78
1304: invokevirtual #82
1307: ldc           #56
1309: invokevirtual #57
1312: invokevirtual #60
1315: aload         68
1317: getstatic     #78
1320: invokevirtual #83
1323: invokestatic  #61
1326: aload         69
1328: invokestatic  #47
1331: return
Exception table:
from    to  target type
712   734   737   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 5590
End line: 5607
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = brentOptimizer3.getConvergenceChecker();
        int int9 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #520
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #103
63: astore        7
65: aload_2
66: invokevirtual #103
69: astore        8
71: aload_2
72: invokevirtual #50
75: istore        9
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: iload_3
90: invokevirtual #62
93: ldc           #59
95: invokevirtual #57
98: iconst_0
99: invokevirtual #62
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #61
122: new           #54
125: dup
126: invokespecial #55
129: ldc           #56
131: invokevirtual #57
134: dload         4
136: invokevirtual #58
139: ldc           #59
141: invokevirtual #57
144: dconst_0
145: invokevirtual #58
148: ldc           #56
150: invokevirtual #57
153: invokevirtual #60
156: dload         4
158: dconst_0
159: dcmpl
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #61
171: new           #54
174: dup
175: invokespecial #55
178: ldc           #56
180: invokevirtual #57
183: iload         6
185: invokevirtual #62
188: ldc           #59
190: invokevirtual #57
193: iconst_0
194: invokevirtual #62
197: ldc           #56
199: invokevirtual #57
202: invokevirtual #60
205: iload         6
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #61
218: aload         7
220: invokestatic  #104
223: aload         8
225: invokestatic  #104
228: new           #54
231: dup
232: invokespecial #55
235: ldc           #56
237: invokevirtual #57
240: iload         9
242: invokevirtual #62
245: ldc           #59
247: invokevirtual #57
250: iconst_0
251: invokevirtual #62
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: iload         9
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #61
275: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 5610
End line: 5625
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = brentOptimizer2.computeObjectiveValue(0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #521
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #103
48: astore_3
49: aload_1
50: dconst_0
51: invokevirtual #158
54: dstore        4
56: ldc           #52
58: invokestatic  #15
61: goto          66
64: astore        4
66: new           #54
69: dup
70: invokespecial #55
73: ldc           #56
75: invokevirtual #57
78: iload_2
79: invokevirtual #62
82: ldc           #59
84: invokevirtual #57
87: iconst_0
88: invokevirtual #62
91: ldc           #56
93: invokevirtual #57
96: invokevirtual #60
99: iload_2
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #61
111: aload_3
112: invokestatic  #104
115: return
Exception table:
from    to  target type
49    61    64   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 5628
End line: 5638
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(8.832347764255917E-17d, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #522
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #523
32: dconst_0
33: invokespecial #25
36: astore_1
37: ldc           #29
39: invokestatic  #15
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 5641
End line: 5710
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = sin6.derivative();
        double double9 = sin6.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = sin6.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin6.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer15 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker14);
        int int16 = brentOptimizer15.getMaxEvaluations();
        double double17 = brentOptimizer15.getMax();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin19, sin20, sin22, sin23 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer30 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker29);
        int int31 = brentOptimizer30.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray36 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable37 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray36);
        org.apache.commons.math3.optimization.GoalType goalType40 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer30.optimize(97, univariateFunction39, goalType40, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer30.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType46 = brentOptimizer30.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer15.optimize((int) ' ', univariateFunction26, goalType46, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair52 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin6, goalType46, 2.7182818284590446d, (double) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair53 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (10) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.8414709825806044d + "'", double9 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray36);
        org.junit.Assert.assertNotNull(univariateDifferentiable37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateFunction39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair44);
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
        org.junit.Assert.assertTrue("'" + goalType46 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType46.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair49);
        org.junit.Assert.assertNotNull(univariatePointValuePair52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #525
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        5
56: aload         5
58: invokevirtual #74
61: astore        6
63: aload         5
65: ldc2_w        #86
68: invokevirtual #88
71: dstore        7
73: aload         5
75: invokevirtual #74
78: astore        9
80: aload         5
82: invokevirtual #74
85: astore        10
87: aconst_null
88: astore        11
90: new           #8
93: dup
94: ldc2_w        #31
97: ldc2_w        #33
100: aload         11
102: invokespecial #13
105: astore        12
107: aload         12
109: invokevirtual #50
112: istore        13
114: aload         12
116: invokevirtual #49
119: dstore        14
121: new           #72
124: dup
125: invokespecial #73
128: astore        16
130: new           #72
133: dup
134: invokespecial #73
137: astore        17
139: aload         17
141: invokevirtual #74
144: astore        18
146: new           #72
149: dup
150: invokespecial #73
153: astore        19
155: new           #72
158: dup
159: invokespecial #73
162: astore        20
164: iconst_4
165: anewarray     #75
168: dup
169: iconst_0
170: aload         16
172: aastore
173: dup
174: iconst_1
175: aload         17
177: aastore
178: dup
179: iconst_2
180: aload         19
182: aastore
183: dup
184: iconst_3
185: aload         20
187: aastore
188: astore        21
190: aload         21
192: invokestatic  #76
195: astore        22
197: aload         21
199: checkcast     #89
202: invokestatic  #109
205: astore        23
207: aconst_null
208: astore        24
210: new           #8
213: dup
214: ldc2_w        #31
217: ldc2_w        #33
220: aload         24
222: invokespecial #13
225: astore        25
227: aload         25
229: invokevirtual #71
232: istore        26
234: new           #72
237: dup
238: invokespecial #73
241: astore        27
243: new           #72
246: dup
247: invokespecial #73
250: astore        28
252: aload         28
254: invokevirtual #74
257: astore        29
259: iconst_2
260: anewarray     #75
263: dup
264: iconst_0
265: aload         27
267: aastore
268: dup
269: iconst_1
270: aload         28
272: aastore
273: astore        30
275: aload         30
277: invokestatic  #76
280: astore        31
282: aload         30
284: invokestatic  #77
287: astore        32
289: aload         30
291: checkcast     #89
294: invokestatic  #90
297: astore        33
299: getstatic     #78
302: astore        34
304: aload         25
306: bipush        97
308: aload         33
310: aload         34
312: ldc2_w        #91
315: ldc2_w        #93
318: ldc2_w        #91
321: invokevirtual #44
324: astore        35
326: aload         25
328: invokevirtual #51
331: astore        36
333: aload         25
335: invokevirtual #110
338: astore        37
340: aload         12
342: bipush        32
344: aload         23
346: aload         37
348: ldc2_w        #173
351: ldc2_w        #175
354: invokevirtual #81
357: astore        38
359: aload_2
360: bipush        10
362: aload         5
364: aload         37
366: ldc2_w        #409
369: ldc2_w        #153
372: invokevirtual #81
375: astore        39
377: aload_2
378: invokevirtual #51
381: astore        40
383: ldc           #115
385: invokestatic  #15
388: goto          393
391: astore        40
393: new           #54
396: dup
397: invokespecial #55
400: ldc           #56
402: invokevirtual #57
405: dload_3
406: invokevirtual #58
409: ldc           #59
411: invokevirtual #57
414: dconst_0
415: invokevirtual #58
418: ldc           #56
420: invokevirtual #57
423: invokevirtual #60
426: dload_3
427: dconst_0
428: dcmpl
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #61
440: aload         6
442: invokestatic  #47
445: new           #54
448: dup
449: invokespecial #55
452: ldc           #56
454: invokevirtual #57
457: dload         7
459: invokevirtual #58
462: ldc           #59
464: invokevirtual #57
467: ldc2_w        #23
470: invokevirtual #58
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: dload         7
483: ldc2_w        #23
486: dcmpl
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #61
498: aload         9
500: invokestatic  #47
503: aload         10
505: invokestatic  #47
508: new           #54
511: dup
512: invokespecial #55
515: ldc           #56
517: invokevirtual #57
520: iload         13
522: invokevirtual #62
525: ldc           #59
527: invokevirtual #57
530: iconst_0
531: invokevirtual #62
534: ldc           #56
536: invokevirtual #57
539: invokevirtual #60
542: iload         13
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #61
555: new           #54
558: dup
559: invokespecial #55
562: ldc           #56
564: invokevirtual #57
567: dload         14
569: invokevirtual #58
572: ldc           #59
574: invokevirtual #57
577: dconst_0
578: invokevirtual #58
581: ldc           #56
583: invokevirtual #57
586: invokevirtual #60
589: dload         14
591: dconst_0
592: dcmpl
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #61
604: aload         18
606: invokestatic  #47
609: aload         21
611: invokestatic  #47
614: aload         22
616: invokestatic  #47
619: aload         23
621: invokestatic  #47
624: new           #54
627: dup
628: invokespecial #55
631: ldc           #56
633: invokevirtual #57
636: iload         26
638: invokevirtual #62
641: ldc           #59
643: invokevirtual #57
646: iconst_0
647: invokevirtual #62
650: ldc           #56
652: invokevirtual #57
655: invokevirtual #60
658: iload         26
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #61
671: aload         29
673: invokestatic  #47
676: aload         30
678: invokestatic  #47
681: aload         31
683: invokestatic  #47
686: aload         32
688: invokestatic  #47
691: aload         33
693: invokestatic  #47
696: new           #54
699: dup
700: invokespecial #55
703: ldc           #56
705: invokevirtual #57
708: aload         34
710: invokevirtual #82
713: ldc           #59
715: invokevirtual #57
718: getstatic     #78
721: invokevirtual #82
724: ldc           #56
726: invokevirtual #57
729: invokevirtual #60
732: aload         34
734: getstatic     #78
737: invokevirtual #83
740: invokestatic  #61
743: aload         35
745: invokestatic  #47
748: aload         36
750: invokestatic  #47
753: new           #54
756: dup
757: invokespecial #55
760: ldc           #56
762: invokevirtual #57
765: aload         37
767: invokevirtual #82
770: ldc           #59
772: invokevirtual #57
775: getstatic     #78
778: invokevirtual #82
781: ldc           #56
783: invokevirtual #57
786: invokevirtual #60
789: aload         37
791: getstatic     #78
794: invokevirtual #83
797: invokestatic  #61
800: aload         38
802: invokestatic  #47
805: aload         39
807: invokestatic  #47
810: return
Exception table:
from    to  target type
377   388   391   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 5713
End line: 5740
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker18 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker18);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #103
142: astore        13
144: aload_2
145: invokevirtual #103
148: astore        14
150: new           #54
153: dup
154: invokespecial #55
157: ldc           #56
159: invokevirtual #57
162: iload_3
163: invokevirtual #62
166: ldc           #59
168: invokevirtual #57
171: iconst_0
172: invokevirtual #62
175: ldc           #56
177: invokevirtual #57
180: invokevirtual #60
183: iload_3
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #61
195: aload         6
197: invokestatic  #47
200: aload         7
202: invokestatic  #47
205: aload         8
207: invokestatic  #47
210: aload         9
212: invokestatic  #47
215: aload         10
217: invokestatic  #47
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: aload         11
234: invokevirtual #82
237: ldc           #59
239: invokevirtual #57
242: getstatic     #78
245: invokevirtual #82
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: aload         11
258: getstatic     #78
261: invokevirtual #83
264: invokestatic  #61
267: aload         12
269: invokestatic  #47
272: aload         13
274: invokestatic  #104
277: aload         14
279: invokestatic  #104
282: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 5743
End line: 5860
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable21 = null;
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin22, sin23, sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException29 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable21, (java.lang.Object[]) univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray27);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer34 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker33);
        int int35 = brentOptimizer34.getEvaluations();
        int int36 = brentOptimizer34.getEvaluations();
        int int37 = brentOptimizer34.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction39 = null;
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction47 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction39, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable48, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType51 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair55 = brentOptimizer34.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable48, goalType51, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer3.optimize((int) (byte) 100, univariateFunction30, goalType51, 1.2786363145140075E-4d, (-1.5596856728972892d), 2.2227587494850775E-162d);
        double double61 = brentOptimizer3.computeObjectiveValue(99.00505037623081d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker62 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        double double67 = sin64.value(1.208662425748988d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer71 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker70);
        int int72 = brentOptimizer71.getEvaluations();
        int int73 = brentOptimizer71.getEvaluations();
        int int74 = brentOptimizer71.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction76 = null;
        org.apache.commons.math3.analysis.function.Sin sin77 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin78 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction79 = sin78.derivative();
        org.apache.commons.math3.analysis.function.Sin sin80 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin81 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray82 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin77, sin78, sin80, sin81 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable83 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray82);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction84 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray82);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable85 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray82);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction87 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction76, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable85, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType88 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair92 = brentOptimizer71.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable85, goalType88, (double) 6.0f, 7.544137102816975d, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair96 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) sin64, goalType88, 1.60978210179491616E17d, 1.1920928955078737E193d, 1.2786363075458198E-4d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(multivariateFunction50);
        org.junit.Assert.assertTrue("'" + goalType51 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType51.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair55);
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-3.99597192642347d) + "'", double61 == (-3.99597192642347d));
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker62);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.9351429750755559d + "'", double67 == 0.9351429750755559d);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(univariateFunction79);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray82);
        org.junit.Assert.assertNotNull(univariateDifferentiable83);
        org.junit.Assert.assertNotNull(univariateFunction84);
        org.junit.Assert.assertNotNull(univariateDifferentiable85);
        org.junit.Assert.assertNotNull(multivariateFunction87);
        org.junit.Assert.assertTrue("'" + goalType88 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType88.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #527
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #49
148: dstore        14
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: aload         22
247: checkcast     #89
250: invokestatic  #109
253: astore        25
255: aconst_null
256: astore        26
258: new           #8
261: dup
262: ldc2_w        #31
265: ldc2_w        #33
268: aload         26
270: invokespecial #13
273: astore        27
275: aload         27
277: invokevirtual #71
280: istore        28
282: aload         27
284: invokevirtual #71
287: istore        29
289: aload         27
291: invokevirtual #71
294: istore        30
296: aconst_null
297: astore        31
299: new           #72
302: dup
303: invokespecial #73
306: astore        32
308: new           #72
311: dup
312: invokespecial #73
315: astore        33
317: aload         33
319: invokevirtual #74
322: astore        34
324: new           #72
327: dup
328: invokespecial #73
331: astore        35
333: new           #72
336: dup
337: invokespecial #73
340: astore        36
342: iconst_4
343: anewarray     #75
346: dup
347: iconst_0
348: aload         32
350: aastore
351: dup
352: iconst_1
353: aload         33
355: aastore
356: dup
357: iconst_2
358: aload         35
360: aastore
361: dup
362: iconst_3
363: aload         36
365: aastore
366: astore        37
368: aload         37
370: invokestatic  #76
373: astore        38
375: aload         37
377: checkcast     #89
380: invokestatic  #109
383: astore        39
385: aload         37
387: invokestatic  #77
390: astore        40
392: aload         31
394: aload         40
396: ldc2_w        #181
399: invokestatic  #183
402: astore        41
404: getstatic     #118
407: astore        42
409: aload         27
411: bipush        10
413: aload         40
415: aload         42
417: ldc2_w        #184
420: ldc2_w        #186
423: ldc2_w        #188
426: invokevirtual #44
429: astore        43
431: aload_2
432: bipush        100
434: aload         25
436: aload         42
438: ldc2_w        #238
441: ldc2_w        #400
444: ldc2_w        #402
447: invokevirtual #44
450: astore        44
452: aload_2
453: ldc2_w        #528
456: invokevirtual #158
459: dstore        45
461: aload_2
462: invokevirtual #103
465: astore        47
467: new           #72
470: dup
471: invokespecial #73
474: astore        48
476: aload         48
478: invokevirtual #74
481: astore        49
483: aload         48
485: ldc2_w        #277
488: invokevirtual #88
491: dstore        50
493: aconst_null
494: astore        52
496: new           #8
499: dup
500: ldc2_w        #31
503: ldc2_w        #33
506: aload         52
508: invokespecial #13
511: astore        53
513: aload         53
515: invokevirtual #71
518: istore        54
520: aload         53
522: invokevirtual #71
525: istore        55
527: aload         53
529: invokevirtual #71
532: istore        56
534: aconst_null
535: astore        57
537: new           #72
540: dup
541: invokespecial #73
544: astore        58
546: new           #72
549: dup
550: invokespecial #73
553: astore        59
555: aload         59
557: invokevirtual #74
560: astore        60
562: new           #72
565: dup
566: invokespecial #73
569: astore        61
571: new           #72
574: dup
575: invokespecial #73
578: astore        62
580: iconst_4
581: anewarray     #75
584: dup
585: iconst_0
586: aload         58
588: aastore
589: dup
590: iconst_1
591: aload         59
593: aastore
594: dup
595: iconst_2
596: aload         61
598: aastore
599: dup
600: iconst_3
601: aload         62
603: aastore
604: astore        63
606: aload         63
608: invokestatic  #76
611: astore        64
613: aload         63
615: checkcast     #89
618: invokestatic  #109
621: astore        65
623: aload         63
625: invokestatic  #77
628: astore        66
630: aload         57
632: aload         66
634: ldc2_w        #181
637: invokestatic  #183
640: astore        67
642: getstatic     #118
645: astore        68
647: aload         53
649: bipush        10
651: aload         66
653: aload         68
655: ldc2_w        #184
658: ldc2_w        #186
661: ldc2_w        #188
664: invokevirtual #44
667: astore        69
669: aload_2
670: iconst_0
671: aload         48
673: aload         68
675: ldc2_w        #530
678: ldc2_w        #532
681: ldc2_w        #534
684: invokevirtual #44
687: astore        70
689: ldc           #52
691: invokestatic  #15
694: goto          699
697: astore        70
699: new           #54
702: dup
703: invokespecial #55
706: ldc           #56
708: invokevirtual #57
711: iload_3
712: invokevirtual #62
715: ldc           #59
717: invokevirtual #57
720: iconst_0
721: invokevirtual #62
724: ldc           #56
726: invokevirtual #57
729: invokevirtual #60
732: iload_3
733: ifne          740
736: iconst_1
737: goto          741
740: iconst_0
741: invokestatic  #61
744: aload         6
746: invokestatic  #47
749: aload         7
751: invokestatic  #47
754: aload         8
756: invokestatic  #47
759: aload         9
761: invokestatic  #47
764: aload         10
766: invokestatic  #47
769: new           #54
772: dup
773: invokespecial #55
776: ldc           #56
778: invokevirtual #57
781: aload         11
783: invokevirtual #82
786: ldc           #59
788: invokevirtual #57
791: getstatic     #78
794: invokevirtual #82
797: ldc           #56
799: invokevirtual #57
802: invokevirtual #60
805: aload         11
807: getstatic     #78
810: invokevirtual #83
813: invokestatic  #61
816: aload         12
818: invokestatic  #47
821: aload         13
823: invokestatic  #47
826: new           #54
829: dup
830: invokespecial #55
833: ldc           #56
835: invokevirtual #57
838: dload         14
840: invokevirtual #58
843: ldc           #59
845: invokevirtual #57
848: ldc2_w        #93
851: invokevirtual #58
854: ldc           #56
856: invokevirtual #57
859: invokevirtual #60
862: dload         14
864: ldc2_w        #93
867: dcmpl
868: ifne          875
871: iconst_1
872: goto          876
875: iconst_0
876: invokestatic  #61
879: aload         19
881: invokestatic  #47
884: aload         22
886: invokestatic  #47
889: aload         23
891: invokestatic  #47
894: aload         25
896: invokestatic  #47
899: new           #54
902: dup
903: invokespecial #55
906: ldc           #56
908: invokevirtual #57
911: iload         28
913: invokevirtual #62
916: ldc           #59
918: invokevirtual #57
921: iconst_0
922: invokevirtual #62
925: ldc           #56
927: invokevirtual #57
930: invokevirtual #60
933: iload         28
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #61
946: new           #54
949: dup
950: invokespecial #55
953: ldc           #56
955: invokevirtual #57
958: iload         29
960: invokevirtual #62
963: ldc           #59
965: invokevirtual #57
968: iconst_0
969: invokevirtual #62
972: ldc           #56
974: invokevirtual #57
977: invokevirtual #60
980: iload         29
982: ifne          989
985: iconst_1
986: goto          990
989: iconst_0
990: invokestatic  #61
993: new           #54
996: dup
997: invokespecial #55
1000: ldc           #56
1002: invokevirtual #57
1005: iload         30
1007: invokevirtual #62
1010: ldc           #59
1012: invokevirtual #57
1015: iconst_0
1016: invokevirtual #62
1019: ldc           #56
1021: invokevirtual #57
1024: invokevirtual #60
1027: iload         30
1029: ifne          1036
1032: iconst_1
1033: goto          1037
1036: iconst_0
1037: invokestatic  #61
1040: aload         34
1042: invokestatic  #47
1045: aload         37
1047: invokestatic  #47
1050: aload         38
1052: invokestatic  #47
1055: aload         39
1057: invokestatic  #47
1060: aload         40
1062: invokestatic  #47
1065: aload         41
1067: invokestatic  #47
1070: new           #54
1073: dup
1074: invokespecial #55
1077: ldc           #56
1079: invokevirtual #57
1082: aload         42
1084: invokevirtual #82
1087: ldc           #59
1089: invokevirtual #57
1092: getstatic     #118
1095: invokevirtual #82
1098: ldc           #56
1100: invokevirtual #57
1103: invokevirtual #60
1106: aload         42
1108: getstatic     #118
1111: invokevirtual #83
1114: invokestatic  #61
1117: aload         43
1119: invokestatic  #47
1122: aload         44
1124: invokestatic  #47
1127: new           #54
1130: dup
1131: invokespecial #55
1134: ldc           #56
1136: invokevirtual #57
1139: dload         45
1141: invokevirtual #58
1144: ldc           #59
1146: invokevirtual #57
1149: ldc2_w        #536
1152: invokevirtual #58
1155: ldc           #56
1157: invokevirtual #57
1160: invokevirtual #60
1163: dload         45
1165: ldc2_w        #536
1168: dcmpl
1169: ifne          1176
1172: iconst_1
1173: goto          1177
1176: iconst_0
1177: invokestatic  #61
1180: aload         47
1182: invokestatic  #104
1185: aload         49
1187: invokestatic  #47
1190: new           #54
1193: dup
1194: invokespecial #55
1197: ldc           #56
1199: invokevirtual #57
1202: dload         50
1204: invokevirtual #58
1207: ldc           #59
1209: invokevirtual #57
1212: ldc2_w        #538
1215: invokevirtual #58
1218: ldc           #56
1220: invokevirtual #57
1223: invokevirtual #60
1226: dload         50
1228: ldc2_w        #538
1231: dcmpl
1232: ifne          1239
1235: iconst_1
1236: goto          1240
1239: iconst_0
1240: invokestatic  #61
1243: new           #54
1246: dup
1247: invokespecial #55
1250: ldc           #56
1252: invokevirtual #57
1255: iload         54
1257: invokevirtual #62
1260: ldc           #59
1262: invokevirtual #57
1265: iconst_0
1266: invokevirtual #62
1269: ldc           #56
1271: invokevirtual #57
1274: invokevirtual #60
1277: iload         54
1279: ifne          1286
1282: iconst_1
1283: goto          1287
1286: iconst_0
1287: invokestatic  #61
1290: new           #54
1293: dup
1294: invokespecial #55
1297: ldc           #56
1299: invokevirtual #57
1302: iload         55
1304: invokevirtual #62
1307: ldc           #59
1309: invokevirtual #57
1312: iconst_0
1313: invokevirtual #62
1316: ldc           #56
1318: invokevirtual #57
1321: invokevirtual #60
1324: iload         55
1326: ifne          1333
1329: iconst_1
1330: goto          1334
1333: iconst_0
1334: invokestatic  #61
1337: new           #54
1340: dup
1341: invokespecial #55
1344: ldc           #56
1346: invokevirtual #57
1349: iload         56
1351: invokevirtual #62
1354: ldc           #59
1356: invokevirtual #57
1359: iconst_0
1360: invokevirtual #62
1363: ldc           #56
1365: invokevirtual #57
1368: invokevirtual #60
1371: iload         56
1373: ifne          1380
1376: iconst_1
1377: goto          1381
1380: iconst_0
1381: invokestatic  #61
1384: aload         60
1386: invokestatic  #47
1389: aload         63
1391: invokestatic  #47
1394: aload         64
1396: invokestatic  #47
1399: aload         65
1401: invokestatic  #47
1404: aload         66
1406: invokestatic  #47
1409: aload         67
1411: invokestatic  #47
1414: new           #54
1417: dup
1418: invokespecial #55
1421: ldc           #56
1423: invokevirtual #57
1426: aload         68
1428: invokevirtual #82
1431: ldc           #59
1433: invokevirtual #57
1436: getstatic     #118
1439: invokevirtual #82
1442: ldc           #56
1444: invokevirtual #57
1447: invokevirtual #60
1450: aload         68
1452: getstatic     #118
1455: invokevirtual #83
1458: invokestatic  #61
1461: aload         69
1463: invokestatic  #47
1466: return
Exception table:
from    to  target type
669   694   697   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 5863
End line: 5896
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getMaxEvaluations();
        int int20 = brentOptimizer3.getMaxEvaluations();
        double double21 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.GoalType goalType22 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + goalType22 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType22.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #540
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #50
148: istore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: aload_2
157: invokevirtual #177
160: dstore        16
162: aload_2
163: invokevirtual #110
166: astore        18
168: new           #54
171: dup
172: invokespecial #55
175: ldc           #56
177: invokevirtual #57
180: iload_3
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload_3
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #61
213: aload         6
215: invokestatic  #47
218: aload         7
220: invokestatic  #47
223: aload         8
225: invokestatic  #47
228: aload         9
230: invokestatic  #47
233: aload         10
235: invokestatic  #47
238: new           #54
241: dup
242: invokespecial #55
245: ldc           #56
247: invokevirtual #57
250: aload         11
252: invokevirtual #82
255: ldc           #59
257: invokevirtual #57
260: getstatic     #78
263: invokevirtual #82
266: ldc           #56
268: invokevirtual #57
271: invokevirtual #60
274: aload         11
276: getstatic     #78
279: invokevirtual #83
282: invokestatic  #61
285: aload         12
287: invokestatic  #47
290: aload         13
292: invokestatic  #47
295: new           #54
298: dup
299: invokespecial #55
302: ldc           #56
304: invokevirtual #57
307: iload         14
309: invokevirtual #62
312: ldc           #59
314: invokevirtual #57
317: bipush        97
319: invokevirtual #62
322: ldc           #56
324: invokevirtual #57
327: invokevirtual #60
330: iload         14
332: bipush        97
334: if_icmpne     341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #61
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: iload         15
359: invokevirtual #62
362: ldc           #59
364: invokevirtual #57
367: bipush        97
369: invokevirtual #62
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: iload         15
382: bipush        97
384: if_icmpne     391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #61
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: dload         16
409: invokevirtual #58
412: ldc           #59
414: invokevirtual #57
417: ldc2_w        #91
420: invokevirtual #58
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: dload         16
433: ldc2_w        #91
436: dcmpl
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #61
448: new           #54
451: dup
452: invokespecial #55
455: ldc           #56
457: invokevirtual #57
460: aload         18
462: invokevirtual #82
465: ldc           #59
467: invokevirtual #57
470: getstatic     #78
473: invokevirtual #82
476: ldc           #56
478: invokevirtual #57
481: invokevirtual #60
484: aload         18
486: getstatic     #78
489: invokevirtual #83
492: invokestatic  #61
495: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 5899
End line: 5926
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker18 = brentOptimizer3.getConvergenceChecker();
        int int19 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #541
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #103
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: new           #54
153: dup
154: invokespecial #55
157: ldc           #56
159: invokevirtual #57
162: iload_3
163: invokevirtual #62
166: ldc           #59
168: invokevirtual #57
171: iconst_0
172: invokevirtual #62
175: ldc           #56
177: invokevirtual #57
180: invokevirtual #60
183: iload_3
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #61
195: aload         6
197: invokestatic  #47
200: aload         7
202: invokestatic  #47
205: aload         8
207: invokestatic  #47
210: aload         9
212: invokestatic  #47
215: aload         10
217: invokestatic  #47
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: aload         11
234: invokevirtual #82
237: ldc           #59
239: invokevirtual #57
242: getstatic     #78
245: invokevirtual #82
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: aload         11
258: getstatic     #78
261: invokevirtual #83
264: invokestatic  #61
267: aload         12
269: invokestatic  #47
272: aload         13
274: invokestatic  #104
277: new           #54
280: dup
281: invokespecial #55
284: ldc           #56
286: invokevirtual #57
289: iload         14
291: invokevirtual #62
294: ldc           #59
296: invokevirtual #57
299: iconst_4
300: invokevirtual #62
303: ldc           #56
305: invokevirtual #57
308: invokevirtual #60
311: iload         14
313: iconst_4
314: if_icmpne     321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #61
325: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 5929
End line: 6052
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        int int28 = brentOptimizer3.getEvaluations();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        double double34 = sin31.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin31.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin31.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer40 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker39);
        int int41 = brentOptimizer40.getEvaluations();
        int int42 = brentOptimizer40.getEvaluations();
        int int43 = brentOptimizer40.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker44 = brentOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable46 = null;
        org.apache.commons.math3.exception.util.Localizable localizable48 = null;
        org.apache.commons.math3.exception.util.Localizable localizable50 = null;
        org.apache.commons.math3.exception.util.Localizable localizable51 = null;
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction54 = sin53.derivative();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin56 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray57 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin52, sin53, sin55, sin56 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray57);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException59 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable51, (java.lang.Object[]) univariateDifferentiableArray57);
        org.apache.commons.math3.exception.MathInternalError mathInternalError60 = new org.apache.commons.math3.exception.MathInternalError(localizable50, (java.lang.Object[]) univariateDifferentiableArray57);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray57);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException62 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable48, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray57);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable63 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray57);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable64 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray57);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException65 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable46, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray57);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable66 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer70 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker69);
        int int71 = brentOptimizer70.getEvaluations();
        int int72 = brentOptimizer70.getEvaluations();
        int int73 = brentOptimizer70.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction75 = null;
        org.apache.commons.math3.analysis.function.Sin sin76 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin77 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction78 = sin77.derivative();
        org.apache.commons.math3.analysis.function.Sin sin79 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin80 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray81 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin76, sin77, sin79, sin80 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable82 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray81);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction83 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray81);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable84 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray81);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction86 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction75, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable84, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType87 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer70.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable84, goalType87, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair95 = brentOptimizer40.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable66, goalType87, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair99 = brentOptimizer3.optimize((-53), univariateFunction36, goalType87, (double) 12, 0.0d, 1.2177655131703127d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-53) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.8414709825806044d + "'", double34 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker44);
        org.junit.Assert.assertNotNull(univariateFunction54);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable63);
        org.junit.Assert.assertNotNull(univariateDifferentiable64);
        org.junit.Assert.assertNotNull(univariateDifferentiable66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(univariateFunction78);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray81);
        org.junit.Assert.assertNotNull(univariateDifferentiable82);
        org.junit.Assert.assertNotNull(univariateFunction83);
        org.junit.Assert.assertNotNull(univariateDifferentiable84);
        org.junit.Assert.assertNotNull(multivariateFunction86);
        org.junit.Assert.assertTrue("'" + goalType87 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType87.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
        org.junit.Assert.assertNotNull(univariatePointValuePair95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #542
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #71
197: istore        20
199: aload_2
200: invokevirtual #50
203: istore        21
205: new           #72
208: dup
209: invokespecial #73
212: astore        22
214: aload         22
216: invokevirtual #74
219: astore        23
221: aload         22
223: ldc2_w        #86
226: invokevirtual #88
229: dstore        24
231: aload         22
233: invokevirtual #74
236: astore        26
238: aload         22
240: invokevirtual #74
243: astore        27
245: aconst_null
246: astore        28
248: new           #8
251: dup
252: ldc2_w        #31
255: ldc2_w        #33
258: aload         28
260: invokespecial #13
263: astore        29
265: aload         29
267: invokevirtual #71
270: istore        30
272: aload         29
274: invokevirtual #71
277: istore        31
279: aload         29
281: invokevirtual #50
284: istore        32
286: aload         29
288: invokevirtual #103
291: astore        33
293: aconst_null
294: astore        34
296: aconst_null
297: astore        35
299: aconst_null
300: astore        36
302: aconst_null
303: astore        37
305: new           #72
308: dup
309: invokespecial #73
312: astore        38
314: new           #72
317: dup
318: invokespecial #73
321: astore        39
323: aload         39
325: invokevirtual #74
328: astore        40
330: new           #72
333: dup
334: invokespecial #73
337: astore        41
339: new           #72
342: dup
343: invokespecial #73
346: astore        42
348: iconst_4
349: anewarray     #75
352: dup
353: iconst_0
354: aload         38
356: aastore
357: dup
358: iconst_1
359: aload         39
361: aastore
362: dup
363: iconst_2
364: aload         41
366: aastore
367: dup
368: iconst_3
369: aload         42
371: aastore
372: astore        43
374: aload         43
376: invokestatic  #76
379: astore        44
381: new           #122
384: dup
385: aload         37
387: aload         43
389: checkcast     #123
392: invokespecial #124
395: astore        45
397: new           #125
400: dup
401: aload         36
403: aload         43
405: checkcast     #123
408: invokespecial #126
411: astore        46
413: aload         43
415: invokestatic  #77
418: astore        47
420: new           #313
423: dup
424: aload         35
426: ldc2_w        #79
429: invokestatic  #314
432: aload         43
434: checkcast     #123
437: invokespecial #315
440: astore        48
442: aload         43
444: invokestatic  #76
447: astore        49
449: aload         43
451: invokestatic  #76
454: astore        50
456: new           #313
459: dup
460: aload         34
462: ldc2_w        #202
465: invokestatic  #314
468: aload         43
470: checkcast     #123
473: invokespecial #315
476: astore        51
478: aload         43
480: invokestatic  #77
483: astore        52
485: aconst_null
486: astore        53
488: new           #8
491: dup
492: ldc2_w        #31
495: ldc2_w        #33
498: aload         53
500: invokespecial #13
503: astore        54
505: aload         54
507: invokevirtual #71
510: istore        55
512: aload         54
514: invokevirtual #71
517: istore        56
519: aload         54
521: invokevirtual #71
524: istore        57
526: aconst_null
527: astore        58
529: new           #72
532: dup
533: invokespecial #73
536: astore        59
538: new           #72
541: dup
542: invokespecial #73
545: astore        60
547: aload         60
549: invokevirtual #74
552: astore        61
554: new           #72
557: dup
558: invokespecial #73
561: astore        62
563: new           #72
566: dup
567: invokespecial #73
570: astore        63
572: iconst_4
573: anewarray     #75
576: dup
577: iconst_0
578: aload         59
580: aastore
581: dup
582: iconst_1
583: aload         60
585: aastore
586: dup
587: iconst_2
588: aload         62
590: aastore
591: dup
592: iconst_3
593: aload         63
595: aastore
596: astore        64
598: aload         64
600: invokestatic  #76
603: astore        65
605: aload         64
607: checkcast     #89
610: invokestatic  #109
613: astore        66
615: aload         64
617: invokestatic  #77
620: astore        67
622: aload         58
624: aload         67
626: ldc2_w        #181
629: invokestatic  #183
632: astore        68
634: getstatic     #118
637: astore        69
639: aload         54
641: bipush        10
643: aload         67
645: aload         69
647: ldc2_w        #184
650: ldc2_w        #186
653: ldc2_w        #188
656: invokevirtual #44
659: astore        70
661: aload         29
663: bipush        97
665: aload         52
667: aload         69
669: dconst_0
670: ldc2_w        #543
673: ldc2_w        #545
676: invokevirtual #44
679: astore        71
681: aload_2
682: bipush        -53
684: aload         27
686: aload         69
688: ldc2_w        #188
691: dconst_0
692: ldc2_w        #306
695: invokevirtual #44
698: astore        72
700: ldc_w         #547
703: invokestatic  #15
706: goto          711
709: astore        72
711: new           #54
714: dup
715: invokespecial #55
718: ldc           #56
720: invokevirtual #57
723: iload_3
724: invokevirtual #62
727: ldc           #59
729: invokevirtual #57
732: iconst_0
733: invokevirtual #62
736: ldc           #56
738: invokevirtual #57
741: invokevirtual #60
744: iload_3
745: ifne          752
748: iconst_1
749: goto          753
752: iconst_0
753: invokestatic  #61
756: aload         6
758: invokestatic  #47
761: aload         7
763: invokestatic  #47
766: aload         8
768: invokestatic  #47
771: aload         9
773: invokestatic  #47
776: aload         10
778: invokestatic  #47
781: new           #54
784: dup
785: invokespecial #55
788: ldc           #56
790: invokevirtual #57
793: aload         11
795: invokevirtual #82
798: ldc           #59
800: invokevirtual #57
803: getstatic     #78
806: invokevirtual #82
809: ldc           #56
811: invokevirtual #57
814: invokevirtual #60
817: aload         11
819: getstatic     #78
822: invokevirtual #83
825: invokestatic  #61
828: aload         12
830: invokestatic  #47
833: aload         13
835: invokestatic  #47
838: new           #54
841: dup
842: invokespecial #55
845: ldc           #56
847: invokevirtual #57
850: aload         14
852: invokevirtual #82
855: ldc           #59
857: invokevirtual #57
860: getstatic     #78
863: invokevirtual #82
866: ldc           #56
868: invokevirtual #57
871: invokevirtual #60
874: aload         14
876: getstatic     #78
879: invokevirtual #83
882: invokestatic  #61
885: aload         15
887: invokestatic  #47
890: aload         17
892: invokestatic  #47
895: new           #54
898: dup
899: invokespecial #55
902: ldc           #56
904: invokevirtual #57
907: aload         18
909: invokevirtual #82
912: ldc           #59
914: invokevirtual #57
917: getstatic     #78
920: invokevirtual #82
923: ldc           #56
925: invokevirtual #57
928: invokevirtual #60
931: aload         18
933: getstatic     #78
936: invokevirtual #83
939: invokestatic  #61
942: aload         19
944: invokestatic  #47
947: new           #54
950: dup
951: invokespecial #55
954: ldc           #56
956: invokevirtual #57
959: iload         20
961: invokevirtual #62
964: ldc           #59
966: invokevirtual #57
969: iconst_1
970: invokevirtual #62
973: ldc           #56
975: invokevirtual #57
978: invokevirtual #60
981: iload         20
983: iconst_1
984: if_icmpne     991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #61
995: new           #54
998: dup
999: invokespecial #55
1002: ldc           #56
1004: invokevirtual #57
1007: iload         21
1009: invokevirtual #62
1012: ldc           #59
1014: invokevirtual #57
1017: bipush        97
1019: invokevirtual #62
1022: ldc           #56
1024: invokevirtual #57
1027: invokevirtual #60
1030: iload         21
1032: bipush        97
1034: if_icmpne     1041
1037: iconst_1
1038: goto          1042
1041: iconst_0
1042: invokestatic  #61
1045: aload         23
1047: invokestatic  #47
1050: new           #54
1053: dup
1054: invokespecial #55
1057: ldc           #56
1059: invokevirtual #57
1062: dload         24
1064: invokevirtual #58
1067: ldc           #59
1069: invokevirtual #57
1072: ldc2_w        #23
1075: invokevirtual #58
1078: ldc           #56
1080: invokevirtual #57
1083: invokevirtual #60
1086: dload         24
1088: ldc2_w        #23
1091: dcmpl
1092: ifne          1099
1095: iconst_1
1096: goto          1100
1099: iconst_0
1100: invokestatic  #61
1103: aload         26
1105: invokestatic  #47
1108: aload         27
1110: invokestatic  #47
1113: new           #54
1116: dup
1117: invokespecial #55
1120: ldc           #56
1122: invokevirtual #57
1125: iload         30
1127: invokevirtual #62
1130: ldc           #59
1132: invokevirtual #57
1135: iconst_0
1136: invokevirtual #62
1139: ldc           #56
1141: invokevirtual #57
1144: invokevirtual #60
1147: iload         30
1149: ifne          1156
1152: iconst_1
1153: goto          1157
1156: iconst_0
1157: invokestatic  #61
1160: new           #54
1163: dup
1164: invokespecial #55
1167: ldc           #56
1169: invokevirtual #57
1172: iload         31
1174: invokevirtual #62
1177: ldc           #59
1179: invokevirtual #57
1182: iconst_0
1183: invokevirtual #62
1186: ldc           #56
1188: invokevirtual #57
1191: invokevirtual #60
1194: iload         31
1196: ifne          1203
1199: iconst_1
1200: goto          1204
1203: iconst_0
1204: invokestatic  #61
1207: new           #54
1210: dup
1211: invokespecial #55
1214: ldc           #56
1216: invokevirtual #57
1219: iload         32
1221: invokevirtual #62
1224: ldc           #59
1226: invokevirtual #57
1229: iconst_0
1230: invokevirtual #62
1233: ldc           #56
1235: invokevirtual #57
1238: invokevirtual #60
1241: iload         32
1243: ifne          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #61
1254: aload         33
1256: invokestatic  #104
1259: aload         40
1261: invokestatic  #47
1264: aload         43
1266: invokestatic  #47
1269: aload         44
1271: invokestatic  #47
1274: aload         47
1276: invokestatic  #47
1279: aload         49
1281: invokestatic  #47
1284: aload         50
1286: invokestatic  #47
1289: aload         52
1291: invokestatic  #47
1294: new           #54
1297: dup
1298: invokespecial #55
1301: ldc           #56
1303: invokevirtual #57
1306: iload         55
1308: invokevirtual #62
1311: ldc           #59
1313: invokevirtual #57
1316: iconst_0
1317: invokevirtual #62
1320: ldc           #56
1322: invokevirtual #57
1325: invokevirtual #60
1328: iload         55
1330: ifne          1337
1333: iconst_1
1334: goto          1338
1337: iconst_0
1338: invokestatic  #61
1341: new           #54
1344: dup
1345: invokespecial #55
1348: ldc           #56
1350: invokevirtual #57
1353: iload         56
1355: invokevirtual #62
1358: ldc           #59
1360: invokevirtual #57
1363: iconst_0
1364: invokevirtual #62
1367: ldc           #56
1369: invokevirtual #57
1372: invokevirtual #60
1375: iload         56
1377: ifne          1384
1380: iconst_1
1381: goto          1385
1384: iconst_0
1385: invokestatic  #61
1388: new           #54
1391: dup
1392: invokespecial #55
1395: ldc           #56
1397: invokevirtual #57
1400: iload         57
1402: invokevirtual #62
1405: ldc           #59
1407: invokevirtual #57
1410: iconst_0
1411: invokevirtual #62
1414: ldc           #56
1416: invokevirtual #57
1419: invokevirtual #60
1422: iload         57
1424: ifne          1431
1427: iconst_1
1428: goto          1432
1431: iconst_0
1432: invokestatic  #61
1435: aload         61
1437: invokestatic  #47
1440: aload         64
1442: invokestatic  #47
1445: aload         65
1447: invokestatic  #47
1450: aload         66
1452: invokestatic  #47
1455: aload         67
1457: invokestatic  #47
1460: aload         68
1462: invokestatic  #47
1465: new           #54
1468: dup
1469: invokespecial #55
1472: ldc           #56
1474: invokevirtual #57
1477: aload         69
1479: invokevirtual #82
1482: ldc           #59
1484: invokevirtual #57
1487: getstatic     #118
1490: invokevirtual #82
1493: ldc           #56
1495: invokevirtual #57
1498: invokevirtual #60
1501: aload         69
1503: getstatic     #118
1506: invokevirtual #83
1509: invokestatic  #61
1512: aload         70
1514: invokestatic  #47
1517: aload         71
1519: invokestatic  #47
1522: return
Exception table:
from    to  target type
681   706   709   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 6055
End line: 6121
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray21 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction22 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray21);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException23 = new org.apache.commons.math3.exception.MathArithmeticException(localizable20, (java.lang.Object[]) differentiableUnivariateFunctionArray21);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction24 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray21);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray21);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray21);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = differentiableUnivariateFunction26.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer31 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker30);
        int int32 = brentOptimizer31.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray37 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin34, sin35 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray37);
        org.apache.commons.math3.optimization.GoalType goalType41 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer31.optimize(97, univariateFunction40, goalType41, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction26, goalType41, 1.8184464592320668d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray21);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction22);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction24);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction25);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertTrue("'" + goalType41 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType41.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #548
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: iconst_0
148: anewarray     #141
151: astore        15
153: aload         15
155: invokestatic  #142
158: astore        16
160: new           #273
163: dup
164: aload         14
166: aload         15
168: checkcast     #123
171: invokespecial #274
174: astore        17
176: aload         15
178: invokestatic  #245
181: astore        18
183: aload         15
185: invokestatic  #245
188: astore        19
190: aload         15
192: invokestatic  #245
195: astore        20
197: aload         20
199: invokeinterface #549,  1
204: astore        21
206: aconst_null
207: astore        22
209: new           #8
212: dup
213: ldc2_w        #31
216: ldc2_w        #33
219: aload         22
221: invokespecial #13
224: astore        23
226: aload         23
228: invokevirtual #71
231: istore        24
233: new           #72
236: dup
237: invokespecial #73
240: astore        25
242: new           #72
245: dup
246: invokespecial #73
249: astore        26
251: aload         26
253: invokevirtual #74
256: astore        27
258: iconst_2
259: anewarray     #75
262: dup
263: iconst_0
264: aload         25
266: aastore
267: dup
268: iconst_1
269: aload         26
271: aastore
272: astore        28
274: aload         28
276: invokestatic  #76
279: astore        29
281: aload         28
283: invokestatic  #77
286: astore        30
288: aload         28
290: checkcast     #89
293: invokestatic  #90
296: astore        31
298: getstatic     #78
301: astore        32
303: aload         23
305: bipush        97
307: aload         31
309: aload         32
311: ldc2_w        #91
314: ldc2_w        #93
317: ldc2_w        #91
320: invokevirtual #44
323: astore        33
325: aload_2
326: bipush        32
328: aload         20
330: aload         32
332: ldc2_w        #550
335: dconst_0
336: invokevirtual #81
339: astore        34
341: ldc_w         #327
344: invokestatic  #15
347: goto          352
350: astore        34
352: new           #54
355: dup
356: invokespecial #55
359: ldc           #56
361: invokevirtual #57
364: iload_3
365: invokevirtual #62
368: ldc           #59
370: invokevirtual #57
373: iconst_0
374: invokevirtual #62
377: ldc           #56
379: invokevirtual #57
382: invokevirtual #60
385: iload_3
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #61
397: aload         6
399: invokestatic  #47
402: aload         7
404: invokestatic  #47
407: aload         8
409: invokestatic  #47
412: aload         9
414: invokestatic  #47
417: aload         10
419: invokestatic  #47
422: new           #54
425: dup
426: invokespecial #55
429: ldc           #56
431: invokevirtual #57
434: aload         11
436: invokevirtual #82
439: ldc           #59
441: invokevirtual #57
444: getstatic     #78
447: invokevirtual #82
450: ldc           #56
452: invokevirtual #57
455: invokevirtual #60
458: aload         11
460: getstatic     #78
463: invokevirtual #83
466: invokestatic  #61
469: aload         12
471: invokestatic  #47
474: new           #54
477: dup
478: invokespecial #55
481: ldc           #56
483: invokevirtual #57
486: iload         13
488: invokevirtual #62
491: ldc           #59
493: invokevirtual #57
496: bipush        97
498: invokevirtual #62
501: ldc           #56
503: invokevirtual #57
506: invokevirtual #60
509: iload         13
511: bipush        97
513: if_icmpne     520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #61
524: aload         15
526: invokestatic  #47
529: aload         16
531: invokestatic  #47
534: aload         18
536: invokestatic  #47
539: aload         19
541: invokestatic  #47
544: aload         20
546: invokestatic  #47
549: aload         21
551: invokestatic  #47
554: new           #54
557: dup
558: invokespecial #55
561: ldc           #56
563: invokevirtual #57
566: iload         24
568: invokevirtual #62
571: ldc           #59
573: invokevirtual #57
576: iconst_0
577: invokevirtual #62
580: ldc           #56
582: invokevirtual #57
585: invokevirtual #60
588: iload         24
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #61
601: aload         27
603: invokestatic  #47
606: aload         28
608: invokestatic  #47
611: aload         29
613: invokestatic  #47
616: aload         30
618: invokestatic  #47
621: aload         31
623: invokestatic  #47
626: new           #54
629: dup
630: invokespecial #55
633: ldc           #56
635: invokevirtual #57
638: aload         32
640: invokevirtual #82
643: ldc           #59
645: invokevirtual #57
648: getstatic     #78
651: invokevirtual #82
654: ldc           #56
656: invokevirtual #57
659: invokevirtual #60
662: aload         32
664: getstatic     #78
667: invokevirtual #83
670: invokestatic  #61
673: aload         33
675: invokestatic  #47
678: return
Exception table:
from    to  target type
325   347   350   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 6124
End line: 6162
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double29 = sin22.value(1.5707963267948895d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #552
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload         16
195: ldc2_w        #488
198: invokevirtual #88
201: dstore        20
203: new           #54
206: dup
207: invokespecial #55
210: ldc           #56
212: invokevirtual #57
215: iload_3
216: invokevirtual #62
219: ldc           #59
221: invokevirtual #57
224: iconst_0
225: invokevirtual #62
228: ldc           #56
230: invokevirtual #57
233: invokevirtual #60
236: iload_3
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #61
248: aload         6
250: invokestatic  #47
253: aload         7
255: invokestatic  #47
258: aload         8
260: invokestatic  #47
263: aload         9
265: invokestatic  #47
268: aload         10
270: invokestatic  #47
273: new           #54
276: dup
277: invokespecial #55
280: ldc           #56
282: invokevirtual #57
285: aload         11
287: invokevirtual #82
290: ldc           #59
292: invokevirtual #57
295: getstatic     #78
298: invokevirtual #82
301: ldc           #56
303: invokevirtual #57
306: invokevirtual #60
309: aload         11
311: getstatic     #78
314: invokevirtual #83
317: invokestatic  #61
320: aload         12
322: invokestatic  #47
325: aload         13
327: invokestatic  #47
330: new           #54
333: dup
334: invokespecial #55
337: ldc           #56
339: invokevirtual #57
342: aload         14
344: invokevirtual #82
347: ldc           #59
349: invokevirtual #57
352: getstatic     #78
355: invokevirtual #82
358: ldc           #56
360: invokevirtual #57
363: invokevirtual #60
366: aload         14
368: getstatic     #78
371: invokevirtual #83
374: invokestatic  #61
377: aload         15
379: invokestatic  #47
382: aload         17
384: invokestatic  #47
387: new           #54
390: dup
391: invokespecial #55
394: ldc           #56
396: invokevirtual #57
399: aload         18
401: invokevirtual #82
404: ldc           #59
406: invokevirtual #57
409: getstatic     #78
412: invokevirtual #82
415: ldc           #56
417: invokevirtual #57
420: invokevirtual #60
423: aload         18
425: getstatic     #78
428: invokevirtual #83
431: invokestatic  #61
434: aload         19
436: invokestatic  #47
439: new           #54
442: dup
443: invokespecial #55
446: ldc           #56
448: invokevirtual #57
451: dload         20
453: invokevirtual #58
456: ldc           #59
458: invokevirtual #57
461: dconst_1
462: invokevirtual #58
465: ldc           #56
467: invokevirtual #57
470: invokevirtual #60
473: dload         20
475: dconst_1
476: dcmpl
477: ifne          484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #61
488: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 6165
End line: 6230
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable7 = null;
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray10 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException12 = new org.apache.commons.math3.exception.MathArithmeticException(localizable9, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException15 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable7, (java.lang.Number) 8, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = differentiableUnivariateFunction16.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker20 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer21 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker20);
        int int22 = brentOptimizer21.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray27);
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer21.optimize(97, univariateFunction30, goalType31, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer21.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType37 = brentOptimizer21.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer21.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.optimization.GoalType goalType42 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer21.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin40, goalType42, 3.141592653589793d, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer3.optimize((int) (short) 1, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction16, goalType42, 1.5707963267948895d, 5.656854249492381d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray10);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction14);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction16);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertTrue("'" + goalType37 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType37.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #553
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aconst_null
54: astore        5
56: aconst_null
57: astore        6
59: iconst_0
60: anewarray     #141
63: astore        7
65: aload         7
67: invokestatic  #142
70: astore        8
72: new           #273
75: dup
76: aload         6
78: aload         7
80: checkcast     #123
83: invokespecial #274
86: astore        9
88: aload         7
90: invokestatic  #245
93: astore        10
95: aload         7
97: invokestatic  #245
100: astore        11
102: new           #313
105: dup
106: aload         5
108: bipush        8
110: invokestatic  #554
113: aload         7
115: checkcast     #123
118: invokespecial #315
121: astore        12
123: aload         7
125: invokestatic  #497
128: astore        13
130: aload         13
132: invokeinterface #549,  1
137: astore        14
139: aconst_null
140: astore        15
142: new           #8
145: dup
146: ldc2_w        #31
149: ldc2_w        #33
152: aload         15
154: invokespecial #13
157: astore        16
159: aload         16
161: invokevirtual #71
164: istore        17
166: new           #72
169: dup
170: invokespecial #73
173: astore        18
175: new           #72
178: dup
179: invokespecial #73
182: astore        19
184: aload         19
186: invokevirtual #74
189: astore        20
191: iconst_2
192: anewarray     #75
195: dup
196: iconst_0
197: aload         18
199: aastore
200: dup
201: iconst_1
202: aload         19
204: aastore
205: astore        21
207: aload         21
209: invokestatic  #76
212: astore        22
214: aload         21
216: invokestatic  #77
219: astore        23
221: aload         21
223: checkcast     #89
226: invokestatic  #90
229: astore        24
231: getstatic     #78
234: astore        25
236: aload         16
238: bipush        97
240: aload         24
242: aload         25
244: ldc2_w        #91
247: ldc2_w        #93
250: ldc2_w        #91
253: invokevirtual #44
256: astore        26
258: aload         16
260: invokevirtual #51
263: astore        27
265: aload         16
267: invokevirtual #110
270: astore        28
272: aload         16
274: invokevirtual #51
277: astore        29
279: new           #72
282: dup
283: invokespecial #73
286: astore        30
288: aload         30
290: invokevirtual #74
293: astore        31
295: getstatic     #78
298: astore        32
300: aload         16
302: bipush        97
304: aload         30
306: aload         32
308: ldc2_w        #133
311: dconst_0
312: invokevirtual #81
315: astore        33
317: aload_2
318: iconst_1
319: aload         13
321: aload         32
323: ldc2_w        #488
326: ldc2_w        #555
329: invokevirtual #81
332: astore        34
334: ldc_w         #327
337: invokestatic  #15
340: goto          345
343: astore        34
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: iload_3
358: invokevirtual #62
361: ldc           #59
363: invokevirtual #57
366: iconst_0
367: invokevirtual #62
370: ldc           #56
372: invokevirtual #57
375: invokevirtual #60
378: iload_3
379: ifne          386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #61
390: new           #54
393: dup
394: invokespecial #55
397: ldc           #56
399: invokevirtual #57
402: iload         4
404: invokevirtual #62
407: ldc           #59
409: invokevirtual #57
412: iconst_0
413: invokevirtual #62
416: ldc           #56
418: invokevirtual #57
421: invokevirtual #60
424: iload         4
426: ifne          433
429: iconst_1
430: goto          434
433: iconst_0
434: invokestatic  #61
437: aload         7
439: invokestatic  #47
442: aload         8
444: invokestatic  #47
447: aload         10
449: invokestatic  #47
452: aload         11
454: invokestatic  #47
457: aload         13
459: invokestatic  #47
462: aload         14
464: invokestatic  #47
467: new           #54
470: dup
471: invokespecial #55
474: ldc           #56
476: invokevirtual #57
479: iload         17
481: invokevirtual #62
484: ldc           #59
486: invokevirtual #57
489: iconst_0
490: invokevirtual #62
493: ldc           #56
495: invokevirtual #57
498: invokevirtual #60
501: iload         17
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #61
514: aload         20
516: invokestatic  #47
519: aload         21
521: invokestatic  #47
524: aload         22
526: invokestatic  #47
529: aload         23
531: invokestatic  #47
534: aload         24
536: invokestatic  #47
539: new           #54
542: dup
543: invokespecial #55
546: ldc           #56
548: invokevirtual #57
551: aload         25
553: invokevirtual #82
556: ldc           #59
558: invokevirtual #57
561: getstatic     #78
564: invokevirtual #82
567: ldc           #56
569: invokevirtual #57
572: invokevirtual #60
575: aload         25
577: getstatic     #78
580: invokevirtual #83
583: invokestatic  #61
586: aload         26
588: invokestatic  #47
591: aload         27
593: invokestatic  #47
596: new           #54
599: dup
600: invokespecial #55
603: ldc           #56
605: invokevirtual #57
608: aload         28
610: invokevirtual #82
613: ldc           #59
615: invokevirtual #57
618: getstatic     #78
621: invokevirtual #82
624: ldc           #56
626: invokevirtual #57
629: invokevirtual #60
632: aload         28
634: getstatic     #78
637: invokevirtual #83
640: invokestatic  #61
643: aload         29
645: invokestatic  #47
648: aload         31
650: invokestatic  #47
653: new           #54
656: dup
657: invokespecial #55
660: ldc           #56
662: invokevirtual #57
665: aload         32
667: invokevirtual #82
670: ldc           #59
672: invokevirtual #57
675: getstatic     #78
678: invokevirtual #82
681: ldc           #56
683: invokevirtual #57
686: invokevirtual #60
689: aload         32
691: getstatic     #78
694: invokevirtual #83
697: invokestatic  #61
700: aload         33
702: invokestatic  #47
705: return
Exception table:
from    to  target type
317   340   343   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 6233
End line: 6353
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double74 = brentOptimizer3.getMin();
        org.apache.commons.math3.exception.util.Localizable localizable76 = null;
        org.apache.commons.math3.exception.util.Localizable localizable77 = null;
        org.apache.commons.math3.exception.util.Localizable localizable79 = null;
        org.apache.commons.math3.exception.util.Localizable localizable80 = null;
        org.apache.commons.math3.analysis.function.Sin sin81 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin82 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction83 = sin82.derivative();
        org.apache.commons.math3.analysis.function.Sin sin84 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin85 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray86 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin81, sin82, sin84, sin85 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable87 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray86);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException88 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable80, (java.lang.Object[]) univariateDifferentiableArray86);
        org.apache.commons.math3.exception.MathInternalError mathInternalError89 = new org.apache.commons.math3.exception.MathInternalError(localizable79, (java.lang.Object[]) univariateDifferentiableArray86);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable90 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray86);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException91 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable77, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray86);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException92 = new org.apache.commons.math3.exception.NullArgumentException(localizable76, (java.lang.Object[]) univariateDifferentiableArray86);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction93 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray86);
        org.apache.commons.math3.optimization.GoalType goalType94 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair97 = brentOptimizer3.optimize(0, univariateFunction93, goalType94, 0.3642239251822542d, (double) 515);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.22766967171598d + "'", double74 == 5.22766967171598d);
        org.junit.Assert.assertNotNull(univariateFunction83);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray86);
        org.junit.Assert.assertNotNull(univariateDifferentiable87);
        org.junit.Assert.assertNotNull(univariateDifferentiable90);
        org.junit.Assert.assertNotNull(univariateFunction93);
        org.junit.Assert.assertTrue("'" + goalType94 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType94.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #557
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #231
512: dstore        53
514: aconst_null
515: astore        55
517: aconst_null
518: astore        56
520: aconst_null
521: astore        57
523: aconst_null
524: astore        58
526: new           #72
529: dup
530: invokespecial #73
533: astore        59
535: new           #72
538: dup
539: invokespecial #73
542: astore        60
544: aload         60
546: invokevirtual #74
549: astore        61
551: new           #72
554: dup
555: invokespecial #73
558: astore        62
560: new           #72
563: dup
564: invokespecial #73
567: astore        63
569: iconst_4
570: anewarray     #75
573: dup
574: iconst_0
575: aload         59
577: aastore
578: dup
579: iconst_1
580: aload         60
582: aastore
583: dup
584: iconst_2
585: aload         62
587: aastore
588: dup
589: iconst_3
590: aload         63
592: aastore
593: astore        64
595: aload         64
597: invokestatic  #76
600: astore        65
602: new           #122
605: dup
606: aload         58
608: aload         64
610: checkcast     #123
613: invokespecial #124
616: astore        66
618: new           #125
621: dup
622: aload         57
624: aload         64
626: checkcast     #123
629: invokespecial #126
632: astore        67
634: aload         64
636: invokestatic  #77
639: astore        68
641: new           #313
644: dup
645: aload         56
647: ldc2_w        #79
650: invokestatic  #314
653: aload         64
655: checkcast     #123
658: invokespecial #315
661: astore        69
663: new           #46
666: dup
667: aload         55
669: aload         64
671: checkcast     #123
674: invokespecial #246
677: astore        70
679: aload         64
681: checkcast     #89
684: invokestatic  #90
687: astore        71
689: getstatic     #118
692: astore        72
694: aload_2
695: iconst_0
696: aload         71
698: aload         72
700: ldc2_w        #483
703: ldc2_w        #558
706: invokevirtual #81
709: astore        73
711: ldc           #52
713: invokestatic  #15
716: goto          721
719: astore        73
721: new           #54
724: dup
725: invokespecial #55
728: ldc           #56
730: invokevirtual #57
733: iload_3
734: invokevirtual #62
737: ldc           #59
739: invokevirtual #57
742: iconst_0
743: invokevirtual #62
746: ldc           #56
748: invokevirtual #57
751: invokevirtual #60
754: iload_3
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #61
766: aload         6
768: invokestatic  #47
771: aload         7
773: invokestatic  #47
776: aload         8
778: invokestatic  #47
781: aload         9
783: invokestatic  #47
786: aload         10
788: invokestatic  #47
791: new           #54
794: dup
795: invokespecial #55
798: ldc           #56
800: invokevirtual #57
803: aload         11
805: invokevirtual #82
808: ldc           #59
810: invokevirtual #57
813: getstatic     #78
816: invokevirtual #82
819: ldc           #56
821: invokevirtual #57
824: invokevirtual #60
827: aload         11
829: getstatic     #78
832: invokevirtual #83
835: invokestatic  #61
838: aload         12
840: invokestatic  #47
843: aload         13
845: invokestatic  #47
848: new           #54
851: dup
852: invokespecial #55
855: ldc           #56
857: invokevirtual #57
860: aload         14
862: invokevirtual #82
865: ldc           #59
867: invokevirtual #57
870: getstatic     #78
873: invokevirtual #82
876: ldc           #56
878: invokevirtual #57
881: invokevirtual #60
884: aload         14
886: getstatic     #78
889: invokevirtual #83
892: invokestatic  #61
895: aload         15
897: invokestatic  #47
900: aload         17
902: invokestatic  #47
905: new           #54
908: dup
909: invokespecial #55
912: ldc           #56
914: invokevirtual #57
917: aload         18
919: invokevirtual #82
922: ldc           #59
924: invokevirtual #57
927: getstatic     #78
930: invokevirtual #82
933: ldc           #56
935: invokevirtual #57
938: invokevirtual #60
941: aload         18
943: getstatic     #78
946: invokevirtual #83
949: invokestatic  #61
952: aload         19
954: invokestatic  #47
957: new           #54
960: dup
961: invokespecial #55
964: ldc           #56
966: invokevirtual #57
969: dload         20
971: invokevirtual #58
974: ldc           #59
976: invokevirtual #57
979: dconst_0
980: invokevirtual #58
983: ldc           #56
985: invokevirtual #57
988: invokevirtual #60
991: dload         20
993: dconst_0
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #61
1006: aload         23
1008: invokestatic  #47
1011: new           #54
1014: dup
1015: invokespecial #55
1018: ldc           #56
1020: invokevirtual #57
1023: iload         26
1025: invokevirtual #62
1028: ldc           #59
1030: invokevirtual #57
1033: iconst_0
1034: invokevirtual #62
1037: ldc           #56
1039: invokevirtual #57
1042: invokevirtual #60
1045: iload         26
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #61
1058: new           #54
1061: dup
1062: invokespecial #55
1065: ldc           #56
1067: invokevirtual #57
1070: dload         27
1072: invokevirtual #58
1075: ldc           #59
1077: invokevirtual #57
1080: dconst_0
1081: invokevirtual #58
1084: ldc           #56
1086: invokevirtual #57
1089: invokevirtual #60
1092: dload         27
1094: dconst_0
1095: dcmpl
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #61
1107: aload         31
1109: invokestatic  #47
1112: aload         34
1114: invokestatic  #47
1117: aload         35
1119: invokestatic  #47
1122: aload         36
1124: invokestatic  #47
1127: new           #54
1130: dup
1131: invokespecial #55
1134: ldc           #56
1136: invokevirtual #57
1139: iload         39
1141: invokevirtual #62
1144: ldc           #59
1146: invokevirtual #57
1149: iconst_0
1150: invokevirtual #62
1153: ldc           #56
1155: invokevirtual #57
1158: invokevirtual #60
1161: iload         39
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #61
1174: aload         42
1176: invokestatic  #47
1179: aload         43
1181: invokestatic  #47
1184: aload         44
1186: invokestatic  #47
1189: aload         45
1191: invokestatic  #47
1194: aload         46
1196: invokestatic  #47
1199: new           #54
1202: dup
1203: invokespecial #55
1206: ldc           #56
1208: invokevirtual #57
1211: aload         47
1213: invokevirtual #82
1216: ldc           #59
1218: invokevirtual #57
1221: getstatic     #78
1224: invokevirtual #82
1227: ldc           #56
1229: invokevirtual #57
1232: invokevirtual #60
1235: aload         47
1237: getstatic     #78
1240: invokevirtual #83
1243: invokestatic  #61
1246: aload         48
1248: invokestatic  #47
1251: aload         49
1253: invokestatic  #47
1256: new           #54
1259: dup
1260: invokespecial #55
1263: ldc           #56
1265: invokevirtual #57
1268: aload         50
1270: invokevirtual #82
1273: ldc           #59
1275: invokevirtual #57
1278: getstatic     #78
1281: invokevirtual #82
1284: ldc           #56
1286: invokevirtual #57
1289: invokevirtual #60
1292: aload         50
1294: getstatic     #78
1297: invokevirtual #83
1300: invokestatic  #61
1303: aload         51
1305: invokestatic  #47
1308: aload         52
1310: invokestatic  #47
1313: new           #54
1316: dup
1317: invokespecial #55
1320: ldc           #56
1322: invokevirtual #57
1325: dload         53
1327: invokevirtual #58
1330: ldc           #59
1332: invokevirtual #57
1335: ldc2_w        #472
1338: invokevirtual #58
1341: ldc           #56
1343: invokevirtual #57
1346: invokevirtual #60
1349: dload         53
1351: ldc2_w        #472
1354: dcmpl
1355: ifne          1362
1358: iconst_1
1359: goto          1363
1362: iconst_0
1363: invokestatic  #61
1366: aload         61
1368: invokestatic  #47
1371: aload         64
1373: invokestatic  #47
1376: aload         65
1378: invokestatic  #47
1381: aload         68
1383: invokestatic  #47
1386: aload         71
1388: invokestatic  #47
1391: new           #54
1394: dup
1395: invokespecial #55
1398: ldc           #56
1400: invokevirtual #57
1403: aload         72
1405: invokevirtual #82
1408: ldc           #59
1410: invokevirtual #57
1413: getstatic     #118
1416: invokevirtual #82
1419: ldc           #56
1421: invokevirtual #57
1424: invokevirtual #60
1427: aload         72
1429: getstatic     #118
1432: invokevirtual #83
1435: invokestatic  #61
1438: return
Exception table:
from    to  target type
694   716   719   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 6356
End line: 6366
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 9.999999f, (-93.25555671231702d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -93.256 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #560
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #449
32: ldc2_w        #561
35: invokespecial #25
38: astore_1
39: ldc_w         #563
42: invokestatic  #15
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 6369
End line: 6411
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        int int30 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #564
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: aload_2
206: invokevirtual #71
209: istore        23
211: new           #54
214: dup
215: invokespecial #55
218: ldc           #56
220: invokevirtual #57
223: iload_3
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload_3
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: aload         6
258: invokestatic  #47
261: aload         7
263: invokestatic  #47
266: aload         8
268: invokestatic  #47
271: aload         9
273: invokestatic  #47
276: aload         10
278: invokestatic  #47
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: aload         11
295: invokevirtual #82
298: ldc           #59
300: invokevirtual #57
303: getstatic     #78
306: invokevirtual #82
309: ldc           #56
311: invokevirtual #57
314: invokevirtual #60
317: aload         11
319: getstatic     #78
322: invokevirtual #83
325: invokestatic  #61
328: aload         12
330: invokestatic  #47
333: aload         13
335: invokestatic  #47
338: new           #54
341: dup
342: invokespecial #55
345: ldc           #56
347: invokevirtual #57
350: aload         14
352: invokevirtual #82
355: ldc           #59
357: invokevirtual #57
360: getstatic     #78
363: invokevirtual #82
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: aload         14
376: getstatic     #78
379: invokevirtual #83
382: invokestatic  #61
385: aload         15
387: invokestatic  #47
390: aload         17
392: invokestatic  #47
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: aload         18
409: invokevirtual #82
412: ldc           #59
414: invokevirtual #57
417: getstatic     #78
420: invokevirtual #82
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: aload         18
433: getstatic     #78
436: invokevirtual #83
439: invokestatic  #61
442: aload         19
444: invokestatic  #47
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: dload         20
461: invokevirtual #58
464: ldc           #59
466: invokevirtual #57
469: dconst_0
470: invokevirtual #58
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: dload         20
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #61
496: new           #54
499: dup
500: invokespecial #55
503: ldc           #56
505: invokevirtual #57
508: aload         22
510: invokevirtual #82
513: ldc           #59
515: invokevirtual #57
518: getstatic     #78
521: invokevirtual #82
524: ldc           #56
526: invokevirtual #57
529: invokevirtual #60
532: aload         22
534: getstatic     #78
537: invokevirtual #83
540: invokestatic  #61
543: new           #54
546: dup
547: invokespecial #55
550: ldc           #56
552: invokevirtual #57
555: iload         23
557: invokevirtual #62
560: ldc           #59
562: invokevirtual #57
565: iconst_1
566: invokevirtual #62
569: ldc           #56
571: invokevirtual #57
574: invokevirtual #60
577: iload         23
579: iconst_1
580: if_icmpne     587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #61
591: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 6414
End line: 6429
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #565
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #71
51: istore        5
53: aload_2
54: invokevirtual #71
57: istore        6
59: aload_2
60: invokevirtual #71
63: istore        7
65: aload_2
66: invokevirtual #103
69: astore        8
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: dload_3
84: invokevirtual #58
87: ldc           #59
89: invokevirtual #57
92: dconst_0
93: invokevirtual #58
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: dload_3
105: dconst_0
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #61
118: new           #54
121: dup
122: invokespecial #55
125: ldc           #56
127: invokevirtual #57
130: iload         5
132: invokevirtual #62
135: ldc           #59
137: invokevirtual #57
140: iconst_0
141: invokevirtual #62
144: ldc           #56
146: invokevirtual #57
149: invokevirtual #60
152: iload         5
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #61
165: new           #54
168: dup
169: invokespecial #55
172: ldc           #56
174: invokevirtual #57
177: iload         6
179: invokevirtual #62
182: ldc           #59
184: invokevirtual #57
187: iconst_0
188: invokevirtual #62
191: ldc           #56
193: invokevirtual #57
196: invokevirtual #60
199: iload         6
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #61
212: new           #54
215: dup
216: invokespecial #55
219: ldc           #56
221: invokevirtual #57
224: iload         7
226: invokevirtual #62
229: ldc           #59
231: invokevirtual #57
234: iconst_0
235: invokevirtual #62
238: ldc           #56
240: invokevirtual #57
243: invokevirtual #60
246: iload         7
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #61
259: aload         8
261: invokestatic  #104
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 6432
End line: 6476
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        int int28 = brentOptimizer3.getEvaluations();
        double double29 = brentOptimizer3.getMin();
        double double30 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 3.141592653589793d + "'", double29 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.5707963267948966d + "'", double30 == 1.5707963267948966d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #71
197: istore        20
199: aload_2
200: invokevirtual #231
203: dstore        21
205: aload_2
206: invokevirtual #177
209: dstore        23
211: aload_2
212: invokevirtual #103
215: astore        25
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: iload         20
467: invokevirtual #62
470: ldc           #59
472: invokevirtual #57
475: iconst_1
476: invokevirtual #62
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: iload         20
489: iconst_1
490: if_icmpne     497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #61
501: new           #54
504: dup
505: invokespecial #55
508: ldc           #56
510: invokevirtual #57
513: dload         21
515: invokevirtual #58
518: ldc           #59
520: invokevirtual #57
523: ldc2_w        #133
526: invokevirtual #58
529: ldc           #56
531: invokevirtual #57
534: invokevirtual #60
537: dload         21
539: ldc2_w        #133
542: dcmpl
543: ifne          550
546: iconst_1
547: goto          551
550: iconst_0
551: invokestatic  #61
554: new           #54
557: dup
558: invokespecial #55
561: ldc           #56
563: invokevirtual #57
566: dload         23
568: invokevirtual #58
571: ldc           #59
573: invokevirtual #57
576: ldc2_w        #567
579: invokevirtual #58
582: ldc           #56
584: invokevirtual #57
587: invokevirtual #60
590: dload         23
592: ldc2_w        #567
595: dcmpl
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #61
607: aload         25
609: invokestatic  #104
612: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 6479
End line: 6494
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #569
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #103
69: astore        9
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: dload_3
84: invokevirtual #58
87: ldc           #59
89: invokevirtual #57
92: dconst_0
93: invokevirtual #58
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: dload_3
105: dconst_0
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #61
118: new           #54
121: dup
122: invokespecial #55
125: ldc           #56
127: invokevirtual #57
130: iload         5
132: invokevirtual #62
135: ldc           #59
137: invokevirtual #57
140: iconst_0
141: invokevirtual #62
144: ldc           #56
146: invokevirtual #57
149: invokevirtual #60
152: iload         5
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #61
165: aload         6
167: invokestatic  #104
170: new           #54
173: dup
174: invokespecial #55
177: ldc           #56
179: invokevirtual #57
182: dload         7
184: invokevirtual #58
187: ldc           #59
189: invokevirtual #57
192: dconst_0
193: invokevirtual #58
196: ldc           #56
198: invokevirtual #57
201: invokevirtual #60
204: dload         7
206: dconst_0
207: dcmpl
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #61
219: aload         9
221: invokestatic  #104
224: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 6497
End line: 6569
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.exception.util.Localizable localizable13 = null;
        org.apache.commons.math3.exception.util.Localizable localizable14 = null;
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException22 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable14, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathInternalError mathInternalError23 = new org.apache.commons.math3.exception.MathInternalError(localizable13, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException25 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable11, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException28 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable9, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer33 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker32);
        int int34 = brentOptimizer33.getEvaluations();
        int int35 = brentOptimizer33.getEvaluations();
        int int36 = brentOptimizer33.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction38 = null;
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction38, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType50 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer33.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType50, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, goalType50, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable29);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(multivariateFunction49);
        org.junit.Assert.assertTrue("'" + goalType50 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType50.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #570
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aconst_null
66: astore        7
68: aconst_null
69: astore        8
71: aconst_null
72: astore        9
74: aconst_null
75: astore        10
77: new           #72
80: dup
81: invokespecial #73
84: astore        11
86: new           #72
89: dup
90: invokespecial #73
93: astore        12
95: aload         12
97: invokevirtual #74
100: astore        13
102: new           #72
105: dup
106: invokespecial #73
109: astore        14
111: new           #72
114: dup
115: invokespecial #73
118: astore        15
120: iconst_4
121: anewarray     #75
124: dup
125: iconst_0
126: aload         11
128: aastore
129: dup
130: iconst_1
131: aload         12
133: aastore
134: dup
135: iconst_2
136: aload         14
138: aastore
139: dup
140: iconst_3
141: aload         15
143: aastore
144: astore        16
146: aload         16
148: invokestatic  #76
151: astore        17
153: new           #122
156: dup
157: aload         10
159: aload         16
161: checkcast     #123
164: invokespecial #124
167: astore        18
169: new           #125
172: dup
173: aload         9
175: aload         16
177: checkcast     #123
180: invokespecial #126
183: astore        19
185: aload         16
187: invokestatic  #77
190: astore        20
192: new           #313
195: dup
196: aload         8
198: ldc2_w        #79
201: invokestatic  #314
204: aload         16
206: checkcast     #123
209: invokespecial #315
212: astore        21
214: aload         16
216: invokestatic  #76
219: astore        22
221: aload         16
223: invokestatic  #76
226: astore        23
228: new           #313
231: dup
232: aload         7
234: ldc2_w        #202
237: invokestatic  #314
240: aload         16
242: checkcast     #123
245: invokespecial #315
248: astore        24
250: aload         16
252: invokestatic  #77
255: astore        25
257: aconst_null
258: astore        26
260: new           #8
263: dup
264: ldc2_w        #31
267: ldc2_w        #33
270: aload         26
272: invokespecial #13
275: astore        27
277: aload         27
279: invokevirtual #71
282: istore        28
284: aload         27
286: invokevirtual #71
289: istore        29
291: aload         27
293: invokevirtual #71
296: istore        30
298: aconst_null
299: astore        31
301: new           #72
304: dup
305: invokespecial #73
308: astore        32
310: new           #72
313: dup
314: invokespecial #73
317: astore        33
319: aload         33
321: invokevirtual #74
324: astore        34
326: new           #72
329: dup
330: invokespecial #73
333: astore        35
335: new           #72
338: dup
339: invokespecial #73
342: astore        36
344: iconst_4
345: anewarray     #75
348: dup
349: iconst_0
350: aload         32
352: aastore
353: dup
354: iconst_1
355: aload         33
357: aastore
358: dup
359: iconst_2
360: aload         35
362: aastore
363: dup
364: iconst_3
365: aload         36
367: aastore
368: astore        37
370: aload         37
372: invokestatic  #76
375: astore        38
377: aload         37
379: checkcast     #89
382: invokestatic  #109
385: astore        39
387: aload         37
389: invokestatic  #77
392: astore        40
394: aload         31
396: aload         40
398: ldc2_w        #181
401: invokestatic  #183
404: astore        41
406: getstatic     #118
409: astore        42
411: aload         27
413: bipush        10
415: aload         40
417: aload         42
419: ldc2_w        #184
422: ldc2_w        #186
425: ldc2_w        #188
428: invokevirtual #44
431: astore        43
433: aload_2
434: bipush        97
436: aload         25
438: aload         42
440: dconst_0
441: ldc2_w        #543
444: ldc2_w        #545
447: invokevirtual #44
450: astore        44
452: aload         25
454: invokestatic  #281
457: astore        45
459: new           #54
462: dup
463: invokespecial #55
466: ldc           #56
468: invokevirtual #57
471: iload_3
472: invokevirtual #62
475: ldc           #59
477: invokevirtual #57
480: iconst_0
481: invokevirtual #62
484: ldc           #56
486: invokevirtual #57
489: invokevirtual #60
492: iload_3
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #61
504: new           #54
507: dup
508: invokespecial #55
511: ldc           #56
513: invokevirtual #57
516: iload         4
518: invokevirtual #62
521: ldc           #59
523: invokevirtual #57
526: iconst_0
527: invokevirtual #62
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: iload         4
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #61
551: new           #54
554: dup
555: invokespecial #55
558: ldc           #56
560: invokevirtual #57
563: iload         5
565: invokevirtual #62
568: ldc           #59
570: invokevirtual #57
573: iconst_0
574: invokevirtual #62
577: ldc           #56
579: invokevirtual #57
582: invokevirtual #60
585: iload         5
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #61
598: aload         6
600: invokestatic  #104
603: aload         13
605: invokestatic  #47
608: aload         16
610: invokestatic  #47
613: aload         17
615: invokestatic  #47
618: aload         20
620: invokestatic  #47
623: aload         22
625: invokestatic  #47
628: aload         23
630: invokestatic  #47
633: aload         25
635: invokestatic  #47
638: new           #54
641: dup
642: invokespecial #55
645: ldc           #56
647: invokevirtual #57
650: iload         28
652: invokevirtual #62
655: ldc           #59
657: invokevirtual #57
660: iconst_0
661: invokevirtual #62
664: ldc           #56
666: invokevirtual #57
669: invokevirtual #60
672: iload         28
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #61
685: new           #54
688: dup
689: invokespecial #55
692: ldc           #56
694: invokevirtual #57
697: iload         29
699: invokevirtual #62
702: ldc           #59
704: invokevirtual #57
707: iconst_0
708: invokevirtual #62
711: ldc           #56
713: invokevirtual #57
716: invokevirtual #60
719: iload         29
721: ifne          728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #61
732: new           #54
735: dup
736: invokespecial #55
739: ldc           #56
741: invokevirtual #57
744: iload         30
746: invokevirtual #62
749: ldc           #59
751: invokevirtual #57
754: iconst_0
755: invokevirtual #62
758: ldc           #56
760: invokevirtual #57
763: invokevirtual #60
766: iload         30
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #61
779: aload         34
781: invokestatic  #47
784: aload         37
786: invokestatic  #47
789: aload         38
791: invokestatic  #47
794: aload         39
796: invokestatic  #47
799: aload         40
801: invokestatic  #47
804: aload         41
806: invokestatic  #47
809: new           #54
812: dup
813: invokespecial #55
816: ldc           #56
818: invokevirtual #57
821: aload         42
823: invokevirtual #82
826: ldc           #59
828: invokevirtual #57
831: getstatic     #118
834: invokevirtual #82
837: ldc           #56
839: invokevirtual #57
842: invokevirtual #60
845: aload         42
847: getstatic     #118
850: invokevirtual #83
853: invokestatic  #61
856: aload         43
858: invokestatic  #47
861: aload         44
863: invokestatic  #47
866: aload         45
868: invokestatic  #47
871: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 6572
End line: 6605
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        double double20 = brentOptimizer3.getMin();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker22 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #571
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #231
154: dstore        15
156: aload_2
157: invokevirtual #51
160: astore        17
162: aload_2
163: invokevirtual #103
166: astore        18
168: new           #54
171: dup
172: invokespecial #55
175: ldc           #56
177: invokevirtual #57
180: iload_3
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload_3
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #61
213: aload         6
215: invokestatic  #47
218: aload         7
220: invokestatic  #47
223: aload         8
225: invokestatic  #47
228: aload         9
230: invokestatic  #47
233: aload         10
235: invokestatic  #47
238: new           #54
241: dup
242: invokespecial #55
245: ldc           #56
247: invokevirtual #57
250: aload         11
252: invokevirtual #82
255: ldc           #59
257: invokevirtual #57
260: getstatic     #78
263: invokevirtual #82
266: ldc           #56
268: invokevirtual #57
271: invokevirtual #60
274: aload         11
276: getstatic     #78
279: invokevirtual #83
282: invokestatic  #61
285: aload         12
287: invokestatic  #47
290: aload         13
292: invokestatic  #47
295: new           #54
298: dup
299: invokespecial #55
302: ldc           #56
304: invokevirtual #57
307: iload         14
309: invokevirtual #62
312: ldc           #59
314: invokevirtual #57
317: bipush        8
319: invokevirtual #62
322: ldc           #56
324: invokevirtual #57
327: invokevirtual #60
330: iload         14
332: bipush        8
334: if_icmpne     341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #61
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: dload         15
359: invokevirtual #58
362: ldc           #59
364: invokevirtual #57
367: ldc2_w        #91
370: invokevirtual #58
373: ldc           #56
375: invokevirtual #57
378: invokevirtual #60
381: dload         15
383: ldc2_w        #91
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #61
398: aload         17
400: invokestatic  #47
403: aload         18
405: invokestatic  #104
408: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 6608
End line: 6682
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable21 = null;
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin22, sin23, sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException29 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable21, (java.lang.Object[]) univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray27);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer34 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker33);
        int int35 = brentOptimizer34.getEvaluations();
        int int36 = brentOptimizer34.getEvaluations();
        int int37 = brentOptimizer34.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction39 = null;
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction47 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction39, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable48, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType51 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair55 = brentOptimizer34.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable48, goalType51, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer3.optimize((int) (byte) 100, univariateFunction30, goalType51, 1.2786363145140075E-4d, (-1.5596856728972892d), 2.2227587494850775E-162d);
        double double60 = univariatePointValuePair59.getPoint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(multivariateFunction50);
        org.junit.Assert.assertTrue("'" + goalType51 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType51.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair55);
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2.2227587494850775E-162d + "'", double60 == 2.2227587494850775E-162d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #572
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #49
148: dstore        14
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: aload         22
247: checkcast     #89
250: invokestatic  #109
253: astore        25
255: aconst_null
256: astore        26
258: new           #8
261: dup
262: ldc2_w        #31
265: ldc2_w        #33
268: aload         26
270: invokespecial #13
273: astore        27
275: aload         27
277: invokevirtual #71
280: istore        28
282: aload         27
284: invokevirtual #71
287: istore        29
289: aload         27
291: invokevirtual #71
294: istore        30
296: aconst_null
297: astore        31
299: new           #72
302: dup
303: invokespecial #73
306: astore        32
308: new           #72
311: dup
312: invokespecial #73
315: astore        33
317: aload         33
319: invokevirtual #74
322: astore        34
324: new           #72
327: dup
328: invokespecial #73
331: astore        35
333: new           #72
336: dup
337: invokespecial #73
340: astore        36
342: iconst_4
343: anewarray     #75
346: dup
347: iconst_0
348: aload         32
350: aastore
351: dup
352: iconst_1
353: aload         33
355: aastore
356: dup
357: iconst_2
358: aload         35
360: aastore
361: dup
362: iconst_3
363: aload         36
365: aastore
366: astore        37
368: aload         37
370: invokestatic  #76
373: astore        38
375: aload         37
377: checkcast     #89
380: invokestatic  #109
383: astore        39
385: aload         37
387: invokestatic  #77
390: astore        40
392: aload         31
394: aload         40
396: ldc2_w        #181
399: invokestatic  #183
402: astore        41
404: getstatic     #118
407: astore        42
409: aload         27
411: bipush        10
413: aload         40
415: aload         42
417: ldc2_w        #184
420: ldc2_w        #186
423: ldc2_w        #188
426: invokevirtual #44
429: astore        43
431: aload_2
432: bipush        100
434: aload         25
436: aload         42
438: ldc2_w        #238
441: ldc2_w        #400
444: ldc2_w        #402
447: invokevirtual #44
450: astore        44
452: aload         44
454: invokevirtual #513
457: dstore        45
459: new           #54
462: dup
463: invokespecial #55
466: ldc           #56
468: invokevirtual #57
471: iload_3
472: invokevirtual #62
475: ldc           #59
477: invokevirtual #57
480: iconst_0
481: invokevirtual #62
484: ldc           #56
486: invokevirtual #57
489: invokevirtual #60
492: iload_3
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #61
504: aload         6
506: invokestatic  #47
509: aload         7
511: invokestatic  #47
514: aload         8
516: invokestatic  #47
519: aload         9
521: invokestatic  #47
524: aload         10
526: invokestatic  #47
529: new           #54
532: dup
533: invokespecial #55
536: ldc           #56
538: invokevirtual #57
541: aload         11
543: invokevirtual #82
546: ldc           #59
548: invokevirtual #57
551: getstatic     #78
554: invokevirtual #82
557: ldc           #56
559: invokevirtual #57
562: invokevirtual #60
565: aload         11
567: getstatic     #78
570: invokevirtual #83
573: invokestatic  #61
576: aload         12
578: invokestatic  #47
581: aload         13
583: invokestatic  #47
586: new           #54
589: dup
590: invokespecial #55
593: ldc           #56
595: invokevirtual #57
598: dload         14
600: invokevirtual #58
603: ldc           #59
605: invokevirtual #57
608: ldc2_w        #93
611: invokevirtual #58
614: ldc           #56
616: invokevirtual #57
619: invokevirtual #60
622: dload         14
624: ldc2_w        #93
627: dcmpl
628: ifne          635
631: iconst_1
632: goto          636
635: iconst_0
636: invokestatic  #61
639: aload         19
641: invokestatic  #47
644: aload         22
646: invokestatic  #47
649: aload         23
651: invokestatic  #47
654: aload         25
656: invokestatic  #47
659: new           #54
662: dup
663: invokespecial #55
666: ldc           #56
668: invokevirtual #57
671: iload         28
673: invokevirtual #62
676: ldc           #59
678: invokevirtual #57
681: iconst_0
682: invokevirtual #62
685: ldc           #56
687: invokevirtual #57
690: invokevirtual #60
693: iload         28
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #61
706: new           #54
709: dup
710: invokespecial #55
713: ldc           #56
715: invokevirtual #57
718: iload         29
720: invokevirtual #62
723: ldc           #59
725: invokevirtual #57
728: iconst_0
729: invokevirtual #62
732: ldc           #56
734: invokevirtual #57
737: invokevirtual #60
740: iload         29
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #61
753: new           #54
756: dup
757: invokespecial #55
760: ldc           #56
762: invokevirtual #57
765: iload         30
767: invokevirtual #62
770: ldc           #59
772: invokevirtual #57
775: iconst_0
776: invokevirtual #62
779: ldc           #56
781: invokevirtual #57
784: invokevirtual #60
787: iload         30
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #61
800: aload         34
802: invokestatic  #47
805: aload         37
807: invokestatic  #47
810: aload         38
812: invokestatic  #47
815: aload         39
817: invokestatic  #47
820: aload         40
822: invokestatic  #47
825: aload         41
827: invokestatic  #47
830: new           #54
833: dup
834: invokespecial #55
837: ldc           #56
839: invokevirtual #57
842: aload         42
844: invokevirtual #82
847: ldc           #59
849: invokevirtual #57
852: getstatic     #118
855: invokevirtual #82
858: ldc           #56
860: invokevirtual #57
863: invokevirtual #60
866: aload         42
868: getstatic     #118
871: invokevirtual #83
874: invokestatic  #61
877: aload         43
879: invokestatic  #47
882: aload         44
884: invokestatic  #47
887: new           #54
890: dup
891: invokespecial #55
894: ldc           #56
896: invokevirtual #57
899: dload         45
901: invokevirtual #58
904: ldc           #59
906: invokevirtual #57
909: ldc2_w        #402
912: invokevirtual #58
915: ldc           #56
917: invokevirtual #57
920: invokevirtual #60
923: dload         45
925: ldc2_w        #402
928: dcmpl
929: ifne          936
932: iconst_1
933: goto          937
936: iconst_0
937: invokestatic  #61
940: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 6685
End line: 6731
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin22);
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure30 = univariateDifferentiable28.value(derivativeStructure29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #573
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload         16
195: invokestatic  #143
198: astore        20
200: aconst_null
201: astore        21
203: aload         20
205: aload         21
207: invokeinterface #190,  2
212: astore        22
214: ldc           #119
216: invokestatic  #15
219: goto          224
222: astore        22
224: new           #54
227: dup
228: invokespecial #55
231: ldc           #56
233: invokevirtual #57
236: iload_3
237: invokevirtual #62
240: ldc           #59
242: invokevirtual #57
245: iconst_0
246: invokevirtual #62
249: ldc           #56
251: invokevirtual #57
254: invokevirtual #60
257: iload_3
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #61
269: aload         6
271: invokestatic  #47
274: aload         7
276: invokestatic  #47
279: aload         8
281: invokestatic  #47
284: aload         9
286: invokestatic  #47
289: aload         10
291: invokestatic  #47
294: new           #54
297: dup
298: invokespecial #55
301: ldc           #56
303: invokevirtual #57
306: aload         11
308: invokevirtual #82
311: ldc           #59
313: invokevirtual #57
316: getstatic     #78
319: invokevirtual #82
322: ldc           #56
324: invokevirtual #57
327: invokevirtual #60
330: aload         11
332: getstatic     #78
335: invokevirtual #83
338: invokestatic  #61
341: aload         12
343: invokestatic  #47
346: aload         13
348: invokestatic  #47
351: new           #54
354: dup
355: invokespecial #55
358: ldc           #56
360: invokevirtual #57
363: aload         14
365: invokevirtual #82
368: ldc           #59
370: invokevirtual #57
373: getstatic     #78
376: invokevirtual #82
379: ldc           #56
381: invokevirtual #57
384: invokevirtual #60
387: aload         14
389: getstatic     #78
392: invokevirtual #83
395: invokestatic  #61
398: aload         15
400: invokestatic  #47
403: aload         17
405: invokestatic  #47
408: new           #54
411: dup
412: invokespecial #55
415: ldc           #56
417: invokevirtual #57
420: aload         18
422: invokevirtual #82
425: ldc           #59
427: invokevirtual #57
430: getstatic     #78
433: invokevirtual #82
436: ldc           #56
438: invokevirtual #57
441: invokevirtual #60
444: aload         18
446: getstatic     #78
449: invokevirtual #83
452: invokestatic  #61
455: aload         19
457: invokestatic  #47
460: aload         20
462: invokestatic  #47
465: return
Exception table:
from    to  target type
203   219   222   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 6734
End line: 6793
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable7 = null;
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException16 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable8, (java.lang.Object[]) univariateDifferentiableArray14);
        org.apache.commons.math3.exception.MathInternalError mathInternalError17 = new org.apache.commons.math3.exception.MathInternalError(localizable7, (java.lang.Object[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker22 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer23 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker22);
        int int24 = brentOptimizer23.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable31 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.GoalType goalType33 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer23.optimize(97, univariateFunction32, goalType33, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer23.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType39 = brentOptimizer23.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair42 = brentOptimizer3.optimize(63, univariateFunction19, goalType39, 3.1622776601683795d, (double) 1L);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker43 = brentOptimizer3.getConvergenceChecker();
        double double44 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker45 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateFunction19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable31);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair37);
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertTrue("'" + goalType39 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType39.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair42);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #574
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #71
51: istore        5
53: aconst_null
54: astore        6
56: aconst_null
57: astore        7
59: new           #72
62: dup
63: invokespecial #73
66: astore        8
68: new           #72
71: dup
72: invokespecial #73
75: astore        9
77: aload         9
79: invokevirtual #74
82: astore        10
84: new           #72
87: dup
88: invokespecial #73
91: astore        11
93: new           #72
96: dup
97: invokespecial #73
100: astore        12
102: iconst_4
103: anewarray     #75
106: dup
107: iconst_0
108: aload         8
110: aastore
111: dup
112: iconst_1
113: aload         9
115: aastore
116: dup
117: iconst_2
118: aload         11
120: aastore
121: dup
122: iconst_3
123: aload         12
125: aastore
126: astore        13
128: aload         13
130: invokestatic  #76
133: astore        14
135: new           #122
138: dup
139: aload         7
141: aload         13
143: checkcast     #123
146: invokespecial #124
149: astore        15
151: new           #125
154: dup
155: aload         6
157: aload         13
159: checkcast     #123
162: invokespecial #126
165: astore        16
167: aload         13
169: invokestatic  #77
172: astore        17
174: aload         13
176: checkcast     #89
179: invokestatic  #109
182: astore        18
184: aconst_null
185: astore        19
187: new           #8
190: dup
191: ldc2_w        #31
194: ldc2_w        #33
197: aload         19
199: invokespecial #13
202: astore        20
204: aload         20
206: invokevirtual #71
209: istore        21
211: new           #72
214: dup
215: invokespecial #73
218: astore        22
220: new           #72
223: dup
224: invokespecial #73
227: astore        23
229: aload         23
231: invokevirtual #74
234: astore        24
236: iconst_2
237: anewarray     #75
240: dup
241: iconst_0
242: aload         22
244: aastore
245: dup
246: iconst_1
247: aload         23
249: aastore
250: astore        25
252: aload         25
254: invokestatic  #76
257: astore        26
259: aload         25
261: invokestatic  #77
264: astore        27
266: aload         25
268: checkcast     #89
271: invokestatic  #90
274: astore        28
276: getstatic     #78
279: astore        29
281: aload         20
283: bipush        97
285: aload         28
287: aload         29
289: ldc2_w        #91
292: ldc2_w        #93
295: ldc2_w        #91
298: invokevirtual #44
301: astore        30
303: aload         20
305: invokevirtual #51
308: astore        31
310: aload         20
312: invokevirtual #110
315: astore        32
317: aload_2
318: bipush        63
320: aload         18
322: aload         32
324: ldc2_w        #575
327: dconst_1
328: invokevirtual #81
331: astore        33
333: aload_2
334: invokevirtual #103
337: astore        34
339: aload_2
340: invokevirtual #49
343: dstore        35
345: aload_2
346: invokevirtual #103
349: astore        37
351: new           #54
354: dup
355: invokespecial #55
358: ldc           #56
360: invokevirtual #57
363: dload_3
364: invokevirtual #58
367: ldc           #59
369: invokevirtual #57
372: dconst_0
373: invokevirtual #58
376: ldc           #56
378: invokevirtual #57
381: invokevirtual #60
384: dload_3
385: dconst_0
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #61
398: new           #54
401: dup
402: invokespecial #55
405: ldc           #56
407: invokevirtual #57
410: iload         5
412: invokevirtual #62
415: ldc           #59
417: invokevirtual #57
420: iconst_0
421: invokevirtual #62
424: ldc           #56
426: invokevirtual #57
429: invokevirtual #60
432: iload         5
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #61
445: aload         10
447: invokestatic  #47
450: aload         13
452: invokestatic  #47
455: aload         14
457: invokestatic  #47
460: aload         17
462: invokestatic  #47
465: aload         18
467: invokestatic  #47
470: new           #54
473: dup
474: invokespecial #55
477: ldc           #56
479: invokevirtual #57
482: iload         21
484: invokevirtual #62
487: ldc           #59
489: invokevirtual #57
492: iconst_0
493: invokevirtual #62
496: ldc           #56
498: invokevirtual #57
501: invokevirtual #60
504: iload         21
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #61
517: aload         24
519: invokestatic  #47
522: aload         25
524: invokestatic  #47
527: aload         26
529: invokestatic  #47
532: aload         27
534: invokestatic  #47
537: aload         28
539: invokestatic  #47
542: new           #54
545: dup
546: invokespecial #55
549: ldc           #56
551: invokevirtual #57
554: aload         29
556: invokevirtual #82
559: ldc           #59
561: invokevirtual #57
564: getstatic     #78
567: invokevirtual #82
570: ldc           #56
572: invokevirtual #57
575: invokevirtual #60
578: aload         29
580: getstatic     #78
583: invokevirtual #83
586: invokestatic  #61
589: aload         30
591: invokestatic  #47
594: aload         31
596: invokestatic  #47
599: new           #54
602: dup
603: invokespecial #55
606: ldc           #56
608: invokevirtual #57
611: aload         32
613: invokevirtual #82
616: ldc           #59
618: invokevirtual #57
621: getstatic     #78
624: invokevirtual #82
627: ldc           #56
629: invokevirtual #57
632: invokevirtual #60
635: aload         32
637: getstatic     #78
640: invokevirtual #83
643: invokestatic  #61
646: aload         33
648: invokestatic  #47
651: aload         34
653: invokestatic  #104
656: new           #54
659: dup
660: invokespecial #55
663: ldc           #56
665: invokevirtual #57
668: dload         35
670: invokevirtual #58
673: ldc           #59
675: invokevirtual #57
678: dconst_1
679: invokevirtual #58
682: ldc           #56
684: invokevirtual #57
687: invokevirtual #60
690: dload         35
692: dconst_1
693: dcmpl
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #61
705: aload         37
707: invokestatic  #104
710: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 6796
End line: 6827
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        int int21 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 12 + "'", int21 == 12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #577
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: aload_2
151: invokevirtual #51
154: astore        16
156: aload_2
157: invokevirtual #71
160: istore        17
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: dload         14
303: invokevirtual #58
306: ldc           #59
308: invokevirtual #57
311: ldc2_w        #91
314: invokevirtual #58
317: ldc           #56
319: invokevirtual #57
322: invokevirtual #60
325: dload         14
327: ldc2_w        #91
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #61
342: aload         16
344: invokestatic  #47
347: new           #54
350: dup
351: invokespecial #55
354: ldc           #56
356: invokevirtual #57
359: iload         17
361: invokevirtual #62
364: ldc           #59
366: invokevirtual #57
369: bipush        12
371: invokevirtual #62
374: ldc           #56
376: invokevirtual #57
379: invokevirtual #60
382: iload         17
384: bipush        12
386: if_icmpne     393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #61
397: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 6830
End line: 6863
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        double double21 = brentOptimizer3.getMin();
        double double22 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #578
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aload_2
157: invokevirtual #231
160: dstore        16
162: aload_2
163: invokevirtual #231
166: dstore        18
168: new           #54
171: dup
172: invokespecial #55
175: ldc           #56
177: invokevirtual #57
180: iload_3
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload_3
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #61
213: aload         6
215: invokestatic  #47
218: aload         7
220: invokestatic  #47
223: aload         8
225: invokestatic  #47
228: aload         9
230: invokestatic  #47
233: aload         10
235: invokestatic  #47
238: new           #54
241: dup
242: invokespecial #55
245: ldc           #56
247: invokevirtual #57
250: aload         11
252: invokevirtual #82
255: ldc           #59
257: invokevirtual #57
260: getstatic     #78
263: invokevirtual #82
266: ldc           #56
268: invokevirtual #57
271: invokevirtual #60
274: aload         11
276: getstatic     #78
279: invokevirtual #83
282: invokestatic  #61
285: aload         12
287: invokestatic  #47
290: aload         13
292: invokestatic  #47
295: new           #54
298: dup
299: invokespecial #55
302: ldc           #56
304: invokevirtual #57
307: iload         14
309: invokevirtual #62
312: ldc           #59
314: invokevirtual #57
317: bipush        8
319: invokevirtual #62
322: ldc           #56
324: invokevirtual #57
327: invokevirtual #60
330: iload         14
332: bipush        8
334: if_icmpne     341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #61
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: iload         15
359: invokevirtual #62
362: ldc           #59
364: invokevirtual #57
367: bipush        8
369: invokevirtual #62
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: iload         15
382: bipush        8
384: if_icmpne     391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #61
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: dload         16
409: invokevirtual #58
412: ldc           #59
414: invokevirtual #57
417: ldc2_w        #91
420: invokevirtual #58
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: dload         16
433: ldc2_w        #91
436: dcmpl
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #61
448: new           #54
451: dup
452: invokespecial #55
455: ldc           #56
457: invokevirtual #57
460: dload         18
462: invokevirtual #58
465: ldc           #59
467: invokevirtual #57
470: ldc2_w        #91
473: invokevirtual #58
476: ldc           #56
478: invokevirtual #57
481: invokevirtual #60
484: dload         18
486: ldc2_w        #91
489: dcmpl
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #61
501: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 6866
End line: 6883
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType9 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(goalType9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #579
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #50
69: istore        9
71: aload_2
72: invokevirtual #110
75: astore        10
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: dload_3
90: invokevirtual #58
93: ldc           #59
95: invokevirtual #57
98: dconst_0
99: invokevirtual #58
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: dload_3
111: dconst_0
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #61
124: new           #54
127: dup
128: invokespecial #55
131: ldc           #56
133: invokevirtual #57
136: iload         5
138: invokevirtual #62
141: ldc           #59
143: invokevirtual #57
146: iconst_0
147: invokevirtual #62
150: ldc           #56
152: invokevirtual #57
155: invokevirtual #60
158: iload         5
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #61
171: aload         6
173: invokestatic  #104
176: new           #54
179: dup
180: invokespecial #55
183: ldc           #56
185: invokevirtual #57
188: dload         7
190: invokevirtual #58
193: ldc           #59
195: invokevirtual #57
198: dconst_0
199: invokevirtual #58
202: ldc           #56
204: invokevirtual #57
207: invokevirtual #60
210: dload         7
212: dconst_0
213: dcmpl
214: ifne          221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #61
225: new           #54
228: dup
229: invokespecial #55
232: ldc           #56
234: invokevirtual #57
237: iload         9
239: invokevirtual #62
242: ldc           #59
244: invokevirtual #57
247: iconst_0
248: invokevirtual #62
251: ldc           #56
253: invokevirtual #57
256: invokevirtual #60
259: iload         9
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #61
272: aload         10
274: invokestatic  #104
277: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 6886
End line: 6903
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker5 = brentOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = brentOptimizer2.computeObjectiveValue(10.017874927409903d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #580
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #103
48: astore_3
49: aload_1
50: invokevirtual #103
53: astore        4
55: aload_1
56: ldc2_w        #581
59: invokevirtual #158
62: dstore        5
64: ldc           #52
66: invokestatic  #15
69: goto          74
72: astore        5
74: new           #54
77: dup
78: invokespecial #55
81: ldc           #56
83: invokevirtual #57
86: iload_2
87: invokevirtual #62
90: ldc           #59
92: invokevirtual #57
95: iconst_0
96: invokevirtual #62
99: ldc           #56
101: invokevirtual #57
104: invokevirtual #60
107: iload_2
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #61
119: aload_3
120: invokestatic  #104
123: aload         4
125: invokestatic  #104
128: return
Exception table:
from    to  target type
55    69    72   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 6906
End line: 6925
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        double double8 = brentOptimizer3.getMax();
        double double9 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker10 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #583
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #49
69: dstore        9
71: aload_2
72: invokevirtual #49
75: dstore        11
77: aload_2
78: invokevirtual #103
81: astore        13
83: new           #54
86: dup
87: invokespecial #55
90: ldc           #56
92: invokevirtual #57
95: dload_3
96: invokevirtual #58
99: ldc           #59
101: invokevirtual #57
104: dconst_0
105: invokevirtual #58
108: ldc           #56
110: invokevirtual #57
113: invokevirtual #60
116: dload_3
117: dconst_0
118: dcmpl
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #61
130: new           #54
133: dup
134: invokespecial #55
137: ldc           #56
139: invokevirtual #57
142: iload         5
144: invokevirtual #62
147: ldc           #59
149: invokevirtual #57
152: iconst_0
153: invokevirtual #62
156: ldc           #56
158: invokevirtual #57
161: invokevirtual #60
164: iload         5
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #61
177: aload         6
179: invokestatic  #104
182: new           #54
185: dup
186: invokespecial #55
189: ldc           #56
191: invokevirtual #57
194: dload         7
196: invokevirtual #58
199: ldc           #59
201: invokevirtual #57
204: dconst_0
205: invokevirtual #58
208: ldc           #56
210: invokevirtual #57
213: invokevirtual #60
216: dload         7
218: dconst_0
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #61
231: new           #54
234: dup
235: invokespecial #55
238: ldc           #56
240: invokevirtual #57
243: dload         9
245: invokevirtual #58
248: ldc           #59
250: invokevirtual #57
253: dconst_0
254: invokevirtual #58
257: ldc           #56
259: invokevirtual #57
262: invokevirtual #60
265: dload         9
267: dconst_0
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #61
280: new           #54
283: dup
284: invokespecial #55
287: ldc           #56
289: invokevirtual #57
292: dload         11
294: invokevirtual #58
297: ldc           #59
299: invokevirtual #57
302: dconst_0
303: invokevirtual #58
306: ldc           #56
308: invokevirtual #57
311: invokevirtual #60
314: dload         11
316: dconst_0
317: dcmpl
318: ifne          325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #61
329: aload         13
331: invokestatic  #104
334: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 6928
End line: 6955
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        double double18 = univariatePointValuePair17.getPoint();
        double double19 = univariatePointValuePair17.getPoint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.701198589366694d + "'", double18 == 7.701198589366694d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.701198589366694d + "'", double19 == 7.701198589366694d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #584
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload         12
140: invokevirtual #513
143: dstore        13
145: aload         12
147: invokevirtual #513
150: dstore        15
152: new           #54
155: dup
156: invokespecial #55
159: ldc           #56
161: invokevirtual #57
164: iload_3
165: invokevirtual #62
168: ldc           #59
170: invokevirtual #57
173: iconst_0
174: invokevirtual #62
177: ldc           #56
179: invokevirtual #57
182: invokevirtual #60
185: iload_3
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #61
197: aload         6
199: invokestatic  #47
202: aload         7
204: invokestatic  #47
207: aload         8
209: invokestatic  #47
212: aload         9
214: invokestatic  #47
217: aload         10
219: invokestatic  #47
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: aload         11
236: invokevirtual #82
239: ldc           #59
241: invokevirtual #57
244: getstatic     #78
247: invokevirtual #82
250: ldc           #56
252: invokevirtual #57
255: invokevirtual #60
258: aload         11
260: getstatic     #78
263: invokevirtual #83
266: invokestatic  #61
269: aload         12
271: invokestatic  #47
274: new           #54
277: dup
278: invokespecial #55
281: ldc           #56
283: invokevirtual #57
286: dload         13
288: invokevirtual #58
291: ldc           #59
293: invokevirtual #57
296: ldc2_w        #585
299: invokevirtual #58
302: ldc           #56
304: invokevirtual #57
307: invokevirtual #60
310: dload         13
312: ldc2_w        #585
315: dcmpl
316: ifne          323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #61
327: new           #54
330: dup
331: invokespecial #55
334: ldc           #56
336: invokevirtual #57
339: dload         15
341: invokevirtual #58
344: ldc           #59
346: invokevirtual #57
349: ldc2_w        #585
352: invokevirtual #58
355: ldc           #56
357: invokevirtual #57
360: invokevirtual #60
363: dload         15
365: ldc2_w        #585
368: dcmpl
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #61
380: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 6958
End line: 6968
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(1.0102013784525026d, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #587
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #588
32: dconst_0
33: invokespecial #25
36: astore_1
37: ldc_w         #424
40: invokestatic  #15
43: goto          47
46: astore_1
47: return
Exception table:
from    to  target type
25    43    46   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 6971
End line: 7045
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = sin11.derivative();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray15 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin10, sin11, sin13, sin14 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray15);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException17 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable9, (java.lang.Object[]) univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray15);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException19 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable8, (java.lang.Object[]) univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction20 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray15);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer24 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker23);
        int int25 = brentOptimizer24.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = sin28.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray30 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable31 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray30);
        org.apache.commons.math3.optimization.GoalType goalType34 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer24.optimize(97, univariateFunction33, goalType34, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType40 = brentOptimizer24.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.optimization.GoalType goalType45 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer24.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin43, goalType45, 3.141592653589793d, 0.0d);
        double double49 = brentOptimizer24.getMax();
        int int50 = brentOptimizer24.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer24.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType52 = brentOptimizer24.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair55 = brentOptimizer3.optimize((int) (byte) 1, univariateFunction20, goalType52, 2.6469779601696886E-23d, 1.7391304347826086d);
        double double56 = univariatePointValuePair55.getPoint();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray15);
        org.junit.Assert.assertNotNull(univariateDifferentiable16);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateFunction20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray30);
        org.junit.Assert.assertNotNull(univariateDifferentiable31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertTrue("'" + goalType34 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType34.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertTrue("'" + goalType45 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType45.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair51);
        org.junit.Assert.assertTrue("'" + goalType52 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType52.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.8695652173913043d + "'", double56 == 0.8695652173913043d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #590
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aconst_null
60: astore        7
62: aconst_null
63: astore        8
65: new           #72
68: dup
69: invokespecial #73
72: astore        9
74: new           #72
77: dup
78: invokespecial #73
81: astore        10
83: aload         10
85: invokevirtual #74
88: astore        11
90: new           #72
93: dup
94: invokespecial #73
97: astore        12
99: new           #72
102: dup
103: invokespecial #73
106: astore        13
108: iconst_4
109: anewarray     #75
112: dup
113: iconst_0
114: aload         9
116: aastore
117: dup
118: iconst_1
119: aload         10
121: aastore
122: dup
123: iconst_2
124: aload         12
126: aastore
127: dup
128: iconst_3
129: aload         13
131: aastore
132: astore        14
134: aload         14
136: invokestatic  #76
139: astore        15
141: new           #122
144: dup
145: aload         8
147: aload         14
149: checkcast     #123
152: invokespecial #124
155: astore        16
157: aload         14
159: invokestatic  #77
162: astore        17
164: new           #122
167: dup
168: aload         7
170: aload         14
172: checkcast     #123
175: invokespecial #124
178: astore        18
180: aload         14
182: checkcast     #89
185: invokestatic  #90
188: astore        19
190: aconst_null
191: astore        20
193: new           #8
196: dup
197: ldc2_w        #31
200: ldc2_w        #33
203: aload         20
205: invokespecial #13
208: astore        21
210: aload         21
212: invokevirtual #71
215: istore        22
217: new           #72
220: dup
221: invokespecial #73
224: astore        23
226: new           #72
229: dup
230: invokespecial #73
233: astore        24
235: aload         24
237: invokevirtual #74
240: astore        25
242: iconst_2
243: anewarray     #75
246: dup
247: iconst_0
248: aload         23
250: aastore
251: dup
252: iconst_1
253: aload         24
255: aastore
256: astore        26
258: aload         26
260: invokestatic  #76
263: astore        27
265: aload         26
267: invokestatic  #77
270: astore        28
272: aload         26
274: checkcast     #89
277: invokestatic  #90
280: astore        29
282: getstatic     #78
285: astore        30
287: aload         21
289: bipush        97
291: aload         29
293: aload         30
295: ldc2_w        #91
298: ldc2_w        #93
301: ldc2_w        #91
304: invokevirtual #44
307: astore        31
309: aload         21
311: invokevirtual #51
314: astore        32
316: aload         21
318: invokevirtual #110
321: astore        33
323: aload         21
325: invokevirtual #51
328: astore        34
330: new           #72
333: dup
334: invokespecial #73
337: astore        35
339: aload         35
341: invokevirtual #74
344: astore        36
346: getstatic     #78
349: astore        37
351: aload         21
353: bipush        97
355: aload         35
357: aload         37
359: ldc2_w        #133
362: dconst_0
363: invokevirtual #81
366: astore        38
368: aload         21
370: invokevirtual #49
373: dstore        39
375: aload         21
377: invokevirtual #50
380: istore        41
382: aload         21
384: invokevirtual #51
387: astore        42
389: aload         21
391: invokevirtual #110
394: astore        43
396: aload_2
397: iconst_1
398: aload         19
400: aload         43
402: ldc2_w        #242
405: ldc2_w        #396
408: invokevirtual #81
411: astore        44
413: aload         44
415: invokevirtual #513
418: dstore        45
420: new           #54
423: dup
424: invokespecial #55
427: ldc           #56
429: invokevirtual #57
432: dload_3
433: invokevirtual #58
436: ldc           #59
438: invokevirtual #57
441: dconst_0
442: invokevirtual #58
445: ldc           #56
447: invokevirtual #57
450: invokevirtual #60
453: dload_3
454: dconst_0
455: dcmpl
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #61
467: new           #54
470: dup
471: invokespecial #55
474: ldc           #56
476: invokevirtual #57
479: iload         5
481: invokevirtual #62
484: ldc           #59
486: invokevirtual #57
489: iconst_0
490: invokevirtual #62
493: ldc           #56
495: invokevirtual #57
498: invokevirtual #60
501: iload         5
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #61
514: aload         6
516: invokestatic  #104
519: aload         11
521: invokestatic  #47
524: aload         14
526: invokestatic  #47
529: aload         15
531: invokestatic  #47
534: aload         17
536: invokestatic  #47
539: aload         19
541: invokestatic  #47
544: new           #54
547: dup
548: invokespecial #55
551: ldc           #56
553: invokevirtual #57
556: iload         22
558: invokevirtual #62
561: ldc           #59
563: invokevirtual #57
566: iconst_0
567: invokevirtual #62
570: ldc           #56
572: invokevirtual #57
575: invokevirtual #60
578: iload         22
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #61
591: aload         25
593: invokestatic  #47
596: aload         26
598: invokestatic  #47
601: aload         27
603: invokestatic  #47
606: aload         28
608: invokestatic  #47
611: aload         29
613: invokestatic  #47
616: new           #54
619: dup
620: invokespecial #55
623: ldc           #56
625: invokevirtual #57
628: aload         30
630: invokevirtual #82
633: ldc           #59
635: invokevirtual #57
638: getstatic     #78
641: invokevirtual #82
644: ldc           #56
646: invokevirtual #57
649: invokevirtual #60
652: aload         30
654: getstatic     #78
657: invokevirtual #83
660: invokestatic  #61
663: aload         31
665: invokestatic  #47
668: aload         32
670: invokestatic  #47
673: new           #54
676: dup
677: invokespecial #55
680: ldc           #56
682: invokevirtual #57
685: aload         33
687: invokevirtual #82
690: ldc           #59
692: invokevirtual #57
695: getstatic     #78
698: invokevirtual #82
701: ldc           #56
703: invokevirtual #57
706: invokevirtual #60
709: aload         33
711: getstatic     #78
714: invokevirtual #83
717: invokestatic  #61
720: aload         34
722: invokestatic  #47
725: aload         36
727: invokestatic  #47
730: new           #54
733: dup
734: invokespecial #55
737: ldc           #56
739: invokevirtual #57
742: aload         37
744: invokevirtual #82
747: ldc           #59
749: invokevirtual #57
752: getstatic     #78
755: invokevirtual #82
758: ldc           #56
760: invokevirtual #57
763: invokevirtual #60
766: aload         37
768: getstatic     #78
771: invokevirtual #83
774: invokestatic  #61
777: aload         38
779: invokestatic  #47
782: new           #54
785: dup
786: invokespecial #55
789: ldc           #56
791: invokevirtual #57
794: dload         39
796: invokevirtual #58
799: ldc           #59
801: invokevirtual #57
804: dconst_0
805: invokevirtual #58
808: ldc           #56
810: invokevirtual #57
813: invokevirtual #60
816: dload         39
818: dconst_0
819: dcmpl
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #61
831: new           #54
834: dup
835: invokespecial #55
838: ldc           #56
840: invokevirtual #57
843: iload         41
845: invokevirtual #62
848: ldc           #59
850: invokevirtual #57
853: bipush        97
855: invokevirtual #62
858: ldc           #56
860: invokevirtual #57
863: invokevirtual #60
866: iload         41
868: bipush        97
870: if_icmpne     877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #61
881: aload         42
883: invokestatic  #47
886: new           #54
889: dup
890: invokespecial #55
893: ldc           #56
895: invokevirtual #57
898: aload         43
900: invokevirtual #82
903: ldc           #59
905: invokevirtual #57
908: getstatic     #78
911: invokevirtual #82
914: ldc           #56
916: invokevirtual #57
919: invokevirtual #60
922: aload         43
924: getstatic     #78
927: invokevirtual #83
930: invokestatic  #61
933: aload         44
935: invokestatic  #47
938: new           #54
941: dup
942: invokespecial #55
945: ldc           #56
947: invokevirtual #57
950: dload         45
952: invokevirtual #58
955: ldc           #59
957: invokevirtual #57
960: ldc2_w        #591
963: invokevirtual #58
966: ldc           #56
968: invokevirtual #57
971: invokevirtual #60
974: dload         45
976: ldc2_w        #591
979: dcmpl
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #61
991: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 7048
End line: 7086
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker28 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #593
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #103
197: astore        20
199: new           #54
202: dup
203: invokespecial #55
206: ldc           #56
208: invokevirtual #57
211: iload_3
212: invokevirtual #62
215: ldc           #59
217: invokevirtual #57
220: iconst_0
221: invokevirtual #62
224: ldc           #56
226: invokevirtual #57
229: invokevirtual #60
232: iload_3
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #61
244: aload         6
246: invokestatic  #47
249: aload         7
251: invokestatic  #47
254: aload         8
256: invokestatic  #47
259: aload         9
261: invokestatic  #47
264: aload         10
266: invokestatic  #47
269: new           #54
272: dup
273: invokespecial #55
276: ldc           #56
278: invokevirtual #57
281: aload         11
283: invokevirtual #82
286: ldc           #59
288: invokevirtual #57
291: getstatic     #78
294: invokevirtual #82
297: ldc           #56
299: invokevirtual #57
302: invokevirtual #60
305: aload         11
307: getstatic     #78
310: invokevirtual #83
313: invokestatic  #61
316: aload         12
318: invokestatic  #47
321: aload         13
323: invokestatic  #47
326: new           #54
329: dup
330: invokespecial #55
333: ldc           #56
335: invokevirtual #57
338: aload         14
340: invokevirtual #82
343: ldc           #59
345: invokevirtual #57
348: getstatic     #78
351: invokevirtual #82
354: ldc           #56
356: invokevirtual #57
359: invokevirtual #60
362: aload         14
364: getstatic     #78
367: invokevirtual #83
370: invokestatic  #61
373: aload         15
375: invokestatic  #47
378: aload         17
380: invokestatic  #47
383: new           #54
386: dup
387: invokespecial #55
390: ldc           #56
392: invokevirtual #57
395: aload         18
397: invokevirtual #82
400: ldc           #59
402: invokevirtual #57
405: getstatic     #78
408: invokevirtual #82
411: ldc           #56
413: invokevirtual #57
416: invokevirtual #60
419: aload         18
421: getstatic     #78
424: invokevirtual #83
427: invokestatic  #61
430: aload         19
432: invokestatic  #47
435: aload         20
437: invokestatic  #104
440: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 7089
End line: 7133
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        int int30 = brentOptimizer3.getMaxEvaluations();
        int int31 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #594
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: aload_2
206: invokevirtual #50
209: istore        23
211: aload_2
212: invokevirtual #71
215: istore        24
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         20
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         20
489: dconst_0
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #61
502: new           #54
505: dup
506: invokespecial #55
509: ldc           #56
511: invokevirtual #57
514: aload         22
516: invokevirtual #82
519: ldc           #59
521: invokevirtual #57
524: getstatic     #78
527: invokevirtual #82
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: aload         22
540: getstatic     #78
543: invokevirtual #83
546: invokestatic  #61
549: new           #54
552: dup
553: invokespecial #55
556: ldc           #56
558: invokevirtual #57
561: iload         23
563: invokevirtual #62
566: ldc           #59
568: invokevirtual #57
571: bipush        97
573: invokevirtual #62
576: ldc           #56
578: invokevirtual #57
581: invokevirtual #60
584: iload         23
586: bipush        97
588: if_icmpne     595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #61
599: new           #54
602: dup
603: invokespecial #55
606: ldc           #56
608: invokevirtual #57
611: iload         24
613: invokevirtual #62
616: ldc           #59
618: invokevirtual #57
621: iconst_1
622: invokevirtual #62
625: ldc           #56
627: invokevirtual #57
630: invokevirtual #60
633: iload         24
635: iconst_1
636: if_icmpne     643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #61
647: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 7136
End line: 7150
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 8L, 1.5707963267948968d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair5 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #595
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #596
34: ldc2_w        #598
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #51
51: astore        4
53: ldc           #52
55: invokestatic  #15
58: goto          63
61: astore        4
63: new           #54
66: dup
67: invokespecial #55
70: ldc           #56
72: invokevirtual #57
75: iload_3
76: invokevirtual #62
79: ldc           #59
81: invokevirtual #57
84: iconst_0
85: invokevirtual #62
88: ldc           #56
90: invokevirtual #57
93: invokevirtual #60
96: iload_3
97: ifne          104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #61
108: return
Exception table:
from    to  target type
47    58    61   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 7153
End line: 7163
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.0d, 0.3681988726455053d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #600
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: ldc2_w        #601
33: invokespecial #25
36: astore_1
37: ldc           #29
39: invokestatic  #15
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 7166
End line: 7263
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double74 = brentOptimizer3.getMin();
        int int75 = brentOptimizer3.getEvaluations();
        double double76 = brentOptimizer3.getStartValue();
        double double77 = brentOptimizer3.getMax();
        double double78 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.22766967171598d + "'", double74 == 5.22766967171598d);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 35.0d + "'", double76 == 35.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.4210854715202004E-14d + "'", double77 == 1.4210854715202004E-14d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.4210854715202004E-14d + "'", double78 == 1.4210854715202004E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #603
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #231
512: dstore        53
514: aload_2
515: invokevirtual #71
518: istore        55
520: aload_2
521: invokevirtual #177
524: dstore        56
526: aload_2
527: invokevirtual #49
530: dstore        58
532: aload_2
533: invokevirtual #49
536: dstore        60
538: new           #54
541: dup
542: invokespecial #55
545: ldc           #56
547: invokevirtual #57
550: iload_3
551: invokevirtual #62
554: ldc           #59
556: invokevirtual #57
559: iconst_0
560: invokevirtual #62
563: ldc           #56
565: invokevirtual #57
568: invokevirtual #60
571: iload_3
572: ifne          579
575: iconst_1
576: goto          580
579: iconst_0
580: invokestatic  #61
583: aload         6
585: invokestatic  #47
588: aload         7
590: invokestatic  #47
593: aload         8
595: invokestatic  #47
598: aload         9
600: invokestatic  #47
603: aload         10
605: invokestatic  #47
608: new           #54
611: dup
612: invokespecial #55
615: ldc           #56
617: invokevirtual #57
620: aload         11
622: invokevirtual #82
625: ldc           #59
627: invokevirtual #57
630: getstatic     #78
633: invokevirtual #82
636: ldc           #56
638: invokevirtual #57
641: invokevirtual #60
644: aload         11
646: getstatic     #78
649: invokevirtual #83
652: invokestatic  #61
655: aload         12
657: invokestatic  #47
660: aload         13
662: invokestatic  #47
665: new           #54
668: dup
669: invokespecial #55
672: ldc           #56
674: invokevirtual #57
677: aload         14
679: invokevirtual #82
682: ldc           #59
684: invokevirtual #57
687: getstatic     #78
690: invokevirtual #82
693: ldc           #56
695: invokevirtual #57
698: invokevirtual #60
701: aload         14
703: getstatic     #78
706: invokevirtual #83
709: invokestatic  #61
712: aload         15
714: invokestatic  #47
717: aload         17
719: invokestatic  #47
722: new           #54
725: dup
726: invokespecial #55
729: ldc           #56
731: invokevirtual #57
734: aload         18
736: invokevirtual #82
739: ldc           #59
741: invokevirtual #57
744: getstatic     #78
747: invokevirtual #82
750: ldc           #56
752: invokevirtual #57
755: invokevirtual #60
758: aload         18
760: getstatic     #78
763: invokevirtual #83
766: invokestatic  #61
769: aload         19
771: invokestatic  #47
774: new           #54
777: dup
778: invokespecial #55
781: ldc           #56
783: invokevirtual #57
786: dload         20
788: invokevirtual #58
791: ldc           #59
793: invokevirtual #57
796: dconst_0
797: invokevirtual #58
800: ldc           #56
802: invokevirtual #57
805: invokevirtual #60
808: dload         20
810: dconst_0
811: dcmpl
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #61
823: aload         23
825: invokestatic  #47
828: new           #54
831: dup
832: invokespecial #55
835: ldc           #56
837: invokevirtual #57
840: iload         26
842: invokevirtual #62
845: ldc           #59
847: invokevirtual #57
850: iconst_0
851: invokevirtual #62
854: ldc           #56
856: invokevirtual #57
859: invokevirtual #60
862: iload         26
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #61
875: new           #54
878: dup
879: invokespecial #55
882: ldc           #56
884: invokevirtual #57
887: dload         27
889: invokevirtual #58
892: ldc           #59
894: invokevirtual #57
897: dconst_0
898: invokevirtual #58
901: ldc           #56
903: invokevirtual #57
906: invokevirtual #60
909: dload         27
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #61
924: aload         31
926: invokestatic  #47
929: aload         34
931: invokestatic  #47
934: aload         35
936: invokestatic  #47
939: aload         36
941: invokestatic  #47
944: new           #54
947: dup
948: invokespecial #55
951: ldc           #56
953: invokevirtual #57
956: iload         39
958: invokevirtual #62
961: ldc           #59
963: invokevirtual #57
966: iconst_0
967: invokevirtual #62
970: ldc           #56
972: invokevirtual #57
975: invokevirtual #60
978: iload         39
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #61
991: aload         42
993: invokestatic  #47
996: aload         43
998: invokestatic  #47
1001: aload         44
1003: invokestatic  #47
1006: aload         45
1008: invokestatic  #47
1011: aload         46
1013: invokestatic  #47
1016: new           #54
1019: dup
1020: invokespecial #55
1023: ldc           #56
1025: invokevirtual #57
1028: aload         47
1030: invokevirtual #82
1033: ldc           #59
1035: invokevirtual #57
1038: getstatic     #78
1041: invokevirtual #82
1044: ldc           #56
1046: invokevirtual #57
1049: invokevirtual #60
1052: aload         47
1054: getstatic     #78
1057: invokevirtual #83
1060: invokestatic  #61
1063: aload         48
1065: invokestatic  #47
1068: aload         49
1070: invokestatic  #47
1073: new           #54
1076: dup
1077: invokespecial #55
1080: ldc           #56
1082: invokevirtual #57
1085: aload         50
1087: invokevirtual #82
1090: ldc           #59
1092: invokevirtual #57
1095: getstatic     #78
1098: invokevirtual #82
1101: ldc           #56
1103: invokevirtual #57
1106: invokevirtual #60
1109: aload         50
1111: getstatic     #78
1114: invokevirtual #83
1117: invokestatic  #61
1120: aload         51
1122: invokestatic  #47
1125: aload         52
1127: invokestatic  #47
1130: new           #54
1133: dup
1134: invokespecial #55
1137: ldc           #56
1139: invokevirtual #57
1142: dload         53
1144: invokevirtual #58
1147: ldc           #59
1149: invokevirtual #57
1152: ldc2_w        #472
1155: invokevirtual #58
1158: ldc           #56
1160: invokevirtual #57
1163: invokevirtual #60
1166: dload         53
1168: ldc2_w        #472
1171: dcmpl
1172: ifne          1179
1175: iconst_1
1176: goto          1180
1179: iconst_0
1180: invokestatic  #61
1183: new           #54
1186: dup
1187: invokespecial #55
1190: ldc           #56
1192: invokevirtual #57
1195: iload         55
1197: invokevirtual #62
1200: ldc           #59
1202: invokevirtual #57
1205: bipush        7
1207: invokevirtual #62
1210: ldc           #56
1212: invokevirtual #57
1215: invokevirtual #60
1218: iload         55
1220: bipush        7
1222: if_icmpne     1229
1225: iconst_1
1226: goto          1230
1229: iconst_0
1230: invokestatic  #61
1233: new           #54
1236: dup
1237: invokespecial #55
1240: ldc           #56
1242: invokevirtual #57
1245: dload         56
1247: invokevirtual #58
1250: ldc           #59
1252: invokevirtual #57
1255: ldc2_w        #263
1258: invokevirtual #58
1261: ldc           #56
1263: invokevirtual #57
1266: invokevirtual #60
1269: dload         56
1271: ldc2_w        #263
1274: dcmpl
1275: ifne          1282
1278: iconst_1
1279: goto          1283
1282: iconst_0
1283: invokestatic  #61
1286: new           #54
1289: dup
1290: invokespecial #55
1293: ldc           #56
1295: invokevirtual #57
1298: dload         58
1300: invokevirtual #58
1303: ldc           #59
1305: invokevirtual #57
1308: ldc2_w        #93
1311: invokevirtual #58
1314: ldc           #56
1316: invokevirtual #57
1319: invokevirtual #60
1322: dload         58
1324: ldc2_w        #93
1327: dcmpl
1328: ifne          1335
1331: iconst_1
1332: goto          1336
1335: iconst_0
1336: invokestatic  #61
1339: new           #54
1342: dup
1343: invokespecial #55
1346: ldc           #56
1348: invokevirtual #57
1351: dload         60
1353: invokevirtual #58
1356: ldc           #59
1358: invokevirtual #57
1361: ldc2_w        #93
1364: invokevirtual #58
1367: ldc           #56
1369: invokevirtual #57
1372: invokevirtual #60
1375: dload         60
1377: ldc2_w        #93
1380: dcmpl
1381: ifne          1388
1384: iconst_1
1385: goto          1389
1388: iconst_0
1389: invokestatic  #61
1392: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 7266
End line: 7363
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction75 = null;
        org.apache.commons.math3.optimization.GoalType goalType76 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair80 = brentOptimizer3.optimize(0, univariateFunction75, goalType76, 0.8687261884639957d, (double) 2.3841858E-7f, 0.5149900333324824d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + goalType76 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType76.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #604
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aconst_null
509: astore        53
511: getstatic     #78
514: astore        54
516: aload_2
517: iconst_0
518: aload         53
520: aload         54
522: ldc2_w        #511
525: ldc2_w        #250
528: ldc2_w        #388
531: invokevirtual #44
534: astore        55
536: ldc           #45
538: invokestatic  #15
541: goto          546
544: astore        55
546: new           #54
549: dup
550: invokespecial #55
553: ldc           #56
555: invokevirtual #57
558: iload_3
559: invokevirtual #62
562: ldc           #59
564: invokevirtual #57
567: iconst_0
568: invokevirtual #62
571: ldc           #56
573: invokevirtual #57
576: invokevirtual #60
579: iload_3
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #61
591: aload         6
593: invokestatic  #47
596: aload         7
598: invokestatic  #47
601: aload         8
603: invokestatic  #47
606: aload         9
608: invokestatic  #47
611: aload         10
613: invokestatic  #47
616: new           #54
619: dup
620: invokespecial #55
623: ldc           #56
625: invokevirtual #57
628: aload         11
630: invokevirtual #82
633: ldc           #59
635: invokevirtual #57
638: getstatic     #78
641: invokevirtual #82
644: ldc           #56
646: invokevirtual #57
649: invokevirtual #60
652: aload         11
654: getstatic     #78
657: invokevirtual #83
660: invokestatic  #61
663: aload         12
665: invokestatic  #47
668: aload         13
670: invokestatic  #47
673: new           #54
676: dup
677: invokespecial #55
680: ldc           #56
682: invokevirtual #57
685: aload         14
687: invokevirtual #82
690: ldc           #59
692: invokevirtual #57
695: getstatic     #78
698: invokevirtual #82
701: ldc           #56
703: invokevirtual #57
706: invokevirtual #60
709: aload         14
711: getstatic     #78
714: invokevirtual #83
717: invokestatic  #61
720: aload         15
722: invokestatic  #47
725: aload         17
727: invokestatic  #47
730: new           #54
733: dup
734: invokespecial #55
737: ldc           #56
739: invokevirtual #57
742: aload         18
744: invokevirtual #82
747: ldc           #59
749: invokevirtual #57
752: getstatic     #78
755: invokevirtual #82
758: ldc           #56
760: invokevirtual #57
763: invokevirtual #60
766: aload         18
768: getstatic     #78
771: invokevirtual #83
774: invokestatic  #61
777: aload         19
779: invokestatic  #47
782: new           #54
785: dup
786: invokespecial #55
789: ldc           #56
791: invokevirtual #57
794: dload         20
796: invokevirtual #58
799: ldc           #59
801: invokevirtual #57
804: dconst_0
805: invokevirtual #58
808: ldc           #56
810: invokevirtual #57
813: invokevirtual #60
816: dload         20
818: dconst_0
819: dcmpl
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #61
831: aload         23
833: invokestatic  #47
836: new           #54
839: dup
840: invokespecial #55
843: ldc           #56
845: invokevirtual #57
848: iload         26
850: invokevirtual #62
853: ldc           #59
855: invokevirtual #57
858: iconst_0
859: invokevirtual #62
862: ldc           #56
864: invokevirtual #57
867: invokevirtual #60
870: iload         26
872: ifne          879
875: iconst_1
876: goto          880
879: iconst_0
880: invokestatic  #61
883: new           #54
886: dup
887: invokespecial #55
890: ldc           #56
892: invokevirtual #57
895: dload         27
897: invokevirtual #58
900: ldc           #59
902: invokevirtual #57
905: dconst_0
906: invokevirtual #58
909: ldc           #56
911: invokevirtual #57
914: invokevirtual #60
917: dload         27
919: dconst_0
920: dcmpl
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #61
932: aload         31
934: invokestatic  #47
937: aload         34
939: invokestatic  #47
942: aload         35
944: invokestatic  #47
947: aload         36
949: invokestatic  #47
952: new           #54
955: dup
956: invokespecial #55
959: ldc           #56
961: invokevirtual #57
964: iload         39
966: invokevirtual #62
969: ldc           #59
971: invokevirtual #57
974: iconst_0
975: invokevirtual #62
978: ldc           #56
980: invokevirtual #57
983: invokevirtual #60
986: iload         39
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #61
999: aload         42
1001: invokestatic  #47
1004: aload         43
1006: invokestatic  #47
1009: aload         44
1011: invokestatic  #47
1014: aload         45
1016: invokestatic  #47
1019: aload         46
1021: invokestatic  #47
1024: new           #54
1027: dup
1028: invokespecial #55
1031: ldc           #56
1033: invokevirtual #57
1036: aload         47
1038: invokevirtual #82
1041: ldc           #59
1043: invokevirtual #57
1046: getstatic     #78
1049: invokevirtual #82
1052: ldc           #56
1054: invokevirtual #57
1057: invokevirtual #60
1060: aload         47
1062: getstatic     #78
1065: invokevirtual #83
1068: invokestatic  #61
1071: aload         48
1073: invokestatic  #47
1076: aload         49
1078: invokestatic  #47
1081: new           #54
1084: dup
1085: invokespecial #55
1088: ldc           #56
1090: invokevirtual #57
1093: aload         50
1095: invokevirtual #82
1098: ldc           #59
1100: invokevirtual #57
1103: getstatic     #78
1106: invokevirtual #82
1109: ldc           #56
1111: invokevirtual #57
1114: invokevirtual #60
1117: aload         50
1119: getstatic     #78
1122: invokevirtual #83
1125: invokestatic  #61
1128: aload         51
1130: invokestatic  #47
1133: aload         52
1135: invokestatic  #47
1138: new           #54
1141: dup
1142: invokespecial #55
1145: ldc           #56
1147: invokevirtual #57
1150: aload         54
1152: invokevirtual #82
1155: ldc           #59
1157: invokevirtual #57
1160: getstatic     #78
1163: invokevirtual #82
1166: ldc           #56
1168: invokevirtual #57
1171: invokevirtual #60
1174: aload         54
1176: getstatic     #78
1179: invokevirtual #83
1182: invokestatic  #61
1185: return
Exception table:
from    to  target type
516   541   544   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 7366
End line: 7376
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-1362.4112920855202d), 5557.690612768985d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -1,362.411 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #605
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #545
32: ldc2_w        #606
35: invokespecial #25
38: astore_1
39: ldc_w         #608
42: invokestatic  #15
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 7379
End line: 7398
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        double double8 = brentOptimizer3.getMax();
        double double9 = brentOptimizer3.getMax();
        double double10 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #609
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #49
69: dstore        9
71: aload_2
72: invokevirtual #49
75: dstore        11
77: aload_2
78: invokevirtual #177
81: dstore        13
83: new           #54
86: dup
87: invokespecial #55
90: ldc           #56
92: invokevirtual #57
95: dload_3
96: invokevirtual #58
99: ldc           #59
101: invokevirtual #57
104: dconst_0
105: invokevirtual #58
108: ldc           #56
110: invokevirtual #57
113: invokevirtual #60
116: dload_3
117: dconst_0
118: dcmpl
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #61
130: new           #54
133: dup
134: invokespecial #55
137: ldc           #56
139: invokevirtual #57
142: iload         5
144: invokevirtual #62
147: ldc           #59
149: invokevirtual #57
152: iconst_0
153: invokevirtual #62
156: ldc           #56
158: invokevirtual #57
161: invokevirtual #60
164: iload         5
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #61
177: aload         6
179: invokestatic  #104
182: new           #54
185: dup
186: invokespecial #55
189: ldc           #56
191: invokevirtual #57
194: dload         7
196: invokevirtual #58
199: ldc           #59
201: invokevirtual #57
204: dconst_0
205: invokevirtual #58
208: ldc           #56
210: invokevirtual #57
213: invokevirtual #60
216: dload         7
218: dconst_0
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #61
231: new           #54
234: dup
235: invokespecial #55
238: ldc           #56
240: invokevirtual #57
243: dload         9
245: invokevirtual #58
248: ldc           #59
250: invokevirtual #57
253: dconst_0
254: invokevirtual #58
257: ldc           #56
259: invokevirtual #57
262: invokevirtual #60
265: dload         9
267: dconst_0
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #61
280: new           #54
283: dup
284: invokespecial #55
287: ldc           #56
289: invokevirtual #57
292: dload         11
294: invokevirtual #58
297: ldc           #59
299: invokevirtual #57
302: dconst_0
303: invokevirtual #58
306: ldc           #56
308: invokevirtual #57
311: invokevirtual #60
314: dload         11
316: dconst_0
317: dcmpl
318: ifne          325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #61
329: new           #54
332: dup
333: invokespecial #55
336: ldc           #56
338: invokevirtual #57
341: dload         13
343: invokevirtual #58
346: ldc           #59
348: invokevirtual #57
351: dconst_0
352: invokevirtual #58
355: ldc           #56
357: invokevirtual #57
360: invokevirtual #60
363: dload         13
365: dconst_0
366: dcmpl
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #61
378: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 7401
End line: 7430
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = brentOptimizer3.getConvergenceChecker();
        int int20 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #610
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #103
148: astore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: new           #54
159: dup
160: invokespecial #55
163: ldc           #56
165: invokevirtual #57
168: iload_3
169: invokevirtual #62
172: ldc           #59
174: invokevirtual #57
177: iconst_0
178: invokevirtual #62
181: ldc           #56
183: invokevirtual #57
186: invokevirtual #60
189: iload_3
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #61
201: aload         6
203: invokestatic  #47
206: aload         7
208: invokestatic  #47
211: aload         8
213: invokestatic  #47
216: aload         9
218: invokestatic  #47
221: aload         10
223: invokestatic  #47
226: new           #54
229: dup
230: invokespecial #55
233: ldc           #56
235: invokevirtual #57
238: aload         11
240: invokevirtual #82
243: ldc           #59
245: invokevirtual #57
248: getstatic     #78
251: invokevirtual #82
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: aload         11
264: getstatic     #78
267: invokevirtual #83
270: invokestatic  #61
273: aload         12
275: invokestatic  #47
278: aload         13
280: invokestatic  #47
283: aload         14
285: invokestatic  #104
288: new           #54
291: dup
292: invokespecial #55
295: ldc           #56
297: invokevirtual #57
300: iload         15
302: invokevirtual #62
305: ldc           #59
307: invokevirtual #57
310: bipush        97
312: invokevirtual #62
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: iload         15
325: bipush        97
327: if_icmpne     334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #61
338: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 7433
End line: 7443
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-0.5440211108893698d), 2.154434690031884d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -0.544 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #611
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #406
32: ldc2_w        #148
35: invokespecial #25
38: astore_1
39: ldc_w         #612
42: invokestatic  #15
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 7446
End line: 7492
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        double double23 = sin20.value((double) (short) 10);
        double double25 = sin20.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin20.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin20.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin20.derivative();
        double double30 = sin20.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer3.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin20, goalType31, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        double double36 = univariatePointValuePair35.getValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.5440211108893698d) + "'", double23 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9922682874719476d + "'", double25 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.01745240643728351d) + "'", double30 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.9999760721196276d) + "'", double36 == (-0.9999760721196276d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #613
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: new           #72
147: dup
148: invokespecial #73
151: astore        14
153: aload         14
155: invokevirtual #74
158: astore        15
160: aload         14
162: ldc2_w        #91
165: invokevirtual #88
168: dstore        16
170: aload         14
172: ldc2_w        #373
175: invokevirtual #88
178: dstore        18
180: aload         14
182: invokevirtual #74
185: astore        20
187: aload         14
189: invokevirtual #74
192: astore        21
194: aload         14
196: invokevirtual #74
199: astore        22
201: aload         14
203: ldc2_w        #427
206: invokevirtual #88
209: dstore        23
211: getstatic     #118
214: astore        25
216: aload_2
217: bipush        52
219: aload         14
221: aload         25
223: ldc2_w        #614
226: ldc2_w        #477
229: dconst_0
230: invokevirtual #44
233: astore        26
235: aload         26
237: invokevirtual #616
240: dstore        27
242: new           #54
245: dup
246: invokespecial #55
249: ldc           #56
251: invokevirtual #57
254: iload_3
255: invokevirtual #62
258: ldc           #59
260: invokevirtual #57
263: iconst_0
264: invokevirtual #62
267: ldc           #56
269: invokevirtual #57
272: invokevirtual #60
275: iload_3
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #61
287: aload         6
289: invokestatic  #47
292: aload         7
294: invokestatic  #47
297: aload         8
299: invokestatic  #47
302: aload         9
304: invokestatic  #47
307: aload         10
309: invokestatic  #47
312: new           #54
315: dup
316: invokespecial #55
319: ldc           #56
321: invokevirtual #57
324: aload         11
326: invokevirtual #82
329: ldc           #59
331: invokevirtual #57
334: getstatic     #78
337: invokevirtual #82
340: ldc           #56
342: invokevirtual #57
345: invokevirtual #60
348: aload         11
350: getstatic     #78
353: invokevirtual #83
356: invokestatic  #61
359: aload         12
361: invokestatic  #47
364: new           #54
367: dup
368: invokespecial #55
371: ldc           #56
373: invokevirtual #57
376: iload         13
378: invokevirtual #62
381: ldc           #59
383: invokevirtual #57
386: bipush        97
388: invokevirtual #62
391: ldc           #56
393: invokevirtual #57
396: invokevirtual #60
399: iload         13
401: bipush        97
403: if_icmpne     410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #61
414: aload         15
416: invokestatic  #47
419: new           #54
422: dup
423: invokespecial #55
426: ldc           #56
428: invokevirtual #57
431: dload         16
433: invokevirtual #58
436: ldc           #59
438: invokevirtual #57
441: ldc2_w        #406
444: invokevirtual #58
447: ldc           #56
449: invokevirtual #57
452: invokevirtual #60
455: dload         16
457: ldc2_w        #406
460: dcmpl
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #61
472: new           #54
475: dup
476: invokespecial #55
479: ldc           #56
481: invokevirtual #57
484: dload         18
486: invokevirtual #58
489: ldc           #59
491: invokevirtual #57
494: ldc2_w        #247
497: invokevirtual #58
500: ldc           #56
502: invokevirtual #57
505: invokevirtual #60
508: dload         18
510: ldc2_w        #247
513: dcmpl
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #61
525: aload         20
527: invokestatic  #47
530: aload         21
532: invokestatic  #47
535: aload         22
537: invokestatic  #47
540: new           #54
543: dup
544: invokespecial #55
547: ldc           #56
549: invokevirtual #57
552: dload         23
554: invokevirtual #58
557: ldc           #59
559: invokevirtual #57
562: ldc2_w        #617
565: invokevirtual #58
568: ldc           #56
570: invokevirtual #57
573: invokevirtual #60
576: dload         23
578: ldc2_w        #617
581: dcmpl
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #61
593: new           #54
596: dup
597: invokespecial #55
600: ldc           #56
602: invokevirtual #57
605: aload         25
607: invokevirtual #82
610: ldc           #59
612: invokevirtual #57
615: getstatic     #118
618: invokevirtual #82
621: ldc           #56
623: invokevirtual #57
626: invokevirtual #60
629: aload         25
631: getstatic     #118
634: invokevirtual #83
637: invokestatic  #61
640: aload         26
642: invokestatic  #47
645: new           #54
648: dup
649: invokespecial #55
652: ldc           #56
654: invokevirtual #57
657: dload         27
659: invokevirtual #58
662: ldc           #59
664: invokevirtual #57
667: ldc2_w        #619
670: invokevirtual #58
673: ldc           #56
675: invokevirtual #57
678: invokevirtual #60
681: dload         27
683: ldc2_w        #619
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #61
698: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 7495
End line: 7597
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray49 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin44, sin45, sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray49);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, univariateDifferentiable32, univariateDifferentiable39, sin40, sin42, univariateDifferentiable50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException53 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable23, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException54 = new org.apache.commons.math3.exception.NullArgumentException(localizable22, (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer60 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker59);
        int int61 = brentOptimizer60.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin63, sin64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.GoalType goalType70 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer60.optimize(97, univariateFunction69, goalType70, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.optimize(17, univariateFunction56, goalType70, 99.99999999999999d, 2.238693057170856d, 0.8687261884639957d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair79 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray49);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateFunction69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertNotNull(univariatePointValuePair79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #621
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aconst_null
157: astore        16
159: aconst_null
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: new           #72
174: dup
175: invokespecial #73
178: astore        19
180: new           #72
183: dup
184: invokespecial #73
187: astore        20
189: aload         20
191: invokevirtual #74
194: astore        21
196: new           #72
199: dup
200: invokespecial #73
203: astore        22
205: new           #72
208: dup
209: invokespecial #73
212: astore        23
214: iconst_4
215: anewarray     #75
218: dup
219: iconst_0
220: aload         19
222: aastore
223: dup
224: iconst_1
225: aload         20
227: aastore
228: dup
229: iconst_2
230: aload         22
232: aastore
233: dup
234: iconst_3
235: aload         23
237: aastore
238: astore        24
240: aload         24
242: invokestatic  #76
245: astore        25
247: new           #72
250: dup
251: invokespecial #73
254: astore        26
256: new           #72
259: dup
260: invokespecial #73
263: astore        27
265: aload         27
267: invokevirtual #74
270: astore        28
272: new           #72
275: dup
276: invokespecial #73
279: astore        29
281: new           #72
284: dup
285: invokespecial #73
288: astore        30
290: iconst_4
291: anewarray     #75
294: dup
295: iconst_0
296: aload         26
298: aastore
299: dup
300: iconst_1
301: aload         27
303: aastore
304: dup
305: iconst_2
306: aload         29
308: aastore
309: dup
310: iconst_3
311: aload         30
313: aastore
314: astore        31
316: aload         31
318: invokestatic  #76
321: astore        32
323: new           #72
326: dup
327: invokespecial #73
330: astore        33
332: aload         33
334: invokevirtual #74
337: astore        34
339: new           #72
342: dup
343: invokespecial #73
346: astore        35
348: aload         35
350: invokevirtual #74
353: astore        36
355: new           #72
358: dup
359: invokespecial #73
362: astore        37
364: new           #72
367: dup
368: invokespecial #73
371: astore        38
373: aload         38
375: invokevirtual #74
378: astore        39
380: new           #72
383: dup
384: invokespecial #73
387: astore        40
389: new           #72
392: dup
393: invokespecial #73
396: astore        41
398: iconst_4
399: anewarray     #75
402: dup
403: iconst_0
404: aload         37
406: aastore
407: dup
408: iconst_1
409: aload         38
411: aastore
412: dup
413: iconst_2
414: aload         40
416: aastore
417: dup
418: iconst_3
419: aload         41
421: aastore
422: astore        42
424: aload         42
426: invokestatic  #76
429: astore        43
431: bipush        6
433: anewarray     #75
436: dup
437: iconst_0
438: aload         18
440: aastore
441: dup
442: iconst_1
443: aload         25
445: aastore
446: dup
447: iconst_2
448: aload         32
450: aastore
451: dup
452: iconst_3
453: aload         33
455: aastore
456: dup
457: iconst_4
458: aload         35
460: aastore
461: dup
462: iconst_5
463: aload         43
465: aastore
466: astore        44
468: aload         44
470: invokestatic  #77
473: astore        45
475: new           #313
478: dup
479: aload         17
481: ldc2_w        #219
484: invokestatic  #314
487: aload         44
489: checkcast     #123
492: invokespecial #315
495: astore        46
497: new           #46
500: dup
501: aload         16
503: aload         44
505: checkcast     #123
508: invokespecial #246
511: astore        47
513: aload         44
515: checkcast     #89
518: invokestatic  #117
521: astore        48
523: aload         44
525: checkcast     #89
528: invokestatic  #90
531: astore        49
533: aconst_null
534: astore        50
536: new           #8
539: dup
540: ldc2_w        #31
543: ldc2_w        #33
546: aload         50
548: invokespecial #13
551: astore        51
553: aload         51
555: invokevirtual #71
558: istore        52
560: new           #72
563: dup
564: invokespecial #73
567: astore        53
569: new           #72
572: dup
573: invokespecial #73
576: astore        54
578: aload         54
580: invokevirtual #74
583: astore        55
585: iconst_2
586: anewarray     #75
589: dup
590: iconst_0
591: aload         53
593: aastore
594: dup
595: iconst_1
596: aload         54
598: aastore
599: astore        56
601: aload         56
603: invokestatic  #76
606: astore        57
608: aload         56
610: invokestatic  #77
613: astore        58
615: aload         56
617: checkcast     #89
620: invokestatic  #90
623: astore        59
625: getstatic     #78
628: astore        60
630: aload         51
632: bipush        97
634: aload         59
636: aload         60
638: ldc2_w        #91
641: ldc2_w        #93
644: ldc2_w        #91
647: invokevirtual #44
650: astore        61
652: aload_2
653: bipush        17
655: aload         49
657: aload         60
659: ldc2_w        #507
662: ldc2_w        #509
665: ldc2_w        #511
668: invokevirtual #44
671: astore        62
673: aload_2
674: invokevirtual #51
677: astore        63
679: new           #54
682: dup
683: invokespecial #55
686: ldc           #56
688: invokevirtual #57
691: iload_3
692: invokevirtual #62
695: ldc           #59
697: invokevirtual #57
700: iconst_0
701: invokevirtual #62
704: ldc           #56
706: invokevirtual #57
709: invokevirtual #60
712: iload_3
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #61
724: aload         6
726: invokestatic  #47
729: aload         7
731: invokestatic  #47
734: aload         8
736: invokestatic  #47
739: aload         9
741: invokestatic  #47
744: aload         10
746: invokestatic  #47
749: new           #54
752: dup
753: invokespecial #55
756: ldc           #56
758: invokevirtual #57
761: aload         11
763: invokevirtual #82
766: ldc           #59
768: invokevirtual #57
771: getstatic     #78
774: invokevirtual #82
777: ldc           #56
779: invokevirtual #57
782: invokevirtual #60
785: aload         11
787: getstatic     #78
790: invokevirtual #83
793: invokestatic  #61
796: aload         12
798: invokestatic  #47
801: aload         13
803: invokestatic  #47
806: new           #54
809: dup
810: invokespecial #55
813: ldc           #56
815: invokevirtual #57
818: iload         14
820: invokevirtual #62
823: ldc           #59
825: invokevirtual #57
828: bipush        8
830: invokevirtual #62
833: ldc           #56
835: invokevirtual #57
838: invokevirtual #60
841: iload         14
843: bipush        8
845: if_icmpne     852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #61
856: new           #54
859: dup
860: invokespecial #55
863: ldc           #56
865: invokevirtual #57
868: iload         15
870: invokevirtual #62
873: ldc           #59
875: invokevirtual #57
878: bipush        8
880: invokevirtual #62
883: ldc           #56
885: invokevirtual #57
888: invokevirtual #60
891: iload         15
893: bipush        8
895: if_icmpne     902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #61
906: aload         21
908: invokestatic  #47
911: aload         24
913: invokestatic  #47
916: aload         25
918: invokestatic  #47
921: aload         28
923: invokestatic  #47
926: aload         31
928: invokestatic  #47
931: aload         32
933: invokestatic  #47
936: aload         34
938: invokestatic  #47
941: aload         36
943: invokestatic  #47
946: aload         39
948: invokestatic  #47
951: aload         42
953: invokestatic  #47
956: aload         43
958: invokestatic  #47
961: aload         44
963: invokestatic  #47
966: aload         45
968: invokestatic  #47
971: aload         48
973: invokestatic  #47
976: aload         49
978: invokestatic  #47
981: new           #54
984: dup
985: invokespecial #55
988: ldc           #56
990: invokevirtual #57
993: iload         52
995: invokevirtual #62
998: ldc           #59
1000: invokevirtual #57
1003: iconst_0
1004: invokevirtual #62
1007: ldc           #56
1009: invokevirtual #57
1012: invokevirtual #60
1015: iload         52
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #61
1028: aload         55
1030: invokestatic  #47
1033: aload         56
1035: invokestatic  #47
1038: aload         57
1040: invokestatic  #47
1043: aload         58
1045: invokestatic  #47
1048: aload         59
1050: invokestatic  #47
1053: new           #54
1056: dup
1057: invokespecial #55
1060: ldc           #56
1062: invokevirtual #57
1065: aload         60
1067: invokevirtual #82
1070: ldc           #59
1072: invokevirtual #57
1075: getstatic     #78
1078: invokevirtual #82
1081: ldc           #56
1083: invokevirtual #57
1086: invokevirtual #60
1089: aload         60
1091: getstatic     #78
1094: invokevirtual #83
1097: invokestatic  #61
1100: aload         61
1102: invokestatic  #47
1105: aload         62
1107: invokestatic  #47
1110: aload         63
1112: invokestatic  #47
1115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 7600
End line: 7695
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        double double78 = brentOptimizer3.computeObjectiveValue((-0.88966182231646d));
        int int79 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3642239251822542d + "'", double78 == 0.3642239251822542d);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #622
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: ldc2_w        #351
590: invokevirtual #158
593: dstore        58
595: aload_2
596: invokevirtual #50
599: istore        60
601: new           #54
604: dup
605: invokespecial #55
608: ldc           #56
610: invokevirtual #57
613: iload_3
614: invokevirtual #62
617: ldc           #59
619: invokevirtual #57
622: iconst_0
623: invokevirtual #62
626: ldc           #56
628: invokevirtual #57
631: invokevirtual #60
634: iload_3
635: ifne          642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #61
646: aload         6
648: invokestatic  #47
651: aload         7
653: invokestatic  #47
656: aload         8
658: invokestatic  #47
661: aload         9
663: invokestatic  #47
666: aload         10
668: invokestatic  #47
671: new           #54
674: dup
675: invokespecial #55
678: ldc           #56
680: invokevirtual #57
683: aload         11
685: invokevirtual #82
688: ldc           #59
690: invokevirtual #57
693: getstatic     #78
696: invokevirtual #82
699: ldc           #56
701: invokevirtual #57
704: invokevirtual #60
707: aload         11
709: getstatic     #78
712: invokevirtual #83
715: invokestatic  #61
718: aload         12
720: invokestatic  #47
723: new           #54
726: dup
727: invokespecial #55
730: ldc           #56
732: invokevirtual #57
735: iload         13
737: invokevirtual #62
740: ldc           #59
742: invokevirtual #57
745: bipush        97
747: invokevirtual #62
750: ldc           #56
752: invokevirtual #57
755: invokevirtual #60
758: iload         13
760: bipush        97
762: if_icmpne     769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #61
773: aload         19
775: invokestatic  #47
778: aload         22
780: invokestatic  #47
783: aload         23
785: invokestatic  #47
788: aload         26
790: invokestatic  #47
793: aload         28
795: invokestatic  #47
798: new           #54
801: dup
802: invokespecial #55
805: ldc           #56
807: invokevirtual #57
810: iload         31
812: invokevirtual #62
815: ldc           #59
817: invokevirtual #57
820: iconst_0
821: invokevirtual #62
824: ldc           #56
826: invokevirtual #57
829: invokevirtual #60
832: iload         31
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #61
845: new           #54
848: dup
849: invokespecial #55
852: ldc           #56
854: invokevirtual #57
857: dload         32
859: invokevirtual #58
862: ldc           #59
864: invokevirtual #57
867: dconst_0
868: invokevirtual #58
871: ldc           #56
873: invokevirtual #57
876: invokevirtual #60
879: dload         32
881: dconst_0
882: dcmpl
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #61
894: aload         36
896: invokestatic  #47
899: aload         39
901: invokestatic  #47
904: aload         40
906: invokestatic  #47
909: aload         41
911: invokestatic  #47
914: new           #54
917: dup
918: invokespecial #55
921: ldc           #56
923: invokevirtual #57
926: iload         44
928: invokevirtual #62
931: ldc           #59
933: invokevirtual #57
936: iconst_0
937: invokevirtual #62
940: ldc           #56
942: invokevirtual #57
945: invokevirtual #60
948: iload         44
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #61
961: aload         47
963: invokestatic  #47
966: aload         48
968: invokestatic  #47
971: aload         49
973: invokestatic  #47
976: aload         50
978: invokestatic  #47
981: aload         51
983: invokestatic  #47
986: new           #54
989: dup
990: invokespecial #55
993: ldc           #56
995: invokevirtual #57
998: aload         52
1000: invokevirtual #82
1003: ldc           #59
1005: invokevirtual #57
1008: getstatic     #78
1011: invokevirtual #82
1014: ldc           #56
1016: invokevirtual #57
1019: invokevirtual #60
1022: aload         52
1024: getstatic     #78
1027: invokevirtual #83
1030: invokestatic  #61
1033: aload         53
1035: invokestatic  #47
1038: aload         54
1040: invokestatic  #47
1043: new           #54
1046: dup
1047: invokespecial #55
1050: ldc           #56
1052: invokevirtual #57
1055: aload         55
1057: invokevirtual #82
1060: ldc           #59
1062: invokevirtual #57
1065: getstatic     #78
1068: invokevirtual #82
1071: ldc           #56
1073: invokevirtual #57
1076: invokevirtual #60
1079: aload         55
1081: getstatic     #78
1084: invokevirtual #83
1087: invokestatic  #61
1090: aload         56
1092: invokestatic  #47
1095: aload         57
1097: invokestatic  #47
1100: new           #54
1103: dup
1104: invokespecial #55
1107: ldc           #56
1109: invokevirtual #57
1112: dload         58
1114: invokevirtual #58
1117: ldc           #59
1119: invokevirtual #57
1122: ldc2_w        #483
1125: invokevirtual #58
1128: ldc           #56
1130: invokevirtual #57
1133: invokevirtual #60
1136: dload         58
1138: ldc2_w        #483
1141: dcmpl
1142: ifne          1149
1145: iconst_1
1146: goto          1150
1149: iconst_0
1150: invokestatic  #61
1153: new           #54
1156: dup
1157: invokespecial #55
1160: ldc           #56
1162: invokevirtual #57
1165: iload         60
1167: invokevirtual #62
1170: ldc           #59
1172: invokevirtual #57
1175: iconst_2
1176: invokevirtual #62
1179: ldc           #56
1181: invokevirtual #57
1184: invokevirtual #60
1187: iload         60
1189: iconst_2
1190: if_icmpne     1197
1193: iconst_1
1194: goto          1198
1197: iconst_0
1198: invokestatic  #61
1201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 7698
End line: 7738
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #623
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: new           #54
208: dup
209: invokespecial #55
212: ldc           #56
214: invokevirtual #57
217: iload_3
218: invokevirtual #62
221: ldc           #59
223: invokevirtual #57
226: iconst_0
227: invokevirtual #62
230: ldc           #56
232: invokevirtual #57
235: invokevirtual #60
238: iload_3
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #61
250: aload         6
252: invokestatic  #47
255: aload         7
257: invokestatic  #47
260: aload         8
262: invokestatic  #47
265: aload         9
267: invokestatic  #47
270: aload         10
272: invokestatic  #47
275: new           #54
278: dup
279: invokespecial #55
282: ldc           #56
284: invokevirtual #57
287: aload         11
289: invokevirtual #82
292: ldc           #59
294: invokevirtual #57
297: getstatic     #78
300: invokevirtual #82
303: ldc           #56
305: invokevirtual #57
308: invokevirtual #60
311: aload         11
313: getstatic     #78
316: invokevirtual #83
319: invokestatic  #61
322: aload         12
324: invokestatic  #47
327: aload         13
329: invokestatic  #47
332: new           #54
335: dup
336: invokespecial #55
339: ldc           #56
341: invokevirtual #57
344: aload         14
346: invokevirtual #82
349: ldc           #59
351: invokevirtual #57
354: getstatic     #78
357: invokevirtual #82
360: ldc           #56
362: invokevirtual #57
365: invokevirtual #60
368: aload         14
370: getstatic     #78
373: invokevirtual #83
376: invokestatic  #61
379: aload         15
381: invokestatic  #47
384: aload         17
386: invokestatic  #47
389: new           #54
392: dup
393: invokespecial #55
396: ldc           #56
398: invokevirtual #57
401: aload         18
403: invokevirtual #82
406: ldc           #59
408: invokevirtual #57
411: getstatic     #78
414: invokevirtual #82
417: ldc           #56
419: invokevirtual #57
422: invokevirtual #60
425: aload         18
427: getstatic     #78
430: invokevirtual #83
433: invokestatic  #61
436: aload         19
438: invokestatic  #47
441: new           #54
444: dup
445: invokespecial #55
448: ldc           #56
450: invokevirtual #57
453: dload         20
455: invokevirtual #58
458: ldc           #59
460: invokevirtual #57
463: dconst_0
464: invokevirtual #58
467: ldc           #56
469: invokevirtual #57
472: invokevirtual #60
475: dload         20
477: dconst_0
478: dcmpl
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #61
490: new           #54
493: dup
494: invokespecial #55
497: ldc           #56
499: invokevirtual #57
502: iload         22
504: invokevirtual #62
507: ldc           #59
509: invokevirtual #57
512: iconst_1
513: invokevirtual #62
516: ldc           #56
518: invokevirtual #57
521: invokevirtual #60
524: iload         22
526: iconst_1
527: if_icmpne     534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #61
538: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 7741
End line: 7759
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair7 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #624
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #103
57: astore        5
59: aload_2
60: invokevirtual #51
63: astore        6
65: ldc           #52
67: invokestatic  #15
70: goto          75
73: astore        6
75: new           #54
78: dup
79: invokespecial #55
82: ldc           #56
84: invokevirtual #57
87: iload_3
88: invokevirtual #62
91: ldc           #59
93: invokevirtual #57
96: iconst_0
97: invokevirtual #62
100: ldc           #56
102: invokevirtual #57
105: invokevirtual #60
108: iload_3
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #61
120: new           #54
123: dup
124: invokespecial #55
127: ldc           #56
129: invokevirtual #57
132: iload         4
134: invokevirtual #62
137: ldc           #59
139: invokevirtual #57
142: iconst_0
143: invokevirtual #62
146: ldc           #56
148: invokevirtual #57
151: invokevirtual #60
154: iload         4
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #61
167: aload         5
169: invokestatic  #104
172: return
Exception table:
from    to  target type
59    70    73   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 7762
End line: 7814
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.analysis.function.Sin sin5 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray11 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7, sin9, sin10 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray11);
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin14.derivative();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray18 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin13, sin14, sin16, sin17 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable19 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin5, univariateDifferentiable12, univariateDifferentiable19, sin20, sin22, univariateDifferentiable30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray31);
        org.apache.commons.math3.optimization.GoalType goalType33 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer3.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, goalType33, 0.0d, 0.17453292519943295d);
        double double37 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray18);
        org.junit.Assert.assertNotNull(univariateDifferentiable19);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.08726646259971647d + "'", double37 == 0.08726646259971647d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #625
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: new           #72
45: dup
46: invokespecial #73
49: astore_3
50: new           #72
53: dup
54: invokespecial #73
57: astore        4
59: new           #72
62: dup
63: invokespecial #73
66: astore        5
68: aload         5
70: invokevirtual #74
73: astore        6
75: new           #72
78: dup
79: invokespecial #73
82: astore        7
84: new           #72
87: dup
88: invokespecial #73
91: astore        8
93: iconst_4
94: anewarray     #75
97: dup
98: iconst_0
99: aload         4
101: aastore
102: dup
103: iconst_1
104: aload         5
106: aastore
107: dup
108: iconst_2
109: aload         7
111: aastore
112: dup
113: iconst_3
114: aload         8
116: aastore
117: astore        9
119: aload         9
121: invokestatic  #76
124: astore        10
126: new           #72
129: dup
130: invokespecial #73
133: astore        11
135: new           #72
138: dup
139: invokespecial #73
142: astore        12
144: aload         12
146: invokevirtual #74
149: astore        13
151: new           #72
154: dup
155: invokespecial #73
158: astore        14
160: new           #72
163: dup
164: invokespecial #73
167: astore        15
169: iconst_4
170: anewarray     #75
173: dup
174: iconst_0
175: aload         11
177: aastore
178: dup
179: iconst_1
180: aload         12
182: aastore
183: dup
184: iconst_2
185: aload         14
187: aastore
188: dup
189: iconst_3
190: aload         15
192: aastore
193: astore        16
195: aload         16
197: invokestatic  #76
200: astore        17
202: new           #72
205: dup
206: invokespecial #73
209: astore        18
211: aload         18
213: invokevirtual #74
216: astore        19
218: new           #72
221: dup
222: invokespecial #73
225: astore        20
227: aload         20
229: invokevirtual #74
232: astore        21
234: new           #72
237: dup
238: invokespecial #73
241: astore        22
243: new           #72
246: dup
247: invokespecial #73
250: astore        23
252: aload         23
254: invokevirtual #74
257: astore        24
259: new           #72
262: dup
263: invokespecial #73
266: astore        25
268: new           #72
271: dup
272: invokespecial #73
275: astore        26
277: iconst_4
278: anewarray     #75
281: dup
282: iconst_0
283: aload         22
285: aastore
286: dup
287: iconst_1
288: aload         23
290: aastore
291: dup
292: iconst_2
293: aload         25
295: aastore
296: dup
297: iconst_3
298: aload         26
300: aastore
301: astore        27
303: aload         27
305: invokestatic  #76
308: astore        28
310: bipush        6
312: anewarray     #75
315: dup
316: iconst_0
317: aload_3
318: aastore
319: dup
320: iconst_1
321: aload         10
323: aastore
324: dup
325: iconst_2
326: aload         17
328: aastore
329: dup
330: iconst_3
331: aload         18
333: aastore
334: dup
335: iconst_4
336: aload         20
338: aastore
339: dup
340: iconst_5
341: aload         28
343: aastore
344: astore        29
346: aload         29
348: invokestatic  #77
351: astore        30
353: getstatic     #78
356: astore        31
358: aload_2
359: bipush        10
361: aload         30
363: aload         31
365: dconst_0
366: ldc2_w        #79
369: invokevirtual #81
372: astore        32
374: aload_2
375: invokevirtual #177
378: dstore        33
380: aload         6
382: invokestatic  #47
385: aload         9
387: invokestatic  #47
390: aload         10
392: invokestatic  #47
395: aload         13
397: invokestatic  #47
400: aload         16
402: invokestatic  #47
405: aload         17
407: invokestatic  #47
410: aload         19
412: invokestatic  #47
415: aload         21
417: invokestatic  #47
420: aload         24
422: invokestatic  #47
425: aload         27
427: invokestatic  #47
430: aload         28
432: invokestatic  #47
435: aload         29
437: invokestatic  #47
440: aload         30
442: invokestatic  #47
445: new           #54
448: dup
449: invokespecial #55
452: ldc           #56
454: invokevirtual #57
457: aload         31
459: invokevirtual #82
462: ldc           #59
464: invokevirtual #57
467: getstatic     #78
470: invokevirtual #82
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: aload         31
483: getstatic     #78
486: invokevirtual #83
489: invokestatic  #61
492: aload         32
494: invokestatic  #47
497: new           #54
500: dup
501: invokespecial #55
504: ldc           #56
506: invokevirtual #57
509: dload         33
511: invokevirtual #58
514: ldc           #59
516: invokevirtual #57
519: ldc2_w        #626
522: invokevirtual #58
525: ldc           #56
527: invokevirtual #57
530: invokevirtual #60
533: dload         33
535: ldc2_w        #626
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #61
550: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 7817
End line: 7833
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker5 = brentOptimizer2.getConvergenceChecker();
        double double6 = brentOptimizer2.getStartValue();
        int int7 = brentOptimizer2.getEvaluations();
        double double8 = brentOptimizer2.getStartValue();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #628
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #103
48: astore_3
49: aload_1
50: invokevirtual #103
53: astore        4
55: aload_1
56: invokevirtual #177
59: dstore        5
61: aload_1
62: invokevirtual #71
65: istore        7
67: aload_1
68: invokevirtual #177
71: dstore        8
73: new           #54
76: dup
77: invokespecial #55
80: ldc           #56
82: invokevirtual #57
85: iload_2
86: invokevirtual #62
89: ldc           #59
91: invokevirtual #57
94: iconst_0
95: invokevirtual #62
98: ldc           #56
100: invokevirtual #57
103: invokevirtual #60
106: iload_2
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #61
118: aload_3
119: invokestatic  #104
122: aload         4
124: invokestatic  #104
127: new           #54
130: dup
131: invokespecial #55
134: ldc           #56
136: invokevirtual #57
139: dload         5
141: invokevirtual #58
144: ldc           #59
146: invokevirtual #57
149: dconst_0
150: invokevirtual #58
153: ldc           #56
155: invokevirtual #57
158: invokevirtual #60
161: dload         5
163: dconst_0
164: dcmpl
165: ifne          172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #61
176: new           #54
179: dup
180: invokespecial #55
183: ldc           #56
185: invokevirtual #57
188: iload         7
190: invokevirtual #62
193: ldc           #59
195: invokevirtual #57
198: iconst_0
199: invokevirtual #62
202: ldc           #56
204: invokevirtual #57
207: invokevirtual #60
210: iload         7
212: ifne          219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #61
223: new           #54
226: dup
227: invokespecial #55
230: ldc           #56
232: invokevirtual #57
235: dload         8
237: invokevirtual #58
240: ldc           #59
242: invokevirtual #57
245: dconst_0
246: invokevirtual #58
249: ldc           #56
251: invokevirtual #57
254: invokevirtual #60
257: dload         8
259: dconst_0
260: dcmpl
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #61
272: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 7836
End line: 7847
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-0.35891532187732544d), (double) 12.0f, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -0.359 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #629
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #630
34: ldc2_w        #188
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #632
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 7850
End line: 7867
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        double double6 = brentOptimizer3.getMax();
        double double7 = brentOptimizer3.getMin();
        int int8 = brentOptimizer3.getEvaluations();
        double double9 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #633
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #49
57: dstore        6
59: aload_2
60: invokevirtual #231
63: dstore        8
65: aload_2
66: invokevirtual #71
69: istore        10
71: aload_2
72: invokevirtual #231
75: dstore        11
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: iload_3
90: invokevirtual #62
93: ldc           #59
95: invokevirtual #57
98: iconst_0
99: invokevirtual #62
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #61
122: new           #54
125: dup
126: invokespecial #55
129: ldc           #56
131: invokevirtual #57
134: dload         4
136: invokevirtual #58
139: ldc           #59
141: invokevirtual #57
144: dconst_0
145: invokevirtual #58
148: ldc           #56
150: invokevirtual #57
153: invokevirtual #60
156: dload         4
158: dconst_0
159: dcmpl
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #61
171: new           #54
174: dup
175: invokespecial #55
178: ldc           #56
180: invokevirtual #57
183: dload         6
185: invokevirtual #58
188: ldc           #59
190: invokevirtual #57
193: dconst_0
194: invokevirtual #58
197: ldc           #56
199: invokevirtual #57
202: invokevirtual #60
205: dload         6
207: dconst_0
208: dcmpl
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #61
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: dload         8
234: invokevirtual #58
237: ldc           #59
239: invokevirtual #57
242: dconst_0
243: invokevirtual #58
246: ldc           #56
248: invokevirtual #57
251: invokevirtual #60
254: dload         8
256: dconst_0
257: dcmpl
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #61
269: new           #54
272: dup
273: invokespecial #55
276: ldc           #56
278: invokevirtual #57
281: iload         10
283: invokevirtual #62
286: ldc           #59
288: invokevirtual #57
291: iconst_0
292: invokevirtual #62
295: ldc           #56
297: invokevirtual #57
300: invokevirtual #60
303: iload         10
305: ifne          312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #61
316: new           #54
319: dup
320: invokespecial #55
323: ldc           #56
325: invokevirtual #57
328: dload         11
330: invokevirtual #58
333: ldc           #59
335: invokevirtual #57
338: dconst_0
339: invokevirtual #58
342: ldc           #56
344: invokevirtual #57
347: invokevirtual #60
350: dload         11
352: dconst_0
353: dcmpl
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #61
365: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 7870
End line: 7879
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 8L, 1.5707963267948968d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #634
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #596
34: ldc2_w        #598
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #110
51: astore        4
53: new           #54
56: dup
57: invokespecial #55
60: ldc           #56
62: invokevirtual #57
65: iload_3
66: invokevirtual #62
69: ldc           #59
71: invokevirtual #57
74: iconst_0
75: invokevirtual #62
78: ldc           #56
80: invokevirtual #57
83: invokevirtual #60
86: iload_3
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #61
98: aload         4
100: invokestatic  #104
103: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 7882
End line: 7974
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType31 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        double double36 = sin33.value((double) (short) 10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction37 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin33);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker40 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer41 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker40);
        int int42 = brentOptimizer41.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray47 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin44, sin45 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray47);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray47);
        org.apache.commons.math3.optimization.GoalType goalType51 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair55 = brentOptimizer41.optimize(97, univariateFunction50, goalType51, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair56 = brentOptimizer41.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType57 = brentOptimizer41.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer41.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction61 = sin60.derivative();
        org.apache.commons.math3.optimization.GoalType goalType62 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer41.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin60, goalType62, 3.141592653589793d, 0.0d);
        double double66 = brentOptimizer41.getMax();
        org.apache.commons.math3.optimization.GoalType goalType67 = brentOptimizer41.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair70 = brentOptimizer3.optimize(11, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction37, goalType67, 0.0d, 1.6929693744344998d);
        double double72 = brentOptimizer3.computeObjectiveValue(99.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.5440211108893698d) + "'", double36 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + goalType51 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType51.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair55);
        org.junit.Assert.assertNotNull(univariatePointValuePair56);
        org.junit.Assert.assertTrue("'" + goalType57 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType57.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertNotNull(univariateFunction61);
        org.junit.Assert.assertTrue("'" + goalType62 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType62.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType67 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType67.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.9992068341863537d) + "'", double72 == (-0.9992068341863537d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #635
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: invokevirtual #110
215: astore        24
217: new           #72
220: dup
221: invokespecial #73
224: astore        25
226: aload         25
228: invokevirtual #74
231: astore        26
233: aload         25
235: ldc2_w        #91
238: invokevirtual #88
241: dstore        27
243: aload         25
245: invokestatic  #281
248: astore        29
250: aconst_null
251: astore        30
253: new           #8
256: dup
257: ldc2_w        #31
260: ldc2_w        #33
263: aload         30
265: invokespecial #13
268: astore        31
270: aload         31
272: invokevirtual #71
275: istore        32
277: new           #72
280: dup
281: invokespecial #73
284: astore        33
286: new           #72
289: dup
290: invokespecial #73
293: astore        34
295: aload         34
297: invokevirtual #74
300: astore        35
302: iconst_2
303: anewarray     #75
306: dup
307: iconst_0
308: aload         33
310: aastore
311: dup
312: iconst_1
313: aload         34
315: aastore
316: astore        36
318: aload         36
320: invokestatic  #76
323: astore        37
325: aload         36
327: invokestatic  #77
330: astore        38
332: aload         36
334: checkcast     #89
337: invokestatic  #90
340: astore        39
342: getstatic     #78
345: astore        40
347: aload         31
349: bipush        97
351: aload         39
353: aload         40
355: ldc2_w        #91
358: ldc2_w        #93
361: ldc2_w        #91
364: invokevirtual #44
367: astore        41
369: aload         31
371: invokevirtual #51
374: astore        42
376: aload         31
378: invokevirtual #110
381: astore        43
383: aload         31
385: invokevirtual #51
388: astore        44
390: new           #72
393: dup
394: invokespecial #73
397: astore        45
399: aload         45
401: invokevirtual #74
404: astore        46
406: getstatic     #78
409: astore        47
411: aload         31
413: bipush        97
415: aload         45
417: aload         47
419: ldc2_w        #133
422: dconst_0
423: invokevirtual #81
426: astore        48
428: aload         31
430: invokevirtual #49
433: dstore        49
435: aload         31
437: invokevirtual #110
440: astore        51
442: aload_2
443: bipush        11
445: aload         29
447: aload         51
449: dconst_0
450: ldc2_w        #498
453: invokevirtual #81
456: astore        52
458: aload_2
459: ldc2_w        #212
462: invokevirtual #158
465: dstore        53
467: new           #54
470: dup
471: invokespecial #55
474: ldc           #56
476: invokevirtual #57
479: iload_3
480: invokevirtual #62
483: ldc           #59
485: invokevirtual #57
488: iconst_0
489: invokevirtual #62
492: ldc           #56
494: invokevirtual #57
497: invokevirtual #60
500: iload_3
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #61
512: aload         6
514: invokestatic  #47
517: aload         7
519: invokestatic  #47
522: aload         8
524: invokestatic  #47
527: aload         9
529: invokestatic  #47
532: aload         10
534: invokestatic  #47
537: new           #54
540: dup
541: invokespecial #55
544: ldc           #56
546: invokevirtual #57
549: aload         11
551: invokevirtual #82
554: ldc           #59
556: invokevirtual #57
559: getstatic     #78
562: invokevirtual #82
565: ldc           #56
567: invokevirtual #57
570: invokevirtual #60
573: aload         11
575: getstatic     #78
578: invokevirtual #83
581: invokestatic  #61
584: aload         12
586: invokestatic  #47
589: aload         13
591: invokestatic  #47
594: new           #54
597: dup
598: invokespecial #55
601: ldc           #56
603: invokevirtual #57
606: aload         14
608: invokevirtual #82
611: ldc           #59
613: invokevirtual #57
616: getstatic     #78
619: invokevirtual #82
622: ldc           #56
624: invokevirtual #57
627: invokevirtual #60
630: aload         14
632: getstatic     #78
635: invokevirtual #83
638: invokestatic  #61
641: aload         15
643: invokestatic  #47
646: aload         17
648: invokestatic  #47
651: new           #54
654: dup
655: invokespecial #55
658: ldc           #56
660: invokevirtual #57
663: aload         18
665: invokevirtual #82
668: ldc           #59
670: invokevirtual #57
673: getstatic     #78
676: invokevirtual #82
679: ldc           #56
681: invokevirtual #57
684: invokevirtual #60
687: aload         18
689: getstatic     #78
692: invokevirtual #83
695: invokestatic  #61
698: aload         19
700: invokestatic  #47
703: new           #54
706: dup
707: invokespecial #55
710: ldc           #56
712: invokevirtual #57
715: dload         20
717: invokevirtual #58
720: ldc           #59
722: invokevirtual #57
725: dconst_0
726: invokevirtual #58
729: ldc           #56
731: invokevirtual #57
734: invokevirtual #60
737: dload         20
739: dconst_0
740: dcmpl
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #61
752: new           #54
755: dup
756: invokespecial #55
759: ldc           #56
761: invokevirtual #57
764: iload         22
766: invokevirtual #62
769: ldc           #59
771: invokevirtual #57
774: bipush        97
776: invokevirtual #62
779: ldc           #56
781: invokevirtual #57
784: invokevirtual #60
787: iload         22
789: bipush        97
791: if_icmpne     798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #61
802: aload         23
804: invokestatic  #47
807: new           #54
810: dup
811: invokespecial #55
814: ldc           #56
816: invokevirtual #57
819: aload         24
821: invokevirtual #82
824: ldc           #59
826: invokevirtual #57
829: getstatic     #78
832: invokevirtual #82
835: ldc           #56
837: invokevirtual #57
840: invokevirtual #60
843: aload         24
845: getstatic     #78
848: invokevirtual #83
851: invokestatic  #61
854: aload         26
856: invokestatic  #47
859: new           #54
862: dup
863: invokespecial #55
866: ldc           #56
868: invokevirtual #57
871: dload         27
873: invokevirtual #58
876: ldc           #59
878: invokevirtual #57
881: ldc2_w        #406
884: invokevirtual #58
887: ldc           #56
889: invokevirtual #57
892: invokevirtual #60
895: dload         27
897: ldc2_w        #406
900: dcmpl
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #61
912: aload         29
914: invokestatic  #47
917: new           #54
920: dup
921: invokespecial #55
924: ldc           #56
926: invokevirtual #57
929: iload         32
931: invokevirtual #62
934: ldc           #59
936: invokevirtual #57
939: iconst_0
940: invokevirtual #62
943: ldc           #56
945: invokevirtual #57
948: invokevirtual #60
951: iload         32
953: ifne          960
956: iconst_1
957: goto          961
960: iconst_0
961: invokestatic  #61
964: aload         35
966: invokestatic  #47
969: aload         36
971: invokestatic  #47
974: aload         37
976: invokestatic  #47
979: aload         38
981: invokestatic  #47
984: aload         39
986: invokestatic  #47
989: new           #54
992: dup
993: invokespecial #55
996: ldc           #56
998: invokevirtual #57
1001: aload         40
1003: invokevirtual #82
1006: ldc           #59
1008: invokevirtual #57
1011: getstatic     #78
1014: invokevirtual #82
1017: ldc           #56
1019: invokevirtual #57
1022: invokevirtual #60
1025: aload         40
1027: getstatic     #78
1030: invokevirtual #83
1033: invokestatic  #61
1036: aload         41
1038: invokestatic  #47
1041: aload         42
1043: invokestatic  #47
1046: new           #54
1049: dup
1050: invokespecial #55
1053: ldc           #56
1055: invokevirtual #57
1058: aload         43
1060: invokevirtual #82
1063: ldc           #59
1065: invokevirtual #57
1068: getstatic     #78
1071: invokevirtual #82
1074: ldc           #56
1076: invokevirtual #57
1079: invokevirtual #60
1082: aload         43
1084: getstatic     #78
1087: invokevirtual #83
1090: invokestatic  #61
1093: aload         44
1095: invokestatic  #47
1098: aload         46
1100: invokestatic  #47
1103: new           #54
1106: dup
1107: invokespecial #55
1110: ldc           #56
1112: invokevirtual #57
1115: aload         47
1117: invokevirtual #82
1120: ldc           #59
1122: invokevirtual #57
1125: getstatic     #78
1128: invokevirtual #82
1131: ldc           #56
1133: invokevirtual #57
1136: invokevirtual #60
1139: aload         47
1141: getstatic     #78
1144: invokevirtual #83
1147: invokestatic  #61
1150: aload         48
1152: invokestatic  #47
1155: new           #54
1158: dup
1159: invokespecial #55
1162: ldc           #56
1164: invokevirtual #57
1167: dload         49
1169: invokevirtual #58
1172: ldc           #59
1174: invokevirtual #57
1177: dconst_0
1178: invokevirtual #58
1181: ldc           #56
1183: invokevirtual #57
1186: invokevirtual #60
1189: dload         49
1191: dconst_0
1192: dcmpl
1193: ifne          1200
1196: iconst_1
1197: goto          1201
1200: iconst_0
1201: invokestatic  #61
1204: new           #54
1207: dup
1208: invokespecial #55
1211: ldc           #56
1213: invokevirtual #57
1216: aload         51
1218: invokevirtual #82
1221: ldc           #59
1223: invokevirtual #57
1226: getstatic     #78
1229: invokevirtual #82
1232: ldc           #56
1234: invokevirtual #57
1237: invokevirtual #60
1240: aload         51
1242: getstatic     #78
1245: invokevirtual #83
1248: invokestatic  #61
1251: aload         52
1253: invokestatic  #47
1256: new           #54
1259: dup
1260: invokespecial #55
1263: ldc           #56
1265: invokevirtual #57
1268: dload         53
1270: invokevirtual #58
1273: ldc           #59
1275: invokevirtual #57
1278: ldc2_w        #636
1281: invokevirtual #58
1284: ldc           #56
1286: invokevirtual #57
1289: invokevirtual #60
1292: dload         53
1294: ldc2_w        #636
1297: dcmpl
1298: ifne          1305
1301: iconst_1
1302: goto          1306
1305: iconst_0
1306: invokestatic  #61
1309: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test174
Start line: 7977
End line: 7981
Method source code: 
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(10.049874720119332d, 0.35427054092435967d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #638
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #639
32: ldc2_w        #162
35: invokespecial #25
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test175
Start line: 7984
End line: 7997
Method source code: 
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        double double7 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #641
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: new           #54
68: dup
69: invokespecial #55
72: ldc           #56
74: invokevirtual #57
77: iload_3
78: invokevirtual #62
81: ldc           #59
83: invokevirtual #57
86: iconst_0
87: invokevirtual #62
90: ldc           #56
92: invokevirtual #57
95: invokevirtual #60
98: iload_3
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #61
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: dload         4
124: invokevirtual #58
127: ldc           #59
129: invokevirtual #57
132: dconst_0
133: invokevirtual #58
136: ldc           #56
138: invokevirtual #57
141: invokevirtual #60
144: dload         4
146: dconst_0
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #61
159: new           #54
162: dup
163: invokespecial #55
166: ldc           #56
168: invokevirtual #57
171: iload         6
173: invokevirtual #62
176: ldc           #59
178: invokevirtual #57
181: iconst_0
182: invokevirtual #62
185: ldc           #56
187: invokevirtual #57
190: invokevirtual #60
193: iload         6
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #61
206: new           #54
209: dup
210: invokespecial #55
213: ldc           #56
215: invokevirtual #57
218: dload         7
220: invokevirtual #58
223: ldc           #59
225: invokevirtual #57
228: dconst_0
229: invokevirtual #58
232: ldc           #56
234: invokevirtual #57
237: invokevirtual #60
240: dload         7
242: dconst_0
243: dcmpl
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #61
255: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test176
Start line: 8000
End line: 8046
Method source code: 
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        double double31 = brentOptimizer3.computeObjectiveValue(0.3457432918138511d);
        double double32 = brentOptimizer3.getMin();
        int int33 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.33889607743961436d + "'", double31 == 0.33889607743961436d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 3.141592653589793d + "'", double32 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #642
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: ldc2_w        #643
209: invokevirtual #158
212: dstore        23
214: aload_2
215: invokevirtual #231
218: dstore        25
220: aload_2
221: invokevirtual #71
224: istore        27
226: new           #54
229: dup
230: invokespecial #55
233: ldc           #56
235: invokevirtual #57
238: iload_3
239: invokevirtual #62
242: ldc           #59
244: invokevirtual #57
247: iconst_0
248: invokevirtual #62
251: ldc           #56
253: invokevirtual #57
256: invokevirtual #60
259: iload_3
260: ifne          267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #61
271: aload         6
273: invokestatic  #47
276: aload         7
278: invokestatic  #47
281: aload         8
283: invokestatic  #47
286: aload         9
288: invokestatic  #47
291: aload         10
293: invokestatic  #47
296: new           #54
299: dup
300: invokespecial #55
303: ldc           #56
305: invokevirtual #57
308: aload         11
310: invokevirtual #82
313: ldc           #59
315: invokevirtual #57
318: getstatic     #78
321: invokevirtual #82
324: ldc           #56
326: invokevirtual #57
329: invokevirtual #60
332: aload         11
334: getstatic     #78
337: invokevirtual #83
340: invokestatic  #61
343: aload         12
345: invokestatic  #47
348: aload         13
350: invokestatic  #47
353: new           #54
356: dup
357: invokespecial #55
360: ldc           #56
362: invokevirtual #57
365: aload         14
367: invokevirtual #82
370: ldc           #59
372: invokevirtual #57
375: getstatic     #78
378: invokevirtual #82
381: ldc           #56
383: invokevirtual #57
386: invokevirtual #60
389: aload         14
391: getstatic     #78
394: invokevirtual #83
397: invokestatic  #61
400: aload         15
402: invokestatic  #47
405: aload         17
407: invokestatic  #47
410: new           #54
413: dup
414: invokespecial #55
417: ldc           #56
419: invokevirtual #57
422: aload         18
424: invokevirtual #82
427: ldc           #59
429: invokevirtual #57
432: getstatic     #78
435: invokevirtual #82
438: ldc           #56
440: invokevirtual #57
443: invokevirtual #60
446: aload         18
448: getstatic     #78
451: invokevirtual #83
454: invokestatic  #61
457: aload         19
459: invokestatic  #47
462: new           #54
465: dup
466: invokespecial #55
469: ldc           #56
471: invokevirtual #57
474: dload         20
476: invokevirtual #58
479: ldc           #59
481: invokevirtual #57
484: dconst_0
485: invokevirtual #58
488: ldc           #56
490: invokevirtual #57
493: invokevirtual #60
496: dload         20
498: dconst_0
499: dcmpl
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #61
511: new           #54
514: dup
515: invokespecial #55
518: ldc           #56
520: invokevirtual #57
523: iload         22
525: invokevirtual #62
528: ldc           #59
530: invokevirtual #57
533: iconst_1
534: invokevirtual #62
537: ldc           #56
539: invokevirtual #57
542: invokevirtual #60
545: iload         22
547: iconst_1
548: if_icmpne     555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #61
559: new           #54
562: dup
563: invokespecial #55
566: ldc           #56
568: invokevirtual #57
571: dload         23
573: invokevirtual #58
576: ldc           #59
578: invokevirtual #57
581: ldc2_w        #645
584: invokevirtual #58
587: ldc           #56
589: invokevirtual #57
592: invokevirtual #60
595: dload         23
597: ldc2_w        #645
600: dcmpl
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #61
612: new           #54
615: dup
616: invokespecial #55
619: ldc           #56
621: invokevirtual #57
624: dload         25
626: invokevirtual #58
629: ldc           #59
631: invokevirtual #57
634: ldc2_w        #133
637: invokevirtual #58
640: ldc           #56
642: invokevirtual #57
645: invokevirtual #60
648: dload         25
650: ldc2_w        #133
653: dcmpl
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #61
665: new           #54
668: dup
669: invokespecial #55
672: ldc           #56
674: invokevirtual #57
677: iload         27
679: invokevirtual #62
682: ldc           #59
684: invokevirtual #57
687: iconst_2
688: invokevirtual #62
691: ldc           #56
693: invokevirtual #57
696: invokevirtual #60
699: iload         27
701: iconst_2
702: if_icmpne     709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #61
713: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test177
Start line: 8049
End line: 8115
Method source code: 
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = sin6.derivative();
        double double9 = sin6.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = sin6.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin6.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer15 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker14);
        int int16 = brentOptimizer15.getMaxEvaluations();
        double double17 = brentOptimizer15.getMax();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin19, sin20, sin22, sin23 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer30 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker29);
        int int31 = brentOptimizer30.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray36 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable37 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray36);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray36);
        org.apache.commons.math3.optimization.GoalType goalType40 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer30.optimize(97, univariateFunction39, goalType40, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer30.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType46 = brentOptimizer30.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer15.optimize((int) ' ', univariateFunction26, goalType46, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair52 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin6, goalType46, 2.7182818284590446d, (double) 100);
        int int53 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker54 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.8414709825806044d + "'", double9 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray36);
        org.junit.Assert.assertNotNull(univariateDifferentiable37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateFunction39);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair44);
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
        org.junit.Assert.assertTrue("'" + goalType46 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType46.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair49);
        org.junit.Assert.assertNotNull(univariatePointValuePair52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker54);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #647
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        5
56: aload         5
58: invokevirtual #74
61: astore        6
63: aload         5
65: ldc2_w        #86
68: invokevirtual #88
71: dstore        7
73: aload         5
75: invokevirtual #74
78: astore        9
80: aload         5
82: invokevirtual #74
85: astore        10
87: aconst_null
88: astore        11
90: new           #8
93: dup
94: ldc2_w        #31
97: ldc2_w        #33
100: aload         11
102: invokespecial #13
105: astore        12
107: aload         12
109: invokevirtual #50
112: istore        13
114: aload         12
116: invokevirtual #49
119: dstore        14
121: new           #72
124: dup
125: invokespecial #73
128: astore        16
130: new           #72
133: dup
134: invokespecial #73
137: astore        17
139: aload         17
141: invokevirtual #74
144: astore        18
146: new           #72
149: dup
150: invokespecial #73
153: astore        19
155: new           #72
158: dup
159: invokespecial #73
162: astore        20
164: iconst_4
165: anewarray     #75
168: dup
169: iconst_0
170: aload         16
172: aastore
173: dup
174: iconst_1
175: aload         17
177: aastore
178: dup
179: iconst_2
180: aload         19
182: aastore
183: dup
184: iconst_3
185: aload         20
187: aastore
188: astore        21
190: aload         21
192: invokestatic  #76
195: astore        22
197: aload         21
199: checkcast     #89
202: invokestatic  #109
205: astore        23
207: aconst_null
208: astore        24
210: new           #8
213: dup
214: ldc2_w        #31
217: ldc2_w        #33
220: aload         24
222: invokespecial #13
225: astore        25
227: aload         25
229: invokevirtual #71
232: istore        26
234: new           #72
237: dup
238: invokespecial #73
241: astore        27
243: new           #72
246: dup
247: invokespecial #73
250: astore        28
252: aload         28
254: invokevirtual #74
257: astore        29
259: iconst_2
260: anewarray     #75
263: dup
264: iconst_0
265: aload         27
267: aastore
268: dup
269: iconst_1
270: aload         28
272: aastore
273: astore        30
275: aload         30
277: invokestatic  #76
280: astore        31
282: aload         30
284: invokestatic  #77
287: astore        32
289: aload         30
291: checkcast     #89
294: invokestatic  #90
297: astore        33
299: getstatic     #78
302: astore        34
304: aload         25
306: bipush        97
308: aload         33
310: aload         34
312: ldc2_w        #91
315: ldc2_w        #93
318: ldc2_w        #91
321: invokevirtual #44
324: astore        35
326: aload         25
328: invokevirtual #51
331: astore        36
333: aload         25
335: invokevirtual #110
338: astore        37
340: aload         12
342: bipush        32
344: aload         23
346: aload         37
348: ldc2_w        #173
351: ldc2_w        #175
354: invokevirtual #81
357: astore        38
359: aload_2
360: bipush        10
362: aload         5
364: aload         37
366: ldc2_w        #409
369: ldc2_w        #153
372: invokevirtual #81
375: astore        39
377: aload_2
378: invokevirtual #71
381: istore        40
383: aload_2
384: invokevirtual #103
387: astore        41
389: new           #54
392: dup
393: invokespecial #55
396: ldc           #56
398: invokevirtual #57
401: dload_3
402: invokevirtual #58
405: ldc           #59
407: invokevirtual #57
410: dconst_0
411: invokevirtual #58
414: ldc           #56
416: invokevirtual #57
419: invokevirtual #60
422: dload_3
423: dconst_0
424: dcmpl
425: ifne          432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #61
436: aload         6
438: invokestatic  #47
441: new           #54
444: dup
445: invokespecial #55
448: ldc           #56
450: invokevirtual #57
453: dload         7
455: invokevirtual #58
458: ldc           #59
460: invokevirtual #57
463: ldc2_w        #23
466: invokevirtual #58
469: ldc           #56
471: invokevirtual #57
474: invokevirtual #60
477: dload         7
479: ldc2_w        #23
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #61
494: aload         9
496: invokestatic  #47
499: aload         10
501: invokestatic  #47
504: new           #54
507: dup
508: invokespecial #55
511: ldc           #56
513: invokevirtual #57
516: iload         13
518: invokevirtual #62
521: ldc           #59
523: invokevirtual #57
526: iconst_0
527: invokevirtual #62
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: iload         13
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #61
551: new           #54
554: dup
555: invokespecial #55
558: ldc           #56
560: invokevirtual #57
563: dload         14
565: invokevirtual #58
568: ldc           #59
570: invokevirtual #57
573: dconst_0
574: invokevirtual #58
577: ldc           #56
579: invokevirtual #57
582: invokevirtual #60
585: dload         14
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #61
600: aload         18
602: invokestatic  #47
605: aload         21
607: invokestatic  #47
610: aload         22
612: invokestatic  #47
615: aload         23
617: invokestatic  #47
620: new           #54
623: dup
624: invokespecial #55
627: ldc           #56
629: invokevirtual #57
632: iload         26
634: invokevirtual #62
637: ldc           #59
639: invokevirtual #57
642: iconst_0
643: invokevirtual #62
646: ldc           #56
648: invokevirtual #57
651: invokevirtual #60
654: iload         26
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #61
667: aload         29
669: invokestatic  #47
672: aload         30
674: invokestatic  #47
677: aload         31
679: invokestatic  #47
682: aload         32
684: invokestatic  #47
687: aload         33
689: invokestatic  #47
692: new           #54
695: dup
696: invokespecial #55
699: ldc           #56
701: invokevirtual #57
704: aload         34
706: invokevirtual #82
709: ldc           #59
711: invokevirtual #57
714: getstatic     #78
717: invokevirtual #82
720: ldc           #56
722: invokevirtual #57
725: invokevirtual #60
728: aload         34
730: getstatic     #78
733: invokevirtual #83
736: invokestatic  #61
739: aload         35
741: invokestatic  #47
744: aload         36
746: invokestatic  #47
749: new           #54
752: dup
753: invokespecial #55
756: ldc           #56
758: invokevirtual #57
761: aload         37
763: invokevirtual #82
766: ldc           #59
768: invokevirtual #57
771: getstatic     #78
774: invokevirtual #82
777: ldc           #56
779: invokevirtual #57
782: invokevirtual #60
785: aload         37
787: getstatic     #78
790: invokevirtual #83
793: invokestatic  #61
796: aload         38
798: invokestatic  #47
801: aload         39
803: invokestatic  #47
806: new           #54
809: dup
810: invokespecial #55
813: ldc           #56
815: invokevirtual #57
818: iload         40
820: invokevirtual #62
823: ldc           #59
825: invokevirtual #57
828: bipush        7
830: invokevirtual #62
833: ldc           #56
835: invokevirtual #57
838: invokevirtual #60
841: iload         40
843: bipush        7
845: if_icmpne     852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #61
856: aload         41
858: invokestatic  #104
861: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test178
Start line: 8118
End line: 8137
Method source code: 
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        double double8 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        double double10 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #648
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #49
69: dstore        7
71: aload_2
72: invokevirtual #103
75: astore        9
77: aload_2
78: invokevirtual #177
81: dstore        10
83: new           #54
86: dup
87: invokespecial #55
90: ldc           #56
92: invokevirtual #57
95: iload_3
96: invokevirtual #62
99: ldc           #59
101: invokevirtual #57
104: iconst_0
105: invokevirtual #62
108: ldc           #56
110: invokevirtual #57
113: invokevirtual #60
116: iload_3
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #61
128: new           #54
131: dup
132: invokespecial #55
135: ldc           #56
137: invokevirtual #57
140: iload         4
142: invokevirtual #62
145: ldc           #59
147: invokevirtual #57
150: iconst_0
151: invokevirtual #62
154: ldc           #56
156: invokevirtual #57
159: invokevirtual #60
162: iload         4
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #61
175: new           #54
178: dup
179: invokespecial #55
182: ldc           #56
184: invokevirtual #57
187: iload         5
189: invokevirtual #62
192: ldc           #59
194: invokevirtual #57
197: iconst_0
198: invokevirtual #62
201: ldc           #56
203: invokevirtual #57
206: invokevirtual #60
209: iload         5
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #61
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: iload         6
236: invokevirtual #62
239: ldc           #59
241: invokevirtual #57
244: iconst_0
245: invokevirtual #62
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: iload         6
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #61
269: new           #54
272: dup
273: invokespecial #55
276: ldc           #56
278: invokevirtual #57
281: dload         7
283: invokevirtual #58
286: ldc           #59
288: invokevirtual #57
291: dconst_0
292: invokevirtual #58
295: ldc           #56
297: invokevirtual #57
300: invokevirtual #60
303: dload         7
305: dconst_0
306: dcmpl
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #61
318: aload         9
320: invokestatic  #104
323: new           #54
326: dup
327: invokespecial #55
330: ldc           #56
332: invokevirtual #57
335: dload         10
337: invokevirtual #58
340: ldc           #59
342: invokevirtual #57
345: dconst_0
346: invokevirtual #58
349: ldc           #56
351: invokevirtual #57
354: invokevirtual #60
357: dload         10
359: dconst_0
360: dcmpl
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #61
372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test179
Start line: 8140
End line: 8148
Method source code: 
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType4 = brentOptimizer2.getGoalType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #649
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #110
48: astore_3
49: new           #54
52: dup
53: invokespecial #55
56: ldc           #56
58: invokevirtual #57
61: iload_2
62: invokevirtual #62
65: ldc           #59
67: invokevirtual #57
70: iconst_0
71: invokevirtual #62
74: ldc           #56
76: invokevirtual #57
79: invokevirtual #60
82: iload_2
83: ifne          90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #61
94: aload_3
95: invokestatic  #104
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test180
Start line: 8151
End line: 8173
Method source code: 
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        int int8 = brentOptimizer3.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double double10 = brentOptimizer3.computeObjectiveValue(0.7904227392038957d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #650
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #50
69: istore        7
71: aload_2
72: ldc2_w        #437
75: invokevirtual #158
78: dstore        8
80: ldc           #52
82: invokestatic  #15
85: goto          90
88: astore        8
90: new           #54
93: dup
94: invokespecial #55
97: ldc           #56
99: invokevirtual #57
102: iload_3
103: invokevirtual #62
106: ldc           #59
108: invokevirtual #57
111: iconst_0
112: invokevirtual #62
115: ldc           #56
117: invokevirtual #57
120: invokevirtual #60
123: iload_3
124: ifne          131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #61
135: new           #54
138: dup
139: invokespecial #55
142: ldc           #56
144: invokevirtual #57
147: iload         4
149: invokevirtual #62
152: ldc           #59
154: invokevirtual #57
157: iconst_0
158: invokevirtual #62
161: ldc           #56
163: invokevirtual #57
166: invokevirtual #60
169: iload         4
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #61
182: new           #54
185: dup
186: invokespecial #55
189: ldc           #56
191: invokevirtual #57
194: iload         5
196: invokevirtual #62
199: ldc           #59
201: invokevirtual #57
204: iconst_0
205: invokevirtual #62
208: ldc           #56
210: invokevirtual #57
213: invokevirtual #60
216: iload         5
218: ifne          225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #61
229: new           #54
232: dup
233: invokespecial #55
236: ldc           #56
238: invokevirtual #57
241: iload         6
243: invokevirtual #62
246: ldc           #59
248: invokevirtual #57
251: iconst_0
252: invokevirtual #62
255: ldc           #56
257: invokevirtual #57
260: invokevirtual #60
263: iload         6
265: ifne          272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #61
276: new           #54
279: dup
280: invokespecial #55
283: ldc           #56
285: invokevirtual #57
288: iload         7
290: invokevirtual #62
293: ldc           #59
295: invokevirtual #57
298: iconst_0
299: invokevirtual #62
302: ldc           #56
304: invokevirtual #57
307: invokevirtual #60
310: iload         7
312: ifne          319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #61
323: return
Exception table:
from    to  target type
71    85    88   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test181
Start line: 8176
End line: 8259
Method source code: 
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(6.6917246496340396E41d, Double.NaN);
        int int3 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction5 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer9 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker8);
        int int10 = brentOptimizer9.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = sin13.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray15 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction18 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray15);
        org.apache.commons.math3.optimization.GoalType goalType19 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair23 = brentOptimizer9.optimize(97, univariateFunction18, goalType19, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer9.doOptimize();
        double double25 = brentOptimizer9.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable27 = null;
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin29.derivative();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray33 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin28, sin29, sin31, sin32 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray33);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException35 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable27, (java.lang.Object[]) univariateDifferentiableArray33);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray33);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer40 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker39);
        int int41 = brentOptimizer40.getEvaluations();
        int int42 = brentOptimizer40.getEvaluations();
        int int43 = brentOptimizer40.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction45 = null;
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin46, sin47, sin49, sin50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable54 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction45, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable54, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType57 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer40.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable54, goalType57, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer9.optimize((int) (byte) 100, univariateFunction36, goalType57, 1.2786363145140075E-4d, (-1.5596856728972892d), 2.2227587494850775E-162d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer2.optimize(12, univariateFunction5, goalType57, 4501.6451872627495d, 1.7320508075688772d, 4.2482910979143895d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray15);
        org.junit.Assert.assertNotNull(univariateDifferentiable16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(univariateFunction18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair23);
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.4210854715202004E-14d + "'", double25 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiable54);
        org.junit.Assert.assertNotNull(multivariateFunction56);
        org.junit.Assert.assertTrue("'" + goalType57 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType57.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair61);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #651
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #99
32: ldc2_w        #302
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aconst_null
45: astore_3
46: aconst_null
47: astore        4
49: new           #8
52: dup
53: ldc2_w        #31
56: ldc2_w        #33
59: aload         4
61: invokespecial #13
64: astore        5
66: aload         5
68: invokevirtual #71
71: istore        6
73: new           #72
76: dup
77: invokespecial #73
80: astore        7
82: new           #72
85: dup
86: invokespecial #73
89: astore        8
91: aload         8
93: invokevirtual #74
96: astore        9
98: iconst_2
99: anewarray     #75
102: dup
103: iconst_0
104: aload         7
106: aastore
107: dup
108: iconst_1
109: aload         8
111: aastore
112: astore        10
114: aload         10
116: invokestatic  #76
119: astore        11
121: aload         10
123: invokestatic  #77
126: astore        12
128: aload         10
130: checkcast     #89
133: invokestatic  #90
136: astore        13
138: getstatic     #78
141: astore        14
143: aload         5
145: bipush        97
147: aload         13
149: aload         14
151: ldc2_w        #91
154: ldc2_w        #93
157: ldc2_w        #91
160: invokevirtual #44
163: astore        15
165: aload         5
167: invokevirtual #51
170: astore        16
172: aload         5
174: invokevirtual #49
177: dstore        17
179: aconst_null
180: astore        19
182: new           #72
185: dup
186: invokespecial #73
189: astore        20
191: new           #72
194: dup
195: invokespecial #73
198: astore        21
200: aload         21
202: invokevirtual #74
205: astore        22
207: new           #72
210: dup
211: invokespecial #73
214: astore        23
216: new           #72
219: dup
220: invokespecial #73
223: astore        24
225: iconst_4
226: anewarray     #75
229: dup
230: iconst_0
231: aload         20
233: aastore
234: dup
235: iconst_1
236: aload         21
238: aastore
239: dup
240: iconst_2
241: aload         23
243: aastore
244: dup
245: iconst_3
246: aload         24
248: aastore
249: astore        25
251: aload         25
253: invokestatic  #76
256: astore        26
258: new           #122
261: dup
262: aload         19
264: aload         25
266: checkcast     #123
269: invokespecial #124
272: astore        27
274: aload         25
276: checkcast     #89
279: invokestatic  #109
282: astore        28
284: aconst_null
285: astore        29
287: new           #8
290: dup
291: ldc2_w        #31
294: ldc2_w        #33
297: aload         29
299: invokespecial #13
302: astore        30
304: aload         30
306: invokevirtual #71
309: istore        31
311: aload         30
313: invokevirtual #71
316: istore        32
318: aload         30
320: invokevirtual #71
323: istore        33
325: aconst_null
326: astore        34
328: new           #72
331: dup
332: invokespecial #73
335: astore        35
337: new           #72
340: dup
341: invokespecial #73
344: astore        36
346: aload         36
348: invokevirtual #74
351: astore        37
353: new           #72
356: dup
357: invokespecial #73
360: astore        38
362: new           #72
365: dup
366: invokespecial #73
369: astore        39
371: iconst_4
372: anewarray     #75
375: dup
376: iconst_0
377: aload         35
379: aastore
380: dup
381: iconst_1
382: aload         36
384: aastore
385: dup
386: iconst_2
387: aload         38
389: aastore
390: dup
391: iconst_3
392: aload         39
394: aastore
395: astore        40
397: aload         40
399: invokestatic  #76
402: astore        41
404: aload         40
406: checkcast     #89
409: invokestatic  #109
412: astore        42
414: aload         40
416: invokestatic  #77
419: astore        43
421: aload         34
423: aload         43
425: ldc2_w        #181
428: invokestatic  #183
431: astore        44
433: getstatic     #118
436: astore        45
438: aload         30
440: bipush        10
442: aload         43
444: aload         45
446: ldc2_w        #184
449: ldc2_w        #186
452: ldc2_w        #188
455: invokevirtual #44
458: astore        46
460: aload         5
462: bipush        100
464: aload         28
466: aload         45
468: ldc2_w        #238
471: ldc2_w        #400
474: ldc2_w        #402
477: invokevirtual #44
480: astore        47
482: aload_1
483: bipush        12
485: aload_3
486: aload         45
488: ldc2_w        #652
491: ldc2_w        #654
494: ldc2_w        #656
497: invokevirtual #44
500: astore        48
502: ldc           #45
504: invokestatic  #15
507: goto          512
510: astore        48
512: new           #54
515: dup
516: invokespecial #55
519: ldc           #56
521: invokevirtual #57
524: iload_2
525: invokevirtual #62
528: ldc           #59
530: invokevirtual #57
533: iconst_0
534: invokevirtual #62
537: ldc           #56
539: invokevirtual #57
542: invokevirtual #60
545: iload_2
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #61
557: new           #54
560: dup
561: invokespecial #55
564: ldc           #56
566: invokevirtual #57
569: iload         6
571: invokevirtual #62
574: ldc           #59
576: invokevirtual #57
579: iconst_0
580: invokevirtual #62
583: ldc           #56
585: invokevirtual #57
588: invokevirtual #60
591: iload         6
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #61
604: aload         9
606: invokestatic  #47
609: aload         10
611: invokestatic  #47
614: aload         11
616: invokestatic  #47
619: aload         12
621: invokestatic  #47
624: aload         13
626: invokestatic  #47
629: new           #54
632: dup
633: invokespecial #55
636: ldc           #56
638: invokevirtual #57
641: aload         14
643: invokevirtual #82
646: ldc           #59
648: invokevirtual #57
651: getstatic     #78
654: invokevirtual #82
657: ldc           #56
659: invokevirtual #57
662: invokevirtual #60
665: aload         14
667: getstatic     #78
670: invokevirtual #83
673: invokestatic  #61
676: aload         15
678: invokestatic  #47
681: aload         16
683: invokestatic  #47
686: new           #54
689: dup
690: invokespecial #55
693: ldc           #56
695: invokevirtual #57
698: dload         17
700: invokevirtual #58
703: ldc           #59
705: invokevirtual #57
708: ldc2_w        #93
711: invokevirtual #58
714: ldc           #56
716: invokevirtual #57
719: invokevirtual #60
722: dload         17
724: ldc2_w        #93
727: dcmpl
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #61
739: aload         22
741: invokestatic  #47
744: aload         25
746: invokestatic  #47
749: aload         26
751: invokestatic  #47
754: aload         28
756: invokestatic  #47
759: new           #54
762: dup
763: invokespecial #55
766: ldc           #56
768: invokevirtual #57
771: iload         31
773: invokevirtual #62
776: ldc           #59
778: invokevirtual #57
781: iconst_0
782: invokevirtual #62
785: ldc           #56
787: invokevirtual #57
790: invokevirtual #60
793: iload         31
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #61
806: new           #54
809: dup
810: invokespecial #55
813: ldc           #56
815: invokevirtual #57
818: iload         32
820: invokevirtual #62
823: ldc           #59
825: invokevirtual #57
828: iconst_0
829: invokevirtual #62
832: ldc           #56
834: invokevirtual #57
837: invokevirtual #60
840: iload         32
842: ifne          849
845: iconst_1
846: goto          850
849: iconst_0
850: invokestatic  #61
853: new           #54
856: dup
857: invokespecial #55
860: ldc           #56
862: invokevirtual #57
865: iload         33
867: invokevirtual #62
870: ldc           #59
872: invokevirtual #57
875: iconst_0
876: invokevirtual #62
879: ldc           #56
881: invokevirtual #57
884: invokevirtual #60
887: iload         33
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #61
900: aload         37
902: invokestatic  #47
905: aload         40
907: invokestatic  #47
910: aload         41
912: invokestatic  #47
915: aload         42
917: invokestatic  #47
920: aload         43
922: invokestatic  #47
925: aload         44
927: invokestatic  #47
930: new           #54
933: dup
934: invokespecial #55
937: ldc           #56
939: invokevirtual #57
942: aload         45
944: invokevirtual #82
947: ldc           #59
949: invokevirtual #57
952: getstatic     #118
955: invokevirtual #82
958: ldc           #56
960: invokevirtual #57
963: invokevirtual #60
966: aload         45
968: getstatic     #118
971: invokevirtual #83
974: invokestatic  #61
977: aload         46
979: invokestatic  #47
982: aload         47
984: invokestatic  #47
987: return
Exception table:
from    to  target type
482   507   510   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test182
Start line: 8262
End line: 8291
Method source code: 
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #658
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #49
148: dstore        14
150: aload_2
151: invokevirtual #51
154: astore        16
156: new           #54
159: dup
160: invokespecial #55
163: ldc           #56
165: invokevirtual #57
168: iload_3
169: invokevirtual #62
172: ldc           #59
174: invokevirtual #57
177: iconst_0
178: invokevirtual #62
181: ldc           #56
183: invokevirtual #57
186: invokevirtual #60
189: iload_3
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #61
201: aload         6
203: invokestatic  #47
206: aload         7
208: invokestatic  #47
211: aload         8
213: invokestatic  #47
216: aload         9
218: invokestatic  #47
221: aload         10
223: invokestatic  #47
226: new           #54
229: dup
230: invokespecial #55
233: ldc           #56
235: invokevirtual #57
238: aload         11
240: invokevirtual #82
243: ldc           #59
245: invokevirtual #57
248: getstatic     #78
251: invokevirtual #82
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: aload         11
264: getstatic     #78
267: invokevirtual #83
270: invokestatic  #61
273: aload         12
275: invokestatic  #47
278: aload         13
280: invokestatic  #47
283: new           #54
286: dup
287: invokespecial #55
290: ldc           #56
292: invokevirtual #57
295: dload         14
297: invokevirtual #58
300: ldc           #59
302: invokevirtual #57
305: ldc2_w        #93
308: invokevirtual #58
311: ldc           #56
313: invokevirtual #57
316: invokevirtual #60
319: dload         14
321: ldc2_w        #93
324: dcmpl
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #61
336: aload         16
338: invokestatic  #47
341: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test183
Start line: 8294
End line: 8396
Method source code: 
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray49 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin44, sin45, sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray49);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, univariateDifferentiable32, univariateDifferentiable39, sin40, sin42, univariateDifferentiable50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException53 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable23, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException54 = new org.apache.commons.math3.exception.NullArgumentException(localizable22, (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer60 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker59);
        int int61 = brentOptimizer60.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin63, sin64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.GoalType goalType70 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer60.optimize(97, univariateFunction69, goalType70, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.optimize(17, univariateFunction56, goalType70, 99.99999999999999d, 2.238693057170856d, 0.8687261884639957d);
        int int79 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray49);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateFunction69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 17 + "'", int79 == 17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #659
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aconst_null
157: astore        16
159: aconst_null
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: new           #72
174: dup
175: invokespecial #73
178: astore        19
180: new           #72
183: dup
184: invokespecial #73
187: astore        20
189: aload         20
191: invokevirtual #74
194: astore        21
196: new           #72
199: dup
200: invokespecial #73
203: astore        22
205: new           #72
208: dup
209: invokespecial #73
212: astore        23
214: iconst_4
215: anewarray     #75
218: dup
219: iconst_0
220: aload         19
222: aastore
223: dup
224: iconst_1
225: aload         20
227: aastore
228: dup
229: iconst_2
230: aload         22
232: aastore
233: dup
234: iconst_3
235: aload         23
237: aastore
238: astore        24
240: aload         24
242: invokestatic  #76
245: astore        25
247: new           #72
250: dup
251: invokespecial #73
254: astore        26
256: new           #72
259: dup
260: invokespecial #73
263: astore        27
265: aload         27
267: invokevirtual #74
270: astore        28
272: new           #72
275: dup
276: invokespecial #73
279: astore        29
281: new           #72
284: dup
285: invokespecial #73
288: astore        30
290: iconst_4
291: anewarray     #75
294: dup
295: iconst_0
296: aload         26
298: aastore
299: dup
300: iconst_1
301: aload         27
303: aastore
304: dup
305: iconst_2
306: aload         29
308: aastore
309: dup
310: iconst_3
311: aload         30
313: aastore
314: astore        31
316: aload         31
318: invokestatic  #76
321: astore        32
323: new           #72
326: dup
327: invokespecial #73
330: astore        33
332: aload         33
334: invokevirtual #74
337: astore        34
339: new           #72
342: dup
343: invokespecial #73
346: astore        35
348: aload         35
350: invokevirtual #74
353: astore        36
355: new           #72
358: dup
359: invokespecial #73
362: astore        37
364: new           #72
367: dup
368: invokespecial #73
371: astore        38
373: aload         38
375: invokevirtual #74
378: astore        39
380: new           #72
383: dup
384: invokespecial #73
387: astore        40
389: new           #72
392: dup
393: invokespecial #73
396: astore        41
398: iconst_4
399: anewarray     #75
402: dup
403: iconst_0
404: aload         37
406: aastore
407: dup
408: iconst_1
409: aload         38
411: aastore
412: dup
413: iconst_2
414: aload         40
416: aastore
417: dup
418: iconst_3
419: aload         41
421: aastore
422: astore        42
424: aload         42
426: invokestatic  #76
429: astore        43
431: bipush        6
433: anewarray     #75
436: dup
437: iconst_0
438: aload         18
440: aastore
441: dup
442: iconst_1
443: aload         25
445: aastore
446: dup
447: iconst_2
448: aload         32
450: aastore
451: dup
452: iconst_3
453: aload         33
455: aastore
456: dup
457: iconst_4
458: aload         35
460: aastore
461: dup
462: iconst_5
463: aload         43
465: aastore
466: astore        44
468: aload         44
470: invokestatic  #77
473: astore        45
475: new           #313
478: dup
479: aload         17
481: ldc2_w        #219
484: invokestatic  #314
487: aload         44
489: checkcast     #123
492: invokespecial #315
495: astore        46
497: new           #46
500: dup
501: aload         16
503: aload         44
505: checkcast     #123
508: invokespecial #246
511: astore        47
513: aload         44
515: checkcast     #89
518: invokestatic  #117
521: astore        48
523: aload         44
525: checkcast     #89
528: invokestatic  #90
531: astore        49
533: aconst_null
534: astore        50
536: new           #8
539: dup
540: ldc2_w        #31
543: ldc2_w        #33
546: aload         50
548: invokespecial #13
551: astore        51
553: aload         51
555: invokevirtual #71
558: istore        52
560: new           #72
563: dup
564: invokespecial #73
567: astore        53
569: new           #72
572: dup
573: invokespecial #73
576: astore        54
578: aload         54
580: invokevirtual #74
583: astore        55
585: iconst_2
586: anewarray     #75
589: dup
590: iconst_0
591: aload         53
593: aastore
594: dup
595: iconst_1
596: aload         54
598: aastore
599: astore        56
601: aload         56
603: invokestatic  #76
606: astore        57
608: aload         56
610: invokestatic  #77
613: astore        58
615: aload         56
617: checkcast     #89
620: invokestatic  #90
623: astore        59
625: getstatic     #78
628: astore        60
630: aload         51
632: bipush        97
634: aload         59
636: aload         60
638: ldc2_w        #91
641: ldc2_w        #93
644: ldc2_w        #91
647: invokevirtual #44
650: astore        61
652: aload_2
653: bipush        17
655: aload         49
657: aload         60
659: ldc2_w        #507
662: ldc2_w        #509
665: ldc2_w        #511
668: invokevirtual #44
671: astore        62
673: aload_2
674: invokevirtual #50
677: istore        63
679: new           #54
682: dup
683: invokespecial #55
686: ldc           #56
688: invokevirtual #57
691: iload_3
692: invokevirtual #62
695: ldc           #59
697: invokevirtual #57
700: iconst_0
701: invokevirtual #62
704: ldc           #56
706: invokevirtual #57
709: invokevirtual #60
712: iload_3
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #61
724: aload         6
726: invokestatic  #47
729: aload         7
731: invokestatic  #47
734: aload         8
736: invokestatic  #47
739: aload         9
741: invokestatic  #47
744: aload         10
746: invokestatic  #47
749: new           #54
752: dup
753: invokespecial #55
756: ldc           #56
758: invokevirtual #57
761: aload         11
763: invokevirtual #82
766: ldc           #59
768: invokevirtual #57
771: getstatic     #78
774: invokevirtual #82
777: ldc           #56
779: invokevirtual #57
782: invokevirtual #60
785: aload         11
787: getstatic     #78
790: invokevirtual #83
793: invokestatic  #61
796: aload         12
798: invokestatic  #47
801: aload         13
803: invokestatic  #47
806: new           #54
809: dup
810: invokespecial #55
813: ldc           #56
815: invokevirtual #57
818: iload         14
820: invokevirtual #62
823: ldc           #59
825: invokevirtual #57
828: bipush        8
830: invokevirtual #62
833: ldc           #56
835: invokevirtual #57
838: invokevirtual #60
841: iload         14
843: bipush        8
845: if_icmpne     852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #61
856: new           #54
859: dup
860: invokespecial #55
863: ldc           #56
865: invokevirtual #57
868: iload         15
870: invokevirtual #62
873: ldc           #59
875: invokevirtual #57
878: bipush        8
880: invokevirtual #62
883: ldc           #56
885: invokevirtual #57
888: invokevirtual #60
891: iload         15
893: bipush        8
895: if_icmpne     902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #61
906: aload         21
908: invokestatic  #47
911: aload         24
913: invokestatic  #47
916: aload         25
918: invokestatic  #47
921: aload         28
923: invokestatic  #47
926: aload         31
928: invokestatic  #47
931: aload         32
933: invokestatic  #47
936: aload         34
938: invokestatic  #47
941: aload         36
943: invokestatic  #47
946: aload         39
948: invokestatic  #47
951: aload         42
953: invokestatic  #47
956: aload         43
958: invokestatic  #47
961: aload         44
963: invokestatic  #47
966: aload         45
968: invokestatic  #47
971: aload         48
973: invokestatic  #47
976: aload         49
978: invokestatic  #47
981: new           #54
984: dup
985: invokespecial #55
988: ldc           #56
990: invokevirtual #57
993: iload         52
995: invokevirtual #62
998: ldc           #59
1000: invokevirtual #57
1003: iconst_0
1004: invokevirtual #62
1007: ldc           #56
1009: invokevirtual #57
1012: invokevirtual #60
1015: iload         52
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #61
1028: aload         55
1030: invokestatic  #47
1033: aload         56
1035: invokestatic  #47
1038: aload         57
1040: invokestatic  #47
1043: aload         58
1045: invokestatic  #47
1048: aload         59
1050: invokestatic  #47
1053: new           #54
1056: dup
1057: invokespecial #55
1060: ldc           #56
1062: invokevirtual #57
1065: aload         60
1067: invokevirtual #82
1070: ldc           #59
1072: invokevirtual #57
1075: getstatic     #78
1078: invokevirtual #82
1081: ldc           #56
1083: invokevirtual #57
1086: invokevirtual #60
1089: aload         60
1091: getstatic     #78
1094: invokevirtual #83
1097: invokestatic  #61
1100: aload         61
1102: invokestatic  #47
1105: aload         62
1107: invokestatic  #47
1110: new           #54
1113: dup
1114: invokespecial #55
1117: ldc           #56
1119: invokevirtual #57
1122: iload         63
1124: invokevirtual #62
1127: ldc           #59
1129: invokevirtual #57
1132: bipush        17
1134: invokevirtual #62
1137: ldc           #56
1139: invokevirtual #57
1142: invokevirtual #60
1145: iload         63
1147: bipush        17
1149: if_icmpne     1156
1152: iconst_1
1153: goto          1157
1156: iconst_0
1157: invokestatic  #61
1160: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test184
Start line: 8399
End line: 8459
Method source code: 
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        int int21 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        double double26 = sin23.value((double) (short) 10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction27 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin23);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer31 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker30);
        int int32 = brentOptimizer31.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType33 = brentOptimizer31.getGoalType();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        double double38 = sin35.value(0.9999999958776927d);
        org.apache.commons.math3.optimization.GoalType goalType39 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair43 = brentOptimizer31.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin35, goalType39, 4.248291315986092d, 2.154434690031884d, (-0.0015270116852033055d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) sin23, goalType39, (double) (byte) 100, 0.013067598221937501d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.5440211108893698d) + "'", double26 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(goalType33);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.8414709825806044d + "'", double38 == 0.8414709825806044d);
        org.junit.Assert.assertTrue("'" + goalType39 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType39.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #660
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aload_2
157: invokevirtual #50
160: istore        16
162: new           #72
165: dup
166: invokespecial #73
169: astore        17
171: aload         17
173: invokevirtual #74
176: astore        18
178: aload         17
180: ldc2_w        #91
183: invokevirtual #88
186: dstore        19
188: aload         17
190: invokestatic  #281
193: astore        21
195: aconst_null
196: astore        22
198: new           #8
201: dup
202: ldc2_w        #31
205: ldc2_w        #33
208: aload         22
210: invokespecial #13
213: astore        23
215: aload         23
217: invokevirtual #71
220: istore        24
222: aload         23
224: invokevirtual #110
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: aload         26
247: ldc2_w        #86
250: invokevirtual #88
253: dstore        28
255: getstatic     #118
258: astore        30
260: aload         23
262: bipush        10
264: aload         26
266: aload         30
268: ldc2_w        #661
271: ldc2_w        #148
274: ldc2_w        #663
277: invokevirtual #44
280: astore        31
282: aload_2
283: iconst_0
284: aload         17
286: aload         30
288: ldc2_w        #153
291: ldc2_w        #665
294: invokevirtual #81
297: astore        32
299: ldc           #52
301: invokestatic  #15
304: goto          309
307: astore        32
309: new           #54
312: dup
313: invokespecial #55
316: ldc           #56
318: invokevirtual #57
321: iload_3
322: invokevirtual #62
325: ldc           #59
327: invokevirtual #57
330: iconst_0
331: invokevirtual #62
334: ldc           #56
336: invokevirtual #57
339: invokevirtual #60
342: iload_3
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #61
354: aload         6
356: invokestatic  #47
359: aload         7
361: invokestatic  #47
364: aload         8
366: invokestatic  #47
369: aload         9
371: invokestatic  #47
374: aload         10
376: invokestatic  #47
379: new           #54
382: dup
383: invokespecial #55
386: ldc           #56
388: invokevirtual #57
391: aload         11
393: invokevirtual #82
396: ldc           #59
398: invokevirtual #57
401: getstatic     #78
404: invokevirtual #82
407: ldc           #56
409: invokevirtual #57
412: invokevirtual #60
415: aload         11
417: getstatic     #78
420: invokevirtual #83
423: invokestatic  #61
426: aload         12
428: invokestatic  #47
431: aload         13
433: invokestatic  #47
436: new           #54
439: dup
440: invokespecial #55
443: ldc           #56
445: invokevirtual #57
448: iload         14
450: invokevirtual #62
453: ldc           #59
455: invokevirtual #57
458: bipush        8
460: invokevirtual #62
463: ldc           #56
465: invokevirtual #57
468: invokevirtual #60
471: iload         14
473: bipush        8
475: if_icmpne     482
478: iconst_1
479: goto          483
482: iconst_0
483: invokestatic  #61
486: new           #54
489: dup
490: invokespecial #55
493: ldc           #56
495: invokevirtual #57
498: iload         15
500: invokevirtual #62
503: ldc           #59
505: invokevirtual #57
508: bipush        8
510: invokevirtual #62
513: ldc           #56
515: invokevirtual #57
518: invokevirtual #60
521: iload         15
523: bipush        8
525: if_icmpne     532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #61
536: new           #54
539: dup
540: invokespecial #55
543: ldc           #56
545: invokevirtual #57
548: iload         16
550: invokevirtual #62
553: ldc           #59
555: invokevirtual #57
558: bipush        97
560: invokevirtual #62
563: ldc           #56
565: invokevirtual #57
568: invokevirtual #60
571: iload         16
573: bipush        97
575: if_icmpne     582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #61
586: aload         18
588: invokestatic  #47
591: new           #54
594: dup
595: invokespecial #55
598: ldc           #56
600: invokevirtual #57
603: dload         19
605: invokevirtual #58
608: ldc           #59
610: invokevirtual #57
613: ldc2_w        #406
616: invokevirtual #58
619: ldc           #56
621: invokevirtual #57
624: invokevirtual #60
627: dload         19
629: ldc2_w        #406
632: dcmpl
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #61
644: aload         21
646: invokestatic  #47
649: new           #54
652: dup
653: invokespecial #55
656: ldc           #56
658: invokevirtual #57
661: iload         24
663: invokevirtual #62
666: ldc           #59
668: invokevirtual #57
671: iconst_0
672: invokevirtual #62
675: ldc           #56
677: invokevirtual #57
680: invokevirtual #60
683: iload         24
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #61
696: aload         25
698: invokestatic  #104
701: aload         27
703: invokestatic  #47
706: new           #54
709: dup
710: invokespecial #55
713: ldc           #56
715: invokevirtual #57
718: dload         28
720: invokevirtual #58
723: ldc           #59
725: invokevirtual #57
728: ldc2_w        #23
731: invokevirtual #58
734: ldc           #56
736: invokevirtual #57
739: invokevirtual #60
742: dload         28
744: ldc2_w        #23
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #61
759: new           #54
762: dup
763: invokespecial #55
766: ldc           #56
768: invokevirtual #57
771: aload         30
773: invokevirtual #82
776: ldc           #59
778: invokevirtual #57
781: getstatic     #118
784: invokevirtual #82
787: ldc           #56
789: invokevirtual #57
792: invokevirtual #60
795: aload         30
797: getstatic     #118
800: invokevirtual #83
803: invokestatic  #61
806: aload         31
808: invokestatic  #47
811: return
Exception table:
from    to  target type
282   304   307   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test185
Start line: 8462
End line: 8476
Method source code: 
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 8L, 1.5707963267948968d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = brentOptimizer3.computeObjectiveValue(0.04580610375292024d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #667
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #596
34: ldc2_w        #598
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: ldc2_w        #668
51: invokevirtual #158
54: dstore        4
56: ldc           #52
58: invokestatic  #15
61: goto          66
64: astore        4
66: new           #54
69: dup
70: invokespecial #55
73: ldc           #56
75: invokevirtual #57
78: iload_3
79: invokevirtual #62
82: ldc           #59
84: invokevirtual #57
87: iconst_0
88: invokevirtual #62
91: ldc           #56
93: invokevirtual #57
96: invokevirtual #60
99: iload_3
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #61
111: return
Exception table:
from    to  target type
47    61    64   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test186
Start line: 8479
End line: 8583
Method source code: 
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray49 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin44, sin45, sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray49);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, univariateDifferentiable32, univariateDifferentiable39, sin40, sin42, univariateDifferentiable50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException53 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable23, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException54 = new org.apache.commons.math3.exception.NullArgumentException(localizable22, (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer60 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker59);
        int int61 = brentOptimizer60.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin63, sin64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.GoalType goalType70 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer60.optimize(97, univariateFunction69, goalType70, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.optimize(17, univariateFunction56, goalType70, 99.99999999999999d, 2.238693057170856d, 0.8687261884639957d);
        int int79 = brentOptimizer3.getEvaluations();
        double double80 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray49);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateFunction69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2.238693057170856d + "'", double80 == 2.238693057170856d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #670
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aconst_null
157: astore        16
159: aconst_null
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: new           #72
174: dup
175: invokespecial #73
178: astore        19
180: new           #72
183: dup
184: invokespecial #73
187: astore        20
189: aload         20
191: invokevirtual #74
194: astore        21
196: new           #72
199: dup
200: invokespecial #73
203: astore        22
205: new           #72
208: dup
209: invokespecial #73
212: astore        23
214: iconst_4
215: anewarray     #75
218: dup
219: iconst_0
220: aload         19
222: aastore
223: dup
224: iconst_1
225: aload         20
227: aastore
228: dup
229: iconst_2
230: aload         22
232: aastore
233: dup
234: iconst_3
235: aload         23
237: aastore
238: astore        24
240: aload         24
242: invokestatic  #76
245: astore        25
247: new           #72
250: dup
251: invokespecial #73
254: astore        26
256: new           #72
259: dup
260: invokespecial #73
263: astore        27
265: aload         27
267: invokevirtual #74
270: astore        28
272: new           #72
275: dup
276: invokespecial #73
279: astore        29
281: new           #72
284: dup
285: invokespecial #73
288: astore        30
290: iconst_4
291: anewarray     #75
294: dup
295: iconst_0
296: aload         26
298: aastore
299: dup
300: iconst_1
301: aload         27
303: aastore
304: dup
305: iconst_2
306: aload         29
308: aastore
309: dup
310: iconst_3
311: aload         30
313: aastore
314: astore        31
316: aload         31
318: invokestatic  #76
321: astore        32
323: new           #72
326: dup
327: invokespecial #73
330: astore        33
332: aload         33
334: invokevirtual #74
337: astore        34
339: new           #72
342: dup
343: invokespecial #73
346: astore        35
348: aload         35
350: invokevirtual #74
353: astore        36
355: new           #72
358: dup
359: invokespecial #73
362: astore        37
364: new           #72
367: dup
368: invokespecial #73
371: astore        38
373: aload         38
375: invokevirtual #74
378: astore        39
380: new           #72
383: dup
384: invokespecial #73
387: astore        40
389: new           #72
392: dup
393: invokespecial #73
396: astore        41
398: iconst_4
399: anewarray     #75
402: dup
403: iconst_0
404: aload         37
406: aastore
407: dup
408: iconst_1
409: aload         38
411: aastore
412: dup
413: iconst_2
414: aload         40
416: aastore
417: dup
418: iconst_3
419: aload         41
421: aastore
422: astore        42
424: aload         42
426: invokestatic  #76
429: astore        43
431: bipush        6
433: anewarray     #75
436: dup
437: iconst_0
438: aload         18
440: aastore
441: dup
442: iconst_1
443: aload         25
445: aastore
446: dup
447: iconst_2
448: aload         32
450: aastore
451: dup
452: iconst_3
453: aload         33
455: aastore
456: dup
457: iconst_4
458: aload         35
460: aastore
461: dup
462: iconst_5
463: aload         43
465: aastore
466: astore        44
468: aload         44
470: invokestatic  #77
473: astore        45
475: new           #313
478: dup
479: aload         17
481: ldc2_w        #219
484: invokestatic  #314
487: aload         44
489: checkcast     #123
492: invokespecial #315
495: astore        46
497: new           #46
500: dup
501: aload         16
503: aload         44
505: checkcast     #123
508: invokespecial #246
511: astore        47
513: aload         44
515: checkcast     #89
518: invokestatic  #117
521: astore        48
523: aload         44
525: checkcast     #89
528: invokestatic  #90
531: astore        49
533: aconst_null
534: astore        50
536: new           #8
539: dup
540: ldc2_w        #31
543: ldc2_w        #33
546: aload         50
548: invokespecial #13
551: astore        51
553: aload         51
555: invokevirtual #71
558: istore        52
560: new           #72
563: dup
564: invokespecial #73
567: astore        53
569: new           #72
572: dup
573: invokespecial #73
576: astore        54
578: aload         54
580: invokevirtual #74
583: astore        55
585: iconst_2
586: anewarray     #75
589: dup
590: iconst_0
591: aload         53
593: aastore
594: dup
595: iconst_1
596: aload         54
598: aastore
599: astore        56
601: aload         56
603: invokestatic  #76
606: astore        57
608: aload         56
610: invokestatic  #77
613: astore        58
615: aload         56
617: checkcast     #89
620: invokestatic  #90
623: astore        59
625: getstatic     #78
628: astore        60
630: aload         51
632: bipush        97
634: aload         59
636: aload         60
638: ldc2_w        #91
641: ldc2_w        #93
644: ldc2_w        #91
647: invokevirtual #44
650: astore        61
652: aload_2
653: bipush        17
655: aload         49
657: aload         60
659: ldc2_w        #507
662: ldc2_w        #509
665: ldc2_w        #511
668: invokevirtual #44
671: astore        62
673: aload_2
674: invokevirtual #71
677: istore        63
679: aload_2
680: invokevirtual #49
683: dstore        64
685: new           #54
688: dup
689: invokespecial #55
692: ldc           #56
694: invokevirtual #57
697: iload_3
698: invokevirtual #62
701: ldc           #59
703: invokevirtual #57
706: iconst_0
707: invokevirtual #62
710: ldc           #56
712: invokevirtual #57
715: invokevirtual #60
718: iload_3
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #61
730: aload         6
732: invokestatic  #47
735: aload         7
737: invokestatic  #47
740: aload         8
742: invokestatic  #47
745: aload         9
747: invokestatic  #47
750: aload         10
752: invokestatic  #47
755: new           #54
758: dup
759: invokespecial #55
762: ldc           #56
764: invokevirtual #57
767: aload         11
769: invokevirtual #82
772: ldc           #59
774: invokevirtual #57
777: getstatic     #78
780: invokevirtual #82
783: ldc           #56
785: invokevirtual #57
788: invokevirtual #60
791: aload         11
793: getstatic     #78
796: invokevirtual #83
799: invokestatic  #61
802: aload         12
804: invokestatic  #47
807: aload         13
809: invokestatic  #47
812: new           #54
815: dup
816: invokespecial #55
819: ldc           #56
821: invokevirtual #57
824: iload         14
826: invokevirtual #62
829: ldc           #59
831: invokevirtual #57
834: bipush        8
836: invokevirtual #62
839: ldc           #56
841: invokevirtual #57
844: invokevirtual #60
847: iload         14
849: bipush        8
851: if_icmpne     858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #61
862: new           #54
865: dup
866: invokespecial #55
869: ldc           #56
871: invokevirtual #57
874: iload         15
876: invokevirtual #62
879: ldc           #59
881: invokevirtual #57
884: bipush        8
886: invokevirtual #62
889: ldc           #56
891: invokevirtual #57
894: invokevirtual #60
897: iload         15
899: bipush        8
901: if_icmpne     908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #61
912: aload         21
914: invokestatic  #47
917: aload         24
919: invokestatic  #47
922: aload         25
924: invokestatic  #47
927: aload         28
929: invokestatic  #47
932: aload         31
934: invokestatic  #47
937: aload         32
939: invokestatic  #47
942: aload         34
944: invokestatic  #47
947: aload         36
949: invokestatic  #47
952: aload         39
954: invokestatic  #47
957: aload         42
959: invokestatic  #47
962: aload         43
964: invokestatic  #47
967: aload         44
969: invokestatic  #47
972: aload         45
974: invokestatic  #47
977: aload         48
979: invokestatic  #47
982: aload         49
984: invokestatic  #47
987: new           #54
990: dup
991: invokespecial #55
994: ldc           #56
996: invokevirtual #57
999: iload         52
1001: invokevirtual #62
1004: ldc           #59
1006: invokevirtual #57
1009: iconst_0
1010: invokevirtual #62
1013: ldc           #56
1015: invokevirtual #57
1018: invokevirtual #60
1021: iload         52
1023: ifne          1030
1026: iconst_1
1027: goto          1031
1030: iconst_0
1031: invokestatic  #61
1034: aload         55
1036: invokestatic  #47
1039: aload         56
1041: invokestatic  #47
1044: aload         57
1046: invokestatic  #47
1049: aload         58
1051: invokestatic  #47
1054: aload         59
1056: invokestatic  #47
1059: new           #54
1062: dup
1063: invokespecial #55
1066: ldc           #56
1068: invokevirtual #57
1071: aload         60
1073: invokevirtual #82
1076: ldc           #59
1078: invokevirtual #57
1081: getstatic     #78
1084: invokevirtual #82
1087: ldc           #56
1089: invokevirtual #57
1092: invokevirtual #60
1095: aload         60
1097: getstatic     #78
1100: invokevirtual #83
1103: invokestatic  #61
1106: aload         61
1108: invokestatic  #47
1111: aload         62
1113: invokestatic  #47
1116: new           #54
1119: dup
1120: invokespecial #55
1123: ldc           #56
1125: invokevirtual #57
1128: iload         63
1130: invokevirtual #62
1133: ldc           #59
1135: invokevirtual #57
1138: bipush        7
1140: invokevirtual #62
1143: ldc           #56
1145: invokevirtual #57
1148: invokevirtual #60
1151: iload         63
1153: bipush        7
1155: if_icmpne     1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #61
1166: new           #54
1169: dup
1170: invokespecial #55
1173: ldc           #56
1175: invokevirtual #57
1178: dload         64
1180: invokevirtual #58
1183: ldc           #59
1185: invokevirtual #57
1188: ldc2_w        #509
1191: invokevirtual #58
1194: ldc           #56
1196: invokevirtual #57
1199: invokevirtual #60
1202: dload         64
1204: ldc2_w        #509
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #61
1219: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test187
Start line: 8586
End line: 8602
Method source code: 
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = brentOptimizer3.computeObjectiveValue(5.656854249492381d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #671
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: ldc2_w        #555
57: invokevirtual #158
60: dstore        5
62: ldc           #52
64: invokestatic  #15
67: goto          72
70: astore        5
72: new           #54
75: dup
76: invokespecial #55
79: ldc           #56
81: invokevirtual #57
84: iload_3
85: invokevirtual #62
88: ldc           #59
90: invokevirtual #57
93: iconst_0
94: invokevirtual #62
97: ldc           #56
99: invokevirtual #57
102: invokevirtual #60
105: iload_3
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #61
117: new           #54
120: dup
121: invokespecial #55
124: ldc           #56
126: invokevirtual #57
129: iload         4
131: invokevirtual #62
134: ldc           #59
136: invokevirtual #57
139: iconst_0
140: invokevirtual #62
143: ldc           #56
145: invokevirtual #57
148: invokevirtual #60
151: iload         4
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #61
164: return
Exception table:
from    to  target type
53    67    70   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test188
Start line: 8605
End line: 8616
Method source code: 
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.7029154395420767d, 0.0d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #672
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #673
34: dconst_0
35: aload_1
36: invokespecial #13
39: astore_2
40: ldc_w         #424
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
27    46    49   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test189
Start line: 8619
End line: 8650
Method source code: 
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #675
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: aload_2
157: invokevirtual #51
160: astore        16
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: iload         14
303: invokevirtual #62
306: ldc           #59
308: invokevirtual #57
311: bipush        8
313: invokevirtual #62
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: iload         14
326: bipush        8
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #61
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: iload         15
353: invokevirtual #62
356: ldc           #59
358: invokevirtual #57
361: bipush        97
363: invokevirtual #62
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: iload         15
376: bipush        97
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #61
389: aload         16
391: invokestatic  #47
394: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test190
Start line: 8653
End line: 8659
Method source code: 
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(6.6917246496340396E41d, Double.NaN);
        int int3 = brentOptimizer2.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #676
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #99
32: ldc2_w        #302
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #50
43: istore_2
44: new           #54
47: dup
48: invokespecial #55
51: ldc           #56
53: invokevirtual #57
56: iload_2
57: invokevirtual #62
60: ldc           #59
62: invokevirtual #57
65: iconst_0
66: invokevirtual #62
69: ldc           #56
71: invokevirtual #57
74: invokevirtual #60
77: iload_2
78: ifne          85
81: iconst_1
82: goto          86
85: iconst_0
86: invokestatic  #61
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test191
Start line: 8662
End line: 8694
Method source code: 
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.9893582466233818d, 0.4738240626447961d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction4 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer8 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker7);
        int int9 = brentOptimizer8.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = sin12.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin11, sin12 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable16 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.optimization.GoalType goalType18 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair22 = brentOptimizer8.optimize(97, univariateFunction17, goalType18, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair26 = brentOptimizer2.optimize(97, univariateFunction4, goalType18, 0.0d, (-0.8942257319186149d), 2470318.2474673553d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateDifferentiable16);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertTrue("'" + goalType18 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType18.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #677
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #678
32: ldc2_w        #680
35: invokespecial #25
38: astore_1
39: aconst_null
40: astore_2
41: aconst_null
42: astore_3
43: new           #8
46: dup
47: ldc2_w        #31
50: ldc2_w        #33
53: aload_3
54: invokespecial #13
57: astore        4
59: aload         4
61: invokevirtual #71
64: istore        5
66: new           #72
69: dup
70: invokespecial #73
73: astore        6
75: new           #72
78: dup
79: invokespecial #73
82: astore        7
84: aload         7
86: invokevirtual #74
89: astore        8
91: iconst_2
92: anewarray     #75
95: dup
96: iconst_0
97: aload         6
99: aastore
100: dup
101: iconst_1
102: aload         7
104: aastore
105: astore        9
107: aload         9
109: invokestatic  #76
112: astore        10
114: aload         9
116: invokestatic  #77
119: astore        11
121: aload         9
123: checkcast     #89
126: invokestatic  #90
129: astore        12
131: getstatic     #78
134: astore        13
136: aload         4
138: bipush        97
140: aload         12
142: aload         13
144: ldc2_w        #91
147: ldc2_w        #93
150: ldc2_w        #91
153: invokevirtual #44
156: astore        14
158: aload_1
159: bipush        97
161: aload_2
162: aload         13
164: dconst_0
165: ldc2_w        #682
168: ldc2_w        #684
171: invokevirtual #44
174: astore        15
176: ldc           #45
178: invokestatic  #15
181: goto          186
184: astore        15
186: new           #54
189: dup
190: invokespecial #55
193: ldc           #56
195: invokevirtual #57
198: iload         5
200: invokevirtual #62
203: ldc           #59
205: invokevirtual #57
208: iconst_0
209: invokevirtual #62
212: ldc           #56
214: invokevirtual #57
217: invokevirtual #60
220: iload         5
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #61
233: aload         8
235: invokestatic  #47
238: aload         9
240: invokestatic  #47
243: aload         10
245: invokestatic  #47
248: aload         11
250: invokestatic  #47
253: aload         12
255: invokestatic  #47
258: new           #54
261: dup
262: invokespecial #55
265: ldc           #56
267: invokevirtual #57
270: aload         13
272: invokevirtual #82
275: ldc           #59
277: invokevirtual #57
280: getstatic     #78
283: invokevirtual #82
286: ldc           #56
288: invokevirtual #57
291: invokevirtual #60
294: aload         13
296: getstatic     #78
299: invokevirtual #83
302: invokestatic  #61
305: aload         14
307: invokestatic  #47
310: return
Exception table:
from    to  target type
158   181   184   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test192
Start line: 8697
End line: 8701
Method source code: 
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(49.313902756532976d, 69.77282434124179d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #686
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #687
32: ldc2_w        #689
35: invokespecial #25
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test193
Start line: 8704
End line: 8794
Method source code: 
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.9893582466233818d, 0.4738240626447961d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = brentOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.exception.NumberIsTooLargeException numberIsTooLargeException8 = new org.apache.commons.math3.exception.NumberIsTooLargeException((java.lang.Number) (short) -1, (java.lang.Number) 1, true);
        java.lang.Number number9 = numberIsTooLargeException8.getMax();
        java.lang.Number number10 = numberIsTooLargeException8.getArgument();
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException12 = new org.apache.commons.math3.exception.MaxCountExceededException((java.lang.Number) 100.0d);
        numberIsTooLargeException8.addSuppressed((java.lang.Throwable) maxCountExceededException12);
        java.lang.Number number14 = numberIsTooLargeException8.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable15 = null;
        org.apache.commons.math3.exception.util.Localizable localizable16 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray17 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction18 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray17);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction19 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction19, (double) '#');
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24, sin26, sin27 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray35 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin30, sin31, sin33, sin34 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable36 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray35);
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction38 = sin37.derivative();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = sin39.derivative();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray46 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin41, sin42, sin44, sin45 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin22, univariateDifferentiable29, univariateDifferentiable36, sin37, sin39, univariateDifferentiable47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction51 = sin50.derivative();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray56 = new org.apache.commons.math3.analysis.UnivariateFunction[] { differentiableUnivariateFunction18, univariateFunction21, univariateDifferentiable49, sin50, univariateFunction53, sin54 };
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateFunctionArray56);
        org.apache.commons.math3.exception.MathInternalError mathInternalError58 = new org.apache.commons.math3.exception.MathInternalError(localizable16, (java.lang.Object[]) univariateFunctionArray56);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException59 = new org.apache.commons.math3.exception.MathIllegalStateException((java.lang.Throwable) numberIsTooLargeException8, localizable15, (java.lang.Object[]) univariateFunctionArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateFunctionArray56);
        org.apache.commons.math3.optimization.GoalType goalType61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer2.optimize(7, univariateFunction60, goalType61, 0.02644543720403748d, (-0.0015270116852033055d), 2.802596928649634E-45d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker3);
        org.junit.Assert.assertEquals("'" + number9 + "' != '" + 1 + "'", number9, 1);
        org.junit.Assert.assertEquals("'" + number10 + "' != '" + (short) -1 + "'", number10, (short) -1);
        org.junit.Assert.assertEquals("'" + number14 + "' != '" + 1 + "'", number14, 1);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray17);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction18);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray35);
        org.junit.Assert.assertNotNull(univariateDifferentiable36);
        org.junit.Assert.assertNotNull(univariateFunction38);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction51);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunctionArray56);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertNotNull(univariateFunction60);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #691
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #678
32: ldc2_w        #680
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #103
43: astore_2
44: new           #692
47: dup
48: iconst_m1
49: invokestatic  #693
52: iconst_1
53: invokestatic  #554
56: iconst_1
57: invokespecial #694
60: astore_3
61: aload_3
62: invokevirtual #695
65: astore        4
67: aload_3
68: invokevirtual #696
71: astore        5
73: new           #313
76: dup
77: ldc2_w        #153
80: invokestatic  #314
83: invokespecial #697
86: astore        6
88: aload_3
89: aload         6
91: invokevirtual #698
94: aload_3
95: invokevirtual #695
98: astore        7
100: aconst_null
101: astore        8
103: aconst_null
104: astore        9
106: iconst_0
107: anewarray     #141
110: astore        10
112: aload         10
114: invokestatic  #142
117: astore        11
119: aconst_null
120: astore        12
122: aload         12
124: ldc2_w        #263
127: invokestatic  #37
130: astore        13
132: new           #72
135: dup
136: invokespecial #73
139: astore        14
141: new           #72
144: dup
145: invokespecial #73
148: astore        15
150: new           #72
153: dup
154: invokespecial #73
157: astore        16
159: aload         16
161: invokevirtual #74
164: astore        17
166: new           #72
169: dup
170: invokespecial #73
173: astore        18
175: new           #72
178: dup
179: invokespecial #73
182: astore        19
184: iconst_4
185: anewarray     #75
188: dup
189: iconst_0
190: aload         15
192: aastore
193: dup
194: iconst_1
195: aload         16
197: aastore
198: dup
199: iconst_2
200: aload         18
202: aastore
203: dup
204: iconst_3
205: aload         19
207: aastore
208: astore        20
210: aload         20
212: invokestatic  #76
215: astore        21
217: new           #72
220: dup
221: invokespecial #73
224: astore        22
226: new           #72
229: dup
230: invokespecial #73
233: astore        23
235: aload         23
237: invokevirtual #74
240: astore        24
242: new           #72
245: dup
246: invokespecial #73
249: astore        25
251: new           #72
254: dup
255: invokespecial #73
258: astore        26
260: iconst_4
261: anewarray     #75
264: dup
265: iconst_0
266: aload         22
268: aastore
269: dup
270: iconst_1
271: aload         23
273: aastore
274: dup
275: iconst_2
276: aload         25
278: aastore
279: dup
280: iconst_3
281: aload         26
283: aastore
284: astore        27
286: aload         27
288: invokestatic  #76
291: astore        28
293: new           #72
296: dup
297: invokespecial #73
300: astore        29
302: aload         29
304: invokevirtual #74
307: astore        30
309: new           #72
312: dup
313: invokespecial #73
316: astore        31
318: aload         31
320: invokevirtual #74
323: astore        32
325: new           #72
328: dup
329: invokespecial #73
332: astore        33
334: new           #72
337: dup
338: invokespecial #73
341: astore        34
343: aload         34
345: invokevirtual #74
348: astore        35
350: new           #72
353: dup
354: invokespecial #73
357: astore        36
359: new           #72
362: dup
363: invokespecial #73
366: astore        37
368: iconst_4
369: anewarray     #75
372: dup
373: iconst_0
374: aload         33
376: aastore
377: dup
378: iconst_1
379: aload         34
381: aastore
382: dup
383: iconst_2
384: aload         36
386: aastore
387: dup
388: iconst_3
389: aload         37
391: aastore
392: astore        38
394: aload         38
396: invokestatic  #76
399: astore        39
401: bipush        6
403: anewarray     #75
406: dup
407: iconst_0
408: aload         14
410: aastore
411: dup
412: iconst_1
413: aload         21
415: aastore
416: dup
417: iconst_2
418: aload         28
420: aastore
421: dup
422: iconst_3
423: aload         29
425: aastore
426: dup
427: iconst_4
428: aload         31
430: aastore
431: dup
432: iconst_5
433: aload         39
435: aastore
436: astore        40
438: aload         40
440: invokestatic  #77
443: astore        41
445: new           #72
448: dup
449: invokespecial #73
452: astore        42
454: aload         42
456: invokevirtual #74
459: astore        43
461: new           #72
464: dup
465: invokespecial #73
468: astore        44
470: aload         44
472: invokevirtual #74
475: astore        45
477: new           #72
480: dup
481: invokespecial #73
484: astore        46
486: aload         46
488: invokevirtual #74
491: astore        47
493: bipush        6
495: anewarray     #283
498: dup
499: iconst_0
500: aload         11
502: aastore
503: dup
504: iconst_1
505: aload         13
507: aastore
508: dup
509: iconst_2
510: aload         41
512: aastore
513: dup
514: iconst_3
515: aload         42
517: aastore
518: dup
519: iconst_4
520: aload         45
522: aastore
523: dup
524: iconst_5
525: aload         46
527: aastore
528: astore        48
530: aload         48
532: invokestatic  #109
535: astore        49
537: new           #125
540: dup
541: aload         9
543: aload         48
545: checkcast     #123
548: invokespecial #126
551: astore        50
553: new           #122
556: dup
557: aload_3
558: aload         8
560: aload         48
562: checkcast     #123
565: invokespecial #699
568: astore        51
570: aload         48
572: invokestatic  #109
575: astore        52
577: aconst_null
578: astore        53
580: aload_1
581: bipush        7
583: aload         52
585: aload         53
587: ldc2_w        #700
590: ldc2_w        #663
593: ldc2_w        #702
596: invokevirtual #44
599: astore        54
601: ldc           #45
603: invokestatic  #15
606: goto          611
609: astore        54
611: aload_2
612: invokestatic  #104
615: new           #54
618: dup
619: invokespecial #55
622: ldc           #56
624: invokevirtual #57
627: aload         4
629: invokevirtual #82
632: ldc           #59
634: invokevirtual #57
637: iconst_1
638: invokevirtual #62
641: ldc           #56
643: invokevirtual #57
646: invokevirtual #60
649: aload         4
651: iconst_1
652: invokestatic  #554
655: invokestatic  #704
658: new           #54
661: dup
662: invokespecial #55
665: ldc           #56
667: invokevirtual #57
670: aload         5
672: invokevirtual #82
675: ldc           #59
677: invokevirtual #57
680: iconst_m1
681: invokevirtual #62
684: ldc           #56
686: invokevirtual #57
689: invokevirtual #60
692: aload         5
694: iconst_m1
695: invokestatic  #693
698: invokestatic  #704
701: new           #54
704: dup
705: invokespecial #55
708: ldc           #56
710: invokevirtual #57
713: aload         7
715: invokevirtual #82
718: ldc           #59
720: invokevirtual #57
723: iconst_1
724: invokevirtual #62
727: ldc           #56
729: invokevirtual #57
732: invokevirtual #60
735: aload         7
737: iconst_1
738: invokestatic  #554
741: invokestatic  #704
744: aload         10
746: invokestatic  #47
749: aload         11
751: invokestatic  #47
754: aload         13
756: invokestatic  #47
759: aload         17
761: invokestatic  #47
764: aload         20
766: invokestatic  #47
769: aload         21
771: invokestatic  #47
774: aload         24
776: invokestatic  #47
779: aload         27
781: invokestatic  #47
784: aload         28
786: invokestatic  #47
789: aload         30
791: invokestatic  #47
794: aload         32
796: invokestatic  #47
799: aload         35
801: invokestatic  #47
804: aload         38
806: invokestatic  #47
809: aload         39
811: invokestatic  #47
814: aload         40
816: invokestatic  #47
819: aload         41
821: invokestatic  #47
824: aload         43
826: invokestatic  #47
829: aload         45
831: invokestatic  #47
834: aload         47
836: invokestatic  #47
839: aload         48
841: invokestatic  #47
844: aload         49
846: invokestatic  #47
849: aload         52
851: invokestatic  #47
854: return
Exception table:
from    to  target type
580   606   609   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test194
Start line: 8797
End line: 8832
Method source code: 
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getMaxEvaluations();
        int int20 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        int int22 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 12 + "'", int22 == 12);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #705
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #50
148: istore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: aload_2
157: invokevirtual #51
160: astore        16
162: aload_2
163: invokevirtual #71
166: istore        17
168: aload_2
169: invokevirtual #103
172: astore        18
174: new           #54
177: dup
178: invokespecial #55
181: ldc           #56
183: invokevirtual #57
186: iload_3
187: invokevirtual #62
190: ldc           #59
192: invokevirtual #57
195: iconst_0
196: invokevirtual #62
199: ldc           #56
201: invokevirtual #57
204: invokevirtual #60
207: iload_3
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #61
219: aload         6
221: invokestatic  #47
224: aload         7
226: invokestatic  #47
229: aload         8
231: invokestatic  #47
234: aload         9
236: invokestatic  #47
239: aload         10
241: invokestatic  #47
244: new           #54
247: dup
248: invokespecial #55
251: ldc           #56
253: invokevirtual #57
256: aload         11
258: invokevirtual #82
261: ldc           #59
263: invokevirtual #57
266: getstatic     #78
269: invokevirtual #82
272: ldc           #56
274: invokevirtual #57
277: invokevirtual #60
280: aload         11
282: getstatic     #78
285: invokevirtual #83
288: invokestatic  #61
291: aload         12
293: invokestatic  #47
296: aload         13
298: invokestatic  #47
301: new           #54
304: dup
305: invokespecial #55
308: ldc           #56
310: invokevirtual #57
313: iload         14
315: invokevirtual #62
318: ldc           #59
320: invokevirtual #57
323: bipush        97
325: invokevirtual #62
328: ldc           #56
330: invokevirtual #57
333: invokevirtual #60
336: iload         14
338: bipush        97
340: if_icmpne     347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #61
351: new           #54
354: dup
355: invokespecial #55
358: ldc           #56
360: invokevirtual #57
363: iload         15
365: invokevirtual #62
368: ldc           #59
370: invokevirtual #57
373: bipush        97
375: invokevirtual #62
378: ldc           #56
380: invokevirtual #57
383: invokevirtual #60
386: iload         15
388: bipush        97
390: if_icmpne     397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #61
401: aload         16
403: invokestatic  #47
406: new           #54
409: dup
410: invokespecial #55
413: ldc           #56
415: invokevirtual #57
418: iload         17
420: invokevirtual #62
423: ldc           #59
425: invokevirtual #57
428: bipush        12
430: invokevirtual #62
433: ldc           #56
435: invokevirtual #57
438: invokevirtual #60
441: iload         17
443: bipush        12
445: if_icmpne     452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #61
456: aload         18
458: invokestatic  #104
461: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test195
Start line: 8835
End line: 8861
Method source code: 
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        int int8 = brentOptimizer3.getMaxEvaluations();
        int int9 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker10 = brentOptimizer3.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair11 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #706
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #50
69: istore        9
71: aload_2
72: invokevirtual #50
75: istore        10
77: aload_2
78: invokevirtual #103
81: astore        11
83: aload_2
84: invokevirtual #51
87: astore        12
89: ldc           #52
91: invokestatic  #15
94: goto          99
97: astore        12
99: new           #54
102: dup
103: invokespecial #55
106: ldc           #56
108: invokevirtual #57
111: dload_3
112: invokevirtual #58
115: ldc           #59
117: invokevirtual #57
120: dconst_0
121: invokevirtual #58
124: ldc           #56
126: invokevirtual #57
129: invokevirtual #60
132: dload_3
133: dconst_0
134: dcmpl
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #61
146: new           #54
149: dup
150: invokespecial #55
153: ldc           #56
155: invokevirtual #57
158: iload         5
160: invokevirtual #62
163: ldc           #59
165: invokevirtual #57
168: iconst_0
169: invokevirtual #62
172: ldc           #56
174: invokevirtual #57
177: invokevirtual #60
180: iload         5
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #61
193: aload         6
195: invokestatic  #104
198: new           #54
201: dup
202: invokespecial #55
205: ldc           #56
207: invokevirtual #57
210: dload         7
212: invokevirtual #58
215: ldc           #59
217: invokevirtual #57
220: dconst_0
221: invokevirtual #58
224: ldc           #56
226: invokevirtual #57
229: invokevirtual #60
232: dload         7
234: dconst_0
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #61
247: new           #54
250: dup
251: invokespecial #55
254: ldc           #56
256: invokevirtual #57
259: iload         9
261: invokevirtual #62
264: ldc           #59
266: invokevirtual #57
269: iconst_0
270: invokevirtual #62
273: ldc           #56
275: invokevirtual #57
278: invokevirtual #60
281: iload         9
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #61
294: new           #54
297: dup
298: invokespecial #55
301: ldc           #56
303: invokevirtual #57
306: iload         10
308: invokevirtual #62
311: ldc           #59
313: invokevirtual #57
316: iconst_0
317: invokevirtual #62
320: ldc           #56
322: invokevirtual #57
325: invokevirtual #60
328: iload         10
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #61
341: aload         11
343: invokestatic  #104
346: return
Exception table:
from    to  target type
83    94    97   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test196
Start line: 8864
End line: 8879
Method source code: 
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        double double7 = brentOptimizer3.getMin();
        int int8 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #707
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #231
63: dstore        7
65: aload_2
66: invokevirtual #71
69: istore        9
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: iload_3
84: invokevirtual #62
87: ldc           #59
89: invokevirtual #57
92: iconst_0
93: invokevirtual #62
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: new           #54
119: dup
120: invokespecial #55
123: ldc           #56
125: invokevirtual #57
128: dload         4
130: invokevirtual #58
133: ldc           #59
135: invokevirtual #57
138: dconst_0
139: invokevirtual #58
142: ldc           #56
144: invokevirtual #57
147: invokevirtual #60
150: dload         4
152: dconst_0
153: dcmpl
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #61
165: new           #54
168: dup
169: invokespecial #55
172: ldc           #56
174: invokevirtual #57
177: iload         6
179: invokevirtual #62
182: ldc           #59
184: invokevirtual #57
187: iconst_0
188: invokevirtual #62
191: ldc           #56
193: invokevirtual #57
196: invokevirtual #60
199: iload         6
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #61
212: new           #54
215: dup
216: invokespecial #55
219: ldc           #56
221: invokevirtual #57
224: dload         7
226: invokevirtual #58
229: ldc           #59
231: invokevirtual #57
234: dconst_0
235: invokevirtual #58
238: ldc           #56
240: invokevirtual #57
243: invokevirtual #60
246: dload         7
248: dconst_0
249: dcmpl
250: ifne          257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #61
261: new           #54
264: dup
265: invokespecial #55
268: ldc           #56
270: invokevirtual #57
273: iload         9
275: invokevirtual #62
278: ldc           #59
280: invokevirtual #57
283: iconst_0
284: invokevirtual #62
287: ldc           #56
289: invokevirtual #57
292: invokevirtual #60
295: iload         9
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #61
308: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test197
Start line: 8882
End line: 8995
Method source code: 
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin51, sin52, sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray58 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, univariateDifferentiable39, univariateDifferentiable46, sin47, sin49, univariateDifferentiable57 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer63 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker62);
        int int64 = brentOptimizer63.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin67 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction68 = sin67.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray69 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin66, sin67 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable70 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable71 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray69);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer63.optimize(97, univariateFunction72, goalType73, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer63.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType79 = brentOptimizer63.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable59, goalType79, 0.0d, (double) (-127L), (-0.017453292519943295d));
        int int84 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType85 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker30);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(univariateFunction68);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray69);
        org.junit.Assert.assertNotNull(univariateDifferentiable70);
        org.junit.Assert.assertNotNull(univariateDifferentiable71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 32 + "'", int84 == 32);
        org.junit.Assert.assertTrue("'" + goalType85 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType85.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #708
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #103
209: astore        23
211: new           #72
214: dup
215: invokespecial #73
218: astore        24
220: new           #72
223: dup
224: invokespecial #73
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: new           #72
248: dup
249: invokespecial #73
252: astore        28
254: new           #72
257: dup
258: invokespecial #73
261: astore        29
263: iconst_4
264: anewarray     #75
267: dup
268: iconst_0
269: aload         25
271: aastore
272: dup
273: iconst_1
274: aload         26
276: aastore
277: dup
278: iconst_2
279: aload         28
281: aastore
282: dup
283: iconst_3
284: aload         29
286: aastore
287: astore        30
289: aload         30
291: invokestatic  #76
294: astore        31
296: new           #72
299: dup
300: invokespecial #73
303: astore        32
305: new           #72
308: dup
309: invokespecial #73
312: astore        33
314: aload         33
316: invokevirtual #74
319: astore        34
321: new           #72
324: dup
325: invokespecial #73
328: astore        35
330: new           #72
333: dup
334: invokespecial #73
337: astore        36
339: iconst_4
340: anewarray     #75
343: dup
344: iconst_0
345: aload         32
347: aastore
348: dup
349: iconst_1
350: aload         33
352: aastore
353: dup
354: iconst_2
355: aload         35
357: aastore
358: dup
359: iconst_3
360: aload         36
362: aastore
363: astore        37
365: aload         37
367: invokestatic  #76
370: astore        38
372: new           #72
375: dup
376: invokespecial #73
379: astore        39
381: aload         39
383: invokevirtual #74
386: astore        40
388: new           #72
391: dup
392: invokespecial #73
395: astore        41
397: aload         41
399: invokevirtual #74
402: astore        42
404: new           #72
407: dup
408: invokespecial #73
411: astore        43
413: new           #72
416: dup
417: invokespecial #73
420: astore        44
422: aload         44
424: invokevirtual #74
427: astore        45
429: new           #72
432: dup
433: invokespecial #73
436: astore        46
438: new           #72
441: dup
442: invokespecial #73
445: astore        47
447: iconst_4
448: anewarray     #75
451: dup
452: iconst_0
453: aload         43
455: aastore
456: dup
457: iconst_1
458: aload         44
460: aastore
461: dup
462: iconst_2
463: aload         46
465: aastore
466: dup
467: iconst_3
468: aload         47
470: aastore
471: astore        48
473: aload         48
475: invokestatic  #76
478: astore        49
480: bipush        6
482: anewarray     #75
485: dup
486: iconst_0
487: aload         24
489: aastore
490: dup
491: iconst_1
492: aload         31
494: aastore
495: dup
496: iconst_2
497: aload         38
499: aastore
500: dup
501: iconst_3
502: aload         39
504: aastore
505: dup
506: iconst_4
507: aload         41
509: aastore
510: dup
511: iconst_5
512: aload         49
514: aastore
515: astore        50
517: aload         50
519: invokestatic  #77
522: astore        51
524: aconst_null
525: astore        52
527: new           #8
530: dup
531: ldc2_w        #31
534: ldc2_w        #33
537: aload         52
539: invokespecial #13
542: astore        53
544: aload         53
546: invokevirtual #71
549: istore        54
551: new           #72
554: dup
555: invokespecial #73
558: astore        55
560: new           #72
563: dup
564: invokespecial #73
567: astore        56
569: aload         56
571: invokevirtual #74
574: astore        57
576: iconst_2
577: anewarray     #75
580: dup
581: iconst_0
582: aload         55
584: aastore
585: dup
586: iconst_1
587: aload         56
589: aastore
590: astore        58
592: aload         58
594: invokestatic  #76
597: astore        59
599: aload         58
601: invokestatic  #77
604: astore        60
606: aload         58
608: checkcast     #89
611: invokestatic  #90
614: astore        61
616: getstatic     #78
619: astore        62
621: aload         53
623: bipush        97
625: aload         61
627: aload         62
629: ldc2_w        #91
632: ldc2_w        #93
635: ldc2_w        #91
638: invokevirtual #44
641: astore        63
643: aload         53
645: invokevirtual #51
648: astore        64
650: aload         53
652: invokevirtual #110
655: astore        65
657: aload_2
658: bipush        32
660: aload         51
662: aload         65
664: dconst_0
665: ldc2_w        #290
668: ldc2_w        #427
671: invokevirtual #44
674: astore        66
676: aload_2
677: invokevirtual #50
680: istore        67
682: aload_2
683: invokevirtual #110
686: astore        68
688: new           #54
691: dup
692: invokespecial #55
695: ldc           #56
697: invokevirtual #57
700: iload_3
701: invokevirtual #62
704: ldc           #59
706: invokevirtual #57
709: iconst_0
710: invokevirtual #62
713: ldc           #56
715: invokevirtual #57
718: invokevirtual #60
721: iload_3
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #61
733: aload         6
735: invokestatic  #47
738: aload         7
740: invokestatic  #47
743: aload         8
745: invokestatic  #47
748: aload         9
750: invokestatic  #47
753: aload         10
755: invokestatic  #47
758: new           #54
761: dup
762: invokespecial #55
765: ldc           #56
767: invokevirtual #57
770: aload         11
772: invokevirtual #82
775: ldc           #59
777: invokevirtual #57
780: getstatic     #78
783: invokevirtual #82
786: ldc           #56
788: invokevirtual #57
791: invokevirtual #60
794: aload         11
796: getstatic     #78
799: invokevirtual #83
802: invokestatic  #61
805: aload         12
807: invokestatic  #47
810: aload         13
812: invokestatic  #47
815: new           #54
818: dup
819: invokespecial #55
822: ldc           #56
824: invokevirtual #57
827: aload         14
829: invokevirtual #82
832: ldc           #59
834: invokevirtual #57
837: getstatic     #78
840: invokevirtual #82
843: ldc           #56
845: invokevirtual #57
848: invokevirtual #60
851: aload         14
853: getstatic     #78
856: invokevirtual #83
859: invokestatic  #61
862: aload         15
864: invokestatic  #47
867: aload         17
869: invokestatic  #47
872: new           #54
875: dup
876: invokespecial #55
879: ldc           #56
881: invokevirtual #57
884: aload         18
886: invokevirtual #82
889: ldc           #59
891: invokevirtual #57
894: getstatic     #78
897: invokevirtual #82
900: ldc           #56
902: invokevirtual #57
905: invokevirtual #60
908: aload         18
910: getstatic     #78
913: invokevirtual #83
916: invokestatic  #61
919: aload         19
921: invokestatic  #47
924: new           #54
927: dup
928: invokespecial #55
931: ldc           #56
933: invokevirtual #57
936: dload         20
938: invokevirtual #58
941: ldc           #59
943: invokevirtual #57
946: dconst_0
947: invokevirtual #58
950: ldc           #56
952: invokevirtual #57
955: invokevirtual #60
958: dload         20
960: dconst_0
961: dcmpl
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #61
973: new           #54
976: dup
977: invokespecial #55
980: ldc           #56
982: invokevirtual #57
985: iload         22
987: invokevirtual #62
990: ldc           #59
992: invokevirtual #57
995: bipush        97
997: invokevirtual #62
1000: ldc           #56
1002: invokevirtual #57
1005: invokevirtual #60
1008: iload         22
1010: bipush        97
1012: if_icmpne     1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #61
1023: aload         23
1025: invokestatic  #104
1028: aload         27
1030: invokestatic  #47
1033: aload         30
1035: invokestatic  #47
1038: aload         31
1040: invokestatic  #47
1043: aload         34
1045: invokestatic  #47
1048: aload         37
1050: invokestatic  #47
1053: aload         38
1055: invokestatic  #47
1058: aload         40
1060: invokestatic  #47
1063: aload         42
1065: invokestatic  #47
1068: aload         45
1070: invokestatic  #47
1073: aload         48
1075: invokestatic  #47
1078: aload         49
1080: invokestatic  #47
1083: aload         50
1085: invokestatic  #47
1088: aload         51
1090: invokestatic  #47
1093: new           #54
1096: dup
1097: invokespecial #55
1100: ldc           #56
1102: invokevirtual #57
1105: iload         54
1107: invokevirtual #62
1110: ldc           #59
1112: invokevirtual #57
1115: iconst_0
1116: invokevirtual #62
1119: ldc           #56
1121: invokevirtual #57
1124: invokevirtual #60
1127: iload         54
1129: ifne          1136
1132: iconst_1
1133: goto          1137
1136: iconst_0
1137: invokestatic  #61
1140: aload         57
1142: invokestatic  #47
1145: aload         58
1147: invokestatic  #47
1150: aload         59
1152: invokestatic  #47
1155: aload         60
1157: invokestatic  #47
1160: aload         61
1162: invokestatic  #47
1165: new           #54
1168: dup
1169: invokespecial #55
1172: ldc           #56
1174: invokevirtual #57
1177: aload         62
1179: invokevirtual #82
1182: ldc           #59
1184: invokevirtual #57
1187: getstatic     #78
1190: invokevirtual #82
1193: ldc           #56
1195: invokevirtual #57
1198: invokevirtual #60
1201: aload         62
1203: getstatic     #78
1206: invokevirtual #83
1209: invokestatic  #61
1212: aload         63
1214: invokestatic  #47
1217: aload         64
1219: invokestatic  #47
1222: new           #54
1225: dup
1226: invokespecial #55
1229: ldc           #56
1231: invokevirtual #57
1234: aload         65
1236: invokevirtual #82
1239: ldc           #59
1241: invokevirtual #57
1244: getstatic     #78
1247: invokevirtual #82
1250: ldc           #56
1252: invokevirtual #57
1255: invokevirtual #60
1258: aload         65
1260: getstatic     #78
1263: invokevirtual #83
1266: invokestatic  #61
1269: aload         66
1271: invokestatic  #47
1274: new           #54
1277: dup
1278: invokespecial #55
1281: ldc           #56
1283: invokevirtual #57
1286: iload         67
1288: invokevirtual #62
1291: ldc           #59
1293: invokevirtual #57
1296: bipush        32
1298: invokevirtual #62
1301: ldc           #56
1303: invokevirtual #57
1306: invokevirtual #60
1309: iload         67
1311: bipush        32
1313: if_icmpne     1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #61
1324: new           #54
1327: dup
1328: invokespecial #55
1331: ldc           #56
1333: invokevirtual #57
1336: aload         68
1338: invokevirtual #82
1341: ldc           #59
1343: invokevirtual #57
1346: getstatic     #78
1349: invokevirtual #82
1352: ldc           #56
1354: invokevirtual #57
1357: invokevirtual #60
1360: aload         68
1362: getstatic     #78
1365: invokevirtual #83
1368: invokestatic  #61
1371: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test198
Start line: 8998
End line: 9042
Method source code: 
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertNotNull(univariatePointValuePair31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #709
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: invokevirtual #51
215: astore        24
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         20
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         20
489: dconst_0
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #61
502: new           #54
505: dup
506: invokespecial #55
509: ldc           #56
511: invokevirtual #57
514: iload         22
516: invokevirtual #62
519: ldc           #59
521: invokevirtual #57
524: iconst_1
525: invokevirtual #62
528: ldc           #56
530: invokevirtual #57
533: invokevirtual #60
536: iload         22
538: iconst_1
539: if_icmpne     546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #61
550: aload         23
552: invokestatic  #47
555: aload         24
557: invokestatic  #47
560: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test199
Start line: 9045
End line: 9074
Method source code: 
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker20 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker19);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #710
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aload_2
145: invokevirtual #103
148: astore        14
150: aload_2
151: invokevirtual #103
154: astore        15
156: new           #54
159: dup
160: invokespecial #55
163: ldc           #56
165: invokevirtual #57
168: iload_3
169: invokevirtual #62
172: ldc           #59
174: invokevirtual #57
177: iconst_0
178: invokevirtual #62
181: ldc           #56
183: invokevirtual #57
186: invokevirtual #60
189: iload_3
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #61
201: aload         6
203: invokestatic  #47
206: aload         7
208: invokestatic  #47
211: aload         8
213: invokestatic  #47
216: aload         9
218: invokestatic  #47
221: aload         10
223: invokestatic  #47
226: new           #54
229: dup
230: invokespecial #55
233: ldc           #56
235: invokevirtual #57
238: aload         11
240: invokevirtual #82
243: ldc           #59
245: invokevirtual #57
248: getstatic     #78
251: invokevirtual #82
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: aload         11
264: getstatic     #78
267: invokevirtual #83
270: invokestatic  #61
273: aload         12
275: invokestatic  #47
278: new           #54
281: dup
282: invokespecial #55
285: ldc           #56
287: invokevirtual #57
290: iload         13
292: invokevirtual #62
295: ldc           #59
297: invokevirtual #57
300: bipush        97
302: invokevirtual #62
305: ldc           #56
307: invokevirtual #57
310: invokevirtual #60
313: iload         13
315: bipush        97
317: if_icmpne     324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #61
328: aload         14
330: invokestatic  #104
333: aload         15
335: invokestatic  #104
338: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test200
Start line: 9077
End line: 9146
Method source code: 
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        double double8 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction10 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(bivariateFunction10, 5.000000000000001d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer16 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker15);
        int int17 = brentOptimizer16.getMaxEvaluations();
        double double18 = brentOptimizer16.getMax();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray25 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin20, sin21, sin23, sin24 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray25);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray25);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer31 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker30);
        int int32 = brentOptimizer31.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray37 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin34, sin35 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray37);
        org.apache.commons.math3.optimization.GoalType goalType41 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer31.optimize(97, univariateFunction40, goalType41, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer31.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType47 = brentOptimizer31.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair50 = brentOptimizer16.optimize((int) ' ', univariateFunction27, goalType47, 4.000043427276863d, 1.3017526366697145d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer3.optimize((-45), univariateFunction12, goalType47, 1.7391304347826086d, (double) 515.0f, 0.3678794850260918d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-45) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray25);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertTrue("'" + goalType41 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType41.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
        org.junit.Assert.assertTrue("'" + goalType47 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType47.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair50);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #711
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #49
69: dstore        7
71: aconst_null
72: astore        9
74: aload         9
76: ldc2_w        #712
79: invokestatic  #37
82: astore        10
84: aconst_null
85: astore        11
87: new           #8
90: dup
91: ldc2_w        #31
94: ldc2_w        #33
97: aload         11
99: invokespecial #13
102: astore        12
104: aload         12
106: invokevirtual #50
109: istore        13
111: aload         12
113: invokevirtual #49
116: dstore        14
118: new           #72
121: dup
122: invokespecial #73
125: astore        16
127: new           #72
130: dup
131: invokespecial #73
134: astore        17
136: aload         17
138: invokevirtual #74
141: astore        18
143: new           #72
146: dup
147: invokespecial #73
150: astore        19
152: new           #72
155: dup
156: invokespecial #73
159: astore        20
161: iconst_4
162: anewarray     #75
165: dup
166: iconst_0
167: aload         16
169: aastore
170: dup
171: iconst_1
172: aload         17
174: aastore
175: dup
176: iconst_2
177: aload         19
179: aastore
180: dup
181: iconst_3
182: aload         20
184: aastore
185: astore        21
187: aload         21
189: invokestatic  #76
192: astore        22
194: aload         21
196: checkcast     #89
199: invokestatic  #109
202: astore        23
204: aconst_null
205: astore        24
207: new           #8
210: dup
211: ldc2_w        #31
214: ldc2_w        #33
217: aload         24
219: invokespecial #13
222: astore        25
224: aload         25
226: invokevirtual #71
229: istore        26
231: new           #72
234: dup
235: invokespecial #73
238: astore        27
240: new           #72
243: dup
244: invokespecial #73
247: astore        28
249: aload         28
251: invokevirtual #74
254: astore        29
256: iconst_2
257: anewarray     #75
260: dup
261: iconst_0
262: aload         27
264: aastore
265: dup
266: iconst_1
267: aload         28
269: aastore
270: astore        30
272: aload         30
274: invokestatic  #76
277: astore        31
279: aload         30
281: invokestatic  #77
284: astore        32
286: aload         30
288: checkcast     #89
291: invokestatic  #90
294: astore        33
296: getstatic     #78
299: astore        34
301: aload         25
303: bipush        97
305: aload         33
307: aload         34
309: ldc2_w        #91
312: ldc2_w        #93
315: ldc2_w        #91
318: invokevirtual #44
321: astore        35
323: aload         25
325: invokevirtual #51
328: astore        36
330: aload         25
332: invokevirtual #110
335: astore        37
337: aload         12
339: bipush        32
341: aload         23
343: aload         37
345: ldc2_w        #173
348: ldc2_w        #175
351: invokevirtual #81
354: astore        38
356: aload_2
357: bipush        -45
359: aload         10
361: aload         37
363: ldc2_w        #396
366: ldc2_w        #558
369: ldc2_w        #714
372: invokevirtual #44
375: astore        39
377: ldc_w         #286
380: invokestatic  #15
383: goto          388
386: astore        39
388: new           #54
391: dup
392: invokespecial #55
395: ldc           #56
397: invokevirtual #57
400: iload_3
401: invokevirtual #62
404: ldc           #59
406: invokevirtual #57
409: iconst_0
410: invokevirtual #62
413: ldc           #56
415: invokevirtual #57
418: invokevirtual #60
421: iload_3
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #61
433: new           #54
436: dup
437: invokespecial #55
440: ldc           #56
442: invokevirtual #57
445: iload         4
447: invokevirtual #62
450: ldc           #59
452: invokevirtual #57
455: iconst_0
456: invokevirtual #62
459: ldc           #56
461: invokevirtual #57
464: invokevirtual #60
467: iload         4
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #61
480: new           #54
483: dup
484: invokespecial #55
487: ldc           #56
489: invokevirtual #57
492: iload         5
494: invokevirtual #62
497: ldc           #59
499: invokevirtual #57
502: iconst_0
503: invokevirtual #62
506: ldc           #56
508: invokevirtual #57
511: invokevirtual #60
514: iload         5
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #61
527: new           #54
530: dup
531: invokespecial #55
534: ldc           #56
536: invokevirtual #57
539: iload         6
541: invokevirtual #62
544: ldc           #59
546: invokevirtual #57
549: iconst_0
550: invokevirtual #62
553: ldc           #56
555: invokevirtual #57
558: invokevirtual #60
561: iload         6
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #61
574: new           #54
577: dup
578: invokespecial #55
581: ldc           #56
583: invokevirtual #57
586: dload         7
588: invokevirtual #58
591: ldc           #59
593: invokevirtual #57
596: dconst_0
597: invokevirtual #58
600: ldc           #56
602: invokevirtual #57
605: invokevirtual #60
608: dload         7
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #61
623: aload         10
625: invokestatic  #47
628: new           #54
631: dup
632: invokespecial #55
635: ldc           #56
637: invokevirtual #57
640: iload         13
642: invokevirtual #62
645: ldc           #59
647: invokevirtual #57
650: iconst_0
651: invokevirtual #62
654: ldc           #56
656: invokevirtual #57
659: invokevirtual #60
662: iload         13
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #61
675: new           #54
678: dup
679: invokespecial #55
682: ldc           #56
684: invokevirtual #57
687: dload         14
689: invokevirtual #58
692: ldc           #59
694: invokevirtual #57
697: dconst_0
698: invokevirtual #58
701: ldc           #56
703: invokevirtual #57
706: invokevirtual #60
709: dload         14
711: dconst_0
712: dcmpl
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #61
724: aload         18
726: invokestatic  #47
729: aload         21
731: invokestatic  #47
734: aload         22
736: invokestatic  #47
739: aload         23
741: invokestatic  #47
744: new           #54
747: dup
748: invokespecial #55
751: ldc           #56
753: invokevirtual #57
756: iload         26
758: invokevirtual #62
761: ldc           #59
763: invokevirtual #57
766: iconst_0
767: invokevirtual #62
770: ldc           #56
772: invokevirtual #57
775: invokevirtual #60
778: iload         26
780: ifne          787
783: iconst_1
784: goto          788
787: iconst_0
788: invokestatic  #61
791: aload         29
793: invokestatic  #47
796: aload         30
798: invokestatic  #47
801: aload         31
803: invokestatic  #47
806: aload         32
808: invokestatic  #47
811: aload         33
813: invokestatic  #47
816: new           #54
819: dup
820: invokespecial #55
823: ldc           #56
825: invokevirtual #57
828: aload         34
830: invokevirtual #82
833: ldc           #59
835: invokevirtual #57
838: getstatic     #78
841: invokevirtual #82
844: ldc           #56
846: invokevirtual #57
849: invokevirtual #60
852: aload         34
854: getstatic     #78
857: invokevirtual #83
860: invokestatic  #61
863: aload         35
865: invokestatic  #47
868: aload         36
870: invokestatic  #47
873: new           #54
876: dup
877: invokespecial #55
880: ldc           #56
882: invokevirtual #57
885: aload         37
887: invokevirtual #82
890: ldc           #59
892: invokevirtual #57
895: getstatic     #78
898: invokevirtual #82
901: ldc           #56
903: invokevirtual #57
906: invokevirtual #60
909: aload         37
911: getstatic     #78
914: invokevirtual #83
917: invokestatic  #61
920: aload         38
922: invokestatic  #47
925: return
Exception table:
from    to  target type
356   383   386   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test201
Start line: 9149
End line: 9193
Method source code: 
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        double double31 = univariatePointValuePair30.getValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #716
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload         23
213: invokevirtual #616
216: dstore        24
218: new           #54
221: dup
222: invokespecial #55
225: ldc           #56
227: invokevirtual #57
230: iload_3
231: invokevirtual #62
234: ldc           #59
236: invokevirtual #57
239: iconst_0
240: invokevirtual #62
243: ldc           #56
245: invokevirtual #57
248: invokevirtual #60
251: iload_3
252: ifne          259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #61
263: aload         6
265: invokestatic  #47
268: aload         7
270: invokestatic  #47
273: aload         8
275: invokestatic  #47
278: aload         9
280: invokestatic  #47
283: aload         10
285: invokestatic  #47
288: new           #54
291: dup
292: invokespecial #55
295: ldc           #56
297: invokevirtual #57
300: aload         11
302: invokevirtual #82
305: ldc           #59
307: invokevirtual #57
310: getstatic     #78
313: invokevirtual #82
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: aload         11
326: getstatic     #78
329: invokevirtual #83
332: invokestatic  #61
335: aload         12
337: invokestatic  #47
340: aload         13
342: invokestatic  #47
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: aload         14
359: invokevirtual #82
362: ldc           #59
364: invokevirtual #57
367: getstatic     #78
370: invokevirtual #82
373: ldc           #56
375: invokevirtual #57
378: invokevirtual #60
381: aload         14
383: getstatic     #78
386: invokevirtual #83
389: invokestatic  #61
392: aload         15
394: invokestatic  #47
397: aload         17
399: invokestatic  #47
402: new           #54
405: dup
406: invokespecial #55
409: ldc           #56
411: invokevirtual #57
414: aload         18
416: invokevirtual #82
419: ldc           #59
421: invokevirtual #57
424: getstatic     #78
427: invokevirtual #82
430: ldc           #56
432: invokevirtual #57
435: invokevirtual #60
438: aload         18
440: getstatic     #78
443: invokevirtual #83
446: invokestatic  #61
449: aload         19
451: invokestatic  #47
454: new           #54
457: dup
458: invokespecial #55
461: ldc           #56
463: invokevirtual #57
466: dload         20
468: invokevirtual #58
471: ldc           #59
473: invokevirtual #57
476: dconst_0
477: invokevirtual #58
480: ldc           #56
482: invokevirtual #57
485: invokevirtual #60
488: dload         20
490: dconst_0
491: dcmpl
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #61
503: new           #54
506: dup
507: invokespecial #55
510: ldc           #56
512: invokevirtual #57
515: iload         22
517: invokevirtual #62
520: ldc           #59
522: invokevirtual #57
525: bipush        97
527: invokevirtual #62
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: iload         22
540: bipush        97
542: if_icmpne     549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #61
553: aload         23
555: invokestatic  #47
558: new           #54
561: dup
562: invokespecial #55
565: ldc           #56
567: invokevirtual #57
570: dload         24
572: invokevirtual #58
575: ldc           #59
577: invokevirtual #57
580: dconst_1
581: invokevirtual #58
584: ldc           #56
586: invokevirtual #57
589: invokevirtual #60
592: dload         24
594: dconst_1
595: dcmpl
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #61
607: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test202
Start line: 9196
End line: 9275
Method source code: 
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer24 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker23);
        int int25 = brentOptimizer24.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = sin28.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray30 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable31 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray30);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction33 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray30);
        org.apache.commons.math3.optimization.GoalType goalType34 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer24.optimize(97, univariateFunction33, goalType34, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer24.doOptimize();
        int int40 = brentOptimizer24.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable42 = null;
        org.apache.commons.math3.exception.util.Localizable localizable43 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray44 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction45 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray44);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException46 = new org.apache.commons.math3.exception.MathArithmeticException(localizable43, (java.lang.Object[]) differentiableUnivariateFunctionArray44);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray44);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException48 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable42, (java.lang.Object[]) differentiableUnivariateFunctionArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray44);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray44);
        org.apache.commons.math3.optimization.GoalType goalType51 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer24.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction50, goalType51, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable55 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction50);
        org.apache.commons.math3.optimization.GoalType goalType56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer3.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable55, goalType56, (double) (-11.999999f), 11014.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray30);
        org.junit.Assert.assertNotNull(univariateDifferentiable31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction33);
        org.junit.Assert.assertTrue("'" + goalType34 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType34.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 97 + "'", int40 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray44);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction45);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction47);
        org.junit.Assert.assertNotNull(univariateFunction49);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction50);
        org.junit.Assert.assertTrue("'" + goalType51 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType51.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariateDifferentiable55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #717
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #49
148: dstore        14
150: aconst_null
151: astore        16
153: new           #8
156: dup
157: ldc2_w        #31
160: ldc2_w        #33
163: aload         16
165: invokespecial #13
168: astore        17
170: aload         17
172: invokevirtual #71
175: istore        18
177: new           #72
180: dup
181: invokespecial #73
184: astore        19
186: new           #72
189: dup
190: invokespecial #73
193: astore        20
195: aload         20
197: invokevirtual #74
200: astore        21
202: iconst_2
203: anewarray     #75
206: dup
207: iconst_0
208: aload         19
210: aastore
211: dup
212: iconst_1
213: aload         20
215: aastore
216: astore        22
218: aload         22
220: invokestatic  #76
223: astore        23
225: aload         22
227: invokestatic  #77
230: astore        24
232: aload         22
234: checkcast     #89
237: invokestatic  #90
240: astore        25
242: getstatic     #78
245: astore        26
247: aload         17
249: bipush        97
251: aload         25
253: aload         26
255: ldc2_w        #91
258: ldc2_w        #93
261: ldc2_w        #91
264: invokevirtual #44
267: astore        27
269: aload         17
271: invokevirtual #51
274: astore        28
276: aload         17
278: invokevirtual #50
281: istore        29
283: aconst_null
284: astore        30
286: aconst_null
287: astore        31
289: iconst_0
290: anewarray     #141
293: astore        32
295: aload         32
297: invokestatic  #142
300: astore        33
302: new           #273
305: dup
306: aload         31
308: aload         32
310: checkcast     #123
313: invokespecial #274
316: astore        34
318: aload         32
320: invokestatic  #245
323: astore        35
325: new           #122
328: dup
329: aload         30
331: aload         32
333: checkcast     #123
336: invokespecial #124
339: astore        36
341: aload         32
343: checkcast     #89
346: invokestatic  #90
349: astore        37
351: aload         32
353: invokestatic  #142
356: astore        38
358: getstatic     #118
361: astore        39
363: aload         17
365: bipush        97
367: aload         38
369: aload         39
371: ldc2_w        #339
374: ldc2_w        #341
377: invokevirtual #81
380: astore        40
382: aload         38
384: invokestatic  #143
387: astore        41
389: aconst_null
390: astore        42
392: aload_2
393: bipush        97
395: aload         41
397: aload         42
399: ldc2_w        #718
402: ldc2_w        #64
405: invokevirtual #81
408: astore        43
410: ldc           #45
412: invokestatic  #15
415: goto          420
418: astore        43
420: new           #54
423: dup
424: invokespecial #55
427: ldc           #56
429: invokevirtual #57
432: iload_3
433: invokevirtual #62
436: ldc           #59
438: invokevirtual #57
441: iconst_0
442: invokevirtual #62
445: ldc           #56
447: invokevirtual #57
450: invokevirtual #60
453: iload_3
454: ifne          461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #61
465: aload         6
467: invokestatic  #47
470: aload         7
472: invokestatic  #47
475: aload         8
477: invokestatic  #47
480: aload         9
482: invokestatic  #47
485: aload         10
487: invokestatic  #47
490: new           #54
493: dup
494: invokespecial #55
497: ldc           #56
499: invokevirtual #57
502: aload         11
504: invokevirtual #82
507: ldc           #59
509: invokevirtual #57
512: getstatic     #78
515: invokevirtual #82
518: ldc           #56
520: invokevirtual #57
523: invokevirtual #60
526: aload         11
528: getstatic     #78
531: invokevirtual #83
534: invokestatic  #61
537: aload         12
539: invokestatic  #47
542: aload         13
544: invokestatic  #47
547: new           #54
550: dup
551: invokespecial #55
554: ldc           #56
556: invokevirtual #57
559: dload         14
561: invokevirtual #58
564: ldc           #59
566: invokevirtual #57
569: ldc2_w        #93
572: invokevirtual #58
575: ldc           #56
577: invokevirtual #57
580: invokevirtual #60
583: dload         14
585: ldc2_w        #93
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #61
600: new           #54
603: dup
604: invokespecial #55
607: ldc           #56
609: invokevirtual #57
612: iload         18
614: invokevirtual #62
617: ldc           #59
619: invokevirtual #57
622: iconst_0
623: invokevirtual #62
626: ldc           #56
628: invokevirtual #57
631: invokevirtual #60
634: iload         18
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #61
647: aload         21
649: invokestatic  #47
652: aload         22
654: invokestatic  #47
657: aload         23
659: invokestatic  #47
662: aload         24
664: invokestatic  #47
667: aload         25
669: invokestatic  #47
672: new           #54
675: dup
676: invokespecial #55
679: ldc           #56
681: invokevirtual #57
684: aload         26
686: invokevirtual #82
689: ldc           #59
691: invokevirtual #57
694: getstatic     #78
697: invokevirtual #82
700: ldc           #56
702: invokevirtual #57
705: invokevirtual #60
708: aload         26
710: getstatic     #78
713: invokevirtual #83
716: invokestatic  #61
719: aload         27
721: invokestatic  #47
724: aload         28
726: invokestatic  #47
729: new           #54
732: dup
733: invokespecial #55
736: ldc           #56
738: invokevirtual #57
741: iload         29
743: invokevirtual #62
746: ldc           #59
748: invokevirtual #57
751: bipush        97
753: invokevirtual #62
756: ldc           #56
758: invokevirtual #57
761: invokevirtual #60
764: iload         29
766: bipush        97
768: if_icmpne     775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #61
779: aload         32
781: invokestatic  #47
784: aload         33
786: invokestatic  #47
789: aload         35
791: invokestatic  #47
794: aload         37
796: invokestatic  #47
799: aload         38
801: invokestatic  #47
804: new           #54
807: dup
808: invokespecial #55
811: ldc           #56
813: invokevirtual #57
816: aload         39
818: invokevirtual #82
821: ldc           #59
823: invokevirtual #57
826: getstatic     #118
829: invokevirtual #82
832: ldc           #56
834: invokevirtual #57
837: invokevirtual #60
840: aload         39
842: getstatic     #118
845: invokevirtual #83
848: invokestatic  #61
851: aload         40
853: invokestatic  #47
856: aload         41
858: invokestatic  #47
861: return
Exception table:
from    to  target type
392   415   418   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test203
Start line: 9278
End line: 9293
Method source code: 
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getEvaluations();
        int int8 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #720
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #71
51: istore        5
53: aload_2
54: invokevirtual #71
57: istore        6
59: aload_2
60: invokevirtual #71
63: istore        7
65: aload_2
66: invokevirtual #71
69: istore        8
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: dload_3
84: invokevirtual #58
87: ldc           #59
89: invokevirtual #57
92: dconst_0
93: invokevirtual #58
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: dload_3
105: dconst_0
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #61
118: new           #54
121: dup
122: invokespecial #55
125: ldc           #56
127: invokevirtual #57
130: iload         5
132: invokevirtual #62
135: ldc           #59
137: invokevirtual #57
140: iconst_0
141: invokevirtual #62
144: ldc           #56
146: invokevirtual #57
149: invokevirtual #60
152: iload         5
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #61
165: new           #54
168: dup
169: invokespecial #55
172: ldc           #56
174: invokevirtual #57
177: iload         6
179: invokevirtual #62
182: ldc           #59
184: invokevirtual #57
187: iconst_0
188: invokevirtual #62
191: ldc           #56
193: invokevirtual #57
196: invokevirtual #60
199: iload         6
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #61
212: new           #54
215: dup
216: invokespecial #55
219: ldc           #56
221: invokevirtual #57
224: iload         7
226: invokevirtual #62
229: ldc           #59
231: invokevirtual #57
234: iconst_0
235: invokevirtual #62
238: ldc           #56
240: invokevirtual #57
243: invokevirtual #60
246: iload         7
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #61
259: new           #54
262: dup
263: invokespecial #55
266: ldc           #56
268: invokevirtual #57
271: iload         8
273: invokevirtual #62
276: ldc           #59
278: invokevirtual #57
281: iconst_0
282: invokevirtual #62
285: ldc           #56
287: invokevirtual #57
290: invokevirtual #60
293: iload         8
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #61
306: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test204
Start line: 9296
End line: 9302
Method source code: 
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(192.23056381465545d, 0.9999999999999999d);
        int int3 = brentOptimizer2.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #721
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #722
32: ldc2_w        #724
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #50
43: istore_2
44: new           #54
47: dup
48: invokespecial #55
51: ldc           #56
53: invokevirtual #57
56: iload_2
57: invokevirtual #62
60: ldc           #59
62: invokevirtual #57
65: iconst_0
66: invokevirtual #62
69: ldc           #56
71: invokevirtual #57
74: invokevirtual #60
77: iload_2
78: ifne          85
81: iconst_1
82: goto          86
85: iconst_0
86: invokestatic  #61
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test205
Start line: 9305
End line: 9315
Method source code: 
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-2864794.7735337033d), 1.7274287871510856d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -2,864,794.774 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #726
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #727
32: ldc2_w        #729
35: invokespecial #25
38: astore_1
39: ldc_w         #731
42: invokestatic  #15
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test206
Start line: 9318
End line: 9417
Method source code: 
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double74 = brentOptimizer3.getMin();
        int int75 = brentOptimizer3.getEvaluations();
        double double76 = brentOptimizer3.getStartValue();
        double double77 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.doOptimize();
        int int79 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.22766967171598d + "'", double74 == 5.22766967171598d);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 35.0d + "'", double76 == 35.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.4210854715202004E-14d + "'", double77 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 14 + "'", int79 == 14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #732
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #231
512: dstore        53
514: aload_2
515: invokevirtual #71
518: istore        55
520: aload_2
521: invokevirtual #177
524: dstore        56
526: aload_2
527: invokevirtual #49
530: dstore        58
532: aload_2
533: invokevirtual #51
536: astore        60
538: aload_2
539: invokevirtual #71
542: istore        61
544: new           #54
547: dup
548: invokespecial #55
551: ldc           #56
553: invokevirtual #57
556: iload_3
557: invokevirtual #62
560: ldc           #59
562: invokevirtual #57
565: iconst_0
566: invokevirtual #62
569: ldc           #56
571: invokevirtual #57
574: invokevirtual #60
577: iload_3
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #61
589: aload         6
591: invokestatic  #47
594: aload         7
596: invokestatic  #47
599: aload         8
601: invokestatic  #47
604: aload         9
606: invokestatic  #47
609: aload         10
611: invokestatic  #47
614: new           #54
617: dup
618: invokespecial #55
621: ldc           #56
623: invokevirtual #57
626: aload         11
628: invokevirtual #82
631: ldc           #59
633: invokevirtual #57
636: getstatic     #78
639: invokevirtual #82
642: ldc           #56
644: invokevirtual #57
647: invokevirtual #60
650: aload         11
652: getstatic     #78
655: invokevirtual #83
658: invokestatic  #61
661: aload         12
663: invokestatic  #47
666: aload         13
668: invokestatic  #47
671: new           #54
674: dup
675: invokespecial #55
678: ldc           #56
680: invokevirtual #57
683: aload         14
685: invokevirtual #82
688: ldc           #59
690: invokevirtual #57
693: getstatic     #78
696: invokevirtual #82
699: ldc           #56
701: invokevirtual #57
704: invokevirtual #60
707: aload         14
709: getstatic     #78
712: invokevirtual #83
715: invokestatic  #61
718: aload         15
720: invokestatic  #47
723: aload         17
725: invokestatic  #47
728: new           #54
731: dup
732: invokespecial #55
735: ldc           #56
737: invokevirtual #57
740: aload         18
742: invokevirtual #82
745: ldc           #59
747: invokevirtual #57
750: getstatic     #78
753: invokevirtual #82
756: ldc           #56
758: invokevirtual #57
761: invokevirtual #60
764: aload         18
766: getstatic     #78
769: invokevirtual #83
772: invokestatic  #61
775: aload         19
777: invokestatic  #47
780: new           #54
783: dup
784: invokespecial #55
787: ldc           #56
789: invokevirtual #57
792: dload         20
794: invokevirtual #58
797: ldc           #59
799: invokevirtual #57
802: dconst_0
803: invokevirtual #58
806: ldc           #56
808: invokevirtual #57
811: invokevirtual #60
814: dload         20
816: dconst_0
817: dcmpl
818: ifne          825
821: iconst_1
822: goto          826
825: iconst_0
826: invokestatic  #61
829: aload         23
831: invokestatic  #47
834: new           #54
837: dup
838: invokespecial #55
841: ldc           #56
843: invokevirtual #57
846: iload         26
848: invokevirtual #62
851: ldc           #59
853: invokevirtual #57
856: iconst_0
857: invokevirtual #62
860: ldc           #56
862: invokevirtual #57
865: invokevirtual #60
868: iload         26
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #61
881: new           #54
884: dup
885: invokespecial #55
888: ldc           #56
890: invokevirtual #57
893: dload         27
895: invokevirtual #58
898: ldc           #59
900: invokevirtual #57
903: dconst_0
904: invokevirtual #58
907: ldc           #56
909: invokevirtual #57
912: invokevirtual #60
915: dload         27
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #61
930: aload         31
932: invokestatic  #47
935: aload         34
937: invokestatic  #47
940: aload         35
942: invokestatic  #47
945: aload         36
947: invokestatic  #47
950: new           #54
953: dup
954: invokespecial #55
957: ldc           #56
959: invokevirtual #57
962: iload         39
964: invokevirtual #62
967: ldc           #59
969: invokevirtual #57
972: iconst_0
973: invokevirtual #62
976: ldc           #56
978: invokevirtual #57
981: invokevirtual #60
984: iload         39
986: ifne          993
989: iconst_1
990: goto          994
993: iconst_0
994: invokestatic  #61
997: aload         42
999: invokestatic  #47
1002: aload         43
1004: invokestatic  #47
1007: aload         44
1009: invokestatic  #47
1012: aload         45
1014: invokestatic  #47
1017: aload         46
1019: invokestatic  #47
1022: new           #54
1025: dup
1026: invokespecial #55
1029: ldc           #56
1031: invokevirtual #57
1034: aload         47
1036: invokevirtual #82
1039: ldc           #59
1041: invokevirtual #57
1044: getstatic     #78
1047: invokevirtual #82
1050: ldc           #56
1052: invokevirtual #57
1055: invokevirtual #60
1058: aload         47
1060: getstatic     #78
1063: invokevirtual #83
1066: invokestatic  #61
1069: aload         48
1071: invokestatic  #47
1074: aload         49
1076: invokestatic  #47
1079: new           #54
1082: dup
1083: invokespecial #55
1086: ldc           #56
1088: invokevirtual #57
1091: aload         50
1093: invokevirtual #82
1096: ldc           #59
1098: invokevirtual #57
1101: getstatic     #78
1104: invokevirtual #82
1107: ldc           #56
1109: invokevirtual #57
1112: invokevirtual #60
1115: aload         50
1117: getstatic     #78
1120: invokevirtual #83
1123: invokestatic  #61
1126: aload         51
1128: invokestatic  #47
1131: aload         52
1133: invokestatic  #47
1136: new           #54
1139: dup
1140: invokespecial #55
1143: ldc           #56
1145: invokevirtual #57
1148: dload         53
1150: invokevirtual #58
1153: ldc           #59
1155: invokevirtual #57
1158: ldc2_w        #472
1161: invokevirtual #58
1164: ldc           #56
1166: invokevirtual #57
1169: invokevirtual #60
1172: dload         53
1174: ldc2_w        #472
1177: dcmpl
1178: ifne          1185
1181: iconst_1
1182: goto          1186
1185: iconst_0
1186: invokestatic  #61
1189: new           #54
1192: dup
1193: invokespecial #55
1196: ldc           #56
1198: invokevirtual #57
1201: iload         55
1203: invokevirtual #62
1206: ldc           #59
1208: invokevirtual #57
1211: bipush        7
1213: invokevirtual #62
1216: ldc           #56
1218: invokevirtual #57
1221: invokevirtual #60
1224: iload         55
1226: bipush        7
1228: if_icmpne     1235
1231: iconst_1
1232: goto          1236
1235: iconst_0
1236: invokestatic  #61
1239: new           #54
1242: dup
1243: invokespecial #55
1246: ldc           #56
1248: invokevirtual #57
1251: dload         56
1253: invokevirtual #58
1256: ldc           #59
1258: invokevirtual #57
1261: ldc2_w        #263
1264: invokevirtual #58
1267: ldc           #56
1269: invokevirtual #57
1272: invokevirtual #60
1275: dload         56
1277: ldc2_w        #263
1280: dcmpl
1281: ifne          1288
1284: iconst_1
1285: goto          1289
1288: iconst_0
1289: invokestatic  #61
1292: new           #54
1295: dup
1296: invokespecial #55
1299: ldc           #56
1301: invokevirtual #57
1304: dload         58
1306: invokevirtual #58
1309: ldc           #59
1311: invokevirtual #57
1314: ldc2_w        #93
1317: invokevirtual #58
1320: ldc           #56
1322: invokevirtual #57
1325: invokevirtual #60
1328: dload         58
1330: ldc2_w        #93
1333: dcmpl
1334: ifne          1341
1337: iconst_1
1338: goto          1342
1341: iconst_0
1342: invokestatic  #61
1345: aload         60
1347: invokestatic  #47
1350: new           #54
1353: dup
1354: invokespecial #55
1357: ldc           #56
1359: invokevirtual #57
1362: iload         61
1364: invokevirtual #62
1367: ldc           #59
1369: invokevirtual #57
1372: bipush        14
1374: invokevirtual #62
1377: ldc           #56
1379: invokevirtual #57
1382: invokevirtual #60
1385: iload         61
1387: bipush        14
1389: if_icmpne     1396
1392: iconst_1
1393: goto          1397
1396: iconst_0
1397: invokestatic  #61
1400: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test207
Start line: 9420
End line: 9531
Method source code: 
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        org.apache.commons.math3.exception.util.Localizable localizable78 = null;
        org.apache.commons.math3.exception.util.Localizable localizable79 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray80 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction81 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException82 = new org.apache.commons.math3.exception.MathArithmeticException(localizable79, (java.lang.Object[]) differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction83 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException84 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable78, (java.lang.Object[]) differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction85 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction86 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.optimization.GoalType goalType87 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair90 = brentOptimizer3.optimize(97, univariateFunction86, goalType87, 101.0d, 1833.4649444186343d);
        double double91 = univariatePointValuePair90.getValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray80);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction81);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction83);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction85);
        org.junit.Assert.assertNotNull(univariateFunction86);
        org.junit.Assert.assertTrue("'" + goalType87 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType87.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1830.7747555151752d + "'", double91 == 1830.7747555151752d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #733
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aconst_null
587: astore        58
589: aconst_null
590: astore        59
592: iconst_0
593: anewarray     #141
596: astore        60
598: aload         60
600: invokestatic  #142
603: astore        61
605: new           #273
608: dup
609: aload         59
611: aload         60
613: checkcast     #123
616: invokespecial #274
619: astore        62
621: aload         60
623: invokestatic  #245
626: astore        63
628: new           #122
631: dup
632: aload         58
634: aload         60
636: checkcast     #123
639: invokespecial #124
642: astore        64
644: aload         60
646: invokestatic  #142
649: astore        65
651: aload         60
653: checkcast     #89
656: invokestatic  #90
659: astore        66
661: getstatic     #78
664: astore        67
666: aload_2
667: bipush        97
669: aload         66
671: aload         67
673: ldc2_w        #734
676: ldc2_w        #736
679: invokevirtual #81
682: astore        68
684: aload         68
686: invokevirtual #616
689: dstore        69
691: new           #54
694: dup
695: invokespecial #55
698: ldc           #56
700: invokevirtual #57
703: iload_3
704: invokevirtual #62
707: ldc           #59
709: invokevirtual #57
712: iconst_0
713: invokevirtual #62
716: ldc           #56
718: invokevirtual #57
721: invokevirtual #60
724: iload_3
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #61
736: aload         6
738: invokestatic  #47
741: aload         7
743: invokestatic  #47
746: aload         8
748: invokestatic  #47
751: aload         9
753: invokestatic  #47
756: aload         10
758: invokestatic  #47
761: new           #54
764: dup
765: invokespecial #55
768: ldc           #56
770: invokevirtual #57
773: aload         11
775: invokevirtual #82
778: ldc           #59
780: invokevirtual #57
783: getstatic     #78
786: invokevirtual #82
789: ldc           #56
791: invokevirtual #57
794: invokevirtual #60
797: aload         11
799: getstatic     #78
802: invokevirtual #83
805: invokestatic  #61
808: aload         12
810: invokestatic  #47
813: new           #54
816: dup
817: invokespecial #55
820: ldc           #56
822: invokevirtual #57
825: iload         13
827: invokevirtual #62
830: ldc           #59
832: invokevirtual #57
835: bipush        97
837: invokevirtual #62
840: ldc           #56
842: invokevirtual #57
845: invokevirtual #60
848: iload         13
850: bipush        97
852: if_icmpne     859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #61
863: aload         19
865: invokestatic  #47
868: aload         22
870: invokestatic  #47
873: aload         23
875: invokestatic  #47
878: aload         26
880: invokestatic  #47
883: aload         28
885: invokestatic  #47
888: new           #54
891: dup
892: invokespecial #55
895: ldc           #56
897: invokevirtual #57
900: iload         31
902: invokevirtual #62
905: ldc           #59
907: invokevirtual #57
910: iconst_0
911: invokevirtual #62
914: ldc           #56
916: invokevirtual #57
919: invokevirtual #60
922: iload         31
924: ifne          931
927: iconst_1
928: goto          932
931: iconst_0
932: invokestatic  #61
935: new           #54
938: dup
939: invokespecial #55
942: ldc           #56
944: invokevirtual #57
947: dload         32
949: invokevirtual #58
952: ldc           #59
954: invokevirtual #57
957: dconst_0
958: invokevirtual #58
961: ldc           #56
963: invokevirtual #57
966: invokevirtual #60
969: dload         32
971: dconst_0
972: dcmpl
973: ifne          980
976: iconst_1
977: goto          981
980: iconst_0
981: invokestatic  #61
984: aload         36
986: invokestatic  #47
989: aload         39
991: invokestatic  #47
994: aload         40
996: invokestatic  #47
999: aload         41
1001: invokestatic  #47
1004: new           #54
1007: dup
1008: invokespecial #55
1011: ldc           #56
1013: invokevirtual #57
1016: iload         44
1018: invokevirtual #62
1021: ldc           #59
1023: invokevirtual #57
1026: iconst_0
1027: invokevirtual #62
1030: ldc           #56
1032: invokevirtual #57
1035: invokevirtual #60
1038: iload         44
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #61
1051: aload         47
1053: invokestatic  #47
1056: aload         48
1058: invokestatic  #47
1061: aload         49
1063: invokestatic  #47
1066: aload         50
1068: invokestatic  #47
1071: aload         51
1073: invokestatic  #47
1076: new           #54
1079: dup
1080: invokespecial #55
1083: ldc           #56
1085: invokevirtual #57
1088: aload         52
1090: invokevirtual #82
1093: ldc           #59
1095: invokevirtual #57
1098: getstatic     #78
1101: invokevirtual #82
1104: ldc           #56
1106: invokevirtual #57
1109: invokevirtual #60
1112: aload         52
1114: getstatic     #78
1117: invokevirtual #83
1120: invokestatic  #61
1123: aload         53
1125: invokestatic  #47
1128: aload         54
1130: invokestatic  #47
1133: new           #54
1136: dup
1137: invokespecial #55
1140: ldc           #56
1142: invokevirtual #57
1145: aload         55
1147: invokevirtual #82
1150: ldc           #59
1152: invokevirtual #57
1155: getstatic     #78
1158: invokevirtual #82
1161: ldc           #56
1163: invokevirtual #57
1166: invokevirtual #60
1169: aload         55
1171: getstatic     #78
1174: invokevirtual #83
1177: invokestatic  #61
1180: aload         56
1182: invokestatic  #47
1185: aload         57
1187: invokestatic  #47
1190: aload         60
1192: invokestatic  #47
1195: aload         61
1197: invokestatic  #47
1200: aload         63
1202: invokestatic  #47
1205: aload         65
1207: invokestatic  #47
1210: aload         66
1212: invokestatic  #47
1215: new           #54
1218: dup
1219: invokespecial #55
1222: ldc           #56
1224: invokevirtual #57
1227: aload         67
1229: invokevirtual #82
1232: ldc           #59
1234: invokevirtual #57
1237: getstatic     #78
1240: invokevirtual #82
1243: ldc           #56
1245: invokevirtual #57
1248: invokevirtual #60
1251: aload         67
1253: getstatic     #78
1256: invokevirtual #83
1259: invokestatic  #61
1262: aload         68
1264: invokestatic  #47
1267: new           #54
1270: dup
1271: invokespecial #55
1274: ldc           #56
1276: invokevirtual #57
1279: dload         69
1281: invokevirtual #58
1284: ldc           #59
1286: invokevirtual #57
1289: ldc2_w        #738
1292: invokevirtual #58
1295: ldc           #56
1297: invokevirtual #57
1300: invokevirtual #60
1303: dload         69
1305: ldc2_w        #738
1308: dcmpl
1309: ifne          1316
1312: iconst_1
1313: goto          1317
1316: iconst_0
1317: invokestatic  #61
1320: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test208
Start line: 9534
End line: 9542
Method source code: 
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = brentOptimizer2.getConvergenceChecker();
        int int4 = brentOptimizer2.getMaxEvaluations();
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #740
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #103
43: astore_2
44: aload_1
45: invokevirtual #50
48: istore_3
49: aload_2
50: invokestatic  #104
53: new           #54
56: dup
57: invokespecial #55
60: ldc           #56
62: invokevirtual #57
65: iload_3
66: invokevirtual #62
69: ldc           #59
71: invokevirtual #57
74: iconst_0
75: invokevirtual #62
78: ldc           #56
80: invokevirtual #57
83: invokevirtual #60
86: iload_3
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #61
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test209
Start line: 9545
End line: 9555
Method source code: 
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 4, (-1.5807959934815619d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -1.581 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #741
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #334
32: ldc2_w        #742
35: invokespecial #25
38: astore_1
39: ldc_w         #744
42: invokestatic  #15
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test210
Start line: 9558
End line: 9643
Method source code: 
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        double double21 = brentOptimizer3.computeObjectiveValue(20.000000953674316d);
        int int22 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction24 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(bivariateFunction24, 1.695228608386943d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer30 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker29);
        int int31 = brentOptimizer30.getMaxEvaluations();
        double double32 = brentOptimizer30.getMax();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray39 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin34, sin35, sin37, sin38 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray39);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker44 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer45 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker44);
        int int46 = brentOptimizer45.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin48, sin49 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable53 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction54 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.GoalType goalType55 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer45.optimize(97, univariateFunction54, goalType55, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair60 = brentOptimizer45.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType61 = brentOptimizer45.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer30.optimize((int) ' ', univariateFunction41, goalType61, 4.000043427276863d, 1.3017526366697145d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair67 = brentOptimizer3.optimize(524, univariateFunction26, goalType61, (double) (-45), (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.7913081858681398d + "'", double21 == 0.7913081858681398d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateDifferentiable53);
        org.junit.Assert.assertNotNull(univariateFunction54);
        org.junit.Assert.assertTrue("'" + goalType55 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType55.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
        org.junit.Assert.assertNotNull(univariatePointValuePair60);
        org.junit.Assert.assertTrue("'" + goalType61 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType61.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #745
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: ldc2_w        #165
154: invokevirtual #158
157: dstore        15
159: aload_2
160: invokevirtual #71
163: istore        17
165: aconst_null
166: astore        18
168: aload         18
170: ldc2_w        #373
173: invokestatic  #152
176: astore        19
178: aconst_null
179: astore        20
181: new           #8
184: dup
185: ldc2_w        #31
188: ldc2_w        #33
191: aload         20
193: invokespecial #13
196: astore        21
198: aload         21
200: invokevirtual #50
203: istore        22
205: aload         21
207: invokevirtual #49
210: dstore        23
212: new           #72
215: dup
216: invokespecial #73
219: astore        25
221: new           #72
224: dup
225: invokespecial #73
228: astore        26
230: aload         26
232: invokevirtual #74
235: astore        27
237: new           #72
240: dup
241: invokespecial #73
244: astore        28
246: new           #72
249: dup
250: invokespecial #73
253: astore        29
255: iconst_4
256: anewarray     #75
259: dup
260: iconst_0
261: aload         25
263: aastore
264: dup
265: iconst_1
266: aload         26
268: aastore
269: dup
270: iconst_2
271: aload         28
273: aastore
274: dup
275: iconst_3
276: aload         29
278: aastore
279: astore        30
281: aload         30
283: invokestatic  #76
286: astore        31
288: aload         30
290: checkcast     #89
293: invokestatic  #109
296: astore        32
298: aconst_null
299: astore        33
301: new           #8
304: dup
305: ldc2_w        #31
308: ldc2_w        #33
311: aload         33
313: invokespecial #13
316: astore        34
318: aload         34
320: invokevirtual #71
323: istore        35
325: new           #72
328: dup
329: invokespecial #73
332: astore        36
334: new           #72
337: dup
338: invokespecial #73
341: astore        37
343: aload         37
345: invokevirtual #74
348: astore        38
350: iconst_2
351: anewarray     #75
354: dup
355: iconst_0
356: aload         36
358: aastore
359: dup
360: iconst_1
361: aload         37
363: aastore
364: astore        39
366: aload         39
368: invokestatic  #76
371: astore        40
373: aload         39
375: invokestatic  #77
378: astore        41
380: aload         39
382: checkcast     #89
385: invokestatic  #90
388: astore        42
390: getstatic     #78
393: astore        43
395: aload         34
397: bipush        97
399: aload         42
401: aload         43
403: ldc2_w        #91
406: ldc2_w        #93
409: ldc2_w        #91
412: invokevirtual #44
415: astore        44
417: aload         34
419: invokevirtual #51
422: astore        45
424: aload         34
426: invokevirtual #110
429: astore        46
431: aload         21
433: bipush        32
435: aload         32
437: aload         46
439: ldc2_w        #173
442: ldc2_w        #175
445: invokevirtual #81
448: astore        47
450: aload_2
451: sipush        524
454: aload         19
456: aload         46
458: ldc2_w        #746
461: dconst_1
462: invokevirtual #81
465: astore        48
467: ldc           #119
469: invokestatic  #15
472: goto          477
475: astore        48
477: new           #54
480: dup
481: invokespecial #55
484: ldc           #56
486: invokevirtual #57
489: iload_3
490: invokevirtual #62
493: ldc           #59
495: invokevirtual #57
498: iconst_0
499: invokevirtual #62
502: ldc           #56
504: invokevirtual #57
507: invokevirtual #60
510: iload_3
511: ifne          518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #61
522: aload         6
524: invokestatic  #47
527: aload         7
529: invokestatic  #47
532: aload         8
534: invokestatic  #47
537: aload         9
539: invokestatic  #47
542: aload         10
544: invokestatic  #47
547: new           #54
550: dup
551: invokespecial #55
554: ldc           #56
556: invokevirtual #57
559: aload         11
561: invokevirtual #82
564: ldc           #59
566: invokevirtual #57
569: getstatic     #78
572: invokevirtual #82
575: ldc           #56
577: invokevirtual #57
580: invokevirtual #60
583: aload         11
585: getstatic     #78
588: invokevirtual #83
591: invokestatic  #61
594: aload         12
596: invokestatic  #47
599: aload         13
601: invokestatic  #47
604: new           #54
607: dup
608: invokespecial #55
611: ldc           #56
613: invokevirtual #57
616: aload         14
618: invokevirtual #82
621: ldc           #59
623: invokevirtual #57
626: getstatic     #78
629: invokevirtual #82
632: ldc           #56
634: invokevirtual #57
637: invokevirtual #60
640: aload         14
642: getstatic     #78
645: invokevirtual #83
648: invokestatic  #61
651: new           #54
654: dup
655: invokespecial #55
658: ldc           #56
660: invokevirtual #57
663: dload         15
665: invokevirtual #58
668: ldc           #59
670: invokevirtual #57
673: ldc2_w        #320
676: invokevirtual #58
679: ldc           #56
681: invokevirtual #57
684: invokevirtual #60
687: dload         15
689: ldc2_w        #320
692: dcmpl
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #61
704: new           #54
707: dup
708: invokespecial #55
711: ldc           #56
713: invokevirtual #57
716: iload         17
718: invokevirtual #62
721: ldc           #59
723: invokevirtual #57
726: bipush        9
728: invokevirtual #62
731: ldc           #56
733: invokevirtual #57
736: invokevirtual #60
739: iload         17
741: bipush        9
743: if_icmpne     750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #61
754: aload         19
756: invokestatic  #47
759: new           #54
762: dup
763: invokespecial #55
766: ldc           #56
768: invokevirtual #57
771: iload         22
773: invokevirtual #62
776: ldc           #59
778: invokevirtual #57
781: iconst_0
782: invokevirtual #62
785: ldc           #56
787: invokevirtual #57
790: invokevirtual #60
793: iload         22
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #61
806: new           #54
809: dup
810: invokespecial #55
813: ldc           #56
815: invokevirtual #57
818: dload         23
820: invokevirtual #58
823: ldc           #59
825: invokevirtual #57
828: dconst_0
829: invokevirtual #58
832: ldc           #56
834: invokevirtual #57
837: invokevirtual #60
840: dload         23
842: dconst_0
843: dcmpl
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #61
855: aload         27
857: invokestatic  #47
860: aload         30
862: invokestatic  #47
865: aload         31
867: invokestatic  #47
870: aload         32
872: invokestatic  #47
875: new           #54
878: dup
879: invokespecial #55
882: ldc           #56
884: invokevirtual #57
887: iload         35
889: invokevirtual #62
892: ldc           #59
894: invokevirtual #57
897: iconst_0
898: invokevirtual #62
901: ldc           #56
903: invokevirtual #57
906: invokevirtual #60
909: iload         35
911: ifne          918
914: iconst_1
915: goto          919
918: iconst_0
919: invokestatic  #61
922: aload         38
924: invokestatic  #47
927: aload         39
929: invokestatic  #47
932: aload         40
934: invokestatic  #47
937: aload         41
939: invokestatic  #47
942: aload         42
944: invokestatic  #47
947: new           #54
950: dup
951: invokespecial #55
954: ldc           #56
956: invokevirtual #57
959: aload         43
961: invokevirtual #82
964: ldc           #59
966: invokevirtual #57
969: getstatic     #78
972: invokevirtual #82
975: ldc           #56
977: invokevirtual #57
980: invokevirtual #60
983: aload         43
985: getstatic     #78
988: invokevirtual #83
991: invokestatic  #61
994: aload         44
996: invokestatic  #47
999: aload         45
1001: invokestatic  #47
1004: new           #54
1007: dup
1008: invokespecial #55
1011: ldc           #56
1013: invokevirtual #57
1016: aload         46
1018: invokevirtual #82
1021: ldc           #59
1023: invokevirtual #57
1026: getstatic     #78
1029: invokevirtual #82
1032: ldc           #56
1034: invokevirtual #57
1037: invokevirtual #60
1040: aload         46
1042: getstatic     #78
1045: invokevirtual #83
1048: invokestatic  #61
1051: aload         47
1053: invokestatic  #47
1056: return
Exception table:
from    to  target type
450   472   475   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test211
Start line: 9646
End line: 9660
Method source code: 
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker5 = brentOptimizer2.getConvergenceChecker();
        int int6 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType7 = brentOptimizer2.getGoalType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(goalType7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #748
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #103
48: astore_3
49: aload_1
50: invokevirtual #103
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: aload_1
62: invokevirtual #110
65: astore        6
67: new           #54
70: dup
71: invokespecial #55
74: ldc           #56
76: invokevirtual #57
79: iload_2
80: invokevirtual #62
83: ldc           #59
85: invokevirtual #57
88: iconst_0
89: invokevirtual #62
92: ldc           #56
94: invokevirtual #57
97: invokevirtual #60
100: iload_2
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #61
112: aload_3
113: invokestatic  #104
116: aload         4
118: invokestatic  #104
121: new           #54
124: dup
125: invokespecial #55
128: ldc           #56
130: invokevirtual #57
133: iload         5
135: invokevirtual #62
138: ldc           #59
140: invokevirtual #57
143: iconst_0
144: invokevirtual #62
147: ldc           #56
149: invokevirtual #57
152: invokevirtual #60
155: iload         5
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #61
168: aload         6
170: invokestatic  #104
173: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test212
Start line: 9663
End line: 9703
Method source code: 
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, goalType20, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair25 = brentOptimizer3.doOptimize();
        int int26 = brentOptimizer3.getMaxEvaluations();
        int int27 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker28 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(multivariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertNotNull(univariatePointValuePair25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 4 + "'", int27 == 4);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #749
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aconst_null
60: astore        6
62: new           #72
65: dup
66: invokespecial #73
69: astore        7
71: new           #72
74: dup
75: invokespecial #73
78: astore        8
80: aload         8
82: invokevirtual #74
85: astore        9
87: new           #72
90: dup
91: invokespecial #73
94: astore        10
96: new           #72
99: dup
100: invokespecial #73
103: astore        11
105: iconst_4
106: anewarray     #75
109: dup
110: iconst_0
111: aload         7
113: aastore
114: dup
115: iconst_1
116: aload         8
118: aastore
119: dup
120: iconst_2
121: aload         10
123: aastore
124: dup
125: iconst_3
126: aload         11
128: aastore
129: astore        12
131: aload         12
133: invokestatic  #76
136: astore        13
138: aload         12
140: checkcast     #89
143: invokestatic  #109
146: astore        14
148: aload         12
150: invokestatic  #77
153: astore        15
155: aload         6
157: aload         15
159: ldc2_w        #181
162: invokestatic  #183
165: astore        16
167: getstatic     #118
170: astore        17
172: aload_2
173: bipush        10
175: aload         15
177: aload         17
179: ldc2_w        #184
182: ldc2_w        #186
185: ldc2_w        #188
188: invokevirtual #44
191: astore        18
193: aload_2
194: invokevirtual #51
197: astore        19
199: aload_2
200: invokevirtual #50
203: istore        20
205: aload_2
206: invokevirtual #71
209: istore        21
211: aload_2
212: invokevirtual #103
215: astore        22
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: new           #54
265: dup
266: invokespecial #55
269: ldc           #56
271: invokevirtual #57
274: iload         4
276: invokevirtual #62
279: ldc           #59
281: invokevirtual #57
284: iconst_0
285: invokevirtual #62
288: ldc           #56
290: invokevirtual #57
293: invokevirtual #60
296: iload         4
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #61
309: new           #54
312: dup
313: invokespecial #55
316: ldc           #56
318: invokevirtual #57
321: iload         5
323: invokevirtual #62
326: ldc           #59
328: invokevirtual #57
331: iconst_0
332: invokevirtual #62
335: ldc           #56
337: invokevirtual #57
340: invokevirtual #60
343: iload         5
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #61
356: aload         9
358: invokestatic  #47
361: aload         12
363: invokestatic  #47
366: aload         13
368: invokestatic  #47
371: aload         14
373: invokestatic  #47
376: aload         15
378: invokestatic  #47
381: aload         16
383: invokestatic  #47
386: new           #54
389: dup
390: invokespecial #55
393: ldc           #56
395: invokevirtual #57
398: aload         17
400: invokevirtual #82
403: ldc           #59
405: invokevirtual #57
408: getstatic     #118
411: invokevirtual #82
414: ldc           #56
416: invokevirtual #57
419: invokevirtual #60
422: aload         17
424: getstatic     #118
427: invokevirtual #83
430: invokestatic  #61
433: aload         18
435: invokestatic  #47
438: aload         19
440: invokestatic  #47
443: new           #54
446: dup
447: invokespecial #55
450: ldc           #56
452: invokevirtual #57
455: iload         20
457: invokevirtual #62
460: ldc           #59
462: invokevirtual #57
465: bipush        10
467: invokevirtual #62
470: ldc           #56
472: invokevirtual #57
475: invokevirtual #60
478: iload         20
480: bipush        10
482: if_icmpne     489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #61
493: new           #54
496: dup
497: invokespecial #55
500: ldc           #56
502: invokevirtual #57
505: iload         21
507: invokevirtual #62
510: ldc           #59
512: invokevirtual #57
515: iconst_4
516: invokevirtual #62
519: ldc           #56
521: invokevirtual #57
524: invokevirtual #60
527: iload         21
529: iconst_4
530: if_icmpne     537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #61
541: aload         22
543: invokestatic  #104
546: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test213
Start line: 9706
End line: 9754
Method source code: 
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        double double23 = sin20.value((double) (short) 10);
        double double25 = sin20.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin20.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin20.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin20.derivative();
        double double30 = sin20.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer3.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin20, goalType31, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin20);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin20.derivative();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.5440211108893698d) + "'", double23 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9922682874719476d + "'", double25 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.01745240643728351d) + "'", double30 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction36);
        org.junit.Assert.assertNotNull(univariateFunction37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #750
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: new           #72
147: dup
148: invokespecial #73
151: astore        14
153: aload         14
155: invokevirtual #74
158: astore        15
160: aload         14
162: ldc2_w        #91
165: invokevirtual #88
168: dstore        16
170: aload         14
172: ldc2_w        #373
175: invokevirtual #88
178: dstore        18
180: aload         14
182: invokevirtual #74
185: astore        20
187: aload         14
189: invokevirtual #74
192: astore        21
194: aload         14
196: invokevirtual #74
199: astore        22
201: aload         14
203: ldc2_w        #427
206: invokevirtual #88
209: dstore        23
211: getstatic     #118
214: astore        25
216: aload_2
217: bipush        52
219: aload         14
221: aload         25
223: ldc2_w        #614
226: ldc2_w        #477
229: dconst_0
230: invokevirtual #44
233: astore        26
235: aload         14
237: invokestatic  #281
240: astore        27
242: aload         14
244: invokevirtual #74
247: astore        28
249: new           #54
252: dup
253: invokespecial #55
256: ldc           #56
258: invokevirtual #57
261: iload_3
262: invokevirtual #62
265: ldc           #59
267: invokevirtual #57
270: iconst_0
271: invokevirtual #62
274: ldc           #56
276: invokevirtual #57
279: invokevirtual #60
282: iload_3
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #61
294: aload         6
296: invokestatic  #47
299: aload         7
301: invokestatic  #47
304: aload         8
306: invokestatic  #47
309: aload         9
311: invokestatic  #47
314: aload         10
316: invokestatic  #47
319: new           #54
322: dup
323: invokespecial #55
326: ldc           #56
328: invokevirtual #57
331: aload         11
333: invokevirtual #82
336: ldc           #59
338: invokevirtual #57
341: getstatic     #78
344: invokevirtual #82
347: ldc           #56
349: invokevirtual #57
352: invokevirtual #60
355: aload         11
357: getstatic     #78
360: invokevirtual #83
363: invokestatic  #61
366: aload         12
368: invokestatic  #47
371: new           #54
374: dup
375: invokespecial #55
378: ldc           #56
380: invokevirtual #57
383: iload         13
385: invokevirtual #62
388: ldc           #59
390: invokevirtual #57
393: bipush        97
395: invokevirtual #62
398: ldc           #56
400: invokevirtual #57
403: invokevirtual #60
406: iload         13
408: bipush        97
410: if_icmpne     417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #61
421: aload         15
423: invokestatic  #47
426: new           #54
429: dup
430: invokespecial #55
433: ldc           #56
435: invokevirtual #57
438: dload         16
440: invokevirtual #58
443: ldc           #59
445: invokevirtual #57
448: ldc2_w        #406
451: invokevirtual #58
454: ldc           #56
456: invokevirtual #57
459: invokevirtual #60
462: dload         16
464: ldc2_w        #406
467: dcmpl
468: ifne          475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #61
479: new           #54
482: dup
483: invokespecial #55
486: ldc           #56
488: invokevirtual #57
491: dload         18
493: invokevirtual #58
496: ldc           #59
498: invokevirtual #57
501: ldc2_w        #247
504: invokevirtual #58
507: ldc           #56
509: invokevirtual #57
512: invokevirtual #60
515: dload         18
517: ldc2_w        #247
520: dcmpl
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #61
532: aload         20
534: invokestatic  #47
537: aload         21
539: invokestatic  #47
542: aload         22
544: invokestatic  #47
547: new           #54
550: dup
551: invokespecial #55
554: ldc           #56
556: invokevirtual #57
559: dload         23
561: invokevirtual #58
564: ldc           #59
566: invokevirtual #57
569: ldc2_w        #617
572: invokevirtual #58
575: ldc           #56
577: invokevirtual #57
580: invokevirtual #60
583: dload         23
585: ldc2_w        #617
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #61
600: new           #54
603: dup
604: invokespecial #55
607: ldc           #56
609: invokevirtual #57
612: aload         25
614: invokevirtual #82
617: ldc           #59
619: invokevirtual #57
622: getstatic     #118
625: invokevirtual #82
628: ldc           #56
630: invokevirtual #57
633: invokevirtual #60
636: aload         25
638: getstatic     #118
641: invokevirtual #83
644: invokestatic  #61
647: aload         26
649: invokestatic  #47
652: aload         27
654: invokestatic  #47
657: aload         28
659: invokestatic  #47
662: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test214
Start line: 9757
End line: 9768
Method source code: 
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 1.0f, 0.0d, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #751
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: dconst_1
32: dconst_0
33: aload_1
34: invokespecial #13
37: astore_2
38: ldc_w         #424
41: invokestatic  #15
44: goto          48
47: astore_2
48: return
Exception table:
from    to  target type
27    44    47   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test215
Start line: 9771
End line: 9791
Method source code: 
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair8 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #752
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #50
63: istore        7
65: aload_2
66: invokevirtual #51
69: astore        8
71: ldc           #52
73: invokestatic  #15
76: goto          81
79: astore        8
81: new           #54
84: dup
85: invokespecial #55
88: ldc           #56
90: invokevirtual #57
93: iload_3
94: invokevirtual #62
97: ldc           #59
99: invokevirtual #57
102: iconst_0
103: invokevirtual #62
106: ldc           #56
108: invokevirtual #57
111: invokevirtual #60
114: iload_3
115: ifne          122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #61
126: new           #54
129: dup
130: invokespecial #55
133: ldc           #56
135: invokevirtual #57
138: dload         4
140: invokevirtual #58
143: ldc           #59
145: invokevirtual #57
148: dconst_0
149: invokevirtual #58
152: ldc           #56
154: invokevirtual #57
157: invokevirtual #60
160: dload         4
162: dconst_0
163: dcmpl
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #61
175: new           #54
178: dup
179: invokespecial #55
182: ldc           #56
184: invokevirtual #57
187: iload         6
189: invokevirtual #62
192: ldc           #59
194: invokevirtual #57
197: iconst_0
198: invokevirtual #62
201: ldc           #56
203: invokevirtual #57
206: invokevirtual #60
209: iload         6
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #61
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: iload         7
236: invokevirtual #62
239: ldc           #59
241: invokevirtual #57
244: iconst_0
245: invokevirtual #62
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: iload         7
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #61
269: return
Exception table:
from    to  target type
65    76    79   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test216
Start line: 9794
End line: 9809
Method source code: 
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        double double8 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #753
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aload_2
66: invokevirtual #49
69: dstore        7
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: iload_3
84: invokevirtual #62
87: ldc           #59
89: invokevirtual #57
92: iconst_0
93: invokevirtual #62
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: new           #54
119: dup
120: invokespecial #55
123: ldc           #56
125: invokevirtual #57
128: iload         4
130: invokevirtual #62
133: ldc           #59
135: invokevirtual #57
138: iconst_0
139: invokevirtual #62
142: ldc           #56
144: invokevirtual #57
147: invokevirtual #60
150: iload         4
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #61
163: new           #54
166: dup
167: invokespecial #55
170: ldc           #56
172: invokevirtual #57
175: iload         5
177: invokevirtual #62
180: ldc           #59
182: invokevirtual #57
185: iconst_0
186: invokevirtual #62
189: ldc           #56
191: invokevirtual #57
194: invokevirtual #60
197: iload         5
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #61
210: aload         6
212: invokestatic  #104
215: new           #54
218: dup
219: invokespecial #55
222: ldc           #56
224: invokevirtual #57
227: dload         7
229: invokevirtual #58
232: ldc           #59
234: invokevirtual #57
237: dconst_0
238: invokevirtual #58
241: ldc           #56
243: invokevirtual #57
246: invokevirtual #60
249: dload         7
251: dconst_0
252: dcmpl
253: ifne          260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #61
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test217
Start line: 9812
End line: 9927
Method source code: 
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin51, sin52, sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray58 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, univariateDifferentiable39, univariateDifferentiable46, sin47, sin49, univariateDifferentiable57 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer63 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker62);
        int int64 = brentOptimizer63.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin67 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction68 = sin67.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray69 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin66, sin67 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable70 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable71 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray69);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer63.optimize(97, univariateFunction72, goalType73, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer63.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType79 = brentOptimizer63.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable59, goalType79, 0.0d, (double) (-127L), (-0.017453292519943295d));
        int int84 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer3.doOptimize();
        int int86 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker30);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(univariateFunction68);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray69);
        org.junit.Assert.assertNotNull(univariateDifferentiable70);
        org.junit.Assert.assertNotNull(univariateDifferentiable71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 32 + "'", int84 == 32);
        org.junit.Assert.assertNotNull(univariatePointValuePair85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 32 + "'", int86 == 32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #754
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #103
209: astore        23
211: new           #72
214: dup
215: invokespecial #73
218: astore        24
220: new           #72
223: dup
224: invokespecial #73
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: new           #72
248: dup
249: invokespecial #73
252: astore        28
254: new           #72
257: dup
258: invokespecial #73
261: astore        29
263: iconst_4
264: anewarray     #75
267: dup
268: iconst_0
269: aload         25
271: aastore
272: dup
273: iconst_1
274: aload         26
276: aastore
277: dup
278: iconst_2
279: aload         28
281: aastore
282: dup
283: iconst_3
284: aload         29
286: aastore
287: astore        30
289: aload         30
291: invokestatic  #76
294: astore        31
296: new           #72
299: dup
300: invokespecial #73
303: astore        32
305: new           #72
308: dup
309: invokespecial #73
312: astore        33
314: aload         33
316: invokevirtual #74
319: astore        34
321: new           #72
324: dup
325: invokespecial #73
328: astore        35
330: new           #72
333: dup
334: invokespecial #73
337: astore        36
339: iconst_4
340: anewarray     #75
343: dup
344: iconst_0
345: aload         32
347: aastore
348: dup
349: iconst_1
350: aload         33
352: aastore
353: dup
354: iconst_2
355: aload         35
357: aastore
358: dup
359: iconst_3
360: aload         36
362: aastore
363: astore        37
365: aload         37
367: invokestatic  #76
370: astore        38
372: new           #72
375: dup
376: invokespecial #73
379: astore        39
381: aload         39
383: invokevirtual #74
386: astore        40
388: new           #72
391: dup
392: invokespecial #73
395: astore        41
397: aload         41
399: invokevirtual #74
402: astore        42
404: new           #72
407: dup
408: invokespecial #73
411: astore        43
413: new           #72
416: dup
417: invokespecial #73
420: astore        44
422: aload         44
424: invokevirtual #74
427: astore        45
429: new           #72
432: dup
433: invokespecial #73
436: astore        46
438: new           #72
441: dup
442: invokespecial #73
445: astore        47
447: iconst_4
448: anewarray     #75
451: dup
452: iconst_0
453: aload         43
455: aastore
456: dup
457: iconst_1
458: aload         44
460: aastore
461: dup
462: iconst_2
463: aload         46
465: aastore
466: dup
467: iconst_3
468: aload         47
470: aastore
471: astore        48
473: aload         48
475: invokestatic  #76
478: astore        49
480: bipush        6
482: anewarray     #75
485: dup
486: iconst_0
487: aload         24
489: aastore
490: dup
491: iconst_1
492: aload         31
494: aastore
495: dup
496: iconst_2
497: aload         38
499: aastore
500: dup
501: iconst_3
502: aload         39
504: aastore
505: dup
506: iconst_4
507: aload         41
509: aastore
510: dup
511: iconst_5
512: aload         49
514: aastore
515: astore        50
517: aload         50
519: invokestatic  #77
522: astore        51
524: aconst_null
525: astore        52
527: new           #8
530: dup
531: ldc2_w        #31
534: ldc2_w        #33
537: aload         52
539: invokespecial #13
542: astore        53
544: aload         53
546: invokevirtual #71
549: istore        54
551: new           #72
554: dup
555: invokespecial #73
558: astore        55
560: new           #72
563: dup
564: invokespecial #73
567: astore        56
569: aload         56
571: invokevirtual #74
574: astore        57
576: iconst_2
577: anewarray     #75
580: dup
581: iconst_0
582: aload         55
584: aastore
585: dup
586: iconst_1
587: aload         56
589: aastore
590: astore        58
592: aload         58
594: invokestatic  #76
597: astore        59
599: aload         58
601: invokestatic  #77
604: astore        60
606: aload         58
608: checkcast     #89
611: invokestatic  #90
614: astore        61
616: getstatic     #78
619: astore        62
621: aload         53
623: bipush        97
625: aload         61
627: aload         62
629: ldc2_w        #91
632: ldc2_w        #93
635: ldc2_w        #91
638: invokevirtual #44
641: astore        63
643: aload         53
645: invokevirtual #51
648: astore        64
650: aload         53
652: invokevirtual #110
655: astore        65
657: aload_2
658: bipush        32
660: aload         51
662: aload         65
664: dconst_0
665: ldc2_w        #290
668: ldc2_w        #427
671: invokevirtual #44
674: astore        66
676: aload_2
677: invokevirtual #50
680: istore        67
682: aload_2
683: invokevirtual #51
686: astore        68
688: aload_2
689: invokevirtual #50
692: istore        69
694: new           #54
697: dup
698: invokespecial #55
701: ldc           #56
703: invokevirtual #57
706: iload_3
707: invokevirtual #62
710: ldc           #59
712: invokevirtual #57
715: iconst_0
716: invokevirtual #62
719: ldc           #56
721: invokevirtual #57
724: invokevirtual #60
727: iload_3
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #61
739: aload         6
741: invokestatic  #47
744: aload         7
746: invokestatic  #47
749: aload         8
751: invokestatic  #47
754: aload         9
756: invokestatic  #47
759: aload         10
761: invokestatic  #47
764: new           #54
767: dup
768: invokespecial #55
771: ldc           #56
773: invokevirtual #57
776: aload         11
778: invokevirtual #82
781: ldc           #59
783: invokevirtual #57
786: getstatic     #78
789: invokevirtual #82
792: ldc           #56
794: invokevirtual #57
797: invokevirtual #60
800: aload         11
802: getstatic     #78
805: invokevirtual #83
808: invokestatic  #61
811: aload         12
813: invokestatic  #47
816: aload         13
818: invokestatic  #47
821: new           #54
824: dup
825: invokespecial #55
828: ldc           #56
830: invokevirtual #57
833: aload         14
835: invokevirtual #82
838: ldc           #59
840: invokevirtual #57
843: getstatic     #78
846: invokevirtual #82
849: ldc           #56
851: invokevirtual #57
854: invokevirtual #60
857: aload         14
859: getstatic     #78
862: invokevirtual #83
865: invokestatic  #61
868: aload         15
870: invokestatic  #47
873: aload         17
875: invokestatic  #47
878: new           #54
881: dup
882: invokespecial #55
885: ldc           #56
887: invokevirtual #57
890: aload         18
892: invokevirtual #82
895: ldc           #59
897: invokevirtual #57
900: getstatic     #78
903: invokevirtual #82
906: ldc           #56
908: invokevirtual #57
911: invokevirtual #60
914: aload         18
916: getstatic     #78
919: invokevirtual #83
922: invokestatic  #61
925: aload         19
927: invokestatic  #47
930: new           #54
933: dup
934: invokespecial #55
937: ldc           #56
939: invokevirtual #57
942: dload         20
944: invokevirtual #58
947: ldc           #59
949: invokevirtual #57
952: dconst_0
953: invokevirtual #58
956: ldc           #56
958: invokevirtual #57
961: invokevirtual #60
964: dload         20
966: dconst_0
967: dcmpl
968: ifne          975
971: iconst_1
972: goto          976
975: iconst_0
976: invokestatic  #61
979: new           #54
982: dup
983: invokespecial #55
986: ldc           #56
988: invokevirtual #57
991: iload         22
993: invokevirtual #62
996: ldc           #59
998: invokevirtual #57
1001: bipush        97
1003: invokevirtual #62
1006: ldc           #56
1008: invokevirtual #57
1011: invokevirtual #60
1014: iload         22
1016: bipush        97
1018: if_icmpne     1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #61
1029: aload         23
1031: invokestatic  #104
1034: aload         27
1036: invokestatic  #47
1039: aload         30
1041: invokestatic  #47
1044: aload         31
1046: invokestatic  #47
1049: aload         34
1051: invokestatic  #47
1054: aload         37
1056: invokestatic  #47
1059: aload         38
1061: invokestatic  #47
1064: aload         40
1066: invokestatic  #47
1069: aload         42
1071: invokestatic  #47
1074: aload         45
1076: invokestatic  #47
1079: aload         48
1081: invokestatic  #47
1084: aload         49
1086: invokestatic  #47
1089: aload         50
1091: invokestatic  #47
1094: aload         51
1096: invokestatic  #47
1099: new           #54
1102: dup
1103: invokespecial #55
1106: ldc           #56
1108: invokevirtual #57
1111: iload         54
1113: invokevirtual #62
1116: ldc           #59
1118: invokevirtual #57
1121: iconst_0
1122: invokevirtual #62
1125: ldc           #56
1127: invokevirtual #57
1130: invokevirtual #60
1133: iload         54
1135: ifne          1142
1138: iconst_1
1139: goto          1143
1142: iconst_0
1143: invokestatic  #61
1146: aload         57
1148: invokestatic  #47
1151: aload         58
1153: invokestatic  #47
1156: aload         59
1158: invokestatic  #47
1161: aload         60
1163: invokestatic  #47
1166: aload         61
1168: invokestatic  #47
1171: new           #54
1174: dup
1175: invokespecial #55
1178: ldc           #56
1180: invokevirtual #57
1183: aload         62
1185: invokevirtual #82
1188: ldc           #59
1190: invokevirtual #57
1193: getstatic     #78
1196: invokevirtual #82
1199: ldc           #56
1201: invokevirtual #57
1204: invokevirtual #60
1207: aload         62
1209: getstatic     #78
1212: invokevirtual #83
1215: invokestatic  #61
1218: aload         63
1220: invokestatic  #47
1223: aload         64
1225: invokestatic  #47
1228: new           #54
1231: dup
1232: invokespecial #55
1235: ldc           #56
1237: invokevirtual #57
1240: aload         65
1242: invokevirtual #82
1245: ldc           #59
1247: invokevirtual #57
1250: getstatic     #78
1253: invokevirtual #82
1256: ldc           #56
1258: invokevirtual #57
1261: invokevirtual #60
1264: aload         65
1266: getstatic     #78
1269: invokevirtual #83
1272: invokestatic  #61
1275: aload         66
1277: invokestatic  #47
1280: new           #54
1283: dup
1284: invokespecial #55
1287: ldc           #56
1289: invokevirtual #57
1292: iload         67
1294: invokevirtual #62
1297: ldc           #59
1299: invokevirtual #57
1302: bipush        32
1304: invokevirtual #62
1307: ldc           #56
1309: invokevirtual #57
1312: invokevirtual #60
1315: iload         67
1317: bipush        32
1319: if_icmpne     1326
1322: iconst_1
1323: goto          1327
1326: iconst_0
1327: invokestatic  #61
1330: aload         68
1332: invokestatic  #47
1335: new           #54
1338: dup
1339: invokespecial #55
1342: ldc           #56
1344: invokevirtual #57
1347: iload         69
1349: invokevirtual #62
1352: ldc           #59
1354: invokevirtual #57
1357: bipush        32
1359: invokevirtual #62
1362: ldc           #56
1364: invokevirtual #57
1367: invokevirtual #60
1370: iload         69
1372: bipush        32
1374: if_icmpne     1381
1377: iconst_1
1378: goto          1382
1381: iconst_0
1382: invokestatic  #61
1385: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test218
Start line: 9930
End line: 9943
Method source code: 
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #755
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #71
63: istore        6
65: new           #54
68: dup
69: invokespecial #55
72: ldc           #56
74: invokevirtual #57
77: iload_3
78: invokevirtual #62
81: ldc           #59
83: invokevirtual #57
86: iconst_0
87: invokevirtual #62
90: ldc           #56
92: invokevirtual #57
95: invokevirtual #60
98: iload_3
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #61
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: iload         4
124: invokevirtual #62
127: ldc           #59
129: invokevirtual #57
132: iconst_0
133: invokevirtual #62
136: ldc           #56
138: invokevirtual #57
141: invokevirtual #60
144: iload         4
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #61
157: new           #54
160: dup
161: invokespecial #55
164: ldc           #56
166: invokevirtual #57
169: iload         5
171: invokevirtual #62
174: ldc           #59
176: invokevirtual #57
179: iconst_0
180: invokevirtual #62
183: ldc           #56
185: invokevirtual #57
188: invokevirtual #60
191: iload         5
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #61
204: new           #54
207: dup
208: invokespecial #55
211: ldc           #56
213: invokevirtual #57
216: iload         6
218: invokevirtual #62
221: ldc           #59
223: invokevirtual #57
226: iconst_0
227: invokevirtual #62
230: ldc           #56
232: invokevirtual #57
235: invokevirtual #60
238: iload         6
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #61
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test219
Start line: 9946
End line: 10065
Method source code: 
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        org.apache.commons.math3.exception.util.Localizable localizable78 = null;
        org.apache.commons.math3.exception.util.Localizable localizable79 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray80 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction81 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException82 = new org.apache.commons.math3.exception.MathArithmeticException(localizable79, (java.lang.Object[]) differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction83 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException84 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable78, (java.lang.Object[]) differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction85 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction86 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray80);
        org.apache.commons.math3.optimization.GoalType goalType87 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair90 = brentOptimizer3.optimize(97, univariateFunction86, goalType87, 101.0d, 1833.4649444186343d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker91 = brentOptimizer3.getConvergenceChecker();
        double double93 = brentOptimizer3.computeObjectiveValue((double) (byte) -1);
        int int94 = brentOptimizer3.getMaxEvaluations();
        int int95 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair96 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray80);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction81);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction83);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction85);
        org.junit.Assert.assertNotNull(univariateFunction86);
        org.junit.Assert.assertTrue("'" + goalType87 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType87.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair90);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker91);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-1.0d) + "'", double93 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 97 + "'", int94 == 97);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 97 + "'", int95 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair96);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #756
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aconst_null
587: astore        58
589: aconst_null
590: astore        59
592: iconst_0
593: anewarray     #141
596: astore        60
598: aload         60
600: invokestatic  #142
603: astore        61
605: new           #273
608: dup
609: aload         59
611: aload         60
613: checkcast     #123
616: invokespecial #274
619: astore        62
621: aload         60
623: invokestatic  #245
626: astore        63
628: new           #122
631: dup
632: aload         58
634: aload         60
636: checkcast     #123
639: invokespecial #124
642: astore        64
644: aload         60
646: invokestatic  #142
649: astore        65
651: aload         60
653: checkcast     #89
656: invokestatic  #90
659: astore        66
661: getstatic     #78
664: astore        67
666: aload_2
667: bipush        97
669: aload         66
671: aload         67
673: ldc2_w        #734
676: ldc2_w        #736
679: invokevirtual #81
682: astore        68
684: aload_2
685: invokevirtual #103
688: astore        69
690: aload_2
691: ldc2_w        #18
694: invokevirtual #158
697: dstore        70
699: aload_2
700: invokevirtual #50
703: istore        72
705: aload_2
706: invokevirtual #50
709: istore        73
711: aload_2
712: invokevirtual #51
715: astore        74
717: new           #54
720: dup
721: invokespecial #55
724: ldc           #56
726: invokevirtual #57
729: iload_3
730: invokevirtual #62
733: ldc           #59
735: invokevirtual #57
738: iconst_0
739: invokevirtual #62
742: ldc           #56
744: invokevirtual #57
747: invokevirtual #60
750: iload_3
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #61
762: aload         6
764: invokestatic  #47
767: aload         7
769: invokestatic  #47
772: aload         8
774: invokestatic  #47
777: aload         9
779: invokestatic  #47
782: aload         10
784: invokestatic  #47
787: new           #54
790: dup
791: invokespecial #55
794: ldc           #56
796: invokevirtual #57
799: aload         11
801: invokevirtual #82
804: ldc           #59
806: invokevirtual #57
809: getstatic     #78
812: invokevirtual #82
815: ldc           #56
817: invokevirtual #57
820: invokevirtual #60
823: aload         11
825: getstatic     #78
828: invokevirtual #83
831: invokestatic  #61
834: aload         12
836: invokestatic  #47
839: new           #54
842: dup
843: invokespecial #55
846: ldc           #56
848: invokevirtual #57
851: iload         13
853: invokevirtual #62
856: ldc           #59
858: invokevirtual #57
861: bipush        97
863: invokevirtual #62
866: ldc           #56
868: invokevirtual #57
871: invokevirtual #60
874: iload         13
876: bipush        97
878: if_icmpne     885
881: iconst_1
882: goto          886
885: iconst_0
886: invokestatic  #61
889: aload         19
891: invokestatic  #47
894: aload         22
896: invokestatic  #47
899: aload         23
901: invokestatic  #47
904: aload         26
906: invokestatic  #47
909: aload         28
911: invokestatic  #47
914: new           #54
917: dup
918: invokespecial #55
921: ldc           #56
923: invokevirtual #57
926: iload         31
928: invokevirtual #62
931: ldc           #59
933: invokevirtual #57
936: iconst_0
937: invokevirtual #62
940: ldc           #56
942: invokevirtual #57
945: invokevirtual #60
948: iload         31
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #61
961: new           #54
964: dup
965: invokespecial #55
968: ldc           #56
970: invokevirtual #57
973: dload         32
975: invokevirtual #58
978: ldc           #59
980: invokevirtual #57
983: dconst_0
984: invokevirtual #58
987: ldc           #56
989: invokevirtual #57
992: invokevirtual #60
995: dload         32
997: dconst_0
998: dcmpl
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #61
1010: aload         36
1012: invokestatic  #47
1015: aload         39
1017: invokestatic  #47
1020: aload         40
1022: invokestatic  #47
1025: aload         41
1027: invokestatic  #47
1030: new           #54
1033: dup
1034: invokespecial #55
1037: ldc           #56
1039: invokevirtual #57
1042: iload         44
1044: invokevirtual #62
1047: ldc           #59
1049: invokevirtual #57
1052: iconst_0
1053: invokevirtual #62
1056: ldc           #56
1058: invokevirtual #57
1061: invokevirtual #60
1064: iload         44
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #61
1077: aload         47
1079: invokestatic  #47
1082: aload         48
1084: invokestatic  #47
1087: aload         49
1089: invokestatic  #47
1092: aload         50
1094: invokestatic  #47
1097: aload         51
1099: invokestatic  #47
1102: new           #54
1105: dup
1106: invokespecial #55
1109: ldc           #56
1111: invokevirtual #57
1114: aload         52
1116: invokevirtual #82
1119: ldc           #59
1121: invokevirtual #57
1124: getstatic     #78
1127: invokevirtual #82
1130: ldc           #56
1132: invokevirtual #57
1135: invokevirtual #60
1138: aload         52
1140: getstatic     #78
1143: invokevirtual #83
1146: invokestatic  #61
1149: aload         53
1151: invokestatic  #47
1154: aload         54
1156: invokestatic  #47
1159: new           #54
1162: dup
1163: invokespecial #55
1166: ldc           #56
1168: invokevirtual #57
1171: aload         55
1173: invokevirtual #82
1176: ldc           #59
1178: invokevirtual #57
1181: getstatic     #78
1184: invokevirtual #82
1187: ldc           #56
1189: invokevirtual #57
1192: invokevirtual #60
1195: aload         55
1197: getstatic     #78
1200: invokevirtual #83
1203: invokestatic  #61
1206: aload         56
1208: invokestatic  #47
1211: aload         57
1213: invokestatic  #47
1216: aload         60
1218: invokestatic  #47
1221: aload         61
1223: invokestatic  #47
1226: aload         63
1228: invokestatic  #47
1231: aload         65
1233: invokestatic  #47
1236: aload         66
1238: invokestatic  #47
1241: new           #54
1244: dup
1245: invokespecial #55
1248: ldc           #56
1250: invokevirtual #57
1253: aload         67
1255: invokevirtual #82
1258: ldc           #59
1260: invokevirtual #57
1263: getstatic     #78
1266: invokevirtual #82
1269: ldc           #56
1271: invokevirtual #57
1274: invokevirtual #60
1277: aload         67
1279: getstatic     #78
1282: invokevirtual #83
1285: invokestatic  #61
1288: aload         68
1290: invokestatic  #47
1293: aload         69
1295: invokestatic  #104
1298: new           #54
1301: dup
1302: invokespecial #55
1305: ldc           #56
1307: invokevirtual #57
1310: dload         70
1312: invokevirtual #58
1315: ldc           #59
1317: invokevirtual #57
1320: ldc2_w        #18
1323: invokevirtual #58
1326: ldc           #56
1328: invokevirtual #57
1331: invokevirtual #60
1334: dload         70
1336: ldc2_w        #18
1339: dcmpl
1340: ifne          1347
1343: iconst_1
1344: goto          1348
1347: iconst_0
1348: invokestatic  #61
1351: new           #54
1354: dup
1355: invokespecial #55
1358: ldc           #56
1360: invokevirtual #57
1363: iload         72
1365: invokevirtual #62
1368: ldc           #59
1370: invokevirtual #57
1373: bipush        97
1375: invokevirtual #62
1378: ldc           #56
1380: invokevirtual #57
1383: invokevirtual #60
1386: iload         72
1388: bipush        97
1390: if_icmpne     1397
1393: iconst_1
1394: goto          1398
1397: iconst_0
1398: invokestatic  #61
1401: new           #54
1404: dup
1405: invokespecial #55
1408: ldc           #56
1410: invokevirtual #57
1413: iload         73
1415: invokevirtual #62
1418: ldc           #59
1420: invokevirtual #57
1423: bipush        97
1425: invokevirtual #62
1428: ldc           #56
1430: invokevirtual #57
1433: invokevirtual #60
1436: iload         73
1438: bipush        97
1440: if_icmpne     1447
1443: iconst_1
1444: goto          1448
1447: iconst_0
1448: invokestatic  #61
1451: aload         74
1453: invokestatic  #47
1456: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test220
Start line: 10068
End line: 10083
Method source code: 
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #757
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #71
57: istore        6
59: aload_2
60: invokevirtual #71
63: istore        7
65: aload_2
66: invokevirtual #103
69: astore        8
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: iload_3
84: invokevirtual #62
87: ldc           #59
89: invokevirtual #57
92: iconst_0
93: invokevirtual #62
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: new           #54
119: dup
120: invokespecial #55
123: ldc           #56
125: invokevirtual #57
128: dload         4
130: invokevirtual #58
133: ldc           #59
135: invokevirtual #57
138: dconst_0
139: invokevirtual #58
142: ldc           #56
144: invokevirtual #57
147: invokevirtual #60
150: dload         4
152: dconst_0
153: dcmpl
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #61
165: new           #54
168: dup
169: invokespecial #55
172: ldc           #56
174: invokevirtual #57
177: iload         6
179: invokevirtual #62
182: ldc           #59
184: invokevirtual #57
187: iconst_0
188: invokevirtual #62
191: ldc           #56
193: invokevirtual #57
196: invokevirtual #60
199: iload         6
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #61
212: new           #54
215: dup
216: invokespecial #55
219: ldc           #56
221: invokevirtual #57
224: iload         7
226: invokevirtual #62
229: ldc           #59
231: invokevirtual #57
234: iconst_0
235: invokevirtual #62
238: ldc           #56
240: invokevirtual #57
243: invokevirtual #60
246: iload         7
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #61
259: aload         8
261: invokestatic  #104
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test221
Start line: 10086
End line: 10115
Method source code: 
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.optimization.GoalType goalType20 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #758
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: aload_2
151: invokevirtual #110
154: astore        16
156: new           #54
159: dup
160: invokespecial #55
163: ldc           #56
165: invokevirtual #57
168: iload_3
169: invokevirtual #62
172: ldc           #59
174: invokevirtual #57
177: iconst_0
178: invokevirtual #62
181: ldc           #56
183: invokevirtual #57
186: invokevirtual #60
189: iload_3
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #61
201: aload         6
203: invokestatic  #47
206: aload         7
208: invokestatic  #47
211: aload         8
213: invokestatic  #47
216: aload         9
218: invokestatic  #47
221: aload         10
223: invokestatic  #47
226: new           #54
229: dup
230: invokespecial #55
233: ldc           #56
235: invokevirtual #57
238: aload         11
240: invokevirtual #82
243: ldc           #59
245: invokevirtual #57
248: getstatic     #78
251: invokevirtual #82
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: aload         11
264: getstatic     #78
267: invokevirtual #83
270: invokestatic  #61
273: aload         12
275: invokestatic  #47
278: aload         13
280: invokestatic  #47
283: new           #54
286: dup
287: invokespecial #55
290: ldc           #56
292: invokevirtual #57
295: dload         14
297: invokevirtual #58
300: ldc           #59
302: invokevirtual #57
305: ldc2_w        #91
308: invokevirtual #58
311: ldc           #56
313: invokevirtual #57
316: invokevirtual #60
319: dload         14
321: ldc2_w        #91
324: dcmpl
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #61
336: new           #54
339: dup
340: invokespecial #55
343: ldc           #56
345: invokevirtual #57
348: aload         16
350: invokevirtual #82
353: ldc           #59
355: invokevirtual #57
358: getstatic     #78
361: invokevirtual #82
364: ldc           #56
366: invokevirtual #57
369: invokevirtual #60
372: aload         16
374: getstatic     #78
377: invokevirtual #83
380: invokestatic  #61
383: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test222
Start line: 10118
End line: 10141
Method source code: 
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType10 = brentOptimizer3.getGoalType();
        int int11 = brentOptimizer3.getEvaluations();
        double double12 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertNull(goalType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #759
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #50
69: istore        7
71: aload_2
72: invokevirtual #103
75: astore        8
77: aload_2
78: invokevirtual #110
81: astore        9
83: aload_2
84: invokevirtual #71
87: istore        10
89: aload_2
90: invokevirtual #49
93: dstore        11
95: new           #54
98: dup
99: invokespecial #55
102: ldc           #56
104: invokevirtual #57
107: iload_3
108: invokevirtual #62
111: ldc           #59
113: invokevirtual #57
116: iconst_0
117: invokevirtual #62
120: ldc           #56
122: invokevirtual #57
125: invokevirtual #60
128: iload_3
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #61
140: new           #54
143: dup
144: invokespecial #55
147: ldc           #56
149: invokevirtual #57
152: iload         4
154: invokevirtual #62
157: ldc           #59
159: invokevirtual #57
162: iconst_0
163: invokevirtual #62
166: ldc           #56
168: invokevirtual #57
171: invokevirtual #60
174: iload         4
176: ifne          183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #61
187: new           #54
190: dup
191: invokespecial #55
194: ldc           #56
196: invokevirtual #57
199: iload         5
201: invokevirtual #62
204: ldc           #59
206: invokevirtual #57
209: iconst_0
210: invokevirtual #62
213: ldc           #56
215: invokevirtual #57
218: invokevirtual #60
221: iload         5
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #61
234: new           #54
237: dup
238: invokespecial #55
241: ldc           #56
243: invokevirtual #57
246: iload         6
248: invokevirtual #62
251: ldc           #59
253: invokevirtual #57
256: iconst_0
257: invokevirtual #62
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: iload         6
270: ifne          277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #61
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: iload         7
295: invokevirtual #62
298: ldc           #59
300: invokevirtual #57
303: iconst_0
304: invokevirtual #62
307: ldc           #56
309: invokevirtual #57
312: invokevirtual #60
315: iload         7
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #61
328: aload         8
330: invokestatic  #104
333: aload         9
335: invokestatic  #104
338: new           #54
341: dup
342: invokespecial #55
345: ldc           #56
347: invokevirtual #57
350: iload         10
352: invokevirtual #62
355: ldc           #59
357: invokevirtual #57
360: iconst_0
361: invokevirtual #62
364: ldc           #56
366: invokevirtual #57
369: invokevirtual #60
372: iload         10
374: ifne          381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #61
385: new           #54
388: dup
389: invokespecial #55
392: ldc           #56
394: invokevirtual #57
397: dload         11
399: invokevirtual #58
402: ldc           #59
404: invokevirtual #57
407: dconst_0
408: invokevirtual #58
411: ldc           #56
413: invokevirtual #57
416: invokevirtual #60
419: dload         11
421: dconst_0
422: dcmpl
423: ifne          430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #61
434: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test223
Start line: 10144
End line: 10259
Method source code: 
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin51, sin52, sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray58 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, univariateDifferentiable39, univariateDifferentiable46, sin47, sin49, univariateDifferentiable57 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer63 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker62);
        int int64 = brentOptimizer63.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin67 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction68 = sin67.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray69 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin66, sin67 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable70 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable71 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray69);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer63.optimize(97, univariateFunction72, goalType73, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer63.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType79 = brentOptimizer63.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable59, goalType79, 0.0d, (double) (-127L), (-0.017453292519943295d));
        int int84 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer3.doOptimize();
        double double86 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker30);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(univariateFunction68);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray69);
        org.junit.Assert.assertNotNull(univariateDifferentiable70);
        org.junit.Assert.assertNotNull(univariateDifferentiable71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 32 + "'", int84 == 32);
        org.junit.Assert.assertNotNull(univariatePointValuePair85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #760
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #103
209: astore        23
211: new           #72
214: dup
215: invokespecial #73
218: astore        24
220: new           #72
223: dup
224: invokespecial #73
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: new           #72
248: dup
249: invokespecial #73
252: astore        28
254: new           #72
257: dup
258: invokespecial #73
261: astore        29
263: iconst_4
264: anewarray     #75
267: dup
268: iconst_0
269: aload         25
271: aastore
272: dup
273: iconst_1
274: aload         26
276: aastore
277: dup
278: iconst_2
279: aload         28
281: aastore
282: dup
283: iconst_3
284: aload         29
286: aastore
287: astore        30
289: aload         30
291: invokestatic  #76
294: astore        31
296: new           #72
299: dup
300: invokespecial #73
303: astore        32
305: new           #72
308: dup
309: invokespecial #73
312: astore        33
314: aload         33
316: invokevirtual #74
319: astore        34
321: new           #72
324: dup
325: invokespecial #73
328: astore        35
330: new           #72
333: dup
334: invokespecial #73
337: astore        36
339: iconst_4
340: anewarray     #75
343: dup
344: iconst_0
345: aload         32
347: aastore
348: dup
349: iconst_1
350: aload         33
352: aastore
353: dup
354: iconst_2
355: aload         35
357: aastore
358: dup
359: iconst_3
360: aload         36
362: aastore
363: astore        37
365: aload         37
367: invokestatic  #76
370: astore        38
372: new           #72
375: dup
376: invokespecial #73
379: astore        39
381: aload         39
383: invokevirtual #74
386: astore        40
388: new           #72
391: dup
392: invokespecial #73
395: astore        41
397: aload         41
399: invokevirtual #74
402: astore        42
404: new           #72
407: dup
408: invokespecial #73
411: astore        43
413: new           #72
416: dup
417: invokespecial #73
420: astore        44
422: aload         44
424: invokevirtual #74
427: astore        45
429: new           #72
432: dup
433: invokespecial #73
436: astore        46
438: new           #72
441: dup
442: invokespecial #73
445: astore        47
447: iconst_4
448: anewarray     #75
451: dup
452: iconst_0
453: aload         43
455: aastore
456: dup
457: iconst_1
458: aload         44
460: aastore
461: dup
462: iconst_2
463: aload         46
465: aastore
466: dup
467: iconst_3
468: aload         47
470: aastore
471: astore        48
473: aload         48
475: invokestatic  #76
478: astore        49
480: bipush        6
482: anewarray     #75
485: dup
486: iconst_0
487: aload         24
489: aastore
490: dup
491: iconst_1
492: aload         31
494: aastore
495: dup
496: iconst_2
497: aload         38
499: aastore
500: dup
501: iconst_3
502: aload         39
504: aastore
505: dup
506: iconst_4
507: aload         41
509: aastore
510: dup
511: iconst_5
512: aload         49
514: aastore
515: astore        50
517: aload         50
519: invokestatic  #77
522: astore        51
524: aconst_null
525: astore        52
527: new           #8
530: dup
531: ldc2_w        #31
534: ldc2_w        #33
537: aload         52
539: invokespecial #13
542: astore        53
544: aload         53
546: invokevirtual #71
549: istore        54
551: new           #72
554: dup
555: invokespecial #73
558: astore        55
560: new           #72
563: dup
564: invokespecial #73
567: astore        56
569: aload         56
571: invokevirtual #74
574: astore        57
576: iconst_2
577: anewarray     #75
580: dup
581: iconst_0
582: aload         55
584: aastore
585: dup
586: iconst_1
587: aload         56
589: aastore
590: astore        58
592: aload         58
594: invokestatic  #76
597: astore        59
599: aload         58
601: invokestatic  #77
604: astore        60
606: aload         58
608: checkcast     #89
611: invokestatic  #90
614: astore        61
616: getstatic     #78
619: astore        62
621: aload         53
623: bipush        97
625: aload         61
627: aload         62
629: ldc2_w        #91
632: ldc2_w        #93
635: ldc2_w        #91
638: invokevirtual #44
641: astore        63
643: aload         53
645: invokevirtual #51
648: astore        64
650: aload         53
652: invokevirtual #110
655: astore        65
657: aload_2
658: bipush        32
660: aload         51
662: aload         65
664: dconst_0
665: ldc2_w        #290
668: ldc2_w        #427
671: invokevirtual #44
674: astore        66
676: aload_2
677: invokevirtual #50
680: istore        67
682: aload_2
683: invokevirtual #51
686: astore        68
688: aload_2
689: invokevirtual #231
692: dstore        69
694: new           #54
697: dup
698: invokespecial #55
701: ldc           #56
703: invokevirtual #57
706: iload_3
707: invokevirtual #62
710: ldc           #59
712: invokevirtual #57
715: iconst_0
716: invokevirtual #62
719: ldc           #56
721: invokevirtual #57
724: invokevirtual #60
727: iload_3
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #61
739: aload         6
741: invokestatic  #47
744: aload         7
746: invokestatic  #47
749: aload         8
751: invokestatic  #47
754: aload         9
756: invokestatic  #47
759: aload         10
761: invokestatic  #47
764: new           #54
767: dup
768: invokespecial #55
771: ldc           #56
773: invokevirtual #57
776: aload         11
778: invokevirtual #82
781: ldc           #59
783: invokevirtual #57
786: getstatic     #78
789: invokevirtual #82
792: ldc           #56
794: invokevirtual #57
797: invokevirtual #60
800: aload         11
802: getstatic     #78
805: invokevirtual #83
808: invokestatic  #61
811: aload         12
813: invokestatic  #47
816: aload         13
818: invokestatic  #47
821: new           #54
824: dup
825: invokespecial #55
828: ldc           #56
830: invokevirtual #57
833: aload         14
835: invokevirtual #82
838: ldc           #59
840: invokevirtual #57
843: getstatic     #78
846: invokevirtual #82
849: ldc           #56
851: invokevirtual #57
854: invokevirtual #60
857: aload         14
859: getstatic     #78
862: invokevirtual #83
865: invokestatic  #61
868: aload         15
870: invokestatic  #47
873: aload         17
875: invokestatic  #47
878: new           #54
881: dup
882: invokespecial #55
885: ldc           #56
887: invokevirtual #57
890: aload         18
892: invokevirtual #82
895: ldc           #59
897: invokevirtual #57
900: getstatic     #78
903: invokevirtual #82
906: ldc           #56
908: invokevirtual #57
911: invokevirtual #60
914: aload         18
916: getstatic     #78
919: invokevirtual #83
922: invokestatic  #61
925: aload         19
927: invokestatic  #47
930: new           #54
933: dup
934: invokespecial #55
937: ldc           #56
939: invokevirtual #57
942: dload         20
944: invokevirtual #58
947: ldc           #59
949: invokevirtual #57
952: dconst_0
953: invokevirtual #58
956: ldc           #56
958: invokevirtual #57
961: invokevirtual #60
964: dload         20
966: dconst_0
967: dcmpl
968: ifne          975
971: iconst_1
972: goto          976
975: iconst_0
976: invokestatic  #61
979: new           #54
982: dup
983: invokespecial #55
986: ldc           #56
988: invokevirtual #57
991: iload         22
993: invokevirtual #62
996: ldc           #59
998: invokevirtual #57
1001: bipush        97
1003: invokevirtual #62
1006: ldc           #56
1008: invokevirtual #57
1011: invokevirtual #60
1014: iload         22
1016: bipush        97
1018: if_icmpne     1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #61
1029: aload         23
1031: invokestatic  #104
1034: aload         27
1036: invokestatic  #47
1039: aload         30
1041: invokestatic  #47
1044: aload         31
1046: invokestatic  #47
1049: aload         34
1051: invokestatic  #47
1054: aload         37
1056: invokestatic  #47
1059: aload         38
1061: invokestatic  #47
1064: aload         40
1066: invokestatic  #47
1069: aload         42
1071: invokestatic  #47
1074: aload         45
1076: invokestatic  #47
1079: aload         48
1081: invokestatic  #47
1084: aload         49
1086: invokestatic  #47
1089: aload         50
1091: invokestatic  #47
1094: aload         51
1096: invokestatic  #47
1099: new           #54
1102: dup
1103: invokespecial #55
1106: ldc           #56
1108: invokevirtual #57
1111: iload         54
1113: invokevirtual #62
1116: ldc           #59
1118: invokevirtual #57
1121: iconst_0
1122: invokevirtual #62
1125: ldc           #56
1127: invokevirtual #57
1130: invokevirtual #60
1133: iload         54
1135: ifne          1142
1138: iconst_1
1139: goto          1143
1142: iconst_0
1143: invokestatic  #61
1146: aload         57
1148: invokestatic  #47
1151: aload         58
1153: invokestatic  #47
1156: aload         59
1158: invokestatic  #47
1161: aload         60
1163: invokestatic  #47
1166: aload         61
1168: invokestatic  #47
1171: new           #54
1174: dup
1175: invokespecial #55
1178: ldc           #56
1180: invokevirtual #57
1183: aload         62
1185: invokevirtual #82
1188: ldc           #59
1190: invokevirtual #57
1193: getstatic     #78
1196: invokevirtual #82
1199: ldc           #56
1201: invokevirtual #57
1204: invokevirtual #60
1207: aload         62
1209: getstatic     #78
1212: invokevirtual #83
1215: invokestatic  #61
1218: aload         63
1220: invokestatic  #47
1223: aload         64
1225: invokestatic  #47
1228: new           #54
1231: dup
1232: invokespecial #55
1235: ldc           #56
1237: invokevirtual #57
1240: aload         65
1242: invokevirtual #82
1245: ldc           #59
1247: invokevirtual #57
1250: getstatic     #78
1253: invokevirtual #82
1256: ldc           #56
1258: invokevirtual #57
1261: invokevirtual #60
1264: aload         65
1266: getstatic     #78
1269: invokevirtual #83
1272: invokestatic  #61
1275: aload         66
1277: invokestatic  #47
1280: new           #54
1283: dup
1284: invokespecial #55
1287: ldc           #56
1289: invokevirtual #57
1292: iload         67
1294: invokevirtual #62
1297: ldc           #59
1299: invokevirtual #57
1302: bipush        32
1304: invokevirtual #62
1307: ldc           #56
1309: invokevirtual #57
1312: invokevirtual #60
1315: iload         67
1317: bipush        32
1319: if_icmpne     1326
1322: iconst_1
1323: goto          1327
1326: iconst_0
1327: invokestatic  #61
1330: aload         68
1332: invokestatic  #47
1335: new           #54
1338: dup
1339: invokespecial #55
1342: ldc           #56
1344: invokevirtual #57
1347: dload         69
1349: invokevirtual #58
1352: ldc           #59
1354: invokevirtual #57
1357: dconst_0
1358: invokevirtual #58
1361: ldc           #56
1363: invokevirtual #57
1366: invokevirtual #60
1369: dload         69
1371: dconst_0
1372: dcmpl
1373: ifne          1380
1376: iconst_1
1377: goto          1381
1380: iconst_0
1381: invokestatic  #61
1384: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test224
Start line: 10262
End line: 10324
Method source code: 
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction0 = null;
        org.apache.commons.math3.analysis.function.Sin sin1 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction2 = sin1.derivative();
        double double4 = sin1.value(0.9999999958776927d);
        double double6 = sin1.value((double) 0);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction7 = sin1.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker10 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer11 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker10);
        int int12 = brentOptimizer11.getMaxEvaluations();
        double double13 = brentOptimizer11.getMax();
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray20);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer26 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker25);
        int int27 = brentOptimizer26.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray32 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray32);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray32);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray32);
        org.apache.commons.math3.optimization.GoalType goalType36 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair40 = brentOptimizer26.optimize(97, univariateFunction35, goalType36, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer26.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType42 = brentOptimizer26.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer11.optimize((int) ' ', univariateFunction22, goalType42, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction0, univariateFunction7, univariateFunction22);
        double[] doubleArray50 = org.apache.commons.math3.analysis.FunctionUtils.sample(univariateFunction7, 0.0d, 7.346839692639297E-40d, 63);
        org.junit.Assert.assertNotNull(univariateFunction2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.8414709825806044d + "'", double4 == 0.8414709825806044d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray32);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertTrue("'" + goalType36 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType36.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair40);
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #761
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #72
30: dup
31: invokespecial #73
34: astore_2
35: aload_2
36: invokevirtual #74
39: astore_3
40: aload_2
41: ldc2_w        #86
44: invokevirtual #88
47: dstore        4
49: aload_2
50: dconst_0
51: invokevirtual #88
54: dstore        6
56: aload_2
57: invokevirtual #74
60: astore        8
62: aconst_null
63: astore        9
65: new           #8
68: dup
69: ldc2_w        #31
72: ldc2_w        #33
75: aload         9
77: invokespecial #13
80: astore        10
82: aload         10
84: invokevirtual #50
87: istore        11
89: aload         10
91: invokevirtual #49
94: dstore        12
96: new           #72
99: dup
100: invokespecial #73
103: astore        14
105: new           #72
108: dup
109: invokespecial #73
112: astore        15
114: aload         15
116: invokevirtual #74
119: astore        16
121: new           #72
124: dup
125: invokespecial #73
128: astore        17
130: new           #72
133: dup
134: invokespecial #73
137: astore        18
139: iconst_4
140: anewarray     #75
143: dup
144: iconst_0
145: aload         14
147: aastore
148: dup
149: iconst_1
150: aload         15
152: aastore
153: dup
154: iconst_2
155: aload         17
157: aastore
158: dup
159: iconst_3
160: aload         18
162: aastore
163: astore        19
165: aload         19
167: invokestatic  #76
170: astore        20
172: aload         19
174: checkcast     #89
177: invokestatic  #109
180: astore        21
182: aconst_null
183: astore        22
185: new           #8
188: dup
189: ldc2_w        #31
192: ldc2_w        #33
195: aload         22
197: invokespecial #13
200: astore        23
202: aload         23
204: invokevirtual #71
207: istore        24
209: new           #72
212: dup
213: invokespecial #73
216: astore        25
218: new           #72
221: dup
222: invokespecial #73
225: astore        26
227: aload         26
229: invokevirtual #74
232: astore        27
234: iconst_2
235: anewarray     #75
238: dup
239: iconst_0
240: aload         25
242: aastore
243: dup
244: iconst_1
245: aload         26
247: aastore
248: astore        28
250: aload         28
252: invokestatic  #76
255: astore        29
257: aload         28
259: invokestatic  #77
262: astore        30
264: aload         28
266: checkcast     #89
269: invokestatic  #90
272: astore        31
274: getstatic     #78
277: astore        32
279: aload         23
281: bipush        97
283: aload         31
285: aload         32
287: ldc2_w        #91
290: ldc2_w        #93
293: ldc2_w        #91
296: invokevirtual #44
299: astore        33
301: aload         23
303: invokevirtual #51
306: astore        34
308: aload         23
310: invokevirtual #110
313: astore        35
315: aload         10
317: bipush        32
319: aload         21
321: aload         35
323: ldc2_w        #173
326: ldc2_w        #175
329: invokevirtual #81
332: astore        36
334: aload_1
335: aload         8
337: aload         21
339: invokestatic  #404
342: astore        37
344: aload         8
346: dconst_0
347: ldc2_w        #762
350: bipush        63
352: invokestatic  #764
355: astore        38
357: aload_3
358: invokestatic  #47
361: new           #54
364: dup
365: invokespecial #55
368: ldc           #56
370: invokevirtual #57
373: dload         4
375: invokevirtual #58
378: ldc           #59
380: invokevirtual #57
383: ldc2_w        #23
386: invokevirtual #58
389: ldc           #56
391: invokevirtual #57
394: invokevirtual #60
397: dload         4
399: ldc2_w        #23
402: dcmpl
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #61
414: new           #54
417: dup
418: invokespecial #55
421: ldc           #56
423: invokevirtual #57
426: dload         6
428: invokevirtual #58
431: ldc           #59
433: invokevirtual #57
436: dconst_0
437: invokevirtual #58
440: ldc           #56
442: invokevirtual #57
445: invokevirtual #60
448: dload         6
450: dconst_0
451: dcmpl
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #61
463: aload         8
465: invokestatic  #47
468: new           #54
471: dup
472: invokespecial #55
475: ldc           #56
477: invokevirtual #57
480: iload         11
482: invokevirtual #62
485: ldc           #59
487: invokevirtual #57
490: iconst_0
491: invokevirtual #62
494: ldc           #56
496: invokevirtual #57
499: invokevirtual #60
502: iload         11
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #61
515: new           #54
518: dup
519: invokespecial #55
522: ldc           #56
524: invokevirtual #57
527: dload         12
529: invokevirtual #58
532: ldc           #59
534: invokevirtual #57
537: dconst_0
538: invokevirtual #58
541: ldc           #56
543: invokevirtual #57
546: invokevirtual #60
549: dload         12
551: dconst_0
552: dcmpl
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #61
564: aload         16
566: invokestatic  #47
569: aload         19
571: invokestatic  #47
574: aload         20
576: invokestatic  #47
579: aload         21
581: invokestatic  #47
584: new           #54
587: dup
588: invokespecial #55
591: ldc           #56
593: invokevirtual #57
596: iload         24
598: invokevirtual #62
601: ldc           #59
603: invokevirtual #57
606: iconst_0
607: invokevirtual #62
610: ldc           #56
612: invokevirtual #57
615: invokevirtual #60
618: iload         24
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #61
631: aload         27
633: invokestatic  #47
636: aload         28
638: invokestatic  #47
641: aload         29
643: invokestatic  #47
646: aload         30
648: invokestatic  #47
651: aload         31
653: invokestatic  #47
656: new           #54
659: dup
660: invokespecial #55
663: ldc           #56
665: invokevirtual #57
668: aload         32
670: invokevirtual #82
673: ldc           #59
675: invokevirtual #57
678: getstatic     #78
681: invokevirtual #82
684: ldc           #56
686: invokevirtual #57
689: invokevirtual #60
692: aload         32
694: getstatic     #78
697: invokevirtual #83
700: invokestatic  #61
703: aload         33
705: invokestatic  #47
708: aload         34
710: invokestatic  #47
713: new           #54
716: dup
717: invokespecial #55
720: ldc           #56
722: invokevirtual #57
725: aload         35
727: invokevirtual #82
730: ldc           #59
732: invokevirtual #57
735: getstatic     #78
738: invokevirtual #82
741: ldc           #56
743: invokevirtual #57
746: invokevirtual #60
749: aload         35
751: getstatic     #78
754: invokevirtual #83
757: invokestatic  #61
760: aload         36
762: invokestatic  #47
765: aload         37
767: invokestatic  #47
770: aload         38
772: invokestatic  #47
775: aload         38
777: invokestatic  #208
780: ldc_w         #765
783: invokestatic  #210
786: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test225
Start line: 10327
End line: 10340
Method source code: 
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #766
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: new           #54
68: dup
69: invokespecial #55
72: ldc           #56
74: invokevirtual #57
77: iload_3
78: invokevirtual #62
81: ldc           #59
83: invokevirtual #57
86: iconst_0
87: invokevirtual #62
90: ldc           #56
92: invokevirtual #57
95: invokevirtual #60
98: iload_3
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #61
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: iload         4
124: invokevirtual #62
127: ldc           #59
129: invokevirtual #57
132: iconst_0
133: invokevirtual #62
136: ldc           #56
138: invokevirtual #57
141: invokevirtual #60
144: iload         4
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #61
157: new           #54
160: dup
161: invokespecial #55
164: ldc           #56
166: invokevirtual #57
169: iload         5
171: invokevirtual #62
174: ldc           #59
176: invokevirtual #57
179: iconst_0
180: invokevirtual #62
183: ldc           #56
185: invokevirtual #57
188: invokevirtual #60
191: iload         5
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #61
204: new           #54
207: dup
208: invokespecial #55
211: ldc           #56
213: invokevirtual #57
216: iload         6
218: invokevirtual #62
221: ldc           #59
223: invokevirtual #57
226: iconst_0
227: invokevirtual #62
230: ldc           #56
232: invokevirtual #57
235: invokevirtual #60
238: iload         6
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #61
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test226
Start line: 10343
End line: 10354
Method source code: 
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #767
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #103
57: astore        5
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: iload_3
72: invokevirtual #62
75: ldc           #59
77: invokevirtual #57
80: iconst_0
81: invokevirtual #62
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #61
104: new           #54
107: dup
108: invokespecial #55
111: ldc           #56
113: invokevirtual #57
116: iload         4
118: invokevirtual #62
121: ldc           #59
123: invokevirtual #57
126: iconst_0
127: invokevirtual #62
130: ldc           #56
132: invokevirtual #57
135: invokevirtual #60
138: iload         4
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #61
151: aload         5
153: invokestatic  #104
156: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test227
Start line: 10357
End line: 10362
Method source code: 
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.8268795405320025d, (double) 35.000004f, univariatePointValuePairConvergenceChecker2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #768
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #769
34: ldc2_w        #269
37: aload_1
38: invokespecial #13
41: astore_2
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test228
Start line: 10365
End line: 10480
Method source code: 
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker30 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = sin47.derivative();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin52 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction53 = sin52.derivative();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin51, sin52, sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray58 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, univariateDifferentiable39, univariateDifferentiable46, sin47, sin49, univariateDifferentiable57 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer63 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker62);
        int int64 = brentOptimizer63.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin67 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction68 = sin67.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray69 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin66, sin67 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable70 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable71 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray69);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray69);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer63.optimize(97, univariateFunction72, goalType73, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer63.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType79 = brentOptimizer63.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer3.optimize((int) ' ', (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable59, goalType79, 0.0d, (double) (-127L), (-0.017453292519943295d));
        double double84 = univariatePointValuePair83.getValue();
        double double85 = univariatePointValuePair83.getValue();
        double double86 = univariatePointValuePair83.getPoint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker30);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateFunction53);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(univariateFunction68);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray69);
        org.junit.Assert.assertNotNull(univariateDifferentiable70);
        org.junit.Assert.assertNotNull(univariateDifferentiable71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 5.777024117637126d + "'", double84 == 5.777024117637126d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5.777024117637126d + "'", double85 == 5.777024117637126d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-48.52047015675627d) + "'", double86 == (-48.52047015675627d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #771
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #103
209: astore        23
211: new           #72
214: dup
215: invokespecial #73
218: astore        24
220: new           #72
223: dup
224: invokespecial #73
227: astore        25
229: new           #72
232: dup
233: invokespecial #73
236: astore        26
238: aload         26
240: invokevirtual #74
243: astore        27
245: new           #72
248: dup
249: invokespecial #73
252: astore        28
254: new           #72
257: dup
258: invokespecial #73
261: astore        29
263: iconst_4
264: anewarray     #75
267: dup
268: iconst_0
269: aload         25
271: aastore
272: dup
273: iconst_1
274: aload         26
276: aastore
277: dup
278: iconst_2
279: aload         28
281: aastore
282: dup
283: iconst_3
284: aload         29
286: aastore
287: astore        30
289: aload         30
291: invokestatic  #76
294: astore        31
296: new           #72
299: dup
300: invokespecial #73
303: astore        32
305: new           #72
308: dup
309: invokespecial #73
312: astore        33
314: aload         33
316: invokevirtual #74
319: astore        34
321: new           #72
324: dup
325: invokespecial #73
328: astore        35
330: new           #72
333: dup
334: invokespecial #73
337: astore        36
339: iconst_4
340: anewarray     #75
343: dup
344: iconst_0
345: aload         32
347: aastore
348: dup
349: iconst_1
350: aload         33
352: aastore
353: dup
354: iconst_2
355: aload         35
357: aastore
358: dup
359: iconst_3
360: aload         36
362: aastore
363: astore        37
365: aload         37
367: invokestatic  #76
370: astore        38
372: new           #72
375: dup
376: invokespecial #73
379: astore        39
381: aload         39
383: invokevirtual #74
386: astore        40
388: new           #72
391: dup
392: invokespecial #73
395: astore        41
397: aload         41
399: invokevirtual #74
402: astore        42
404: new           #72
407: dup
408: invokespecial #73
411: astore        43
413: new           #72
416: dup
417: invokespecial #73
420: astore        44
422: aload         44
424: invokevirtual #74
427: astore        45
429: new           #72
432: dup
433: invokespecial #73
436: astore        46
438: new           #72
441: dup
442: invokespecial #73
445: astore        47
447: iconst_4
448: anewarray     #75
451: dup
452: iconst_0
453: aload         43
455: aastore
456: dup
457: iconst_1
458: aload         44
460: aastore
461: dup
462: iconst_2
463: aload         46
465: aastore
466: dup
467: iconst_3
468: aload         47
470: aastore
471: astore        48
473: aload         48
475: invokestatic  #76
478: astore        49
480: bipush        6
482: anewarray     #75
485: dup
486: iconst_0
487: aload         24
489: aastore
490: dup
491: iconst_1
492: aload         31
494: aastore
495: dup
496: iconst_2
497: aload         38
499: aastore
500: dup
501: iconst_3
502: aload         39
504: aastore
505: dup
506: iconst_4
507: aload         41
509: aastore
510: dup
511: iconst_5
512: aload         49
514: aastore
515: astore        50
517: aload         50
519: invokestatic  #77
522: astore        51
524: aconst_null
525: astore        52
527: new           #8
530: dup
531: ldc2_w        #31
534: ldc2_w        #33
537: aload         52
539: invokespecial #13
542: astore        53
544: aload         53
546: invokevirtual #71
549: istore        54
551: new           #72
554: dup
555: invokespecial #73
558: astore        55
560: new           #72
563: dup
564: invokespecial #73
567: astore        56
569: aload         56
571: invokevirtual #74
574: astore        57
576: iconst_2
577: anewarray     #75
580: dup
581: iconst_0
582: aload         55
584: aastore
585: dup
586: iconst_1
587: aload         56
589: aastore
590: astore        58
592: aload         58
594: invokestatic  #76
597: astore        59
599: aload         58
601: invokestatic  #77
604: astore        60
606: aload         58
608: checkcast     #89
611: invokestatic  #90
614: astore        61
616: getstatic     #78
619: astore        62
621: aload         53
623: bipush        97
625: aload         61
627: aload         62
629: ldc2_w        #91
632: ldc2_w        #93
635: ldc2_w        #91
638: invokevirtual #44
641: astore        63
643: aload         53
645: invokevirtual #51
648: astore        64
650: aload         53
652: invokevirtual #110
655: astore        65
657: aload_2
658: bipush        32
660: aload         51
662: aload         65
664: dconst_0
665: ldc2_w        #290
668: ldc2_w        #427
671: invokevirtual #44
674: astore        66
676: aload         66
678: invokevirtual #616
681: dstore        67
683: aload         66
685: invokevirtual #616
688: dstore        69
690: aload         66
692: invokevirtual #513
695: dstore        71
697: new           #54
700: dup
701: invokespecial #55
704: ldc           #56
706: invokevirtual #57
709: iload_3
710: invokevirtual #62
713: ldc           #59
715: invokevirtual #57
718: iconst_0
719: invokevirtual #62
722: ldc           #56
724: invokevirtual #57
727: invokevirtual #60
730: iload_3
731: ifne          738
734: iconst_1
735: goto          739
738: iconst_0
739: invokestatic  #61
742: aload         6
744: invokestatic  #47
747: aload         7
749: invokestatic  #47
752: aload         8
754: invokestatic  #47
757: aload         9
759: invokestatic  #47
762: aload         10
764: invokestatic  #47
767: new           #54
770: dup
771: invokespecial #55
774: ldc           #56
776: invokevirtual #57
779: aload         11
781: invokevirtual #82
784: ldc           #59
786: invokevirtual #57
789: getstatic     #78
792: invokevirtual #82
795: ldc           #56
797: invokevirtual #57
800: invokevirtual #60
803: aload         11
805: getstatic     #78
808: invokevirtual #83
811: invokestatic  #61
814: aload         12
816: invokestatic  #47
819: aload         13
821: invokestatic  #47
824: new           #54
827: dup
828: invokespecial #55
831: ldc           #56
833: invokevirtual #57
836: aload         14
838: invokevirtual #82
841: ldc           #59
843: invokevirtual #57
846: getstatic     #78
849: invokevirtual #82
852: ldc           #56
854: invokevirtual #57
857: invokevirtual #60
860: aload         14
862: getstatic     #78
865: invokevirtual #83
868: invokestatic  #61
871: aload         15
873: invokestatic  #47
876: aload         17
878: invokestatic  #47
881: new           #54
884: dup
885: invokespecial #55
888: ldc           #56
890: invokevirtual #57
893: aload         18
895: invokevirtual #82
898: ldc           #59
900: invokevirtual #57
903: getstatic     #78
906: invokevirtual #82
909: ldc           #56
911: invokevirtual #57
914: invokevirtual #60
917: aload         18
919: getstatic     #78
922: invokevirtual #83
925: invokestatic  #61
928: aload         19
930: invokestatic  #47
933: new           #54
936: dup
937: invokespecial #55
940: ldc           #56
942: invokevirtual #57
945: dload         20
947: invokevirtual #58
950: ldc           #59
952: invokevirtual #57
955: dconst_0
956: invokevirtual #58
959: ldc           #56
961: invokevirtual #57
964: invokevirtual #60
967: dload         20
969: dconst_0
970: dcmpl
971: ifne          978
974: iconst_1
975: goto          979
978: iconst_0
979: invokestatic  #61
982: new           #54
985: dup
986: invokespecial #55
989: ldc           #56
991: invokevirtual #57
994: iload         22
996: invokevirtual #62
999: ldc           #59
1001: invokevirtual #57
1004: bipush        97
1006: invokevirtual #62
1009: ldc           #56
1011: invokevirtual #57
1014: invokevirtual #60
1017: iload         22
1019: bipush        97
1021: if_icmpne     1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #61
1032: aload         23
1034: invokestatic  #104
1037: aload         27
1039: invokestatic  #47
1042: aload         30
1044: invokestatic  #47
1047: aload         31
1049: invokestatic  #47
1052: aload         34
1054: invokestatic  #47
1057: aload         37
1059: invokestatic  #47
1062: aload         38
1064: invokestatic  #47
1067: aload         40
1069: invokestatic  #47
1072: aload         42
1074: invokestatic  #47
1077: aload         45
1079: invokestatic  #47
1082: aload         48
1084: invokestatic  #47
1087: aload         49
1089: invokestatic  #47
1092: aload         50
1094: invokestatic  #47
1097: aload         51
1099: invokestatic  #47
1102: new           #54
1105: dup
1106: invokespecial #55
1109: ldc           #56
1111: invokevirtual #57
1114: iload         54
1116: invokevirtual #62
1119: ldc           #59
1121: invokevirtual #57
1124: iconst_0
1125: invokevirtual #62
1128: ldc           #56
1130: invokevirtual #57
1133: invokevirtual #60
1136: iload         54
1138: ifne          1145
1141: iconst_1
1142: goto          1146
1145: iconst_0
1146: invokestatic  #61
1149: aload         57
1151: invokestatic  #47
1154: aload         58
1156: invokestatic  #47
1159: aload         59
1161: invokestatic  #47
1164: aload         60
1166: invokestatic  #47
1169: aload         61
1171: invokestatic  #47
1174: new           #54
1177: dup
1178: invokespecial #55
1181: ldc           #56
1183: invokevirtual #57
1186: aload         62
1188: invokevirtual #82
1191: ldc           #59
1193: invokevirtual #57
1196: getstatic     #78
1199: invokevirtual #82
1202: ldc           #56
1204: invokevirtual #57
1207: invokevirtual #60
1210: aload         62
1212: getstatic     #78
1215: invokevirtual #83
1218: invokestatic  #61
1221: aload         63
1223: invokestatic  #47
1226: aload         64
1228: invokestatic  #47
1231: new           #54
1234: dup
1235: invokespecial #55
1238: ldc           #56
1240: invokevirtual #57
1243: aload         65
1245: invokevirtual #82
1248: ldc           #59
1250: invokevirtual #57
1253: getstatic     #78
1256: invokevirtual #82
1259: ldc           #56
1261: invokevirtual #57
1264: invokevirtual #60
1267: aload         65
1269: getstatic     #78
1272: invokevirtual #83
1275: invokestatic  #61
1278: aload         66
1280: invokestatic  #47
1283: new           #54
1286: dup
1287: invokespecial #55
1290: ldc           #56
1292: invokevirtual #57
1295: dload         67
1297: invokevirtual #58
1300: ldc           #59
1302: invokevirtual #57
1305: ldc2_w        #772
1308: invokevirtual #58
1311: ldc           #56
1313: invokevirtual #57
1316: invokevirtual #60
1319: dload         67
1321: ldc2_w        #772
1324: dcmpl
1325: ifne          1332
1328: iconst_1
1329: goto          1333
1332: iconst_0
1333: invokestatic  #61
1336: new           #54
1339: dup
1340: invokespecial #55
1343: ldc           #56
1345: invokevirtual #57
1348: dload         69
1350: invokevirtual #58
1353: ldc           #59
1355: invokevirtual #57
1358: ldc2_w        #772
1361: invokevirtual #58
1364: ldc           #56
1366: invokevirtual #57
1369: invokevirtual #60
1372: dload         69
1374: ldc2_w        #772
1377: dcmpl
1378: ifne          1385
1381: iconst_1
1382: goto          1386
1385: iconst_0
1386: invokestatic  #61
1389: new           #54
1392: dup
1393: invokespecial #55
1396: ldc           #56
1398: invokevirtual #57
1401: dload         71
1403: invokevirtual #58
1406: ldc           #59
1408: invokevirtual #57
1411: ldc2_w        #774
1414: invokevirtual #58
1417: ldc           #56
1419: invokevirtual #57
1422: invokevirtual #60
1425: dload         71
1427: ldc2_w        #774
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #61
1442: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test229
Start line: 10483
End line: 10537
Method source code: 
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        double double23 = sin20.value((double) (short) 10);
        double double25 = sin20.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin20.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin20.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin20.derivative();
        double double30 = sin20.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer3.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin20, goalType31, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction36 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin20);
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure38 = sin20.value(derivativeStructure37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.5440211108893698d) + "'", double23 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9922682874719476d + "'", double25 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.01745240643728351d) + "'", double30 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #776
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: new           #72
147: dup
148: invokespecial #73
151: astore        14
153: aload         14
155: invokevirtual #74
158: astore        15
160: aload         14
162: ldc2_w        #91
165: invokevirtual #88
168: dstore        16
170: aload         14
172: ldc2_w        #373
175: invokevirtual #88
178: dstore        18
180: aload         14
182: invokevirtual #74
185: astore        20
187: aload         14
189: invokevirtual #74
192: astore        21
194: aload         14
196: invokevirtual #74
199: astore        22
201: aload         14
203: ldc2_w        #427
206: invokevirtual #88
209: dstore        23
211: getstatic     #118
214: astore        25
216: aload_2
217: bipush        52
219: aload         14
221: aload         25
223: ldc2_w        #614
226: ldc2_w        #477
229: dconst_0
230: invokevirtual #44
233: astore        26
235: aload         14
237: invokestatic  #281
240: astore        27
242: aconst_null
243: astore        28
245: aload         14
247: aload         28
249: invokevirtual #405
252: astore        29
254: ldc           #119
256: invokestatic  #15
259: goto          264
262: astore        29
264: new           #54
267: dup
268: invokespecial #55
271: ldc           #56
273: invokevirtual #57
276: iload_3
277: invokevirtual #62
280: ldc           #59
282: invokevirtual #57
285: iconst_0
286: invokevirtual #62
289: ldc           #56
291: invokevirtual #57
294: invokevirtual #60
297: iload_3
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #61
309: aload         6
311: invokestatic  #47
314: aload         7
316: invokestatic  #47
319: aload         8
321: invokestatic  #47
324: aload         9
326: invokestatic  #47
329: aload         10
331: invokestatic  #47
334: new           #54
337: dup
338: invokespecial #55
341: ldc           #56
343: invokevirtual #57
346: aload         11
348: invokevirtual #82
351: ldc           #59
353: invokevirtual #57
356: getstatic     #78
359: invokevirtual #82
362: ldc           #56
364: invokevirtual #57
367: invokevirtual #60
370: aload         11
372: getstatic     #78
375: invokevirtual #83
378: invokestatic  #61
381: aload         12
383: invokestatic  #47
386: new           #54
389: dup
390: invokespecial #55
393: ldc           #56
395: invokevirtual #57
398: iload         13
400: invokevirtual #62
403: ldc           #59
405: invokevirtual #57
408: bipush        97
410: invokevirtual #62
413: ldc           #56
415: invokevirtual #57
418: invokevirtual #60
421: iload         13
423: bipush        97
425: if_icmpne     432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #61
436: aload         15
438: invokestatic  #47
441: new           #54
444: dup
445: invokespecial #55
448: ldc           #56
450: invokevirtual #57
453: dload         16
455: invokevirtual #58
458: ldc           #59
460: invokevirtual #57
463: ldc2_w        #406
466: invokevirtual #58
469: ldc           #56
471: invokevirtual #57
474: invokevirtual #60
477: dload         16
479: ldc2_w        #406
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #61
494: new           #54
497: dup
498: invokespecial #55
501: ldc           #56
503: invokevirtual #57
506: dload         18
508: invokevirtual #58
511: ldc           #59
513: invokevirtual #57
516: ldc2_w        #247
519: invokevirtual #58
522: ldc           #56
524: invokevirtual #57
527: invokevirtual #60
530: dload         18
532: ldc2_w        #247
535: dcmpl
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #61
547: aload         20
549: invokestatic  #47
552: aload         21
554: invokestatic  #47
557: aload         22
559: invokestatic  #47
562: new           #54
565: dup
566: invokespecial #55
569: ldc           #56
571: invokevirtual #57
574: dload         23
576: invokevirtual #58
579: ldc           #59
581: invokevirtual #57
584: ldc2_w        #617
587: invokevirtual #58
590: ldc           #56
592: invokevirtual #57
595: invokevirtual #60
598: dload         23
600: ldc2_w        #617
603: dcmpl
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #61
615: new           #54
618: dup
619: invokespecial #55
622: ldc           #56
624: invokevirtual #57
627: aload         25
629: invokevirtual #82
632: ldc           #59
634: invokevirtual #57
637: getstatic     #118
640: invokevirtual #82
643: ldc           #56
645: invokevirtual #57
648: invokevirtual #60
651: aload         25
653: getstatic     #118
656: invokevirtual #83
659: invokestatic  #61
662: aload         26
664: invokestatic  #47
667: aload         27
669: invokestatic  #47
672: return
Exception table:
from    to  target type
245   259   262   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test230
Start line: 10540
End line: 10546
Method source code: 
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(192.23056381465545d, 0.9999999999999999d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = brentOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #777
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #722
32: ldc2_w        #724
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #103
43: astore_2
44: aload_2
45: invokestatic  #104
48: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test231
Start line: 10549
End line: 10560
Method source code: 
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(101.0d, (-0.7615941559557649d), univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -0.762 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #778
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #734
34: ldc2_w        #779
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #781
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test232
Start line: 10563
End line: 10668
Method source code: 
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        int int77 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray79 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction80 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray79);
        org.apache.commons.math3.optimization.GoalType goalType81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer3.optimize(17, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction80, goalType81, 0.0d, 1.208662425748988d, 74.20324596385817d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray79);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #782
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: invokevirtual #71
590: istore        58
592: iconst_0
593: anewarray     #141
596: astore        59
598: aload         59
600: invokestatic  #142
603: astore        60
605: aconst_null
606: astore        61
608: aload_2
609: bipush        17
611: aload         60
613: aload         61
615: dconst_0
616: ldc2_w        #277
619: ldc2_w        #783
622: invokevirtual #44
625: astore        62
627: ldc           #45
629: invokestatic  #15
632: goto          637
635: astore        62
637: new           #54
640: dup
641: invokespecial #55
644: ldc           #56
646: invokevirtual #57
649: iload_3
650: invokevirtual #62
653: ldc           #59
655: invokevirtual #57
658: iconst_0
659: invokevirtual #62
662: ldc           #56
664: invokevirtual #57
667: invokevirtual #60
670: iload_3
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #61
682: aload         6
684: invokestatic  #47
687: aload         7
689: invokestatic  #47
692: aload         8
694: invokestatic  #47
697: aload         9
699: invokestatic  #47
702: aload         10
704: invokestatic  #47
707: new           #54
710: dup
711: invokespecial #55
714: ldc           #56
716: invokevirtual #57
719: aload         11
721: invokevirtual #82
724: ldc           #59
726: invokevirtual #57
729: getstatic     #78
732: invokevirtual #82
735: ldc           #56
737: invokevirtual #57
740: invokevirtual #60
743: aload         11
745: getstatic     #78
748: invokevirtual #83
751: invokestatic  #61
754: aload         12
756: invokestatic  #47
759: new           #54
762: dup
763: invokespecial #55
766: ldc           #56
768: invokevirtual #57
771: iload         13
773: invokevirtual #62
776: ldc           #59
778: invokevirtual #57
781: bipush        97
783: invokevirtual #62
786: ldc           #56
788: invokevirtual #57
791: invokevirtual #60
794: iload         13
796: bipush        97
798: if_icmpne     805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #61
809: aload         19
811: invokestatic  #47
814: aload         22
816: invokestatic  #47
819: aload         23
821: invokestatic  #47
824: aload         26
826: invokestatic  #47
829: aload         28
831: invokestatic  #47
834: new           #54
837: dup
838: invokespecial #55
841: ldc           #56
843: invokevirtual #57
846: iload         31
848: invokevirtual #62
851: ldc           #59
853: invokevirtual #57
856: iconst_0
857: invokevirtual #62
860: ldc           #56
862: invokevirtual #57
865: invokevirtual #60
868: iload         31
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #61
881: new           #54
884: dup
885: invokespecial #55
888: ldc           #56
890: invokevirtual #57
893: dload         32
895: invokevirtual #58
898: ldc           #59
900: invokevirtual #57
903: dconst_0
904: invokevirtual #58
907: ldc           #56
909: invokevirtual #57
912: invokevirtual #60
915: dload         32
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #61
930: aload         36
932: invokestatic  #47
935: aload         39
937: invokestatic  #47
940: aload         40
942: invokestatic  #47
945: aload         41
947: invokestatic  #47
950: new           #54
953: dup
954: invokespecial #55
957: ldc           #56
959: invokevirtual #57
962: iload         44
964: invokevirtual #62
967: ldc           #59
969: invokevirtual #57
972: iconst_0
973: invokevirtual #62
976: ldc           #56
978: invokevirtual #57
981: invokevirtual #60
984: iload         44
986: ifne          993
989: iconst_1
990: goto          994
993: iconst_0
994: invokestatic  #61
997: aload         47
999: invokestatic  #47
1002: aload         48
1004: invokestatic  #47
1007: aload         49
1009: invokestatic  #47
1012: aload         50
1014: invokestatic  #47
1017: aload         51
1019: invokestatic  #47
1022: new           #54
1025: dup
1026: invokespecial #55
1029: ldc           #56
1031: invokevirtual #57
1034: aload         52
1036: invokevirtual #82
1039: ldc           #59
1041: invokevirtual #57
1044: getstatic     #78
1047: invokevirtual #82
1050: ldc           #56
1052: invokevirtual #57
1055: invokevirtual #60
1058: aload         52
1060: getstatic     #78
1063: invokevirtual #83
1066: invokestatic  #61
1069: aload         53
1071: invokestatic  #47
1074: aload         54
1076: invokestatic  #47
1079: new           #54
1082: dup
1083: invokespecial #55
1086: ldc           #56
1088: invokevirtual #57
1091: aload         55
1093: invokevirtual #82
1096: ldc           #59
1098: invokevirtual #57
1101: getstatic     #78
1104: invokevirtual #82
1107: ldc           #56
1109: invokevirtual #57
1112: invokevirtual #60
1115: aload         55
1117: getstatic     #78
1120: invokevirtual #83
1123: invokestatic  #61
1126: aload         56
1128: invokestatic  #47
1131: aload         57
1133: invokestatic  #47
1136: new           #54
1139: dup
1140: invokespecial #55
1143: ldc           #56
1145: invokevirtual #57
1148: iload         58
1150: invokevirtual #62
1153: ldc           #59
1155: invokevirtual #57
1158: iconst_1
1159: invokevirtual #62
1162: ldc           #56
1164: invokevirtual #57
1167: invokevirtual #60
1170: iload         58
1172: iconst_1
1173: if_icmpne     1180
1176: iconst_1
1177: goto          1181
1180: iconst_0
1181: invokestatic  #61
1184: aload         59
1186: invokestatic  #47
1189: aload         60
1191: invokestatic  #47
1194: return
Exception table:
from    to  target type
608   632   635   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test233
Start line: 10671
End line: 10676
Method source code: 
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(1.7329193250994747E10d, 36.40055311432538d, univariatePointValuePairConvergenceChecker2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #785
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #786
34: ldc2_w        #97
37: aload_1
38: invokespecial #13
41: astore_2
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test234
Start line: 10679
End line: 10768
Method source code: 
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker74 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #788
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #103
512: astore        53
514: new           #54
517: dup
518: invokespecial #55
521: ldc           #56
523: invokevirtual #57
526: iload_3
527: invokevirtual #62
530: ldc           #59
532: invokevirtual #57
535: iconst_0
536: invokevirtual #62
539: ldc           #56
541: invokevirtual #57
544: invokevirtual #60
547: iload_3
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #61
559: aload         6
561: invokestatic  #47
564: aload         7
566: invokestatic  #47
569: aload         8
571: invokestatic  #47
574: aload         9
576: invokestatic  #47
579: aload         10
581: invokestatic  #47
584: new           #54
587: dup
588: invokespecial #55
591: ldc           #56
593: invokevirtual #57
596: aload         11
598: invokevirtual #82
601: ldc           #59
603: invokevirtual #57
606: getstatic     #78
609: invokevirtual #82
612: ldc           #56
614: invokevirtual #57
617: invokevirtual #60
620: aload         11
622: getstatic     #78
625: invokevirtual #83
628: invokestatic  #61
631: aload         12
633: invokestatic  #47
636: aload         13
638: invokestatic  #47
641: new           #54
644: dup
645: invokespecial #55
648: ldc           #56
650: invokevirtual #57
653: aload         14
655: invokevirtual #82
658: ldc           #59
660: invokevirtual #57
663: getstatic     #78
666: invokevirtual #82
669: ldc           #56
671: invokevirtual #57
674: invokevirtual #60
677: aload         14
679: getstatic     #78
682: invokevirtual #83
685: invokestatic  #61
688: aload         15
690: invokestatic  #47
693: aload         17
695: invokestatic  #47
698: new           #54
701: dup
702: invokespecial #55
705: ldc           #56
707: invokevirtual #57
710: aload         18
712: invokevirtual #82
715: ldc           #59
717: invokevirtual #57
720: getstatic     #78
723: invokevirtual #82
726: ldc           #56
728: invokevirtual #57
731: invokevirtual #60
734: aload         18
736: getstatic     #78
739: invokevirtual #83
742: invokestatic  #61
745: aload         19
747: invokestatic  #47
750: new           #54
753: dup
754: invokespecial #55
757: ldc           #56
759: invokevirtual #57
762: dload         20
764: invokevirtual #58
767: ldc           #59
769: invokevirtual #57
772: dconst_0
773: invokevirtual #58
776: ldc           #56
778: invokevirtual #57
781: invokevirtual #60
784: dload         20
786: dconst_0
787: dcmpl
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #61
799: aload         23
801: invokestatic  #47
804: new           #54
807: dup
808: invokespecial #55
811: ldc           #56
813: invokevirtual #57
816: iload         26
818: invokevirtual #62
821: ldc           #59
823: invokevirtual #57
826: iconst_0
827: invokevirtual #62
830: ldc           #56
832: invokevirtual #57
835: invokevirtual #60
838: iload         26
840: ifne          847
843: iconst_1
844: goto          848
847: iconst_0
848: invokestatic  #61
851: new           #54
854: dup
855: invokespecial #55
858: ldc           #56
860: invokevirtual #57
863: dload         27
865: invokevirtual #58
868: ldc           #59
870: invokevirtual #57
873: dconst_0
874: invokevirtual #58
877: ldc           #56
879: invokevirtual #57
882: invokevirtual #60
885: dload         27
887: dconst_0
888: dcmpl
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #61
900: aload         31
902: invokestatic  #47
905: aload         34
907: invokestatic  #47
910: aload         35
912: invokestatic  #47
915: aload         36
917: invokestatic  #47
920: new           #54
923: dup
924: invokespecial #55
927: ldc           #56
929: invokevirtual #57
932: iload         39
934: invokevirtual #62
937: ldc           #59
939: invokevirtual #57
942: iconst_0
943: invokevirtual #62
946: ldc           #56
948: invokevirtual #57
951: invokevirtual #60
954: iload         39
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #61
967: aload         42
969: invokestatic  #47
972: aload         43
974: invokestatic  #47
977: aload         44
979: invokestatic  #47
982: aload         45
984: invokestatic  #47
987: aload         46
989: invokestatic  #47
992: new           #54
995: dup
996: invokespecial #55
999: ldc           #56
1001: invokevirtual #57
1004: aload         47
1006: invokevirtual #82
1009: ldc           #59
1011: invokevirtual #57
1014: getstatic     #78
1017: invokevirtual #82
1020: ldc           #56
1022: invokevirtual #57
1025: invokevirtual #60
1028: aload         47
1030: getstatic     #78
1033: invokevirtual #83
1036: invokestatic  #61
1039: aload         48
1041: invokestatic  #47
1044: aload         49
1046: invokestatic  #47
1049: new           #54
1052: dup
1053: invokespecial #55
1056: ldc           #56
1058: invokevirtual #57
1061: aload         50
1063: invokevirtual #82
1066: ldc           #59
1068: invokevirtual #57
1071: getstatic     #78
1074: invokevirtual #82
1077: ldc           #56
1079: invokevirtual #57
1082: invokevirtual #60
1085: aload         50
1087: getstatic     #78
1090: invokevirtual #83
1093: invokestatic  #61
1096: aload         51
1098: invokestatic  #47
1101: aload         52
1103: invokestatic  #47
1106: aload         53
1108: invokestatic  #104
1111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test235
Start line: 10771
End line: 10776
Method source code: 
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(57926.033087726224d, (double) (short) 100, univariatePointValuePairConvergenceChecker2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #789
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #790
34: ldc2_w        #153
37: aload_1
38: invokespecial #13
41: astore_2
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test236
Start line: 10779
End line: 10871
Method source code: 
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable7 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray8 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction9 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException11 = new org.apache.commons.math3.exception.NullArgumentException(localizable7, (java.lang.Object[]) differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer17 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker16);
        int int18 = brentOptimizer17.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray23 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin20, sin21 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray23);
        org.apache.commons.math3.optimization.GoalType goalType27 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer17.optimize(97, univariateFunction26, goalType27, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer17.doOptimize();
        double double33 = brentOptimizer17.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable35 = null;
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction38 = sin37.derivative();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray41 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin36, sin37, sin39, sin40 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable42 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray41);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException43 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable35, (java.lang.Object[]) univariateDifferentiableArray41);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray41);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer48 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker47);
        int int49 = brentOptimizer48.getEvaluations();
        int int50 = brentOptimizer48.getEvaluations();
        int int51 = brentOptimizer48.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction53 = null;
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = sin55.derivative();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray59 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin54, sin55, sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable60 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray59);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction61 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray59);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray59);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction64 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction53, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable62, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType65 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer48.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable62, goalType65, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer17.optimize((int) (byte) 100, univariateFunction44, goalType65, 1.2786363145140075E-4d, (-1.5596856728972892d), 2.2227587494850775E-162d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction13, goalType65, (-0.017453292519943295d), 12.000000000000002d, 5.293955920339377E-23d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray8);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction9);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction10);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction12);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray23);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType27.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair31);
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.4210854715202004E-14d + "'", double33 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction38);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray41);
        org.junit.Assert.assertNotNull(univariateDifferentiable42);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray59);
        org.junit.Assert.assertNotNull(univariateDifferentiable60);
        org.junit.Assert.assertNotNull(univariateFunction61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(multivariateFunction64);
        org.junit.Assert.assertTrue("'" + goalType65 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType65.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #792
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aconst_null
54: astore        5
56: iconst_0
57: anewarray     #141
60: astore        6
62: aload         6
64: invokestatic  #142
67: astore        7
69: aload         6
71: invokestatic  #245
74: astore        8
76: new           #46
79: dup
80: aload         5
82: aload         6
84: checkcast     #123
87: invokespecial #246
90: astore        9
92: aload         6
94: invokestatic  #142
97: astore        10
99: aload         6
101: invokestatic  #142
104: astore        11
106: aconst_null
107: astore        12
109: new           #8
112: dup
113: ldc2_w        #31
116: ldc2_w        #33
119: aload         12
121: invokespecial #13
124: astore        13
126: aload         13
128: invokevirtual #71
131: istore        14
133: new           #72
136: dup
137: invokespecial #73
140: astore        15
142: new           #72
145: dup
146: invokespecial #73
149: astore        16
151: aload         16
153: invokevirtual #74
156: astore        17
158: iconst_2
159: anewarray     #75
162: dup
163: iconst_0
164: aload         15
166: aastore
167: dup
168: iconst_1
169: aload         16
171: aastore
172: astore        18
174: aload         18
176: invokestatic  #76
179: astore        19
181: aload         18
183: invokestatic  #77
186: astore        20
188: aload         18
190: checkcast     #89
193: invokestatic  #90
196: astore        21
198: getstatic     #78
201: astore        22
203: aload         13
205: bipush        97
207: aload         21
209: aload         22
211: ldc2_w        #91
214: ldc2_w        #93
217: ldc2_w        #91
220: invokevirtual #44
223: astore        23
225: aload         13
227: invokevirtual #51
230: astore        24
232: aload         13
234: invokevirtual #49
237: dstore        25
239: aconst_null
240: astore        27
242: new           #72
245: dup
246: invokespecial #73
249: astore        28
251: new           #72
254: dup
255: invokespecial #73
258: astore        29
260: aload         29
262: invokevirtual #74
265: astore        30
267: new           #72
270: dup
271: invokespecial #73
274: astore        31
276: new           #72
279: dup
280: invokespecial #73
283: astore        32
285: iconst_4
286: anewarray     #75
289: dup
290: iconst_0
291: aload         28
293: aastore
294: dup
295: iconst_1
296: aload         29
298: aastore
299: dup
300: iconst_2
301: aload         31
303: aastore
304: dup
305: iconst_3
306: aload         32
308: aastore
309: astore        33
311: aload         33
313: invokestatic  #76
316: astore        34
318: new           #122
321: dup
322: aload         27
324: aload         33
326: checkcast     #123
329: invokespecial #124
332: astore        35
334: aload         33
336: checkcast     #89
339: invokestatic  #109
342: astore        36
344: aconst_null
345: astore        37
347: new           #8
350: dup
351: ldc2_w        #31
354: ldc2_w        #33
357: aload         37
359: invokespecial #13
362: astore        38
364: aload         38
366: invokevirtual #71
369: istore        39
371: aload         38
373: invokevirtual #71
376: istore        40
378: aload         38
380: invokevirtual #71
383: istore        41
385: aconst_null
386: astore        42
388: new           #72
391: dup
392: invokespecial #73
395: astore        43
397: new           #72
400: dup
401: invokespecial #73
404: astore        44
406: aload         44
408: invokevirtual #74
411: astore        45
413: new           #72
416: dup
417: invokespecial #73
420: astore        46
422: new           #72
425: dup
426: invokespecial #73
429: astore        47
431: iconst_4
432: anewarray     #75
435: dup
436: iconst_0
437: aload         43
439: aastore
440: dup
441: iconst_1
442: aload         44
444: aastore
445: dup
446: iconst_2
447: aload         46
449: aastore
450: dup
451: iconst_3
452: aload         47
454: aastore
455: astore        48
457: aload         48
459: invokestatic  #76
462: astore        49
464: aload         48
466: checkcast     #89
469: invokestatic  #109
472: astore        50
474: aload         48
476: invokestatic  #77
479: astore        51
481: aload         42
483: aload         51
485: ldc2_w        #181
488: invokestatic  #183
491: astore        52
493: getstatic     #118
496: astore        53
498: aload         38
500: bipush        10
502: aload         51
504: aload         53
506: ldc2_w        #184
509: ldc2_w        #186
512: ldc2_w        #188
515: invokevirtual #44
518: astore        54
520: aload         13
522: bipush        100
524: aload         36
526: aload         53
528: ldc2_w        #238
531: ldc2_w        #400
534: ldc2_w        #402
537: invokevirtual #44
540: astore        55
542: aload_2
543: bipush        10
545: aload         11
547: aload         53
549: ldc2_w        #427
552: ldc2_w        #504
555: ldc2_w        #793
558: invokevirtual #44
561: astore        56
563: new           #54
566: dup
567: invokespecial #55
570: ldc           #56
572: invokevirtual #57
575: iload_3
576: invokevirtual #62
579: ldc           #59
581: invokevirtual #57
584: iconst_0
585: invokevirtual #62
588: ldc           #56
590: invokevirtual #57
593: invokevirtual #60
596: iload_3
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #61
608: new           #54
611: dup
612: invokespecial #55
615: ldc           #56
617: invokevirtual #57
620: iload         4
622: invokevirtual #62
625: ldc           #59
627: invokevirtual #57
630: iconst_0
631: invokevirtual #62
634: ldc           #56
636: invokevirtual #57
639: invokevirtual #60
642: iload         4
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #61
655: aload         6
657: invokestatic  #47
660: aload         7
662: invokestatic  #47
665: aload         8
667: invokestatic  #47
670: aload         10
672: invokestatic  #47
675: aload         11
677: invokestatic  #47
680: new           #54
683: dup
684: invokespecial #55
687: ldc           #56
689: invokevirtual #57
692: iload         14
694: invokevirtual #62
697: ldc           #59
699: invokevirtual #57
702: iconst_0
703: invokevirtual #62
706: ldc           #56
708: invokevirtual #57
711: invokevirtual #60
714: iload         14
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #61
727: aload         17
729: invokestatic  #47
732: aload         18
734: invokestatic  #47
737: aload         19
739: invokestatic  #47
742: aload         20
744: invokestatic  #47
747: aload         21
749: invokestatic  #47
752: new           #54
755: dup
756: invokespecial #55
759: ldc           #56
761: invokevirtual #57
764: aload         22
766: invokevirtual #82
769: ldc           #59
771: invokevirtual #57
774: getstatic     #78
777: invokevirtual #82
780: ldc           #56
782: invokevirtual #57
785: invokevirtual #60
788: aload         22
790: getstatic     #78
793: invokevirtual #83
796: invokestatic  #61
799: aload         23
801: invokestatic  #47
804: aload         24
806: invokestatic  #47
809: new           #54
812: dup
813: invokespecial #55
816: ldc           #56
818: invokevirtual #57
821: dload         25
823: invokevirtual #58
826: ldc           #59
828: invokevirtual #57
831: ldc2_w        #93
834: invokevirtual #58
837: ldc           #56
839: invokevirtual #57
842: invokevirtual #60
845: dload         25
847: ldc2_w        #93
850: dcmpl
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #61
862: aload         30
864: invokestatic  #47
867: aload         33
869: invokestatic  #47
872: aload         34
874: invokestatic  #47
877: aload         36
879: invokestatic  #47
882: new           #54
885: dup
886: invokespecial #55
889: ldc           #56
891: invokevirtual #57
894: iload         39
896: invokevirtual #62
899: ldc           #59
901: invokevirtual #57
904: iconst_0
905: invokevirtual #62
908: ldc           #56
910: invokevirtual #57
913: invokevirtual #60
916: iload         39
918: ifne          925
921: iconst_1
922: goto          926
925: iconst_0
926: invokestatic  #61
929: new           #54
932: dup
933: invokespecial #55
936: ldc           #56
938: invokevirtual #57
941: iload         40
943: invokevirtual #62
946: ldc           #59
948: invokevirtual #57
951: iconst_0
952: invokevirtual #62
955: ldc           #56
957: invokevirtual #57
960: invokevirtual #60
963: iload         40
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #61
976: new           #54
979: dup
980: invokespecial #55
983: ldc           #56
985: invokevirtual #57
988: iload         41
990: invokevirtual #62
993: ldc           #59
995: invokevirtual #57
998: iconst_0
999: invokevirtual #62
1002: ldc           #56
1004: invokevirtual #57
1007: invokevirtual #60
1010: iload         41
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #61
1023: aload         45
1025: invokestatic  #47
1028: aload         48
1030: invokestatic  #47
1033: aload         49
1035: invokestatic  #47
1038: aload         50
1040: invokestatic  #47
1043: aload         51
1045: invokestatic  #47
1048: aload         52
1050: invokestatic  #47
1053: new           #54
1056: dup
1057: invokespecial #55
1060: ldc           #56
1062: invokevirtual #57
1065: aload         53
1067: invokevirtual #82
1070: ldc           #59
1072: invokevirtual #57
1075: getstatic     #118
1078: invokevirtual #82
1081: ldc           #56
1083: invokevirtual #57
1086: invokevirtual #60
1089: aload         53
1091: getstatic     #118
1094: invokevirtual #83
1097: invokestatic  #61
1100: aload         54
1102: invokestatic  #47
1105: aload         55
1107: invokestatic  #47
1110: aload         56
1112: invokestatic  #47
1115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test237
Start line: 10874
End line: 10918
Method source code: 
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        double double31 = brentOptimizer3.computeObjectiveValue(0.3457432918138511d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker32 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.33889607743961436d + "'", double31 == 0.33889607743961436d);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #795
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: ldc2_w        #643
209: invokevirtual #158
212: dstore        23
214: aload_2
215: invokevirtual #103
218: astore        25
220: new           #54
223: dup
224: invokespecial #55
227: ldc           #56
229: invokevirtual #57
232: iload_3
233: invokevirtual #62
236: ldc           #59
238: invokevirtual #57
241: iconst_0
242: invokevirtual #62
245: ldc           #56
247: invokevirtual #57
250: invokevirtual #60
253: iload_3
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #61
265: aload         6
267: invokestatic  #47
270: aload         7
272: invokestatic  #47
275: aload         8
277: invokestatic  #47
280: aload         9
282: invokestatic  #47
285: aload         10
287: invokestatic  #47
290: new           #54
293: dup
294: invokespecial #55
297: ldc           #56
299: invokevirtual #57
302: aload         11
304: invokevirtual #82
307: ldc           #59
309: invokevirtual #57
312: getstatic     #78
315: invokevirtual #82
318: ldc           #56
320: invokevirtual #57
323: invokevirtual #60
326: aload         11
328: getstatic     #78
331: invokevirtual #83
334: invokestatic  #61
337: aload         12
339: invokestatic  #47
342: aload         13
344: invokestatic  #47
347: new           #54
350: dup
351: invokespecial #55
354: ldc           #56
356: invokevirtual #57
359: aload         14
361: invokevirtual #82
364: ldc           #59
366: invokevirtual #57
369: getstatic     #78
372: invokevirtual #82
375: ldc           #56
377: invokevirtual #57
380: invokevirtual #60
383: aload         14
385: getstatic     #78
388: invokevirtual #83
391: invokestatic  #61
394: aload         15
396: invokestatic  #47
399: aload         17
401: invokestatic  #47
404: new           #54
407: dup
408: invokespecial #55
411: ldc           #56
413: invokevirtual #57
416: aload         18
418: invokevirtual #82
421: ldc           #59
423: invokevirtual #57
426: getstatic     #78
429: invokevirtual #82
432: ldc           #56
434: invokevirtual #57
437: invokevirtual #60
440: aload         18
442: getstatic     #78
445: invokevirtual #83
448: invokestatic  #61
451: aload         19
453: invokestatic  #47
456: new           #54
459: dup
460: invokespecial #55
463: ldc           #56
465: invokevirtual #57
468: dload         20
470: invokevirtual #58
473: ldc           #59
475: invokevirtual #57
478: dconst_0
479: invokevirtual #58
482: ldc           #56
484: invokevirtual #57
487: invokevirtual #60
490: dload         20
492: dconst_0
493: dcmpl
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #61
505: new           #54
508: dup
509: invokespecial #55
512: ldc           #56
514: invokevirtual #57
517: iload         22
519: invokevirtual #62
522: ldc           #59
524: invokevirtual #57
527: iconst_1
528: invokevirtual #62
531: ldc           #56
533: invokevirtual #57
536: invokevirtual #60
539: iload         22
541: iconst_1
542: if_icmpne     549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #61
553: new           #54
556: dup
557: invokespecial #55
560: ldc           #56
562: invokevirtual #57
565: dload         23
567: invokevirtual #58
570: ldc           #59
572: invokevirtual #57
575: ldc2_w        #645
578: invokevirtual #58
581: ldc           #56
583: invokevirtual #57
586: invokevirtual #60
589: dload         23
591: ldc2_w        #645
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #61
606: aload         25
608: invokestatic  #104
611: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test238
Start line: 10921
End line: 10932
Method source code: 
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(5.880532994392384d, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair3 = brentOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #796
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #797
32: dconst_1
33: invokespecial #25
36: astore_1
37: aload_1
38: invokevirtual #51
41: astore_2
42: ldc           #52
44: invokestatic  #15
47: goto          51
50: astore_2
51: return
Exception table:
from    to  target type
37    47    50   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test239
Start line: 10935
End line: 10939
Method source code: 
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 32, 0.8268795405320025d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #799
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #106
32: ldc2_w        #769
35: invokespecial #25
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test240
Start line: 10942
End line: 10952
Method source code: 
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(0.0d, (double) 22.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #800
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: ldc2_w        #801
33: invokespecial #25
36: astore_1
37: ldc           #29
39: invokestatic  #15
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test241
Start line: 10955
End line: 10988
Method source code: 
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction9 = null;
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        double double13 = sin10.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = null;
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction9, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable14, univariateFunction15);
        org.apache.commons.math3.optimization.GoalType goalType17 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.optimize(10, univariateFunction16, goalType17, 2.6508980319732887d, 0.17453292519943295d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.8414709825806044d + "'", double13 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + goalType17 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType17.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #803
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aconst_null
66: astore        7
68: new           #72
71: dup
72: invokespecial #73
75: astore        8
77: aload         8
79: invokevirtual #74
82: astore        9
84: aload         8
86: ldc2_w        #86
89: invokevirtual #88
92: dstore        10
94: aload         8
96: invokestatic  #143
99: astore        12
101: aconst_null
102: astore        13
104: aload         7
106: aload         12
108: aload         13
110: invokestatic  #404
113: astore        14
115: getstatic     #118
118: astore        15
120: aload_2
121: bipush        10
123: aload         14
125: aload         15
127: ldc2_w        #178
130: ldc2_w        #79
133: dconst_0
134: invokevirtual #44
137: astore        16
139: ldc           #119
141: invokestatic  #15
144: goto          149
147: astore        16
149: new           #54
152: dup
153: invokespecial #55
156: ldc           #56
158: invokevirtual #57
161: iload_3
162: invokevirtual #62
165: ldc           #59
167: invokevirtual #57
170: iconst_0
171: invokevirtual #62
174: ldc           #56
176: invokevirtual #57
179: invokevirtual #60
182: iload_3
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #61
194: new           #54
197: dup
198: invokespecial #55
201: ldc           #56
203: invokevirtual #57
206: iload         4
208: invokevirtual #62
211: ldc           #59
213: invokevirtual #57
216: iconst_0
217: invokevirtual #62
220: ldc           #56
222: invokevirtual #57
225: invokevirtual #60
228: iload         4
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #61
241: new           #54
244: dup
245: invokespecial #55
248: ldc           #56
250: invokevirtual #57
253: iload         5
255: invokevirtual #62
258: ldc           #59
260: invokevirtual #57
263: iconst_0
264: invokevirtual #62
267: ldc           #56
269: invokevirtual #57
272: invokevirtual #60
275: iload         5
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #61
288: aload         6
290: invokestatic  #104
293: aload         9
295: invokestatic  #47
298: new           #54
301: dup
302: invokespecial #55
305: ldc           #56
307: invokevirtual #57
310: dload         10
312: invokevirtual #58
315: ldc           #59
317: invokevirtual #57
320: ldc2_w        #23
323: invokevirtual #58
326: ldc           #56
328: invokevirtual #57
331: invokevirtual #60
334: dload         10
336: ldc2_w        #23
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #61
351: aload         12
353: invokestatic  #47
356: aload         14
358: invokestatic  #47
361: new           #54
364: dup
365: invokespecial #55
368: ldc           #56
370: invokevirtual #57
373: aload         15
375: invokevirtual #82
378: ldc           #59
380: invokevirtual #57
383: getstatic     #118
386: invokevirtual #82
389: ldc           #56
391: invokevirtual #57
394: invokevirtual #60
397: aload         15
399: getstatic     #118
402: invokevirtual #83
405: invokestatic  #61
408: return
Exception table:
from    to  target type
120   144   147   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test242
Start line: 10991
End line: 11089
Method source code: 
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction7 = null;
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.exception.util.Localizable localizable10 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = sin13.derivative();
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray17 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin12, sin13, sin15, sin16 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray17);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException19 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable11, (java.lang.Object[]) univariateDifferentiableArray17);
        org.apache.commons.math3.exception.MathInternalError mathInternalError20 = new org.apache.commons.math3.exception.MathInternalError(localizable10, (java.lang.Object[]) univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray17);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException22 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable8, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable23 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray17);
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin26.derivative();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction[] univariateFunctionArray29 = new org.apache.commons.math3.analysis.UnivariateFunction[] { univariateFunction25, univariateFunction27, sin28 };
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateFunctionArray29);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction7, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable23, univariateFunction30);
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer34 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(284.48901560517237d, 2.4544439362322485d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray45);
        org.apache.commons.math3.optimization.GoalType goalType49 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair53 = brentOptimizer39.optimize(97, univariateFunction48, goalType49, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int54 = brentOptimizer39.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin56 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = sin56.derivative();
        double double59 = sin56.value((double) (short) 10);
        double double61 = sin56.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction62 = sin56.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin56.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction64 = sin56.derivative();
        double double66 = sin56.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType67 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair71 = brentOptimizer39.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin56, goalType67, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin56);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer34.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin56, goalType73, 2.041375977702442d, 8.062017978914582d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair79 = brentOptimizer3.optimize(6, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable23, goalType73, 7.544137102816975d, 320.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (6) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray17);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable23);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateFunctionArray29);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertTrue("'" + goalType49 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType49.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 97 + "'", int54 == 97);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.5440211108893698d) + "'", double59 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.9922682874719476d + "'", double61 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertNotNull(univariateFunction64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.01745240643728351d) + "'", double66 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType67 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType67.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair71);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #804
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aconst_null
54: astore        6
56: aconst_null
57: astore        7
59: aconst_null
60: astore        8
62: aconst_null
63: astore        9
65: new           #72
68: dup
69: invokespecial #73
72: astore        10
74: new           #72
77: dup
78: invokespecial #73
81: astore        11
83: aload         11
85: invokevirtual #74
88: astore        12
90: new           #72
93: dup
94: invokespecial #73
97: astore        13
99: new           #72
102: dup
103: invokespecial #73
106: astore        14
108: iconst_4
109: anewarray     #75
112: dup
113: iconst_0
114: aload         10
116: aastore
117: dup
118: iconst_1
119: aload         11
121: aastore
122: dup
123: iconst_2
124: aload         13
126: aastore
127: dup
128: iconst_3
129: aload         14
131: aastore
132: astore        15
134: aload         15
136: invokestatic  #76
139: astore        16
141: new           #122
144: dup
145: aload         9
147: aload         15
149: checkcast     #123
152: invokespecial #124
155: astore        17
157: new           #125
160: dup
161: aload         8
163: aload         15
165: checkcast     #123
168: invokespecial #126
171: astore        18
173: aload         15
175: invokestatic  #77
178: astore        19
180: new           #313
183: dup
184: aload         7
186: ldc2_w        #79
189: invokestatic  #314
192: aload         15
194: checkcast     #123
197: invokespecial #315
200: astore        20
202: aload         15
204: invokestatic  #76
207: astore        21
209: new           #72
212: dup
213: invokespecial #73
216: astore        22
218: aload         22
220: invokevirtual #74
223: astore        23
225: new           #72
228: dup
229: invokespecial #73
232: astore        24
234: aload         24
236: invokevirtual #74
239: astore        25
241: new           #72
244: dup
245: invokespecial #73
248: astore        26
250: iconst_3
251: anewarray     #283
254: dup
255: iconst_0
256: aload         23
258: aastore
259: dup
260: iconst_1
261: aload         25
263: aastore
264: dup
265: iconst_2
266: aload         26
268: aastore
269: astore        27
271: aload         27
273: invokestatic  #117
276: astore        28
278: aload         6
280: aload         21
282: aload         28
284: invokestatic  #404
287: astore        29
289: new           #8
292: dup
293: ldc2_w        #805
296: ldc2_w        #807
299: invokespecial #25
302: astore        30
304: aconst_null
305: astore        31
307: new           #8
310: dup
311: ldc2_w        #31
314: ldc2_w        #33
317: aload         31
319: invokespecial #13
322: astore        32
324: aload         32
326: invokevirtual #71
329: istore        33
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: iconst_2
357: anewarray     #75
360: dup
361: iconst_0
362: aload         34
364: aastore
365: dup
366: iconst_1
367: aload         35
369: aastore
370: astore        37
372: aload         37
374: invokestatic  #76
377: astore        38
379: aload         37
381: invokestatic  #77
384: astore        39
386: aload         37
388: checkcast     #89
391: invokestatic  #90
394: astore        40
396: getstatic     #78
399: astore        41
401: aload         32
403: bipush        97
405: aload         40
407: aload         41
409: ldc2_w        #91
412: ldc2_w        #93
415: ldc2_w        #91
418: invokevirtual #44
421: astore        42
423: aload         32
425: invokevirtual #50
428: istore        43
430: new           #72
433: dup
434: invokespecial #73
437: astore        44
439: aload         44
441: invokevirtual #74
444: astore        45
446: aload         44
448: ldc2_w        #91
451: invokevirtual #88
454: dstore        46
456: aload         44
458: ldc2_w        #373
461: invokevirtual #88
464: dstore        48
466: aload         44
468: invokevirtual #74
471: astore        50
473: aload         44
475: invokevirtual #74
478: astore        51
480: aload         44
482: invokevirtual #74
485: astore        52
487: aload         44
489: ldc2_w        #427
492: invokevirtual #88
495: dstore        53
497: getstatic     #118
500: astore        55
502: aload         32
504: bipush        52
506: aload         44
508: aload         55
510: ldc2_w        #614
513: ldc2_w        #477
516: dconst_0
517: invokevirtual #44
520: astore        56
522: aload         44
524: invokestatic  #281
527: astore        57
529: getstatic     #118
532: astore        58
534: aload         30
536: bipush        10
538: aload         44
540: aload         58
542: ldc2_w        #809
545: ldc2_w        #811
548: invokevirtual #81
551: astore        59
553: aload_2
554: bipush        6
556: aload         21
558: aload         58
560: ldc2_w        #186
563: ldc2_w        #813
566: invokevirtual #81
569: astore        60
571: ldc           #150
573: invokestatic  #15
576: goto          581
579: astore        60
581: new           #54
584: dup
585: invokespecial #55
588: ldc           #56
590: invokevirtual #57
593: dload_3
594: invokevirtual #58
597: ldc           #59
599: invokevirtual #57
602: dconst_0
603: invokevirtual #58
606: ldc           #56
608: invokevirtual #57
611: invokevirtual #60
614: dload_3
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #61
628: new           #54
631: dup
632: invokespecial #55
635: ldc           #56
637: invokevirtual #57
640: iload         5
642: invokevirtual #62
645: ldc           #59
647: invokevirtual #57
650: iconst_0
651: invokevirtual #62
654: ldc           #56
656: invokevirtual #57
659: invokevirtual #60
662: iload         5
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #61
675: aload         12
677: invokestatic  #47
680: aload         15
682: invokestatic  #47
685: aload         16
687: invokestatic  #47
690: aload         19
692: invokestatic  #47
695: aload         21
697: invokestatic  #47
700: aload         23
702: invokestatic  #47
705: aload         25
707: invokestatic  #47
710: aload         27
712: invokestatic  #47
715: aload         28
717: invokestatic  #47
720: aload         29
722: invokestatic  #47
725: new           #54
728: dup
729: invokespecial #55
732: ldc           #56
734: invokevirtual #57
737: iload         33
739: invokevirtual #62
742: ldc           #59
744: invokevirtual #57
747: iconst_0
748: invokevirtual #62
751: ldc           #56
753: invokevirtual #57
756: invokevirtual #60
759: iload         33
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #61
772: aload         36
774: invokestatic  #47
777: aload         37
779: invokestatic  #47
782: aload         38
784: invokestatic  #47
787: aload         39
789: invokestatic  #47
792: aload         40
794: invokestatic  #47
797: new           #54
800: dup
801: invokespecial #55
804: ldc           #56
806: invokevirtual #57
809: aload         41
811: invokevirtual #82
814: ldc           #59
816: invokevirtual #57
819: getstatic     #78
822: invokevirtual #82
825: ldc           #56
827: invokevirtual #57
830: invokevirtual #60
833: aload         41
835: getstatic     #78
838: invokevirtual #83
841: invokestatic  #61
844: aload         42
846: invokestatic  #47
849: new           #54
852: dup
853: invokespecial #55
856: ldc           #56
858: invokevirtual #57
861: iload         43
863: invokevirtual #62
866: ldc           #59
868: invokevirtual #57
871: bipush        97
873: invokevirtual #62
876: ldc           #56
878: invokevirtual #57
881: invokevirtual #60
884: iload         43
886: bipush        97
888: if_icmpne     895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #61
899: aload         45
901: invokestatic  #47
904: new           #54
907: dup
908: invokespecial #55
911: ldc           #56
913: invokevirtual #57
916: dload         46
918: invokevirtual #58
921: ldc           #59
923: invokevirtual #57
926: ldc2_w        #406
929: invokevirtual #58
932: ldc           #56
934: invokevirtual #57
937: invokevirtual #60
940: dload         46
942: ldc2_w        #406
945: dcmpl
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #61
957: new           #54
960: dup
961: invokespecial #55
964: ldc           #56
966: invokevirtual #57
969: dload         48
971: invokevirtual #58
974: ldc           #59
976: invokevirtual #57
979: ldc2_w        #247
982: invokevirtual #58
985: ldc           #56
987: invokevirtual #57
990: invokevirtual #60
993: dload         48
995: ldc2_w        #247
998: dcmpl
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #61
1010: aload         50
1012: invokestatic  #47
1015: aload         51
1017: invokestatic  #47
1020: aload         52
1022: invokestatic  #47
1025: new           #54
1028: dup
1029: invokespecial #55
1032: ldc           #56
1034: invokevirtual #57
1037: dload         53
1039: invokevirtual #58
1042: ldc           #59
1044: invokevirtual #57
1047: ldc2_w        #617
1050: invokevirtual #58
1053: ldc           #56
1055: invokevirtual #57
1058: invokevirtual #60
1061: dload         53
1063: ldc2_w        #617
1066: dcmpl
1067: ifne          1074
1070: iconst_1
1071: goto          1075
1074: iconst_0
1075: invokestatic  #61
1078: new           #54
1081: dup
1082: invokespecial #55
1085: ldc           #56
1087: invokevirtual #57
1090: aload         55
1092: invokevirtual #82
1095: ldc           #59
1097: invokevirtual #57
1100: getstatic     #118
1103: invokevirtual #82
1106: ldc           #56
1108: invokevirtual #57
1111: invokevirtual #60
1114: aload         55
1116: getstatic     #118
1119: invokevirtual #83
1122: invokestatic  #61
1125: aload         56
1127: invokestatic  #47
1130: aload         57
1132: invokestatic  #47
1135: new           #54
1138: dup
1139: invokespecial #55
1142: ldc           #56
1144: invokevirtual #57
1147: aload         58
1149: invokevirtual #82
1152: ldc           #59
1154: invokevirtual #57
1157: getstatic     #118
1160: invokevirtual #82
1163: ldc           #56
1165: invokevirtual #57
1168: invokevirtual #60
1171: aload         58
1173: getstatic     #118
1176: invokevirtual #83
1179: invokestatic  #61
1182: aload         59
1184: invokestatic  #47
1187: return
Exception table:
from    to  target type
553   576   579   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test243
Start line: 11092
End line: 11160
Method source code: 
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        double double8 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        double double13 = sin10.value((double) (short) 10);
        double double15 = sin10.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = sin10.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer20 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker19);
        int int21 = brentOptimizer20.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray26 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray26);
        org.apache.commons.math3.optimization.GoalType goalType30 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair34 = brentOptimizer20.optimize(97, univariateFunction29, goalType30, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer20.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType36 = brentOptimizer20.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer20.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = sin39.derivative();
        org.apache.commons.math3.optimization.GoalType goalType41 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer20.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin39, goalType41, 3.141592653589793d, 0.0d);
        double double45 = brentOptimizer20.getMax();
        org.apache.commons.math3.optimization.GoalType goalType46 = brentOptimizer20.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair50 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) sin10, goalType46, (-0.5013169764050727d), 10.134299718492377d, 1.58859428E8d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (2) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.5440211108893698d) + "'", double13 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9922682874719476d + "'", double15 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertTrue("'" + goalType30 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType30.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair34);
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertTrue("'" + goalType36 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType36.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair37);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertTrue("'" + goalType41 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType41.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType46 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType46.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #815
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #177
69: dstore        9
71: new           #72
74: dup
75: invokespecial #73
78: astore        11
80: aload         11
82: invokevirtual #74
85: astore        12
87: aload         11
89: ldc2_w        #91
92: invokevirtual #88
95: dstore        13
97: aload         11
99: ldc2_w        #373
102: invokevirtual #88
105: dstore        15
107: aload         11
109: invokevirtual #74
112: astore        17
114: aconst_null
115: astore        18
117: new           #8
120: dup
121: ldc2_w        #31
124: ldc2_w        #33
127: aload         18
129: invokespecial #13
132: astore        19
134: aload         19
136: invokevirtual #71
139: istore        20
141: new           #72
144: dup
145: invokespecial #73
148: astore        21
150: new           #72
153: dup
154: invokespecial #73
157: astore        22
159: aload         22
161: invokevirtual #74
164: astore        23
166: iconst_2
167: anewarray     #75
170: dup
171: iconst_0
172: aload         21
174: aastore
175: dup
176: iconst_1
177: aload         22
179: aastore
180: astore        24
182: aload         24
184: invokestatic  #76
187: astore        25
189: aload         24
191: invokestatic  #77
194: astore        26
196: aload         24
198: checkcast     #89
201: invokestatic  #90
204: astore        27
206: getstatic     #78
209: astore        28
211: aload         19
213: bipush        97
215: aload         27
217: aload         28
219: ldc2_w        #91
222: ldc2_w        #93
225: ldc2_w        #91
228: invokevirtual #44
231: astore        29
233: aload         19
235: invokevirtual #51
238: astore        30
240: aload         19
242: invokevirtual #110
245: astore        31
247: aload         19
249: invokevirtual #51
252: astore        32
254: new           #72
257: dup
258: invokespecial #73
261: astore        33
263: aload         33
265: invokevirtual #74
268: astore        34
270: getstatic     #78
273: astore        35
275: aload         19
277: bipush        97
279: aload         33
281: aload         35
283: ldc2_w        #133
286: dconst_0
287: invokevirtual #81
290: astore        36
292: aload         19
294: invokevirtual #49
297: dstore        37
299: aload         19
301: invokevirtual #110
304: astore        39
306: aload_2
307: iconst_2
308: aload         11
310: aload         39
312: ldc2_w        #816
315: ldc2_w        #818
318: ldc2_w        #820
321: invokevirtual #44
324: astore        40
326: ldc_w         #822
329: invokestatic  #15
332: goto          337
335: astore        40
337: new           #54
340: dup
341: invokespecial #55
344: ldc           #56
346: invokevirtual #57
349: dload_3
350: invokevirtual #58
353: ldc           #59
355: invokevirtual #57
358: dconst_0
359: invokevirtual #58
362: ldc           #56
364: invokevirtual #57
367: invokevirtual #60
370: dload_3
371: dconst_0
372: dcmpl
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #61
384: new           #54
387: dup
388: invokespecial #55
391: ldc           #56
393: invokevirtual #57
396: iload         5
398: invokevirtual #62
401: ldc           #59
403: invokevirtual #57
406: iconst_0
407: invokevirtual #62
410: ldc           #56
412: invokevirtual #57
415: invokevirtual #60
418: iload         5
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #61
431: aload         6
433: invokestatic  #104
436: new           #54
439: dup
440: invokespecial #55
443: ldc           #56
445: invokevirtual #57
448: dload         7
450: invokevirtual #58
453: ldc           #59
455: invokevirtual #57
458: dconst_0
459: invokevirtual #58
462: ldc           #56
464: invokevirtual #57
467: invokevirtual #60
470: dload         7
472: dconst_0
473: dcmpl
474: ifne          481
477: iconst_1
478: goto          482
481: iconst_0
482: invokestatic  #61
485: new           #54
488: dup
489: invokespecial #55
492: ldc           #56
494: invokevirtual #57
497: dload         9
499: invokevirtual #58
502: ldc           #59
504: invokevirtual #57
507: dconst_0
508: invokevirtual #58
511: ldc           #56
513: invokevirtual #57
516: invokevirtual #60
519: dload         9
521: dconst_0
522: dcmpl
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #61
534: aload         12
536: invokestatic  #47
539: new           #54
542: dup
543: invokespecial #55
546: ldc           #56
548: invokevirtual #57
551: dload         13
553: invokevirtual #58
556: ldc           #59
558: invokevirtual #57
561: ldc2_w        #406
564: invokevirtual #58
567: ldc           #56
569: invokevirtual #57
572: invokevirtual #60
575: dload         13
577: ldc2_w        #406
580: dcmpl
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #61
592: new           #54
595: dup
596: invokespecial #55
599: ldc           #56
601: invokevirtual #57
604: dload         15
606: invokevirtual #58
609: ldc           #59
611: invokevirtual #57
614: ldc2_w        #247
617: invokevirtual #58
620: ldc           #56
622: invokevirtual #57
625: invokevirtual #60
628: dload         15
630: ldc2_w        #247
633: dcmpl
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #61
645: aload         17
647: invokestatic  #47
650: new           #54
653: dup
654: invokespecial #55
657: ldc           #56
659: invokevirtual #57
662: iload         20
664: invokevirtual #62
667: ldc           #59
669: invokevirtual #57
672: iconst_0
673: invokevirtual #62
676: ldc           #56
678: invokevirtual #57
681: invokevirtual #60
684: iload         20
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #61
697: aload         23
699: invokestatic  #47
702: aload         24
704: invokestatic  #47
707: aload         25
709: invokestatic  #47
712: aload         26
714: invokestatic  #47
717: aload         27
719: invokestatic  #47
722: new           #54
725: dup
726: invokespecial #55
729: ldc           #56
731: invokevirtual #57
734: aload         28
736: invokevirtual #82
739: ldc           #59
741: invokevirtual #57
744: getstatic     #78
747: invokevirtual #82
750: ldc           #56
752: invokevirtual #57
755: invokevirtual #60
758: aload         28
760: getstatic     #78
763: invokevirtual #83
766: invokestatic  #61
769: aload         29
771: invokestatic  #47
774: aload         30
776: invokestatic  #47
779: new           #54
782: dup
783: invokespecial #55
786: ldc           #56
788: invokevirtual #57
791: aload         31
793: invokevirtual #82
796: ldc           #59
798: invokevirtual #57
801: getstatic     #78
804: invokevirtual #82
807: ldc           #56
809: invokevirtual #57
812: invokevirtual #60
815: aload         31
817: getstatic     #78
820: invokevirtual #83
823: invokestatic  #61
826: aload         32
828: invokestatic  #47
831: aload         34
833: invokestatic  #47
836: new           #54
839: dup
840: invokespecial #55
843: ldc           #56
845: invokevirtual #57
848: aload         35
850: invokevirtual #82
853: ldc           #59
855: invokevirtual #57
858: getstatic     #78
861: invokevirtual #82
864: ldc           #56
866: invokevirtual #57
869: invokevirtual #60
872: aload         35
874: getstatic     #78
877: invokevirtual #83
880: invokestatic  #61
883: aload         36
885: invokestatic  #47
888: new           #54
891: dup
892: invokespecial #55
895: ldc           #56
897: invokevirtual #57
900: dload         37
902: invokevirtual #58
905: ldc           #59
907: invokevirtual #57
910: dconst_0
911: invokevirtual #58
914: ldc           #56
916: invokevirtual #57
919: invokevirtual #60
922: dload         37
924: dconst_0
925: dcmpl
926: ifne          933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #61
937: new           #54
940: dup
941: invokespecial #55
944: ldc           #56
946: invokevirtual #57
949: aload         39
951: invokevirtual #82
954: ldc           #59
956: invokevirtual #57
959: getstatic     #78
962: invokevirtual #82
965: ldc           #56
967: invokevirtual #57
970: invokevirtual #60
973: aload         39
975: getstatic     #78
978: invokevirtual #83
981: invokestatic  #61
984: return
Exception table:
from    to  target type
306   332   335   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test244
Start line: 11163
End line: 11279
Method source code: 
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer34 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker33);
        int int35 = brentOptimizer34.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = sin38.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray40 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin37, sin38 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable41 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray40);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable42 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray40);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray40);
        org.apache.commons.math3.optimization.GoalType goalType44 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair48 = brentOptimizer34.optimize(97, univariateFunction43, goalType44, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer34.doOptimize();
        int int50 = brentOptimizer34.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable52 = null;
        org.apache.commons.math3.exception.util.Localizable localizable53 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray54 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray54);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException56 = new org.apache.commons.math3.exception.MathArithmeticException(localizable53, (java.lang.Object[]) differentiableUnivariateFunctionArray54);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray54);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException58 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable52, (java.lang.Object[]) differentiableUnivariateFunctionArray54);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray54);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction60 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray54);
        org.apache.commons.math3.optimization.GoalType goalType61 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer34.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction60, goalType61, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable65 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer69 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker68);
        int int70 = brentOptimizer69.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin72 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin73 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction74 = sin73.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray75 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin72, sin73 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable76 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray75);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable77 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray75);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction78 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray75);
        org.apache.commons.math3.optimization.GoalType goalType79 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair83 = brentOptimizer69.optimize(97, univariateFunction78, goalType79, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int84 = brentOptimizer69.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker85 = brentOptimizer69.getConvergenceChecker();
        int int86 = brentOptimizer69.getEvaluations();
        double double88 = brentOptimizer69.computeObjectiveValue((-0.9999998807907103d));
        org.apache.commons.math3.optimization.GoalType goalType89 = brentOptimizer69.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair93 = brentOptimizer3.optimize(515, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable65, goalType89, (-3.8697734814625746d), 1.0E100d, 1.6094379124341005d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(univariateFunction39);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray40);
        org.junit.Assert.assertNotNull(univariateDifferentiable41);
        org.junit.Assert.assertNotNull(univariateDifferentiable42);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertTrue("'" + goalType44 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType44.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair48);
        org.junit.Assert.assertNotNull(univariatePointValuePair49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray54);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction55);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction57);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction60);
        org.junit.Assert.assertTrue("'" + goalType61 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType61.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariateDifferentiable65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(univariateFunction74);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray75);
        org.junit.Assert.assertNotNull(univariateDifferentiable76);
        org.junit.Assert.assertNotNull(univariateDifferentiable77);
        org.junit.Assert.assertNotNull(univariateFunction78);
        org.junit.Assert.assertTrue("'" + goalType79 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType79.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 97 + "'", int84 == 97);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.7456240987455006d) + "'", double88 == (-0.7456240987455006d));
        org.junit.Assert.assertTrue("'" + goalType89 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType89.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #823
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aconst_null
206: astore        23
208: new           #8
211: dup
212: ldc2_w        #31
215: ldc2_w        #33
218: aload         23
220: invokespecial #13
223: astore        24
225: aload         24
227: invokevirtual #71
230: istore        25
232: new           #72
235: dup
236: invokespecial #73
239: astore        26
241: new           #72
244: dup
245: invokespecial #73
248: astore        27
250: aload         27
252: invokevirtual #74
255: astore        28
257: iconst_2
258: anewarray     #75
261: dup
262: iconst_0
263: aload         26
265: aastore
266: dup
267: iconst_1
268: aload         27
270: aastore
271: astore        29
273: aload         29
275: invokestatic  #76
278: astore        30
280: aload         29
282: invokestatic  #77
285: astore        31
287: aload         29
289: checkcast     #89
292: invokestatic  #90
295: astore        32
297: getstatic     #78
300: astore        33
302: aload         24
304: bipush        97
306: aload         32
308: aload         33
310: ldc2_w        #91
313: ldc2_w        #93
316: ldc2_w        #91
319: invokevirtual #44
322: astore        34
324: aload         24
326: invokevirtual #51
329: astore        35
331: aload         24
333: invokevirtual #50
336: istore        36
338: aconst_null
339: astore        37
341: aconst_null
342: astore        38
344: iconst_0
345: anewarray     #141
348: astore        39
350: aload         39
352: invokestatic  #142
355: astore        40
357: new           #273
360: dup
361: aload         38
363: aload         39
365: checkcast     #123
368: invokespecial #274
371: astore        41
373: aload         39
375: invokestatic  #245
378: astore        42
380: new           #122
383: dup
384: aload         37
386: aload         39
388: checkcast     #123
391: invokespecial #124
394: astore        43
396: aload         39
398: checkcast     #89
401: invokestatic  #90
404: astore        44
406: aload         39
408: invokestatic  #142
411: astore        45
413: getstatic     #118
416: astore        46
418: aload         24
420: bipush        97
422: aload         45
424: aload         46
426: ldc2_w        #339
429: ldc2_w        #341
432: invokevirtual #81
435: astore        47
437: aload         45
439: invokestatic  #143
442: astore        48
444: aconst_null
445: astore        49
447: new           #8
450: dup
451: ldc2_w        #31
454: ldc2_w        #33
457: aload         49
459: invokespecial #13
462: astore        50
464: aload         50
466: invokevirtual #71
469: istore        51
471: new           #72
474: dup
475: invokespecial #73
478: astore        52
480: new           #72
483: dup
484: invokespecial #73
487: astore        53
489: aload         53
491: invokevirtual #74
494: astore        54
496: iconst_2
497: anewarray     #75
500: dup
501: iconst_0
502: aload         52
504: aastore
505: dup
506: iconst_1
507: aload         53
509: aastore
510: astore        55
512: aload         55
514: invokestatic  #76
517: astore        56
519: aload         55
521: invokestatic  #77
524: astore        57
526: aload         55
528: checkcast     #89
531: invokestatic  #90
534: astore        58
536: getstatic     #78
539: astore        59
541: aload         50
543: bipush        97
545: aload         58
547: aload         59
549: ldc2_w        #91
552: ldc2_w        #93
555: ldc2_w        #91
558: invokevirtual #44
561: astore        60
563: aload         50
565: invokevirtual #50
568: istore        61
570: aload         50
572: invokevirtual #103
575: astore        62
577: aload         50
579: invokevirtual #71
582: istore        63
584: aload         50
586: ldc2_w        #824
589: invokevirtual #158
592: dstore        64
594: aload         50
596: invokevirtual #110
599: astore        66
601: aload_2
602: sipush        515
605: aload         48
607: aload         66
609: ldc2_w        #826
612: ldc2_w        #828
615: ldc2_w        #830
618: invokevirtual #44
621: astore        67
623: new           #54
626: dup
627: invokespecial #55
630: ldc           #56
632: invokevirtual #57
635: iload_3
636: invokevirtual #62
639: ldc           #59
641: invokevirtual #57
644: iconst_0
645: invokevirtual #62
648: ldc           #56
650: invokevirtual #57
653: invokevirtual #60
656: iload_3
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #61
668: aload         6
670: invokestatic  #47
673: aload         7
675: invokestatic  #47
678: aload         8
680: invokestatic  #47
683: aload         9
685: invokestatic  #47
688: aload         10
690: invokestatic  #47
693: new           #54
696: dup
697: invokespecial #55
700: ldc           #56
702: invokevirtual #57
705: aload         11
707: invokevirtual #82
710: ldc           #59
712: invokevirtual #57
715: getstatic     #78
718: invokevirtual #82
721: ldc           #56
723: invokevirtual #57
726: invokevirtual #60
729: aload         11
731: getstatic     #78
734: invokevirtual #83
737: invokestatic  #61
740: aload         12
742: invokestatic  #47
745: aload         13
747: invokestatic  #47
750: new           #54
753: dup
754: invokespecial #55
757: ldc           #56
759: invokevirtual #57
762: aload         14
764: invokevirtual #82
767: ldc           #59
769: invokevirtual #57
772: getstatic     #78
775: invokevirtual #82
778: ldc           #56
780: invokevirtual #57
783: invokevirtual #60
786: aload         14
788: getstatic     #78
791: invokevirtual #83
794: invokestatic  #61
797: aload         15
799: invokestatic  #47
802: aload         17
804: invokestatic  #47
807: new           #54
810: dup
811: invokespecial #55
814: ldc           #56
816: invokevirtual #57
819: aload         18
821: invokevirtual #82
824: ldc           #59
826: invokevirtual #57
829: getstatic     #78
832: invokevirtual #82
835: ldc           #56
837: invokevirtual #57
840: invokevirtual #60
843: aload         18
845: getstatic     #78
848: invokevirtual #83
851: invokestatic  #61
854: aload         19
856: invokestatic  #47
859: new           #54
862: dup
863: invokespecial #55
866: ldc           #56
868: invokevirtual #57
871: dload         20
873: invokevirtual #58
876: ldc           #59
878: invokevirtual #57
881: dconst_0
882: invokevirtual #58
885: ldc           #56
887: invokevirtual #57
890: invokevirtual #60
893: dload         20
895: dconst_0
896: dcmpl
897: ifne          904
900: iconst_1
901: goto          905
904: iconst_0
905: invokestatic  #61
908: new           #54
911: dup
912: invokespecial #55
915: ldc           #56
917: invokevirtual #57
920: iload         22
922: invokevirtual #62
925: ldc           #59
927: invokevirtual #57
930: iconst_1
931: invokevirtual #62
934: ldc           #56
936: invokevirtual #57
939: invokevirtual #60
942: iload         22
944: iconst_1
945: if_icmpne     952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #61
956: new           #54
959: dup
960: invokespecial #55
963: ldc           #56
965: invokevirtual #57
968: iload         25
970: invokevirtual #62
973: ldc           #59
975: invokevirtual #57
978: iconst_0
979: invokevirtual #62
982: ldc           #56
984: invokevirtual #57
987: invokevirtual #60
990: iload         25
992: ifne          999
995: iconst_1
996: goto          1000
999: iconst_0
1000: invokestatic  #61
1003: aload         28
1005: invokestatic  #47
1008: aload         29
1010: invokestatic  #47
1013: aload         30
1015: invokestatic  #47
1018: aload         31
1020: invokestatic  #47
1023: aload         32
1025: invokestatic  #47
1028: new           #54
1031: dup
1032: invokespecial #55
1035: ldc           #56
1037: invokevirtual #57
1040: aload         33
1042: invokevirtual #82
1045: ldc           #59
1047: invokevirtual #57
1050: getstatic     #78
1053: invokevirtual #82
1056: ldc           #56
1058: invokevirtual #57
1061: invokevirtual #60
1064: aload         33
1066: getstatic     #78
1069: invokevirtual #83
1072: invokestatic  #61
1075: aload         34
1077: invokestatic  #47
1080: aload         35
1082: invokestatic  #47
1085: new           #54
1088: dup
1089: invokespecial #55
1092: ldc           #56
1094: invokevirtual #57
1097: iload         36
1099: invokevirtual #62
1102: ldc           #59
1104: invokevirtual #57
1107: bipush        97
1109: invokevirtual #62
1112: ldc           #56
1114: invokevirtual #57
1117: invokevirtual #60
1120: iload         36
1122: bipush        97
1124: if_icmpne     1131
1127: iconst_1
1128: goto          1132
1131: iconst_0
1132: invokestatic  #61
1135: aload         39
1137: invokestatic  #47
1140: aload         40
1142: invokestatic  #47
1145: aload         42
1147: invokestatic  #47
1150: aload         44
1152: invokestatic  #47
1155: aload         45
1157: invokestatic  #47
1160: new           #54
1163: dup
1164: invokespecial #55
1167: ldc           #56
1169: invokevirtual #57
1172: aload         46
1174: invokevirtual #82
1177: ldc           #59
1179: invokevirtual #57
1182: getstatic     #118
1185: invokevirtual #82
1188: ldc           #56
1190: invokevirtual #57
1193: invokevirtual #60
1196: aload         46
1198: getstatic     #118
1201: invokevirtual #83
1204: invokestatic  #61
1207: aload         47
1209: invokestatic  #47
1212: aload         48
1214: invokestatic  #47
1217: new           #54
1220: dup
1221: invokespecial #55
1224: ldc           #56
1226: invokevirtual #57
1229: iload         51
1231: invokevirtual #62
1234: ldc           #59
1236: invokevirtual #57
1239: iconst_0
1240: invokevirtual #62
1243: ldc           #56
1245: invokevirtual #57
1248: invokevirtual #60
1251: iload         51
1253: ifne          1260
1256: iconst_1
1257: goto          1261
1260: iconst_0
1261: invokestatic  #61
1264: aload         54
1266: invokestatic  #47
1269: aload         55
1271: invokestatic  #47
1274: aload         56
1276: invokestatic  #47
1279: aload         57
1281: invokestatic  #47
1284: aload         58
1286: invokestatic  #47
1289: new           #54
1292: dup
1293: invokespecial #55
1296: ldc           #56
1298: invokevirtual #57
1301: aload         59
1303: invokevirtual #82
1306: ldc           #59
1308: invokevirtual #57
1311: getstatic     #78
1314: invokevirtual #82
1317: ldc           #56
1319: invokevirtual #57
1322: invokevirtual #60
1325: aload         59
1327: getstatic     #78
1330: invokevirtual #83
1333: invokestatic  #61
1336: aload         60
1338: invokestatic  #47
1341: new           #54
1344: dup
1345: invokespecial #55
1348: ldc           #56
1350: invokevirtual #57
1353: iload         61
1355: invokevirtual #62
1358: ldc           #59
1360: invokevirtual #57
1363: bipush        97
1365: invokevirtual #62
1368: ldc           #56
1370: invokevirtual #57
1373: invokevirtual #60
1376: iload         61
1378: bipush        97
1380: if_icmpne     1387
1383: iconst_1
1384: goto          1388
1387: iconst_0
1388: invokestatic  #61
1391: aload         62
1393: invokestatic  #104
1396: new           #54
1399: dup
1400: invokespecial #55
1403: ldc           #56
1405: invokevirtual #57
1408: iload         63
1410: invokevirtual #62
1413: ldc           #59
1415: invokevirtual #57
1418: iconst_4
1419: invokevirtual #62
1422: ldc           #56
1424: invokevirtual #57
1427: invokevirtual #60
1430: iload         63
1432: iconst_4
1433: if_icmpne     1440
1436: iconst_1
1437: goto          1441
1440: iconst_0
1441: invokestatic  #61
1444: new           #54
1447: dup
1448: invokespecial #55
1451: ldc           #56
1453: invokevirtual #57
1456: dload         64
1458: invokevirtual #58
1461: ldc           #59
1463: invokevirtual #57
1466: ldc2_w        #832
1469: invokevirtual #58
1472: ldc           #56
1474: invokevirtual #57
1477: invokevirtual #60
1480: dload         64
1482: ldc2_w        #832
1485: dcmpl
1486: ifne          1493
1489: iconst_1
1490: goto          1494
1493: iconst_0
1494: invokestatic  #61
1497: new           #54
1500: dup
1501: invokespecial #55
1504: ldc           #56
1506: invokevirtual #57
1509: aload         66
1511: invokevirtual #82
1514: ldc           #59
1516: invokevirtual #57
1519: getstatic     #78
1522: invokevirtual #82
1525: ldc           #56
1527: invokevirtual #57
1530: invokevirtual #60
1533: aload         66
1535: getstatic     #78
1538: invokevirtual #83
1541: invokestatic  #61
1544: aload         67
1546: invokestatic  #47
1549: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test245
Start line: 11282
End line: 11326
Method source code: 
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        int int31 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #834
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: invokevirtual #50
215: istore        24
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         20
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         20
489: dconst_0
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #61
502: new           #54
505: dup
506: invokespecial #55
509: ldc           #56
511: invokevirtual #57
514: iload         22
516: invokevirtual #62
519: ldc           #59
521: invokevirtual #57
524: bipush        97
526: invokevirtual #62
529: ldc           #56
531: invokevirtual #57
534: invokevirtual #60
537: iload         22
539: bipush        97
541: if_icmpne     548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #61
552: aload         23
554: invokestatic  #47
557: new           #54
560: dup
561: invokespecial #55
564: ldc           #56
566: invokevirtual #57
569: iload         24
571: invokevirtual #62
574: ldc           #59
576: invokevirtual #57
579: bipush        97
581: invokevirtual #62
584: ldc           #56
586: invokevirtual #57
589: invokevirtual #60
592: iload         24
594: bipush        97
596: if_icmpne     603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #61
607: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test246
Start line: 11329
End line: 11346
Method source code: 
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType9 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(goalType9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #835
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aload_2
66: invokevirtual #50
69: istore        7
71: aload_2
72: invokevirtual #110
75: astore        8
77: new           #54
80: dup
81: invokespecial #55
84: ldc           #56
86: invokevirtual #57
89: iload_3
90: invokevirtual #62
93: ldc           #59
95: invokevirtual #57
98: iconst_0
99: invokevirtual #62
102: ldc           #56
104: invokevirtual #57
107: invokevirtual #60
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #61
122: new           #54
125: dup
126: invokespecial #55
129: ldc           #56
131: invokevirtual #57
134: iload         4
136: invokevirtual #62
139: ldc           #59
141: invokevirtual #57
144: iconst_0
145: invokevirtual #62
148: ldc           #56
150: invokevirtual #57
153: invokevirtual #60
156: iload         4
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #61
169: new           #54
172: dup
173: invokespecial #55
176: ldc           #56
178: invokevirtual #57
181: iload         5
183: invokevirtual #62
186: ldc           #59
188: invokevirtual #57
191: iconst_0
192: invokevirtual #62
195: ldc           #56
197: invokevirtual #57
200: invokevirtual #60
203: iload         5
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #61
216: aload         6
218: invokestatic  #104
221: new           #54
224: dup
225: invokespecial #55
228: ldc           #56
230: invokevirtual #57
233: iload         7
235: invokevirtual #62
238: ldc           #59
240: invokevirtual #57
243: iconst_0
244: invokevirtual #62
247: ldc           #56
249: invokevirtual #57
252: invokevirtual #60
255: iload         7
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #61
268: aload         8
270: invokestatic  #104
273: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test247
Start line: 11349
End line: 11436
Method source code: 
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        double double30 = brentOptimizer3.computeObjectiveValue((double) (byte) 0);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction32 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray33 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction34 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray33);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = differentiableUnivariateFunction34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        double double39 = sin36.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = sin36.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction32, univariateFunction35, univariateFunction40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker44 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer45 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker44);
        int int46 = brentOptimizer45.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin48, sin49 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable53 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction54 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.GoalType goalType55 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer45.optimize(97, univariateFunction54, goalType55, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair60 = brentOptimizer45.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType61 = brentOptimizer45.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer3.optimize(3, univariateFunction35, goalType61, 0.0d, 7.930067261567154E14d, 1011.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (3) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray33);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction34);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.8414709825806044d + "'", double39 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateDifferentiable53);
        org.junit.Assert.assertNotNull(univariateFunction54);
        org.junit.Assert.assertTrue("'" + goalType55 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType55.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
        org.junit.Assert.assertNotNull(univariatePointValuePair60);
        org.junit.Assert.assertTrue("'" + goalType61 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType61.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #836
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: dconst_0
201: invokevirtual #158
204: dstore        22
206: aconst_null
207: astore        24
209: iconst_0
210: anewarray     #141
213: astore        25
215: aload         25
217: invokestatic  #142
220: astore        26
222: aload         26
224: invokeinterface #549,  1
229: astore        27
231: new           #72
234: dup
235: invokespecial #73
238: astore        28
240: aload         28
242: invokevirtual #74
245: astore        29
247: aload         28
249: ldc2_w        #86
252: invokevirtual #88
255: dstore        30
257: aload         28
259: invokevirtual #74
262: astore        32
264: aload         24
266: aload         27
268: aload         32
270: invokestatic  #404
273: astore        33
275: aconst_null
276: astore        34
278: new           #8
281: dup
282: ldc2_w        #31
285: ldc2_w        #33
288: aload         34
290: invokespecial #13
293: astore        35
295: aload         35
297: invokevirtual #71
300: istore        36
302: new           #72
305: dup
306: invokespecial #73
309: astore        37
311: new           #72
314: dup
315: invokespecial #73
318: astore        38
320: aload         38
322: invokevirtual #74
325: astore        39
327: iconst_2
328: anewarray     #75
331: dup
332: iconst_0
333: aload         37
335: aastore
336: dup
337: iconst_1
338: aload         38
340: aastore
341: astore        40
343: aload         40
345: invokestatic  #76
348: astore        41
350: aload         40
352: invokestatic  #77
355: astore        42
357: aload         40
359: checkcast     #89
362: invokestatic  #90
365: astore        43
367: getstatic     #78
370: astore        44
372: aload         35
374: bipush        97
376: aload         43
378: aload         44
380: ldc2_w        #91
383: ldc2_w        #93
386: ldc2_w        #91
389: invokevirtual #44
392: astore        45
394: aload         35
396: invokevirtual #51
399: astore        46
401: aload         35
403: invokevirtual #110
406: astore        47
408: aload_2
409: iconst_3
410: aload         27
412: aload         47
414: dconst_0
415: ldc2_w        #113
418: ldc2_w        #837
421: invokevirtual #44
424: astore        48
426: ldc_w         #377
429: invokestatic  #15
432: goto          437
435: astore        48
437: new           #54
440: dup
441: invokespecial #55
444: ldc           #56
446: invokevirtual #57
449: iload_3
450: invokevirtual #62
453: ldc           #59
455: invokevirtual #57
458: iconst_0
459: invokevirtual #62
462: ldc           #56
464: invokevirtual #57
467: invokevirtual #60
470: iload_3
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #61
482: aload         6
484: invokestatic  #47
487: aload         7
489: invokestatic  #47
492: aload         8
494: invokestatic  #47
497: aload         9
499: invokestatic  #47
502: aload         10
504: invokestatic  #47
507: new           #54
510: dup
511: invokespecial #55
514: ldc           #56
516: invokevirtual #57
519: aload         11
521: invokevirtual #82
524: ldc           #59
526: invokevirtual #57
529: getstatic     #78
532: invokevirtual #82
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: aload         11
545: getstatic     #78
548: invokevirtual #83
551: invokestatic  #61
554: aload         12
556: invokestatic  #47
559: aload         13
561: invokestatic  #47
564: new           #54
567: dup
568: invokespecial #55
571: ldc           #56
573: invokevirtual #57
576: aload         14
578: invokevirtual #82
581: ldc           #59
583: invokevirtual #57
586: getstatic     #78
589: invokevirtual #82
592: ldc           #56
594: invokevirtual #57
597: invokevirtual #60
600: aload         14
602: getstatic     #78
605: invokevirtual #83
608: invokestatic  #61
611: aload         15
613: invokestatic  #47
616: aload         17
618: invokestatic  #47
621: new           #54
624: dup
625: invokespecial #55
628: ldc           #56
630: invokevirtual #57
633: aload         18
635: invokevirtual #82
638: ldc           #59
640: invokevirtual #57
643: getstatic     #78
646: invokevirtual #82
649: ldc           #56
651: invokevirtual #57
654: invokevirtual #60
657: aload         18
659: getstatic     #78
662: invokevirtual #83
665: invokestatic  #61
668: aload         19
670: invokestatic  #47
673: new           #54
676: dup
677: invokespecial #55
680: ldc           #56
682: invokevirtual #57
685: dload         20
687: invokevirtual #58
690: ldc           #59
692: invokevirtual #57
695: dconst_0
696: invokevirtual #58
699: ldc           #56
701: invokevirtual #57
704: invokevirtual #60
707: dload         20
709: dconst_0
710: dcmpl
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #61
722: new           #54
725: dup
726: invokespecial #55
729: ldc           #56
731: invokevirtual #57
734: dload         22
736: invokevirtual #58
739: ldc           #59
741: invokevirtual #57
744: dconst_0
745: invokevirtual #58
748: ldc           #56
750: invokevirtual #57
753: invokevirtual #60
756: dload         22
758: dconst_0
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #61
771: aload         25
773: invokestatic  #47
776: aload         26
778: invokestatic  #47
781: aload         27
783: invokestatic  #47
786: aload         29
788: invokestatic  #47
791: new           #54
794: dup
795: invokespecial #55
798: ldc           #56
800: invokevirtual #57
803: dload         30
805: invokevirtual #58
808: ldc           #59
810: invokevirtual #57
813: ldc2_w        #23
816: invokevirtual #58
819: ldc           #56
821: invokevirtual #57
824: invokevirtual #60
827: dload         30
829: ldc2_w        #23
832: dcmpl
833: ifne          840
836: iconst_1
837: goto          841
840: iconst_0
841: invokestatic  #61
844: aload         32
846: invokestatic  #47
849: aload         33
851: invokestatic  #47
854: new           #54
857: dup
858: invokespecial #55
861: ldc           #56
863: invokevirtual #57
866: iload         36
868: invokevirtual #62
871: ldc           #59
873: invokevirtual #57
876: iconst_0
877: invokevirtual #62
880: ldc           #56
882: invokevirtual #57
885: invokevirtual #60
888: iload         36
890: ifne          897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #61
901: aload         39
903: invokestatic  #47
906: aload         40
908: invokestatic  #47
911: aload         41
913: invokestatic  #47
916: aload         42
918: invokestatic  #47
921: aload         43
923: invokestatic  #47
926: new           #54
929: dup
930: invokespecial #55
933: ldc           #56
935: invokevirtual #57
938: aload         44
940: invokevirtual #82
943: ldc           #59
945: invokevirtual #57
948: getstatic     #78
951: invokevirtual #82
954: ldc           #56
956: invokevirtual #57
959: invokevirtual #60
962: aload         44
964: getstatic     #78
967: invokevirtual #83
970: invokestatic  #61
973: aload         45
975: invokestatic  #47
978: aload         46
980: invokestatic  #47
983: new           #54
986: dup
987: invokespecial #55
990: ldc           #56
992: invokevirtual #57
995: aload         47
997: invokevirtual #82
1000: ldc           #59
1002: invokevirtual #57
1005: getstatic     #78
1008: invokevirtual #82
1011: ldc           #56
1013: invokevirtual #57
1016: invokevirtual #60
1019: aload         47
1021: getstatic     #78
1024: invokevirtual #83
1027: invokestatic  #61
1030: return
Exception table:
from    to  target type
408   432   435   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test248
Start line: 11439
End line: 11446
Method source code: 
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(2704.000238418579d, 2.1544346900318834d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #839
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #216
34: ldc2_w        #199
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: new           #54
50: dup
51: invokespecial #55
54: ldc           #56
56: invokevirtual #57
59: iload_3
60: invokevirtual #62
63: ldc           #59
65: invokevirtual #57
68: iconst_0
69: invokevirtual #62
72: ldc           #56
74: invokevirtual #57
77: invokevirtual #60
80: iload_3
81: ifne          88
84: iconst_1
85: goto          89
88: iconst_0
89: invokestatic  #61
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test249
Start line: 11449
End line: 11484
Method source code: 
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getMaxEvaluations();
        int int20 = brentOptimizer3.getMaxEvaluations();
        double double21 = brentOptimizer3.getMax();
        double double22 = brentOptimizer3.getStartValue();
        double double24 = brentOptimizer3.computeObjectiveValue((double) 32);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.4210854715202004E-14d + "'", double21 == 1.4210854715202004E-14d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5239029773179922d + "'", double24 == 0.5239029773179922d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #840
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #50
148: istore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: aload_2
157: invokevirtual #49
160: dstore        16
162: aload_2
163: invokevirtual #177
166: dstore        18
168: aload_2
169: ldc2_w        #106
172: invokevirtual #158
175: dstore        20
177: new           #54
180: dup
181: invokespecial #55
184: ldc           #56
186: invokevirtual #57
189: iload_3
190: invokevirtual #62
193: ldc           #59
195: invokevirtual #57
198: iconst_0
199: invokevirtual #62
202: ldc           #56
204: invokevirtual #57
207: invokevirtual #60
210: iload_3
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #61
222: aload         6
224: invokestatic  #47
227: aload         7
229: invokestatic  #47
232: aload         8
234: invokestatic  #47
237: aload         9
239: invokestatic  #47
242: aload         10
244: invokestatic  #47
247: new           #54
250: dup
251: invokespecial #55
254: ldc           #56
256: invokevirtual #57
259: aload         11
261: invokevirtual #82
264: ldc           #59
266: invokevirtual #57
269: getstatic     #78
272: invokevirtual #82
275: ldc           #56
277: invokevirtual #57
280: invokevirtual #60
283: aload         11
285: getstatic     #78
288: invokevirtual #83
291: invokestatic  #61
294: aload         12
296: invokestatic  #47
299: aload         13
301: invokestatic  #47
304: new           #54
307: dup
308: invokespecial #55
311: ldc           #56
313: invokevirtual #57
316: iload         14
318: invokevirtual #62
321: ldc           #59
323: invokevirtual #57
326: bipush        97
328: invokevirtual #62
331: ldc           #56
333: invokevirtual #57
336: invokevirtual #60
339: iload         14
341: bipush        97
343: if_icmpne     350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #61
354: new           #54
357: dup
358: invokespecial #55
361: ldc           #56
363: invokevirtual #57
366: iload         15
368: invokevirtual #62
371: ldc           #59
373: invokevirtual #57
376: bipush        97
378: invokevirtual #62
381: ldc           #56
383: invokevirtual #57
386: invokevirtual #60
389: iload         15
391: bipush        97
393: if_icmpne     400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #61
404: new           #54
407: dup
408: invokespecial #55
411: ldc           #56
413: invokevirtual #57
416: dload         16
418: invokevirtual #58
421: ldc           #59
423: invokevirtual #57
426: ldc2_w        #93
429: invokevirtual #58
432: ldc           #56
434: invokevirtual #57
437: invokevirtual #60
440: dload         16
442: ldc2_w        #93
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #61
457: new           #54
460: dup
461: invokespecial #55
464: ldc           #56
466: invokevirtual #57
469: dload         18
471: invokevirtual #58
474: ldc           #59
476: invokevirtual #57
479: ldc2_w        #91
482: invokevirtual #58
485: ldc           #56
487: invokevirtual #57
490: invokevirtual #60
493: dload         18
495: ldc2_w        #91
498: dcmpl
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #61
510: new           #54
513: dup
514: invokespecial #55
517: ldc           #56
519: invokevirtual #57
522: dload         20
524: invokevirtual #58
527: ldc           #59
529: invokevirtual #57
532: ldc2_w        #841
535: invokevirtual #58
538: ldc           #56
540: invokevirtual #57
543: invokevirtual #60
546: dload         20
548: ldc2_w        #841
551: dcmpl
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #61
563: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test250
Start line: 11487
End line: 11529
Method source code: 
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        int int28 = brentOptimizer3.getEvaluations();
        int int29 = brentOptimizer3.getMaxEvaluations();
        int int30 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #843
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #71
197: istore        20
199: aload_2
200: invokevirtual #50
203: istore        21
205: aload_2
206: invokevirtual #71
209: istore        22
211: new           #54
214: dup
215: invokespecial #55
218: ldc           #56
220: invokevirtual #57
223: iload_3
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload_3
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: aload         6
258: invokestatic  #47
261: aload         7
263: invokestatic  #47
266: aload         8
268: invokestatic  #47
271: aload         9
273: invokestatic  #47
276: aload         10
278: invokestatic  #47
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: aload         11
295: invokevirtual #82
298: ldc           #59
300: invokevirtual #57
303: getstatic     #78
306: invokevirtual #82
309: ldc           #56
311: invokevirtual #57
314: invokevirtual #60
317: aload         11
319: getstatic     #78
322: invokevirtual #83
325: invokestatic  #61
328: aload         12
330: invokestatic  #47
333: aload         13
335: invokestatic  #47
338: new           #54
341: dup
342: invokespecial #55
345: ldc           #56
347: invokevirtual #57
350: aload         14
352: invokevirtual #82
355: ldc           #59
357: invokevirtual #57
360: getstatic     #78
363: invokevirtual #82
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: aload         14
376: getstatic     #78
379: invokevirtual #83
382: invokestatic  #61
385: aload         15
387: invokestatic  #47
390: aload         17
392: invokestatic  #47
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: aload         18
409: invokevirtual #82
412: ldc           #59
414: invokevirtual #57
417: getstatic     #78
420: invokevirtual #82
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: aload         18
433: getstatic     #78
436: invokevirtual #83
439: invokestatic  #61
442: aload         19
444: invokestatic  #47
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: iload         20
461: invokevirtual #62
464: ldc           #59
466: invokevirtual #57
469: iconst_1
470: invokevirtual #62
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: iload         20
483: iconst_1
484: if_icmpne     491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #61
495: new           #54
498: dup
499: invokespecial #55
502: ldc           #56
504: invokevirtual #57
507: iload         21
509: invokevirtual #62
512: ldc           #59
514: invokevirtual #57
517: bipush        97
519: invokevirtual #62
522: ldc           #56
524: invokevirtual #57
527: invokevirtual #60
530: iload         21
532: bipush        97
534: if_icmpne     541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #61
545: new           #54
548: dup
549: invokespecial #55
552: ldc           #56
554: invokevirtual #57
557: iload         22
559: invokevirtual #62
562: ldc           #59
564: invokevirtual #57
567: iconst_1
568: invokevirtual #62
571: ldc           #56
573: invokevirtual #57
576: invokevirtual #60
579: iload         22
581: iconst_1
582: if_icmpne     589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #61
593: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test251
Start line: 11532
End line: 11587
Method source code: 
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(284.48901560517237d, 2.4544439362322485d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer7 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker6);
        int int8 = brentOptimizer7.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = sin11.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray13 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin10, sin11 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray13);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray13);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray13);
        org.apache.commons.math3.optimization.GoalType goalType17 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer7.optimize(97, univariateFunction16, goalType17, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int22 = brentOptimizer7.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        double double27 = sin24.value((double) (short) 10);
        double double29 = sin24.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin24.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin24.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin24.derivative();
        double double34 = sin24.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType35 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer7.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin24, goalType35, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction40 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin24);
        org.apache.commons.math3.optimization.GoalType goalType41 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer2.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin24, goalType41, 2.041375977702442d, 8.062017978914582d);
        double double45 = brentOptimizer2.getMax();
        double double47 = brentOptimizer2.computeObjectiveValue(1.0001523125762564d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray13);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + goalType17 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType17.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.5440211108893698d) + "'", double27 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9922682874719476d + "'", double29 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.01745240643728351d) + "'", double34 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType35 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType35.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction40);
        org.junit.Assert.assertTrue("'" + goalType41 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType41.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 8.062017978914582d + "'", double45 == 8.062017978914582d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.8415532698830488d + "'", double47 == 0.8415532698830488d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #844
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #805
32: ldc2_w        #807
35: invokespecial #25
38: astore_1
39: aconst_null
40: astore_2
41: new           #8
44: dup
45: ldc2_w        #31
48: ldc2_w        #33
51: aload_2
52: invokespecial #13
55: astore_3
56: aload_3
57: invokevirtual #71
60: istore        4
62: new           #72
65: dup
66: invokespecial #73
69: astore        5
71: new           #72
74: dup
75: invokespecial #73
78: astore        6
80: aload         6
82: invokevirtual #74
85: astore        7
87: iconst_2
88: anewarray     #75
91: dup
92: iconst_0
93: aload         5
95: aastore
96: dup
97: iconst_1
98: aload         6
100: aastore
101: astore        8
103: aload         8
105: invokestatic  #76
108: astore        9
110: aload         8
112: invokestatic  #77
115: astore        10
117: aload         8
119: checkcast     #89
122: invokestatic  #90
125: astore        11
127: getstatic     #78
130: astore        12
132: aload_3
133: bipush        97
135: aload         11
137: aload         12
139: ldc2_w        #91
142: ldc2_w        #93
145: ldc2_w        #91
148: invokevirtual #44
151: astore        13
153: aload_3
154: invokevirtual #50
157: istore        14
159: new           #72
162: dup
163: invokespecial #73
166: astore        15
168: aload         15
170: invokevirtual #74
173: astore        16
175: aload         15
177: ldc2_w        #91
180: invokevirtual #88
183: dstore        17
185: aload         15
187: ldc2_w        #373
190: invokevirtual #88
193: dstore        19
195: aload         15
197: invokevirtual #74
200: astore        21
202: aload         15
204: invokevirtual #74
207: astore        22
209: aload         15
211: invokevirtual #74
214: astore        23
216: aload         15
218: ldc2_w        #427
221: invokevirtual #88
224: dstore        24
226: getstatic     #118
229: astore        26
231: aload_3
232: bipush        52
234: aload         15
236: aload         26
238: ldc2_w        #614
241: ldc2_w        #477
244: dconst_0
245: invokevirtual #44
248: astore        27
250: aload         15
252: invokestatic  #281
255: astore        28
257: getstatic     #118
260: astore        29
262: aload_1
263: bipush        10
265: aload         15
267: aload         29
269: ldc2_w        #809
272: ldc2_w        #811
275: invokevirtual #81
278: astore        30
280: aload_1
281: invokevirtual #49
284: dstore        31
286: aload_1
287: ldc2_w        #845
290: invokevirtual #158
293: dstore        33
295: new           #54
298: dup
299: invokespecial #55
302: ldc           #56
304: invokevirtual #57
307: iload         4
309: invokevirtual #62
312: ldc           #59
314: invokevirtual #57
317: iconst_0
318: invokevirtual #62
321: ldc           #56
323: invokevirtual #57
326: invokevirtual #60
329: iload         4
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #61
342: aload         7
344: invokestatic  #47
347: aload         8
349: invokestatic  #47
352: aload         9
354: invokestatic  #47
357: aload         10
359: invokestatic  #47
362: aload         11
364: invokestatic  #47
367: new           #54
370: dup
371: invokespecial #55
374: ldc           #56
376: invokevirtual #57
379: aload         12
381: invokevirtual #82
384: ldc           #59
386: invokevirtual #57
389: getstatic     #78
392: invokevirtual #82
395: ldc           #56
397: invokevirtual #57
400: invokevirtual #60
403: aload         12
405: getstatic     #78
408: invokevirtual #83
411: invokestatic  #61
414: aload         13
416: invokestatic  #47
419: new           #54
422: dup
423: invokespecial #55
426: ldc           #56
428: invokevirtual #57
431: iload         14
433: invokevirtual #62
436: ldc           #59
438: invokevirtual #57
441: bipush        97
443: invokevirtual #62
446: ldc           #56
448: invokevirtual #57
451: invokevirtual #60
454: iload         14
456: bipush        97
458: if_icmpne     465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #61
469: aload         16
471: invokestatic  #47
474: new           #54
477: dup
478: invokespecial #55
481: ldc           #56
483: invokevirtual #57
486: dload         17
488: invokevirtual #58
491: ldc           #59
493: invokevirtual #57
496: ldc2_w        #406
499: invokevirtual #58
502: ldc           #56
504: invokevirtual #57
507: invokevirtual #60
510: dload         17
512: ldc2_w        #406
515: dcmpl
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #61
527: new           #54
530: dup
531: invokespecial #55
534: ldc           #56
536: invokevirtual #57
539: dload         19
541: invokevirtual #58
544: ldc           #59
546: invokevirtual #57
549: ldc2_w        #247
552: invokevirtual #58
555: ldc           #56
557: invokevirtual #57
560: invokevirtual #60
563: dload         19
565: ldc2_w        #247
568: dcmpl
569: ifne          576
572: iconst_1
573: goto          577
576: iconst_0
577: invokestatic  #61
580: aload         21
582: invokestatic  #47
585: aload         22
587: invokestatic  #47
590: aload         23
592: invokestatic  #47
595: new           #54
598: dup
599: invokespecial #55
602: ldc           #56
604: invokevirtual #57
607: dload         24
609: invokevirtual #58
612: ldc           #59
614: invokevirtual #57
617: ldc2_w        #617
620: invokevirtual #58
623: ldc           #56
625: invokevirtual #57
628: invokevirtual #60
631: dload         24
633: ldc2_w        #617
636: dcmpl
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #61
648: new           #54
651: dup
652: invokespecial #55
655: ldc           #56
657: invokevirtual #57
660: aload         26
662: invokevirtual #82
665: ldc           #59
667: invokevirtual #57
670: getstatic     #118
673: invokevirtual #82
676: ldc           #56
678: invokevirtual #57
681: invokevirtual #60
684: aload         26
686: getstatic     #118
689: invokevirtual #83
692: invokestatic  #61
695: aload         27
697: invokestatic  #47
700: aload         28
702: invokestatic  #47
705: new           #54
708: dup
709: invokespecial #55
712: ldc           #56
714: invokevirtual #57
717: aload         29
719: invokevirtual #82
722: ldc           #59
724: invokevirtual #57
727: getstatic     #118
730: invokevirtual #82
733: ldc           #56
735: invokevirtual #57
738: invokevirtual #60
741: aload         29
743: getstatic     #118
746: invokevirtual #83
749: invokestatic  #61
752: aload         30
754: invokestatic  #47
757: new           #54
760: dup
761: invokespecial #55
764: ldc           #56
766: invokevirtual #57
769: dload         31
771: invokevirtual #58
774: ldc           #59
776: invokevirtual #57
779: ldc2_w        #811
782: invokevirtual #58
785: ldc           #56
787: invokevirtual #57
790: invokevirtual #60
793: dload         31
795: ldc2_w        #811
798: dcmpl
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #61
810: new           #54
813: dup
814: invokespecial #55
817: ldc           #56
819: invokevirtual #57
822: dload         33
824: invokevirtual #58
827: ldc           #59
829: invokevirtual #57
832: ldc2_w        #847
835: invokevirtual #58
838: ldc           #56
840: invokevirtual #57
843: invokevirtual #60
846: dload         33
848: ldc2_w        #847
851: dcmpl
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #61
863: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test252
Start line: 11590
End line: 11632
Method source code: 
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        double double30 = brentOptimizer3.computeObjectiveValue((double) (byte) 0);
        int int31 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #849
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: dconst_0
201: invokevirtual #158
204: dstore        22
206: aload_2
207: invokevirtual #50
210: istore        24
212: new           #54
215: dup
216: invokespecial #55
219: ldc           #56
221: invokevirtual #57
224: iload_3
225: invokevirtual #62
228: ldc           #59
230: invokevirtual #57
233: iconst_0
234: invokevirtual #62
237: ldc           #56
239: invokevirtual #57
242: invokevirtual #60
245: iload_3
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #61
257: aload         6
259: invokestatic  #47
262: aload         7
264: invokestatic  #47
267: aload         8
269: invokestatic  #47
272: aload         9
274: invokestatic  #47
277: aload         10
279: invokestatic  #47
282: new           #54
285: dup
286: invokespecial #55
289: ldc           #56
291: invokevirtual #57
294: aload         11
296: invokevirtual #82
299: ldc           #59
301: invokevirtual #57
304: getstatic     #78
307: invokevirtual #82
310: ldc           #56
312: invokevirtual #57
315: invokevirtual #60
318: aload         11
320: getstatic     #78
323: invokevirtual #83
326: invokestatic  #61
329: aload         12
331: invokestatic  #47
334: aload         13
336: invokestatic  #47
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: aload         14
353: invokevirtual #82
356: ldc           #59
358: invokevirtual #57
361: getstatic     #78
364: invokevirtual #82
367: ldc           #56
369: invokevirtual #57
372: invokevirtual #60
375: aload         14
377: getstatic     #78
380: invokevirtual #83
383: invokestatic  #61
386: aload         15
388: invokestatic  #47
391: aload         17
393: invokestatic  #47
396: new           #54
399: dup
400: invokespecial #55
403: ldc           #56
405: invokevirtual #57
408: aload         18
410: invokevirtual #82
413: ldc           #59
415: invokevirtual #57
418: getstatic     #78
421: invokevirtual #82
424: ldc           #56
426: invokevirtual #57
429: invokevirtual #60
432: aload         18
434: getstatic     #78
437: invokevirtual #83
440: invokestatic  #61
443: aload         19
445: invokestatic  #47
448: new           #54
451: dup
452: invokespecial #55
455: ldc           #56
457: invokevirtual #57
460: dload         20
462: invokevirtual #58
465: ldc           #59
467: invokevirtual #57
470: dconst_0
471: invokevirtual #58
474: ldc           #56
476: invokevirtual #57
479: invokevirtual #60
482: dload         20
484: dconst_0
485: dcmpl
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #61
497: new           #54
500: dup
501: invokespecial #55
504: ldc           #56
506: invokevirtual #57
509: dload         22
511: invokevirtual #58
514: ldc           #59
516: invokevirtual #57
519: dconst_0
520: invokevirtual #58
523: ldc           #56
525: invokevirtual #57
528: invokevirtual #60
531: dload         22
533: dconst_0
534: dcmpl
535: ifne          542
538: iconst_1
539: goto          543
542: iconst_0
543: invokestatic  #61
546: new           #54
549: dup
550: invokespecial #55
553: ldc           #56
555: invokevirtual #57
558: iload         24
560: invokevirtual #62
563: ldc           #59
565: invokevirtual #57
568: bipush        97
570: invokevirtual #62
573: ldc           #56
575: invokevirtual #57
578: invokevirtual #60
581: iload         24
583: bipush        97
585: if_icmpne     592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #61
596: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test253
Start line: 11635
End line: 11693
Method source code: 
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(284.48901560517237d, 2.4544439362322485d);
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException7 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (byte) -1, (java.lang.Number) 0.3526728478474539d, (int) (short) 10);
        org.apache.commons.math3.exception.util.Localizable localizable8 = null;
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray10 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException12 = new org.apache.commons.math3.exception.MathArithmeticException(localizable9, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException15 = new org.apache.commons.math3.exception.MathIllegalStateException((java.lang.Throwable) nonMonotonicSequenceException7, localizable8, (java.lang.Object[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer20 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker19);
        int int21 = brentOptimizer20.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray26 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray26);
        org.apache.commons.math3.optimization.GoalType goalType30 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair34 = brentOptimizer20.optimize(97, univariateFunction29, goalType30, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer20.doOptimize();
        int int36 = brentOptimizer20.getMaxEvaluations();
        int int37 = brentOptimizer20.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer20.doOptimize();
        int int39 = brentOptimizer20.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType40 = brentOptimizer20.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer2.optimize(2147483647, univariateFunction16, goalType40, (double) (-34.0f), 3.6757332503588205d, (-1.5707963267948912d));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray10);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction14);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertTrue("'" + goalType30 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType30.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair34);
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 97 + "'", int37 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 12 + "'", int39 == 12);
        org.junit.Assert.assertTrue("'" + goalType40 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType40.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #850
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #805
32: ldc2_w        #807
35: invokespecial #25
38: astore_1
39: new           #851
42: dup
43: iconst_m1
44: invokestatic  #852
47: ldc2_w        #853
50: invokestatic  #314
53: bipush        10
55: invokespecial #855
58: astore_2
59: aconst_null
60: astore_3
61: aconst_null
62: astore        4
64: iconst_0
65: anewarray     #141
68: astore        5
70: aload         5
72: invokestatic  #142
75: astore        6
77: new           #273
80: dup
81: aload         4
83: aload         5
85: checkcast     #123
88: invokespecial #274
91: astore        7
93: aload         5
95: invokestatic  #245
98: astore        8
100: aload         5
102: invokestatic  #245
105: astore        9
107: new           #122
110: dup
111: aload_2
112: aload_3
113: aload         5
115: checkcast     #123
118: invokespecial #699
121: astore        10
123: aload         5
125: checkcast     #89
128: invokestatic  #117
131: astore        11
133: aconst_null
134: astore        12
136: new           #8
139: dup
140: ldc2_w        #31
143: ldc2_w        #33
146: aload         12
148: invokespecial #13
151: astore        13
153: aload         13
155: invokevirtual #71
158: istore        14
160: new           #72
163: dup
164: invokespecial #73
167: astore        15
169: new           #72
172: dup
173: invokespecial #73
176: astore        16
178: aload         16
180: invokevirtual #74
183: astore        17
185: iconst_2
186: anewarray     #75
189: dup
190: iconst_0
191: aload         15
193: aastore
194: dup
195: iconst_1
196: aload         16
198: aastore
199: astore        18
201: aload         18
203: invokestatic  #76
206: astore        19
208: aload         18
210: invokestatic  #77
213: astore        20
215: aload         18
217: checkcast     #89
220: invokestatic  #90
223: astore        21
225: getstatic     #78
228: astore        22
230: aload         13
232: bipush        97
234: aload         21
236: aload         22
238: ldc2_w        #91
241: ldc2_w        #93
244: ldc2_w        #91
247: invokevirtual #44
250: astore        23
252: aload         13
254: invokevirtual #51
257: astore        24
259: aload         13
261: invokevirtual #50
264: istore        25
266: aload         13
268: invokevirtual #50
271: istore        26
273: aload         13
275: invokevirtual #51
278: astore        27
280: aload         13
282: invokevirtual #71
285: istore        28
287: aload         13
289: invokevirtual #110
292: astore        29
294: aload_1
295: ldc_w         #856
298: aload         11
300: aload         29
302: ldc2_w        #857
305: ldc2_w        #288
308: ldc2_w        #316
311: invokevirtual #44
314: astore        30
316: ldc_w         #327
319: invokestatic  #15
322: goto          327
325: astore        30
327: aload         5
329: invokestatic  #47
332: aload         6
334: invokestatic  #47
337: aload         8
339: invokestatic  #47
342: aload         9
344: invokestatic  #47
347: aload         11
349: invokestatic  #47
352: new           #54
355: dup
356: invokespecial #55
359: ldc           #56
361: invokevirtual #57
364: iload         14
366: invokevirtual #62
369: ldc           #59
371: invokevirtual #57
374: iconst_0
375: invokevirtual #62
378: ldc           #56
380: invokevirtual #57
383: invokevirtual #60
386: iload         14
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #61
399: aload         17
401: invokestatic  #47
404: aload         18
406: invokestatic  #47
409: aload         19
411: invokestatic  #47
414: aload         20
416: invokestatic  #47
419: aload         21
421: invokestatic  #47
424: new           #54
427: dup
428: invokespecial #55
431: ldc           #56
433: invokevirtual #57
436: aload         22
438: invokevirtual #82
441: ldc           #59
443: invokevirtual #57
446: getstatic     #78
449: invokevirtual #82
452: ldc           #56
454: invokevirtual #57
457: invokevirtual #60
460: aload         22
462: getstatic     #78
465: invokevirtual #83
468: invokestatic  #61
471: aload         23
473: invokestatic  #47
476: aload         24
478: invokestatic  #47
481: new           #54
484: dup
485: invokespecial #55
488: ldc           #56
490: invokevirtual #57
493: iload         25
495: invokevirtual #62
498: ldc           #59
500: invokevirtual #57
503: bipush        97
505: invokevirtual #62
508: ldc           #56
510: invokevirtual #57
513: invokevirtual #60
516: iload         25
518: bipush        97
520: if_icmpne     527
523: iconst_1
524: goto          528
527: iconst_0
528: invokestatic  #61
531: new           #54
534: dup
535: invokespecial #55
538: ldc           #56
540: invokevirtual #57
543: iload         26
545: invokevirtual #62
548: ldc           #59
550: invokevirtual #57
553: bipush        97
555: invokevirtual #62
558: ldc           #56
560: invokevirtual #57
563: invokevirtual #60
566: iload         26
568: bipush        97
570: if_icmpne     577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #61
581: aload         27
583: invokestatic  #47
586: new           #54
589: dup
590: invokespecial #55
593: ldc           #56
595: invokevirtual #57
598: iload         28
600: invokevirtual #62
603: ldc           #59
605: invokevirtual #57
608: bipush        12
610: invokevirtual #62
613: ldc           #56
615: invokevirtual #57
618: invokevirtual #60
621: iload         28
623: bipush        12
625: if_icmpne     632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #61
636: new           #54
639: dup
640: invokespecial #55
643: ldc           #56
645: invokevirtual #57
648: aload         29
650: invokevirtual #82
653: ldc           #59
655: invokevirtual #57
658: getstatic     #78
661: invokevirtual #82
664: ldc           #56
666: invokevirtual #57
669: invokevirtual #60
672: aload         29
674: getstatic     #78
677: invokevirtual #83
680: invokestatic  #61
683: return
Exception table:
from    to  target type
294   322   325   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test254
Start line: 11696
End line: 11767
Method source code: 
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        double double32 = brentOptimizer3.computeObjectiveValue((double) Float.NaN);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction34 = null;
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        double double38 = sin35.value((double) (short) 10);
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction40 = sin39.derivative();
        double double42 = sin39.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin39.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction34, (org.apache.commons.math3.analysis.UnivariateFunction) sin35, (org.apache.commons.math3.analysis.UnivariateFunction) sin39);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin35.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin35.derivative();
        org.apache.commons.math3.optimization.GoalType goalType47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) sin35, goalType47, (double) 5.0f, 2.3208330951017717d, 100.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.5440211108893698d) + "'", double38 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(univariateFunction40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.8414709825806044d + "'", double42 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateFunction46);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #859
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: ldc2_w        #302
215: invokevirtual #158
218: dstore        24
220: aconst_null
221: astore        26
223: new           #72
226: dup
227: invokespecial #73
230: astore        27
232: aload         27
234: invokevirtual #74
237: astore        28
239: aload         27
241: ldc2_w        #91
244: invokevirtual #88
247: dstore        29
249: new           #72
252: dup
253: invokespecial #73
256: astore        31
258: aload         31
260: invokevirtual #74
263: astore        32
265: aload         31
267: ldc2_w        #86
270: invokevirtual #88
273: dstore        33
275: aload         31
277: invokevirtual #74
280: astore        35
282: aload         26
284: aload         27
286: aload         31
288: invokestatic  #404
291: astore        36
293: aload         27
295: invokevirtual #74
298: astore        37
300: aload         27
302: invokevirtual #74
305: astore        38
307: aconst_null
308: astore        39
310: aload_2
311: iconst_0
312: aload         27
314: aload         39
316: ldc2_w        #860
319: ldc2_w        #862
322: ldc2_w        #153
325: invokevirtual #44
328: astore        40
330: ldc           #45
332: invokestatic  #15
335: goto          340
338: astore        40
340: new           #54
343: dup
344: invokespecial #55
347: ldc           #56
349: invokevirtual #57
352: iload_3
353: invokevirtual #62
356: ldc           #59
358: invokevirtual #57
361: iconst_0
362: invokevirtual #62
365: ldc           #56
367: invokevirtual #57
370: invokevirtual #60
373: iload_3
374: ifne          381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #61
385: aload         6
387: invokestatic  #47
390: aload         7
392: invokestatic  #47
395: aload         8
397: invokestatic  #47
400: aload         9
402: invokestatic  #47
405: aload         10
407: invokestatic  #47
410: new           #54
413: dup
414: invokespecial #55
417: ldc           #56
419: invokevirtual #57
422: aload         11
424: invokevirtual #82
427: ldc           #59
429: invokevirtual #57
432: getstatic     #78
435: invokevirtual #82
438: ldc           #56
440: invokevirtual #57
443: invokevirtual #60
446: aload         11
448: getstatic     #78
451: invokevirtual #83
454: invokestatic  #61
457: aload         12
459: invokestatic  #47
462: aload         13
464: invokestatic  #47
467: new           #54
470: dup
471: invokespecial #55
474: ldc           #56
476: invokevirtual #57
479: aload         14
481: invokevirtual #82
484: ldc           #59
486: invokevirtual #57
489: getstatic     #78
492: invokevirtual #82
495: ldc           #56
497: invokevirtual #57
500: invokevirtual #60
503: aload         14
505: getstatic     #78
508: invokevirtual #83
511: invokestatic  #61
514: aload         15
516: invokestatic  #47
519: aload         17
521: invokestatic  #47
524: new           #54
527: dup
528: invokespecial #55
531: ldc           #56
533: invokevirtual #57
536: aload         18
538: invokevirtual #82
541: ldc           #59
543: invokevirtual #57
546: getstatic     #78
549: invokevirtual #82
552: ldc           #56
554: invokevirtual #57
557: invokevirtual #60
560: aload         18
562: getstatic     #78
565: invokevirtual #83
568: invokestatic  #61
571: aload         19
573: invokestatic  #47
576: new           #54
579: dup
580: invokespecial #55
583: ldc           #56
585: invokevirtual #57
588: dload         20
590: invokevirtual #58
593: ldc           #59
595: invokevirtual #57
598: dconst_0
599: invokevirtual #58
602: ldc           #56
604: invokevirtual #57
607: invokevirtual #60
610: dload         20
612: dconst_0
613: dcmpl
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #61
625: new           #54
628: dup
629: invokespecial #55
632: ldc           #56
634: invokevirtual #57
637: iload         22
639: invokevirtual #62
642: ldc           #59
644: invokevirtual #57
647: iconst_1
648: invokevirtual #62
651: ldc           #56
653: invokevirtual #57
656: invokevirtual #60
659: iload         22
661: iconst_1
662: if_icmpne     669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #61
673: aload         23
675: invokestatic  #47
678: dload         24
680: invokestatic  #864
683: invokestatic  #865
686: aload         28
688: invokestatic  #47
691: new           #54
694: dup
695: invokespecial #55
698: ldc           #56
700: invokevirtual #57
703: dload         29
705: invokevirtual #58
708: ldc           #59
710: invokevirtual #57
713: ldc2_w        #406
716: invokevirtual #58
719: ldc           #56
721: invokevirtual #57
724: invokevirtual #60
727: dload         29
729: ldc2_w        #406
732: dcmpl
733: ifne          740
736: iconst_1
737: goto          741
740: iconst_0
741: invokestatic  #61
744: aload         32
746: invokestatic  #47
749: new           #54
752: dup
753: invokespecial #55
756: ldc           #56
758: invokevirtual #57
761: dload         33
763: invokevirtual #58
766: ldc           #59
768: invokevirtual #57
771: ldc2_w        #23
774: invokevirtual #58
777: ldc           #56
779: invokevirtual #57
782: invokevirtual #60
785: dload         33
787: ldc2_w        #23
790: dcmpl
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #61
802: aload         35
804: invokestatic  #47
807: aload         36
809: invokestatic  #47
812: aload         37
814: invokestatic  #47
817: aload         38
819: invokestatic  #47
822: return
Exception table:
from    to  target type
310   335   338   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test255
Start line: 11770
End line: 11814
Method source code: 
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        int int30 = brentOptimizer3.getMaxEvaluations();
        double double31 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.5707963267948966d + "'", double31 == 1.5707963267948966d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #866
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: aload_2
206: invokevirtual #50
209: istore        23
211: aload_2
212: invokevirtual #177
215: dstore        24
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: iload_3
230: invokevirtual #62
233: ldc           #59
235: invokevirtual #57
238: iconst_0
239: invokevirtual #62
242: ldc           #56
244: invokevirtual #57
247: invokevirtual #60
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #61
262: aload         6
264: invokestatic  #47
267: aload         7
269: invokestatic  #47
272: aload         8
274: invokestatic  #47
277: aload         9
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: new           #54
290: dup
291: invokespecial #55
294: ldc           #56
296: invokevirtual #57
299: aload         11
301: invokevirtual #82
304: ldc           #59
306: invokevirtual #57
309: getstatic     #78
312: invokevirtual #82
315: ldc           #56
317: invokevirtual #57
320: invokevirtual #60
323: aload         11
325: getstatic     #78
328: invokevirtual #83
331: invokestatic  #61
334: aload         12
336: invokestatic  #47
339: aload         13
341: invokestatic  #47
344: new           #54
347: dup
348: invokespecial #55
351: ldc           #56
353: invokevirtual #57
356: aload         14
358: invokevirtual #82
361: ldc           #59
363: invokevirtual #57
366: getstatic     #78
369: invokevirtual #82
372: ldc           #56
374: invokevirtual #57
377: invokevirtual #60
380: aload         14
382: getstatic     #78
385: invokevirtual #83
388: invokestatic  #61
391: aload         15
393: invokestatic  #47
396: aload         17
398: invokestatic  #47
401: new           #54
404: dup
405: invokespecial #55
408: ldc           #56
410: invokevirtual #57
413: aload         18
415: invokevirtual #82
418: ldc           #59
420: invokevirtual #57
423: getstatic     #78
426: invokevirtual #82
429: ldc           #56
431: invokevirtual #57
434: invokevirtual #60
437: aload         18
439: getstatic     #78
442: invokevirtual #83
445: invokestatic  #61
448: aload         19
450: invokestatic  #47
453: new           #54
456: dup
457: invokespecial #55
460: ldc           #56
462: invokevirtual #57
465: dload         20
467: invokevirtual #58
470: ldc           #59
472: invokevirtual #57
475: dconst_0
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         20
489: dconst_0
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #61
502: new           #54
505: dup
506: invokespecial #55
509: ldc           #56
511: invokevirtual #57
514: aload         22
516: invokevirtual #82
519: ldc           #59
521: invokevirtual #57
524: getstatic     #78
527: invokevirtual #82
530: ldc           #56
532: invokevirtual #57
535: invokevirtual #60
538: aload         22
540: getstatic     #78
543: invokevirtual #83
546: invokestatic  #61
549: new           #54
552: dup
553: invokespecial #55
556: ldc           #56
558: invokevirtual #57
561: iload         23
563: invokevirtual #62
566: ldc           #59
568: invokevirtual #57
571: bipush        97
573: invokevirtual #62
576: ldc           #56
578: invokevirtual #57
581: invokevirtual #60
584: iload         23
586: bipush        97
588: if_icmpne     595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #61
599: new           #54
602: dup
603: invokespecial #55
606: ldc           #56
608: invokevirtual #57
611: dload         24
613: invokevirtual #58
616: ldc           #59
618: invokevirtual #57
621: ldc2_w        #567
624: invokevirtual #58
627: ldc           #56
629: invokevirtual #57
632: invokevirtual #60
635: dload         24
637: ldc2_w        #567
640: dcmpl
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #61
652: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test256
Start line: 11817
End line: 11827
Method source code: 
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(1.0003497009543487d, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #867
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #868
32: dconst_0
33: invokespecial #25
36: astore_1
37: ldc_w         #424
40: invokestatic  #15
43: goto          47
46: astore_1
47: return
Exception table:
from    to  target type
25    43    46   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test257
Start line: 11830
End line: 11834
Method source code: 
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(1.7763568394002505E-15d, 19.961920644805737d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #870
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #871
32: ldc2_w        #873
35: invokespecial #25
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test258
Start line: 11837
End line: 11853
Method source code: 
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair6 = brentOptimizer3.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #875
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #71
51: istore        5
53: aload_2
54: invokevirtual #51
57: astore        6
59: ldc           #52
61: invokestatic  #15
64: goto          69
67: astore        6
69: new           #54
72: dup
73: invokespecial #55
76: ldc           #56
78: invokevirtual #57
81: dload_3
82: invokevirtual #58
85: ldc           #59
87: invokevirtual #57
90: dconst_0
91: invokevirtual #58
94: ldc           #56
96: invokevirtual #57
99: invokevirtual #60
102: dload_3
103: dconst_0
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: new           #54
119: dup
120: invokespecial #55
123: ldc           #56
125: invokevirtual #57
128: iload         5
130: invokevirtual #62
133: ldc           #59
135: invokevirtual #57
138: iconst_0
139: invokevirtual #62
142: ldc           #56
144: invokevirtual #57
147: invokevirtual #60
150: iload         5
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #61
163: return
Exception table:
from    to  target type
53    64    67   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test259
Start line: 11856
End line: 11867
Method source code: 
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #876
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #103
57: astore        5
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: iload_3
72: invokevirtual #62
75: ldc           #59
77: invokevirtual #57
80: iconst_0
81: invokevirtual #62
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #61
104: new           #54
107: dup
108: invokespecial #55
111: ldc           #56
113: invokevirtual #57
116: iload         4
118: invokevirtual #62
121: ldc           #59
123: invokevirtual #57
126: iconst_0
127: invokevirtual #62
130: ldc           #56
132: invokevirtual #57
135: invokevirtual #60
138: iload         4
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #61
151: aload         5
153: invokestatic  #104
156: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test260
Start line: 11870
End line: 11916
Method source code: 
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = brentOptimizer3.getConvergenceChecker();
        int int32 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #877
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: invokevirtual #103
215: astore        24
217: aload_2
218: invokevirtual #71
221: istore        25
223: new           #54
226: dup
227: invokespecial #55
230: ldc           #56
232: invokevirtual #57
235: iload_3
236: invokevirtual #62
239: ldc           #59
241: invokevirtual #57
244: iconst_0
245: invokevirtual #62
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: iload_3
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #61
268: aload         6
270: invokestatic  #47
273: aload         7
275: invokestatic  #47
278: aload         8
280: invokestatic  #47
283: aload         9
285: invokestatic  #47
288: aload         10
290: invokestatic  #47
293: new           #54
296: dup
297: invokespecial #55
300: ldc           #56
302: invokevirtual #57
305: aload         11
307: invokevirtual #82
310: ldc           #59
312: invokevirtual #57
315: getstatic     #78
318: invokevirtual #82
321: ldc           #56
323: invokevirtual #57
326: invokevirtual #60
329: aload         11
331: getstatic     #78
334: invokevirtual #83
337: invokestatic  #61
340: aload         12
342: invokestatic  #47
345: aload         13
347: invokestatic  #47
350: new           #54
353: dup
354: invokespecial #55
357: ldc           #56
359: invokevirtual #57
362: aload         14
364: invokevirtual #82
367: ldc           #59
369: invokevirtual #57
372: getstatic     #78
375: invokevirtual #82
378: ldc           #56
380: invokevirtual #57
383: invokevirtual #60
386: aload         14
388: getstatic     #78
391: invokevirtual #83
394: invokestatic  #61
397: aload         15
399: invokestatic  #47
402: aload         17
404: invokestatic  #47
407: new           #54
410: dup
411: invokespecial #55
414: ldc           #56
416: invokevirtual #57
419: aload         18
421: invokevirtual #82
424: ldc           #59
426: invokevirtual #57
429: getstatic     #78
432: invokevirtual #82
435: ldc           #56
437: invokevirtual #57
440: invokevirtual #60
443: aload         18
445: getstatic     #78
448: invokevirtual #83
451: invokestatic  #61
454: aload         19
456: invokestatic  #47
459: new           #54
462: dup
463: invokespecial #55
466: ldc           #56
468: invokevirtual #57
471: dload         20
473: invokevirtual #58
476: ldc           #59
478: invokevirtual #57
481: dconst_0
482: invokevirtual #58
485: ldc           #56
487: invokevirtual #57
490: invokevirtual #60
493: dload         20
495: dconst_0
496: dcmpl
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #61
508: new           #54
511: dup
512: invokespecial #55
515: ldc           #56
517: invokevirtual #57
520: iload         22
522: invokevirtual #62
525: ldc           #59
527: invokevirtual #57
530: bipush        97
532: invokevirtual #62
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: iload         22
545: bipush        97
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #61
558: aload         23
560: invokestatic  #47
563: aload         24
565: invokestatic  #104
568: new           #54
571: dup
572: invokespecial #55
575: ldc           #56
577: invokevirtual #57
580: iload         25
582: invokevirtual #62
585: ldc           #59
587: invokevirtual #57
590: iconst_2
591: invokevirtual #62
594: ldc           #56
596: invokevirtual #57
599: invokevirtual #60
602: iload         25
604: iconst_2
605: if_icmpne     612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #61
616: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test261
Start line: 11919
End line: 11963
Method source code: 
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        double double32 = brentOptimizer3.computeObjectiveValue(0.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #878
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: dconst_0
213: invokevirtual #158
216: dstore        24
218: new           #54
221: dup
222: invokespecial #55
225: ldc           #56
227: invokevirtual #57
230: iload_3
231: invokevirtual #62
234: ldc           #59
236: invokevirtual #57
239: iconst_0
240: invokevirtual #62
243: ldc           #56
245: invokevirtual #57
248: invokevirtual #60
251: iload_3
252: ifne          259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #61
263: aload         6
265: invokestatic  #47
268: aload         7
270: invokestatic  #47
273: aload         8
275: invokestatic  #47
278: aload         9
280: invokestatic  #47
283: aload         10
285: invokestatic  #47
288: new           #54
291: dup
292: invokespecial #55
295: ldc           #56
297: invokevirtual #57
300: aload         11
302: invokevirtual #82
305: ldc           #59
307: invokevirtual #57
310: getstatic     #78
313: invokevirtual #82
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: aload         11
326: getstatic     #78
329: invokevirtual #83
332: invokestatic  #61
335: aload         12
337: invokestatic  #47
340: aload         13
342: invokestatic  #47
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: aload         14
359: invokevirtual #82
362: ldc           #59
364: invokevirtual #57
367: getstatic     #78
370: invokevirtual #82
373: ldc           #56
375: invokevirtual #57
378: invokevirtual #60
381: aload         14
383: getstatic     #78
386: invokevirtual #83
389: invokestatic  #61
392: aload         15
394: invokestatic  #47
397: aload         17
399: invokestatic  #47
402: new           #54
405: dup
406: invokespecial #55
409: ldc           #56
411: invokevirtual #57
414: aload         18
416: invokevirtual #82
419: ldc           #59
421: invokevirtual #57
424: getstatic     #78
427: invokevirtual #82
430: ldc           #56
432: invokevirtual #57
435: invokevirtual #60
438: aload         18
440: getstatic     #78
443: invokevirtual #83
446: invokestatic  #61
449: aload         19
451: invokestatic  #47
454: new           #54
457: dup
458: invokespecial #55
461: ldc           #56
463: invokevirtual #57
466: dload         20
468: invokevirtual #58
471: ldc           #59
473: invokevirtual #57
476: dconst_0
477: invokevirtual #58
480: ldc           #56
482: invokevirtual #57
485: invokevirtual #60
488: dload         20
490: dconst_0
491: dcmpl
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #61
503: new           #54
506: dup
507: invokespecial #55
510: ldc           #56
512: invokevirtual #57
515: iload         22
517: invokevirtual #62
520: ldc           #59
522: invokevirtual #57
525: iconst_1
526: invokevirtual #62
529: ldc           #56
531: invokevirtual #57
534: invokevirtual #60
537: iload         22
539: iconst_1
540: if_icmpne     547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #61
551: aload         23
553: invokestatic  #47
556: new           #54
559: dup
560: invokespecial #55
563: ldc           #56
565: invokevirtual #57
568: dload         24
570: invokevirtual #58
573: ldc           #59
575: invokevirtual #57
578: dconst_0
579: invokevirtual #58
582: ldc           #56
584: invokevirtual #57
587: invokevirtual #60
590: dload         24
592: dconst_0
593: dcmpl
594: ifne          601
597: iconst_1
598: goto          602
601: iconst_0
602: invokestatic  #61
605: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test262
Start line: 11966
End line: 11992
Method source code: 
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        double double7 = brentOptimizer3.getMin();
        org.apache.commons.math3.optimization.GoalType goalType8 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray10 = null;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.compose(univariateDifferentiableArray10);
        org.apache.commons.math3.optimization.GoalType goalType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair15 = brentOptimizer3.optimize((-1), (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable11, goalType12, 2.6138481493996906E22d, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(goalType8);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #879
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #231
63: dstore        6
65: aload_2
66: invokevirtual #110
69: astore        8
71: aconst_null
72: astore        9
74: aload         9
76: invokestatic  #280
79: astore        10
81: aconst_null
82: astore        11
84: aload_2
85: iconst_m1
86: aload         10
88: aload         11
90: ldc2_w        #880
93: dconst_0
94: invokevirtual #81
97: astore        12
99: ldc           #45
101: invokestatic  #15
104: goto          109
107: astore        12
109: new           #54
112: dup
113: invokespecial #55
116: ldc           #56
118: invokevirtual #57
121: iload_3
122: invokevirtual #62
125: ldc           #59
127: invokevirtual #57
130: iconst_0
131: invokevirtual #62
134: ldc           #56
136: invokevirtual #57
139: invokevirtual #60
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #61
154: new           #54
157: dup
158: invokespecial #55
161: ldc           #56
163: invokevirtual #57
166: iload         4
168: invokevirtual #62
171: ldc           #59
173: invokevirtual #57
176: iconst_0
177: invokevirtual #62
180: ldc           #56
182: invokevirtual #57
185: invokevirtual #60
188: iload         4
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #61
201: new           #54
204: dup
205: invokespecial #55
208: ldc           #56
210: invokevirtual #57
213: iload         5
215: invokevirtual #62
218: ldc           #59
220: invokevirtual #57
223: iconst_0
224: invokevirtual #62
227: ldc           #56
229: invokevirtual #57
232: invokevirtual #60
235: iload         5
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #61
248: new           #54
251: dup
252: invokespecial #55
255: ldc           #56
257: invokevirtual #57
260: dload         6
262: invokevirtual #58
265: ldc           #59
267: invokevirtual #57
270: dconst_0
271: invokevirtual #58
274: ldc           #56
276: invokevirtual #57
279: invokevirtual #60
282: dload         6
284: dconst_0
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #61
297: aload         8
299: invokestatic  #104
302: aload         10
304: invokestatic  #47
307: return
Exception table:
from    to  target type
84   104   107   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test263
Start line: 11995
End line: 12036
Method source code: 
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getMaxEvaluations();
        int int20 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        double double22 = brentOptimizer3.getMin();
        int int23 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker24 = brentOptimizer3.getConvergenceChecker();
        double double25 = brentOptimizer3.getMax();
        double double26 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 12 + "'", int23 == 12);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.4210854715202004E-14d + "'", double25 == 1.4210854715202004E-14d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.4210854715202004E-14d + "'", double26 == 1.4210854715202004E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #882
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #50
148: istore        14
150: aload_2
151: invokevirtual #50
154: istore        15
156: aload_2
157: invokevirtual #51
160: astore        16
162: aload_2
163: invokevirtual #231
166: dstore        17
168: aload_2
169: invokevirtual #71
172: istore        19
174: aload_2
175: invokevirtual #103
178: astore        20
180: aload_2
181: invokevirtual #49
184: dstore        21
186: aload_2
187: invokevirtual #49
190: dstore        23
192: new           #54
195: dup
196: invokespecial #55
199: ldc           #56
201: invokevirtual #57
204: iload_3
205: invokevirtual #62
208: ldc           #59
210: invokevirtual #57
213: iconst_0
214: invokevirtual #62
217: ldc           #56
219: invokevirtual #57
222: invokevirtual #60
225: iload_3
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #61
237: aload         6
239: invokestatic  #47
242: aload         7
244: invokestatic  #47
247: aload         8
249: invokestatic  #47
252: aload         9
254: invokestatic  #47
257: aload         10
259: invokestatic  #47
262: new           #54
265: dup
266: invokespecial #55
269: ldc           #56
271: invokevirtual #57
274: aload         11
276: invokevirtual #82
279: ldc           #59
281: invokevirtual #57
284: getstatic     #78
287: invokevirtual #82
290: ldc           #56
292: invokevirtual #57
295: invokevirtual #60
298: aload         11
300: getstatic     #78
303: invokevirtual #83
306: invokestatic  #61
309: aload         12
311: invokestatic  #47
314: aload         13
316: invokestatic  #47
319: new           #54
322: dup
323: invokespecial #55
326: ldc           #56
328: invokevirtual #57
331: iload         14
333: invokevirtual #62
336: ldc           #59
338: invokevirtual #57
341: bipush        97
343: invokevirtual #62
346: ldc           #56
348: invokevirtual #57
351: invokevirtual #60
354: iload         14
356: bipush        97
358: if_icmpne     365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #61
369: new           #54
372: dup
373: invokespecial #55
376: ldc           #56
378: invokevirtual #57
381: iload         15
383: invokevirtual #62
386: ldc           #59
388: invokevirtual #57
391: bipush        97
393: invokevirtual #62
396: ldc           #56
398: invokevirtual #57
401: invokevirtual #60
404: iload         15
406: bipush        97
408: if_icmpne     415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #61
419: aload         16
421: invokestatic  #47
424: new           #54
427: dup
428: invokespecial #55
431: ldc           #56
433: invokevirtual #57
436: dload         17
438: invokevirtual #58
441: ldc           #59
443: invokevirtual #57
446: ldc2_w        #91
449: invokevirtual #58
452: ldc           #56
454: invokevirtual #57
457: invokevirtual #60
460: dload         17
462: ldc2_w        #91
465: dcmpl
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #61
477: new           #54
480: dup
481: invokespecial #55
484: ldc           #56
486: invokevirtual #57
489: iload         19
491: invokevirtual #62
494: ldc           #59
496: invokevirtual #57
499: bipush        12
501: invokevirtual #62
504: ldc           #56
506: invokevirtual #57
509: invokevirtual #60
512: iload         19
514: bipush        12
516: if_icmpne     523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #61
527: aload         20
529: invokestatic  #104
532: new           #54
535: dup
536: invokespecial #55
539: ldc           #56
541: invokevirtual #57
544: dload         21
546: invokevirtual #58
549: ldc           #59
551: invokevirtual #57
554: ldc2_w        #93
557: invokevirtual #58
560: ldc           #56
562: invokevirtual #57
565: invokevirtual #60
568: dload         21
570: ldc2_w        #93
573: dcmpl
574: ifne          581
577: iconst_1
578: goto          582
581: iconst_0
582: invokestatic  #61
585: new           #54
588: dup
589: invokespecial #55
592: ldc           #56
594: invokevirtual #57
597: dload         23
599: invokevirtual #58
602: ldc           #59
604: invokevirtual #57
607: ldc2_w        #93
610: invokevirtual #58
613: ldc           #56
615: invokevirtual #57
618: invokevirtual #60
621: dload         23
623: ldc2_w        #93
626: dcmpl
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #61
638: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test264
Start line: 12039
End line: 12113
Method source code: 
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray26 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22, sin24, sin25 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer33 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker32);
        int int34 = brentOptimizer33.getEvaluations();
        int int35 = brentOptimizer33.getEvaluations();
        int int36 = brentOptimizer33.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction38 = null;
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction38, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType50 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer33.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType50, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer3.optimize(4, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, goalType50, 1.2786363145140078E-4d, (-0.8942257319186149d), 3.6757332503588205d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair59 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(multivariateFunction49);
        org.junit.Assert.assertTrue("'" + goalType50 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType50.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertNotNull(univariatePointValuePair59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #883
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #49
148: dstore        14
150: new           #72
153: dup
154: invokespecial #73
157: astore        16
159: new           #72
162: dup
163: invokespecial #73
166: astore        17
168: aload         17
170: invokevirtual #74
173: astore        18
175: new           #72
178: dup
179: invokespecial #73
182: astore        19
184: new           #72
187: dup
188: invokespecial #73
191: astore        20
193: iconst_4
194: anewarray     #75
197: dup
198: iconst_0
199: aload         16
201: aastore
202: dup
203: iconst_1
204: aload         17
206: aastore
207: dup
208: iconst_2
209: aload         19
211: aastore
212: dup
213: iconst_3
214: aload         20
216: aastore
217: astore        21
219: aload         21
221: invokestatic  #76
224: astore        22
226: aload         21
228: checkcast     #89
231: invokestatic  #109
234: astore        23
236: aload         21
238: invokestatic  #76
241: astore        24
243: aconst_null
244: astore        25
246: new           #8
249: dup
250: ldc2_w        #31
253: ldc2_w        #33
256: aload         25
258: invokespecial #13
261: astore        26
263: aload         26
265: invokevirtual #71
268: istore        27
270: aload         26
272: invokevirtual #71
275: istore        28
277: aload         26
279: invokevirtual #71
282: istore        29
284: aconst_null
285: astore        30
287: new           #72
290: dup
291: invokespecial #73
294: astore        31
296: new           #72
299: dup
300: invokespecial #73
303: astore        32
305: aload         32
307: invokevirtual #74
310: astore        33
312: new           #72
315: dup
316: invokespecial #73
319: astore        34
321: new           #72
324: dup
325: invokespecial #73
328: astore        35
330: iconst_4
331: anewarray     #75
334: dup
335: iconst_0
336: aload         31
338: aastore
339: dup
340: iconst_1
341: aload         32
343: aastore
344: dup
345: iconst_2
346: aload         34
348: aastore
349: dup
350: iconst_3
351: aload         35
353: aastore
354: astore        36
356: aload         36
358: invokestatic  #76
361: astore        37
363: aload         36
365: checkcast     #89
368: invokestatic  #109
371: astore        38
373: aload         36
375: invokestatic  #77
378: astore        39
380: aload         30
382: aload         39
384: ldc2_w        #181
387: invokestatic  #183
390: astore        40
392: getstatic     #118
395: astore        41
397: aload         26
399: bipush        10
401: aload         39
403: aload         41
405: ldc2_w        #184
408: ldc2_w        #186
411: ldc2_w        #188
414: invokevirtual #44
417: astore        42
419: aload_2
420: iconst_4
421: aload         24
423: aload         41
425: ldc2_w        #884
428: ldc2_w        #682
431: ldc2_w        #288
434: invokevirtual #44
437: astore        43
439: aload_2
440: invokevirtual #51
443: astore        44
445: new           #54
448: dup
449: invokespecial #55
452: ldc           #56
454: invokevirtual #57
457: iload_3
458: invokevirtual #62
461: ldc           #59
463: invokevirtual #57
466: iconst_0
467: invokevirtual #62
470: ldc           #56
472: invokevirtual #57
475: invokevirtual #60
478: iload_3
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #61
490: aload         6
492: invokestatic  #47
495: aload         7
497: invokestatic  #47
500: aload         8
502: invokestatic  #47
505: aload         9
507: invokestatic  #47
510: aload         10
512: invokestatic  #47
515: new           #54
518: dup
519: invokespecial #55
522: ldc           #56
524: invokevirtual #57
527: aload         11
529: invokevirtual #82
532: ldc           #59
534: invokevirtual #57
537: getstatic     #78
540: invokevirtual #82
543: ldc           #56
545: invokevirtual #57
548: invokevirtual #60
551: aload         11
553: getstatic     #78
556: invokevirtual #83
559: invokestatic  #61
562: aload         12
564: invokestatic  #47
567: aload         13
569: invokestatic  #47
572: new           #54
575: dup
576: invokespecial #55
579: ldc           #56
581: invokevirtual #57
584: dload         14
586: invokevirtual #58
589: ldc           #59
591: invokevirtual #57
594: ldc2_w        #93
597: invokevirtual #58
600: ldc           #56
602: invokevirtual #57
605: invokevirtual #60
608: dload         14
610: ldc2_w        #93
613: dcmpl
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #61
625: aload         18
627: invokestatic  #47
630: aload         21
632: invokestatic  #47
635: aload         22
637: invokestatic  #47
640: aload         23
642: invokestatic  #47
645: aload         24
647: invokestatic  #47
650: new           #54
653: dup
654: invokespecial #55
657: ldc           #56
659: invokevirtual #57
662: iload         27
664: invokevirtual #62
667: ldc           #59
669: invokevirtual #57
672: iconst_0
673: invokevirtual #62
676: ldc           #56
678: invokevirtual #57
681: invokevirtual #60
684: iload         27
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #61
697: new           #54
700: dup
701: invokespecial #55
704: ldc           #56
706: invokevirtual #57
709: iload         28
711: invokevirtual #62
714: ldc           #59
716: invokevirtual #57
719: iconst_0
720: invokevirtual #62
723: ldc           #56
725: invokevirtual #57
728: invokevirtual #60
731: iload         28
733: ifne          740
736: iconst_1
737: goto          741
740: iconst_0
741: invokestatic  #61
744: new           #54
747: dup
748: invokespecial #55
751: ldc           #56
753: invokevirtual #57
756: iload         29
758: invokevirtual #62
761: ldc           #59
763: invokevirtual #57
766: iconst_0
767: invokevirtual #62
770: ldc           #56
772: invokevirtual #57
775: invokevirtual #60
778: iload         29
780: ifne          787
783: iconst_1
784: goto          788
787: iconst_0
788: invokestatic  #61
791: aload         33
793: invokestatic  #47
796: aload         36
798: invokestatic  #47
801: aload         37
803: invokestatic  #47
806: aload         38
808: invokestatic  #47
811: aload         39
813: invokestatic  #47
816: aload         40
818: invokestatic  #47
821: new           #54
824: dup
825: invokespecial #55
828: ldc           #56
830: invokevirtual #57
833: aload         41
835: invokevirtual #82
838: ldc           #59
840: invokevirtual #57
843: getstatic     #118
846: invokevirtual #82
849: ldc           #56
851: invokevirtual #57
854: invokevirtual #60
857: aload         41
859: getstatic     #118
862: invokevirtual #83
865: invokestatic  #61
868: aload         42
870: invokestatic  #47
873: aload         43
875: invokestatic  #47
878: aload         44
880: invokestatic  #47
883: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test265
Start line: 12116
End line: 12127
Method source code: 
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(56.012896400585895d, (double) (-34.0f), univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -34 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #886
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #887
34: ldc2_w        #857
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #889
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test266
Start line: 12130
End line: 12229
Method source code: 
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        double double32 = brentOptimizer3.computeObjectiveValue((double) Float.NaN);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer37 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker36);
        int int38 = brentOptimizer37.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray43 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable44 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray43);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray43);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray43);
        org.apache.commons.math3.optimization.GoalType goalType47 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair51 = brentOptimizer37.optimize(97, univariateFunction46, goalType47, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair52 = brentOptimizer37.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType53 = brentOptimizer37.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer37.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin56 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = sin56.derivative();
        org.apache.commons.math3.optimization.GoalType goalType58 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer37.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin56, goalType58, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer65 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker64);
        int int66 = brentOptimizer65.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType67 = brentOptimizer65.getGoalType();
        org.apache.commons.math3.analysis.function.Sin sin69 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = sin69.derivative();
        double double72 = sin69.value(0.9999999958776927d);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer65.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin69, goalType73, 4.248291315986092d, 2.154434690031884d, (-0.0015270116852033055d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair81 = brentOptimizer3.optimize(8, (org.apache.commons.math3.analysis.UnivariateFunction) sin56, goalType73, (double) 9.2233709E18f, (double) 6L, 0.08726646259971647d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (8) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray43);
        org.junit.Assert.assertNotNull(univariateDifferentiable44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + goalType47 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType47.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair51);
        org.junit.Assert.assertNotNull(univariatePointValuePair52);
        org.junit.Assert.assertTrue("'" + goalType53 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType53.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertTrue("'" + goalType58 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType58.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(goalType67);
        org.junit.Assert.assertNotNull(univariateFunction70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.8414709825806044d + "'", double72 == 0.8414709825806044d);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #890
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aload_2
212: ldc2_w        #302
215: invokevirtual #158
218: dstore        24
220: aconst_null
221: astore        26
223: new           #8
226: dup
227: ldc2_w        #31
230: ldc2_w        #33
233: aload         26
235: invokespecial #13
238: astore        27
240: aload         27
242: invokevirtual #71
245: istore        28
247: new           #72
250: dup
251: invokespecial #73
254: astore        29
256: new           #72
259: dup
260: invokespecial #73
263: astore        30
265: aload         30
267: invokevirtual #74
270: astore        31
272: iconst_2
273: anewarray     #75
276: dup
277: iconst_0
278: aload         29
280: aastore
281: dup
282: iconst_1
283: aload         30
285: aastore
286: astore        32
288: aload         32
290: invokestatic  #76
293: astore        33
295: aload         32
297: invokestatic  #77
300: astore        34
302: aload         32
304: checkcast     #89
307: invokestatic  #90
310: astore        35
312: getstatic     #78
315: astore        36
317: aload         27
319: bipush        97
321: aload         35
323: aload         36
325: ldc2_w        #91
328: ldc2_w        #93
331: ldc2_w        #91
334: invokevirtual #44
337: astore        37
339: aload         27
341: invokevirtual #51
344: astore        38
346: aload         27
348: invokevirtual #110
351: astore        39
353: aload         27
355: invokevirtual #51
358: astore        40
360: new           #72
363: dup
364: invokespecial #73
367: astore        41
369: aload         41
371: invokevirtual #74
374: astore        42
376: getstatic     #78
379: astore        43
381: aload         27
383: bipush        97
385: aload         41
387: aload         43
389: ldc2_w        #133
392: dconst_0
393: invokevirtual #81
396: astore        44
398: aconst_null
399: astore        45
401: new           #8
404: dup
405: ldc2_w        #31
408: ldc2_w        #33
411: aload         45
413: invokespecial #13
416: astore        46
418: aload         46
420: invokevirtual #71
423: istore        47
425: aload         46
427: invokevirtual #110
430: astore        48
432: new           #72
435: dup
436: invokespecial #73
439: astore        49
441: aload         49
443: invokevirtual #74
446: astore        50
448: aload         49
450: ldc2_w        #86
453: invokevirtual #88
456: dstore        51
458: getstatic     #118
461: astore        53
463: aload         46
465: bipush        10
467: aload         49
469: aload         53
471: ldc2_w        #661
474: ldc2_w        #148
477: ldc2_w        #663
480: invokevirtual #44
483: astore        54
485: aload_2
486: bipush        8
488: aload         41
490: aload         53
492: ldc2_w        #891
495: ldc2_w        #184
498: ldc2_w        #626
501: invokevirtual #44
504: astore        55
506: ldc_w         #893
509: invokestatic  #15
512: goto          517
515: astore        55
517: new           #54
520: dup
521: invokespecial #55
524: ldc           #56
526: invokevirtual #57
529: iload_3
530: invokevirtual #62
533: ldc           #59
535: invokevirtual #57
538: iconst_0
539: invokevirtual #62
542: ldc           #56
544: invokevirtual #57
547: invokevirtual #60
550: iload_3
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #61
562: aload         6
564: invokestatic  #47
567: aload         7
569: invokestatic  #47
572: aload         8
574: invokestatic  #47
577: aload         9
579: invokestatic  #47
582: aload         10
584: invokestatic  #47
587: new           #54
590: dup
591: invokespecial #55
594: ldc           #56
596: invokevirtual #57
599: aload         11
601: invokevirtual #82
604: ldc           #59
606: invokevirtual #57
609: getstatic     #78
612: invokevirtual #82
615: ldc           #56
617: invokevirtual #57
620: invokevirtual #60
623: aload         11
625: getstatic     #78
628: invokevirtual #83
631: invokestatic  #61
634: aload         12
636: invokestatic  #47
639: aload         13
641: invokestatic  #47
644: new           #54
647: dup
648: invokespecial #55
651: ldc           #56
653: invokevirtual #57
656: aload         14
658: invokevirtual #82
661: ldc           #59
663: invokevirtual #57
666: getstatic     #78
669: invokevirtual #82
672: ldc           #56
674: invokevirtual #57
677: invokevirtual #60
680: aload         14
682: getstatic     #78
685: invokevirtual #83
688: invokestatic  #61
691: aload         15
693: invokestatic  #47
696: aload         17
698: invokestatic  #47
701: new           #54
704: dup
705: invokespecial #55
708: ldc           #56
710: invokevirtual #57
713: aload         18
715: invokevirtual #82
718: ldc           #59
720: invokevirtual #57
723: getstatic     #78
726: invokevirtual #82
729: ldc           #56
731: invokevirtual #57
734: invokevirtual #60
737: aload         18
739: getstatic     #78
742: invokevirtual #83
745: invokestatic  #61
748: aload         19
750: invokestatic  #47
753: new           #54
756: dup
757: invokespecial #55
760: ldc           #56
762: invokevirtual #57
765: dload         20
767: invokevirtual #58
770: ldc           #59
772: invokevirtual #57
775: dconst_0
776: invokevirtual #58
779: ldc           #56
781: invokevirtual #57
784: invokevirtual #60
787: dload         20
789: dconst_0
790: dcmpl
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #61
802: new           #54
805: dup
806: invokespecial #55
809: ldc           #56
811: invokevirtual #57
814: iload         22
816: invokevirtual #62
819: ldc           #59
821: invokevirtual #57
824: iconst_1
825: invokevirtual #62
828: ldc           #56
830: invokevirtual #57
833: invokevirtual #60
836: iload         22
838: iconst_1
839: if_icmpne     846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #61
850: aload         23
852: invokestatic  #47
855: dload         24
857: invokestatic  #864
860: invokestatic  #865
863: new           #54
866: dup
867: invokespecial #55
870: ldc           #56
872: invokevirtual #57
875: iload         28
877: invokevirtual #62
880: ldc           #59
882: invokevirtual #57
885: iconst_0
886: invokevirtual #62
889: ldc           #56
891: invokevirtual #57
894: invokevirtual #60
897: iload         28
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #61
910: aload         31
912: invokestatic  #47
915: aload         32
917: invokestatic  #47
920: aload         33
922: invokestatic  #47
925: aload         34
927: invokestatic  #47
930: aload         35
932: invokestatic  #47
935: new           #54
938: dup
939: invokespecial #55
942: ldc           #56
944: invokevirtual #57
947: aload         36
949: invokevirtual #82
952: ldc           #59
954: invokevirtual #57
957: getstatic     #78
960: invokevirtual #82
963: ldc           #56
965: invokevirtual #57
968: invokevirtual #60
971: aload         36
973: getstatic     #78
976: invokevirtual #83
979: invokestatic  #61
982: aload         37
984: invokestatic  #47
987: aload         38
989: invokestatic  #47
992: new           #54
995: dup
996: invokespecial #55
999: ldc           #56
1001: invokevirtual #57
1004: aload         39
1006: invokevirtual #82
1009: ldc           #59
1011: invokevirtual #57
1014: getstatic     #78
1017: invokevirtual #82
1020: ldc           #56
1022: invokevirtual #57
1025: invokevirtual #60
1028: aload         39
1030: getstatic     #78
1033: invokevirtual #83
1036: invokestatic  #61
1039: aload         40
1041: invokestatic  #47
1044: aload         42
1046: invokestatic  #47
1049: new           #54
1052: dup
1053: invokespecial #55
1056: ldc           #56
1058: invokevirtual #57
1061: aload         43
1063: invokevirtual #82
1066: ldc           #59
1068: invokevirtual #57
1071: getstatic     #78
1074: invokevirtual #82
1077: ldc           #56
1079: invokevirtual #57
1082: invokevirtual #60
1085: aload         43
1087: getstatic     #78
1090: invokevirtual #83
1093: invokestatic  #61
1096: aload         44
1098: invokestatic  #47
1101: new           #54
1104: dup
1105: invokespecial #55
1108: ldc           #56
1110: invokevirtual #57
1113: iload         47
1115: invokevirtual #62
1118: ldc           #59
1120: invokevirtual #57
1123: iconst_0
1124: invokevirtual #62
1127: ldc           #56
1129: invokevirtual #57
1132: invokevirtual #60
1135: iload         47
1137: ifne          1144
1140: iconst_1
1141: goto          1145
1144: iconst_0
1145: invokestatic  #61
1148: aload         48
1150: invokestatic  #104
1153: aload         50
1155: invokestatic  #47
1158: new           #54
1161: dup
1162: invokespecial #55
1165: ldc           #56
1167: invokevirtual #57
1170: dload         51
1172: invokevirtual #58
1175: ldc           #59
1177: invokevirtual #57
1180: ldc2_w        #23
1183: invokevirtual #58
1186: ldc           #56
1188: invokevirtual #57
1191: invokevirtual #60
1194: dload         51
1196: ldc2_w        #23
1199: dcmpl
1200: ifne          1207
1203: iconst_1
1204: goto          1208
1207: iconst_0
1208: invokestatic  #61
1211: new           #54
1214: dup
1215: invokespecial #55
1218: ldc           #56
1220: invokevirtual #57
1223: aload         53
1225: invokevirtual #82
1228: ldc           #59
1230: invokevirtual #57
1233: getstatic     #118
1236: invokevirtual #82
1239: ldc           #56
1241: invokevirtual #57
1244: invokevirtual #60
1247: aload         53
1249: getstatic     #118
1252: invokevirtual #83
1255: invokestatic  #61
1258: aload         54
1260: invokestatic  #47
1263: return
Exception table:
from    to  target type
485   512   515   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test267
Start line: 12232
End line: 12244
Method source code: 
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 524, 1.2177655131703127d, univariatePointValuePairConvergenceChecker2);
        // The following exception was thrown during execution in test generation
        try {
            double double5 = brentOptimizer3.computeObjectiveValue(2.5837561062176953E-97d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #894
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #421
34: ldc2_w        #306
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: ldc2_w        #895
46: invokevirtual #158
49: dstore_3
50: ldc           #52
52: invokestatic  #15
55: goto          59
58: astore_3
59: return
Exception table:
from    to  target type
42    55    58   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test268
Start line: 12247
End line: 12258
Method source code: 
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getStartValue();
        double double6 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #897
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #177
51: dstore        4
53: aload_2
54: invokevirtual #49
57: dstore        6
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: iload_3
72: invokevirtual #62
75: ldc           #59
77: invokevirtual #57
80: iconst_0
81: invokevirtual #62
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #61
104: new           #54
107: dup
108: invokespecial #55
111: ldc           #56
113: invokevirtual #57
116: dload         4
118: invokevirtual #58
121: ldc           #59
123: invokevirtual #57
126: dconst_0
127: invokevirtual #58
130: ldc           #56
132: invokevirtual #57
135: invokevirtual #60
138: dload         4
140: dconst_0
141: dcmpl
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #61
153: new           #54
156: dup
157: invokespecial #55
160: ldc           #56
162: invokevirtual #57
165: dload         6
167: invokevirtual #58
170: ldc           #59
172: invokevirtual #57
175: dconst_0
176: invokevirtual #58
179: ldc           #56
181: invokevirtual #57
184: invokevirtual #60
187: dload         6
189: dconst_0
190: dcmpl
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #61
202: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test269
Start line: 12261
End line: 12360
Method source code: 
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double74 = brentOptimizer3.getMin();
        int int75 = brentOptimizer3.getEvaluations();
        double double76 = brentOptimizer3.getStartValue();
        double double77 = brentOptimizer3.getMax();
        double double79 = brentOptimizer3.computeObjectiveValue(5.2518138795992752E16d);
        double double81 = brentOptimizer3.computeObjectiveValue(2.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.22766967171598d + "'", double74 == 5.22766967171598d);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 35.0d + "'", double76 == 35.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.4210854715202004E-14d + "'", double77 == 1.4210854715202004E-14d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.4347845159804997d + "'", double79 == 0.4347845159804997d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.9092974268256817d + "'", double81 == 0.9092974268256817d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #898
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #231
512: dstore        53
514: aload_2
515: invokevirtual #71
518: istore        55
520: aload_2
521: invokevirtual #177
524: dstore        56
526: aload_2
527: invokevirtual #49
530: dstore        58
532: aload_2
533: ldc2_w        #899
536: invokevirtual #158
539: dstore        60
541: aload_2
542: ldc2_w        #170
545: invokevirtual #158
548: dstore        62
550: new           #54
553: dup
554: invokespecial #55
557: ldc           #56
559: invokevirtual #57
562: iload_3
563: invokevirtual #62
566: ldc           #59
568: invokevirtual #57
571: iconst_0
572: invokevirtual #62
575: ldc           #56
577: invokevirtual #57
580: invokevirtual #60
583: iload_3
584: ifne          591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #61
595: aload         6
597: invokestatic  #47
600: aload         7
602: invokestatic  #47
605: aload         8
607: invokestatic  #47
610: aload         9
612: invokestatic  #47
615: aload         10
617: invokestatic  #47
620: new           #54
623: dup
624: invokespecial #55
627: ldc           #56
629: invokevirtual #57
632: aload         11
634: invokevirtual #82
637: ldc           #59
639: invokevirtual #57
642: getstatic     #78
645: invokevirtual #82
648: ldc           #56
650: invokevirtual #57
653: invokevirtual #60
656: aload         11
658: getstatic     #78
661: invokevirtual #83
664: invokestatic  #61
667: aload         12
669: invokestatic  #47
672: aload         13
674: invokestatic  #47
677: new           #54
680: dup
681: invokespecial #55
684: ldc           #56
686: invokevirtual #57
689: aload         14
691: invokevirtual #82
694: ldc           #59
696: invokevirtual #57
699: getstatic     #78
702: invokevirtual #82
705: ldc           #56
707: invokevirtual #57
710: invokevirtual #60
713: aload         14
715: getstatic     #78
718: invokevirtual #83
721: invokestatic  #61
724: aload         15
726: invokestatic  #47
729: aload         17
731: invokestatic  #47
734: new           #54
737: dup
738: invokespecial #55
741: ldc           #56
743: invokevirtual #57
746: aload         18
748: invokevirtual #82
751: ldc           #59
753: invokevirtual #57
756: getstatic     #78
759: invokevirtual #82
762: ldc           #56
764: invokevirtual #57
767: invokevirtual #60
770: aload         18
772: getstatic     #78
775: invokevirtual #83
778: invokestatic  #61
781: aload         19
783: invokestatic  #47
786: new           #54
789: dup
790: invokespecial #55
793: ldc           #56
795: invokevirtual #57
798: dload         20
800: invokevirtual #58
803: ldc           #59
805: invokevirtual #57
808: dconst_0
809: invokevirtual #58
812: ldc           #56
814: invokevirtual #57
817: invokevirtual #60
820: dload         20
822: dconst_0
823: dcmpl
824: ifne          831
827: iconst_1
828: goto          832
831: iconst_0
832: invokestatic  #61
835: aload         23
837: invokestatic  #47
840: new           #54
843: dup
844: invokespecial #55
847: ldc           #56
849: invokevirtual #57
852: iload         26
854: invokevirtual #62
857: ldc           #59
859: invokevirtual #57
862: iconst_0
863: invokevirtual #62
866: ldc           #56
868: invokevirtual #57
871: invokevirtual #60
874: iload         26
876: ifne          883
879: iconst_1
880: goto          884
883: iconst_0
884: invokestatic  #61
887: new           #54
890: dup
891: invokespecial #55
894: ldc           #56
896: invokevirtual #57
899: dload         27
901: invokevirtual #58
904: ldc           #59
906: invokevirtual #57
909: dconst_0
910: invokevirtual #58
913: ldc           #56
915: invokevirtual #57
918: invokevirtual #60
921: dload         27
923: dconst_0
924: dcmpl
925: ifne          932
928: iconst_1
929: goto          933
932: iconst_0
933: invokestatic  #61
936: aload         31
938: invokestatic  #47
941: aload         34
943: invokestatic  #47
946: aload         35
948: invokestatic  #47
951: aload         36
953: invokestatic  #47
956: new           #54
959: dup
960: invokespecial #55
963: ldc           #56
965: invokevirtual #57
968: iload         39
970: invokevirtual #62
973: ldc           #59
975: invokevirtual #57
978: iconst_0
979: invokevirtual #62
982: ldc           #56
984: invokevirtual #57
987: invokevirtual #60
990: iload         39
992: ifne          999
995: iconst_1
996: goto          1000
999: iconst_0
1000: invokestatic  #61
1003: aload         42
1005: invokestatic  #47
1008: aload         43
1010: invokestatic  #47
1013: aload         44
1015: invokestatic  #47
1018: aload         45
1020: invokestatic  #47
1023: aload         46
1025: invokestatic  #47
1028: new           #54
1031: dup
1032: invokespecial #55
1035: ldc           #56
1037: invokevirtual #57
1040: aload         47
1042: invokevirtual #82
1045: ldc           #59
1047: invokevirtual #57
1050: getstatic     #78
1053: invokevirtual #82
1056: ldc           #56
1058: invokevirtual #57
1061: invokevirtual #60
1064: aload         47
1066: getstatic     #78
1069: invokevirtual #83
1072: invokestatic  #61
1075: aload         48
1077: invokestatic  #47
1080: aload         49
1082: invokestatic  #47
1085: new           #54
1088: dup
1089: invokespecial #55
1092: ldc           #56
1094: invokevirtual #57
1097: aload         50
1099: invokevirtual #82
1102: ldc           #59
1104: invokevirtual #57
1107: getstatic     #78
1110: invokevirtual #82
1113: ldc           #56
1115: invokevirtual #57
1118: invokevirtual #60
1121: aload         50
1123: getstatic     #78
1126: invokevirtual #83
1129: invokestatic  #61
1132: aload         51
1134: invokestatic  #47
1137: aload         52
1139: invokestatic  #47
1142: new           #54
1145: dup
1146: invokespecial #55
1149: ldc           #56
1151: invokevirtual #57
1154: dload         53
1156: invokevirtual #58
1159: ldc           #59
1161: invokevirtual #57
1164: ldc2_w        #472
1167: invokevirtual #58
1170: ldc           #56
1172: invokevirtual #57
1175: invokevirtual #60
1178: dload         53
1180: ldc2_w        #472
1183: dcmpl
1184: ifne          1191
1187: iconst_1
1188: goto          1192
1191: iconst_0
1192: invokestatic  #61
1195: new           #54
1198: dup
1199: invokespecial #55
1202: ldc           #56
1204: invokevirtual #57
1207: iload         55
1209: invokevirtual #62
1212: ldc           #59
1214: invokevirtual #57
1217: bipush        7
1219: invokevirtual #62
1222: ldc           #56
1224: invokevirtual #57
1227: invokevirtual #60
1230: iload         55
1232: bipush        7
1234: if_icmpne     1241
1237: iconst_1
1238: goto          1242
1241: iconst_0
1242: invokestatic  #61
1245: new           #54
1248: dup
1249: invokespecial #55
1252: ldc           #56
1254: invokevirtual #57
1257: dload         56
1259: invokevirtual #58
1262: ldc           #59
1264: invokevirtual #57
1267: ldc2_w        #263
1270: invokevirtual #58
1273: ldc           #56
1275: invokevirtual #57
1278: invokevirtual #60
1281: dload         56
1283: ldc2_w        #263
1286: dcmpl
1287: ifne          1294
1290: iconst_1
1291: goto          1295
1294: iconst_0
1295: invokestatic  #61
1298: new           #54
1301: dup
1302: invokespecial #55
1305: ldc           #56
1307: invokevirtual #57
1310: dload         58
1312: invokevirtual #58
1315: ldc           #59
1317: invokevirtual #57
1320: ldc2_w        #93
1323: invokevirtual #58
1326: ldc           #56
1328: invokevirtual #57
1331: invokevirtual #60
1334: dload         58
1336: ldc2_w        #93
1339: dcmpl
1340: ifne          1347
1343: iconst_1
1344: goto          1348
1347: iconst_0
1348: invokestatic  #61
1351: new           #54
1354: dup
1355: invokespecial #55
1358: ldc           #56
1360: invokevirtual #57
1363: dload         60
1365: invokevirtual #58
1368: ldc           #59
1370: invokevirtual #57
1373: ldc2_w        #901
1376: invokevirtual #58
1379: ldc           #56
1381: invokevirtual #57
1384: invokevirtual #60
1387: dload         60
1389: ldc2_w        #901
1392: dcmpl
1393: ifne          1400
1396: iconst_1
1397: goto          1401
1400: iconst_0
1401: invokestatic  #61
1404: new           #54
1407: dup
1408: invokespecial #55
1411: ldc           #56
1413: invokevirtual #57
1416: dload         62
1418: invokevirtual #58
1421: ldc           #59
1423: invokevirtual #57
1426: ldc2_w        #903
1429: invokevirtual #58
1432: ldc           #56
1434: invokevirtual #57
1437: invokevirtual #60
1440: dload         62
1442: ldc2_w        #903
1445: dcmpl
1446: ifne          1453
1449: iconst_1
1450: goto          1454
1453: iconst_0
1454: invokestatic  #61
1457: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test270
Start line: 12363
End line: 12419
Method source code: 
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.analysis.function.Sin sin5 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray11 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7, sin9, sin10 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray11);
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction15 = sin14.derivative();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray18 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin13, sin14, sin16, sin17 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable19 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray18);
        org.apache.commons.math3.analysis.function.Sin sin20 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = sin20.derivative();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin5, univariateDifferentiable12, univariateDifferentiable19, sin20, sin22, univariateDifferentiable30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray31);
        org.apache.commons.math3.optimization.GoalType goalType33 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer3.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable32, goalType33, 0.0d, 0.17453292519943295d);
        double double37 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker39 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction15);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray18);
        org.junit.Assert.assertNotNull(univariateDifferentiable19);
        org.junit.Assert.assertNotNull(univariateFunction21);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertTrue("'" + goalType33 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType33.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.17453292519943295d + "'", double37 == 0.17453292519943295d);
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #905
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: new           #72
45: dup
46: invokespecial #73
49: astore_3
50: new           #72
53: dup
54: invokespecial #73
57: astore        4
59: new           #72
62: dup
63: invokespecial #73
66: astore        5
68: aload         5
70: invokevirtual #74
73: astore        6
75: new           #72
78: dup
79: invokespecial #73
82: astore        7
84: new           #72
87: dup
88: invokespecial #73
91: astore        8
93: iconst_4
94: anewarray     #75
97: dup
98: iconst_0
99: aload         4
101: aastore
102: dup
103: iconst_1
104: aload         5
106: aastore
107: dup
108: iconst_2
109: aload         7
111: aastore
112: dup
113: iconst_3
114: aload         8
116: aastore
117: astore        9
119: aload         9
121: invokestatic  #76
124: astore        10
126: new           #72
129: dup
130: invokespecial #73
133: astore        11
135: new           #72
138: dup
139: invokespecial #73
142: astore        12
144: aload         12
146: invokevirtual #74
149: astore        13
151: new           #72
154: dup
155: invokespecial #73
158: astore        14
160: new           #72
163: dup
164: invokespecial #73
167: astore        15
169: iconst_4
170: anewarray     #75
173: dup
174: iconst_0
175: aload         11
177: aastore
178: dup
179: iconst_1
180: aload         12
182: aastore
183: dup
184: iconst_2
185: aload         14
187: aastore
188: dup
189: iconst_3
190: aload         15
192: aastore
193: astore        16
195: aload         16
197: invokestatic  #76
200: astore        17
202: new           #72
205: dup
206: invokespecial #73
209: astore        18
211: aload         18
213: invokevirtual #74
216: astore        19
218: new           #72
221: dup
222: invokespecial #73
225: astore        20
227: aload         20
229: invokevirtual #74
232: astore        21
234: new           #72
237: dup
238: invokespecial #73
241: astore        22
243: new           #72
246: dup
247: invokespecial #73
250: astore        23
252: aload         23
254: invokevirtual #74
257: astore        24
259: new           #72
262: dup
263: invokespecial #73
266: astore        25
268: new           #72
271: dup
272: invokespecial #73
275: astore        26
277: iconst_4
278: anewarray     #75
281: dup
282: iconst_0
283: aload         22
285: aastore
286: dup
287: iconst_1
288: aload         23
290: aastore
291: dup
292: iconst_2
293: aload         25
295: aastore
296: dup
297: iconst_3
298: aload         26
300: aastore
301: astore        27
303: aload         27
305: invokestatic  #76
308: astore        28
310: bipush        6
312: anewarray     #75
315: dup
316: iconst_0
317: aload_3
318: aastore
319: dup
320: iconst_1
321: aload         10
323: aastore
324: dup
325: iconst_2
326: aload         17
328: aastore
329: dup
330: iconst_3
331: aload         18
333: aastore
334: dup
335: iconst_4
336: aload         20
338: aastore
339: dup
340: iconst_5
341: aload         28
343: aastore
344: astore        29
346: aload         29
348: invokestatic  #77
351: astore        30
353: getstatic     #78
356: astore        31
358: aload_2
359: bipush        10
361: aload         30
363: aload         31
365: dconst_0
366: ldc2_w        #79
369: invokevirtual #81
372: astore        32
374: aload_2
375: invokevirtual #49
378: dstore        33
380: aload_2
381: invokevirtual #51
384: astore        35
386: aload_2
387: invokevirtual #103
390: astore        36
392: aload         6
394: invokestatic  #47
397: aload         9
399: invokestatic  #47
402: aload         10
404: invokestatic  #47
407: aload         13
409: invokestatic  #47
412: aload         16
414: invokestatic  #47
417: aload         17
419: invokestatic  #47
422: aload         19
424: invokestatic  #47
427: aload         21
429: invokestatic  #47
432: aload         24
434: invokestatic  #47
437: aload         27
439: invokestatic  #47
442: aload         28
444: invokestatic  #47
447: aload         29
449: invokestatic  #47
452: aload         30
454: invokestatic  #47
457: new           #54
460: dup
461: invokespecial #55
464: ldc           #56
466: invokevirtual #57
469: aload         31
471: invokevirtual #82
474: ldc           #59
476: invokevirtual #57
479: getstatic     #78
482: invokevirtual #82
485: ldc           #56
487: invokevirtual #57
490: invokevirtual #60
493: aload         31
495: getstatic     #78
498: invokevirtual #83
501: invokestatic  #61
504: aload         32
506: invokestatic  #47
509: new           #54
512: dup
513: invokespecial #55
516: ldc           #56
518: invokevirtual #57
521: dload         33
523: invokevirtual #58
526: ldc           #59
528: invokevirtual #57
531: ldc2_w        #79
534: invokevirtual #58
537: ldc           #56
539: invokevirtual #57
542: invokevirtual #60
545: dload         33
547: ldc2_w        #79
550: dcmpl
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #61
562: aload         35
564: invokestatic  #47
567: aload         36
569: invokestatic  #104
572: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test271
Start line: 12422
End line: 12464
Method source code: 
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        double double30 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3.141592653589793d + "'", double30 == 3.141592653589793d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #906
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: invokevirtual #231
209: dstore        23
211: new           #54
214: dup
215: invokespecial #55
218: ldc           #56
220: invokevirtual #57
223: iload_3
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload_3
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: aload         6
258: invokestatic  #47
261: aload         7
263: invokestatic  #47
266: aload         8
268: invokestatic  #47
271: aload         9
273: invokestatic  #47
276: aload         10
278: invokestatic  #47
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: aload         11
295: invokevirtual #82
298: ldc           #59
300: invokevirtual #57
303: getstatic     #78
306: invokevirtual #82
309: ldc           #56
311: invokevirtual #57
314: invokevirtual #60
317: aload         11
319: getstatic     #78
322: invokevirtual #83
325: invokestatic  #61
328: aload         12
330: invokestatic  #47
333: aload         13
335: invokestatic  #47
338: new           #54
341: dup
342: invokespecial #55
345: ldc           #56
347: invokevirtual #57
350: aload         14
352: invokevirtual #82
355: ldc           #59
357: invokevirtual #57
360: getstatic     #78
363: invokevirtual #82
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: aload         14
376: getstatic     #78
379: invokevirtual #83
382: invokestatic  #61
385: aload         15
387: invokestatic  #47
390: aload         17
392: invokestatic  #47
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: aload         18
409: invokevirtual #82
412: ldc           #59
414: invokevirtual #57
417: getstatic     #78
420: invokevirtual #82
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: aload         18
433: getstatic     #78
436: invokevirtual #83
439: invokestatic  #61
442: aload         19
444: invokestatic  #47
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: dload         20
461: invokevirtual #58
464: ldc           #59
466: invokevirtual #57
469: dconst_0
470: invokevirtual #58
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: dload         20
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #61
496: new           #54
499: dup
500: invokespecial #55
503: ldc           #56
505: invokevirtual #57
508: iload         22
510: invokevirtual #62
513: ldc           #59
515: invokevirtual #57
518: iconst_1
519: invokevirtual #62
522: ldc           #56
524: invokevirtual #57
527: invokevirtual #60
530: iload         22
532: iconst_1
533: if_icmpne     540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #61
544: new           #54
547: dup
548: invokespecial #55
551: ldc           #56
553: invokevirtual #57
556: dload         23
558: invokevirtual #58
561: ldc           #59
563: invokevirtual #57
566: ldc2_w        #133
569: invokevirtual #58
572: ldc           #56
574: invokevirtual #57
577: invokevirtual #60
580: dload         23
582: ldc2_w        #133
585: dcmpl
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #61
597: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test272
Start line: 12467
End line: 12551
Method source code: 
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        double double6 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = sin9.derivative();
        double double12 = sin9.value((double) (short) 10);
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = sin13.derivative();
        double double16 = sin13.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin13.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction18 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) sin9, (org.apache.commons.math3.analysis.UnivariateFunction) sin13);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction19 = sin9.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction20 = sin9.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer24 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker23);
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = sin28.derivative();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray32 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin27, sin28, sin30, sin31 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray32);
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray39 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin34, sin35, sin37, sin38 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = sin43.derivative();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction47 = sin46.derivative();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray50 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin45, sin46, sin48, sin49 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable51 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray50);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray52 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, univariateDifferentiable33, univariateDifferentiable40, sin41, sin43, univariateDifferentiable51 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable53 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray52);
        org.apache.commons.math3.optimization.GoalType goalType54 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair57 = brentOptimizer24.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable53, goalType54, 0.0d, 0.17453292519943295d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer3.optimize(1, (org.apache.commons.math3.analysis.UnivariateFunction) sin9, goalType54, (-0.35891532187732544d), 0.0d, (-8.0d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.5440211108893698d) + "'", double12 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.8414709825806044d + "'", double16 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateFunction18);
        org.junit.Assert.assertNotNull(univariateFunction19);
        org.junit.Assert.assertNotNull(univariateFunction20);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray32);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateFunction44);
        org.junit.Assert.assertNotNull(univariateFunction47);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray50);
        org.junit.Assert.assertNotNull(univariateDifferentiable51);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray52);
        org.junit.Assert.assertNotNull(univariateDifferentiable53);
        org.junit.Assert.assertTrue("'" + goalType54 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType54.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #907
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #49
57: dstore        6
59: aconst_null
60: astore        8
62: new           #72
65: dup
66: invokespecial #73
69: astore        9
71: aload         9
73: invokevirtual #74
76: astore        10
78: aload         9
80: ldc2_w        #91
83: invokevirtual #88
86: dstore        11
88: new           #72
91: dup
92: invokespecial #73
95: astore        13
97: aload         13
99: invokevirtual #74
102: astore        14
104: aload         13
106: ldc2_w        #86
109: invokevirtual #88
112: dstore        15
114: aload         13
116: invokevirtual #74
119: astore        17
121: aload         8
123: aload         9
125: aload         13
127: invokestatic  #404
130: astore        18
132: aload         9
134: invokevirtual #74
137: astore        19
139: aload         9
141: invokevirtual #74
144: astore        20
146: aconst_null
147: astore        21
149: new           #8
152: dup
153: ldc2_w        #31
156: ldc2_w        #33
159: aload         21
161: invokespecial #13
164: astore        22
166: new           #72
169: dup
170: invokespecial #73
173: astore        23
175: new           #72
178: dup
179: invokespecial #73
182: astore        24
184: new           #72
187: dup
188: invokespecial #73
191: astore        25
193: aload         25
195: invokevirtual #74
198: astore        26
200: new           #72
203: dup
204: invokespecial #73
207: astore        27
209: new           #72
212: dup
213: invokespecial #73
216: astore        28
218: iconst_4
219: anewarray     #75
222: dup
223: iconst_0
224: aload         24
226: aastore
227: dup
228: iconst_1
229: aload         25
231: aastore
232: dup
233: iconst_2
234: aload         27
236: aastore
237: dup
238: iconst_3
239: aload         28
241: aastore
242: astore        29
244: aload         29
246: invokestatic  #76
249: astore        30
251: new           #72
254: dup
255: invokespecial #73
258: astore        31
260: new           #72
263: dup
264: invokespecial #73
267: astore        32
269: aload         32
271: invokevirtual #74
274: astore        33
276: new           #72
279: dup
280: invokespecial #73
283: astore        34
285: new           #72
288: dup
289: invokespecial #73
292: astore        35
294: iconst_4
295: anewarray     #75
298: dup
299: iconst_0
300: aload         31
302: aastore
303: dup
304: iconst_1
305: aload         32
307: aastore
308: dup
309: iconst_2
310: aload         34
312: aastore
313: dup
314: iconst_3
315: aload         35
317: aastore
318: astore        36
320: aload         36
322: invokestatic  #76
325: astore        37
327: new           #72
330: dup
331: invokespecial #73
334: astore        38
336: aload         38
338: invokevirtual #74
341: astore        39
343: new           #72
346: dup
347: invokespecial #73
350: astore        40
352: aload         40
354: invokevirtual #74
357: astore        41
359: new           #72
362: dup
363: invokespecial #73
366: astore        42
368: new           #72
371: dup
372: invokespecial #73
375: astore        43
377: aload         43
379: invokevirtual #74
382: astore        44
384: new           #72
387: dup
388: invokespecial #73
391: astore        45
393: new           #72
396: dup
397: invokespecial #73
400: astore        46
402: iconst_4
403: anewarray     #75
406: dup
407: iconst_0
408: aload         42
410: aastore
411: dup
412: iconst_1
413: aload         43
415: aastore
416: dup
417: iconst_2
418: aload         45
420: aastore
421: dup
422: iconst_3
423: aload         46
425: aastore
426: astore        47
428: aload         47
430: invokestatic  #76
433: astore        48
435: bipush        6
437: anewarray     #75
440: dup
441: iconst_0
442: aload         23
444: aastore
445: dup
446: iconst_1
447: aload         30
449: aastore
450: dup
451: iconst_2
452: aload         37
454: aastore
455: dup
456: iconst_3
457: aload         38
459: aastore
460: dup
461: iconst_4
462: aload         40
464: aastore
465: dup
466: iconst_5
467: aload         48
469: aastore
470: astore        49
472: aload         49
474: invokestatic  #77
477: astore        50
479: getstatic     #78
482: astore        51
484: aload         22
486: bipush        10
488: aload         50
490: aload         51
492: dconst_0
493: ldc2_w        #79
496: invokevirtual #81
499: astore        52
501: aload_2
502: iconst_1
503: aload         9
505: aload         51
507: ldc2_w        #630
510: dconst_0
511: ldc2_w        #908
514: invokevirtual #44
517: astore        53
519: ldc           #131
521: invokestatic  #15
524: goto          529
527: astore        53
529: new           #54
532: dup
533: invokespecial #55
536: ldc           #56
538: invokevirtual #57
541: iload_3
542: invokevirtual #62
545: ldc           #59
547: invokevirtual #57
550: iconst_0
551: invokevirtual #62
554: ldc           #56
556: invokevirtual #57
559: invokevirtual #60
562: iload_3
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #61
574: new           #54
577: dup
578: invokespecial #55
581: ldc           #56
583: invokevirtual #57
586: dload         4
588: invokevirtual #58
591: ldc           #59
593: invokevirtual #57
596: dconst_0
597: invokevirtual #58
600: ldc           #56
602: invokevirtual #57
605: invokevirtual #60
608: dload         4
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #61
623: new           #54
626: dup
627: invokespecial #55
630: ldc           #56
632: invokevirtual #57
635: dload         6
637: invokevirtual #58
640: ldc           #59
642: invokevirtual #57
645: dconst_0
646: invokevirtual #58
649: ldc           #56
651: invokevirtual #57
654: invokevirtual #60
657: dload         6
659: dconst_0
660: dcmpl
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #61
672: aload         10
674: invokestatic  #47
677: new           #54
680: dup
681: invokespecial #55
684: ldc           #56
686: invokevirtual #57
689: dload         11
691: invokevirtual #58
694: ldc           #59
696: invokevirtual #57
699: ldc2_w        #406
702: invokevirtual #58
705: ldc           #56
707: invokevirtual #57
710: invokevirtual #60
713: dload         11
715: ldc2_w        #406
718: dcmpl
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #61
730: aload         14
732: invokestatic  #47
735: new           #54
738: dup
739: invokespecial #55
742: ldc           #56
744: invokevirtual #57
747: dload         15
749: invokevirtual #58
752: ldc           #59
754: invokevirtual #57
757: ldc2_w        #23
760: invokevirtual #58
763: ldc           #56
765: invokevirtual #57
768: invokevirtual #60
771: dload         15
773: ldc2_w        #23
776: dcmpl
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #61
788: aload         17
790: invokestatic  #47
793: aload         18
795: invokestatic  #47
798: aload         19
800: invokestatic  #47
803: aload         20
805: invokestatic  #47
808: aload         26
810: invokestatic  #47
813: aload         29
815: invokestatic  #47
818: aload         30
820: invokestatic  #47
823: aload         33
825: invokestatic  #47
828: aload         36
830: invokestatic  #47
833: aload         37
835: invokestatic  #47
838: aload         39
840: invokestatic  #47
843: aload         41
845: invokestatic  #47
848: aload         44
850: invokestatic  #47
853: aload         47
855: invokestatic  #47
858: aload         48
860: invokestatic  #47
863: aload         49
865: invokestatic  #47
868: aload         50
870: invokestatic  #47
873: new           #54
876: dup
877: invokespecial #55
880: ldc           #56
882: invokevirtual #57
885: aload         51
887: invokevirtual #82
890: ldc           #59
892: invokevirtual #57
895: getstatic     #78
898: invokevirtual #82
901: ldc           #56
903: invokevirtual #57
906: invokevirtual #60
909: aload         51
911: getstatic     #78
914: invokevirtual #83
917: invokestatic  #61
920: aload         52
922: invokestatic  #47
925: return
Exception table:
from    to  target type
501   524   527   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test273
Start line: 12554
End line: 12659
Method source code: 
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        int int8 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = sin11.derivative();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin14 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray15 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin10, sin11, sin13, sin14 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray15);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable18 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray15);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker21 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer22 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker21);
        int int23 = brentOptimizer22.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = sin26.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray28);
        org.apache.commons.math3.optimization.GoalType goalType32 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer22.optimize(97, univariateFunction31, goalType32, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair37 = brentOptimizer22.doOptimize();
        double double38 = brentOptimizer22.getMax();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction47 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer52 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker51);
        int int53 = brentOptimizer52.getEvaluations();
        int int54 = brentOptimizer52.getEvaluations();
        int int55 = brentOptimizer52.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction57 = null;
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = sin59.derivative();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray63 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin58, sin59, sin61, sin62 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable64 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable66 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction68 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction57, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable66, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType69 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer52.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable66, goalType69, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer22.optimize(4, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable48, goalType69, 1.2786363145140078E-4d, (-0.8942257319186149d), 3.6757332503588205d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair80 = brentOptimizer3.optimize((-4), (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable18, goalType69, 0.16020232712363816d, (-0.8699394413304256d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-4) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray15);
        org.junit.Assert.assertNotNull(univariateDifferentiable16);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiable18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + goalType32 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType32.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertNotNull(univariatePointValuePair37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.4210854715202004E-14d + "'", double38 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction60);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray63);
        org.junit.Assert.assertNotNull(univariateDifferentiable64);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiable66);
        org.junit.Assert.assertNotNull(multivariateFunction68);
        org.junit.Assert.assertTrue("'" + goalType69 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType69.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #910
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #103
63: astore        7
65: aload_2
66: invokevirtual #71
69: istore        8
71: new           #72
74: dup
75: invokespecial #73
78: astore        9
80: new           #72
83: dup
84: invokespecial #73
87: astore        10
89: aload         10
91: invokevirtual #74
94: astore        11
96: new           #72
99: dup
100: invokespecial #73
103: astore        12
105: new           #72
108: dup
109: invokespecial #73
112: astore        13
114: iconst_4
115: anewarray     #75
118: dup
119: iconst_0
120: aload         9
122: aastore
123: dup
124: iconst_1
125: aload         10
127: aastore
128: dup
129: iconst_2
130: aload         12
132: aastore
133: dup
134: iconst_3
135: aload         13
137: aastore
138: astore        14
140: aload         14
142: invokestatic  #76
145: astore        15
147: aload         14
149: checkcast     #89
152: invokestatic  #109
155: astore        16
157: aload         14
159: invokestatic  #77
162: astore        17
164: aconst_null
165: astore        18
167: new           #8
170: dup
171: ldc2_w        #31
174: ldc2_w        #33
177: aload         18
179: invokespecial #13
182: astore        19
184: aload         19
186: invokevirtual #71
189: istore        20
191: new           #72
194: dup
195: invokespecial #73
198: astore        21
200: new           #72
203: dup
204: invokespecial #73
207: astore        22
209: aload         22
211: invokevirtual #74
214: astore        23
216: iconst_2
217: anewarray     #75
220: dup
221: iconst_0
222: aload         21
224: aastore
225: dup
226: iconst_1
227: aload         22
229: aastore
230: astore        24
232: aload         24
234: invokestatic  #76
237: astore        25
239: aload         24
241: invokestatic  #77
244: astore        26
246: aload         24
248: checkcast     #89
251: invokestatic  #90
254: astore        27
256: getstatic     #78
259: astore        28
261: aload         19
263: bipush        97
265: aload         27
267: aload         28
269: ldc2_w        #91
272: ldc2_w        #93
275: ldc2_w        #91
278: invokevirtual #44
281: astore        29
283: aload         19
285: invokevirtual #51
288: astore        30
290: aload         19
292: invokevirtual #49
295: dstore        31
297: new           #72
300: dup
301: invokespecial #73
304: astore        33
306: new           #72
309: dup
310: invokespecial #73
313: astore        34
315: aload         34
317: invokevirtual #74
320: astore        35
322: new           #72
325: dup
326: invokespecial #73
329: astore        36
331: new           #72
334: dup
335: invokespecial #73
338: astore        37
340: iconst_4
341: anewarray     #75
344: dup
345: iconst_0
346: aload         33
348: aastore
349: dup
350: iconst_1
351: aload         34
353: aastore
354: dup
355: iconst_2
356: aload         36
358: aastore
359: dup
360: iconst_3
361: aload         37
363: aastore
364: astore        38
366: aload         38
368: invokestatic  #76
371: astore        39
373: aload         38
375: checkcast     #89
378: invokestatic  #109
381: astore        40
383: aload         38
385: invokestatic  #76
388: astore        41
390: aconst_null
391: astore        42
393: new           #8
396: dup
397: ldc2_w        #31
400: ldc2_w        #33
403: aload         42
405: invokespecial #13
408: astore        43
410: aload         43
412: invokevirtual #71
415: istore        44
417: aload         43
419: invokevirtual #71
422: istore        45
424: aload         43
426: invokevirtual #71
429: istore        46
431: aconst_null
432: astore        47
434: new           #72
437: dup
438: invokespecial #73
441: astore        48
443: new           #72
446: dup
447: invokespecial #73
450: astore        49
452: aload         49
454: invokevirtual #74
457: astore        50
459: new           #72
462: dup
463: invokespecial #73
466: astore        51
468: new           #72
471: dup
472: invokespecial #73
475: astore        52
477: iconst_4
478: anewarray     #75
481: dup
482: iconst_0
483: aload         48
485: aastore
486: dup
487: iconst_1
488: aload         49
490: aastore
491: dup
492: iconst_2
493: aload         51
495: aastore
496: dup
497: iconst_3
498: aload         52
500: aastore
501: astore        53
503: aload         53
505: invokestatic  #76
508: astore        54
510: aload         53
512: checkcast     #89
515: invokestatic  #109
518: astore        55
520: aload         53
522: invokestatic  #77
525: astore        56
527: aload         47
529: aload         56
531: ldc2_w        #181
534: invokestatic  #183
537: astore        57
539: getstatic     #118
542: astore        58
544: aload         43
546: bipush        10
548: aload         56
550: aload         58
552: ldc2_w        #184
555: ldc2_w        #186
558: ldc2_w        #188
561: invokevirtual #44
564: astore        59
566: aload         19
568: iconst_4
569: aload         41
571: aload         58
573: ldc2_w        #884
576: ldc2_w        #682
579: ldc2_w        #288
582: invokevirtual #44
585: astore        60
587: aload_2
588: bipush        -4
590: aload         17
592: aload         58
594: ldc2_w        #911
597: ldc2_w        #913
600: invokevirtual #81
603: astore        61
605: ldc_w         #915
608: invokestatic  #15
611: goto          616
614: astore        61
616: new           #54
619: dup
620: invokespecial #55
623: ldc           #56
625: invokevirtual #57
628: iload_3
629: invokevirtual #62
632: ldc           #59
634: invokevirtual #57
637: iconst_0
638: invokevirtual #62
641: ldc           #56
643: invokevirtual #57
646: invokevirtual #60
649: iload_3
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #61
661: new           #54
664: dup
665: invokespecial #55
668: ldc           #56
670: invokevirtual #57
673: dload         4
675: invokevirtual #58
678: ldc           #59
680: invokevirtual #57
683: dconst_0
684: invokevirtual #58
687: ldc           #56
689: invokevirtual #57
692: invokevirtual #60
695: dload         4
697: dconst_0
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #61
710: new           #54
713: dup
714: invokespecial #55
717: ldc           #56
719: invokevirtual #57
722: iload         6
724: invokevirtual #62
727: ldc           #59
729: invokevirtual #57
732: iconst_0
733: invokevirtual #62
736: ldc           #56
738: invokevirtual #57
741: invokevirtual #60
744: iload         6
746: ifne          753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #61
757: aload         7
759: invokestatic  #104
762: new           #54
765: dup
766: invokespecial #55
769: ldc           #56
771: invokevirtual #57
774: iload         8
776: invokevirtual #62
779: ldc           #59
781: invokevirtual #57
784: iconst_0
785: invokevirtual #62
788: ldc           #56
790: invokevirtual #57
793: invokevirtual #60
796: iload         8
798: ifne          805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #61
809: aload         11
811: invokestatic  #47
814: aload         14
816: invokestatic  #47
819: aload         15
821: invokestatic  #47
824: aload         16
826: invokestatic  #47
829: aload         17
831: invokestatic  #47
834: new           #54
837: dup
838: invokespecial #55
841: ldc           #56
843: invokevirtual #57
846: iload         20
848: invokevirtual #62
851: ldc           #59
853: invokevirtual #57
856: iconst_0
857: invokevirtual #62
860: ldc           #56
862: invokevirtual #57
865: invokevirtual #60
868: iload         20
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #61
881: aload         23
883: invokestatic  #47
886: aload         24
888: invokestatic  #47
891: aload         25
893: invokestatic  #47
896: aload         26
898: invokestatic  #47
901: aload         27
903: invokestatic  #47
906: new           #54
909: dup
910: invokespecial #55
913: ldc           #56
915: invokevirtual #57
918: aload         28
920: invokevirtual #82
923: ldc           #59
925: invokevirtual #57
928: getstatic     #78
931: invokevirtual #82
934: ldc           #56
936: invokevirtual #57
939: invokevirtual #60
942: aload         28
944: getstatic     #78
947: invokevirtual #83
950: invokestatic  #61
953: aload         29
955: invokestatic  #47
958: aload         30
960: invokestatic  #47
963: new           #54
966: dup
967: invokespecial #55
970: ldc           #56
972: invokevirtual #57
975: dload         31
977: invokevirtual #58
980: ldc           #59
982: invokevirtual #57
985: ldc2_w        #93
988: invokevirtual #58
991: ldc           #56
993: invokevirtual #57
996: invokevirtual #60
999: dload         31
1001: ldc2_w        #93
1004: dcmpl
1005: ifne          1012
1008: iconst_1
1009: goto          1013
1012: iconst_0
1013: invokestatic  #61
1016: aload         35
1018: invokestatic  #47
1021: aload         38
1023: invokestatic  #47
1026: aload         39
1028: invokestatic  #47
1031: aload         40
1033: invokestatic  #47
1036: aload         41
1038: invokestatic  #47
1041: new           #54
1044: dup
1045: invokespecial #55
1048: ldc           #56
1050: invokevirtual #57
1053: iload         44
1055: invokevirtual #62
1058: ldc           #59
1060: invokevirtual #57
1063: iconst_0
1064: invokevirtual #62
1067: ldc           #56
1069: invokevirtual #57
1072: invokevirtual #60
1075: iload         44
1077: ifne          1084
1080: iconst_1
1081: goto          1085
1084: iconst_0
1085: invokestatic  #61
1088: new           #54
1091: dup
1092: invokespecial #55
1095: ldc           #56
1097: invokevirtual #57
1100: iload         45
1102: invokevirtual #62
1105: ldc           #59
1107: invokevirtual #57
1110: iconst_0
1111: invokevirtual #62
1114: ldc           #56
1116: invokevirtual #57
1119: invokevirtual #60
1122: iload         45
1124: ifne          1131
1127: iconst_1
1128: goto          1132
1131: iconst_0
1132: invokestatic  #61
1135: new           #54
1138: dup
1139: invokespecial #55
1142: ldc           #56
1144: invokevirtual #57
1147: iload         46
1149: invokevirtual #62
1152: ldc           #59
1154: invokevirtual #57
1157: iconst_0
1158: invokevirtual #62
1161: ldc           #56
1163: invokevirtual #57
1166: invokevirtual #60
1169: iload         46
1171: ifne          1178
1174: iconst_1
1175: goto          1179
1178: iconst_0
1179: invokestatic  #61
1182: aload         50
1184: invokestatic  #47
1187: aload         53
1189: invokestatic  #47
1192: aload         54
1194: invokestatic  #47
1197: aload         55
1199: invokestatic  #47
1202: aload         56
1204: invokestatic  #47
1207: aload         57
1209: invokestatic  #47
1212: new           #54
1215: dup
1216: invokespecial #55
1219: ldc           #56
1221: invokevirtual #57
1224: aload         58
1226: invokevirtual #82
1229: ldc           #59
1231: invokevirtual #57
1234: getstatic     #118
1237: invokevirtual #82
1240: ldc           #56
1242: invokevirtual #57
1245: invokevirtual #60
1248: aload         58
1250: getstatic     #118
1253: invokevirtual #83
1256: invokestatic  #61
1259: aload         59
1261: invokestatic  #47
1264: aload         60
1266: invokestatic  #47
1269: return
Exception table:
from    to  target type
587   611   614   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test274
Start line: 12662
End line: 12666
Method source code: 
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 63, 8.739598769236628E14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #916
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #917
32: ldc2_w        #919
35: invokespecial #25
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test275
Start line: 12669
End line: 12693
Method source code: 
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double double11 = brentOptimizer3.computeObjectiveValue(0.8415532698830488d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #921
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #50
69: istore        7
71: aload_2
72: invokevirtual #103
75: astore        8
77: aload_2
78: ldc2_w        #847
81: invokevirtual #158
84: dstore        9
86: ldc           #52
88: invokestatic  #15
91: goto          96
94: astore        9
96: new           #54
99: dup
100: invokespecial #55
103: ldc           #56
105: invokevirtual #57
108: iload_3
109: invokevirtual #62
112: ldc           #59
114: invokevirtual #57
117: iconst_0
118: invokevirtual #62
121: ldc           #56
123: invokevirtual #57
126: invokevirtual #60
129: iload_3
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #61
141: new           #54
144: dup
145: invokespecial #55
148: ldc           #56
150: invokevirtual #57
153: iload         4
155: invokevirtual #62
158: ldc           #59
160: invokevirtual #57
163: iconst_0
164: invokevirtual #62
167: ldc           #56
169: invokevirtual #57
172: invokevirtual #60
175: iload         4
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #61
188: new           #54
191: dup
192: invokespecial #55
195: ldc           #56
197: invokevirtual #57
200: iload         5
202: invokevirtual #62
205: ldc           #59
207: invokevirtual #57
210: iconst_0
211: invokevirtual #62
214: ldc           #56
216: invokevirtual #57
219: invokevirtual #60
222: iload         5
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #61
235: new           #54
238: dup
239: invokespecial #55
242: ldc           #56
244: invokevirtual #57
247: iload         6
249: invokevirtual #62
252: ldc           #59
254: invokevirtual #57
257: iconst_0
258: invokevirtual #62
261: ldc           #56
263: invokevirtual #57
266: invokevirtual #60
269: iload         6
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #61
282: new           #54
285: dup
286: invokespecial #55
289: ldc           #56
291: invokevirtual #57
294: iload         7
296: invokevirtual #62
299: ldc           #59
301: invokevirtual #57
304: iconst_0
305: invokevirtual #62
308: ldc           #56
310: invokevirtual #57
313: invokevirtual #60
316: iload         7
318: ifne          325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #61
329: aload         8
331: invokestatic  #104
334: return
Exception table:
from    to  target type
77    91    94   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test276
Start line: 12696
End line: 12781
Method source code: 
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getStartValue();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin22, sin23, sin25, sin26 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.compose(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable30);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction31);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction33 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable32);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable34 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction33);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer38 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker37);
        int int39 = brentOptimizer38.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin41, sin42 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction47 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.GoalType goalType48 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair52 = brentOptimizer38.optimize(97, univariateFunction47, goalType48, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair53 = brentOptimizer38.doOptimize();
        int int54 = brentOptimizer38.getMaxEvaluations();
        int int55 = brentOptimizer38.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair56 = brentOptimizer38.doOptimize();
        int int57 = brentOptimizer38.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType58 = brentOptimizer38.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer3.optimize(3, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable34, goalType58, (double) 3.0f, 0.5033290854469099d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction33);
        org.junit.Assert.assertNotNull(univariateDifferentiable34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction47);
        org.junit.Assert.assertTrue("'" + goalType48 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType48.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair52);
        org.junit.Assert.assertNotNull(univariatePointValuePair53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 97 + "'", int54 == 97);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 97 + "'", int55 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 12 + "'", int57 == 12);
        org.junit.Assert.assertTrue("'" + goalType58 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType58.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #922
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #177
148: dstore        14
150: aload_2
151: invokevirtual #71
154: istore        16
156: new           #72
159: dup
160: invokespecial #73
163: astore        17
165: new           #72
168: dup
169: invokespecial #73
172: astore        18
174: aload         18
176: invokevirtual #74
179: astore        19
181: new           #72
184: dup
185: invokespecial #73
188: astore        20
190: new           #72
193: dup
194: invokespecial #73
197: astore        21
199: iconst_4
200: anewarray     #75
203: dup
204: iconst_0
205: aload         17
207: aastore
208: dup
209: iconst_1
210: aload         18
212: aastore
213: dup
214: iconst_2
215: aload         20
217: aastore
218: dup
219: iconst_3
220: aload         21
222: aastore
223: astore        22
225: aload         22
227: invokestatic  #76
230: astore        23
232: aload         22
234: checkcast     #89
237: invokestatic  #109
240: astore        24
242: aload         22
244: invokestatic  #280
247: astore        25
249: aload         25
251: invokestatic  #281
254: astore        26
256: aload         26
258: invokestatic  #143
261: astore        27
263: aload         27
265: invokestatic  #281
268: astore        28
270: aload         28
272: invokestatic  #143
275: astore        29
277: aconst_null
278: astore        30
280: new           #8
283: dup
284: ldc2_w        #31
287: ldc2_w        #33
290: aload         30
292: invokespecial #13
295: astore        31
297: aload         31
299: invokevirtual #71
302: istore        32
304: new           #72
307: dup
308: invokespecial #73
311: astore        33
313: new           #72
316: dup
317: invokespecial #73
320: astore        34
322: aload         34
324: invokevirtual #74
327: astore        35
329: iconst_2
330: anewarray     #75
333: dup
334: iconst_0
335: aload         33
337: aastore
338: dup
339: iconst_1
340: aload         34
342: aastore
343: astore        36
345: aload         36
347: invokestatic  #76
350: astore        37
352: aload         36
354: invokestatic  #77
357: astore        38
359: aload         36
361: checkcast     #89
364: invokestatic  #90
367: astore        39
369: getstatic     #78
372: astore        40
374: aload         31
376: bipush        97
378: aload         39
380: aload         40
382: ldc2_w        #91
385: ldc2_w        #93
388: ldc2_w        #91
391: invokevirtual #44
394: astore        41
396: aload         31
398: invokevirtual #51
401: astore        42
403: aload         31
405: invokevirtual #50
408: istore        43
410: aload         31
412: invokevirtual #50
415: istore        44
417: aload         31
419: invokevirtual #51
422: astore        45
424: aload         31
426: invokevirtual #71
429: istore        46
431: aload         31
433: invokevirtual #110
436: astore        47
438: aload_2
439: iconst_3
440: aload         29
442: aload         47
444: ldc2_w        #923
447: ldc2_w        #925
450: invokevirtual #81
453: astore        48
455: new           #54
458: dup
459: invokespecial #55
462: ldc           #56
464: invokevirtual #57
467: iload_3
468: invokevirtual #62
471: ldc           #59
473: invokevirtual #57
476: iconst_0
477: invokevirtual #62
480: ldc           #56
482: invokevirtual #57
485: invokevirtual #60
488: iload_3
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #61
500: aload         6
502: invokestatic  #47
505: aload         7
507: invokestatic  #47
510: aload         8
512: invokestatic  #47
515: aload         9
517: invokestatic  #47
520: aload         10
522: invokestatic  #47
525: new           #54
528: dup
529: invokespecial #55
532: ldc           #56
534: invokevirtual #57
537: aload         11
539: invokevirtual #82
542: ldc           #59
544: invokevirtual #57
547: getstatic     #78
550: invokevirtual #82
553: ldc           #56
555: invokevirtual #57
558: invokevirtual #60
561: aload         11
563: getstatic     #78
566: invokevirtual #83
569: invokestatic  #61
572: aload         12
574: invokestatic  #47
577: aload         13
579: invokestatic  #47
582: new           #54
585: dup
586: invokespecial #55
589: ldc           #56
591: invokevirtual #57
594: dload         14
596: invokevirtual #58
599: ldc           #59
601: invokevirtual #57
604: ldc2_w        #91
607: invokevirtual #58
610: ldc           #56
612: invokevirtual #57
615: invokevirtual #60
618: dload         14
620: ldc2_w        #91
623: dcmpl
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #61
635: new           #54
638: dup
639: invokespecial #55
642: ldc           #56
644: invokevirtual #57
647: iload         16
649: invokevirtual #62
652: ldc           #59
654: invokevirtual #57
657: bipush        8
659: invokevirtual #62
662: ldc           #56
664: invokevirtual #57
667: invokevirtual #60
670: iload         16
672: bipush        8
674: if_icmpne     681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #61
685: aload         19
687: invokestatic  #47
690: aload         22
692: invokestatic  #47
695: aload         23
697: invokestatic  #47
700: aload         24
702: invokestatic  #47
705: aload         25
707: invokestatic  #47
710: aload         26
712: invokestatic  #47
715: aload         27
717: invokestatic  #47
720: aload         28
722: invokestatic  #47
725: aload         29
727: invokestatic  #47
730: new           #54
733: dup
734: invokespecial #55
737: ldc           #56
739: invokevirtual #57
742: iload         32
744: invokevirtual #62
747: ldc           #59
749: invokevirtual #57
752: iconst_0
753: invokevirtual #62
756: ldc           #56
758: invokevirtual #57
761: invokevirtual #60
764: iload         32
766: ifne          773
769: iconst_1
770: goto          774
773: iconst_0
774: invokestatic  #61
777: aload         35
779: invokestatic  #47
782: aload         36
784: invokestatic  #47
787: aload         37
789: invokestatic  #47
792: aload         38
794: invokestatic  #47
797: aload         39
799: invokestatic  #47
802: new           #54
805: dup
806: invokespecial #55
809: ldc           #56
811: invokevirtual #57
814: aload         40
816: invokevirtual #82
819: ldc           #59
821: invokevirtual #57
824: getstatic     #78
827: invokevirtual #82
830: ldc           #56
832: invokevirtual #57
835: invokevirtual #60
838: aload         40
840: getstatic     #78
843: invokevirtual #83
846: invokestatic  #61
849: aload         41
851: invokestatic  #47
854: aload         42
856: invokestatic  #47
859: new           #54
862: dup
863: invokespecial #55
866: ldc           #56
868: invokevirtual #57
871: iload         43
873: invokevirtual #62
876: ldc           #59
878: invokevirtual #57
881: bipush        97
883: invokevirtual #62
886: ldc           #56
888: invokevirtual #57
891: invokevirtual #60
894: iload         43
896: bipush        97
898: if_icmpne     905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #61
909: new           #54
912: dup
913: invokespecial #55
916: ldc           #56
918: invokevirtual #57
921: iload         44
923: invokevirtual #62
926: ldc           #59
928: invokevirtual #57
931: bipush        97
933: invokevirtual #62
936: ldc           #56
938: invokevirtual #57
941: invokevirtual #60
944: iload         44
946: bipush        97
948: if_icmpne     955
951: iconst_1
952: goto          956
955: iconst_0
956: invokestatic  #61
959: aload         45
961: invokestatic  #47
964: new           #54
967: dup
968: invokespecial #55
971: ldc           #56
973: invokevirtual #57
976: iload         46
978: invokevirtual #62
981: ldc           #59
983: invokevirtual #57
986: bipush        12
988: invokevirtual #62
991: ldc           #56
993: invokevirtual #57
996: invokevirtual #60
999: iload         46
1001: bipush        12
1003: if_icmpne     1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #61
1014: new           #54
1017: dup
1018: invokespecial #55
1021: ldc           #56
1023: invokevirtual #57
1026: aload         47
1028: invokevirtual #82
1031: ldc           #59
1033: invokevirtual #57
1036: getstatic     #78
1039: invokevirtual #82
1042: ldc           #56
1044: invokevirtual #57
1047: invokevirtual #60
1050: aload         47
1052: getstatic     #78
1055: invokevirtual #83
1058: invokestatic  #61
1061: aload         48
1063: invokestatic  #47
1066: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test277
Start line: 12784
End line: 12799
Method source code: 
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getMaxEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType8 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(goalType8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #927
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #50
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #71
63: istore        6
65: aload_2
66: invokevirtual #110
69: astore        7
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: iload_3
84: invokevirtual #62
87: ldc           #59
89: invokevirtual #57
92: iconst_0
93: invokevirtual #62
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: new           #54
119: dup
120: invokespecial #55
123: ldc           #56
125: invokevirtual #57
128: iload         4
130: invokevirtual #62
133: ldc           #59
135: invokevirtual #57
138: iconst_0
139: invokevirtual #62
142: ldc           #56
144: invokevirtual #57
147: invokevirtual #60
150: iload         4
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #61
163: new           #54
166: dup
167: invokespecial #55
170: ldc           #56
172: invokevirtual #57
175: iload         5
177: invokevirtual #62
180: ldc           #59
182: invokevirtual #57
185: iconst_0
186: invokevirtual #62
189: ldc           #56
191: invokevirtual #57
194: invokevirtual #60
197: iload         5
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #61
210: new           #54
213: dup
214: invokespecial #55
217: ldc           #56
219: invokevirtual #57
222: iload         6
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload         6
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #61
257: aload         7
259: invokestatic  #104
262: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test278
Start line: 12802
End line: 12903
Method source code: 
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double75 = sin30.value(1.4465168074662325d);
        double double77 = sin30.value(8.06201797891458d);
        double double79 = sin30.value(0.0138849173d);
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure81 = sin30.value(derivativeStructure80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9922872354360438d + "'", double75 == 0.9922872354360438d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9784383721839598d + "'", double77 == 0.9784383721839598d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.01388447115661774d + "'", double79 == 0.01388447115661774d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #928
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload         22
510: ldc2_w        #929
513: invokevirtual #88
516: dstore        53
518: aload         22
520: ldc2_w        #931
523: invokevirtual #88
526: dstore        55
528: aload         22
530: ldc2_w        #933
533: invokevirtual #88
536: dstore        57
538: aconst_null
539: astore        59
541: aload         22
543: aload         59
545: invokevirtual #405
548: astore        60
550: ldc           #119
552: invokestatic  #15
555: goto          560
558: astore        60
560: new           #54
563: dup
564: invokespecial #55
567: ldc           #56
569: invokevirtual #57
572: iload_3
573: invokevirtual #62
576: ldc           #59
578: invokevirtual #57
581: iconst_0
582: invokevirtual #62
585: ldc           #56
587: invokevirtual #57
590: invokevirtual #60
593: iload_3
594: ifne          601
597: iconst_1
598: goto          602
601: iconst_0
602: invokestatic  #61
605: aload         6
607: invokestatic  #47
610: aload         7
612: invokestatic  #47
615: aload         8
617: invokestatic  #47
620: aload         9
622: invokestatic  #47
625: aload         10
627: invokestatic  #47
630: new           #54
633: dup
634: invokespecial #55
637: ldc           #56
639: invokevirtual #57
642: aload         11
644: invokevirtual #82
647: ldc           #59
649: invokevirtual #57
652: getstatic     #78
655: invokevirtual #82
658: ldc           #56
660: invokevirtual #57
663: invokevirtual #60
666: aload         11
668: getstatic     #78
671: invokevirtual #83
674: invokestatic  #61
677: aload         12
679: invokestatic  #47
682: aload         13
684: invokestatic  #47
687: new           #54
690: dup
691: invokespecial #55
694: ldc           #56
696: invokevirtual #57
699: aload         14
701: invokevirtual #82
704: ldc           #59
706: invokevirtual #57
709: getstatic     #78
712: invokevirtual #82
715: ldc           #56
717: invokevirtual #57
720: invokevirtual #60
723: aload         14
725: getstatic     #78
728: invokevirtual #83
731: invokestatic  #61
734: aload         15
736: invokestatic  #47
739: aload         17
741: invokestatic  #47
744: new           #54
747: dup
748: invokespecial #55
751: ldc           #56
753: invokevirtual #57
756: aload         18
758: invokevirtual #82
761: ldc           #59
763: invokevirtual #57
766: getstatic     #78
769: invokevirtual #82
772: ldc           #56
774: invokevirtual #57
777: invokevirtual #60
780: aload         18
782: getstatic     #78
785: invokevirtual #83
788: invokestatic  #61
791: aload         19
793: invokestatic  #47
796: new           #54
799: dup
800: invokespecial #55
803: ldc           #56
805: invokevirtual #57
808: dload         20
810: invokevirtual #58
813: ldc           #59
815: invokevirtual #57
818: dconst_0
819: invokevirtual #58
822: ldc           #56
824: invokevirtual #57
827: invokevirtual #60
830: dload         20
832: dconst_0
833: dcmpl
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #61
845: aload         23
847: invokestatic  #47
850: new           #54
853: dup
854: invokespecial #55
857: ldc           #56
859: invokevirtual #57
862: iload         26
864: invokevirtual #62
867: ldc           #59
869: invokevirtual #57
872: iconst_0
873: invokevirtual #62
876: ldc           #56
878: invokevirtual #57
881: invokevirtual #60
884: iload         26
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #61
897: new           #54
900: dup
901: invokespecial #55
904: ldc           #56
906: invokevirtual #57
909: dload         27
911: invokevirtual #58
914: ldc           #59
916: invokevirtual #57
919: dconst_0
920: invokevirtual #58
923: ldc           #56
925: invokevirtual #57
928: invokevirtual #60
931: dload         27
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #61
946: aload         31
948: invokestatic  #47
951: aload         34
953: invokestatic  #47
956: aload         35
958: invokestatic  #47
961: aload         36
963: invokestatic  #47
966: new           #54
969: dup
970: invokespecial #55
973: ldc           #56
975: invokevirtual #57
978: iload         39
980: invokevirtual #62
983: ldc           #59
985: invokevirtual #57
988: iconst_0
989: invokevirtual #62
992: ldc           #56
994: invokevirtual #57
997: invokevirtual #60
1000: iload         39
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #61
1013: aload         42
1015: invokestatic  #47
1018: aload         43
1020: invokestatic  #47
1023: aload         44
1025: invokestatic  #47
1028: aload         45
1030: invokestatic  #47
1033: aload         46
1035: invokestatic  #47
1038: new           #54
1041: dup
1042: invokespecial #55
1045: ldc           #56
1047: invokevirtual #57
1050: aload         47
1052: invokevirtual #82
1055: ldc           #59
1057: invokevirtual #57
1060: getstatic     #78
1063: invokevirtual #82
1066: ldc           #56
1068: invokevirtual #57
1071: invokevirtual #60
1074: aload         47
1076: getstatic     #78
1079: invokevirtual #83
1082: invokestatic  #61
1085: aload         48
1087: invokestatic  #47
1090: aload         49
1092: invokestatic  #47
1095: new           #54
1098: dup
1099: invokespecial #55
1102: ldc           #56
1104: invokevirtual #57
1107: aload         50
1109: invokevirtual #82
1112: ldc           #59
1114: invokevirtual #57
1117: getstatic     #78
1120: invokevirtual #82
1123: ldc           #56
1125: invokevirtual #57
1128: invokevirtual #60
1131: aload         50
1133: getstatic     #78
1136: invokevirtual #83
1139: invokestatic  #61
1142: aload         51
1144: invokestatic  #47
1147: aload         52
1149: invokestatic  #47
1152: new           #54
1155: dup
1156: invokespecial #55
1159: ldc           #56
1161: invokevirtual #57
1164: dload         53
1166: invokevirtual #58
1169: ldc           #59
1171: invokevirtual #57
1174: ldc2_w        #935
1177: invokevirtual #58
1180: ldc           #56
1182: invokevirtual #57
1185: invokevirtual #60
1188: dload         53
1190: ldc2_w        #935
1193: dcmpl
1194: ifne          1201
1197: iconst_1
1198: goto          1202
1201: iconst_0
1202: invokestatic  #61
1205: new           #54
1208: dup
1209: invokespecial #55
1212: ldc           #56
1214: invokevirtual #57
1217: dload         55
1219: invokevirtual #58
1222: ldc           #59
1224: invokevirtual #57
1227: ldc2_w        #937
1230: invokevirtual #58
1233: ldc           #56
1235: invokevirtual #57
1238: invokevirtual #60
1241: dload         55
1243: ldc2_w        #937
1246: dcmpl
1247: ifne          1254
1250: iconst_1
1251: goto          1255
1254: iconst_0
1255: invokestatic  #61
1258: new           #54
1261: dup
1262: invokespecial #55
1265: ldc           #56
1267: invokevirtual #57
1270: dload         57
1272: invokevirtual #58
1275: ldc           #59
1277: invokevirtual #57
1280: ldc2_w        #939
1283: invokevirtual #58
1286: ldc           #56
1288: invokevirtual #57
1291: invokevirtual #60
1294: dload         57
1296: ldc2_w        #939
1299: dcmpl
1300: ifne          1307
1303: iconst_1
1304: goto          1308
1307: iconst_0
1308: invokestatic  #61
1311: return
Exception table:
from    to  target type
541   555   558   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test279
Start line: 12906
End line: 12959
Method source code: 
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(284.48901560517237d, 2.4544439362322485d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer7 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker6);
        int int8 = brentOptimizer7.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = sin11.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray13 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin10, sin11 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray13);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray13);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray13);
        org.apache.commons.math3.optimization.GoalType goalType17 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer7.optimize(97, univariateFunction16, goalType17, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int22 = brentOptimizer7.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        double double27 = sin24.value((double) (short) 10);
        double double29 = sin24.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = sin24.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin24.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin24.derivative();
        double double34 = sin24.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType35 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair39 = brentOptimizer7.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin24, goalType35, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction40 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin24);
        org.apache.commons.math3.optimization.GoalType goalType41 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair44 = brentOptimizer2.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin24, goalType41, 2.041375977702442d, 8.062017978914582d);
        double double46 = sin24.value(0.19611603331320274d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray13);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + goalType17 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType17.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.5440211108893698d) + "'", double27 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9922682874719476d + "'", double29 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.01745240643728351d) + "'", double34 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType35 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType35.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair39);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction40);
        org.junit.Assert.assertTrue("'" + goalType41 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType41.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.19486129594515628d + "'", double46 == 0.19486129594515628d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #941
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #805
32: ldc2_w        #807
35: invokespecial #25
38: astore_1
39: aconst_null
40: astore_2
41: new           #8
44: dup
45: ldc2_w        #31
48: ldc2_w        #33
51: aload_2
52: invokespecial #13
55: astore_3
56: aload_3
57: invokevirtual #71
60: istore        4
62: new           #72
65: dup
66: invokespecial #73
69: astore        5
71: new           #72
74: dup
75: invokespecial #73
78: astore        6
80: aload         6
82: invokevirtual #74
85: astore        7
87: iconst_2
88: anewarray     #75
91: dup
92: iconst_0
93: aload         5
95: aastore
96: dup
97: iconst_1
98: aload         6
100: aastore
101: astore        8
103: aload         8
105: invokestatic  #76
108: astore        9
110: aload         8
112: invokestatic  #77
115: astore        10
117: aload         8
119: checkcast     #89
122: invokestatic  #90
125: astore        11
127: getstatic     #78
130: astore        12
132: aload_3
133: bipush        97
135: aload         11
137: aload         12
139: ldc2_w        #91
142: ldc2_w        #93
145: ldc2_w        #91
148: invokevirtual #44
151: astore        13
153: aload_3
154: invokevirtual #50
157: istore        14
159: new           #72
162: dup
163: invokespecial #73
166: astore        15
168: aload         15
170: invokevirtual #74
173: astore        16
175: aload         15
177: ldc2_w        #91
180: invokevirtual #88
183: dstore        17
185: aload         15
187: ldc2_w        #373
190: invokevirtual #88
193: dstore        19
195: aload         15
197: invokevirtual #74
200: astore        21
202: aload         15
204: invokevirtual #74
207: astore        22
209: aload         15
211: invokevirtual #74
214: astore        23
216: aload         15
218: ldc2_w        #427
221: invokevirtual #88
224: dstore        24
226: getstatic     #118
229: astore        26
231: aload_3
232: bipush        52
234: aload         15
236: aload         26
238: ldc2_w        #614
241: ldc2_w        #477
244: dconst_0
245: invokevirtual #44
248: astore        27
250: aload         15
252: invokestatic  #281
255: astore        28
257: getstatic     #118
260: astore        29
262: aload_1
263: bipush        10
265: aload         15
267: aload         29
269: ldc2_w        #809
272: ldc2_w        #811
275: invokevirtual #81
278: astore        30
280: aload         15
282: ldc2_w        #942
285: invokevirtual #88
288: dstore        31
290: new           #54
293: dup
294: invokespecial #55
297: ldc           #56
299: invokevirtual #57
302: iload         4
304: invokevirtual #62
307: ldc           #59
309: invokevirtual #57
312: iconst_0
313: invokevirtual #62
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: iload         4
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #61
337: aload         7
339: invokestatic  #47
342: aload         8
344: invokestatic  #47
347: aload         9
349: invokestatic  #47
352: aload         10
354: invokestatic  #47
357: aload         11
359: invokestatic  #47
362: new           #54
365: dup
366: invokespecial #55
369: ldc           #56
371: invokevirtual #57
374: aload         12
376: invokevirtual #82
379: ldc           #59
381: invokevirtual #57
384: getstatic     #78
387: invokevirtual #82
390: ldc           #56
392: invokevirtual #57
395: invokevirtual #60
398: aload         12
400: getstatic     #78
403: invokevirtual #83
406: invokestatic  #61
409: aload         13
411: invokestatic  #47
414: new           #54
417: dup
418: invokespecial #55
421: ldc           #56
423: invokevirtual #57
426: iload         14
428: invokevirtual #62
431: ldc           #59
433: invokevirtual #57
436: bipush        97
438: invokevirtual #62
441: ldc           #56
443: invokevirtual #57
446: invokevirtual #60
449: iload         14
451: bipush        97
453: if_icmpne     460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #61
464: aload         16
466: invokestatic  #47
469: new           #54
472: dup
473: invokespecial #55
476: ldc           #56
478: invokevirtual #57
481: dload         17
483: invokevirtual #58
486: ldc           #59
488: invokevirtual #57
491: ldc2_w        #406
494: invokevirtual #58
497: ldc           #56
499: invokevirtual #57
502: invokevirtual #60
505: dload         17
507: ldc2_w        #406
510: dcmpl
511: ifne          518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #61
522: new           #54
525: dup
526: invokespecial #55
529: ldc           #56
531: invokevirtual #57
534: dload         19
536: invokevirtual #58
539: ldc           #59
541: invokevirtual #57
544: ldc2_w        #247
547: invokevirtual #58
550: ldc           #56
552: invokevirtual #57
555: invokevirtual #60
558: dload         19
560: ldc2_w        #247
563: dcmpl
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #61
575: aload         21
577: invokestatic  #47
580: aload         22
582: invokestatic  #47
585: aload         23
587: invokestatic  #47
590: new           #54
593: dup
594: invokespecial #55
597: ldc           #56
599: invokevirtual #57
602: dload         24
604: invokevirtual #58
607: ldc           #59
609: invokevirtual #57
612: ldc2_w        #617
615: invokevirtual #58
618: ldc           #56
620: invokevirtual #57
623: invokevirtual #60
626: dload         24
628: ldc2_w        #617
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #61
643: new           #54
646: dup
647: invokespecial #55
650: ldc           #56
652: invokevirtual #57
655: aload         26
657: invokevirtual #82
660: ldc           #59
662: invokevirtual #57
665: getstatic     #118
668: invokevirtual #82
671: ldc           #56
673: invokevirtual #57
676: invokevirtual #60
679: aload         26
681: getstatic     #118
684: invokevirtual #83
687: invokestatic  #61
690: aload         27
692: invokestatic  #47
695: aload         28
697: invokestatic  #47
700: new           #54
703: dup
704: invokespecial #55
707: ldc           #56
709: invokevirtual #57
712: aload         29
714: invokevirtual #82
717: ldc           #59
719: invokevirtual #57
722: getstatic     #118
725: invokevirtual #82
728: ldc           #56
730: invokevirtual #57
733: invokevirtual #60
736: aload         29
738: getstatic     #118
741: invokevirtual #83
744: invokestatic  #61
747: aload         30
749: invokestatic  #47
752: new           #54
755: dup
756: invokespecial #55
759: ldc           #56
761: invokevirtual #57
764: dload         31
766: invokevirtual #58
769: ldc           #59
771: invokevirtual #57
774: ldc2_w        #944
777: invokevirtual #58
780: ldc           #56
782: invokevirtual #57
785: invokevirtual #60
788: dload         31
790: ldc2_w        #944
793: dcmpl
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #61
805: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test280
Start line: 12962
End line: 13059
Method source code: 
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = sin30.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getMaxEvaluations();
        double double37 = brentOptimizer35.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer50 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker49);
        int int51 = brentOptimizer50.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin54.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray56 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable57 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray56);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray56);
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer50.optimize(97, univariateFunction59, goalType60, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer50.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType66 = brentOptimizer50.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer35.optimize((int) ' ', univariateFunction46, goalType66, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin30, goalType66, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double74 = brentOptimizer3.getMin();
        int int75 = brentOptimizer3.getEvaluations();
        double double76 = brentOptimizer3.getStartValue();
        double double77 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray56);
        org.junit.Assert.assertNotNull(univariateDifferentiable57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.22766967171598d + "'", double74 == 5.22766967171598d);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 35.0d + "'", double76 == 35.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.4210854715202004E-14d + "'", double77 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #946
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: new           #72
202: dup
203: invokespecial #73
206: astore        22
208: aload         22
210: invokevirtual #74
213: astore        23
215: aconst_null
216: astore        24
218: new           #8
221: dup
222: ldc2_w        #31
225: ldc2_w        #33
228: aload         24
230: invokespecial #13
233: astore        25
235: aload         25
237: invokevirtual #50
240: istore        26
242: aload         25
244: invokevirtual #49
247: dstore        27
249: new           #72
252: dup
253: invokespecial #73
256: astore        29
258: new           #72
261: dup
262: invokespecial #73
265: astore        30
267: aload         30
269: invokevirtual #74
272: astore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        32
283: new           #72
286: dup
287: invokespecial #73
290: astore        33
292: iconst_4
293: anewarray     #75
296: dup
297: iconst_0
298: aload         29
300: aastore
301: dup
302: iconst_1
303: aload         30
305: aastore
306: dup
307: iconst_2
308: aload         32
310: aastore
311: dup
312: iconst_3
313: aload         33
315: aastore
316: astore        34
318: aload         34
320: invokestatic  #76
323: astore        35
325: aload         34
327: checkcast     #89
330: invokestatic  #109
333: astore        36
335: aconst_null
336: astore        37
338: new           #8
341: dup
342: ldc2_w        #31
345: ldc2_w        #33
348: aload         37
350: invokespecial #13
353: astore        38
355: aload         38
357: invokevirtual #71
360: istore        39
362: new           #72
365: dup
366: invokespecial #73
369: astore        40
371: new           #72
374: dup
375: invokespecial #73
378: astore        41
380: aload         41
382: invokevirtual #74
385: astore        42
387: iconst_2
388: anewarray     #75
391: dup
392: iconst_0
393: aload         40
395: aastore
396: dup
397: iconst_1
398: aload         41
400: aastore
401: astore        43
403: aload         43
405: invokestatic  #76
408: astore        44
410: aload         43
412: invokestatic  #77
415: astore        45
417: aload         43
419: checkcast     #89
422: invokestatic  #90
425: astore        46
427: getstatic     #78
430: astore        47
432: aload         38
434: bipush        97
436: aload         46
438: aload         47
440: ldc2_w        #91
443: ldc2_w        #93
446: ldc2_w        #91
449: invokevirtual #44
452: astore        48
454: aload         38
456: invokevirtual #51
459: astore        49
461: aload         38
463: invokevirtual #110
466: astore        50
468: aload         25
470: bipush        32
472: aload         36
474: aload         50
476: ldc2_w        #173
479: ldc2_w        #175
482: invokevirtual #81
485: astore        51
487: aload_2
488: bipush        100
490: aload         22
492: aload         50
494: ldc2_w        #472
497: ldc2_w        #93
500: ldc2_w        #263
503: invokevirtual #44
506: astore        52
508: aload_2
509: invokevirtual #231
512: dstore        53
514: aload_2
515: invokevirtual #71
518: istore        55
520: aload_2
521: invokevirtual #177
524: dstore        56
526: aload_2
527: invokevirtual #49
530: dstore        58
532: aload_2
533: invokevirtual #51
536: astore        60
538: new           #54
541: dup
542: invokespecial #55
545: ldc           #56
547: invokevirtual #57
550: iload_3
551: invokevirtual #62
554: ldc           #59
556: invokevirtual #57
559: iconst_0
560: invokevirtual #62
563: ldc           #56
565: invokevirtual #57
568: invokevirtual #60
571: iload_3
572: ifne          579
575: iconst_1
576: goto          580
579: iconst_0
580: invokestatic  #61
583: aload         6
585: invokestatic  #47
588: aload         7
590: invokestatic  #47
593: aload         8
595: invokestatic  #47
598: aload         9
600: invokestatic  #47
603: aload         10
605: invokestatic  #47
608: new           #54
611: dup
612: invokespecial #55
615: ldc           #56
617: invokevirtual #57
620: aload         11
622: invokevirtual #82
625: ldc           #59
627: invokevirtual #57
630: getstatic     #78
633: invokevirtual #82
636: ldc           #56
638: invokevirtual #57
641: invokevirtual #60
644: aload         11
646: getstatic     #78
649: invokevirtual #83
652: invokestatic  #61
655: aload         12
657: invokestatic  #47
660: aload         13
662: invokestatic  #47
665: new           #54
668: dup
669: invokespecial #55
672: ldc           #56
674: invokevirtual #57
677: aload         14
679: invokevirtual #82
682: ldc           #59
684: invokevirtual #57
687: getstatic     #78
690: invokevirtual #82
693: ldc           #56
695: invokevirtual #57
698: invokevirtual #60
701: aload         14
703: getstatic     #78
706: invokevirtual #83
709: invokestatic  #61
712: aload         15
714: invokestatic  #47
717: aload         17
719: invokestatic  #47
722: new           #54
725: dup
726: invokespecial #55
729: ldc           #56
731: invokevirtual #57
734: aload         18
736: invokevirtual #82
739: ldc           #59
741: invokevirtual #57
744: getstatic     #78
747: invokevirtual #82
750: ldc           #56
752: invokevirtual #57
755: invokevirtual #60
758: aload         18
760: getstatic     #78
763: invokevirtual #83
766: invokestatic  #61
769: aload         19
771: invokestatic  #47
774: new           #54
777: dup
778: invokespecial #55
781: ldc           #56
783: invokevirtual #57
786: dload         20
788: invokevirtual #58
791: ldc           #59
793: invokevirtual #57
796: dconst_0
797: invokevirtual #58
800: ldc           #56
802: invokevirtual #57
805: invokevirtual #60
808: dload         20
810: dconst_0
811: dcmpl
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #61
823: aload         23
825: invokestatic  #47
828: new           #54
831: dup
832: invokespecial #55
835: ldc           #56
837: invokevirtual #57
840: iload         26
842: invokevirtual #62
845: ldc           #59
847: invokevirtual #57
850: iconst_0
851: invokevirtual #62
854: ldc           #56
856: invokevirtual #57
859: invokevirtual #60
862: iload         26
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #61
875: new           #54
878: dup
879: invokespecial #55
882: ldc           #56
884: invokevirtual #57
887: dload         27
889: invokevirtual #58
892: ldc           #59
894: invokevirtual #57
897: dconst_0
898: invokevirtual #58
901: ldc           #56
903: invokevirtual #57
906: invokevirtual #60
909: dload         27
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #61
924: aload         31
926: invokestatic  #47
929: aload         34
931: invokestatic  #47
934: aload         35
936: invokestatic  #47
939: aload         36
941: invokestatic  #47
944: new           #54
947: dup
948: invokespecial #55
951: ldc           #56
953: invokevirtual #57
956: iload         39
958: invokevirtual #62
961: ldc           #59
963: invokevirtual #57
966: iconst_0
967: invokevirtual #62
970: ldc           #56
972: invokevirtual #57
975: invokevirtual #60
978: iload         39
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #61
991: aload         42
993: invokestatic  #47
996: aload         43
998: invokestatic  #47
1001: aload         44
1003: invokestatic  #47
1006: aload         45
1008: invokestatic  #47
1011: aload         46
1013: invokestatic  #47
1016: new           #54
1019: dup
1020: invokespecial #55
1023: ldc           #56
1025: invokevirtual #57
1028: aload         47
1030: invokevirtual #82
1033: ldc           #59
1035: invokevirtual #57
1038: getstatic     #78
1041: invokevirtual #82
1044: ldc           #56
1046: invokevirtual #57
1049: invokevirtual #60
1052: aload         47
1054: getstatic     #78
1057: invokevirtual #83
1060: invokestatic  #61
1063: aload         48
1065: invokestatic  #47
1068: aload         49
1070: invokestatic  #47
1073: new           #54
1076: dup
1077: invokespecial #55
1080: ldc           #56
1082: invokevirtual #57
1085: aload         50
1087: invokevirtual #82
1090: ldc           #59
1092: invokevirtual #57
1095: getstatic     #78
1098: invokevirtual #82
1101: ldc           #56
1103: invokevirtual #57
1106: invokevirtual #60
1109: aload         50
1111: getstatic     #78
1114: invokevirtual #83
1117: invokestatic  #61
1120: aload         51
1122: invokestatic  #47
1125: aload         52
1127: invokestatic  #47
1130: new           #54
1133: dup
1134: invokespecial #55
1137: ldc           #56
1139: invokevirtual #57
1142: dload         53
1144: invokevirtual #58
1147: ldc           #59
1149: invokevirtual #57
1152: ldc2_w        #472
1155: invokevirtual #58
1158: ldc           #56
1160: invokevirtual #57
1163: invokevirtual #60
1166: dload         53
1168: ldc2_w        #472
1171: dcmpl
1172: ifne          1179
1175: iconst_1
1176: goto          1180
1179: iconst_0
1180: invokestatic  #61
1183: new           #54
1186: dup
1187: invokespecial #55
1190: ldc           #56
1192: invokevirtual #57
1195: iload         55
1197: invokevirtual #62
1200: ldc           #59
1202: invokevirtual #57
1205: bipush        7
1207: invokevirtual #62
1210: ldc           #56
1212: invokevirtual #57
1215: invokevirtual #60
1218: iload         55
1220: bipush        7
1222: if_icmpne     1229
1225: iconst_1
1226: goto          1230
1229: iconst_0
1230: invokestatic  #61
1233: new           #54
1236: dup
1237: invokespecial #55
1240: ldc           #56
1242: invokevirtual #57
1245: dload         56
1247: invokevirtual #58
1250: ldc           #59
1252: invokevirtual #57
1255: ldc2_w        #263
1258: invokevirtual #58
1261: ldc           #56
1263: invokevirtual #57
1266: invokevirtual #60
1269: dload         56
1271: ldc2_w        #263
1274: dcmpl
1275: ifne          1282
1278: iconst_1
1279: goto          1283
1282: iconst_0
1283: invokestatic  #61
1286: new           #54
1289: dup
1290: invokespecial #55
1293: ldc           #56
1295: invokevirtual #57
1298: dload         58
1300: invokevirtual #58
1303: ldc           #59
1305: invokevirtual #57
1308: ldc2_w        #93
1311: invokevirtual #58
1314: ldc           #56
1316: invokevirtual #57
1319: invokevirtual #60
1322: dload         58
1324: ldc2_w        #93
1327: dcmpl
1328: ifne          1335
1331: iconst_1
1332: goto          1336
1335: iconst_0
1336: invokestatic  #61
1339: aload         60
1341: invokestatic  #47
1344: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test281
Start line: 13062
End line: 13134
Method source code: 
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.exception.util.Localizable localizable13 = null;
        org.apache.commons.math3.exception.util.Localizable localizable14 = null;
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException22 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable14, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathInternalError mathInternalError23 = new org.apache.commons.math3.exception.MathInternalError(localizable13, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException25 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable11, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException28 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable9, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer33 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker32);
        int int34 = brentOptimizer33.getEvaluations();
        int int35 = brentOptimizer33.getEvaluations();
        int int36 = brentOptimizer33.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction38 = null;
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction38, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType50 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer33.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType50, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, goalType50, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        double double59 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(multivariateFunction49);
        org.junit.Assert.assertTrue("'" + goalType50 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType50.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.8865583226060262d + "'", double59 == 0.8865583226060262d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #947
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aconst_null
66: astore        7
68: aconst_null
69: astore        8
71: aconst_null
72: astore        9
74: aconst_null
75: astore        10
77: new           #72
80: dup
81: invokespecial #73
84: astore        11
86: new           #72
89: dup
90: invokespecial #73
93: astore        12
95: aload         12
97: invokevirtual #74
100: astore        13
102: new           #72
105: dup
106: invokespecial #73
109: astore        14
111: new           #72
114: dup
115: invokespecial #73
118: astore        15
120: iconst_4
121: anewarray     #75
124: dup
125: iconst_0
126: aload         11
128: aastore
129: dup
130: iconst_1
131: aload         12
133: aastore
134: dup
135: iconst_2
136: aload         14
138: aastore
139: dup
140: iconst_3
141: aload         15
143: aastore
144: astore        16
146: aload         16
148: invokestatic  #76
151: astore        17
153: new           #122
156: dup
157: aload         10
159: aload         16
161: checkcast     #123
164: invokespecial #124
167: astore        18
169: new           #125
172: dup
173: aload         9
175: aload         16
177: checkcast     #123
180: invokespecial #126
183: astore        19
185: aload         16
187: invokestatic  #77
190: astore        20
192: new           #313
195: dup
196: aload         8
198: ldc2_w        #79
201: invokestatic  #314
204: aload         16
206: checkcast     #123
209: invokespecial #315
212: astore        21
214: aload         16
216: invokestatic  #76
219: astore        22
221: aload         16
223: invokestatic  #76
226: astore        23
228: new           #313
231: dup
232: aload         7
234: ldc2_w        #202
237: invokestatic  #314
240: aload         16
242: checkcast     #123
245: invokespecial #315
248: astore        24
250: aload         16
252: invokestatic  #77
255: astore        25
257: aconst_null
258: astore        26
260: new           #8
263: dup
264: ldc2_w        #31
267: ldc2_w        #33
270: aload         26
272: invokespecial #13
275: astore        27
277: aload         27
279: invokevirtual #71
282: istore        28
284: aload         27
286: invokevirtual #71
289: istore        29
291: aload         27
293: invokevirtual #71
296: istore        30
298: aconst_null
299: astore        31
301: new           #72
304: dup
305: invokespecial #73
308: astore        32
310: new           #72
313: dup
314: invokespecial #73
317: astore        33
319: aload         33
321: invokevirtual #74
324: astore        34
326: new           #72
329: dup
330: invokespecial #73
333: astore        35
335: new           #72
338: dup
339: invokespecial #73
342: astore        36
344: iconst_4
345: anewarray     #75
348: dup
349: iconst_0
350: aload         32
352: aastore
353: dup
354: iconst_1
355: aload         33
357: aastore
358: dup
359: iconst_2
360: aload         35
362: aastore
363: dup
364: iconst_3
365: aload         36
367: aastore
368: astore        37
370: aload         37
372: invokestatic  #76
375: astore        38
377: aload         37
379: checkcast     #89
382: invokestatic  #109
385: astore        39
387: aload         37
389: invokestatic  #77
392: astore        40
394: aload         31
396: aload         40
398: ldc2_w        #181
401: invokestatic  #183
404: astore        41
406: getstatic     #118
409: astore        42
411: aload         27
413: bipush        10
415: aload         40
417: aload         42
419: ldc2_w        #184
422: ldc2_w        #186
425: ldc2_w        #188
428: invokevirtual #44
431: astore        43
433: aload_2
434: bipush        97
436: aload         25
438: aload         42
440: dconst_0
441: ldc2_w        #543
444: ldc2_w        #545
447: invokevirtual #44
450: astore        44
452: aload_2
453: invokevirtual #49
456: dstore        45
458: new           #54
461: dup
462: invokespecial #55
465: ldc           #56
467: invokevirtual #57
470: iload_3
471: invokevirtual #62
474: ldc           #59
476: invokevirtual #57
479: iconst_0
480: invokevirtual #62
483: ldc           #56
485: invokevirtual #57
488: invokevirtual #60
491: iload_3
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #61
503: new           #54
506: dup
507: invokespecial #55
510: ldc           #56
512: invokevirtual #57
515: iload         4
517: invokevirtual #62
520: ldc           #59
522: invokevirtual #57
525: iconst_0
526: invokevirtual #62
529: ldc           #56
531: invokevirtual #57
534: invokevirtual #60
537: iload         4
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #61
550: new           #54
553: dup
554: invokespecial #55
557: ldc           #56
559: invokevirtual #57
562: iload         5
564: invokevirtual #62
567: ldc           #59
569: invokevirtual #57
572: iconst_0
573: invokevirtual #62
576: ldc           #56
578: invokevirtual #57
581: invokevirtual #60
584: iload         5
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #61
597: aload         6
599: invokestatic  #104
602: aload         13
604: invokestatic  #47
607: aload         16
609: invokestatic  #47
612: aload         17
614: invokestatic  #47
617: aload         20
619: invokestatic  #47
622: aload         22
624: invokestatic  #47
627: aload         23
629: invokestatic  #47
632: aload         25
634: invokestatic  #47
637: new           #54
640: dup
641: invokespecial #55
644: ldc           #56
646: invokevirtual #57
649: iload         28
651: invokevirtual #62
654: ldc           #59
656: invokevirtual #57
659: iconst_0
660: invokevirtual #62
663: ldc           #56
665: invokevirtual #57
668: invokevirtual #60
671: iload         28
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #61
684: new           #54
687: dup
688: invokespecial #55
691: ldc           #56
693: invokevirtual #57
696: iload         29
698: invokevirtual #62
701: ldc           #59
703: invokevirtual #57
706: iconst_0
707: invokevirtual #62
710: ldc           #56
712: invokevirtual #57
715: invokevirtual #60
718: iload         29
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #61
731: new           #54
734: dup
735: invokespecial #55
738: ldc           #56
740: invokevirtual #57
743: iload         30
745: invokevirtual #62
748: ldc           #59
750: invokevirtual #57
753: iconst_0
754: invokevirtual #62
757: ldc           #56
759: invokevirtual #57
762: invokevirtual #60
765: iload         30
767: ifne          774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #61
778: aload         34
780: invokestatic  #47
783: aload         37
785: invokestatic  #47
788: aload         38
790: invokestatic  #47
793: aload         39
795: invokestatic  #47
798: aload         40
800: invokestatic  #47
803: aload         41
805: invokestatic  #47
808: new           #54
811: dup
812: invokespecial #55
815: ldc           #56
817: invokevirtual #57
820: aload         42
822: invokevirtual #82
825: ldc           #59
827: invokevirtual #57
830: getstatic     #118
833: invokevirtual #82
836: ldc           #56
838: invokevirtual #57
841: invokevirtual #60
844: aload         42
846: getstatic     #118
849: invokevirtual #83
852: invokestatic  #61
855: aload         43
857: invokestatic  #47
860: aload         44
862: invokestatic  #47
865: new           #54
868: dup
869: invokespecial #55
872: ldc           #56
874: invokevirtual #57
877: dload         45
879: invokevirtual #58
882: ldc           #59
884: invokevirtual #57
887: ldc2_w        #543
890: invokevirtual #58
893: ldc           #56
895: invokevirtual #57
898: invokevirtual #60
901: dload         45
903: ldc2_w        #543
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #61
918: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test282
Start line: 13137
End line: 13146
Method source code: 
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        double double5 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #948
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #231
51: dstore        4
53: new           #54
56: dup
57: invokespecial #55
60: ldc           #56
62: invokevirtual #57
65: iload_3
66: invokevirtual #62
69: ldc           #59
71: invokevirtual #57
74: iconst_0
75: invokevirtual #62
78: ldc           #56
80: invokevirtual #57
83: invokevirtual #60
86: iload_3
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #61
98: new           #54
101: dup
102: invokespecial #55
105: ldc           #56
107: invokevirtual #57
110: dload         4
112: invokevirtual #58
115: ldc           #59
117: invokevirtual #57
120: dconst_0
121: invokevirtual #58
124: ldc           #56
126: invokevirtual #57
129: invokevirtual #60
132: dload         4
134: dconst_0
135: dcmpl
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #61
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test283
Start line: 13149
End line: 13223
Method source code: 
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.exception.util.Localizable localizable13 = null;
        org.apache.commons.math3.exception.util.Localizable localizable14 = null;
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException22 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable14, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathInternalError mathInternalError23 = new org.apache.commons.math3.exception.MathInternalError(localizable13, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException25 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable11, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException28 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable9, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer33 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker32);
        int int34 = brentOptimizer33.getEvaluations();
        int int35 = brentOptimizer33.getEvaluations();
        int int36 = brentOptimizer33.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction38 = null;
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction38, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType50 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer33.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType50, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, goalType50, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker59 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker60 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(multivariateFunction49);
        org.junit.Assert.assertTrue("'" + goalType50 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType50.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker59);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker60);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #949
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aconst_null
66: astore        7
68: aconst_null
69: astore        8
71: aconst_null
72: astore        9
74: aconst_null
75: astore        10
77: new           #72
80: dup
81: invokespecial #73
84: astore        11
86: new           #72
89: dup
90: invokespecial #73
93: astore        12
95: aload         12
97: invokevirtual #74
100: astore        13
102: new           #72
105: dup
106: invokespecial #73
109: astore        14
111: new           #72
114: dup
115: invokespecial #73
118: astore        15
120: iconst_4
121: anewarray     #75
124: dup
125: iconst_0
126: aload         11
128: aastore
129: dup
130: iconst_1
131: aload         12
133: aastore
134: dup
135: iconst_2
136: aload         14
138: aastore
139: dup
140: iconst_3
141: aload         15
143: aastore
144: astore        16
146: aload         16
148: invokestatic  #76
151: astore        17
153: new           #122
156: dup
157: aload         10
159: aload         16
161: checkcast     #123
164: invokespecial #124
167: astore        18
169: new           #125
172: dup
173: aload         9
175: aload         16
177: checkcast     #123
180: invokespecial #126
183: astore        19
185: aload         16
187: invokestatic  #77
190: astore        20
192: new           #313
195: dup
196: aload         8
198: ldc2_w        #79
201: invokestatic  #314
204: aload         16
206: checkcast     #123
209: invokespecial #315
212: astore        21
214: aload         16
216: invokestatic  #76
219: astore        22
221: aload         16
223: invokestatic  #76
226: astore        23
228: new           #313
231: dup
232: aload         7
234: ldc2_w        #202
237: invokestatic  #314
240: aload         16
242: checkcast     #123
245: invokespecial #315
248: astore        24
250: aload         16
252: invokestatic  #77
255: astore        25
257: aconst_null
258: astore        26
260: new           #8
263: dup
264: ldc2_w        #31
267: ldc2_w        #33
270: aload         26
272: invokespecial #13
275: astore        27
277: aload         27
279: invokevirtual #71
282: istore        28
284: aload         27
286: invokevirtual #71
289: istore        29
291: aload         27
293: invokevirtual #71
296: istore        30
298: aconst_null
299: astore        31
301: new           #72
304: dup
305: invokespecial #73
308: astore        32
310: new           #72
313: dup
314: invokespecial #73
317: astore        33
319: aload         33
321: invokevirtual #74
324: astore        34
326: new           #72
329: dup
330: invokespecial #73
333: astore        35
335: new           #72
338: dup
339: invokespecial #73
342: astore        36
344: iconst_4
345: anewarray     #75
348: dup
349: iconst_0
350: aload         32
352: aastore
353: dup
354: iconst_1
355: aload         33
357: aastore
358: dup
359: iconst_2
360: aload         35
362: aastore
363: dup
364: iconst_3
365: aload         36
367: aastore
368: astore        37
370: aload         37
372: invokestatic  #76
375: astore        38
377: aload         37
379: checkcast     #89
382: invokestatic  #109
385: astore        39
387: aload         37
389: invokestatic  #77
392: astore        40
394: aload         31
396: aload         40
398: ldc2_w        #181
401: invokestatic  #183
404: astore        41
406: getstatic     #118
409: astore        42
411: aload         27
413: bipush        10
415: aload         40
417: aload         42
419: ldc2_w        #184
422: ldc2_w        #186
425: ldc2_w        #188
428: invokevirtual #44
431: astore        43
433: aload_2
434: bipush        97
436: aload         25
438: aload         42
440: dconst_0
441: ldc2_w        #543
444: ldc2_w        #545
447: invokevirtual #44
450: astore        44
452: aload_2
453: invokevirtual #103
456: astore        45
458: aload_2
459: invokevirtual #103
462: astore        46
464: new           #54
467: dup
468: invokespecial #55
471: ldc           #56
473: invokevirtual #57
476: iload_3
477: invokevirtual #62
480: ldc           #59
482: invokevirtual #57
485: iconst_0
486: invokevirtual #62
489: ldc           #56
491: invokevirtual #57
494: invokevirtual #60
497: iload_3
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #61
509: new           #54
512: dup
513: invokespecial #55
516: ldc           #56
518: invokevirtual #57
521: iload         4
523: invokevirtual #62
526: ldc           #59
528: invokevirtual #57
531: iconst_0
532: invokevirtual #62
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: iload         4
545: ifne          552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #61
556: new           #54
559: dup
560: invokespecial #55
563: ldc           #56
565: invokevirtual #57
568: iload         5
570: invokevirtual #62
573: ldc           #59
575: invokevirtual #57
578: iconst_0
579: invokevirtual #62
582: ldc           #56
584: invokevirtual #57
587: invokevirtual #60
590: iload         5
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #61
603: aload         6
605: invokestatic  #104
608: aload         13
610: invokestatic  #47
613: aload         16
615: invokestatic  #47
618: aload         17
620: invokestatic  #47
623: aload         20
625: invokestatic  #47
628: aload         22
630: invokestatic  #47
633: aload         23
635: invokestatic  #47
638: aload         25
640: invokestatic  #47
643: new           #54
646: dup
647: invokespecial #55
650: ldc           #56
652: invokevirtual #57
655: iload         28
657: invokevirtual #62
660: ldc           #59
662: invokevirtual #57
665: iconst_0
666: invokevirtual #62
669: ldc           #56
671: invokevirtual #57
674: invokevirtual #60
677: iload         28
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #61
690: new           #54
693: dup
694: invokespecial #55
697: ldc           #56
699: invokevirtual #57
702: iload         29
704: invokevirtual #62
707: ldc           #59
709: invokevirtual #57
712: iconst_0
713: invokevirtual #62
716: ldc           #56
718: invokevirtual #57
721: invokevirtual #60
724: iload         29
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #61
737: new           #54
740: dup
741: invokespecial #55
744: ldc           #56
746: invokevirtual #57
749: iload         30
751: invokevirtual #62
754: ldc           #59
756: invokevirtual #57
759: iconst_0
760: invokevirtual #62
763: ldc           #56
765: invokevirtual #57
768: invokevirtual #60
771: iload         30
773: ifne          780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #61
784: aload         34
786: invokestatic  #47
789: aload         37
791: invokestatic  #47
794: aload         38
796: invokestatic  #47
799: aload         39
801: invokestatic  #47
804: aload         40
806: invokestatic  #47
809: aload         41
811: invokestatic  #47
814: new           #54
817: dup
818: invokespecial #55
821: ldc           #56
823: invokevirtual #57
826: aload         42
828: invokevirtual #82
831: ldc           #59
833: invokevirtual #57
836: getstatic     #118
839: invokevirtual #82
842: ldc           #56
844: invokevirtual #57
847: invokevirtual #60
850: aload         42
852: getstatic     #118
855: invokevirtual #83
858: invokestatic  #61
861: aload         43
863: invokestatic  #47
866: aload         44
868: invokestatic  #47
871: aload         45
873: invokestatic  #104
876: aload         46
878: invokestatic  #104
881: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test284
Start line: 13226
End line: 13296
Method source code: 
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair30 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.exception.util.Localizable localizable32 = null;
        org.apache.commons.math3.exception.util.Localizable localizable33 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray34 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction35 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException36 = new org.apache.commons.math3.exception.MathArithmeticException(localizable33, (java.lang.Object[]) differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction37 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException38 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable32, (java.lang.Object[]) differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction40 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction42 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray34);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable43 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction42);
        org.apache.commons.math3.optimization.GoalType goalType44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer3.optimize(1, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable43, goalType44, (double) 5.1539612E10f, 1.0E70d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair30);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray34);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction35);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction37);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction39);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction40);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction41);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiable43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #950
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #50
203: istore        22
205: aload_2
206: invokevirtual #51
209: astore        23
211: aconst_null
212: astore        24
214: aconst_null
215: astore        25
217: iconst_0
218: anewarray     #141
221: astore        26
223: aload         26
225: invokestatic  #142
228: astore        27
230: new           #273
233: dup
234: aload         25
236: aload         26
238: checkcast     #123
241: invokespecial #274
244: astore        28
246: aload         26
248: invokestatic  #245
251: astore        29
253: new           #122
256: dup
257: aload         24
259: aload         26
261: checkcast     #123
264: invokespecial #124
267: astore        30
269: aload         26
271: invokestatic  #142
274: astore        31
276: aload         26
278: invokestatic  #142
281: astore        32
283: aload         26
285: invokestatic  #142
288: astore        33
290: aload         26
292: invokestatic  #142
295: astore        34
297: aload         34
299: invokestatic  #143
302: astore        35
304: aconst_null
305: astore        36
307: aload_2
308: iconst_1
309: aload         35
311: aload         36
313: ldc2_w        #951
316: ldc2_w        #953
319: invokevirtual #81
322: astore        37
324: ldc           #45
326: invokestatic  #15
329: goto          334
332: astore        37
334: new           #54
337: dup
338: invokespecial #55
341: ldc           #56
343: invokevirtual #57
346: iload_3
347: invokevirtual #62
350: ldc           #59
352: invokevirtual #57
355: iconst_0
356: invokevirtual #62
359: ldc           #56
361: invokevirtual #57
364: invokevirtual #60
367: iload_3
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #61
379: aload         6
381: invokestatic  #47
384: aload         7
386: invokestatic  #47
389: aload         8
391: invokestatic  #47
394: aload         9
396: invokestatic  #47
399: aload         10
401: invokestatic  #47
404: new           #54
407: dup
408: invokespecial #55
411: ldc           #56
413: invokevirtual #57
416: aload         11
418: invokevirtual #82
421: ldc           #59
423: invokevirtual #57
426: getstatic     #78
429: invokevirtual #82
432: ldc           #56
434: invokevirtual #57
437: invokevirtual #60
440: aload         11
442: getstatic     #78
445: invokevirtual #83
448: invokestatic  #61
451: aload         12
453: invokestatic  #47
456: aload         13
458: invokestatic  #47
461: new           #54
464: dup
465: invokespecial #55
468: ldc           #56
470: invokevirtual #57
473: aload         14
475: invokevirtual #82
478: ldc           #59
480: invokevirtual #57
483: getstatic     #78
486: invokevirtual #82
489: ldc           #56
491: invokevirtual #57
494: invokevirtual #60
497: aload         14
499: getstatic     #78
502: invokevirtual #83
505: invokestatic  #61
508: aload         15
510: invokestatic  #47
513: aload         17
515: invokestatic  #47
518: new           #54
521: dup
522: invokespecial #55
525: ldc           #56
527: invokevirtual #57
530: aload         18
532: invokevirtual #82
535: ldc           #59
537: invokevirtual #57
540: getstatic     #78
543: invokevirtual #82
546: ldc           #56
548: invokevirtual #57
551: invokevirtual #60
554: aload         18
556: getstatic     #78
559: invokevirtual #83
562: invokestatic  #61
565: aload         19
567: invokestatic  #47
570: new           #54
573: dup
574: invokespecial #55
577: ldc           #56
579: invokevirtual #57
582: dload         20
584: invokevirtual #58
587: ldc           #59
589: invokevirtual #57
592: dconst_0
593: invokevirtual #58
596: ldc           #56
598: invokevirtual #57
601: invokevirtual #60
604: dload         20
606: dconst_0
607: dcmpl
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #61
619: new           #54
622: dup
623: invokespecial #55
626: ldc           #56
628: invokevirtual #57
631: iload         22
633: invokevirtual #62
636: ldc           #59
638: invokevirtual #57
641: bipush        97
643: invokevirtual #62
646: ldc           #56
648: invokevirtual #57
651: invokevirtual #60
654: iload         22
656: bipush        97
658: if_icmpne     665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #61
669: aload         23
671: invokestatic  #47
674: aload         26
676: invokestatic  #47
679: aload         27
681: invokestatic  #47
684: aload         29
686: invokestatic  #47
689: aload         31
691: invokestatic  #47
694: aload         32
696: invokestatic  #47
699: aload         33
701: invokestatic  #47
704: aload         34
706: invokestatic  #47
709: aload         35
711: invokestatic  #47
714: return
Exception table:
from    to  target type
307   329   332   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test285
Start line: 13299
End line: 13318
Method source code: 
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        double double7 = brentOptimizer3.getMin();
        org.apache.commons.math3.optimization.GoalType goalType8 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        double double10 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(goalType8);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #955
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #231
63: dstore        6
65: aload_2
66: invokevirtual #110
69: astore        8
71: aload_2
72: invokevirtual #103
75: astore        9
77: aload_2
78: invokevirtual #231
81: dstore        10
83: new           #54
86: dup
87: invokespecial #55
90: ldc           #56
92: invokevirtual #57
95: iload_3
96: invokevirtual #62
99: ldc           #59
101: invokevirtual #57
104: iconst_0
105: invokevirtual #62
108: ldc           #56
110: invokevirtual #57
113: invokevirtual #60
116: iload_3
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #61
128: new           #54
131: dup
132: invokespecial #55
135: ldc           #56
137: invokevirtual #57
140: iload         4
142: invokevirtual #62
145: ldc           #59
147: invokevirtual #57
150: iconst_0
151: invokevirtual #62
154: ldc           #56
156: invokevirtual #57
159: invokevirtual #60
162: iload         4
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #61
175: new           #54
178: dup
179: invokespecial #55
182: ldc           #56
184: invokevirtual #57
187: iload         5
189: invokevirtual #62
192: ldc           #59
194: invokevirtual #57
197: iconst_0
198: invokevirtual #62
201: ldc           #56
203: invokevirtual #57
206: invokevirtual #60
209: iload         5
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #61
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: dload         6
236: invokevirtual #58
239: ldc           #59
241: invokevirtual #57
244: dconst_0
245: invokevirtual #58
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: dload         6
258: dconst_0
259: dcmpl
260: ifne          267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #61
271: aload         8
273: invokestatic  #104
276: aload         9
278: invokestatic  #104
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: dload         10
295: invokevirtual #58
298: ldc           #59
300: invokevirtual #57
303: dconst_0
304: invokevirtual #58
307: ldc           #56
309: invokevirtual #57
312: invokevirtual #60
315: dload         10
317: dconst_0
318: dcmpl
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #61
330: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test286
Start line: 13321
End line: 13359
Method source code: 
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, goalType20, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair25 = brentOptimizer3.doOptimize();
        int int26 = brentOptimizer3.getMaxEvaluations();
        int int27 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(multivariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertNotNull(univariatePointValuePair25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #956
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aconst_null
60: astore        6
62: new           #72
65: dup
66: invokespecial #73
69: astore        7
71: new           #72
74: dup
75: invokespecial #73
78: astore        8
80: aload         8
82: invokevirtual #74
85: astore        9
87: new           #72
90: dup
91: invokespecial #73
94: astore        10
96: new           #72
99: dup
100: invokespecial #73
103: astore        11
105: iconst_4
106: anewarray     #75
109: dup
110: iconst_0
111: aload         7
113: aastore
114: dup
115: iconst_1
116: aload         8
118: aastore
119: dup
120: iconst_2
121: aload         10
123: aastore
124: dup
125: iconst_3
126: aload         11
128: aastore
129: astore        12
131: aload         12
133: invokestatic  #76
136: astore        13
138: aload         12
140: checkcast     #89
143: invokestatic  #109
146: astore        14
148: aload         12
150: invokestatic  #77
153: astore        15
155: aload         6
157: aload         15
159: ldc2_w        #181
162: invokestatic  #183
165: astore        16
167: getstatic     #118
170: astore        17
172: aload_2
173: bipush        10
175: aload         15
177: aload         17
179: ldc2_w        #184
182: ldc2_w        #186
185: ldc2_w        #188
188: invokevirtual #44
191: astore        18
193: aload_2
194: invokevirtual #51
197: astore        19
199: aload_2
200: invokevirtual #50
203: istore        20
205: aload_2
206: invokevirtual #50
209: istore        21
211: new           #54
214: dup
215: invokespecial #55
218: ldc           #56
220: invokevirtual #57
223: iload_3
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload_3
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: new           #54
259: dup
260: invokespecial #55
263: ldc           #56
265: invokevirtual #57
268: iload         4
270: invokevirtual #62
273: ldc           #59
275: invokevirtual #57
278: iconst_0
279: invokevirtual #62
282: ldc           #56
284: invokevirtual #57
287: invokevirtual #60
290: iload         4
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #61
303: new           #54
306: dup
307: invokespecial #55
310: ldc           #56
312: invokevirtual #57
315: iload         5
317: invokevirtual #62
320: ldc           #59
322: invokevirtual #57
325: iconst_0
326: invokevirtual #62
329: ldc           #56
331: invokevirtual #57
334: invokevirtual #60
337: iload         5
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #61
350: aload         9
352: invokestatic  #47
355: aload         12
357: invokestatic  #47
360: aload         13
362: invokestatic  #47
365: aload         14
367: invokestatic  #47
370: aload         15
372: invokestatic  #47
375: aload         16
377: invokestatic  #47
380: new           #54
383: dup
384: invokespecial #55
387: ldc           #56
389: invokevirtual #57
392: aload         17
394: invokevirtual #82
397: ldc           #59
399: invokevirtual #57
402: getstatic     #118
405: invokevirtual #82
408: ldc           #56
410: invokevirtual #57
413: invokevirtual #60
416: aload         17
418: getstatic     #118
421: invokevirtual #83
424: invokestatic  #61
427: aload         18
429: invokestatic  #47
432: aload         19
434: invokestatic  #47
437: new           #54
440: dup
441: invokespecial #55
444: ldc           #56
446: invokevirtual #57
449: iload         20
451: invokevirtual #62
454: ldc           #59
456: invokevirtual #57
459: bipush        10
461: invokevirtual #62
464: ldc           #56
466: invokevirtual #57
469: invokevirtual #60
472: iload         20
474: bipush        10
476: if_icmpne     483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #61
487: new           #54
490: dup
491: invokespecial #55
494: ldc           #56
496: invokevirtual #57
499: iload         21
501: invokevirtual #62
504: ldc           #59
506: invokevirtual #57
509: bipush        10
511: invokevirtual #62
514: ldc           #56
516: invokevirtual #57
519: invokevirtual #60
522: iload         21
524: bipush        10
526: if_icmpne     533
529: iconst_1
530: goto          534
533: iconst_0
534: invokestatic  #61
537: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test287
Start line: 13362
End line: 13478
Method source code: 
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction8 = null;
        org.apache.commons.math3.analysis.function.Sin sin9 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin10 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction11 = sin10.derivative();
        org.apache.commons.math3.analysis.function.Sin sin12 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin13 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray14 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin9, sin10, sin12, sin13 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable15 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray14);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction8, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType20 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair24 = brentOptimizer3.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable17, goalType20, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair25 = brentOptimizer3.doOptimize();
        int int26 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker27 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer32 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker31);
        int int33 = brentOptimizer32.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin35, sin36 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray38);
        org.apache.commons.math3.optimization.GoalType goalType42 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer32.optimize(97, univariateFunction41, goalType42, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair47 = brentOptimizer32.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType48 = brentOptimizer32.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair49 = brentOptimizer32.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction52 = sin51.derivative();
        org.apache.commons.math3.optimization.GoalType goalType53 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair56 = brentOptimizer32.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin51, goalType53, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = sin51.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer61 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker60);
        int int62 = brentOptimizer61.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin65 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction66 = sin65.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray67 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin64, sin65 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray67);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable69 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray67);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray67);
        org.apache.commons.math3.optimization.GoalType goalType71 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair75 = brentOptimizer61.optimize(97, univariateFunction70, goalType71, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int76 = brentOptimizer61.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin78 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction79 = sin78.derivative();
        double double81 = sin78.value((double) (short) 10);
        double double83 = sin78.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction84 = sin78.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction85 = sin78.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction86 = sin78.derivative();
        double double88 = sin78.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType89 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair93 = brentOptimizer61.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin78, goalType89, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair97 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin51, goalType89, 0.25734467405837924d, (double) (short) 1, Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(univariateFunction11);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray14);
        org.junit.Assert.assertNotNull(univariateDifferentiable15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(multivariateFunction19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair24);
        org.junit.Assert.assertNotNull(univariatePointValuePair25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
        org.junit.Assert.assertNotNull(univariatePointValuePair47);
        org.junit.Assert.assertTrue("'" + goalType48 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType48.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair49);
        org.junit.Assert.assertNotNull(univariateFunction52);
        org.junit.Assert.assertTrue("'" + goalType53 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType53.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair56);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(univariateFunction66);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateDifferentiable69);
        org.junit.Assert.assertNotNull(univariateFunction70);
        org.junit.Assert.assertTrue("'" + goalType71 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType71.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 97 + "'", int76 == 97);
        org.junit.Assert.assertNotNull(univariateFunction79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.5440211108893698d) + "'", double81 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.9922682874719476d + "'", double83 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction84);
        org.junit.Assert.assertNotNull(univariateFunction85);
        org.junit.Assert.assertNotNull(univariateFunction86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.01745240643728351d) + "'", double88 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType89 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType89.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair93);
        org.junit.Assert.assertNotNull(univariatePointValuePair97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #957
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aconst_null
60: astore        6
62: new           #72
65: dup
66: invokespecial #73
69: astore        7
71: new           #72
74: dup
75: invokespecial #73
78: astore        8
80: aload         8
82: invokevirtual #74
85: astore        9
87: new           #72
90: dup
91: invokespecial #73
94: astore        10
96: new           #72
99: dup
100: invokespecial #73
103: astore        11
105: iconst_4
106: anewarray     #75
109: dup
110: iconst_0
111: aload         7
113: aastore
114: dup
115: iconst_1
116: aload         8
118: aastore
119: dup
120: iconst_2
121: aload         10
123: aastore
124: dup
125: iconst_3
126: aload         11
128: aastore
129: astore        12
131: aload         12
133: invokestatic  #76
136: astore        13
138: aload         12
140: checkcast     #89
143: invokestatic  #109
146: astore        14
148: aload         12
150: invokestatic  #77
153: astore        15
155: aload         6
157: aload         15
159: ldc2_w        #181
162: invokestatic  #183
165: astore        16
167: getstatic     #118
170: astore        17
172: aload_2
173: bipush        10
175: aload         15
177: aload         17
179: ldc2_w        #184
182: ldc2_w        #186
185: ldc2_w        #188
188: invokevirtual #44
191: astore        18
193: aload_2
194: invokevirtual #51
197: astore        19
199: aload_2
200: invokevirtual #50
203: istore        20
205: aload_2
206: invokevirtual #103
209: astore        21
211: aconst_null
212: astore        22
214: new           #8
217: dup
218: ldc2_w        #31
221: ldc2_w        #33
224: aload         22
226: invokespecial #13
229: astore        23
231: aload         23
233: invokevirtual #71
236: istore        24
238: new           #72
241: dup
242: invokespecial #73
245: astore        25
247: new           #72
250: dup
251: invokespecial #73
254: astore        26
256: aload         26
258: invokevirtual #74
261: astore        27
263: iconst_2
264: anewarray     #75
267: dup
268: iconst_0
269: aload         25
271: aastore
272: dup
273: iconst_1
274: aload         26
276: aastore
277: astore        28
279: aload         28
281: invokestatic  #76
284: astore        29
286: aload         28
288: invokestatic  #77
291: astore        30
293: aload         28
295: checkcast     #89
298: invokestatic  #90
301: astore        31
303: getstatic     #78
306: astore        32
308: aload         23
310: bipush        97
312: aload         31
314: aload         32
316: ldc2_w        #91
319: ldc2_w        #93
322: ldc2_w        #91
325: invokevirtual #44
328: astore        33
330: aload         23
332: invokevirtual #51
335: astore        34
337: aload         23
339: invokevirtual #110
342: astore        35
344: aload         23
346: invokevirtual #51
349: astore        36
351: new           #72
354: dup
355: invokespecial #73
358: astore        37
360: aload         37
362: invokevirtual #74
365: astore        38
367: getstatic     #78
370: astore        39
372: aload         23
374: bipush        97
376: aload         37
378: aload         39
380: ldc2_w        #133
383: dconst_0
384: invokevirtual #81
387: astore        40
389: aload         37
391: invokevirtual #74
394: astore        41
396: aconst_null
397: astore        42
399: new           #8
402: dup
403: ldc2_w        #31
406: ldc2_w        #33
409: aload         42
411: invokespecial #13
414: astore        43
416: aload         43
418: invokevirtual #71
421: istore        44
423: new           #72
426: dup
427: invokespecial #73
430: astore        45
432: new           #72
435: dup
436: invokespecial #73
439: astore        46
441: aload         46
443: invokevirtual #74
446: astore        47
448: iconst_2
449: anewarray     #75
452: dup
453: iconst_0
454: aload         45
456: aastore
457: dup
458: iconst_1
459: aload         46
461: aastore
462: astore        48
464: aload         48
466: invokestatic  #76
469: astore        49
471: aload         48
473: invokestatic  #77
476: astore        50
478: aload         48
480: checkcast     #89
483: invokestatic  #90
486: astore        51
488: getstatic     #78
491: astore        52
493: aload         43
495: bipush        97
497: aload         51
499: aload         52
501: ldc2_w        #91
504: ldc2_w        #93
507: ldc2_w        #91
510: invokevirtual #44
513: astore        53
515: aload         43
517: invokevirtual #50
520: istore        54
522: new           #72
525: dup
526: invokespecial #73
529: astore        55
531: aload         55
533: invokevirtual #74
536: astore        56
538: aload         55
540: ldc2_w        #91
543: invokevirtual #88
546: dstore        57
548: aload         55
550: ldc2_w        #373
553: invokevirtual #88
556: dstore        59
558: aload         55
560: invokevirtual #74
563: astore        61
565: aload         55
567: invokevirtual #74
570: astore        62
572: aload         55
574: invokevirtual #74
577: astore        63
579: aload         55
581: ldc2_w        #427
584: invokevirtual #88
587: dstore        64
589: getstatic     #118
592: astore        66
594: aload         43
596: bipush        52
598: aload         55
600: aload         66
602: ldc2_w        #614
605: ldc2_w        #477
608: dconst_0
609: invokevirtual #44
612: astore        67
614: aload_2
615: bipush        97
617: aload         37
619: aload         66
621: ldc2_w        #958
624: dconst_1
625: ldc2_w        #960
628: invokevirtual #44
631: astore        68
633: new           #54
636: dup
637: invokespecial #55
640: ldc           #56
642: invokevirtual #57
645: iload_3
646: invokevirtual #62
649: ldc           #59
651: invokevirtual #57
654: iconst_0
655: invokevirtual #62
658: ldc           #56
660: invokevirtual #57
663: invokevirtual #60
666: iload_3
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #61
678: new           #54
681: dup
682: invokespecial #55
685: ldc           #56
687: invokevirtual #57
690: iload         4
692: invokevirtual #62
695: ldc           #59
697: invokevirtual #57
700: iconst_0
701: invokevirtual #62
704: ldc           #56
706: invokevirtual #57
709: invokevirtual #60
712: iload         4
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #61
725: new           #54
728: dup
729: invokespecial #55
732: ldc           #56
734: invokevirtual #57
737: iload         5
739: invokevirtual #62
742: ldc           #59
744: invokevirtual #57
747: iconst_0
748: invokevirtual #62
751: ldc           #56
753: invokevirtual #57
756: invokevirtual #60
759: iload         5
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #61
772: aload         9
774: invokestatic  #47
777: aload         12
779: invokestatic  #47
782: aload         13
784: invokestatic  #47
787: aload         14
789: invokestatic  #47
792: aload         15
794: invokestatic  #47
797: aload         16
799: invokestatic  #47
802: new           #54
805: dup
806: invokespecial #55
809: ldc           #56
811: invokevirtual #57
814: aload         17
816: invokevirtual #82
819: ldc           #59
821: invokevirtual #57
824: getstatic     #118
827: invokevirtual #82
830: ldc           #56
832: invokevirtual #57
835: invokevirtual #60
838: aload         17
840: getstatic     #118
843: invokevirtual #83
846: invokestatic  #61
849: aload         18
851: invokestatic  #47
854: aload         19
856: invokestatic  #47
859: new           #54
862: dup
863: invokespecial #55
866: ldc           #56
868: invokevirtual #57
871: iload         20
873: invokevirtual #62
876: ldc           #59
878: invokevirtual #57
881: bipush        10
883: invokevirtual #62
886: ldc           #56
888: invokevirtual #57
891: invokevirtual #60
894: iload         20
896: bipush        10
898: if_icmpne     905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #61
909: aload         21
911: invokestatic  #104
914: new           #54
917: dup
918: invokespecial #55
921: ldc           #56
923: invokevirtual #57
926: iload         24
928: invokevirtual #62
931: ldc           #59
933: invokevirtual #57
936: iconst_0
937: invokevirtual #62
940: ldc           #56
942: invokevirtual #57
945: invokevirtual #60
948: iload         24
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #61
961: aload         27
963: invokestatic  #47
966: aload         28
968: invokestatic  #47
971: aload         29
973: invokestatic  #47
976: aload         30
978: invokestatic  #47
981: aload         31
983: invokestatic  #47
986: new           #54
989: dup
990: invokespecial #55
993: ldc           #56
995: invokevirtual #57
998: aload         32
1000: invokevirtual #82
1003: ldc           #59
1005: invokevirtual #57
1008: getstatic     #78
1011: invokevirtual #82
1014: ldc           #56
1016: invokevirtual #57
1019: invokevirtual #60
1022: aload         32
1024: getstatic     #78
1027: invokevirtual #83
1030: invokestatic  #61
1033: aload         33
1035: invokestatic  #47
1038: aload         34
1040: invokestatic  #47
1043: new           #54
1046: dup
1047: invokespecial #55
1050: ldc           #56
1052: invokevirtual #57
1055: aload         35
1057: invokevirtual #82
1060: ldc           #59
1062: invokevirtual #57
1065: getstatic     #78
1068: invokevirtual #82
1071: ldc           #56
1073: invokevirtual #57
1076: invokevirtual #60
1079: aload         35
1081: getstatic     #78
1084: invokevirtual #83
1087: invokestatic  #61
1090: aload         36
1092: invokestatic  #47
1095: aload         38
1097: invokestatic  #47
1100: new           #54
1103: dup
1104: invokespecial #55
1107: ldc           #56
1109: invokevirtual #57
1112: aload         39
1114: invokevirtual #82
1117: ldc           #59
1119: invokevirtual #57
1122: getstatic     #78
1125: invokevirtual #82
1128: ldc           #56
1130: invokevirtual #57
1133: invokevirtual #60
1136: aload         39
1138: getstatic     #78
1141: invokevirtual #83
1144: invokestatic  #61
1147: aload         40
1149: invokestatic  #47
1152: aload         41
1154: invokestatic  #47
1157: new           #54
1160: dup
1161: invokespecial #55
1164: ldc           #56
1166: invokevirtual #57
1169: iload         44
1171: invokevirtual #62
1174: ldc           #59
1176: invokevirtual #57
1179: iconst_0
1180: invokevirtual #62
1183: ldc           #56
1185: invokevirtual #57
1188: invokevirtual #60
1191: iload         44
1193: ifne          1200
1196: iconst_1
1197: goto          1201
1200: iconst_0
1201: invokestatic  #61
1204: aload         47
1206: invokestatic  #47
1209: aload         48
1211: invokestatic  #47
1214: aload         49
1216: invokestatic  #47
1219: aload         50
1221: invokestatic  #47
1224: aload         51
1226: invokestatic  #47
1229: new           #54
1232: dup
1233: invokespecial #55
1236: ldc           #56
1238: invokevirtual #57
1241: aload         52
1243: invokevirtual #82
1246: ldc           #59
1248: invokevirtual #57
1251: getstatic     #78
1254: invokevirtual #82
1257: ldc           #56
1259: invokevirtual #57
1262: invokevirtual #60
1265: aload         52
1267: getstatic     #78
1270: invokevirtual #83
1273: invokestatic  #61
1276: aload         53
1278: invokestatic  #47
1281: new           #54
1284: dup
1285: invokespecial #55
1288: ldc           #56
1290: invokevirtual #57
1293: iload         54
1295: invokevirtual #62
1298: ldc           #59
1300: invokevirtual #57
1303: bipush        97
1305: invokevirtual #62
1308: ldc           #56
1310: invokevirtual #57
1313: invokevirtual #60
1316: iload         54
1318: bipush        97
1320: if_icmpne     1327
1323: iconst_1
1324: goto          1328
1327: iconst_0
1328: invokestatic  #61
1331: aload         56
1333: invokestatic  #47
1336: new           #54
1339: dup
1340: invokespecial #55
1343: ldc           #56
1345: invokevirtual #57
1348: dload         57
1350: invokevirtual #58
1353: ldc           #59
1355: invokevirtual #57
1358: ldc2_w        #406
1361: invokevirtual #58
1364: ldc           #56
1366: invokevirtual #57
1369: invokevirtual #60
1372: dload         57
1374: ldc2_w        #406
1377: dcmpl
1378: ifne          1385
1381: iconst_1
1382: goto          1386
1385: iconst_0
1386: invokestatic  #61
1389: new           #54
1392: dup
1393: invokespecial #55
1396: ldc           #56
1398: invokevirtual #57
1401: dload         59
1403: invokevirtual #58
1406: ldc           #59
1408: invokevirtual #57
1411: ldc2_w        #247
1414: invokevirtual #58
1417: ldc           #56
1419: invokevirtual #57
1422: invokevirtual #60
1425: dload         59
1427: ldc2_w        #247
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #61
1442: aload         61
1444: invokestatic  #47
1447: aload         62
1449: invokestatic  #47
1452: aload         63
1454: invokestatic  #47
1457: new           #54
1460: dup
1461: invokespecial #55
1464: ldc           #56
1466: invokevirtual #57
1469: dload         64
1471: invokevirtual #58
1474: ldc           #59
1476: invokevirtual #57
1479: ldc2_w        #617
1482: invokevirtual #58
1485: ldc           #56
1487: invokevirtual #57
1490: invokevirtual #60
1493: dload         64
1495: ldc2_w        #617
1498: dcmpl
1499: ifne          1506
1502: iconst_1
1503: goto          1507
1506: iconst_0
1507: invokestatic  #61
1510: new           #54
1513: dup
1514: invokespecial #55
1517: ldc           #56
1519: invokevirtual #57
1522: aload         66
1524: invokevirtual #82
1527: ldc           #59
1529: invokevirtual #57
1532: getstatic     #118
1535: invokevirtual #82
1538: ldc           #56
1540: invokevirtual #57
1543: invokevirtual #60
1546: aload         66
1548: getstatic     #118
1551: invokevirtual #83
1554: invokestatic  #61
1557: aload         67
1559: invokestatic  #47
1562: aload         68
1564: invokestatic  #47
1567: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test288
Start line: 13481
End line: 13512
Method source code: 
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #962
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aload_2
157: invokevirtual #51
160: astore        16
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload_3
175: invokevirtual #62
178: ldc           #59
180: invokevirtual #57
183: iconst_0
184: invokevirtual #62
187: ldc           #56
189: invokevirtual #57
192: invokevirtual #60
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #61
207: aload         6
209: invokestatic  #47
212: aload         7
214: invokestatic  #47
217: aload         8
219: invokestatic  #47
222: aload         9
224: invokestatic  #47
227: aload         10
229: invokestatic  #47
232: new           #54
235: dup
236: invokespecial #55
239: ldc           #56
241: invokevirtual #57
244: aload         11
246: invokevirtual #82
249: ldc           #59
251: invokevirtual #57
254: getstatic     #78
257: invokevirtual #82
260: ldc           #56
262: invokevirtual #57
265: invokevirtual #60
268: aload         11
270: getstatic     #78
273: invokevirtual #83
276: invokestatic  #61
279: aload         12
281: invokestatic  #47
284: aload         13
286: invokestatic  #47
289: new           #54
292: dup
293: invokespecial #55
296: ldc           #56
298: invokevirtual #57
301: iload         14
303: invokevirtual #62
306: ldc           #59
308: invokevirtual #57
311: bipush        8
313: invokevirtual #62
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: iload         14
326: bipush        8
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #61
339: new           #54
342: dup
343: invokespecial #55
346: ldc           #56
348: invokevirtual #57
351: iload         15
353: invokevirtual #62
356: ldc           #59
358: invokevirtual #57
361: bipush        8
363: invokevirtual #62
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: iload         15
376: bipush        8
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #61
389: aload         16
391: invokestatic  #47
394: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test289
Start line: 13515
End line: 13536
Method source code: 
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        int int7 = brentOptimizer3.getMaxEvaluations();
        double double8 = brentOptimizer3.getMax();
        int int9 = brentOptimizer3.getEvaluations();
        double double10 = brentOptimizer3.getStartValue();
        int int11 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #963
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #50
63: istore        6
65: aload_2
66: invokevirtual #49
69: dstore        7
71: aload_2
72: invokevirtual #71
75: istore        9
77: aload_2
78: invokevirtual #177
81: dstore        10
83: aload_2
84: invokevirtual #50
87: istore        12
89: new           #54
92: dup
93: invokespecial #55
96: ldc           #56
98: invokevirtual #57
101: iload_3
102: invokevirtual #62
105: ldc           #59
107: invokevirtual #57
110: iconst_0
111: invokevirtual #62
114: ldc           #56
116: invokevirtual #57
119: invokevirtual #60
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #61
134: new           #54
137: dup
138: invokespecial #55
141: ldc           #56
143: invokevirtual #57
146: iload         4
148: invokevirtual #62
151: ldc           #59
153: invokevirtual #57
156: iconst_0
157: invokevirtual #62
160: ldc           #56
162: invokevirtual #57
165: invokevirtual #60
168: iload         4
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #61
181: new           #54
184: dup
185: invokespecial #55
188: ldc           #56
190: invokevirtual #57
193: iload         5
195: invokevirtual #62
198: ldc           #59
200: invokevirtual #57
203: iconst_0
204: invokevirtual #62
207: ldc           #56
209: invokevirtual #57
212: invokevirtual #60
215: iload         5
217: ifne          224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #61
228: new           #54
231: dup
232: invokespecial #55
235: ldc           #56
237: invokevirtual #57
240: iload         6
242: invokevirtual #62
245: ldc           #59
247: invokevirtual #57
250: iconst_0
251: invokevirtual #62
254: ldc           #56
256: invokevirtual #57
259: invokevirtual #60
262: iload         6
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #61
275: new           #54
278: dup
279: invokespecial #55
282: ldc           #56
284: invokevirtual #57
287: dload         7
289: invokevirtual #58
292: ldc           #59
294: invokevirtual #57
297: dconst_0
298: invokevirtual #58
301: ldc           #56
303: invokevirtual #57
306: invokevirtual #60
309: dload         7
311: dconst_0
312: dcmpl
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #61
324: new           #54
327: dup
328: invokespecial #55
331: ldc           #56
333: invokevirtual #57
336: iload         9
338: invokevirtual #62
341: ldc           #59
343: invokevirtual #57
346: iconst_0
347: invokevirtual #62
350: ldc           #56
352: invokevirtual #57
355: invokevirtual #60
358: iload         9
360: ifne          367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #61
371: new           #54
374: dup
375: invokespecial #55
378: ldc           #56
380: invokevirtual #57
383: dload         10
385: invokevirtual #58
388: ldc           #59
390: invokevirtual #57
393: dconst_0
394: invokevirtual #58
397: ldc           #56
399: invokevirtual #57
402: invokevirtual #60
405: dload         10
407: dconst_0
408: dcmpl
409: ifne          416
412: iconst_1
413: goto          417
416: iconst_0
417: invokestatic  #61
420: new           #54
423: dup
424: invokespecial #55
427: ldc           #56
429: invokevirtual #57
432: iload         12
434: invokevirtual #62
437: ldc           #59
439: invokevirtual #57
442: iconst_0
443: invokevirtual #62
446: ldc           #56
448: invokevirtual #57
451: invokevirtual #60
454: iload         12
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #61
467: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test290
Start line: 13539
End line: 13557
Method source code: 
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double double8 = brentOptimizer3.computeObjectiveValue(0.9075711444580241d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #964
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #71
57: istore        6
59: aload_2
60: ldc2_w        #965
63: invokevirtual #158
66: dstore        7
68: ldc           #52
70: invokestatic  #15
73: goto          78
76: astore        7
78: new           #54
81: dup
82: invokespecial #55
85: ldc           #56
87: invokevirtual #57
90: iload_3
91: invokevirtual #62
94: ldc           #59
96: invokevirtual #57
99: iconst_0
100: invokevirtual #62
103: ldc           #56
105: invokevirtual #57
108: invokevirtual #60
111: iload_3
112: ifne          119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #61
123: new           #54
126: dup
127: invokespecial #55
130: ldc           #56
132: invokevirtual #57
135: dload         4
137: invokevirtual #58
140: ldc           #59
142: invokevirtual #57
145: dconst_0
146: invokevirtual #58
149: ldc           #56
151: invokevirtual #57
154: invokevirtual #60
157: dload         4
159: dconst_0
160: dcmpl
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #61
172: new           #54
175: dup
176: invokespecial #55
179: ldc           #56
181: invokevirtual #57
184: iload         6
186: invokevirtual #62
189: ldc           #59
191: invokevirtual #57
194: iconst_0
195: invokevirtual #62
198: ldc           #56
200: invokevirtual #57
203: invokevirtual #60
206: iload         6
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #61
219: return
Exception table:
from    to  target type
59    73    76   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test291
Start line: 13560
End line: 13595
Method source code: 
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        double double20 = brentOptimizer3.getMin();
        int int21 = brentOptimizer3.getMaxEvaluations();
        double double22 = brentOptimizer3.getStartValue();
        double double23 = brentOptimizer3.getMax();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.4210854715202004E-14d + "'", double23 == 1.4210854715202004E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #967
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #231
154: dstore        15
156: aload_2
157: invokevirtual #50
160: istore        17
162: aload_2
163: invokevirtual #177
166: dstore        18
168: aload_2
169: invokevirtual #49
172: dstore        20
174: new           #54
177: dup
178: invokespecial #55
181: ldc           #56
183: invokevirtual #57
186: iload_3
187: invokevirtual #62
190: ldc           #59
192: invokevirtual #57
195: iconst_0
196: invokevirtual #62
199: ldc           #56
201: invokevirtual #57
204: invokevirtual #60
207: iload_3
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #61
219: aload         6
221: invokestatic  #47
224: aload         7
226: invokestatic  #47
229: aload         8
231: invokestatic  #47
234: aload         9
236: invokestatic  #47
239: aload         10
241: invokestatic  #47
244: new           #54
247: dup
248: invokespecial #55
251: ldc           #56
253: invokevirtual #57
256: aload         11
258: invokevirtual #82
261: ldc           #59
263: invokevirtual #57
266: getstatic     #78
269: invokevirtual #82
272: ldc           #56
274: invokevirtual #57
277: invokevirtual #60
280: aload         11
282: getstatic     #78
285: invokevirtual #83
288: invokestatic  #61
291: aload         12
293: invokestatic  #47
296: aload         13
298: invokestatic  #47
301: new           #54
304: dup
305: invokespecial #55
308: ldc           #56
310: invokevirtual #57
313: iload         14
315: invokevirtual #62
318: ldc           #59
320: invokevirtual #57
323: bipush        8
325: invokevirtual #62
328: ldc           #56
330: invokevirtual #57
333: invokevirtual #60
336: iload         14
338: bipush        8
340: if_icmpne     347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #61
351: new           #54
354: dup
355: invokespecial #55
358: ldc           #56
360: invokevirtual #57
363: dload         15
365: invokevirtual #58
368: ldc           #59
370: invokevirtual #57
373: ldc2_w        #91
376: invokevirtual #58
379: ldc           #56
381: invokevirtual #57
384: invokevirtual #60
387: dload         15
389: ldc2_w        #91
392: dcmpl
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #61
404: new           #54
407: dup
408: invokespecial #55
411: ldc           #56
413: invokevirtual #57
416: iload         17
418: invokevirtual #62
421: ldc           #59
423: invokevirtual #57
426: bipush        97
428: invokevirtual #62
431: ldc           #56
433: invokevirtual #57
436: invokevirtual #60
439: iload         17
441: bipush        97
443: if_icmpne     450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #61
454: new           #54
457: dup
458: invokespecial #55
461: ldc           #56
463: invokevirtual #57
466: dload         18
468: invokevirtual #58
471: ldc           #59
473: invokevirtual #57
476: ldc2_w        #91
479: invokevirtual #58
482: ldc           #56
484: invokevirtual #57
487: invokevirtual #60
490: dload         18
492: ldc2_w        #91
495: dcmpl
496: ifne          503
499: iconst_1
500: goto          504
503: iconst_0
504: invokestatic  #61
507: new           #54
510: dup
511: invokespecial #55
514: ldc           #56
516: invokevirtual #57
519: dload         20
521: invokevirtual #58
524: ldc           #59
526: invokevirtual #57
529: ldc2_w        #93
532: invokevirtual #58
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: dload         20
545: ldc2_w        #93
548: dcmpl
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #61
560: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test292
Start line: 13598
End line: 13619
Method source code: 
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getMaxEvaluations();
        double double5 = brentOptimizer3.getMax();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        int int8 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker10 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker11 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker10);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #968
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #50
46: istore_3
47: aload_2
48: invokevirtual #49
51: dstore        4
53: aload_2
54: invokevirtual #50
57: istore        6
59: aload_2
60: invokevirtual #103
63: astore        7
65: aload_2
66: invokevirtual #50
69: istore        8
71: aload_2
72: invokevirtual #103
75: astore        9
77: aload_2
78: invokevirtual #103
81: astore        10
83: aload_2
84: invokevirtual #103
87: astore        11
89: new           #54
92: dup
93: invokespecial #55
96: ldc           #56
98: invokevirtual #57
101: iload_3
102: invokevirtual #62
105: ldc           #59
107: invokevirtual #57
110: iconst_0
111: invokevirtual #62
114: ldc           #56
116: invokevirtual #57
119: invokevirtual #60
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #61
134: new           #54
137: dup
138: invokespecial #55
141: ldc           #56
143: invokevirtual #57
146: dload         4
148: invokevirtual #58
151: ldc           #59
153: invokevirtual #57
156: dconst_0
157: invokevirtual #58
160: ldc           #56
162: invokevirtual #57
165: invokevirtual #60
168: dload         4
170: dconst_0
171: dcmpl
172: ifne          179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #61
183: new           #54
186: dup
187: invokespecial #55
190: ldc           #56
192: invokevirtual #57
195: iload         6
197: invokevirtual #62
200: ldc           #59
202: invokevirtual #57
205: iconst_0
206: invokevirtual #62
209: ldc           #56
211: invokevirtual #57
214: invokevirtual #60
217: iload         6
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #61
230: aload         7
232: invokestatic  #104
235: new           #54
238: dup
239: invokespecial #55
242: ldc           #56
244: invokevirtual #57
247: iload         8
249: invokevirtual #62
252: ldc           #59
254: invokevirtual #57
257: iconst_0
258: invokevirtual #62
261: ldc           #56
263: invokevirtual #57
266: invokevirtual #60
269: iload         8
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #61
282: aload         9
284: invokestatic  #104
287: aload         10
289: invokestatic  #104
292: aload         11
294: invokestatic  #104
297: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test293
Start line: 13622
End line: 13633
Method source code: 
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = brentOptimizer3.getGoalType();
        double double6 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #969
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #110
51: astore        4
53: aload_2
54: invokevirtual #177
57: dstore        5
59: new           #54
62: dup
63: invokespecial #55
66: ldc           #56
68: invokevirtual #57
71: iload_3
72: invokevirtual #62
75: ldc           #59
77: invokevirtual #57
80: iconst_0
81: invokevirtual #62
84: ldc           #56
86: invokevirtual #57
89: invokevirtual #60
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #61
104: aload         4
106: invokestatic  #104
109: new           #54
112: dup
113: invokespecial #55
116: ldc           #56
118: invokevirtual #57
121: dload         5
123: invokevirtual #58
126: ldc           #59
128: invokevirtual #57
131: dconst_0
132: invokevirtual #58
135: ldc           #56
137: invokevirtual #57
140: invokevirtual #60
143: dload         5
145: dconst_0
146: dcmpl
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #61
158: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test294
Start line: 13636
End line: 13651
Method source code: 
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = brentOptimizer3.getGoalType();
        double double6 = brentOptimizer3.getMin();
        int int7 = brentOptimizer3.getMaxEvaluations();
        double double8 = brentOptimizer3.getStartValue();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #970
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #110
51: astore        4
53: aload_2
54: invokevirtual #231
57: dstore        5
59: aload_2
60: invokevirtual #50
63: istore        7
65: aload_2
66: invokevirtual #177
69: dstore        8
71: new           #54
74: dup
75: invokespecial #55
78: ldc           #56
80: invokevirtual #57
83: iload_3
84: invokevirtual #62
87: ldc           #59
89: invokevirtual #57
92: iconst_0
93: invokevirtual #62
96: ldc           #56
98: invokevirtual #57
101: invokevirtual #60
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #61
116: aload         4
118: invokestatic  #104
121: new           #54
124: dup
125: invokespecial #55
128: ldc           #56
130: invokevirtual #57
133: dload         5
135: invokevirtual #58
138: ldc           #59
140: invokevirtual #57
143: dconst_0
144: invokevirtual #58
147: ldc           #56
149: invokevirtual #57
152: invokevirtual #60
155: dload         5
157: dconst_0
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #61
170: new           #54
173: dup
174: invokespecial #55
177: ldc           #56
179: invokevirtual #57
182: iload         7
184: invokevirtual #62
187: ldc           #59
189: invokevirtual #57
192: iconst_0
193: invokevirtual #62
196: ldc           #56
198: invokevirtual #57
201: invokevirtual #60
204: iload         7
206: ifne          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #61
217: new           #54
220: dup
221: invokespecial #55
224: ldc           #56
226: invokevirtual #57
229: dload         8
231: invokevirtual #58
234: ldc           #59
236: invokevirtual #57
239: dconst_0
240: invokevirtual #58
243: ldc           #56
245: invokevirtual #57
248: invokevirtual #60
251: dload         8
253: dconst_0
254: dcmpl
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #61
266: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test295
Start line: 13654
End line: 13741
Method source code: 
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        double double19 = brentOptimizer3.getMax();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction22 = sin21.derivative();
        double double24 = sin21.value((double) (short) 10);
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer27 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(284.48901560517237d, 2.4544439362322485d);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer32 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker31);
        int int33 = brentOptimizer32.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction37 = sin36.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin35, sin36 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray38);
        org.apache.commons.math3.optimization.GoalType goalType42 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair46 = brentOptimizer32.optimize(97, univariateFunction41, goalType42, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int47 = brentOptimizer32.getMaxEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = sin49.derivative();
        double double52 = sin49.value((double) (short) 10);
        double double54 = sin49.value(1.695228608386943d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = sin49.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = sin49.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction57 = sin49.derivative();
        double double59 = sin49.value((-0.017453292519943295d));
        org.apache.commons.math3.optimization.GoalType goalType60 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair64 = brentOptimizer32.optimize((int) '4', (org.apache.commons.math3.analysis.UnivariateFunction) sin49, goalType60, (-120.0000009536743d), (double) 9223372036854775807L, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction65 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin49);
        org.apache.commons.math3.optimization.GoalType goalType66 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer27.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) sin49, goalType66, 2.041375977702442d, 8.062017978914582d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer3.optimize((int) '#', (org.apache.commons.math3.analysis.UnivariateFunction) sin21, goalType66, (double) 515, 3.632120308602311E17d, 0.13491509971008844d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (35) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4210854715202004E-14d + "'", double19 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.5440211108893698d) + "'", double24 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(univariateFunction37);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 97 + "'", int47 == 97);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.5440211108893698d) + "'", double52 == (-0.5440211108893698d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.9922682874719476d + "'", double54 == 0.9922682874719476d);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertNotNull(univariateFunction57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.01745240643728351d) + "'", double59 == (-0.01745240643728351d));
        org.junit.Assert.assertTrue("'" + goalType60 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType60.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair64);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction65);
        org.junit.Assert.assertTrue("'" + goalType66 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType66.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #971
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #49
148: dstore        14
150: new           #72
153: dup
154: invokespecial #73
157: astore        16
159: aload         16
161: invokevirtual #74
164: astore        17
166: aload         16
168: ldc2_w        #91
171: invokevirtual #88
174: dstore        18
176: new           #8
179: dup
180: ldc2_w        #805
183: ldc2_w        #807
186: invokespecial #25
189: astore        20
191: aconst_null
192: astore        21
194: new           #8
197: dup
198: ldc2_w        #31
201: ldc2_w        #33
204: aload         21
206: invokespecial #13
209: astore        22
211: aload         22
213: invokevirtual #71
216: istore        23
218: new           #72
221: dup
222: invokespecial #73
225: astore        24
227: new           #72
230: dup
231: invokespecial #73
234: astore        25
236: aload         25
238: invokevirtual #74
241: astore        26
243: iconst_2
244: anewarray     #75
247: dup
248: iconst_0
249: aload         24
251: aastore
252: dup
253: iconst_1
254: aload         25
256: aastore
257: astore        27
259: aload         27
261: invokestatic  #76
264: astore        28
266: aload         27
268: invokestatic  #77
271: astore        29
273: aload         27
275: checkcast     #89
278: invokestatic  #90
281: astore        30
283: getstatic     #78
286: astore        31
288: aload         22
290: bipush        97
292: aload         30
294: aload         31
296: ldc2_w        #91
299: ldc2_w        #93
302: ldc2_w        #91
305: invokevirtual #44
308: astore        32
310: aload         22
312: invokevirtual #50
315: istore        33
317: new           #72
320: dup
321: invokespecial #73
324: astore        34
326: aload         34
328: invokevirtual #74
331: astore        35
333: aload         34
335: ldc2_w        #91
338: invokevirtual #88
341: dstore        36
343: aload         34
345: ldc2_w        #373
348: invokevirtual #88
351: dstore        38
353: aload         34
355: invokevirtual #74
358: astore        40
360: aload         34
362: invokevirtual #74
365: astore        41
367: aload         34
369: invokevirtual #74
372: astore        42
374: aload         34
376: ldc2_w        #427
379: invokevirtual #88
382: dstore        43
384: getstatic     #118
387: astore        45
389: aload         22
391: bipush        52
393: aload         34
395: aload         45
397: ldc2_w        #614
400: ldc2_w        #477
403: dconst_0
404: invokevirtual #44
407: astore        46
409: aload         34
411: invokestatic  #281
414: astore        47
416: getstatic     #118
419: astore        48
421: aload         20
423: bipush        10
425: aload         34
427: aload         48
429: ldc2_w        #809
432: ldc2_w        #811
435: invokevirtual #81
438: astore        49
440: aload_2
441: bipush        35
443: aload         16
445: aload         48
447: ldc2_w        #558
450: ldc2_w        #972
453: ldc2_w        #974
456: invokevirtual #44
459: astore        50
461: ldc_w         #976
464: invokestatic  #15
467: goto          472
470: astore        50
472: new           #54
475: dup
476: invokespecial #55
479: ldc           #56
481: invokevirtual #57
484: iload_3
485: invokevirtual #62
488: ldc           #59
490: invokevirtual #57
493: iconst_0
494: invokevirtual #62
497: ldc           #56
499: invokevirtual #57
502: invokevirtual #60
505: iload_3
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #61
517: aload         6
519: invokestatic  #47
522: aload         7
524: invokestatic  #47
527: aload         8
529: invokestatic  #47
532: aload         9
534: invokestatic  #47
537: aload         10
539: invokestatic  #47
542: new           #54
545: dup
546: invokespecial #55
549: ldc           #56
551: invokevirtual #57
554: aload         11
556: invokevirtual #82
559: ldc           #59
561: invokevirtual #57
564: getstatic     #78
567: invokevirtual #82
570: ldc           #56
572: invokevirtual #57
575: invokevirtual #60
578: aload         11
580: getstatic     #78
583: invokevirtual #83
586: invokestatic  #61
589: aload         12
591: invokestatic  #47
594: aload         13
596: invokestatic  #47
599: new           #54
602: dup
603: invokespecial #55
606: ldc           #56
608: invokevirtual #57
611: dload         14
613: invokevirtual #58
616: ldc           #59
618: invokevirtual #57
621: ldc2_w        #93
624: invokevirtual #58
627: ldc           #56
629: invokevirtual #57
632: invokevirtual #60
635: dload         14
637: ldc2_w        #93
640: dcmpl
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #61
652: aload         17
654: invokestatic  #47
657: new           #54
660: dup
661: invokespecial #55
664: ldc           #56
666: invokevirtual #57
669: dload         18
671: invokevirtual #58
674: ldc           #59
676: invokevirtual #57
679: ldc2_w        #406
682: invokevirtual #58
685: ldc           #56
687: invokevirtual #57
690: invokevirtual #60
693: dload         18
695: ldc2_w        #406
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #61
710: new           #54
713: dup
714: invokespecial #55
717: ldc           #56
719: invokevirtual #57
722: iload         23
724: invokevirtual #62
727: ldc           #59
729: invokevirtual #57
732: iconst_0
733: invokevirtual #62
736: ldc           #56
738: invokevirtual #57
741: invokevirtual #60
744: iload         23
746: ifne          753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #61
757: aload         26
759: invokestatic  #47
762: aload         27
764: invokestatic  #47
767: aload         28
769: invokestatic  #47
772: aload         29
774: invokestatic  #47
777: aload         30
779: invokestatic  #47
782: new           #54
785: dup
786: invokespecial #55
789: ldc           #56
791: invokevirtual #57
794: aload         31
796: invokevirtual #82
799: ldc           #59
801: invokevirtual #57
804: getstatic     #78
807: invokevirtual #82
810: ldc           #56
812: invokevirtual #57
815: invokevirtual #60
818: aload         31
820: getstatic     #78
823: invokevirtual #83
826: invokestatic  #61
829: aload         32
831: invokestatic  #47
834: new           #54
837: dup
838: invokespecial #55
841: ldc           #56
843: invokevirtual #57
846: iload         33
848: invokevirtual #62
851: ldc           #59
853: invokevirtual #57
856: bipush        97
858: invokevirtual #62
861: ldc           #56
863: invokevirtual #57
866: invokevirtual #60
869: iload         33
871: bipush        97
873: if_icmpne     880
876: iconst_1
877: goto          881
880: iconst_0
881: invokestatic  #61
884: aload         35
886: invokestatic  #47
889: new           #54
892: dup
893: invokespecial #55
896: ldc           #56
898: invokevirtual #57
901: dload         36
903: invokevirtual #58
906: ldc           #59
908: invokevirtual #57
911: ldc2_w        #406
914: invokevirtual #58
917: ldc           #56
919: invokevirtual #57
922: invokevirtual #60
925: dload         36
927: ldc2_w        #406
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #61
942: new           #54
945: dup
946: invokespecial #55
949: ldc           #56
951: invokevirtual #57
954: dload         38
956: invokevirtual #58
959: ldc           #59
961: invokevirtual #57
964: ldc2_w        #247
967: invokevirtual #58
970: ldc           #56
972: invokevirtual #57
975: invokevirtual #60
978: dload         38
980: ldc2_w        #247
983: dcmpl
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #61
995: aload         40
997: invokestatic  #47
1000: aload         41
1002: invokestatic  #47
1005: aload         42
1007: invokestatic  #47
1010: new           #54
1013: dup
1014: invokespecial #55
1017: ldc           #56
1019: invokevirtual #57
1022: dload         43
1024: invokevirtual #58
1027: ldc           #59
1029: invokevirtual #57
1032: ldc2_w        #617
1035: invokevirtual #58
1038: ldc           #56
1040: invokevirtual #57
1043: invokevirtual #60
1046: dload         43
1048: ldc2_w        #617
1051: dcmpl
1052: ifne          1059
1055: iconst_1
1056: goto          1060
1059: iconst_0
1060: invokestatic  #61
1063: new           #54
1066: dup
1067: invokespecial #55
1070: ldc           #56
1072: invokevirtual #57
1075: aload         45
1077: invokevirtual #82
1080: ldc           #59
1082: invokevirtual #57
1085: getstatic     #118
1088: invokevirtual #82
1091: ldc           #56
1093: invokevirtual #57
1096: invokevirtual #60
1099: aload         45
1101: getstatic     #118
1104: invokevirtual #83
1107: invokestatic  #61
1110: aload         46
1112: invokestatic  #47
1115: aload         47
1117: invokestatic  #47
1120: new           #54
1123: dup
1124: invokespecial #55
1127: ldc           #56
1129: invokevirtual #57
1132: aload         48
1134: invokevirtual #82
1137: ldc           #59
1139: invokevirtual #57
1142: getstatic     #118
1145: invokevirtual #82
1148: ldc           #56
1150: invokevirtual #57
1153: invokevirtual #60
1156: aload         48
1158: getstatic     #118
1161: invokevirtual #83
1164: invokestatic  #61
1167: aload         49
1169: invokestatic  #47
1172: return
Exception table:
from    to  target type
440   467   470   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test296
Start line: 13744
End line: 13777
Method source code: 
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        double double20 = brentOptimizer3.getMin();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer3.doOptimize();
        double double23 = brentOptimizer3.computeObjectiveValue(4.644483415289244d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.8402235179795785d) + "'", double23 == (-0.8402235179795785d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #977
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #231
154: dstore        15
156: aload_2
157: invokevirtual #51
160: astore        17
162: aload_2
163: ldc2_w        #493
166: invokevirtual #158
169: dstore        18
171: new           #54
174: dup
175: invokespecial #55
178: ldc           #56
180: invokevirtual #57
183: iload_3
184: invokevirtual #62
187: ldc           #59
189: invokevirtual #57
192: iconst_0
193: invokevirtual #62
196: ldc           #56
198: invokevirtual #57
201: invokevirtual #60
204: iload_3
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #61
216: aload         6
218: invokestatic  #47
221: aload         7
223: invokestatic  #47
226: aload         8
228: invokestatic  #47
231: aload         9
233: invokestatic  #47
236: aload         10
238: invokestatic  #47
241: new           #54
244: dup
245: invokespecial #55
248: ldc           #56
250: invokevirtual #57
253: aload         11
255: invokevirtual #82
258: ldc           #59
260: invokevirtual #57
263: getstatic     #78
266: invokevirtual #82
269: ldc           #56
271: invokevirtual #57
274: invokevirtual #60
277: aload         11
279: getstatic     #78
282: invokevirtual #83
285: invokestatic  #61
288: aload         12
290: invokestatic  #47
293: aload         13
295: invokestatic  #47
298: new           #54
301: dup
302: invokespecial #55
305: ldc           #56
307: invokevirtual #57
310: iload         14
312: invokevirtual #62
315: ldc           #59
317: invokevirtual #57
320: bipush        8
322: invokevirtual #62
325: ldc           #56
327: invokevirtual #57
330: invokevirtual #60
333: iload         14
335: bipush        8
337: if_icmpne     344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #61
348: new           #54
351: dup
352: invokespecial #55
355: ldc           #56
357: invokevirtual #57
360: dload         15
362: invokevirtual #58
365: ldc           #59
367: invokevirtual #57
370: ldc2_w        #91
373: invokevirtual #58
376: ldc           #56
378: invokevirtual #57
381: invokevirtual #60
384: dload         15
386: ldc2_w        #91
389: dcmpl
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #61
401: aload         17
403: invokestatic  #47
406: new           #54
409: dup
410: invokespecial #55
413: ldc           #56
415: invokevirtual #57
418: dload         18
420: invokevirtual #58
423: ldc           #59
425: invokevirtual #57
428: ldc2_w        #978
431: invokevirtual #58
434: ldc           #56
436: invokevirtual #57
439: invokevirtual #60
442: dload         18
444: ldc2_w        #978
447: dcmpl
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #61
459: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test297
Start line: 13780
End line: 13872
Method source code: 
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction0 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer4 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker3);
        int int5 = brentOptimizer4.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray10 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, sin8 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray10);
        org.apache.commons.math3.optimization.GoalType goalType14 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer4.optimize(97, univariateFunction13, goalType14, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair19 = brentOptimizer4.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType20 = brentOptimizer4.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair21 = brentOptimizer4.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction24 = sin23.derivative();
        org.apache.commons.math3.optimization.GoalType goalType25 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair28 = brentOptimizer4.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin23, goalType25, 3.141592653589793d, 0.0d);
        double double29 = brentOptimizer4.getMax();
        org.apache.commons.math3.analysis.function.Sin sin31 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction32 = sin31.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer36 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker35);
        int int37 = brentOptimizer36.getMaxEvaluations();
        double double38 = brentOptimizer36.getMax();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = sin41.derivative();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray45 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin40, sin41, sin43, sin44 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray45);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction47 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray45);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer51 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker50);
        int int52 = brentOptimizer51.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin55 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = sin55.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray57 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin54, sin55 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable58 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray57);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable59 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray57);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray57);
        org.apache.commons.math3.optimization.GoalType goalType61 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer51.optimize(97, univariateFunction60, goalType61, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair66 = brentOptimizer51.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType67 = brentOptimizer51.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair70 = brentOptimizer36.optimize((int) ' ', univariateFunction47, goalType67, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer4.optimize((int) (short) 100, (org.apache.commons.math3.analysis.UnivariateFunction) sin31, goalType67, 5.22766967171598d, 1.4210854715202004E-14d, (double) '#');
        double double76 = sin31.value(1.4465168074662325d);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction78 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction0, (org.apache.commons.math3.analysis.UnivariateFunction) sin31, (-228.95232643682593d));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertTrue("'" + goalType14 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType14.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertNotNull(univariatePointValuePair19);
        org.junit.Assert.assertTrue("'" + goalType20 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType20.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair21);
        org.junit.Assert.assertNotNull(univariateFunction24);
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType25.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateFunction47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray57);
        org.junit.Assert.assertNotNull(univariateDifferentiable58);
        org.junit.Assert.assertNotNull(univariateDifferentiable59);
        org.junit.Assert.assertNotNull(univariateFunction60);
        org.junit.Assert.assertTrue("'" + goalType61 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType61.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair65);
        org.junit.Assert.assertNotNull(univariatePointValuePair66);
        org.junit.Assert.assertTrue("'" + goalType67 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType67.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair70);
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9922872354360438d + "'", double76 == 0.9922872354360438d);
        org.junit.Assert.assertNotNull(multivariateFunction78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #980
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: new           #8
32: dup
33: ldc2_w        #31
36: ldc2_w        #33
39: aload_2
40: invokespecial #13
43: astore_3
44: aload_3
45: invokevirtual #71
48: istore        4
50: new           #72
53: dup
54: invokespecial #73
57: astore        5
59: new           #72
62: dup
63: invokespecial #73
66: astore        6
68: aload         6
70: invokevirtual #74
73: astore        7
75: iconst_2
76: anewarray     #75
79: dup
80: iconst_0
81: aload         5
83: aastore
84: dup
85: iconst_1
86: aload         6
88: aastore
89: astore        8
91: aload         8
93: invokestatic  #76
96: astore        9
98: aload         8
100: invokestatic  #77
103: astore        10
105: aload         8
107: checkcast     #89
110: invokestatic  #90
113: astore        11
115: getstatic     #78
118: astore        12
120: aload_3
121: bipush        97
123: aload         11
125: aload         12
127: ldc2_w        #91
130: ldc2_w        #93
133: ldc2_w        #91
136: invokevirtual #44
139: astore        13
141: aload_3
142: invokevirtual #51
145: astore        14
147: aload_3
148: invokevirtual #110
151: astore        15
153: aload_3
154: invokevirtual #51
157: astore        16
159: new           #72
162: dup
163: invokespecial #73
166: astore        17
168: aload         17
170: invokevirtual #74
173: astore        18
175: getstatic     #78
178: astore        19
180: aload_3
181: bipush        97
183: aload         17
185: aload         19
187: ldc2_w        #133
190: dconst_0
191: invokevirtual #81
194: astore        20
196: aload_3
197: invokevirtual #49
200: dstore        21
202: new           #72
205: dup
206: invokespecial #73
209: astore        23
211: aload         23
213: invokevirtual #74
216: astore        24
218: aconst_null
219: astore        25
221: new           #8
224: dup
225: ldc2_w        #31
228: ldc2_w        #33
231: aload         25
233: invokespecial #13
236: astore        26
238: aload         26
240: invokevirtual #50
243: istore        27
245: aload         26
247: invokevirtual #49
250: dstore        28
252: new           #72
255: dup
256: invokespecial #73
259: astore        30
261: new           #72
264: dup
265: invokespecial #73
268: astore        31
270: aload         31
272: invokevirtual #74
275: astore        32
277: new           #72
280: dup
281: invokespecial #73
284: astore        33
286: new           #72
289: dup
290: invokespecial #73
293: astore        34
295: iconst_4
296: anewarray     #75
299: dup
300: iconst_0
301: aload         30
303: aastore
304: dup
305: iconst_1
306: aload         31
308: aastore
309: dup
310: iconst_2
311: aload         33
313: aastore
314: dup
315: iconst_3
316: aload         34
318: aastore
319: astore        35
321: aload         35
323: invokestatic  #76
326: astore        36
328: aload         35
330: checkcast     #89
333: invokestatic  #109
336: astore        37
338: aconst_null
339: astore        38
341: new           #8
344: dup
345: ldc2_w        #31
348: ldc2_w        #33
351: aload         38
353: invokespecial #13
356: astore        39
358: aload         39
360: invokevirtual #71
363: istore        40
365: new           #72
368: dup
369: invokespecial #73
372: astore        41
374: new           #72
377: dup
378: invokespecial #73
381: astore        42
383: aload         42
385: invokevirtual #74
388: astore        43
390: iconst_2
391: anewarray     #75
394: dup
395: iconst_0
396: aload         41
398: aastore
399: dup
400: iconst_1
401: aload         42
403: aastore
404: astore        44
406: aload         44
408: invokestatic  #76
411: astore        45
413: aload         44
415: invokestatic  #77
418: astore        46
420: aload         44
422: checkcast     #89
425: invokestatic  #90
428: astore        47
430: getstatic     #78
433: astore        48
435: aload         39
437: bipush        97
439: aload         47
441: aload         48
443: ldc2_w        #91
446: ldc2_w        #93
449: ldc2_w        #91
452: invokevirtual #44
455: astore        49
457: aload         39
459: invokevirtual #51
462: astore        50
464: aload         39
466: invokevirtual #110
469: astore        51
471: aload         26
473: bipush        32
475: aload         37
477: aload         51
479: ldc2_w        #173
482: ldc2_w        #175
485: invokevirtual #81
488: astore        52
490: aload_3
491: bipush        100
493: aload         23
495: aload         51
497: ldc2_w        #472
500: ldc2_w        #93
503: ldc2_w        #263
506: invokevirtual #44
509: astore        53
511: aload         23
513: ldc2_w        #929
516: invokevirtual #88
519: dstore        54
521: aload_1
522: aload         23
524: ldc2_w        #981
527: invokestatic  #183
530: astore        56
532: new           #54
535: dup
536: invokespecial #55
539: ldc           #56
541: invokevirtual #57
544: iload         4
546: invokevirtual #62
549: ldc           #59
551: invokevirtual #57
554: iconst_0
555: invokevirtual #62
558: ldc           #56
560: invokevirtual #57
563: invokevirtual #60
566: iload         4
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #61
579: aload         7
581: invokestatic  #47
584: aload         8
586: invokestatic  #47
589: aload         9
591: invokestatic  #47
594: aload         10
596: invokestatic  #47
599: aload         11
601: invokestatic  #47
604: new           #54
607: dup
608: invokespecial #55
611: ldc           #56
613: invokevirtual #57
616: aload         12
618: invokevirtual #82
621: ldc           #59
623: invokevirtual #57
626: getstatic     #78
629: invokevirtual #82
632: ldc           #56
634: invokevirtual #57
637: invokevirtual #60
640: aload         12
642: getstatic     #78
645: invokevirtual #83
648: invokestatic  #61
651: aload         13
653: invokestatic  #47
656: aload         14
658: invokestatic  #47
661: new           #54
664: dup
665: invokespecial #55
668: ldc           #56
670: invokevirtual #57
673: aload         15
675: invokevirtual #82
678: ldc           #59
680: invokevirtual #57
683: getstatic     #78
686: invokevirtual #82
689: ldc           #56
691: invokevirtual #57
694: invokevirtual #60
697: aload         15
699: getstatic     #78
702: invokevirtual #83
705: invokestatic  #61
708: aload         16
710: invokestatic  #47
713: aload         18
715: invokestatic  #47
718: new           #54
721: dup
722: invokespecial #55
725: ldc           #56
727: invokevirtual #57
730: aload         19
732: invokevirtual #82
735: ldc           #59
737: invokevirtual #57
740: getstatic     #78
743: invokevirtual #82
746: ldc           #56
748: invokevirtual #57
751: invokevirtual #60
754: aload         19
756: getstatic     #78
759: invokevirtual #83
762: invokestatic  #61
765: aload         20
767: invokestatic  #47
770: new           #54
773: dup
774: invokespecial #55
777: ldc           #56
779: invokevirtual #57
782: dload         21
784: invokevirtual #58
787: ldc           #59
789: invokevirtual #57
792: dconst_0
793: invokevirtual #58
796: ldc           #56
798: invokevirtual #57
801: invokevirtual #60
804: dload         21
806: dconst_0
807: dcmpl
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #61
819: aload         24
821: invokestatic  #47
824: new           #54
827: dup
828: invokespecial #55
831: ldc           #56
833: invokevirtual #57
836: iload         27
838: invokevirtual #62
841: ldc           #59
843: invokevirtual #57
846: iconst_0
847: invokevirtual #62
850: ldc           #56
852: invokevirtual #57
855: invokevirtual #60
858: iload         27
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #61
871: new           #54
874: dup
875: invokespecial #55
878: ldc           #56
880: invokevirtual #57
883: dload         28
885: invokevirtual #58
888: ldc           #59
890: invokevirtual #57
893: dconst_0
894: invokevirtual #58
897: ldc           #56
899: invokevirtual #57
902: invokevirtual #60
905: dload         28
907: dconst_0
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #61
920: aload         32
922: invokestatic  #47
925: aload         35
927: invokestatic  #47
930: aload         36
932: invokestatic  #47
935: aload         37
937: invokestatic  #47
940: new           #54
943: dup
944: invokespecial #55
947: ldc           #56
949: invokevirtual #57
952: iload         40
954: invokevirtual #62
957: ldc           #59
959: invokevirtual #57
962: iconst_0
963: invokevirtual #62
966: ldc           #56
968: invokevirtual #57
971: invokevirtual #60
974: iload         40
976: ifne          983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #61
987: aload         43
989: invokestatic  #47
992: aload         44
994: invokestatic  #47
997: aload         45
999: invokestatic  #47
1002: aload         46
1004: invokestatic  #47
1007: aload         47
1009: invokestatic  #47
1012: new           #54
1015: dup
1016: invokespecial #55
1019: ldc           #56
1021: invokevirtual #57
1024: aload         48
1026: invokevirtual #82
1029: ldc           #59
1031: invokevirtual #57
1034: getstatic     #78
1037: invokevirtual #82
1040: ldc           #56
1042: invokevirtual #57
1045: invokevirtual #60
1048: aload         48
1050: getstatic     #78
1053: invokevirtual #83
1056: invokestatic  #61
1059: aload         49
1061: invokestatic  #47
1064: aload         50
1066: invokestatic  #47
1069: new           #54
1072: dup
1073: invokespecial #55
1076: ldc           #56
1078: invokevirtual #57
1081: aload         51
1083: invokevirtual #82
1086: ldc           #59
1088: invokevirtual #57
1091: getstatic     #78
1094: invokevirtual #82
1097: ldc           #56
1099: invokevirtual #57
1102: invokevirtual #60
1105: aload         51
1107: getstatic     #78
1110: invokevirtual #83
1113: invokestatic  #61
1116: aload         52
1118: invokestatic  #47
1121: aload         53
1123: invokestatic  #47
1126: new           #54
1129: dup
1130: invokespecial #55
1133: ldc           #56
1135: invokevirtual #57
1138: dload         54
1140: invokevirtual #58
1143: ldc           #59
1145: invokevirtual #57
1148: ldc2_w        #935
1151: invokevirtual #58
1154: ldc           #56
1156: invokevirtual #57
1159: invokevirtual #60
1162: dload         54
1164: ldc2_w        #935
1167: dcmpl
1168: ifne          1175
1171: iconst_1
1172: goto          1176
1175: iconst_0
1176: invokestatic  #61
1179: aload         56
1181: invokestatic  #47
1184: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test298
Start line: 13875
End line: 13961
Method source code: 
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        int int28 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker29 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction31 = null;
        org.apache.commons.math3.analysis.function.Sin sin32 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray37 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin32, sin33, sin35, sin36 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable38 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.compose(univariateDifferentiableArray37);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction41 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable40);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction43 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction31, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable40, (double) 0.0f);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer47 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker46);
        int int48 = brentOptimizer47.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction52 = sin51.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray53 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin50, sin51 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable54 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray53);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable55 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray53);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray53);
        org.apache.commons.math3.optimization.GoalType goalType57 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer47.optimize(97, univariateFunction56, goalType57, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair65 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable40, goalType57, (double) (byte) 0, 1376.7726074588156d, (-0.8414709848078965d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker29);
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray37);
        org.junit.Assert.assertNotNull(univariateDifferentiable38);
        org.junit.Assert.assertNotNull(univariateFunction39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction41);
        org.junit.Assert.assertNotNull(multivariateFunction43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(univariateFunction52);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray53);
        org.junit.Assert.assertNotNull(univariateDifferentiable54);
        org.junit.Assert.assertNotNull(univariateDifferentiable55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertTrue("'" + goalType57 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType57.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #983
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #71
197: istore        20
199: aload_2
200: invokevirtual #103
203: astore        21
205: aconst_null
206: astore        22
208: new           #72
211: dup
212: invokespecial #73
215: astore        23
217: new           #72
220: dup
221: invokespecial #73
224: astore        24
226: aload         24
228: invokevirtual #74
231: astore        25
233: new           #72
236: dup
237: invokespecial #73
240: astore        26
242: new           #72
245: dup
246: invokespecial #73
249: astore        27
251: iconst_4
252: anewarray     #75
255: dup
256: iconst_0
257: aload         23
259: aastore
260: dup
261: iconst_1
262: aload         24
264: aastore
265: dup
266: iconst_2
267: aload         26
269: aastore
270: dup
271: iconst_3
272: aload         27
274: aastore
275: astore        28
277: aload         28
279: invokestatic  #76
282: astore        29
284: aload         28
286: checkcast     #89
289: invokestatic  #109
292: astore        30
294: aload         28
296: invokestatic  #280
299: astore        31
301: aload         31
303: invokestatic  #281
306: astore        32
308: aload         22
310: aload         31
312: dconst_0
313: invokestatic  #183
316: astore        33
318: aconst_null
319: astore        34
321: new           #8
324: dup
325: ldc2_w        #31
328: ldc2_w        #33
331: aload         34
333: invokespecial #13
336: astore        35
338: aload         35
340: invokevirtual #71
343: istore        36
345: new           #72
348: dup
349: invokespecial #73
352: astore        37
354: new           #72
357: dup
358: invokespecial #73
361: astore        38
363: aload         38
365: invokevirtual #74
368: astore        39
370: iconst_2
371: anewarray     #75
374: dup
375: iconst_0
376: aload         37
378: aastore
379: dup
380: iconst_1
381: aload         38
383: aastore
384: astore        40
386: aload         40
388: invokestatic  #76
391: astore        41
393: aload         40
395: invokestatic  #77
398: astore        42
400: aload         40
402: checkcast     #89
405: invokestatic  #90
408: astore        43
410: getstatic     #78
413: astore        44
415: aload         35
417: bipush        97
419: aload         43
421: aload         44
423: ldc2_w        #91
426: ldc2_w        #93
429: ldc2_w        #91
432: invokevirtual #44
435: astore        45
437: aload_2
438: iconst_0
439: aload         31
441: aload         44
443: dconst_0
444: ldc2_w        #984
447: ldc2_w        #986
450: invokevirtual #44
453: astore        46
455: ldc           #52
457: invokestatic  #15
460: goto          465
463: astore        46
465: new           #54
468: dup
469: invokespecial #55
472: ldc           #56
474: invokevirtual #57
477: iload_3
478: invokevirtual #62
481: ldc           #59
483: invokevirtual #57
486: iconst_0
487: invokevirtual #62
490: ldc           #56
492: invokevirtual #57
495: invokevirtual #60
498: iload_3
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #61
510: aload         6
512: invokestatic  #47
515: aload         7
517: invokestatic  #47
520: aload         8
522: invokestatic  #47
525: aload         9
527: invokestatic  #47
530: aload         10
532: invokestatic  #47
535: new           #54
538: dup
539: invokespecial #55
542: ldc           #56
544: invokevirtual #57
547: aload         11
549: invokevirtual #82
552: ldc           #59
554: invokevirtual #57
557: getstatic     #78
560: invokevirtual #82
563: ldc           #56
565: invokevirtual #57
568: invokevirtual #60
571: aload         11
573: getstatic     #78
576: invokevirtual #83
579: invokestatic  #61
582: aload         12
584: invokestatic  #47
587: aload         13
589: invokestatic  #47
592: new           #54
595: dup
596: invokespecial #55
599: ldc           #56
601: invokevirtual #57
604: aload         14
606: invokevirtual #82
609: ldc           #59
611: invokevirtual #57
614: getstatic     #78
617: invokevirtual #82
620: ldc           #56
622: invokevirtual #57
625: invokevirtual #60
628: aload         14
630: getstatic     #78
633: invokevirtual #83
636: invokestatic  #61
639: aload         15
641: invokestatic  #47
644: aload         17
646: invokestatic  #47
649: new           #54
652: dup
653: invokespecial #55
656: ldc           #56
658: invokevirtual #57
661: aload         18
663: invokevirtual #82
666: ldc           #59
668: invokevirtual #57
671: getstatic     #78
674: invokevirtual #82
677: ldc           #56
679: invokevirtual #57
682: invokevirtual #60
685: aload         18
687: getstatic     #78
690: invokevirtual #83
693: invokestatic  #61
696: aload         19
698: invokestatic  #47
701: new           #54
704: dup
705: invokespecial #55
708: ldc           #56
710: invokevirtual #57
713: iload         20
715: invokevirtual #62
718: ldc           #59
720: invokevirtual #57
723: iconst_1
724: invokevirtual #62
727: ldc           #56
729: invokevirtual #57
732: invokevirtual #60
735: iload         20
737: iconst_1
738: if_icmpne     745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #61
749: aload         21
751: invokestatic  #104
754: aload         25
756: invokestatic  #47
759: aload         28
761: invokestatic  #47
764: aload         29
766: invokestatic  #47
769: aload         30
771: invokestatic  #47
774: aload         31
776: invokestatic  #47
779: aload         32
781: invokestatic  #47
784: aload         33
786: invokestatic  #47
789: new           #54
792: dup
793: invokespecial #55
796: ldc           #56
798: invokevirtual #57
801: iload         36
803: invokevirtual #62
806: ldc           #59
808: invokevirtual #57
811: iconst_0
812: invokevirtual #62
815: ldc           #56
817: invokevirtual #57
820: invokevirtual #60
823: iload         36
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #61
836: aload         39
838: invokestatic  #47
841: aload         40
843: invokestatic  #47
846: aload         41
848: invokestatic  #47
851: aload         42
853: invokestatic  #47
856: aload         43
858: invokestatic  #47
861: new           #54
864: dup
865: invokespecial #55
868: ldc           #56
870: invokevirtual #57
873: aload         44
875: invokevirtual #82
878: ldc           #59
880: invokevirtual #57
883: getstatic     #78
886: invokevirtual #82
889: ldc           #56
891: invokevirtual #57
894: invokevirtual #60
897: aload         44
899: getstatic     #78
902: invokevirtual #83
905: invokestatic  #61
908: aload         45
910: invokestatic  #47
913: return
Exception table:
from    to  target type
437   460   463   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test299
Start line: 13964
End line: 14071
Method source code: 
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable7 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray8 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction9 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException10 = new org.apache.commons.math3.exception.MathArithmeticException(localizable7, (java.lang.Object[]) differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction11 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray8);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable14 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction13);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction15 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(univariateDifferentiable14);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = differentiableUnivariateFunction15.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable17 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction15);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction18 = differentiableUnivariateFunction15.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker21 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer22 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker21);
        int int23 = brentOptimizer22.getEvaluations();
        int int24 = brentOptimizer22.getEvaluations();
        int int25 = brentOptimizer22.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker26 = brentOptimizer22.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable28 = null;
        org.apache.commons.math3.exception.util.Localizable localizable30 = null;
        org.apache.commons.math3.exception.util.Localizable localizable32 = null;
        org.apache.commons.math3.exception.util.Localizable localizable33 = null;
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin35 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction36 = sin35.derivative();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin38 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray39 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin34, sin35, sin37, sin38 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable40 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray39);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException41 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable33, (java.lang.Object[]) univariateDifferentiableArray39);
        org.apache.commons.math3.exception.MathInternalError mathInternalError42 = new org.apache.commons.math3.exception.MathInternalError(localizable32, (java.lang.Object[]) univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable43 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray39);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException44 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable30, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable46 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray39);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException47 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable28, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray39);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray39);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer52 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker51);
        int int53 = brentOptimizer52.getEvaluations();
        int int54 = brentOptimizer52.getEvaluations();
        int int55 = brentOptimizer52.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction57 = null;
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = sin59.derivative();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray63 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin58, sin59, sin61, sin62 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable64 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable66 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray63);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction68 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction57, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable66, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType69 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer52.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable66, goalType69, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair77 = brentOptimizer22.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable48, goalType69, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        org.apache.commons.math3.optimization.GoalType goalType78 = brentOptimizer22.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair81 = brentOptimizer3.optimize((int) (short) -1, univariateFunction18, goalType78, 0.0d, 57295.77951308232d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (-1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray8);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction9);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction12);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertNotNull(univariateDifferentiable14);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertNotNull(univariateDifferentiable17);
        org.junit.Assert.assertNotNull(univariateFunction18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker26);
        org.junit.Assert.assertNotNull(univariateFunction36);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray39);
        org.junit.Assert.assertNotNull(univariateDifferentiable40);
        org.junit.Assert.assertNotNull(univariateDifferentiable43);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateDifferentiable46);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction60);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray63);
        org.junit.Assert.assertNotNull(univariateDifferentiable64);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiable66);
        org.junit.Assert.assertNotNull(multivariateFunction68);
        org.junit.Assert.assertTrue("'" + goalType69 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType69.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair77);
        org.junit.Assert.assertTrue("'" + goalType78 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType78.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #988
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aconst_null
54: astore        6
56: iconst_0
57: anewarray     #141
60: astore        7
62: aload         7
64: invokestatic  #142
67: astore        8
69: new           #273
72: dup
73: aload         6
75: aload         7
77: checkcast     #123
80: invokespecial #274
83: astore        9
85: aload         7
87: invokestatic  #245
90: astore        10
92: aload         7
94: invokestatic  #245
97: astore        11
99: aload         7
101: invokestatic  #245
104: astore        12
106: aload         12
108: invokestatic  #143
111: astore        13
113: aload         13
115: invokestatic  #281
118: astore        14
120: aload         14
122: invokeinterface #549,  1
127: astore        15
129: aload         14
131: invokestatic  #143
134: astore        16
136: aload         14
138: invokeinterface #549,  1
143: astore        17
145: aconst_null
146: astore        18
148: new           #8
151: dup
152: ldc2_w        #31
155: ldc2_w        #33
158: aload         18
160: invokespecial #13
163: astore        19
165: aload         19
167: invokevirtual #71
170: istore        20
172: aload         19
174: invokevirtual #71
177: istore        21
179: aload         19
181: invokevirtual #50
184: istore        22
186: aload         19
188: invokevirtual #103
191: astore        23
193: aconst_null
194: astore        24
196: aconst_null
197: astore        25
199: aconst_null
200: astore        26
202: aconst_null
203: astore        27
205: new           #72
208: dup
209: invokespecial #73
212: astore        28
214: new           #72
217: dup
218: invokespecial #73
221: astore        29
223: aload         29
225: invokevirtual #74
228: astore        30
230: new           #72
233: dup
234: invokespecial #73
237: astore        31
239: new           #72
242: dup
243: invokespecial #73
246: astore        32
248: iconst_4
249: anewarray     #75
252: dup
253: iconst_0
254: aload         28
256: aastore
257: dup
258: iconst_1
259: aload         29
261: aastore
262: dup
263: iconst_2
264: aload         31
266: aastore
267: dup
268: iconst_3
269: aload         32
271: aastore
272: astore        33
274: aload         33
276: invokestatic  #76
279: astore        34
281: new           #122
284: dup
285: aload         27
287: aload         33
289: checkcast     #123
292: invokespecial #124
295: astore        35
297: new           #125
300: dup
301: aload         26
303: aload         33
305: checkcast     #123
308: invokespecial #126
311: astore        36
313: aload         33
315: invokestatic  #77
318: astore        37
320: new           #313
323: dup
324: aload         25
326: ldc2_w        #79
329: invokestatic  #314
332: aload         33
334: checkcast     #123
337: invokespecial #315
340: astore        38
342: aload         33
344: invokestatic  #76
347: astore        39
349: aload         33
351: invokestatic  #76
354: astore        40
356: new           #313
359: dup
360: aload         24
362: ldc2_w        #202
365: invokestatic  #314
368: aload         33
370: checkcast     #123
373: invokespecial #315
376: astore        41
378: aload         33
380: invokestatic  #77
383: astore        42
385: aconst_null
386: astore        43
388: new           #8
391: dup
392: ldc2_w        #31
395: ldc2_w        #33
398: aload         43
400: invokespecial #13
403: astore        44
405: aload         44
407: invokevirtual #71
410: istore        45
412: aload         44
414: invokevirtual #71
417: istore        46
419: aload         44
421: invokevirtual #71
424: istore        47
426: aconst_null
427: astore        48
429: new           #72
432: dup
433: invokespecial #73
436: astore        49
438: new           #72
441: dup
442: invokespecial #73
445: astore        50
447: aload         50
449: invokevirtual #74
452: astore        51
454: new           #72
457: dup
458: invokespecial #73
461: astore        52
463: new           #72
466: dup
467: invokespecial #73
470: astore        53
472: iconst_4
473: anewarray     #75
476: dup
477: iconst_0
478: aload         49
480: aastore
481: dup
482: iconst_1
483: aload         50
485: aastore
486: dup
487: iconst_2
488: aload         52
490: aastore
491: dup
492: iconst_3
493: aload         53
495: aastore
496: astore        54
498: aload         54
500: invokestatic  #76
503: astore        55
505: aload         54
507: checkcast     #89
510: invokestatic  #109
513: astore        56
515: aload         54
517: invokestatic  #77
520: astore        57
522: aload         48
524: aload         57
526: ldc2_w        #181
529: invokestatic  #183
532: astore        58
534: getstatic     #118
537: astore        59
539: aload         44
541: bipush        10
543: aload         57
545: aload         59
547: ldc2_w        #184
550: ldc2_w        #186
553: ldc2_w        #188
556: invokevirtual #44
559: astore        60
561: aload         19
563: bipush        97
565: aload         42
567: aload         59
569: dconst_0
570: ldc2_w        #543
573: ldc2_w        #545
576: invokevirtual #44
579: astore        61
581: aload         19
583: invokevirtual #110
586: astore        62
588: aload_2
589: iconst_m1
590: aload         17
592: aload         62
594: dconst_0
595: ldc2_w        #989
598: invokevirtual #81
601: astore        63
603: ldc_w         #308
606: invokestatic  #15
609: goto          614
612: astore        63
614: new           #54
617: dup
618: invokespecial #55
621: ldc           #56
623: invokevirtual #57
626: dload_3
627: invokevirtual #58
630: ldc           #59
632: invokevirtual #57
635: dconst_0
636: invokevirtual #58
639: ldc           #56
641: invokevirtual #57
644: invokevirtual #60
647: dload_3
648: dconst_0
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #61
661: new           #54
664: dup
665: invokespecial #55
668: ldc           #56
670: invokevirtual #57
673: iload         5
675: invokevirtual #62
678: ldc           #59
680: invokevirtual #57
683: iconst_0
684: invokevirtual #62
687: ldc           #56
689: invokevirtual #57
692: invokevirtual #60
695: iload         5
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #61
708: aload         7
710: invokestatic  #47
713: aload         8
715: invokestatic  #47
718: aload         10
720: invokestatic  #47
723: aload         11
725: invokestatic  #47
728: aload         12
730: invokestatic  #47
733: aload         13
735: invokestatic  #47
738: aload         14
740: invokestatic  #47
743: aload         15
745: invokestatic  #47
748: aload         16
750: invokestatic  #47
753: aload         17
755: invokestatic  #47
758: new           #54
761: dup
762: invokespecial #55
765: ldc           #56
767: invokevirtual #57
770: iload         20
772: invokevirtual #62
775: ldc           #59
777: invokevirtual #57
780: iconst_0
781: invokevirtual #62
784: ldc           #56
786: invokevirtual #57
789: invokevirtual #60
792: iload         20
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #61
805: new           #54
808: dup
809: invokespecial #55
812: ldc           #56
814: invokevirtual #57
817: iload         21
819: invokevirtual #62
822: ldc           #59
824: invokevirtual #57
827: iconst_0
828: invokevirtual #62
831: ldc           #56
833: invokevirtual #57
836: invokevirtual #60
839: iload         21
841: ifne          848
844: iconst_1
845: goto          849
848: iconst_0
849: invokestatic  #61
852: new           #54
855: dup
856: invokespecial #55
859: ldc           #56
861: invokevirtual #57
864: iload         22
866: invokevirtual #62
869: ldc           #59
871: invokevirtual #57
874: iconst_0
875: invokevirtual #62
878: ldc           #56
880: invokevirtual #57
883: invokevirtual #60
886: iload         22
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #61
899: aload         23
901: invokestatic  #104
904: aload         30
906: invokestatic  #47
909: aload         33
911: invokestatic  #47
914: aload         34
916: invokestatic  #47
919: aload         37
921: invokestatic  #47
924: aload         39
926: invokestatic  #47
929: aload         40
931: invokestatic  #47
934: aload         42
936: invokestatic  #47
939: new           #54
942: dup
943: invokespecial #55
946: ldc           #56
948: invokevirtual #57
951: iload         45
953: invokevirtual #62
956: ldc           #59
958: invokevirtual #57
961: iconst_0
962: invokevirtual #62
965: ldc           #56
967: invokevirtual #57
970: invokevirtual #60
973: iload         45
975: ifne          982
978: iconst_1
979: goto          983
982: iconst_0
983: invokestatic  #61
986: new           #54
989: dup
990: invokespecial #55
993: ldc           #56
995: invokevirtual #57
998: iload         46
1000: invokevirtual #62
1003: ldc           #59
1005: invokevirtual #57
1008: iconst_0
1009: invokevirtual #62
1012: ldc           #56
1014: invokevirtual #57
1017: invokevirtual #60
1020: iload         46
1022: ifne          1029
1025: iconst_1
1026: goto          1030
1029: iconst_0
1030: invokestatic  #61
1033: new           #54
1036: dup
1037: invokespecial #55
1040: ldc           #56
1042: invokevirtual #57
1045: iload         47
1047: invokevirtual #62
1050: ldc           #59
1052: invokevirtual #57
1055: iconst_0
1056: invokevirtual #62
1059: ldc           #56
1061: invokevirtual #57
1064: invokevirtual #60
1067: iload         47
1069: ifne          1076
1072: iconst_1
1073: goto          1077
1076: iconst_0
1077: invokestatic  #61
1080: aload         51
1082: invokestatic  #47
1085: aload         54
1087: invokestatic  #47
1090: aload         55
1092: invokestatic  #47
1095: aload         56
1097: invokestatic  #47
1100: aload         57
1102: invokestatic  #47
1105: aload         58
1107: invokestatic  #47
1110: new           #54
1113: dup
1114: invokespecial #55
1117: ldc           #56
1119: invokevirtual #57
1122: aload         59
1124: invokevirtual #82
1127: ldc           #59
1129: invokevirtual #57
1132: getstatic     #118
1135: invokevirtual #82
1138: ldc           #56
1140: invokevirtual #57
1143: invokevirtual #60
1146: aload         59
1148: getstatic     #118
1151: invokevirtual #83
1154: invokestatic  #61
1157: aload         60
1159: invokestatic  #47
1162: aload         61
1164: invokestatic  #47
1167: new           #54
1170: dup
1171: invokespecial #55
1174: ldc           #56
1176: invokevirtual #57
1179: aload         62
1181: invokevirtual #82
1184: ldc           #59
1186: invokevirtual #57
1189: getstatic     #118
1192: invokevirtual #82
1195: ldc           #56
1197: invokevirtual #57
1200: invokevirtual #60
1203: aload         62
1205: getstatic     #118
1208: invokevirtual #83
1211: invokestatic  #61
1214: return
Exception table:
from    to  target type
588   609   612   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test300
Start line: 14074
End line: 14081
Method source code: 
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(89008.81499761475d, 5.2518138795992752E16d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #991
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #992
34: ldc2_w        #899
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #103
46: astore_3
47: aload_3
48: invokestatic  #104
51: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test301
Start line: 14084
End line: 14093
Method source code: 
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 524, 1.2177655131703127d, univariatePointValuePairConvergenceChecker2);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker4 = brentOptimizer3.getConvergenceChecker();
        double double5 = brentOptimizer3.getMin();
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #994
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #421
34: ldc2_w        #306
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #103
46: astore_3
47: aload_2
48: invokevirtual #231
51: dstore        4
53: aload_3
54: invokestatic  #104
57: new           #54
60: dup
61: invokespecial #55
64: ldc           #56
66: invokevirtual #57
69: dload         4
71: invokevirtual #58
74: ldc           #59
76: invokevirtual #57
79: dconst_0
80: invokevirtual #58
83: ldc           #56
85: invokevirtual #57
88: invokevirtual #60
91: dload         4
93: dconst_0
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #61
106: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test302
Start line: 14096
End line: 14108
Method source code: 
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 524, 1.2177655131703127d, univariatePointValuePairConvergenceChecker2);
        // The following exception was thrown during execution in test generation
        try {
            double double5 = brentOptimizer3.computeObjectiveValue(0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #995
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #421
34: ldc2_w        #306
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: dconst_0
44: invokevirtual #158
47: dstore_3
48: ldc           #52
50: invokestatic  #15
53: goto          57
56: astore_3
57: return
Exception table:
from    to  target type
42    53    56   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test303
Start line: 14111
End line: 14175
Method source code: 
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = brentOptimizer3.getGoalType();
        double double6 = brentOptimizer3.getMin();
        int int7 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker8 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction10 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker13 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer14 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker13);
        int int15 = brentOptimizer14.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin17 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction19 = sin18.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin17, sin18 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable22 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray20);
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair28 = brentOptimizer14.optimize(97, univariateFunction23, goalType24, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair29 = brentOptimizer14.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType30 = brentOptimizer14.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair31 = brentOptimizer14.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        org.apache.commons.math3.optimization.GoalType goalType35 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair38 = brentOptimizer14.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin33, goalType35, 3.141592653589793d, 0.0d);
        double double39 = brentOptimizer14.getMax();
        int int40 = brentOptimizer14.getMaxEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair41 = brentOptimizer14.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType42 = brentOptimizer14.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair45 = brentOptimizer3.optimize((-54), univariateFunction10, goalType42, 0.8015542873103736d, 5.551115123125783E-17d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(univariateFunction19);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable22);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair28);
        org.junit.Assert.assertNotNull(univariatePointValuePair29);
        org.junit.Assert.assertTrue("'" + goalType30 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType30.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair31);
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertTrue("'" + goalType35 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType35.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 97 + "'", int40 == 97);
        org.junit.Assert.assertNotNull(univariatePointValuePair41);
        org.junit.Assert.assertTrue("'" + goalType42 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType42.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #996
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #110
51: astore        4
53: aload_2
54: invokevirtual #231
57: dstore        5
59: aload_2
60: invokevirtual #50
63: istore        7
65: aload_2
66: invokevirtual #103
69: astore        8
71: aconst_null
72: astore        9
74: aconst_null
75: astore        10
77: new           #8
80: dup
81: ldc2_w        #31
84: ldc2_w        #33
87: aload         10
89: invokespecial #13
92: astore        11
94: aload         11
96: invokevirtual #71
99: istore        12
101: new           #72
104: dup
105: invokespecial #73
108: astore        13
110: new           #72
113: dup
114: invokespecial #73
117: astore        14
119: aload         14
121: invokevirtual #74
124: astore        15
126: iconst_2
127: anewarray     #75
130: dup
131: iconst_0
132: aload         13
134: aastore
135: dup
136: iconst_1
137: aload         14
139: aastore
140: astore        16
142: aload         16
144: invokestatic  #76
147: astore        17
149: aload         16
151: invokestatic  #77
154: astore        18
156: aload         16
158: checkcast     #89
161: invokestatic  #90
164: astore        19
166: getstatic     #78
169: astore        20
171: aload         11
173: bipush        97
175: aload         19
177: aload         20
179: ldc2_w        #91
182: ldc2_w        #93
185: ldc2_w        #91
188: invokevirtual #44
191: astore        21
193: aload         11
195: invokevirtual #51
198: astore        22
200: aload         11
202: invokevirtual #110
205: astore        23
207: aload         11
209: invokevirtual #51
212: astore        24
214: new           #72
217: dup
218: invokespecial #73
221: astore        25
223: aload         25
225: invokevirtual #74
228: astore        26
230: getstatic     #78
233: astore        27
235: aload         11
237: bipush        97
239: aload         25
241: aload         27
243: ldc2_w        #133
246: dconst_0
247: invokevirtual #81
250: astore        28
252: aload         11
254: invokevirtual #49
257: dstore        29
259: aload         11
261: invokevirtual #50
264: istore        31
266: aload         11
268: invokevirtual #51
271: astore        32
273: aload         11
275: invokevirtual #110
278: astore        33
280: aload_2
281: bipush        -54
283: aload         9
285: aload         33
287: ldc2_w        #997
290: ldc2_w        #999
293: invokevirtual #81
296: astore        34
298: ldc           #45
300: invokestatic  #15
303: goto          308
306: astore        34
308: new           #54
311: dup
312: invokespecial #55
315: ldc           #56
317: invokevirtual #57
320: iload_3
321: invokevirtual #62
324: ldc           #59
326: invokevirtual #57
329: iconst_0
330: invokevirtual #62
333: ldc           #56
335: invokevirtual #57
338: invokevirtual #60
341: iload_3
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #61
353: aload         4
355: invokestatic  #104
358: new           #54
361: dup
362: invokespecial #55
365: ldc           #56
367: invokevirtual #57
370: dload         5
372: invokevirtual #58
375: ldc           #59
377: invokevirtual #57
380: dconst_0
381: invokevirtual #58
384: ldc           #56
386: invokevirtual #57
389: invokevirtual #60
392: dload         5
394: dconst_0
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #61
407: new           #54
410: dup
411: invokespecial #55
414: ldc           #56
416: invokevirtual #57
419: iload         7
421: invokevirtual #62
424: ldc           #59
426: invokevirtual #57
429: iconst_0
430: invokevirtual #62
433: ldc           #56
435: invokevirtual #57
438: invokevirtual #60
441: iload         7
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #61
454: aload         8
456: invokestatic  #104
459: new           #54
462: dup
463: invokespecial #55
466: ldc           #56
468: invokevirtual #57
471: iload         12
473: invokevirtual #62
476: ldc           #59
478: invokevirtual #57
481: iconst_0
482: invokevirtual #62
485: ldc           #56
487: invokevirtual #57
490: invokevirtual #60
493: iload         12
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #61
506: aload         15
508: invokestatic  #47
511: aload         16
513: invokestatic  #47
516: aload         17
518: invokestatic  #47
521: aload         18
523: invokestatic  #47
526: aload         19
528: invokestatic  #47
531: new           #54
534: dup
535: invokespecial #55
538: ldc           #56
540: invokevirtual #57
543: aload         20
545: invokevirtual #82
548: ldc           #59
550: invokevirtual #57
553: getstatic     #78
556: invokevirtual #82
559: ldc           #56
561: invokevirtual #57
564: invokevirtual #60
567: aload         20
569: getstatic     #78
572: invokevirtual #83
575: invokestatic  #61
578: aload         21
580: invokestatic  #47
583: aload         22
585: invokestatic  #47
588: new           #54
591: dup
592: invokespecial #55
595: ldc           #56
597: invokevirtual #57
600: aload         23
602: invokevirtual #82
605: ldc           #59
607: invokevirtual #57
610: getstatic     #78
613: invokevirtual #82
616: ldc           #56
618: invokevirtual #57
621: invokevirtual #60
624: aload         23
626: getstatic     #78
629: invokevirtual #83
632: invokestatic  #61
635: aload         24
637: invokestatic  #47
640: aload         26
642: invokestatic  #47
645: new           #54
648: dup
649: invokespecial #55
652: ldc           #56
654: invokevirtual #57
657: aload         27
659: invokevirtual #82
662: ldc           #59
664: invokevirtual #57
667: getstatic     #78
670: invokevirtual #82
673: ldc           #56
675: invokevirtual #57
678: invokevirtual #60
681: aload         27
683: getstatic     #78
686: invokevirtual #83
689: invokestatic  #61
692: aload         28
694: invokestatic  #47
697: new           #54
700: dup
701: invokespecial #55
704: ldc           #56
706: invokevirtual #57
709: dload         29
711: invokevirtual #58
714: ldc           #59
716: invokevirtual #57
719: dconst_0
720: invokevirtual #58
723: ldc           #56
725: invokevirtual #57
728: invokevirtual #60
731: dload         29
733: dconst_0
734: dcmpl
735: ifne          742
738: iconst_1
739: goto          743
742: iconst_0
743: invokestatic  #61
746: new           #54
749: dup
750: invokespecial #55
753: ldc           #56
755: invokevirtual #57
758: iload         31
760: invokevirtual #62
763: ldc           #59
765: invokevirtual #57
768: bipush        97
770: invokevirtual #62
773: ldc           #56
775: invokevirtual #57
778: invokevirtual #60
781: iload         31
783: bipush        97
785: if_icmpne     792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #61
796: aload         32
798: invokestatic  #47
801: new           #54
804: dup
805: invokespecial #55
808: ldc           #56
810: invokevirtual #57
813: aload         33
815: invokevirtual #82
818: ldc           #59
820: invokevirtual #57
823: getstatic     #78
826: invokevirtual #82
829: ldc           #56
831: invokevirtual #57
834: invokevirtual #60
837: aload         33
839: getstatic     #78
842: invokevirtual #83
845: invokestatic  #61
848: return
Exception table:
from    to  target type
280   303   306   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test304
Start line: 14178
End line: 14190
Method source code: 
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        int int3 = brentOptimizer2.getEvaluations();
        int int4 = brentOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = brentOptimizer2.getGoalType();
        int int6 = brentOptimizer2.getEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1001
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #71
48: istore_3
49: aload_1
50: invokevirtual #110
53: astore        4
55: aload_1
56: invokevirtual #71
59: istore        5
61: new           #54
64: dup
65: invokespecial #55
68: ldc           #56
70: invokevirtual #57
73: iload_2
74: invokevirtual #62
77: ldc           #59
79: invokevirtual #57
82: iconst_0
83: invokevirtual #62
86: ldc           #56
88: invokevirtual #57
91: invokevirtual #60
94: iload_2
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #61
106: new           #54
109: dup
110: invokespecial #55
113: ldc           #56
115: invokevirtual #57
118: iload_3
119: invokevirtual #62
122: ldc           #59
124: invokevirtual #57
127: iconst_0
128: invokevirtual #62
131: ldc           #56
133: invokevirtual #57
136: invokevirtual #60
139: iload_3
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #61
151: aload         4
153: invokestatic  #104
156: new           #54
159: dup
160: invokespecial #55
163: ldc           #56
165: invokevirtual #57
168: iload         5
170: invokevirtual #62
173: ldc           #59
175: invokevirtual #57
178: iconst_0
179: invokevirtual #62
182: ldc           #56
184: invokevirtual #57
187: invokevirtual #60
190: iload         5
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #61
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test305
Start line: 14193
End line: 14267
Method source code: 
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker7 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.exception.util.Localizable localizable11 = null;
        org.apache.commons.math3.exception.util.Localizable localizable13 = null;
        org.apache.commons.math3.exception.util.Localizable localizable14 = null;
        org.apache.commons.math3.analysis.function.Sin sin15 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin16 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction17 = sin16.derivative();
        org.apache.commons.math3.analysis.function.Sin sin18 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin19 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray20 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin15, sin16, sin18, sin19 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable21 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException22 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable14, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MathInternalError mathInternalError23 = new org.apache.commons.math3.exception.MathInternalError(localizable13, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable24 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException25 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable11, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray20);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException28 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable9, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray20);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray20);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer33 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker32);
        int int34 = brentOptimizer33.getEvaluations();
        int int35 = brentOptimizer33.getEvaluations();
        int int36 = brentOptimizer33.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction38 = null;
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction49 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction38, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType50 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair54 = brentOptimizer33.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType50, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair58 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable29, goalType50, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        org.apache.commons.math3.optimization.GoalType goalType59 = brentOptimizer3.getGoalType();
        double double60 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker7);
        org.junit.Assert.assertNotNull(univariateFunction17);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray20);
        org.junit.Assert.assertNotNull(univariateDifferentiable21);
        org.junit.Assert.assertNotNull(univariateDifferentiable24);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(multivariateFunction49);
        org.junit.Assert.assertTrue("'" + goalType50 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType50.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair54);
        org.junit.Assert.assertNotNull(univariatePointValuePair58);
        org.junit.Assert.assertTrue("'" + goalType59 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType59.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1002
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #103
63: astore        6
65: aconst_null
66: astore        7
68: aconst_null
69: astore        8
71: aconst_null
72: astore        9
74: aconst_null
75: astore        10
77: new           #72
80: dup
81: invokespecial #73
84: astore        11
86: new           #72
89: dup
90: invokespecial #73
93: astore        12
95: aload         12
97: invokevirtual #74
100: astore        13
102: new           #72
105: dup
106: invokespecial #73
109: astore        14
111: new           #72
114: dup
115: invokespecial #73
118: astore        15
120: iconst_4
121: anewarray     #75
124: dup
125: iconst_0
126: aload         11
128: aastore
129: dup
130: iconst_1
131: aload         12
133: aastore
134: dup
135: iconst_2
136: aload         14
138: aastore
139: dup
140: iconst_3
141: aload         15
143: aastore
144: astore        16
146: aload         16
148: invokestatic  #76
151: astore        17
153: new           #122
156: dup
157: aload         10
159: aload         16
161: checkcast     #123
164: invokespecial #124
167: astore        18
169: new           #125
172: dup
173: aload         9
175: aload         16
177: checkcast     #123
180: invokespecial #126
183: astore        19
185: aload         16
187: invokestatic  #77
190: astore        20
192: new           #313
195: dup
196: aload         8
198: ldc2_w        #79
201: invokestatic  #314
204: aload         16
206: checkcast     #123
209: invokespecial #315
212: astore        21
214: aload         16
216: invokestatic  #76
219: astore        22
221: aload         16
223: invokestatic  #76
226: astore        23
228: new           #313
231: dup
232: aload         7
234: ldc2_w        #202
237: invokestatic  #314
240: aload         16
242: checkcast     #123
245: invokespecial #315
248: astore        24
250: aload         16
252: invokestatic  #77
255: astore        25
257: aconst_null
258: astore        26
260: new           #8
263: dup
264: ldc2_w        #31
267: ldc2_w        #33
270: aload         26
272: invokespecial #13
275: astore        27
277: aload         27
279: invokevirtual #71
282: istore        28
284: aload         27
286: invokevirtual #71
289: istore        29
291: aload         27
293: invokevirtual #71
296: istore        30
298: aconst_null
299: astore        31
301: new           #72
304: dup
305: invokespecial #73
308: astore        32
310: new           #72
313: dup
314: invokespecial #73
317: astore        33
319: aload         33
321: invokevirtual #74
324: astore        34
326: new           #72
329: dup
330: invokespecial #73
333: astore        35
335: new           #72
338: dup
339: invokespecial #73
342: astore        36
344: iconst_4
345: anewarray     #75
348: dup
349: iconst_0
350: aload         32
352: aastore
353: dup
354: iconst_1
355: aload         33
357: aastore
358: dup
359: iconst_2
360: aload         35
362: aastore
363: dup
364: iconst_3
365: aload         36
367: aastore
368: astore        37
370: aload         37
372: invokestatic  #76
375: astore        38
377: aload         37
379: checkcast     #89
382: invokestatic  #109
385: astore        39
387: aload         37
389: invokestatic  #77
392: astore        40
394: aload         31
396: aload         40
398: ldc2_w        #181
401: invokestatic  #183
404: astore        41
406: getstatic     #118
409: astore        42
411: aload         27
413: bipush        10
415: aload         40
417: aload         42
419: ldc2_w        #184
422: ldc2_w        #186
425: ldc2_w        #188
428: invokevirtual #44
431: astore        43
433: aload_2
434: bipush        97
436: aload         25
438: aload         42
440: dconst_0
441: ldc2_w        #543
444: ldc2_w        #545
447: invokevirtual #44
450: astore        44
452: aload_2
453: invokevirtual #110
456: astore        45
458: aload_2
459: invokevirtual #231
462: dstore        46
464: new           #54
467: dup
468: invokespecial #55
471: ldc           #56
473: invokevirtual #57
476: iload_3
477: invokevirtual #62
480: ldc           #59
482: invokevirtual #57
485: iconst_0
486: invokevirtual #62
489: ldc           #56
491: invokevirtual #57
494: invokevirtual #60
497: iload_3
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #61
509: new           #54
512: dup
513: invokespecial #55
516: ldc           #56
518: invokevirtual #57
521: iload         4
523: invokevirtual #62
526: ldc           #59
528: invokevirtual #57
531: iconst_0
532: invokevirtual #62
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: iload         4
545: ifne          552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #61
556: new           #54
559: dup
560: invokespecial #55
563: ldc           #56
565: invokevirtual #57
568: iload         5
570: invokevirtual #62
573: ldc           #59
575: invokevirtual #57
578: iconst_0
579: invokevirtual #62
582: ldc           #56
584: invokevirtual #57
587: invokevirtual #60
590: iload         5
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #61
603: aload         6
605: invokestatic  #104
608: aload         13
610: invokestatic  #47
613: aload         16
615: invokestatic  #47
618: aload         17
620: invokestatic  #47
623: aload         20
625: invokestatic  #47
628: aload         22
630: invokestatic  #47
633: aload         23
635: invokestatic  #47
638: aload         25
640: invokestatic  #47
643: new           #54
646: dup
647: invokespecial #55
650: ldc           #56
652: invokevirtual #57
655: iload         28
657: invokevirtual #62
660: ldc           #59
662: invokevirtual #57
665: iconst_0
666: invokevirtual #62
669: ldc           #56
671: invokevirtual #57
674: invokevirtual #60
677: iload         28
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #61
690: new           #54
693: dup
694: invokespecial #55
697: ldc           #56
699: invokevirtual #57
702: iload         29
704: invokevirtual #62
707: ldc           #59
709: invokevirtual #57
712: iconst_0
713: invokevirtual #62
716: ldc           #56
718: invokevirtual #57
721: invokevirtual #60
724: iload         29
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #61
737: new           #54
740: dup
741: invokespecial #55
744: ldc           #56
746: invokevirtual #57
749: iload         30
751: invokevirtual #62
754: ldc           #59
756: invokevirtual #57
759: iconst_0
760: invokevirtual #62
763: ldc           #56
765: invokevirtual #57
768: invokevirtual #60
771: iload         30
773: ifne          780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #61
784: aload         34
786: invokestatic  #47
789: aload         37
791: invokestatic  #47
794: aload         38
796: invokestatic  #47
799: aload         39
801: invokestatic  #47
804: aload         40
806: invokestatic  #47
809: aload         41
811: invokestatic  #47
814: new           #54
817: dup
818: invokespecial #55
821: ldc           #56
823: invokevirtual #57
826: aload         42
828: invokevirtual #82
831: ldc           #59
833: invokevirtual #57
836: getstatic     #118
839: invokevirtual #82
842: ldc           #56
844: invokevirtual #57
847: invokevirtual #60
850: aload         42
852: getstatic     #118
855: invokevirtual #83
858: invokestatic  #61
861: aload         43
863: invokestatic  #47
866: aload         44
868: invokestatic  #47
871: new           #54
874: dup
875: invokespecial #55
878: ldc           #56
880: invokevirtual #57
883: aload         45
885: invokevirtual #82
888: ldc           #59
890: invokevirtual #57
893: getstatic     #118
896: invokevirtual #82
899: ldc           #56
901: invokevirtual #57
904: invokevirtual #60
907: aload         45
909: getstatic     #118
912: invokevirtual #83
915: invokestatic  #61
918: new           #54
921: dup
922: invokespecial #55
925: ldc           #56
927: invokevirtual #57
930: dload         46
932: invokevirtual #58
935: ldc           #59
937: invokevirtual #57
940: dconst_0
941: invokevirtual #58
944: ldc           #56
946: invokevirtual #57
949: invokevirtual #60
952: dload         46
954: dconst_0
955: dcmpl
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #61
967: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test306
Start line: 14270
End line: 14283
Method source code: 
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        int int7 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1003
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #103
57: astore        5
59: aload_2
60: invokevirtual #71
63: istore        6
65: new           #54
68: dup
69: invokespecial #55
72: ldc           #56
74: invokevirtual #57
77: iload_3
78: invokevirtual #62
81: ldc           #59
83: invokevirtual #57
86: iconst_0
87: invokevirtual #62
90: ldc           #56
92: invokevirtual #57
95: invokevirtual #60
98: iload_3
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #61
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: iload         4
124: invokevirtual #62
127: ldc           #59
129: invokevirtual #57
132: iconst_0
133: invokevirtual #62
136: ldc           #56
138: invokevirtual #57
141: invokevirtual #60
144: iload         4
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #61
157: aload         5
159: invokestatic  #104
162: new           #54
165: dup
166: invokespecial #55
169: ldc           #56
171: invokevirtual #57
174: iload         6
176: invokevirtual #62
179: ldc           #59
181: invokevirtual #57
184: iconst_0
185: invokevirtual #62
188: ldc           #56
190: invokevirtual #57
193: invokevirtual #60
196: iload         6
198: ifne          205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #61
209: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test307
Start line: 14286
End line: 14326
Method source code: 
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction28 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin22);
        double double30 = sin22.value(4.2482910979143895d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.8942257319186152d) + "'", double30 == (-0.8942257319186152d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1004
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload         16
195: invokestatic  #281
198: astore        20
200: aload         16
202: ldc2_w        #656
205: invokevirtual #88
208: dstore        21
210: new           #54
213: dup
214: invokespecial #55
217: ldc           #56
219: invokevirtual #57
222: iload_3
223: invokevirtual #62
226: ldc           #59
228: invokevirtual #57
231: iconst_0
232: invokevirtual #62
235: ldc           #56
237: invokevirtual #57
240: invokevirtual #60
243: iload_3
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #61
255: aload         6
257: invokestatic  #47
260: aload         7
262: invokestatic  #47
265: aload         8
267: invokestatic  #47
270: aload         9
272: invokestatic  #47
275: aload         10
277: invokestatic  #47
280: new           #54
283: dup
284: invokespecial #55
287: ldc           #56
289: invokevirtual #57
292: aload         11
294: invokevirtual #82
297: ldc           #59
299: invokevirtual #57
302: getstatic     #78
305: invokevirtual #82
308: ldc           #56
310: invokevirtual #57
313: invokevirtual #60
316: aload         11
318: getstatic     #78
321: invokevirtual #83
324: invokestatic  #61
327: aload         12
329: invokestatic  #47
332: aload         13
334: invokestatic  #47
337: new           #54
340: dup
341: invokespecial #55
344: ldc           #56
346: invokevirtual #57
349: aload         14
351: invokevirtual #82
354: ldc           #59
356: invokevirtual #57
359: getstatic     #78
362: invokevirtual #82
365: ldc           #56
367: invokevirtual #57
370: invokevirtual #60
373: aload         14
375: getstatic     #78
378: invokevirtual #83
381: invokestatic  #61
384: aload         15
386: invokestatic  #47
389: aload         17
391: invokestatic  #47
394: new           #54
397: dup
398: invokespecial #55
401: ldc           #56
403: invokevirtual #57
406: aload         18
408: invokevirtual #82
411: ldc           #59
413: invokevirtual #57
416: getstatic     #78
419: invokevirtual #82
422: ldc           #56
424: invokevirtual #57
427: invokevirtual #60
430: aload         18
432: getstatic     #78
435: invokevirtual #83
438: invokestatic  #61
441: aload         19
443: invokestatic  #47
446: aload         20
448: invokestatic  #47
451: new           #54
454: dup
455: invokespecial #55
458: ldc           #56
460: invokevirtual #57
463: dload         21
465: invokevirtual #58
468: ldc           #59
470: invokevirtual #57
473: ldc2_w        #1005
476: invokevirtual #58
479: ldc           #56
481: invokevirtual #57
484: invokevirtual #60
487: dload         21
489: ldc2_w        #1005
492: dcmpl
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #61
504: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test308
Start line: 14329
End line: 14431
Method source code: 
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getEvaluations();
        int int20 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = sin27.derivative();
        org.apache.commons.math3.analysis.function.Sin sin29 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin30 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray31 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin26, sin27, sin29, sin30 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable32 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray31);
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin34 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction35 = sin34.derivative();
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray38 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin33, sin34, sin36, sin37 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable39 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray38);
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = sin45.derivative();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin48 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray49 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin44, sin45, sin47, sin48 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray49);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray51 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin25, univariateDifferentiable32, univariateDifferentiable39, sin40, sin42, univariateDifferentiable50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable52 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray51);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException53 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable23, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException54 = new org.apache.commons.math3.exception.NullArgumentException(localizable22, (java.lang.Object[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction56 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer60 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker59);
        int int61 = brentOptimizer60.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction65 = sin64.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin63, sin64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray66);
        org.apache.commons.math3.optimization.GoalType goalType70 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair74 = brentOptimizer60.optimize(97, univariateFunction69, goalType70, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.optimize(17, univariateFunction56, goalType70, 99.99999999999999d, 2.238693057170856d, 0.8687261884639957d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair79 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray31);
        org.junit.Assert.assertNotNull(univariateDifferentiable32);
        org.junit.Assert.assertNotNull(univariateFunction35);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray38);
        org.junit.Assert.assertNotNull(univariateDifferentiable39);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray49);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray51);
        org.junit.Assert.assertNotNull(univariateDifferentiable52);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertNotNull(univariateFunction56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(univariateFunction65);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(univariateFunction69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair74);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertNotNull(univariatePointValuePair79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1007
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #71
148: istore        14
150: aload_2
151: invokevirtual #71
154: istore        15
156: aconst_null
157: astore        16
159: aconst_null
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: new           #72
174: dup
175: invokespecial #73
178: astore        19
180: new           #72
183: dup
184: invokespecial #73
187: astore        20
189: aload         20
191: invokevirtual #74
194: astore        21
196: new           #72
199: dup
200: invokespecial #73
203: astore        22
205: new           #72
208: dup
209: invokespecial #73
212: astore        23
214: iconst_4
215: anewarray     #75
218: dup
219: iconst_0
220: aload         19
222: aastore
223: dup
224: iconst_1
225: aload         20
227: aastore
228: dup
229: iconst_2
230: aload         22
232: aastore
233: dup
234: iconst_3
235: aload         23
237: aastore
238: astore        24
240: aload         24
242: invokestatic  #76
245: astore        25
247: new           #72
250: dup
251: invokespecial #73
254: astore        26
256: new           #72
259: dup
260: invokespecial #73
263: astore        27
265: aload         27
267: invokevirtual #74
270: astore        28
272: new           #72
275: dup
276: invokespecial #73
279: astore        29
281: new           #72
284: dup
285: invokespecial #73
288: astore        30
290: iconst_4
291: anewarray     #75
294: dup
295: iconst_0
296: aload         26
298: aastore
299: dup
300: iconst_1
301: aload         27
303: aastore
304: dup
305: iconst_2
306: aload         29
308: aastore
309: dup
310: iconst_3
311: aload         30
313: aastore
314: astore        31
316: aload         31
318: invokestatic  #76
321: astore        32
323: new           #72
326: dup
327: invokespecial #73
330: astore        33
332: aload         33
334: invokevirtual #74
337: astore        34
339: new           #72
342: dup
343: invokespecial #73
346: astore        35
348: aload         35
350: invokevirtual #74
353: astore        36
355: new           #72
358: dup
359: invokespecial #73
362: astore        37
364: new           #72
367: dup
368: invokespecial #73
371: astore        38
373: aload         38
375: invokevirtual #74
378: astore        39
380: new           #72
383: dup
384: invokespecial #73
387: astore        40
389: new           #72
392: dup
393: invokespecial #73
396: astore        41
398: iconst_4
399: anewarray     #75
402: dup
403: iconst_0
404: aload         37
406: aastore
407: dup
408: iconst_1
409: aload         38
411: aastore
412: dup
413: iconst_2
414: aload         40
416: aastore
417: dup
418: iconst_3
419: aload         41
421: aastore
422: astore        42
424: aload         42
426: invokestatic  #76
429: astore        43
431: bipush        6
433: anewarray     #75
436: dup
437: iconst_0
438: aload         18
440: aastore
441: dup
442: iconst_1
443: aload         25
445: aastore
446: dup
447: iconst_2
448: aload         32
450: aastore
451: dup
452: iconst_3
453: aload         33
455: aastore
456: dup
457: iconst_4
458: aload         35
460: aastore
461: dup
462: iconst_5
463: aload         43
465: aastore
466: astore        44
468: aload         44
470: invokestatic  #77
473: astore        45
475: new           #313
478: dup
479: aload         17
481: ldc2_w        #219
484: invokestatic  #314
487: aload         44
489: checkcast     #123
492: invokespecial #315
495: astore        46
497: new           #46
500: dup
501: aload         16
503: aload         44
505: checkcast     #123
508: invokespecial #246
511: astore        47
513: aload         44
515: checkcast     #89
518: invokestatic  #117
521: astore        48
523: aload         44
525: checkcast     #89
528: invokestatic  #90
531: astore        49
533: aconst_null
534: astore        50
536: new           #8
539: dup
540: ldc2_w        #31
543: ldc2_w        #33
546: aload         50
548: invokespecial #13
551: astore        51
553: aload         51
555: invokevirtual #71
558: istore        52
560: new           #72
563: dup
564: invokespecial #73
567: astore        53
569: new           #72
572: dup
573: invokespecial #73
576: astore        54
578: aload         54
580: invokevirtual #74
583: astore        55
585: iconst_2
586: anewarray     #75
589: dup
590: iconst_0
591: aload         53
593: aastore
594: dup
595: iconst_1
596: aload         54
598: aastore
599: astore        56
601: aload         56
603: invokestatic  #76
606: astore        57
608: aload         56
610: invokestatic  #77
613: astore        58
615: aload         56
617: checkcast     #89
620: invokestatic  #90
623: astore        59
625: getstatic     #78
628: astore        60
630: aload         51
632: bipush        97
634: aload         59
636: aload         60
638: ldc2_w        #91
641: ldc2_w        #93
644: ldc2_w        #91
647: invokevirtual #44
650: astore        61
652: aload_2
653: bipush        17
655: aload         49
657: aload         60
659: ldc2_w        #507
662: ldc2_w        #509
665: ldc2_w        #511
668: invokevirtual #44
671: astore        62
673: aload_2
674: invokevirtual #51
677: astore        63
679: new           #54
682: dup
683: invokespecial #55
686: ldc           #56
688: invokevirtual #57
691: iload_3
692: invokevirtual #62
695: ldc           #59
697: invokevirtual #57
700: iconst_0
701: invokevirtual #62
704: ldc           #56
706: invokevirtual #57
709: invokevirtual #60
712: iload_3
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #61
724: aload         6
726: invokestatic  #47
729: aload         7
731: invokestatic  #47
734: aload         8
736: invokestatic  #47
739: aload         9
741: invokestatic  #47
744: aload         10
746: invokestatic  #47
749: new           #54
752: dup
753: invokespecial #55
756: ldc           #56
758: invokevirtual #57
761: aload         11
763: invokevirtual #82
766: ldc           #59
768: invokevirtual #57
771: getstatic     #78
774: invokevirtual #82
777: ldc           #56
779: invokevirtual #57
782: invokevirtual #60
785: aload         11
787: getstatic     #78
790: invokevirtual #83
793: invokestatic  #61
796: aload         12
798: invokestatic  #47
801: aload         13
803: invokestatic  #47
806: new           #54
809: dup
810: invokespecial #55
813: ldc           #56
815: invokevirtual #57
818: iload         14
820: invokevirtual #62
823: ldc           #59
825: invokevirtual #57
828: bipush        8
830: invokevirtual #62
833: ldc           #56
835: invokevirtual #57
838: invokevirtual #60
841: iload         14
843: bipush        8
845: if_icmpne     852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #61
856: new           #54
859: dup
860: invokespecial #55
863: ldc           #56
865: invokevirtual #57
868: iload         15
870: invokevirtual #62
873: ldc           #59
875: invokevirtual #57
878: bipush        8
880: invokevirtual #62
883: ldc           #56
885: invokevirtual #57
888: invokevirtual #60
891: iload         15
893: bipush        8
895: if_icmpne     902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #61
906: aload         21
908: invokestatic  #47
911: aload         24
913: invokestatic  #47
916: aload         25
918: invokestatic  #47
921: aload         28
923: invokestatic  #47
926: aload         31
928: invokestatic  #47
931: aload         32
933: invokestatic  #47
936: aload         34
938: invokestatic  #47
941: aload         36
943: invokestatic  #47
946: aload         39
948: invokestatic  #47
951: aload         42
953: invokestatic  #47
956: aload         43
958: invokestatic  #47
961: aload         44
963: invokestatic  #47
966: aload         45
968: invokestatic  #47
971: aload         48
973: invokestatic  #47
976: aload         49
978: invokestatic  #47
981: new           #54
984: dup
985: invokespecial #55
988: ldc           #56
990: invokevirtual #57
993: iload         52
995: invokevirtual #62
998: ldc           #59
1000: invokevirtual #57
1003: iconst_0
1004: invokevirtual #62
1007: ldc           #56
1009: invokevirtual #57
1012: invokevirtual #60
1015: iload         52
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #61
1028: aload         55
1030: invokestatic  #47
1033: aload         56
1035: invokestatic  #47
1038: aload         57
1040: invokestatic  #47
1043: aload         58
1045: invokestatic  #47
1048: aload         59
1050: invokestatic  #47
1053: new           #54
1056: dup
1057: invokespecial #55
1060: ldc           #56
1062: invokevirtual #57
1065: aload         60
1067: invokevirtual #82
1070: ldc           #59
1072: invokevirtual #57
1075: getstatic     #78
1078: invokevirtual #82
1081: ldc           #56
1083: invokevirtual #57
1086: invokevirtual #60
1089: aload         60
1091: getstatic     #78
1094: invokevirtual #83
1097: invokestatic  #61
1100: aload         61
1102: invokestatic  #47
1105: aload         62
1107: invokestatic  #47
1110: aload         63
1112: invokestatic  #47
1115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test309
Start line: 14434
End line: 14476
Method source code: 
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        int int29 = brentOptimizer3.getEvaluations();
        int int30 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1008
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #71
203: istore        22
205: aload_2
206: invokevirtual #71
209: istore        23
211: new           #54
214: dup
215: invokespecial #55
218: ldc           #56
220: invokevirtual #57
223: iload_3
224: invokevirtual #62
227: ldc           #59
229: invokevirtual #57
232: iconst_0
233: invokevirtual #62
236: ldc           #56
238: invokevirtual #57
241: invokevirtual #60
244: iload_3
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #61
256: aload         6
258: invokestatic  #47
261: aload         7
263: invokestatic  #47
266: aload         8
268: invokestatic  #47
271: aload         9
273: invokestatic  #47
276: aload         10
278: invokestatic  #47
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: aload         11
295: invokevirtual #82
298: ldc           #59
300: invokevirtual #57
303: getstatic     #78
306: invokevirtual #82
309: ldc           #56
311: invokevirtual #57
314: invokevirtual #60
317: aload         11
319: getstatic     #78
322: invokevirtual #83
325: invokestatic  #61
328: aload         12
330: invokestatic  #47
333: aload         13
335: invokestatic  #47
338: new           #54
341: dup
342: invokespecial #55
345: ldc           #56
347: invokevirtual #57
350: aload         14
352: invokevirtual #82
355: ldc           #59
357: invokevirtual #57
360: getstatic     #78
363: invokevirtual #82
366: ldc           #56
368: invokevirtual #57
371: invokevirtual #60
374: aload         14
376: getstatic     #78
379: invokevirtual #83
382: invokestatic  #61
385: aload         15
387: invokestatic  #47
390: aload         17
392: invokestatic  #47
395: new           #54
398: dup
399: invokespecial #55
402: ldc           #56
404: invokevirtual #57
407: aload         18
409: invokevirtual #82
412: ldc           #59
414: invokevirtual #57
417: getstatic     #78
420: invokevirtual #82
423: ldc           #56
425: invokevirtual #57
428: invokevirtual #60
431: aload         18
433: getstatic     #78
436: invokevirtual #83
439: invokestatic  #61
442: aload         19
444: invokestatic  #47
447: new           #54
450: dup
451: invokespecial #55
454: ldc           #56
456: invokevirtual #57
459: dload         20
461: invokevirtual #58
464: ldc           #59
466: invokevirtual #57
469: dconst_0
470: invokevirtual #58
473: ldc           #56
475: invokevirtual #57
478: invokevirtual #60
481: dload         20
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #61
496: new           #54
499: dup
500: invokespecial #55
503: ldc           #56
505: invokevirtual #57
508: iload         22
510: invokevirtual #62
513: ldc           #59
515: invokevirtual #57
518: iconst_1
519: invokevirtual #62
522: ldc           #56
524: invokevirtual #57
527: invokevirtual #60
530: iload         22
532: iconst_1
533: if_icmpne     540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #61
544: new           #54
547: dup
548: invokespecial #55
551: ldc           #56
553: invokevirtual #57
556: iload         23
558: invokevirtual #62
561: ldc           #59
563: invokevirtual #57
566: iconst_1
567: invokevirtual #62
570: ldc           #56
572: invokevirtual #57
575: invokevirtual #60
578: iload         23
580: iconst_1
581: if_icmpne     588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #61
592: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test310
Start line: 14479
End line: 14526
Method source code: 
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        int int19 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable21 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray23 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction24 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException25 = new org.apache.commons.math3.exception.MathArithmeticException(localizable22, (java.lang.Object[]) differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction26 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException27 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable21, (java.lang.Object[]) differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction28 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction29 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray23);
        org.apache.commons.math3.optimization.GoalType goalType30 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair33 = brentOptimizer3.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction29, goalType30, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        int int34 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray23);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction24);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction26);
        org.junit.Assert.assertNotNull(univariateFunction28);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction29);
        org.junit.Assert.assertTrue("'" + goalType30 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType30.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1009
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #50
148: istore        14
150: aconst_null
151: astore        15
153: aconst_null
154: astore        16
156: iconst_0
157: anewarray     #141
160: astore        17
162: aload         17
164: invokestatic  #142
167: astore        18
169: new           #273
172: dup
173: aload         16
175: aload         17
177: checkcast     #123
180: invokespecial #274
183: astore        19
185: aload         17
187: invokestatic  #245
190: astore        20
192: new           #122
195: dup
196: aload         15
198: aload         17
200: checkcast     #123
203: invokespecial #124
206: astore        21
208: aload         17
210: checkcast     #89
213: invokestatic  #90
216: astore        22
218: aload         17
220: invokestatic  #142
223: astore        23
225: getstatic     #118
228: astore        24
230: aload_2
231: bipush        97
233: aload         23
235: aload         24
237: ldc2_w        #339
240: ldc2_w        #341
243: invokevirtual #81
246: astore        25
248: aload_2
249: invokevirtual #50
252: istore        26
254: new           #54
257: dup
258: invokespecial #55
261: ldc           #56
263: invokevirtual #57
266: iload_3
267: invokevirtual #62
270: ldc           #59
272: invokevirtual #57
275: iconst_0
276: invokevirtual #62
279: ldc           #56
281: invokevirtual #57
284: invokevirtual #60
287: iload_3
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #61
299: aload         6
301: invokestatic  #47
304: aload         7
306: invokestatic  #47
309: aload         8
311: invokestatic  #47
314: aload         9
316: invokestatic  #47
319: aload         10
321: invokestatic  #47
324: new           #54
327: dup
328: invokespecial #55
331: ldc           #56
333: invokevirtual #57
336: aload         11
338: invokevirtual #82
341: ldc           #59
343: invokevirtual #57
346: getstatic     #78
349: invokevirtual #82
352: ldc           #56
354: invokevirtual #57
357: invokevirtual #60
360: aload         11
362: getstatic     #78
365: invokevirtual #83
368: invokestatic  #61
371: aload         12
373: invokestatic  #47
376: aload         13
378: invokestatic  #47
381: new           #54
384: dup
385: invokespecial #55
388: ldc           #56
390: invokevirtual #57
393: iload         14
395: invokevirtual #62
398: ldc           #59
400: invokevirtual #57
403: bipush        97
405: invokevirtual #62
408: ldc           #56
410: invokevirtual #57
413: invokevirtual #60
416: iload         14
418: bipush        97
420: if_icmpne     427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #61
431: aload         17
433: invokestatic  #47
436: aload         18
438: invokestatic  #47
441: aload         20
443: invokestatic  #47
446: aload         22
448: invokestatic  #47
451: aload         23
453: invokestatic  #47
456: new           #54
459: dup
460: invokespecial #55
463: ldc           #56
465: invokevirtual #57
468: aload         24
470: invokevirtual #82
473: ldc           #59
475: invokevirtual #57
478: getstatic     #118
481: invokevirtual #82
484: ldc           #56
486: invokevirtual #57
489: invokevirtual #60
492: aload         24
494: getstatic     #118
497: invokevirtual #83
500: invokestatic  #61
503: aload         25
505: invokestatic  #47
508: new           #54
511: dup
512: invokespecial #55
515: ldc           #56
517: invokevirtual #57
520: iload         26
522: invokevirtual #62
525: ldc           #59
527: invokevirtual #57
530: bipush        97
532: invokevirtual #62
535: ldc           #56
537: invokevirtual #57
540: invokevirtual #60
543: iload         26
545: bipush        97
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #61
558: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test311
Start line: 14529
End line: 14562
Method source code: 
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        double double21 = brentOptimizer3.computeObjectiveValue(20.000000953674316d);
        int int22 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType23 = brentOptimizer3.getGoalType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.7913081858681398d + "'", double21 == 0.7913081858681398d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1010
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: ldc2_w        #165
154: invokevirtual #158
157: dstore        15
159: aload_2
160: invokevirtual #71
163: istore        17
165: aload_2
166: invokevirtual #110
169: astore        18
171: new           #54
174: dup
175: invokespecial #55
178: ldc           #56
180: invokevirtual #57
183: iload_3
184: invokevirtual #62
187: ldc           #59
189: invokevirtual #57
192: iconst_0
193: invokevirtual #62
196: ldc           #56
198: invokevirtual #57
201: invokevirtual #60
204: iload_3
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #61
216: aload         6
218: invokestatic  #47
221: aload         7
223: invokestatic  #47
226: aload         8
228: invokestatic  #47
231: aload         9
233: invokestatic  #47
236: aload         10
238: invokestatic  #47
241: new           #54
244: dup
245: invokespecial #55
248: ldc           #56
250: invokevirtual #57
253: aload         11
255: invokevirtual #82
258: ldc           #59
260: invokevirtual #57
263: getstatic     #78
266: invokevirtual #82
269: ldc           #56
271: invokevirtual #57
274: invokevirtual #60
277: aload         11
279: getstatic     #78
282: invokevirtual #83
285: invokestatic  #61
288: aload         12
290: invokestatic  #47
293: aload         13
295: invokestatic  #47
298: new           #54
301: dup
302: invokespecial #55
305: ldc           #56
307: invokevirtual #57
310: aload         14
312: invokevirtual #82
315: ldc           #59
317: invokevirtual #57
320: getstatic     #78
323: invokevirtual #82
326: ldc           #56
328: invokevirtual #57
331: invokevirtual #60
334: aload         14
336: getstatic     #78
339: invokevirtual #83
342: invokestatic  #61
345: new           #54
348: dup
349: invokespecial #55
352: ldc           #56
354: invokevirtual #57
357: dload         15
359: invokevirtual #58
362: ldc           #59
364: invokevirtual #57
367: ldc2_w        #320
370: invokevirtual #58
373: ldc           #56
375: invokevirtual #57
378: invokevirtual #60
381: dload         15
383: ldc2_w        #320
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #61
398: new           #54
401: dup
402: invokespecial #55
405: ldc           #56
407: invokevirtual #57
410: iload         17
412: invokevirtual #62
415: ldc           #59
417: invokevirtual #57
420: bipush        9
422: invokevirtual #62
425: ldc           #56
427: invokevirtual #57
430: invokevirtual #60
433: iload         17
435: bipush        9
437: if_icmpne     444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #61
448: new           #54
451: dup
452: invokespecial #55
455: ldc           #56
457: invokevirtual #57
460: aload         18
462: invokevirtual #82
465: ldc           #59
467: invokevirtual #57
470: getstatic     #78
473: invokevirtual #82
476: ldc           #56
478: invokevirtual #57
481: invokevirtual #60
484: aload         18
486: getstatic     #78
489: invokevirtual #83
492: invokestatic  #61
495: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test312
Start line: 14565
End line: 14605
Method source code: 
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential((org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) sin22);
        double double30 = sin22.value(0.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1011
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload         16
195: invokestatic  #143
198: astore        20
200: aload         16
202: dconst_0
203: invokevirtual #88
206: dstore        21
208: new           #54
211: dup
212: invokespecial #55
215: ldc           #56
217: invokevirtual #57
220: iload_3
221: invokevirtual #62
224: ldc           #59
226: invokevirtual #57
229: iconst_0
230: invokevirtual #62
233: ldc           #56
235: invokevirtual #57
238: invokevirtual #60
241: iload_3
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #61
253: aload         6
255: invokestatic  #47
258: aload         7
260: invokestatic  #47
263: aload         8
265: invokestatic  #47
268: aload         9
270: invokestatic  #47
273: aload         10
275: invokestatic  #47
278: new           #54
281: dup
282: invokespecial #55
285: ldc           #56
287: invokevirtual #57
290: aload         11
292: invokevirtual #82
295: ldc           #59
297: invokevirtual #57
300: getstatic     #78
303: invokevirtual #82
306: ldc           #56
308: invokevirtual #57
311: invokevirtual #60
314: aload         11
316: getstatic     #78
319: invokevirtual #83
322: invokestatic  #61
325: aload         12
327: invokestatic  #47
330: aload         13
332: invokestatic  #47
335: new           #54
338: dup
339: invokespecial #55
342: ldc           #56
344: invokevirtual #57
347: aload         14
349: invokevirtual #82
352: ldc           #59
354: invokevirtual #57
357: getstatic     #78
360: invokevirtual #82
363: ldc           #56
365: invokevirtual #57
368: invokevirtual #60
371: aload         14
373: getstatic     #78
376: invokevirtual #83
379: invokestatic  #61
382: aload         15
384: invokestatic  #47
387: aload         17
389: invokestatic  #47
392: new           #54
395: dup
396: invokespecial #55
399: ldc           #56
401: invokevirtual #57
404: aload         18
406: invokevirtual #82
409: ldc           #59
411: invokevirtual #57
414: getstatic     #78
417: invokevirtual #82
420: ldc           #56
422: invokevirtual #57
425: invokevirtual #60
428: aload         18
430: getstatic     #78
433: invokevirtual #83
436: invokestatic  #61
439: aload         19
441: invokestatic  #47
444: aload         20
446: invokestatic  #47
449: new           #54
452: dup
453: invokespecial #55
456: ldc           #56
458: invokevirtual #57
461: dload         21
463: invokevirtual #58
466: ldc           #59
468: invokevirtual #57
471: dconst_0
472: invokevirtual #58
475: ldc           #56
477: invokevirtual #57
480: invokevirtual #60
483: dload         21
485: dconst_0
486: dcmpl
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #61
498: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test313
Start line: 14608
End line: 14623
Method source code: 
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(6.6917246496340396E41d, Double.NaN);
        int int3 = brentOptimizer2.getEvaluations();
        int int4 = brentOptimizer2.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair5 = brentOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1012
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #99
32: ldc2_w        #302
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #71
43: istore_2
44: aload_1
45: invokevirtual #71
48: istore_3
49: aload_1
50: invokevirtual #51
53: astore        4
55: ldc           #52
57: invokestatic  #15
60: goto          65
63: astore        4
65: new           #54
68: dup
69: invokespecial #55
72: ldc           #56
74: invokevirtual #57
77: iload_2
78: invokevirtual #62
81: ldc           #59
83: invokevirtual #57
86: iconst_0
87: invokevirtual #62
90: ldc           #56
92: invokevirtual #57
95: invokevirtual #60
98: iload_2
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #61
110: new           #54
113: dup
114: invokespecial #55
117: ldc           #56
119: invokevirtual #57
122: iload_3
123: invokevirtual #62
126: ldc           #59
128: invokevirtual #57
131: iconst_0
132: invokevirtual #62
135: ldc           #56
137: invokevirtual #57
140: invokevirtual #60
143: iload_3
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #61
155: return
Exception table:
from    to  target type
49    60    63   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test314
Start line: 14626
End line: 14659
Method source code: 
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        int int21 = brentOptimizer3.getEvaluations();
        double double22 = brentOptimizer3.getMin();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 12 + "'", int21 == 12);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1013
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: aload_2
157: invokevirtual #71
160: istore        16
162: aload_2
163: invokevirtual #231
166: dstore        17
168: new           #54
171: dup
172: invokespecial #55
175: ldc           #56
177: invokevirtual #57
180: iload_3
181: invokevirtual #62
184: ldc           #59
186: invokevirtual #57
189: iconst_0
190: invokevirtual #62
193: ldc           #56
195: invokevirtual #57
198: invokevirtual #60
201: iload_3
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #61
213: aload         6
215: invokestatic  #47
218: aload         7
220: invokestatic  #47
223: aload         8
225: invokestatic  #47
228: aload         9
230: invokestatic  #47
233: aload         10
235: invokestatic  #47
238: new           #54
241: dup
242: invokespecial #55
245: ldc           #56
247: invokevirtual #57
250: aload         11
252: invokevirtual #82
255: ldc           #59
257: invokevirtual #57
260: getstatic     #78
263: invokevirtual #82
266: ldc           #56
268: invokevirtual #57
271: invokevirtual #60
274: aload         11
276: getstatic     #78
279: invokevirtual #83
282: invokestatic  #61
285: aload         12
287: invokestatic  #47
290: aload         13
292: invokestatic  #47
295: new           #54
298: dup
299: invokespecial #55
302: ldc           #56
304: invokevirtual #57
307: aload         14
309: invokevirtual #82
312: ldc           #59
314: invokevirtual #57
317: getstatic     #78
320: invokevirtual #82
323: ldc           #56
325: invokevirtual #57
328: invokevirtual #60
331: aload         14
333: getstatic     #78
336: invokevirtual #83
339: invokestatic  #61
342: aload         15
344: invokestatic  #47
347: new           #54
350: dup
351: invokespecial #55
354: ldc           #56
356: invokevirtual #57
359: iload         16
361: invokevirtual #62
364: ldc           #59
366: invokevirtual #57
369: bipush        12
371: invokevirtual #62
374: ldc           #56
376: invokevirtual #57
379: invokevirtual #60
382: iload         16
384: bipush        12
386: if_icmpne     393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #61
397: new           #54
400: dup
401: invokespecial #55
404: ldc           #56
406: invokevirtual #57
409: dload         17
411: invokevirtual #58
414: ldc           #59
416: invokevirtual #57
419: ldc2_w        #91
422: invokevirtual #58
425: ldc           #56
427: invokevirtual #57
430: invokevirtual #60
433: dload         17
435: ldc2_w        #91
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #61
450: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test315
Start line: 14662
End line: 14762
Method source code: 
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction0 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer4 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker3);
        int int5 = brentOptimizer4.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin8 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction9 = sin8.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray10 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin7, sin8 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable12 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray10);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray10);
        org.apache.commons.math3.optimization.GoalType goalType14 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer4.optimize(97, univariateFunction13, goalType14, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair19 = brentOptimizer4.doOptimize();
        double double20 = brentOptimizer4.getMax();
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.function.Sin sin26 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray28 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24, sin26, sin27 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray28);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException30 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable22, (java.lang.Object[]) univariateDifferentiableArray28);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction31 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray28);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer35 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker34);
        int int36 = brentOptimizer35.getEvaluations();
        int int37 = brentOptimizer35.getEvaluations();
        int int38 = brentOptimizer35.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction40 = null;
        org.apache.commons.math3.analysis.function.Sin sin41 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction43 = sin42.derivative();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin45 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray46 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin41, sin42, sin44, sin45 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction48 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray46);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction51 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction40, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable49, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType52 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair56 = brentOptimizer35.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable49, goalType52, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair60 = brentOptimizer4.optimize((int) (byte) 100, univariateFunction31, goalType52, 1.2786363145140075E-4d, (-1.5596856728972892d), 2.2227587494850775E-162d);
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction61 = null;
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin62.derivative();
        double double65 = sin62.value((double) (short) 10);
        org.apache.commons.math3.analysis.function.Sin sin66 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction67 = sin66.derivative();
        double double69 = sin66.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = sin66.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction71 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction61, (org.apache.commons.math3.analysis.UnivariateFunction) sin62, (org.apache.commons.math3.analysis.UnivariateFunction) sin66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = sin62.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction73 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction0, univariateFunction31, (org.apache.commons.math3.analysis.UnivariateFunction) sin62);
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.analysis.differentiation.DerivativeStructure derivativeStructure75 = sin62.value(derivativeStructure74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(univariateFunction9);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateDifferentiable12);
        org.junit.Assert.assertNotNull(univariateFunction13);
        org.junit.Assert.assertTrue("'" + goalType14 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType14.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertNotNull(univariatePointValuePair19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.4210854715202004E-14d + "'", double20 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(univariateFunction43);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateFunction48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(multivariateFunction51);
        org.junit.Assert.assertTrue("'" + goalType52 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType52.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair56);
        org.junit.Assert.assertNotNull(univariatePointValuePair60);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.5440211108893698d) + "'", double65 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(univariateFunction67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.8414709825806044d + "'", double69 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction70);
        org.junit.Assert.assertNotNull(univariateFunction71);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertNotNull(univariateFunction73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1014
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: new           #8
32: dup
33: ldc2_w        #31
36: ldc2_w        #33
39: aload_2
40: invokespecial #13
43: astore_3
44: aload_3
45: invokevirtual #71
48: istore        4
50: new           #72
53: dup
54: invokespecial #73
57: astore        5
59: new           #72
62: dup
63: invokespecial #73
66: astore        6
68: aload         6
70: invokevirtual #74
73: astore        7
75: iconst_2
76: anewarray     #75
79: dup
80: iconst_0
81: aload         5
83: aastore
84: dup
85: iconst_1
86: aload         6
88: aastore
89: astore        8
91: aload         8
93: invokestatic  #76
96: astore        9
98: aload         8
100: invokestatic  #77
103: astore        10
105: aload         8
107: checkcast     #89
110: invokestatic  #90
113: astore        11
115: getstatic     #78
118: astore        12
120: aload_3
121: bipush        97
123: aload         11
125: aload         12
127: ldc2_w        #91
130: ldc2_w        #93
133: ldc2_w        #91
136: invokevirtual #44
139: astore        13
141: aload_3
142: invokevirtual #51
145: astore        14
147: aload_3
148: invokevirtual #49
151: dstore        15
153: aconst_null
154: astore        17
156: new           #72
159: dup
160: invokespecial #73
163: astore        18
165: new           #72
168: dup
169: invokespecial #73
172: astore        19
174: aload         19
176: invokevirtual #74
179: astore        20
181: new           #72
184: dup
185: invokespecial #73
188: astore        21
190: new           #72
193: dup
194: invokespecial #73
197: astore        22
199: iconst_4
200: anewarray     #75
203: dup
204: iconst_0
205: aload         18
207: aastore
208: dup
209: iconst_1
210: aload         19
212: aastore
213: dup
214: iconst_2
215: aload         21
217: aastore
218: dup
219: iconst_3
220: aload         22
222: aastore
223: astore        23
225: aload         23
227: invokestatic  #76
230: astore        24
232: new           #122
235: dup
236: aload         17
238: aload         23
240: checkcast     #123
243: invokespecial #124
246: astore        25
248: aload         23
250: checkcast     #89
253: invokestatic  #109
256: astore        26
258: aconst_null
259: astore        27
261: new           #8
264: dup
265: ldc2_w        #31
268: ldc2_w        #33
271: aload         27
273: invokespecial #13
276: astore        28
278: aload         28
280: invokevirtual #71
283: istore        29
285: aload         28
287: invokevirtual #71
290: istore        30
292: aload         28
294: invokevirtual #71
297: istore        31
299: aconst_null
300: astore        32
302: new           #72
305: dup
306: invokespecial #73
309: astore        33
311: new           #72
314: dup
315: invokespecial #73
318: astore        34
320: aload         34
322: invokevirtual #74
325: astore        35
327: new           #72
330: dup
331: invokespecial #73
334: astore        36
336: new           #72
339: dup
340: invokespecial #73
343: astore        37
345: iconst_4
346: anewarray     #75
349: dup
350: iconst_0
351: aload         33
353: aastore
354: dup
355: iconst_1
356: aload         34
358: aastore
359: dup
360: iconst_2
361: aload         36
363: aastore
364: dup
365: iconst_3
366: aload         37
368: aastore
369: astore        38
371: aload         38
373: invokestatic  #76
376: astore        39
378: aload         38
380: checkcast     #89
383: invokestatic  #109
386: astore        40
388: aload         38
390: invokestatic  #77
393: astore        41
395: aload         32
397: aload         41
399: ldc2_w        #181
402: invokestatic  #183
405: astore        42
407: getstatic     #118
410: astore        43
412: aload         28
414: bipush        10
416: aload         41
418: aload         43
420: ldc2_w        #184
423: ldc2_w        #186
426: ldc2_w        #188
429: invokevirtual #44
432: astore        44
434: aload_3
435: bipush        100
437: aload         26
439: aload         43
441: ldc2_w        #238
444: ldc2_w        #400
447: ldc2_w        #402
450: invokevirtual #44
453: astore        45
455: aconst_null
456: astore        46
458: new           #72
461: dup
462: invokespecial #73
465: astore        47
467: aload         47
469: invokevirtual #74
472: astore        48
474: aload         47
476: ldc2_w        #91
479: invokevirtual #88
482: dstore        49
484: new           #72
487: dup
488: invokespecial #73
491: astore        51
493: aload         51
495: invokevirtual #74
498: astore        52
500: aload         51
502: ldc2_w        #86
505: invokevirtual #88
508: dstore        53
510: aload         51
512: invokevirtual #74
515: astore        55
517: aload         46
519: aload         47
521: aload         51
523: invokestatic  #404
526: astore        56
528: aload         47
530: invokevirtual #74
533: astore        57
535: aload_1
536: aload         26
538: aload         47
540: invokestatic  #404
543: astore        58
545: aconst_null
546: astore        59
548: aload         47
550: aload         59
552: invokevirtual #405
555: astore        60
557: ldc           #119
559: invokestatic  #15
562: goto          567
565: astore        60
567: new           #54
570: dup
571: invokespecial #55
574: ldc           #56
576: invokevirtual #57
579: iload         4
581: invokevirtual #62
584: ldc           #59
586: invokevirtual #57
589: iconst_0
590: invokevirtual #62
593: ldc           #56
595: invokevirtual #57
598: invokevirtual #60
601: iload         4
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #61
614: aload         7
616: invokestatic  #47
619: aload         8
621: invokestatic  #47
624: aload         9
626: invokestatic  #47
629: aload         10
631: invokestatic  #47
634: aload         11
636: invokestatic  #47
639: new           #54
642: dup
643: invokespecial #55
646: ldc           #56
648: invokevirtual #57
651: aload         12
653: invokevirtual #82
656: ldc           #59
658: invokevirtual #57
661: getstatic     #78
664: invokevirtual #82
667: ldc           #56
669: invokevirtual #57
672: invokevirtual #60
675: aload         12
677: getstatic     #78
680: invokevirtual #83
683: invokestatic  #61
686: aload         13
688: invokestatic  #47
691: aload         14
693: invokestatic  #47
696: new           #54
699: dup
700: invokespecial #55
703: ldc           #56
705: invokevirtual #57
708: dload         15
710: invokevirtual #58
713: ldc           #59
715: invokevirtual #57
718: ldc2_w        #93
721: invokevirtual #58
724: ldc           #56
726: invokevirtual #57
729: invokevirtual #60
732: dload         15
734: ldc2_w        #93
737: dcmpl
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #61
749: aload         20
751: invokestatic  #47
754: aload         23
756: invokestatic  #47
759: aload         24
761: invokestatic  #47
764: aload         26
766: invokestatic  #47
769: new           #54
772: dup
773: invokespecial #55
776: ldc           #56
778: invokevirtual #57
781: iload         29
783: invokevirtual #62
786: ldc           #59
788: invokevirtual #57
791: iconst_0
792: invokevirtual #62
795: ldc           #56
797: invokevirtual #57
800: invokevirtual #60
803: iload         29
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #61
816: new           #54
819: dup
820: invokespecial #55
823: ldc           #56
825: invokevirtual #57
828: iload         30
830: invokevirtual #62
833: ldc           #59
835: invokevirtual #57
838: iconst_0
839: invokevirtual #62
842: ldc           #56
844: invokevirtual #57
847: invokevirtual #60
850: iload         30
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #61
863: new           #54
866: dup
867: invokespecial #55
870: ldc           #56
872: invokevirtual #57
875: iload         31
877: invokevirtual #62
880: ldc           #59
882: invokevirtual #57
885: iconst_0
886: invokevirtual #62
889: ldc           #56
891: invokevirtual #57
894: invokevirtual #60
897: iload         31
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #61
910: aload         35
912: invokestatic  #47
915: aload         38
917: invokestatic  #47
920: aload         39
922: invokestatic  #47
925: aload         40
927: invokestatic  #47
930: aload         41
932: invokestatic  #47
935: aload         42
937: invokestatic  #47
940: new           #54
943: dup
944: invokespecial #55
947: ldc           #56
949: invokevirtual #57
952: aload         43
954: invokevirtual #82
957: ldc           #59
959: invokevirtual #57
962: getstatic     #118
965: invokevirtual #82
968: ldc           #56
970: invokevirtual #57
973: invokevirtual #60
976: aload         43
978: getstatic     #118
981: invokevirtual #83
984: invokestatic  #61
987: aload         44
989: invokestatic  #47
992: aload         45
994: invokestatic  #47
997: aload         48
999: invokestatic  #47
1002: new           #54
1005: dup
1006: invokespecial #55
1009: ldc           #56
1011: invokevirtual #57
1014: dload         49
1016: invokevirtual #58
1019: ldc           #59
1021: invokevirtual #57
1024: ldc2_w        #406
1027: invokevirtual #58
1030: ldc           #56
1032: invokevirtual #57
1035: invokevirtual #60
1038: dload         49
1040: ldc2_w        #406
1043: dcmpl
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #61
1055: aload         52
1057: invokestatic  #47
1060: new           #54
1063: dup
1064: invokespecial #55
1067: ldc           #56
1069: invokevirtual #57
1072: dload         53
1074: invokevirtual #58
1077: ldc           #59
1079: invokevirtual #57
1082: ldc2_w        #23
1085: invokevirtual #58
1088: ldc           #56
1090: invokevirtual #57
1093: invokevirtual #60
1096: dload         53
1098: ldc2_w        #23
1101: dcmpl
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #61
1113: aload         55
1115: invokestatic  #47
1118: aload         56
1120: invokestatic  #47
1123: aload         57
1125: invokestatic  #47
1128: aload         58
1130: invokestatic  #47
1133: return
Exception table:
from    to  target type
548   562   565   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test316
Start line: 14765
End line: 14871
Method source code: 
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair18 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType19 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair20 = brentOptimizer3.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair27 = brentOptimizer3.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin22, goalType24, 3.141592653589793d, 0.0d);
        double double28 = brentOptimizer3.getMax();
        org.apache.commons.math3.optimization.GoalType goalType29 = brentOptimizer3.getGoalType();
        int int30 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction32 = null;
        org.apache.commons.math3.analysis.function.Sin sin33 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction34 = sin33.derivative();
        double double36 = sin33.value((double) (short) 10);
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction38 = sin37.derivative();
        double double40 = sin37.value(0.9999999958776927d);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin37.derivative();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction42 = org.apache.commons.math3.analysis.FunctionUtils.combine(bivariateFunction32, (org.apache.commons.math3.analysis.UnivariateFunction) sin33, (org.apache.commons.math3.analysis.UnivariateFunction) sin37);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer46 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker45);
        int int47 = brentOptimizer46.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin49 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction51 = sin50.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray52 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin49, sin50 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable53 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray52);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable54 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray52);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction55 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray52);
        org.apache.commons.math3.optimization.GoalType goalType56 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair60 = brentOptimizer46.optimize(97, univariateFunction55, goalType56, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair61 = brentOptimizer46.doOptimize();
        int int62 = brentOptimizer46.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable64 = null;
        org.apache.commons.math3.exception.util.Localizable localizable65 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray66 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction67 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray66);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException68 = new org.apache.commons.math3.exception.MathArithmeticException(localizable65, (java.lang.Object[]) differentiableUnivariateFunctionArray66);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction69 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray66);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException70 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable64, (java.lang.Object[]) differentiableUnivariateFunctionArray66);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction71 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray66);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray66);
        org.apache.commons.math3.optimization.GoalType goalType73 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer46.optimize((int) 'a', (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction72, goalType73, (-2.2250738585072014E-308d), (double) 3.8146973E-6f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair80 = brentOptimizer3.optimize(0, (org.apache.commons.math3.analysis.UnivariateFunction) sin37, goalType73, 1.570796319767148d, (-12.0d), 0.06981317007977318d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertNotNull(univariatePointValuePair18);
        org.junit.Assert.assertTrue("'" + goalType19 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType19.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair20);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
        org.junit.Assert.assertNotNull(univariateFunction34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.5440211108893698d) + "'", double36 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(univariateFunction38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.8414709825806044d + "'", double40 == 0.8414709825806044d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateFunction42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(univariateFunction51);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray52);
        org.junit.Assert.assertNotNull(univariateDifferentiable53);
        org.junit.Assert.assertNotNull(univariateDifferentiable54);
        org.junit.Assert.assertNotNull(univariateFunction55);
        org.junit.Assert.assertTrue("'" + goalType56 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType56.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair60);
        org.junit.Assert.assertNotNull(univariatePointValuePair61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray66);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction67);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction69);
        org.junit.Assert.assertNotNull(univariateFunction71);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction72);
        org.junit.Assert.assertTrue("'" + goalType73 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType73.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1015
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #51
142: astore        13
144: aload_2
145: invokevirtual #110
148: astore        14
150: aload_2
151: invokevirtual #51
154: astore        15
156: new           #72
159: dup
160: invokespecial #73
163: astore        16
165: aload         16
167: invokevirtual #74
170: astore        17
172: getstatic     #78
175: astore        18
177: aload_2
178: bipush        97
180: aload         16
182: aload         18
184: ldc2_w        #133
187: dconst_0
188: invokevirtual #81
191: astore        19
193: aload_2
194: invokevirtual #49
197: dstore        20
199: aload_2
200: invokevirtual #110
203: astore        22
205: aload_2
206: invokevirtual #50
209: istore        23
211: aconst_null
212: astore        24
214: new           #72
217: dup
218: invokespecial #73
221: astore        25
223: aload         25
225: invokevirtual #74
228: astore        26
230: aload         25
232: ldc2_w        #91
235: invokevirtual #88
238: dstore        27
240: new           #72
243: dup
244: invokespecial #73
247: astore        29
249: aload         29
251: invokevirtual #74
254: astore        30
256: aload         29
258: ldc2_w        #86
261: invokevirtual #88
264: dstore        31
266: aload         29
268: invokevirtual #74
271: astore        33
273: aload         24
275: aload         25
277: aload         29
279: invokestatic  #404
282: astore        34
284: aconst_null
285: astore        35
287: new           #8
290: dup
291: ldc2_w        #31
294: ldc2_w        #33
297: aload         35
299: invokespecial #13
302: astore        36
304: aload         36
306: invokevirtual #71
309: istore        37
311: new           #72
314: dup
315: invokespecial #73
318: astore        38
320: new           #72
323: dup
324: invokespecial #73
327: astore        39
329: aload         39
331: invokevirtual #74
334: astore        40
336: iconst_2
337: anewarray     #75
340: dup
341: iconst_0
342: aload         38
344: aastore
345: dup
346: iconst_1
347: aload         39
349: aastore
350: astore        41
352: aload         41
354: invokestatic  #76
357: astore        42
359: aload         41
361: invokestatic  #77
364: astore        43
366: aload         41
368: checkcast     #89
371: invokestatic  #90
374: astore        44
376: getstatic     #78
379: astore        45
381: aload         36
383: bipush        97
385: aload         44
387: aload         45
389: ldc2_w        #91
392: ldc2_w        #93
395: ldc2_w        #91
398: invokevirtual #44
401: astore        46
403: aload         36
405: invokevirtual #51
408: astore        47
410: aload         36
412: invokevirtual #50
415: istore        48
417: aconst_null
418: astore        49
420: aconst_null
421: astore        50
423: iconst_0
424: anewarray     #141
427: astore        51
429: aload         51
431: invokestatic  #142
434: astore        52
436: new           #273
439: dup
440: aload         50
442: aload         51
444: checkcast     #123
447: invokespecial #274
450: astore        53
452: aload         51
454: invokestatic  #245
457: astore        54
459: new           #122
462: dup
463: aload         49
465: aload         51
467: checkcast     #123
470: invokespecial #124
473: astore        55
475: aload         51
477: checkcast     #89
480: invokestatic  #90
483: astore        56
485: aload         51
487: invokestatic  #142
490: astore        57
492: getstatic     #118
495: astore        58
497: aload         36
499: bipush        97
501: aload         57
503: aload         58
505: ldc2_w        #339
508: ldc2_w        #341
511: invokevirtual #81
514: astore        59
516: aload_2
517: iconst_0
518: aload         29
520: aload         58
522: ldc2_w        #1016
525: ldc2_w        #1018
528: ldc2_w        #1020
531: invokevirtual #44
534: astore        60
536: ldc           #52
538: invokestatic  #15
541: goto          546
544: astore        60
546: new           #54
549: dup
550: invokespecial #55
553: ldc           #56
555: invokevirtual #57
558: iload_3
559: invokevirtual #62
562: ldc           #59
564: invokevirtual #57
567: iconst_0
568: invokevirtual #62
571: ldc           #56
573: invokevirtual #57
576: invokevirtual #60
579: iload_3
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #61
591: aload         6
593: invokestatic  #47
596: aload         7
598: invokestatic  #47
601: aload         8
603: invokestatic  #47
606: aload         9
608: invokestatic  #47
611: aload         10
613: invokestatic  #47
616: new           #54
619: dup
620: invokespecial #55
623: ldc           #56
625: invokevirtual #57
628: aload         11
630: invokevirtual #82
633: ldc           #59
635: invokevirtual #57
638: getstatic     #78
641: invokevirtual #82
644: ldc           #56
646: invokevirtual #57
649: invokevirtual #60
652: aload         11
654: getstatic     #78
657: invokevirtual #83
660: invokestatic  #61
663: aload         12
665: invokestatic  #47
668: aload         13
670: invokestatic  #47
673: new           #54
676: dup
677: invokespecial #55
680: ldc           #56
682: invokevirtual #57
685: aload         14
687: invokevirtual #82
690: ldc           #59
692: invokevirtual #57
695: getstatic     #78
698: invokevirtual #82
701: ldc           #56
703: invokevirtual #57
706: invokevirtual #60
709: aload         14
711: getstatic     #78
714: invokevirtual #83
717: invokestatic  #61
720: aload         15
722: invokestatic  #47
725: aload         17
727: invokestatic  #47
730: new           #54
733: dup
734: invokespecial #55
737: ldc           #56
739: invokevirtual #57
742: aload         18
744: invokevirtual #82
747: ldc           #59
749: invokevirtual #57
752: getstatic     #78
755: invokevirtual #82
758: ldc           #56
760: invokevirtual #57
763: invokevirtual #60
766: aload         18
768: getstatic     #78
771: invokevirtual #83
774: invokestatic  #61
777: aload         19
779: invokestatic  #47
782: new           #54
785: dup
786: invokespecial #55
789: ldc           #56
791: invokevirtual #57
794: dload         20
796: invokevirtual #58
799: ldc           #59
801: invokevirtual #57
804: dconst_0
805: invokevirtual #58
808: ldc           #56
810: invokevirtual #57
813: invokevirtual #60
816: dload         20
818: dconst_0
819: dcmpl
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #61
831: new           #54
834: dup
835: invokespecial #55
838: ldc           #56
840: invokevirtual #57
843: aload         22
845: invokevirtual #82
848: ldc           #59
850: invokevirtual #57
853: getstatic     #78
856: invokevirtual #82
859: ldc           #56
861: invokevirtual #57
864: invokevirtual #60
867: aload         22
869: getstatic     #78
872: invokevirtual #83
875: invokestatic  #61
878: new           #54
881: dup
882: invokespecial #55
885: ldc           #56
887: invokevirtual #57
890: iload         23
892: invokevirtual #62
895: ldc           #59
897: invokevirtual #57
900: bipush        97
902: invokevirtual #62
905: ldc           #56
907: invokevirtual #57
910: invokevirtual #60
913: iload         23
915: bipush        97
917: if_icmpne     924
920: iconst_1
921: goto          925
924: iconst_0
925: invokestatic  #61
928: aload         26
930: invokestatic  #47
933: new           #54
936: dup
937: invokespecial #55
940: ldc           #56
942: invokevirtual #57
945: dload         27
947: invokevirtual #58
950: ldc           #59
952: invokevirtual #57
955: ldc2_w        #406
958: invokevirtual #58
961: ldc           #56
963: invokevirtual #57
966: invokevirtual #60
969: dload         27
971: ldc2_w        #406
974: dcmpl
975: ifne          982
978: iconst_1
979: goto          983
982: iconst_0
983: invokestatic  #61
986: aload         30
988: invokestatic  #47
991: new           #54
994: dup
995: invokespecial #55
998: ldc           #56
1000: invokevirtual #57
1003: dload         31
1005: invokevirtual #58
1008: ldc           #59
1010: invokevirtual #57
1013: ldc2_w        #23
1016: invokevirtual #58
1019: ldc           #56
1021: invokevirtual #57
1024: invokevirtual #60
1027: dload         31
1029: ldc2_w        #23
1032: dcmpl
1033: ifne          1040
1036: iconst_1
1037: goto          1041
1040: iconst_0
1041: invokestatic  #61
1044: aload         33
1046: invokestatic  #47
1049: aload         34
1051: invokestatic  #47
1054: new           #54
1057: dup
1058: invokespecial #55
1061: ldc           #56
1063: invokevirtual #57
1066: iload         37
1068: invokevirtual #62
1071: ldc           #59
1073: invokevirtual #57
1076: iconst_0
1077: invokevirtual #62
1080: ldc           #56
1082: invokevirtual #57
1085: invokevirtual #60
1088: iload         37
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #61
1101: aload         40
1103: invokestatic  #47
1106: aload         41
1108: invokestatic  #47
1111: aload         42
1113: invokestatic  #47
1116: aload         43
1118: invokestatic  #47
1121: aload         44
1123: invokestatic  #47
1126: new           #54
1129: dup
1130: invokespecial #55
1133: ldc           #56
1135: invokevirtual #57
1138: aload         45
1140: invokevirtual #82
1143: ldc           #59
1145: invokevirtual #57
1148: getstatic     #78
1151: invokevirtual #82
1154: ldc           #56
1156: invokevirtual #57
1159: invokevirtual #60
1162: aload         45
1164: getstatic     #78
1167: invokevirtual #83
1170: invokestatic  #61
1173: aload         46
1175: invokestatic  #47
1178: aload         47
1180: invokestatic  #47
1183: new           #54
1186: dup
1187: invokespecial #55
1190: ldc           #56
1192: invokevirtual #57
1195: iload         48
1197: invokevirtual #62
1200: ldc           #59
1202: invokevirtual #57
1205: bipush        97
1207: invokevirtual #62
1210: ldc           #56
1212: invokevirtual #57
1215: invokevirtual #60
1218: iload         48
1220: bipush        97
1222: if_icmpne     1229
1225: iconst_1
1226: goto          1230
1229: iconst_0
1230: invokestatic  #61
1233: aload         51
1235: invokestatic  #47
1238: aload         52
1240: invokestatic  #47
1243: aload         54
1245: invokestatic  #47
1248: aload         56
1250: invokestatic  #47
1253: aload         57
1255: invokestatic  #47
1258: new           #54
1261: dup
1262: invokespecial #55
1265: ldc           #56
1267: invokevirtual #57
1270: aload         58
1272: invokevirtual #82
1275: ldc           #59
1277: invokevirtual #57
1280: getstatic     #118
1283: invokevirtual #82
1286: ldc           #56
1288: invokevirtual #57
1291: invokevirtual #60
1294: aload         58
1296: getstatic     #118
1299: invokevirtual #83
1302: invokestatic  #61
1305: aload         59
1307: invokestatic  #47
1310: return
Exception table:
from    to  target type
516   541   544   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test317
Start line: 14874
End line: 14879
Method source code: 
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(201.71315737027922d, 4.641588833612779d, univariatePointValuePairConvergenceChecker2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1022
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #144
34: ldc2_w        #1023
37: aload_1
38: invokespecial #13
41: astore_2
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test318
Start line: 14882
End line: 15002
Method source code: 
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        int int8 = brentOptimizer3.getMaxEvaluations();
        int int9 = brentOptimizer3.getMaxEvaluations();
        int int10 = brentOptimizer3.getEvaluations();
        double double11 = brentOptimizer3.getMax();
        double double12 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer18 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker17);
        int int19 = brentOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin21 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin22 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction23 = sin22.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray24 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin21, sin22 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable25 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable26 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray24);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction27 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray24);
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair32 = brentOptimizer18.optimize(97, univariateFunction27, goalType28, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair33 = brentOptimizer18.doOptimize();
        int int34 = brentOptimizer18.getEvaluations();
        double double35 = brentOptimizer18.getMin();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer18.doOptimize();
        org.apache.commons.math3.exception.util.Localizable localizable38 = null;
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray44);
        org.apache.commons.math3.exception.MathIllegalArgumentException mathIllegalArgumentException49 = new org.apache.commons.math3.exception.MathIllegalArgumentException(localizable38, (java.lang.Object[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.compose(univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair71 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.analysis.function.Sin sin73 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction74 = sin73.derivative();
        org.apache.commons.math3.optimization.GoalType goalType75 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer54.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) sin73, goalType75, 3.141592653589793d, 0.0d);
        double double79 = brentOptimizer54.getMax();
        int int80 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType81 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair85 = brentOptimizer18.optimize(2147483647, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable50, goalType81, 3.0043213737826426d, 2.2316413623835194E-6d, 7.62939453125E-6d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair88 = brentOptimizer3.optimize((int) (byte) 10, univariateFunction14, goalType81, 42.97512519471661d, (-0.18338213718458096d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(univariateFunction23);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray24);
        org.junit.Assert.assertNotNull(univariateDifferentiable25);
        org.junit.Assert.assertNotNull(univariateDifferentiable26);
        org.junit.Assert.assertNotNull(univariateFunction27);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair32);
        org.junit.Assert.assertNotNull(univariatePointValuePair33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair71);
        org.junit.Assert.assertNotNull(univariateFunction74);
        org.junit.Assert.assertTrue("'" + goalType75 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType75.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + goalType81 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType81.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1025
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #50
69: istore        9
71: aload_2
72: invokevirtual #50
75: istore        10
77: aload_2
78: invokevirtual #71
81: istore        11
83: aload_2
84: invokevirtual #49
87: dstore        12
89: aload_2
90: invokevirtual #177
93: dstore        14
95: aconst_null
96: astore        16
98: aconst_null
99: astore        17
101: new           #8
104: dup
105: ldc2_w        #31
108: ldc2_w        #33
111: aload         17
113: invokespecial #13
116: astore        18
118: aload         18
120: invokevirtual #71
123: istore        19
125: new           #72
128: dup
129: invokespecial #73
132: astore        20
134: new           #72
137: dup
138: invokespecial #73
141: astore        21
143: aload         21
145: invokevirtual #74
148: astore        22
150: iconst_2
151: anewarray     #75
154: dup
155: iconst_0
156: aload         20
158: aastore
159: dup
160: iconst_1
161: aload         21
163: aastore
164: astore        23
166: aload         23
168: invokestatic  #76
171: astore        24
173: aload         23
175: invokestatic  #77
178: astore        25
180: aload         23
182: checkcast     #89
185: invokestatic  #90
188: astore        26
190: getstatic     #78
193: astore        27
195: aload         18
197: bipush        97
199: aload         26
201: aload         27
203: ldc2_w        #91
206: ldc2_w        #93
209: ldc2_w        #91
212: invokevirtual #44
215: astore        28
217: aload         18
219: invokevirtual #51
222: astore        29
224: aload         18
226: invokevirtual #71
229: istore        30
231: aload         18
233: invokevirtual #231
236: dstore        31
238: aload         18
240: invokevirtual #51
243: astore        33
245: aconst_null
246: astore        34
248: new           #72
251: dup
252: invokespecial #73
255: astore        35
257: new           #72
260: dup
261: invokespecial #73
264: astore        36
266: aload         36
268: invokevirtual #74
271: astore        37
273: new           #72
276: dup
277: invokespecial #73
280: astore        38
282: new           #72
285: dup
286: invokespecial #73
289: astore        39
291: iconst_4
292: anewarray     #75
295: dup
296: iconst_0
297: aload         35
299: aastore
300: dup
301: iconst_1
302: aload         36
304: aastore
305: dup
306: iconst_2
307: aload         38
309: aastore
310: dup
311: iconst_3
312: aload         39
314: aastore
315: astore        40
317: aload         40
319: invokestatic  #76
322: astore        41
324: aload         40
326: checkcast     #89
329: invokestatic  #109
332: astore        42
334: aload         40
336: invokestatic  #77
339: astore        43
341: aload         40
343: invokestatic  #77
346: astore        44
348: new           #284
351: dup
352: aload         34
354: aload         40
356: checkcast     #123
359: invokespecial #285
362: astore        45
364: aload         40
366: invokestatic  #280
369: astore        46
371: aconst_null
372: astore        47
374: new           #8
377: dup
378: ldc2_w        #31
381: ldc2_w        #33
384: aload         47
386: invokespecial #13
389: astore        48
391: aload         48
393: invokevirtual #71
396: istore        49
398: new           #72
401: dup
402: invokespecial #73
405: astore        50
407: new           #72
410: dup
411: invokespecial #73
414: astore        51
416: aload         51
418: invokevirtual #74
421: astore        52
423: iconst_2
424: anewarray     #75
427: dup
428: iconst_0
429: aload         50
431: aastore
432: dup
433: iconst_1
434: aload         51
436: aastore
437: astore        53
439: aload         53
441: invokestatic  #76
444: astore        54
446: aload         53
448: invokestatic  #77
451: astore        55
453: aload         53
455: checkcast     #89
458: invokestatic  #90
461: astore        56
463: getstatic     #78
466: astore        57
468: aload         48
470: bipush        97
472: aload         56
474: aload         57
476: ldc2_w        #91
479: ldc2_w        #93
482: ldc2_w        #91
485: invokevirtual #44
488: astore        58
490: aload         48
492: invokevirtual #51
495: astore        59
497: aload         48
499: invokevirtual #110
502: astore        60
504: aload         48
506: invokevirtual #51
509: astore        61
511: new           #72
514: dup
515: invokespecial #73
518: astore        62
520: aload         62
522: invokevirtual #74
525: astore        63
527: getstatic     #78
530: astore        64
532: aload         48
534: bipush        97
536: aload         62
538: aload         64
540: ldc2_w        #133
543: dconst_0
544: invokevirtual #81
547: astore        65
549: aload         48
551: invokevirtual #49
554: dstore        66
556: aload         48
558: invokevirtual #71
561: istore        68
563: aload         48
565: invokevirtual #110
568: astore        69
570: aload         18
572: ldc_w         #856
575: aload         46
577: aload         69
579: ldc2_w        #1026
582: ldc2_w        #1028
585: ldc2_w        #1030
588: invokevirtual #44
591: astore        70
593: aload_2
594: bipush        10
596: aload         16
598: aload         69
600: ldc2_w        #1032
603: ldc2_w        #1034
606: invokevirtual #81
609: astore        71
611: ldc           #45
613: invokestatic  #15
616: goto          621
619: astore        71
621: new           #54
624: dup
625: invokespecial #55
628: ldc           #56
630: invokevirtual #57
633: dload_3
634: invokevirtual #58
637: ldc           #59
639: invokevirtual #57
642: dconst_0
643: invokevirtual #58
646: ldc           #56
648: invokevirtual #57
651: invokevirtual #60
654: dload_3
655: dconst_0
656: dcmpl
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #61
668: new           #54
671: dup
672: invokespecial #55
675: ldc           #56
677: invokevirtual #57
680: iload         5
682: invokevirtual #62
685: ldc           #59
687: invokevirtual #57
690: iconst_0
691: invokevirtual #62
694: ldc           #56
696: invokevirtual #57
699: invokevirtual #60
702: iload         5
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #61
715: aload         6
717: invokestatic  #104
720: new           #54
723: dup
724: invokespecial #55
727: ldc           #56
729: invokevirtual #57
732: dload         7
734: invokevirtual #58
737: ldc           #59
739: invokevirtual #57
742: dconst_0
743: invokevirtual #58
746: ldc           #56
748: invokevirtual #57
751: invokevirtual #60
754: dload         7
756: dconst_0
757: dcmpl
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #61
769: new           #54
772: dup
773: invokespecial #55
776: ldc           #56
778: invokevirtual #57
781: iload         9
783: invokevirtual #62
786: ldc           #59
788: invokevirtual #57
791: iconst_0
792: invokevirtual #62
795: ldc           #56
797: invokevirtual #57
800: invokevirtual #60
803: iload         9
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #61
816: new           #54
819: dup
820: invokespecial #55
823: ldc           #56
825: invokevirtual #57
828: iload         10
830: invokevirtual #62
833: ldc           #59
835: invokevirtual #57
838: iconst_0
839: invokevirtual #62
842: ldc           #56
844: invokevirtual #57
847: invokevirtual #60
850: iload         10
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #61
863: new           #54
866: dup
867: invokespecial #55
870: ldc           #56
872: invokevirtual #57
875: iload         11
877: invokevirtual #62
880: ldc           #59
882: invokevirtual #57
885: iconst_0
886: invokevirtual #62
889: ldc           #56
891: invokevirtual #57
894: invokevirtual #60
897: iload         11
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #61
910: new           #54
913: dup
914: invokespecial #55
917: ldc           #56
919: invokevirtual #57
922: dload         12
924: invokevirtual #58
927: ldc           #59
929: invokevirtual #57
932: dconst_0
933: invokevirtual #58
936: ldc           #56
938: invokevirtual #57
941: invokevirtual #60
944: dload         12
946: dconst_0
947: dcmpl
948: ifne          955
951: iconst_1
952: goto          956
955: iconst_0
956: invokestatic  #61
959: new           #54
962: dup
963: invokespecial #55
966: ldc           #56
968: invokevirtual #57
971: dload         14
973: invokevirtual #58
976: ldc           #59
978: invokevirtual #57
981: dconst_0
982: invokevirtual #58
985: ldc           #56
987: invokevirtual #57
990: invokevirtual #60
993: dload         14
995: dconst_0
996: dcmpl
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #61
1008: new           #54
1011: dup
1012: invokespecial #55
1015: ldc           #56
1017: invokevirtual #57
1020: iload         19
1022: invokevirtual #62
1025: ldc           #59
1027: invokevirtual #57
1030: iconst_0
1031: invokevirtual #62
1034: ldc           #56
1036: invokevirtual #57
1039: invokevirtual #60
1042: iload         19
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #61
1055: aload         22
1057: invokestatic  #47
1060: aload         23
1062: invokestatic  #47
1065: aload         24
1067: invokestatic  #47
1070: aload         25
1072: invokestatic  #47
1075: aload         26
1077: invokestatic  #47
1080: new           #54
1083: dup
1084: invokespecial #55
1087: ldc           #56
1089: invokevirtual #57
1092: aload         27
1094: invokevirtual #82
1097: ldc           #59
1099: invokevirtual #57
1102: getstatic     #78
1105: invokevirtual #82
1108: ldc           #56
1110: invokevirtual #57
1113: invokevirtual #60
1116: aload         27
1118: getstatic     #78
1121: invokevirtual #83
1124: invokestatic  #61
1127: aload         28
1129: invokestatic  #47
1132: aload         29
1134: invokestatic  #47
1137: new           #54
1140: dup
1141: invokespecial #55
1144: ldc           #56
1146: invokevirtual #57
1149: iload         30
1151: invokevirtual #62
1154: ldc           #59
1156: invokevirtual #57
1159: bipush        8
1161: invokevirtual #62
1164: ldc           #56
1166: invokevirtual #57
1169: invokevirtual #60
1172: iload         30
1174: bipush        8
1176: if_icmpne     1183
1179: iconst_1
1180: goto          1184
1183: iconst_0
1184: invokestatic  #61
1187: new           #54
1190: dup
1191: invokespecial #55
1194: ldc           #56
1196: invokevirtual #57
1199: dload         31
1201: invokevirtual #58
1204: ldc           #59
1206: invokevirtual #57
1209: ldc2_w        #91
1212: invokevirtual #58
1215: ldc           #56
1217: invokevirtual #57
1220: invokevirtual #60
1223: dload         31
1225: ldc2_w        #91
1228: dcmpl
1229: ifne          1236
1232: iconst_1
1233: goto          1237
1236: iconst_0
1237: invokestatic  #61
1240: aload         33
1242: invokestatic  #47
1245: aload         37
1247: invokestatic  #47
1250: aload         40
1252: invokestatic  #47
1255: aload         41
1257: invokestatic  #47
1260: aload         42
1262: invokestatic  #47
1265: aload         43
1267: invokestatic  #47
1270: aload         44
1272: invokestatic  #47
1275: aload         46
1277: invokestatic  #47
1280: new           #54
1283: dup
1284: invokespecial #55
1287: ldc           #56
1289: invokevirtual #57
1292: iload         49
1294: invokevirtual #62
1297: ldc           #59
1299: invokevirtual #57
1302: iconst_0
1303: invokevirtual #62
1306: ldc           #56
1308: invokevirtual #57
1311: invokevirtual #60
1314: iload         49
1316: ifne          1323
1319: iconst_1
1320: goto          1324
1323: iconst_0
1324: invokestatic  #61
1327: aload         52
1329: invokestatic  #47
1332: aload         53
1334: invokestatic  #47
1337: aload         54
1339: invokestatic  #47
1342: aload         55
1344: invokestatic  #47
1347: aload         56
1349: invokestatic  #47
1352: new           #54
1355: dup
1356: invokespecial #55
1359: ldc           #56
1361: invokevirtual #57
1364: aload         57
1366: invokevirtual #82
1369: ldc           #59
1371: invokevirtual #57
1374: getstatic     #78
1377: invokevirtual #82
1380: ldc           #56
1382: invokevirtual #57
1385: invokevirtual #60
1388: aload         57
1390: getstatic     #78
1393: invokevirtual #83
1396: invokestatic  #61
1399: aload         58
1401: invokestatic  #47
1404: aload         59
1406: invokestatic  #47
1409: new           #54
1412: dup
1413: invokespecial #55
1416: ldc           #56
1418: invokevirtual #57
1421: aload         60
1423: invokevirtual #82
1426: ldc           #59
1428: invokevirtual #57
1431: getstatic     #78
1434: invokevirtual #82
1437: ldc           #56
1439: invokevirtual #57
1442: invokevirtual #60
1445: aload         60
1447: getstatic     #78
1450: invokevirtual #83
1453: invokestatic  #61
1456: aload         61
1458: invokestatic  #47
1461: aload         63
1463: invokestatic  #47
1466: new           #54
1469: dup
1470: invokespecial #55
1473: ldc           #56
1475: invokevirtual #57
1478: aload         64
1480: invokevirtual #82
1483: ldc           #59
1485: invokevirtual #57
1488: getstatic     #78
1491: invokevirtual #82
1494: ldc           #56
1496: invokevirtual #57
1499: invokevirtual #60
1502: aload         64
1504: getstatic     #78
1507: invokevirtual #83
1510: invokestatic  #61
1513: aload         65
1515: invokestatic  #47
1518: new           #54
1521: dup
1522: invokespecial #55
1525: ldc           #56
1527: invokevirtual #57
1530: dload         66
1532: invokevirtual #58
1535: ldc           #59
1537: invokevirtual #57
1540: dconst_0
1541: invokevirtual #58
1544: ldc           #56
1546: invokevirtual #57
1549: invokevirtual #60
1552: dload         66
1554: dconst_0
1555: dcmpl
1556: ifne          1563
1559: iconst_1
1560: goto          1564
1563: iconst_0
1564: invokestatic  #61
1567: new           #54
1570: dup
1571: invokespecial #55
1574: ldc           #56
1576: invokevirtual #57
1579: iload         68
1581: invokevirtual #62
1584: ldc           #59
1586: invokevirtual #57
1589: iconst_1
1590: invokevirtual #62
1593: ldc           #56
1595: invokevirtual #57
1598: invokevirtual #60
1601: iload         68
1603: iconst_1
1604: if_icmpne     1611
1607: iconst_1
1608: goto          1612
1611: iconst_0
1612: invokestatic  #61
1615: new           #54
1618: dup
1619: invokespecial #55
1622: ldc           #56
1624: invokevirtual #57
1627: aload         69
1629: invokevirtual #82
1632: ldc           #59
1634: invokevirtual #57
1637: getstatic     #78
1640: invokevirtual #82
1643: ldc           #56
1645: invokevirtual #57
1648: invokevirtual #60
1651: aload         69
1653: getstatic     #78
1656: invokevirtual #83
1659: invokestatic  #61
1662: aload         70
1664: invokestatic  #47
1667: return
Exception table:
from    to  target type
593   616   619   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test319
Start line: 15005
End line: 15024
Method source code: 
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        double double7 = brentOptimizer3.getMin();
        org.apache.commons.math3.optimization.GoalType goalType8 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        int int10 = brentOptimizer3.getEvaluations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(goalType8);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1036
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #231
63: dstore        6
65: aload_2
66: invokevirtual #110
69: astore        8
71: aload_2
72: invokevirtual #103
75: astore        9
77: aload_2
78: invokevirtual #71
81: istore        10
83: new           #54
86: dup
87: invokespecial #55
90: ldc           #56
92: invokevirtual #57
95: iload_3
96: invokevirtual #62
99: ldc           #59
101: invokevirtual #57
104: iconst_0
105: invokevirtual #62
108: ldc           #56
110: invokevirtual #57
113: invokevirtual #60
116: iload_3
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #61
128: new           #54
131: dup
132: invokespecial #55
135: ldc           #56
137: invokevirtual #57
140: iload         4
142: invokevirtual #62
145: ldc           #59
147: invokevirtual #57
150: iconst_0
151: invokevirtual #62
154: ldc           #56
156: invokevirtual #57
159: invokevirtual #60
162: iload         4
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #61
175: new           #54
178: dup
179: invokespecial #55
182: ldc           #56
184: invokevirtual #57
187: iload         5
189: invokevirtual #62
192: ldc           #59
194: invokevirtual #57
197: iconst_0
198: invokevirtual #62
201: ldc           #56
203: invokevirtual #57
206: invokevirtual #60
209: iload         5
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #61
222: new           #54
225: dup
226: invokespecial #55
229: ldc           #56
231: invokevirtual #57
234: dload         6
236: invokevirtual #58
239: ldc           #59
241: invokevirtual #57
244: dconst_0
245: invokevirtual #58
248: ldc           #56
250: invokevirtual #57
253: invokevirtual #60
256: dload         6
258: dconst_0
259: dcmpl
260: ifne          267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #61
271: aload         8
273: invokestatic  #104
276: aload         9
278: invokestatic  #104
281: new           #54
284: dup
285: invokespecial #55
288: ldc           #56
290: invokevirtual #57
293: iload         10
295: invokevirtual #62
298: ldc           #59
300: invokevirtual #57
303: iconst_0
304: invokevirtual #62
307: ldc           #56
309: invokevirtual #57
312: invokevirtual #60
315: iload         10
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #61
328: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test320
Start line: 15027
End line: 15152
Method source code: 
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getEvaluations();
        double double7 = brentOptimizer3.getMin();
        org.apache.commons.math3.optimization.GoalType goalType8 = brentOptimizer3.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker9 = brentOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = sin11.derivative();
        double double14 = sin11.value((double) (short) 10);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction15 = org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction((org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable) sin11);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction16 = sin11.derivative();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker19 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer20 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker19);
        int int21 = brentOptimizer20.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin23 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction25 = sin24.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray26 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin23, sin24 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable27 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray26);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction29 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray26);
        org.apache.commons.math3.optimization.GoalType goalType30 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair34 = brentOptimizer20.optimize(97, univariateFunction29, goalType30, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer20.doOptimize();
        int int36 = brentOptimizer20.getEvaluations();
        int int37 = brentOptimizer20.getEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable39 = null;
        org.apache.commons.math3.exception.util.Localizable localizable40 = null;
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.function.Sin sin50 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin51 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction52 = sin51.derivative();
        org.apache.commons.math3.analysis.function.Sin sin53 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin54 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray55 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin50, sin51, sin53, sin54 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable56 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray55);
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction58 = sin57.derivative();
        org.apache.commons.math3.analysis.function.Sin sin59 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction60 = sin59.derivative();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin62 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = sin62.derivative();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin65 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray66 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin61, sin62, sin64, sin65 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable67 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray66);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray68 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin42, univariateDifferentiable49, univariateDifferentiable56, sin57, sin59, univariateDifferentiable67 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable69 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray68);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException70 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable40, (java.lang.Number) (-120.00000095367432d), (java.lang.Object[]) univariateDifferentiableArray68);
        org.apache.commons.math3.exception.NullArgumentException nullArgumentException71 = new org.apache.commons.math3.exception.NullArgumentException(localizable39, (java.lang.Object[]) univariateDifferentiableArray68);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction72 = org.apache.commons.math3.analysis.FunctionUtils.multiply((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray68);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction73 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer77 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker76);
        int int78 = brentOptimizer77.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin80 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin81 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction82 = sin81.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray83 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin80, sin81 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable84 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray83);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable85 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray83);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction86 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray83);
        org.apache.commons.math3.optimization.GoalType goalType87 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair91 = brentOptimizer77.optimize(97, univariateFunction86, goalType87, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair95 = brentOptimizer20.optimize(17, univariateFunction73, goalType87, 99.99999999999999d, 2.238693057170856d, 0.8687261884639957d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair99 = brentOptimizer3.optimize(11, (org.apache.commons.math3.analysis.UnivariateFunction) sin11, goalType87, (double) 2.384186E-7f, (double) 1.0f, (-1.2942984546608819E-8d));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(goalType8);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker9);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.5440211108893698d) + "'", double14 == (-0.5440211108893698d));
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction15);
        org.junit.Assert.assertNotNull(univariateFunction16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(univariateFunction25);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray26);
        org.junit.Assert.assertNotNull(univariateDifferentiable27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateFunction29);
        org.junit.Assert.assertTrue("'" + goalType30 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType30.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair34);
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction52);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray55);
        org.junit.Assert.assertNotNull(univariateDifferentiable56);
        org.junit.Assert.assertNotNull(univariateFunction58);
        org.junit.Assert.assertNotNull(univariateFunction60);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray66);
        org.junit.Assert.assertNotNull(univariateDifferentiable67);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray68);
        org.junit.Assert.assertNotNull(univariateDifferentiable69);
        org.junit.Assert.assertNotNull(univariateFunction72);
        org.junit.Assert.assertNotNull(univariateFunction73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(univariateFunction82);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray83);
        org.junit.Assert.assertNotNull(univariateDifferentiable84);
        org.junit.Assert.assertNotNull(univariateDifferentiable85);
        org.junit.Assert.assertNotNull(univariateFunction86);
        org.junit.Assert.assertTrue("'" + goalType87 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType87.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair91);
        org.junit.Assert.assertNotNull(univariatePointValuePair95);
        org.junit.Assert.assertNotNull(univariatePointValuePair99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1037
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #71
57: istore        5
59: aload_2
60: invokevirtual #231
63: dstore        6
65: aload_2
66: invokevirtual #110
69: astore        8
71: aload_2
72: invokevirtual #103
75: astore        9
77: new           #72
80: dup
81: invokespecial #73
84: astore        10
86: aload         10
88: invokevirtual #74
91: astore        11
93: aload         10
95: ldc2_w        #91
98: invokevirtual #88
101: dstore        12
103: aload         10
105: invokestatic  #281
108: astore        14
110: aload         10
112: invokevirtual #74
115: astore        15
117: aconst_null
118: astore        16
120: new           #8
123: dup
124: ldc2_w        #31
127: ldc2_w        #33
130: aload         16
132: invokespecial #13
135: astore        17
137: aload         17
139: invokevirtual #71
142: istore        18
144: new           #72
147: dup
148: invokespecial #73
151: astore        19
153: new           #72
156: dup
157: invokespecial #73
160: astore        20
162: aload         20
164: invokevirtual #74
167: astore        21
169: iconst_2
170: anewarray     #75
173: dup
174: iconst_0
175: aload         19
177: aastore
178: dup
179: iconst_1
180: aload         20
182: aastore
183: astore        22
185: aload         22
187: invokestatic  #76
190: astore        23
192: aload         22
194: invokestatic  #77
197: astore        24
199: aload         22
201: checkcast     #89
204: invokestatic  #90
207: astore        25
209: getstatic     #78
212: astore        26
214: aload         17
216: bipush        97
218: aload         25
220: aload         26
222: ldc2_w        #91
225: ldc2_w        #93
228: ldc2_w        #91
231: invokevirtual #44
234: astore        27
236: aload         17
238: invokevirtual #51
241: astore        28
243: aload         17
245: invokevirtual #71
248: istore        29
250: aload         17
252: invokevirtual #71
255: istore        30
257: aconst_null
258: astore        31
260: aconst_null
261: astore        32
263: new           #72
266: dup
267: invokespecial #73
270: astore        33
272: new           #72
275: dup
276: invokespecial #73
279: astore        34
281: new           #72
284: dup
285: invokespecial #73
288: astore        35
290: aload         35
292: invokevirtual #74
295: astore        36
297: new           #72
300: dup
301: invokespecial #73
304: astore        37
306: new           #72
309: dup
310: invokespecial #73
313: astore        38
315: iconst_4
316: anewarray     #75
319: dup
320: iconst_0
321: aload         34
323: aastore
324: dup
325: iconst_1
326: aload         35
328: aastore
329: dup
330: iconst_2
331: aload         37
333: aastore
334: dup
335: iconst_3
336: aload         38
338: aastore
339: astore        39
341: aload         39
343: invokestatic  #76
346: astore        40
348: new           #72
351: dup
352: invokespecial #73
355: astore        41
357: new           #72
360: dup
361: invokespecial #73
364: astore        42
366: aload         42
368: invokevirtual #74
371: astore        43
373: new           #72
376: dup
377: invokespecial #73
380: astore        44
382: new           #72
385: dup
386: invokespecial #73
389: astore        45
391: iconst_4
392: anewarray     #75
395: dup
396: iconst_0
397: aload         41
399: aastore
400: dup
401: iconst_1
402: aload         42
404: aastore
405: dup
406: iconst_2
407: aload         44
409: aastore
410: dup
411: iconst_3
412: aload         45
414: aastore
415: astore        46
417: aload         46
419: invokestatic  #76
422: astore        47
424: new           #72
427: dup
428: invokespecial #73
431: astore        48
433: aload         48
435: invokevirtual #74
438: astore        49
440: new           #72
443: dup
444: invokespecial #73
447: astore        50
449: aload         50
451: invokevirtual #74
454: astore        51
456: new           #72
459: dup
460: invokespecial #73
463: astore        52
465: new           #72
468: dup
469: invokespecial #73
472: astore        53
474: aload         53
476: invokevirtual #74
479: astore        54
481: new           #72
484: dup
485: invokespecial #73
488: astore        55
490: new           #72
493: dup
494: invokespecial #73
497: astore        56
499: iconst_4
500: anewarray     #75
503: dup
504: iconst_0
505: aload         52
507: aastore
508: dup
509: iconst_1
510: aload         53
512: aastore
513: dup
514: iconst_2
515: aload         55
517: aastore
518: dup
519: iconst_3
520: aload         56
522: aastore
523: astore        57
525: aload         57
527: invokestatic  #76
530: astore        58
532: bipush        6
534: anewarray     #75
537: dup
538: iconst_0
539: aload         33
541: aastore
542: dup
543: iconst_1
544: aload         40
546: aastore
547: dup
548: iconst_2
549: aload         47
551: aastore
552: dup
553: iconst_3
554: aload         48
556: aastore
557: dup
558: iconst_4
559: aload         50
561: aastore
562: dup
563: iconst_5
564: aload         58
566: aastore
567: astore        59
569: aload         59
571: invokestatic  #77
574: astore        60
576: new           #313
579: dup
580: aload         32
582: ldc2_w        #219
585: invokestatic  #314
588: aload         59
590: checkcast     #123
593: invokespecial #315
596: astore        61
598: new           #46
601: dup
602: aload         31
604: aload         59
606: checkcast     #123
609: invokespecial #246
612: astore        62
614: aload         59
616: checkcast     #89
619: invokestatic  #117
622: astore        63
624: aload         59
626: checkcast     #89
629: invokestatic  #90
632: astore        64
634: aconst_null
635: astore        65
637: new           #8
640: dup
641: ldc2_w        #31
644: ldc2_w        #33
647: aload         65
649: invokespecial #13
652: astore        66
654: aload         66
656: invokevirtual #71
659: istore        67
661: new           #72
664: dup
665: invokespecial #73
668: astore        68
670: new           #72
673: dup
674: invokespecial #73
677: astore        69
679: aload         69
681: invokevirtual #74
684: astore        70
686: iconst_2
687: anewarray     #75
690: dup
691: iconst_0
692: aload         68
694: aastore
695: dup
696: iconst_1
697: aload         69
699: aastore
700: astore        71
702: aload         71
704: invokestatic  #76
707: astore        72
709: aload         71
711: invokestatic  #77
714: astore        73
716: aload         71
718: checkcast     #89
721: invokestatic  #90
724: astore        74
726: getstatic     #78
729: astore        75
731: aload         66
733: bipush        97
735: aload         74
737: aload         75
739: ldc2_w        #91
742: ldc2_w        #93
745: ldc2_w        #91
748: invokevirtual #44
751: astore        76
753: aload         17
755: bipush        17
757: aload         64
759: aload         75
761: ldc2_w        #507
764: ldc2_w        #509
767: ldc2_w        #511
770: invokevirtual #44
773: astore        77
775: aload_2
776: bipush        11
778: aload         10
780: aload         75
782: ldc2_w        #1038
785: dconst_1
786: ldc2_w        #1040
789: invokevirtual #44
792: astore        78
794: new           #54
797: dup
798: invokespecial #55
801: ldc           #56
803: invokevirtual #57
806: iload_3
807: invokevirtual #62
810: ldc           #59
812: invokevirtual #57
815: iconst_0
816: invokevirtual #62
819: ldc           #56
821: invokevirtual #57
824: invokevirtual #60
827: iload_3
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #61
839: new           #54
842: dup
843: invokespecial #55
846: ldc           #56
848: invokevirtual #57
851: iload         4
853: invokevirtual #62
856: ldc           #59
858: invokevirtual #57
861: iconst_0
862: invokevirtual #62
865: ldc           #56
867: invokevirtual #57
870: invokevirtual #60
873: iload         4
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #61
886: new           #54
889: dup
890: invokespecial #55
893: ldc           #56
895: invokevirtual #57
898: iload         5
900: invokevirtual #62
903: ldc           #59
905: invokevirtual #57
908: iconst_0
909: invokevirtual #62
912: ldc           #56
914: invokevirtual #57
917: invokevirtual #60
920: iload         5
922: ifne          929
925: iconst_1
926: goto          930
929: iconst_0
930: invokestatic  #61
933: new           #54
936: dup
937: invokespecial #55
940: ldc           #56
942: invokevirtual #57
945: dload         6
947: invokevirtual #58
950: ldc           #59
952: invokevirtual #57
955: dconst_0
956: invokevirtual #58
959: ldc           #56
961: invokevirtual #57
964: invokevirtual #60
967: dload         6
969: dconst_0
970: dcmpl
971: ifne          978
974: iconst_1
975: goto          979
978: iconst_0
979: invokestatic  #61
982: aload         8
984: invokestatic  #104
987: aload         9
989: invokestatic  #104
992: aload         11
994: invokestatic  #47
997: new           #54
1000: dup
1001: invokespecial #55
1004: ldc           #56
1006: invokevirtual #57
1009: dload         12
1011: invokevirtual #58
1014: ldc           #59
1016: invokevirtual #57
1019: ldc2_w        #406
1022: invokevirtual #58
1025: ldc           #56
1027: invokevirtual #57
1030: invokevirtual #60
1033: dload         12
1035: ldc2_w        #406
1038: dcmpl
1039: ifne          1046
1042: iconst_1
1043: goto          1047
1046: iconst_0
1047: invokestatic  #61
1050: aload         14
1052: invokestatic  #47
1055: aload         15
1057: invokestatic  #47
1060: new           #54
1063: dup
1064: invokespecial #55
1067: ldc           #56
1069: invokevirtual #57
1072: iload         18
1074: invokevirtual #62
1077: ldc           #59
1079: invokevirtual #57
1082: iconst_0
1083: invokevirtual #62
1086: ldc           #56
1088: invokevirtual #57
1091: invokevirtual #60
1094: iload         18
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #61
1107: aload         21
1109: invokestatic  #47
1112: aload         22
1114: invokestatic  #47
1117: aload         23
1119: invokestatic  #47
1122: aload         24
1124: invokestatic  #47
1127: aload         25
1129: invokestatic  #47
1132: new           #54
1135: dup
1136: invokespecial #55
1139: ldc           #56
1141: invokevirtual #57
1144: aload         26
1146: invokevirtual #82
1149: ldc           #59
1151: invokevirtual #57
1154: getstatic     #78
1157: invokevirtual #82
1160: ldc           #56
1162: invokevirtual #57
1165: invokevirtual #60
1168: aload         26
1170: getstatic     #78
1173: invokevirtual #83
1176: invokestatic  #61
1179: aload         27
1181: invokestatic  #47
1184: aload         28
1186: invokestatic  #47
1189: new           #54
1192: dup
1193: invokespecial #55
1196: ldc           #56
1198: invokevirtual #57
1201: iload         29
1203: invokevirtual #62
1206: ldc           #59
1208: invokevirtual #57
1211: bipush        8
1213: invokevirtual #62
1216: ldc           #56
1218: invokevirtual #57
1221: invokevirtual #60
1224: iload         29
1226: bipush        8
1228: if_icmpne     1235
1231: iconst_1
1232: goto          1236
1235: iconst_0
1236: invokestatic  #61
1239: new           #54
1242: dup
1243: invokespecial #55
1246: ldc           #56
1248: invokevirtual #57
1251: iload         30
1253: invokevirtual #62
1256: ldc           #59
1258: invokevirtual #57
1261: bipush        8
1263: invokevirtual #62
1266: ldc           #56
1268: invokevirtual #57
1271: invokevirtual #60
1274: iload         30
1276: bipush        8
1278: if_icmpne     1285
1281: iconst_1
1282: goto          1286
1285: iconst_0
1286: invokestatic  #61
1289: aload         36
1291: invokestatic  #47
1294: aload         39
1296: invokestatic  #47
1299: aload         40
1301: invokestatic  #47
1304: aload         43
1306: invokestatic  #47
1309: aload         46
1311: invokestatic  #47
1314: aload         47
1316: invokestatic  #47
1319: aload         49
1321: invokestatic  #47
1324: aload         51
1326: invokestatic  #47
1329: aload         54
1331: invokestatic  #47
1334: aload         57
1336: invokestatic  #47
1339: aload         58
1341: invokestatic  #47
1344: aload         59
1346: invokestatic  #47
1349: aload         60
1351: invokestatic  #47
1354: aload         63
1356: invokestatic  #47
1359: aload         64
1361: invokestatic  #47
1364: new           #54
1367: dup
1368: invokespecial #55
1371: ldc           #56
1373: invokevirtual #57
1376: iload         67
1378: invokevirtual #62
1381: ldc           #59
1383: invokevirtual #57
1386: iconst_0
1387: invokevirtual #62
1390: ldc           #56
1392: invokevirtual #57
1395: invokevirtual #60
1398: iload         67
1400: ifne          1407
1403: iconst_1
1404: goto          1408
1407: iconst_0
1408: invokestatic  #61
1411: aload         70
1413: invokestatic  #47
1416: aload         71
1418: invokestatic  #47
1421: aload         72
1423: invokestatic  #47
1426: aload         73
1428: invokestatic  #47
1431: aload         74
1433: invokestatic  #47
1436: new           #54
1439: dup
1440: invokespecial #55
1443: ldc           #56
1445: invokevirtual #57
1448: aload         75
1450: invokevirtual #82
1453: ldc           #59
1455: invokevirtual #57
1458: getstatic     #78
1461: invokevirtual #82
1464: ldc           #56
1466: invokevirtual #57
1469: invokevirtual #60
1472: aload         75
1474: getstatic     #78
1477: invokevirtual #83
1480: invokestatic  #61
1483: aload         76
1485: invokestatic  #47
1488: aload         77
1490: invokestatic  #47
1493: aload         78
1495: invokestatic  #47
1498: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test321
Start line: 15155
End line: 15250
Method source code: 
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin6 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin7 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction8 = sin7.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray9 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin6, sin7 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable10 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable11 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray9);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray9);
        org.apache.commons.math3.optimization.GoalType goalType13 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair17 = brentOptimizer3.optimize(97, univariateFunction12, goalType13, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        int int18 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.exception.util.Localizable localizable20 = null;
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        org.apache.commons.math3.exception.util.Localizable localizable23 = null;
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.function.Sin sin27 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin28 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray29 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25, sin27, sin28 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable30 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException31 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable23, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MathInternalError mathInternalError32 = new org.apache.commons.math3.exception.MathInternalError(localizable22, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable33 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray29);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException34 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable20, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray29);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable35 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray29);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer39 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker38);
        int int40 = brentOptimizer39.getMaxEvaluations();
        double double41 = brentOptimizer39.getMax();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin44 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction45 = sin44.derivative();
        org.apache.commons.math3.analysis.function.Sin sin46 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin47 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray48 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin43, sin44, sin46, sin47 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable49 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray48);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction50 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray60 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable61 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable62 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray60);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction63 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray60);
        org.apache.commons.math3.optimization.GoalType goalType64 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair68 = brentOptimizer54.optimize(97, univariateFunction63, goalType64, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair69 = brentOptimizer54.doOptimize();
        org.apache.commons.math3.optimization.GoalType goalType70 = brentOptimizer54.getGoalType();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair73 = brentOptimizer39.optimize((int) ' ', univariateFunction50, goalType70, 4.000043427276863d, 1.3017526366697145d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer3.optimize(2, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable35, goalType70, (-1.5707963267948912d), (double) (-0.9999999f));
        int int77 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair78 = brentOptimizer3.doOptimize();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(univariateFunction8);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray9);
        org.junit.Assert.assertNotNull(univariateDifferentiable10);
        org.junit.Assert.assertNotNull(univariateDifferentiable11);
        org.junit.Assert.assertNotNull(univariateFunction12);
        org.junit.Assert.assertTrue("'" + goalType13 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType13.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray29);
        org.junit.Assert.assertNotNull(univariateDifferentiable30);
        org.junit.Assert.assertNotNull(univariateDifferentiable33);
        org.junit.Assert.assertNotNull(univariateDifferentiable35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(univariateFunction45);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray48);
        org.junit.Assert.assertNotNull(univariateDifferentiable49);
        org.junit.Assert.assertNotNull(univariateFunction50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray60);
        org.junit.Assert.assertNotNull(univariateDifferentiable61);
        org.junit.Assert.assertNotNull(univariateDifferentiable62);
        org.junit.Assert.assertNotNull(univariateFunction63);
        org.junit.Assert.assertTrue("'" + goalType64 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType64.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair68);
        org.junit.Assert.assertNotNull(univariatePointValuePair69);
        org.junit.Assert.assertTrue("'" + goalType70 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType70.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair73);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(univariatePointValuePair78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1042
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: new           #72
50: dup
51: invokespecial #73
54: astore        4
56: new           #72
59: dup
60: invokespecial #73
63: astore        5
65: aload         5
67: invokevirtual #74
70: astore        6
72: iconst_2
73: anewarray     #75
76: dup
77: iconst_0
78: aload         4
80: aastore
81: dup
82: iconst_1
83: aload         5
85: aastore
86: astore        7
88: aload         7
90: invokestatic  #76
93: astore        8
95: aload         7
97: invokestatic  #77
100: astore        9
102: aload         7
104: checkcast     #89
107: invokestatic  #90
110: astore        10
112: getstatic     #78
115: astore        11
117: aload_2
118: bipush        97
120: aload         10
122: aload         11
124: ldc2_w        #91
127: ldc2_w        #93
130: ldc2_w        #91
133: invokevirtual #44
136: astore        12
138: aload_2
139: invokevirtual #50
142: istore        13
144: aconst_null
145: astore        14
147: aconst_null
148: astore        15
150: aconst_null
151: astore        16
153: new           #72
156: dup
157: invokespecial #73
160: astore        17
162: new           #72
165: dup
166: invokespecial #73
169: astore        18
171: aload         18
173: invokevirtual #74
176: astore        19
178: new           #72
181: dup
182: invokespecial #73
185: astore        20
187: new           #72
190: dup
191: invokespecial #73
194: astore        21
196: iconst_4
197: anewarray     #75
200: dup
201: iconst_0
202: aload         17
204: aastore
205: dup
206: iconst_1
207: aload         18
209: aastore
210: dup
211: iconst_2
212: aload         20
214: aastore
215: dup
216: iconst_3
217: aload         21
219: aastore
220: astore        22
222: aload         22
224: invokestatic  #76
227: astore        23
229: new           #122
232: dup
233: aload         16
235: aload         22
237: checkcast     #123
240: invokespecial #124
243: astore        24
245: new           #125
248: dup
249: aload         15
251: aload         22
253: checkcast     #123
256: invokespecial #126
259: astore        25
261: aload         22
263: invokestatic  #77
266: astore        26
268: new           #313
271: dup
272: aload         14
274: ldc2_w        #79
277: invokestatic  #314
280: aload         22
282: checkcast     #123
285: invokespecial #315
288: astore        27
290: aload         22
292: invokestatic  #76
295: astore        28
297: aconst_null
298: astore        29
300: new           #8
303: dup
304: ldc2_w        #31
307: ldc2_w        #33
310: aload         29
312: invokespecial #13
315: astore        30
317: aload         30
319: invokevirtual #50
322: istore        31
324: aload         30
326: invokevirtual #49
329: dstore        32
331: new           #72
334: dup
335: invokespecial #73
338: astore        34
340: new           #72
343: dup
344: invokespecial #73
347: astore        35
349: aload         35
351: invokevirtual #74
354: astore        36
356: new           #72
359: dup
360: invokespecial #73
363: astore        37
365: new           #72
368: dup
369: invokespecial #73
372: astore        38
374: iconst_4
375: anewarray     #75
378: dup
379: iconst_0
380: aload         34
382: aastore
383: dup
384: iconst_1
385: aload         35
387: aastore
388: dup
389: iconst_2
390: aload         37
392: aastore
393: dup
394: iconst_3
395: aload         38
397: aastore
398: astore        39
400: aload         39
402: invokestatic  #76
405: astore        40
407: aload         39
409: checkcast     #89
412: invokestatic  #109
415: astore        41
417: aconst_null
418: astore        42
420: new           #8
423: dup
424: ldc2_w        #31
427: ldc2_w        #33
430: aload         42
432: invokespecial #13
435: astore        43
437: aload         43
439: invokevirtual #71
442: istore        44
444: new           #72
447: dup
448: invokespecial #73
451: astore        45
453: new           #72
456: dup
457: invokespecial #73
460: astore        46
462: aload         46
464: invokevirtual #74
467: astore        47
469: iconst_2
470: anewarray     #75
473: dup
474: iconst_0
475: aload         45
477: aastore
478: dup
479: iconst_1
480: aload         46
482: aastore
483: astore        48
485: aload         48
487: invokestatic  #76
490: astore        49
492: aload         48
494: invokestatic  #77
497: astore        50
499: aload         48
501: checkcast     #89
504: invokestatic  #90
507: astore        51
509: getstatic     #78
512: astore        52
514: aload         43
516: bipush        97
518: aload         51
520: aload         52
522: ldc2_w        #91
525: ldc2_w        #93
528: ldc2_w        #91
531: invokevirtual #44
534: astore        53
536: aload         43
538: invokevirtual #51
541: astore        54
543: aload         43
545: invokevirtual #110
548: astore        55
550: aload         30
552: bipush        32
554: aload         41
556: aload         55
558: ldc2_w        #173
561: ldc2_w        #175
564: invokevirtual #81
567: astore        56
569: aload_2
570: iconst_2
571: aload         28
573: aload         55
575: ldc2_w        #316
578: ldc2_w        #255
581: invokevirtual #81
584: astore        57
586: aload_2
587: invokevirtual #71
590: istore        58
592: aload_2
593: invokevirtual #51
596: astore        59
598: new           #54
601: dup
602: invokespecial #55
605: ldc           #56
607: invokevirtual #57
610: iload_3
611: invokevirtual #62
614: ldc           #59
616: invokevirtual #57
619: iconst_0
620: invokevirtual #62
623: ldc           #56
625: invokevirtual #57
628: invokevirtual #60
631: iload_3
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #61
643: aload         6
645: invokestatic  #47
648: aload         7
650: invokestatic  #47
653: aload         8
655: invokestatic  #47
658: aload         9
660: invokestatic  #47
663: aload         10
665: invokestatic  #47
668: new           #54
671: dup
672: invokespecial #55
675: ldc           #56
677: invokevirtual #57
680: aload         11
682: invokevirtual #82
685: ldc           #59
687: invokevirtual #57
690: getstatic     #78
693: invokevirtual #82
696: ldc           #56
698: invokevirtual #57
701: invokevirtual #60
704: aload         11
706: getstatic     #78
709: invokevirtual #83
712: invokestatic  #61
715: aload         12
717: invokestatic  #47
720: new           #54
723: dup
724: invokespecial #55
727: ldc           #56
729: invokevirtual #57
732: iload         13
734: invokevirtual #62
737: ldc           #59
739: invokevirtual #57
742: bipush        97
744: invokevirtual #62
747: ldc           #56
749: invokevirtual #57
752: invokevirtual #60
755: iload         13
757: bipush        97
759: if_icmpne     766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #61
770: aload         19
772: invokestatic  #47
775: aload         22
777: invokestatic  #47
780: aload         23
782: invokestatic  #47
785: aload         26
787: invokestatic  #47
790: aload         28
792: invokestatic  #47
795: new           #54
798: dup
799: invokespecial #55
802: ldc           #56
804: invokevirtual #57
807: iload         31
809: invokevirtual #62
812: ldc           #59
814: invokevirtual #57
817: iconst_0
818: invokevirtual #62
821: ldc           #56
823: invokevirtual #57
826: invokevirtual #60
829: iload         31
831: ifne          838
834: iconst_1
835: goto          839
838: iconst_0
839: invokestatic  #61
842: new           #54
845: dup
846: invokespecial #55
849: ldc           #56
851: invokevirtual #57
854: dload         32
856: invokevirtual #58
859: ldc           #59
861: invokevirtual #57
864: dconst_0
865: invokevirtual #58
868: ldc           #56
870: invokevirtual #57
873: invokevirtual #60
876: dload         32
878: dconst_0
879: dcmpl
880: ifne          887
883: iconst_1
884: goto          888
887: iconst_0
888: invokestatic  #61
891: aload         36
893: invokestatic  #47
896: aload         39
898: invokestatic  #47
901: aload         40
903: invokestatic  #47
906: aload         41
908: invokestatic  #47
911: new           #54
914: dup
915: invokespecial #55
918: ldc           #56
920: invokevirtual #57
923: iload         44
925: invokevirtual #62
928: ldc           #59
930: invokevirtual #57
933: iconst_0
934: invokevirtual #62
937: ldc           #56
939: invokevirtual #57
942: invokevirtual #60
945: iload         44
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #61
958: aload         47
960: invokestatic  #47
963: aload         48
965: invokestatic  #47
968: aload         49
970: invokestatic  #47
973: aload         50
975: invokestatic  #47
978: aload         51
980: invokestatic  #47
983: new           #54
986: dup
987: invokespecial #55
990: ldc           #56
992: invokevirtual #57
995: aload         52
997: invokevirtual #82
1000: ldc           #59
1002: invokevirtual #57
1005: getstatic     #78
1008: invokevirtual #82
1011: ldc           #56
1013: invokevirtual #57
1016: invokevirtual #60
1019: aload         52
1021: getstatic     #78
1024: invokevirtual #83
1027: invokestatic  #61
1030: aload         53
1032: invokestatic  #47
1035: aload         54
1037: invokestatic  #47
1040: new           #54
1043: dup
1044: invokespecial #55
1047: ldc           #56
1049: invokevirtual #57
1052: aload         55
1054: invokevirtual #82
1057: ldc           #59
1059: invokevirtual #57
1062: getstatic     #78
1065: invokevirtual #82
1068: ldc           #56
1070: invokevirtual #57
1073: invokevirtual #60
1076: aload         55
1078: getstatic     #78
1081: invokevirtual #83
1084: invokestatic  #61
1087: aload         56
1089: invokestatic  #47
1092: aload         57
1094: invokestatic  #47
1097: new           #54
1100: dup
1101: invokespecial #55
1104: ldc           #56
1106: invokevirtual #57
1109: iload         58
1111: invokevirtual #62
1114: ldc           #59
1116: invokevirtual #57
1119: iconst_1
1120: invokevirtual #62
1123: ldc           #56
1125: invokevirtual #57
1128: invokevirtual #60
1131: iload         58
1133: iconst_1
1134: if_icmpne     1141
1137: iconst_1
1138: goto          1142
1141: iconst_0
1142: invokestatic  #61
1145: aload         59
1147: invokestatic  #47
1150: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test322
Start line: 15253
End line: 15264
Method source code: 
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((-13.773597584437857d), (double) 1.0f, univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooSmallException; message: -13.774 is smaller than the minimum (0)");
        } catch (org.apache.commons.math3.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1043
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #1044
34: dconst_1
35: aload_1
36: invokespecial #13
39: astore_2
40: ldc_w         #1046
43: invokestatic  #15
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
27    46    49   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test323
Start line: 15267
End line: 15290
Method source code: 
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        int int8 = brentOptimizer3.getMaxEvaluations();
        int int9 = brentOptimizer3.getMaxEvaluations();
        int int10 = brentOptimizer3.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker11 = brentOptimizer3.getConvergenceChecker();
        int int12 = brentOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1047
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aload_2
66: invokevirtual #50
69: istore        9
71: aload_2
72: invokevirtual #50
75: istore        10
77: aload_2
78: invokevirtual #71
81: istore        11
83: aload_2
84: invokevirtual #103
87: astore        12
89: aload_2
90: invokevirtual #50
93: istore        13
95: new           #54
98: dup
99: invokespecial #55
102: ldc           #56
104: invokevirtual #57
107: dload_3
108: invokevirtual #58
111: ldc           #59
113: invokevirtual #57
116: dconst_0
117: invokevirtual #58
120: ldc           #56
122: invokevirtual #57
125: invokevirtual #60
128: dload_3
129: dconst_0
130: dcmpl
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #61
142: new           #54
145: dup
146: invokespecial #55
149: ldc           #56
151: invokevirtual #57
154: iload         5
156: invokevirtual #62
159: ldc           #59
161: invokevirtual #57
164: iconst_0
165: invokevirtual #62
168: ldc           #56
170: invokevirtual #57
173: invokevirtual #60
176: iload         5
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #61
189: aload         6
191: invokestatic  #104
194: new           #54
197: dup
198: invokespecial #55
201: ldc           #56
203: invokevirtual #57
206: dload         7
208: invokevirtual #58
211: ldc           #59
213: invokevirtual #57
216: dconst_0
217: invokevirtual #58
220: ldc           #56
222: invokevirtual #57
225: invokevirtual #60
228: dload         7
230: dconst_0
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #61
243: new           #54
246: dup
247: invokespecial #55
250: ldc           #56
252: invokevirtual #57
255: iload         9
257: invokevirtual #62
260: ldc           #59
262: invokevirtual #57
265: iconst_0
266: invokevirtual #62
269: ldc           #56
271: invokevirtual #57
274: invokevirtual #60
277: iload         9
279: ifne          286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #61
290: new           #54
293: dup
294: invokespecial #55
297: ldc           #56
299: invokevirtual #57
302: iload         10
304: invokevirtual #62
307: ldc           #59
309: invokevirtual #57
312: iconst_0
313: invokevirtual #62
316: ldc           #56
318: invokevirtual #57
321: invokevirtual #60
324: iload         10
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #61
337: new           #54
340: dup
341: invokespecial #55
344: ldc           #56
346: invokevirtual #57
349: iload         11
351: invokevirtual #62
354: ldc           #59
356: invokevirtual #57
359: iconst_0
360: invokevirtual #62
363: ldc           #56
365: invokevirtual #57
368: invokevirtual #60
371: iload         11
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #61
384: aload         12
386: invokestatic  #104
389: new           #54
392: dup
393: invokespecial #55
396: ldc           #56
398: invokevirtual #57
401: iload         13
403: invokevirtual #62
406: ldc           #59
408: invokevirtual #57
411: iconst_0
412: invokevirtual #62
415: ldc           #56
417: invokevirtual #57
420: invokevirtual #60
423: iload         13
425: ifne          432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #61
436: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test324
Start line: 15293
End line: 15304
Method source code: 
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(1.8184464592320668d, (-2864794.7735337033d), univariatePointValuePairConvergenceChecker2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -2,864,794.774 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1048
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #550
34: ldc2_w        #727
37: aload_1
38: invokespecial #13
41: astore_2
42: ldc_w         #1049
45: invokestatic  #15
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test325
Start line: 15307
End line: 15313
Method source code: 
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer((double) 3.8146973E-6f, 5729.57829566771d);
        double double3 = brentOptimizer2.getStartValue();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1050
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #341
32: ldc2_w        #375
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #177
43: dstore_2
44: new           #54
47: dup
48: invokespecial #55
51: ldc           #56
53: invokevirtual #57
56: dload_2
57: invokevirtual #58
60: ldc           #59
62: invokevirtual #57
65: dconst_0
66: invokevirtual #58
69: ldc           #56
71: invokevirtual #57
74: invokevirtual #60
77: dload_2
78: dconst_0
79: dcmpl
80: ifne          87
83: iconst_1
84: goto          88
87: iconst_0
88: invokestatic  #61
91: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test326
Start line: 15316
End line: 15415
Method source code: 
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        int int4 = brentOptimizer3.getEvaluations();
        int int5 = brentOptimizer3.getEvaluations();
        int int6 = brentOptimizer3.getMaxEvaluations();
        double double7 = brentOptimizer3.getStartValue();
        double double8 = brentOptimizer3.getMin();
        org.apache.commons.math3.exception.util.Localizable localizable10 = null;
        org.apache.commons.math3.analysis.function.Sin sin11 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray12 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] { sin11 };
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction13 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray12);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) differentiableUnivariateFunctionArray12);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException15 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable10, (java.lang.Object[]) differentiableUnivariateFunctionArray12);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray12);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction17 = org.apache.commons.math3.analysis.FunctionUtils.add(differentiableUnivariateFunctionArray12);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker20 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer21 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker20);
        int int22 = brentOptimizer21.getEvaluations();
        org.apache.commons.math3.analysis.function.Sin sin24 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin25 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction26 = sin25.derivative();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray27 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin24, sin25 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable28 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable29 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray27);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction30 = org.apache.commons.math3.analysis.FunctionUtils.compose((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray27);
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair35 = brentOptimizer21.optimize(97, univariateFunction30, goalType31, (double) (byte) 10, 1.4210854715202004E-14d, 10.0d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair36 = brentOptimizer21.doOptimize();
        double double37 = brentOptimizer21.getMax();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction41 = sin40.derivative();
        org.apache.commons.math3.analysis.function.Sin sin42 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin43 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray44 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin39, sin40, sin42, sin43 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction46 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray44);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray44);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer51 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker50);
        int int52 = brentOptimizer51.getEvaluations();
        int int53 = brentOptimizer51.getEvaluations();
        int int54 = brentOptimizer51.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction56 = null;
        org.apache.commons.math3.analysis.function.Sin sin57 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin58 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction59 = sin58.derivative();
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray62 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin57, sin58, sin60, sin61 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable63 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray62);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction64 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray62);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable65 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray62);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction67 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction56, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable65, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType68 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair72 = brentOptimizer51.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable65, goalType68, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair76 = brentOptimizer21.optimize(4, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable47, goalType68, 1.2786363145140078E-4d, (-0.8942257319186149d), 3.6757332503588205d);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair79 = brentOptimizer3.optimize(524, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction17, goalType68, (double) 97.0f, 14.744763703714932d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray12);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction13);
        org.junit.Assert.assertNotNull(univariateFunction14);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction16);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(univariateFunction26);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray27);
        org.junit.Assert.assertNotNull(univariateDifferentiable28);
        org.junit.Assert.assertNotNull(univariateDifferentiable29);
        org.junit.Assert.assertNotNull(univariateFunction30);
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair35);
        org.junit.Assert.assertNotNull(univariatePointValuePair36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.4210854715202004E-14d + "'", double37 == 1.4210854715202004E-14d);
        org.junit.Assert.assertNotNull(univariateFunction41);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray44);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateFunction46);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(univariateFunction59);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray62);
        org.junit.Assert.assertNotNull(univariateDifferentiable63);
        org.junit.Assert.assertNotNull(univariateFunction64);
        org.junit.Assert.assertNotNull(univariateDifferentiable65);
        org.junit.Assert.assertNotNull(multivariateFunction67);
        org.junit.Assert.assertTrue("'" + goalType68 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType68.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair72);
        org.junit.Assert.assertNotNull(univariatePointValuePair76);
        org.junit.Assert.assertNotNull(univariatePointValuePair79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1051
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #71
46: istore_3
47: aload_2
48: invokevirtual #71
51: istore        4
53: aload_2
54: invokevirtual #50
57: istore        5
59: aload_2
60: invokevirtual #177
63: dstore        6
65: aload_2
66: invokevirtual #231
69: dstore        8
71: aconst_null
72: astore        10
74: new           #72
77: dup
78: invokespecial #73
81: astore        11
83: iconst_1
84: anewarray     #141
87: dup
88: iconst_0
89: aload         11
91: aastore
92: astore        12
94: aload         12
96: invokestatic  #142
99: astore        13
101: aload         12
103: checkcast     #89
106: invokestatic  #90
109: astore        14
111: new           #122
114: dup
115: aload         10
117: aload         12
119: checkcast     #123
122: invokespecial #124
125: astore        15
127: aload         12
129: invokestatic  #245
132: astore        16
134: aload         12
136: invokestatic  #497
139: astore        17
141: aconst_null
142: astore        18
144: new           #8
147: dup
148: ldc2_w        #31
151: ldc2_w        #33
154: aload         18
156: invokespecial #13
159: astore        19
161: aload         19
163: invokevirtual #71
166: istore        20
168: new           #72
171: dup
172: invokespecial #73
175: astore        21
177: new           #72
180: dup
181: invokespecial #73
184: astore        22
186: aload         22
188: invokevirtual #74
191: astore        23
193: iconst_2
194: anewarray     #75
197: dup
198: iconst_0
199: aload         21
201: aastore
202: dup
203: iconst_1
204: aload         22
206: aastore
207: astore        24
209: aload         24
211: invokestatic  #76
214: astore        25
216: aload         24
218: invokestatic  #77
221: astore        26
223: aload         24
225: checkcast     #89
228: invokestatic  #90
231: astore        27
233: getstatic     #78
236: astore        28
238: aload         19
240: bipush        97
242: aload         27
244: aload         28
246: ldc2_w        #91
249: ldc2_w        #93
252: ldc2_w        #91
255: invokevirtual #44
258: astore        29
260: aload         19
262: invokevirtual #51
265: astore        30
267: aload         19
269: invokevirtual #49
272: dstore        31
274: new           #72
277: dup
278: invokespecial #73
281: astore        33
283: new           #72
286: dup
287: invokespecial #73
290: astore        34
292: aload         34
294: invokevirtual #74
297: astore        35
299: new           #72
302: dup
303: invokespecial #73
306: astore        36
308: new           #72
311: dup
312: invokespecial #73
315: astore        37
317: iconst_4
318: anewarray     #75
321: dup
322: iconst_0
323: aload         33
325: aastore
326: dup
327: iconst_1
328: aload         34
330: aastore
331: dup
332: iconst_2
333: aload         36
335: aastore
336: dup
337: iconst_3
338: aload         37
340: aastore
341: astore        38
343: aload         38
345: invokestatic  #76
348: astore        39
350: aload         38
352: checkcast     #89
355: invokestatic  #109
358: astore        40
360: aload         38
362: invokestatic  #76
365: astore        41
367: aconst_null
368: astore        42
370: new           #8
373: dup
374: ldc2_w        #31
377: ldc2_w        #33
380: aload         42
382: invokespecial #13
385: astore        43
387: aload         43
389: invokevirtual #71
392: istore        44
394: aload         43
396: invokevirtual #71
399: istore        45
401: aload         43
403: invokevirtual #71
406: istore        46
408: aconst_null
409: astore        47
411: new           #72
414: dup
415: invokespecial #73
418: astore        48
420: new           #72
423: dup
424: invokespecial #73
427: astore        49
429: aload         49
431: invokevirtual #74
434: astore        50
436: new           #72
439: dup
440: invokespecial #73
443: astore        51
445: new           #72
448: dup
449: invokespecial #73
452: astore        52
454: iconst_4
455: anewarray     #75
458: dup
459: iconst_0
460: aload         48
462: aastore
463: dup
464: iconst_1
465: aload         49
467: aastore
468: dup
469: iconst_2
470: aload         51
472: aastore
473: dup
474: iconst_3
475: aload         52
477: aastore
478: astore        53
480: aload         53
482: invokestatic  #76
485: astore        54
487: aload         53
489: checkcast     #89
492: invokestatic  #109
495: astore        55
497: aload         53
499: invokestatic  #77
502: astore        56
504: aload         47
506: aload         56
508: ldc2_w        #181
511: invokestatic  #183
514: astore        57
516: getstatic     #118
519: astore        58
521: aload         43
523: bipush        10
525: aload         56
527: aload         58
529: ldc2_w        #184
532: ldc2_w        #186
535: ldc2_w        #188
538: invokevirtual #44
541: astore        59
543: aload         19
545: iconst_4
546: aload         41
548: aload         58
550: ldc2_w        #884
553: ldc2_w        #682
556: ldc2_w        #288
559: invokevirtual #44
562: astore        60
564: aload_2
565: sipush        524
568: aload         17
570: aload         58
572: ldc2_w        #11
575: ldc2_w        #1052
578: invokevirtual #81
581: astore        61
583: new           #54
586: dup
587: invokespecial #55
590: ldc           #56
592: invokevirtual #57
595: iload_3
596: invokevirtual #62
599: ldc           #59
601: invokevirtual #57
604: iconst_0
605: invokevirtual #62
608: ldc           #56
610: invokevirtual #57
613: invokevirtual #60
616: iload_3
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #61
628: new           #54
631: dup
632: invokespecial #55
635: ldc           #56
637: invokevirtual #57
640: iload         4
642: invokevirtual #62
645: ldc           #59
647: invokevirtual #57
650: iconst_0
651: invokevirtual #62
654: ldc           #56
656: invokevirtual #57
659: invokevirtual #60
662: iload         4
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #61
675: new           #54
678: dup
679: invokespecial #55
682: ldc           #56
684: invokevirtual #57
687: iload         5
689: invokevirtual #62
692: ldc           #59
694: invokevirtual #57
697: iconst_0
698: invokevirtual #62
701: ldc           #56
703: invokevirtual #57
706: invokevirtual #60
709: iload         5
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #61
722: new           #54
725: dup
726: invokespecial #55
729: ldc           #56
731: invokevirtual #57
734: dload         6
736: invokevirtual #58
739: ldc           #59
741: invokevirtual #57
744: dconst_0
745: invokevirtual #58
748: ldc           #56
750: invokevirtual #57
753: invokevirtual #60
756: dload         6
758: dconst_0
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #61
771: new           #54
774: dup
775: invokespecial #55
778: ldc           #56
780: invokevirtual #57
783: dload         8
785: invokevirtual #58
788: ldc           #59
790: invokevirtual #57
793: dconst_0
794: invokevirtual #58
797: ldc           #56
799: invokevirtual #57
802: invokevirtual #60
805: dload         8
807: dconst_0
808: dcmpl
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #61
820: aload         12
822: invokestatic  #47
825: aload         13
827: invokestatic  #47
830: aload         14
832: invokestatic  #47
835: aload         16
837: invokestatic  #47
840: aload         17
842: invokestatic  #47
845: new           #54
848: dup
849: invokespecial #55
852: ldc           #56
854: invokevirtual #57
857: iload         20
859: invokevirtual #62
862: ldc           #59
864: invokevirtual #57
867: iconst_0
868: invokevirtual #62
871: ldc           #56
873: invokevirtual #57
876: invokevirtual #60
879: iload         20
881: ifne          888
884: iconst_1
885: goto          889
888: iconst_0
889: invokestatic  #61
892: aload         23
894: invokestatic  #47
897: aload         24
899: invokestatic  #47
902: aload         25
904: invokestatic  #47
907: aload         26
909: invokestatic  #47
912: aload         27
914: invokestatic  #47
917: new           #54
920: dup
921: invokespecial #55
924: ldc           #56
926: invokevirtual #57
929: aload         28
931: invokevirtual #82
934: ldc           #59
936: invokevirtual #57
939: getstatic     #78
942: invokevirtual #82
945: ldc           #56
947: invokevirtual #57
950: invokevirtual #60
953: aload         28
955: getstatic     #78
958: invokevirtual #83
961: invokestatic  #61
964: aload         29
966: invokestatic  #47
969: aload         30
971: invokestatic  #47
974: new           #54
977: dup
978: invokespecial #55
981: ldc           #56
983: invokevirtual #57
986: dload         31
988: invokevirtual #58
991: ldc           #59
993: invokevirtual #57
996: ldc2_w        #93
999: invokevirtual #58
1002: ldc           #56
1004: invokevirtual #57
1007: invokevirtual #60
1010: dload         31
1012: ldc2_w        #93
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #61
1027: aload         35
1029: invokestatic  #47
1032: aload         38
1034: invokestatic  #47
1037: aload         39
1039: invokestatic  #47
1042: aload         40
1044: invokestatic  #47
1047: aload         41
1049: invokestatic  #47
1052: new           #54
1055: dup
1056: invokespecial #55
1059: ldc           #56
1061: invokevirtual #57
1064: iload         44
1066: invokevirtual #62
1069: ldc           #59
1071: invokevirtual #57
1074: iconst_0
1075: invokevirtual #62
1078: ldc           #56
1080: invokevirtual #57
1083: invokevirtual #60
1086: iload         44
1088: ifne          1095
1091: iconst_1
1092: goto          1096
1095: iconst_0
1096: invokestatic  #61
1099: new           #54
1102: dup
1103: invokespecial #55
1106: ldc           #56
1108: invokevirtual #57
1111: iload         45
1113: invokevirtual #62
1116: ldc           #59
1118: invokevirtual #57
1121: iconst_0
1122: invokevirtual #62
1125: ldc           #56
1127: invokevirtual #57
1130: invokevirtual #60
1133: iload         45
1135: ifne          1142
1138: iconst_1
1139: goto          1143
1142: iconst_0
1143: invokestatic  #61
1146: new           #54
1149: dup
1150: invokespecial #55
1153: ldc           #56
1155: invokevirtual #57
1158: iload         46
1160: invokevirtual #62
1163: ldc           #59
1165: invokevirtual #57
1168: iconst_0
1169: invokevirtual #62
1172: ldc           #56
1174: invokevirtual #57
1177: invokevirtual #60
1180: iload         46
1182: ifne          1189
1185: iconst_1
1186: goto          1190
1189: iconst_0
1190: invokestatic  #61
1193: aload         50
1195: invokestatic  #47
1198: aload         53
1200: invokestatic  #47
1203: aload         54
1205: invokestatic  #47
1208: aload         55
1210: invokestatic  #47
1213: aload         56
1215: invokestatic  #47
1218: aload         57
1220: invokestatic  #47
1223: new           #54
1226: dup
1227: invokespecial #55
1230: ldc           #56
1232: invokevirtual #57
1235: aload         58
1237: invokevirtual #82
1240: ldc           #59
1242: invokevirtual #57
1245: getstatic     #118
1248: invokevirtual #82
1251: ldc           #56
1253: invokevirtual #57
1256: invokevirtual #60
1259: aload         58
1261: getstatic     #118
1264: invokevirtual #83
1267: invokestatic  #61
1270: aload         59
1272: invokestatic  #47
1275: aload         60
1277: invokestatic  #47
1280: aload         61
1282: invokestatic  #47
1285: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test327
Start line: 15418
End line: 15426
Method source code: 
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer2 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(80372.16322833701d, (double) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker3 = brentOptimizer2.getConvergenceChecker();
        double double4 = brentOptimizer2.getStartValue();
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1054
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #233
32: ldc2_w        #91
35: invokespecial #25
38: astore_1
39: aload_1
40: invokevirtual #103
43: astore_2
44: aload_1
45: invokevirtual #177
48: dstore_3
49: aload_2
50: invokestatic  #104
53: new           #54
56: dup
57: invokespecial #55
60: ldc           #56
62: invokevirtual #57
65: dload_3
66: invokevirtual #58
69: ldc           #59
71: invokevirtual #57
74: dconst_0
75: invokevirtual #58
78: ldc           #56
80: invokevirtual #57
83: invokevirtual #60
86: dload_3
87: dconst_0
88: dcmpl
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #61
100: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/RegressionTest0.class
Class name: RegressionTest0
Method name: test328
Start line: 15429
End line: 15536
Method source code: 
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer3 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker2);
        double double4 = brentOptimizer3.getMax();
        int int5 = brentOptimizer3.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker6 = brentOptimizer3.getConvergenceChecker();
        double double7 = brentOptimizer3.getStartValue();
        org.apache.commons.math3.exception.util.Localizable localizable9 = null;
        org.apache.commons.math3.exception.util.Localizable localizable10 = null;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] differentiableUnivariateFunctionArray11 = new org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] {};
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction12 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.exception.MathArithmeticException mathArithmeticException13 = new org.apache.commons.math3.exception.MathArithmeticException(localizable10, (java.lang.Object[]) differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction14 = org.apache.commons.math3.analysis.FunctionUtils.multiply(differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException15 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable9, (java.lang.Object[]) differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction16 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction17 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction18 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction differentiableUnivariateFunction19 = org.apache.commons.math3.analysis.FunctionUtils.compose(differentiableUnivariateFunctionArray11);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable20 = org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(differentiableUnivariateFunction19);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer24 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker23);
        int int25 = brentOptimizer24.getEvaluations();
        int int26 = brentOptimizer24.getEvaluations();
        int int27 = brentOptimizer24.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker28 = brentOptimizer24.getConvergenceChecker();
        org.apache.commons.math3.exception.util.Localizable localizable30 = null;
        org.apache.commons.math3.exception.util.Localizable localizable32 = null;
        org.apache.commons.math3.exception.util.Localizable localizable34 = null;
        org.apache.commons.math3.exception.util.Localizable localizable35 = null;
        org.apache.commons.math3.analysis.function.Sin sin36 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin37 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction38 = sin37.derivative();
        org.apache.commons.math3.analysis.function.Sin sin39 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin40 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray41 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin36, sin37, sin39, sin40 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable42 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray41);
        org.apache.commons.math3.exception.MathIllegalStateException mathIllegalStateException43 = new org.apache.commons.math3.exception.MathIllegalStateException(localizable35, (java.lang.Object[]) univariateDifferentiableArray41);
        org.apache.commons.math3.exception.MathInternalError mathInternalError44 = new org.apache.commons.math3.exception.MathInternalError(localizable34, (java.lang.Object[]) univariateDifferentiableArray41);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable45 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray41);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException46 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable32, (java.lang.Number) 0.17453292519943295d, (java.lang.Object[]) univariateDifferentiableArray41);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable47 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray41);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable48 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray41);
        org.apache.commons.math3.exception.MaxCountExceededException maxCountExceededException49 = new org.apache.commons.math3.exception.MaxCountExceededException(localizable30, (java.lang.Number) 5729.5779513082325d, (java.lang.Object[]) univariateDifferentiableArray41);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable50 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray41);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> univariatePointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.univariate.BrentOptimizer brentOptimizer54 = new org.apache.commons.math3.optimization.univariate.BrentOptimizer(9.094947017729282E-13d, 1.520858701862118d, univariatePointValuePairConvergenceChecker53);
        int int55 = brentOptimizer54.getEvaluations();
        int int56 = brentOptimizer54.getEvaluations();
        int int57 = brentOptimizer54.getEvaluations();
        org.apache.commons.math3.analysis.BivariateFunction bivariateFunction59 = null;
        org.apache.commons.math3.analysis.function.Sin sin60 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin61 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction62 = sin61.derivative();
        org.apache.commons.math3.analysis.function.Sin sin63 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.function.Sin sin64 = new org.apache.commons.math3.analysis.function.Sin();
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] univariateDifferentiableArray65 = new org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[] { sin60, sin61, sin63, sin64 };
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable66 = org.apache.commons.math3.analysis.FunctionUtils.multiply(univariateDifferentiableArray65);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction67 = org.apache.commons.math3.analysis.FunctionUtils.add((org.apache.commons.math3.analysis.UnivariateFunction[]) univariateDifferentiableArray65);
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable univariateDifferentiable68 = org.apache.commons.math3.analysis.FunctionUtils.add(univariateDifferentiableArray65);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction70 = org.apache.commons.math3.analysis.FunctionUtils.collector(bivariateFunction59, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable68, 96.93296794516414d);
        org.apache.commons.math3.optimization.GoalType goalType71 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair75 = brentOptimizer54.optimize((int) (short) 10, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable68, goalType71, (double) 6.0f, 7.544137102816975d, (double) 12);
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair79 = brentOptimizer24.optimize(97, (org.apache.commons.math3.analysis.UnivariateFunction) univariateDifferentiable50, goalType71, (double) 0L, 0.8865583226060262d, (-1362.4112920855202d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair univariatePointValuePair82 = brentOptimizer3.optimize((int) (byte) 10, (org.apache.commons.math3.analysis.UnivariateFunction) differentiableUnivariateFunction19, goalType71, 1.10441242001088E155d, 1.58859428E8d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (10) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunctionArray11);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction12);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction14);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction16);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction17);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction18);
        org.junit.Assert.assertNotNull(differentiableUnivariateFunction19);
        org.junit.Assert.assertNotNull(univariateDifferentiable20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(univariatePointValuePairConvergenceChecker28);
        org.junit.Assert.assertNotNull(univariateFunction38);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray41);
        org.junit.Assert.assertNotNull(univariateDifferentiable42);
        org.junit.Assert.assertNotNull(univariateDifferentiable45);
        org.junit.Assert.assertNotNull(univariateDifferentiable47);
        org.junit.Assert.assertNotNull(univariateDifferentiable48);
        org.junit.Assert.assertNotNull(univariateDifferentiable50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(univariateFunction62);
        org.junit.Assert.assertNotNull(univariateDifferentiableArray65);
        org.junit.Assert.assertNotNull(univariateDifferentiable66);
        org.junit.Assert.assertNotNull(univariateFunction67);
        org.junit.Assert.assertNotNull(univariateDifferentiable68);
        org.junit.Assert.assertNotNull(multivariateFunction70);
        org.junit.Assert.assertTrue("'" + goalType71 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType71.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(univariatePointValuePair75);
        org.junit.Assert.assertNotNull(univariatePointValuePair79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1055
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #31
34: ldc2_w        #33
37: aload_1
38: invokespecial #13
41: astore_2
42: aload_2
43: invokevirtual #49
46: dstore_3
47: aload_2
48: invokevirtual #50
51: istore        5
53: aload_2
54: invokevirtual #103
57: astore        6
59: aload_2
60: invokevirtual #177
63: dstore        7
65: aconst_null
66: astore        9
68: aconst_null
69: astore        10
71: iconst_0
72: anewarray     #141
75: astore        11
77: aload         11
79: invokestatic  #142
82: astore        12
84: new           #273
87: dup
88: aload         10
90: aload         11
92: checkcast     #123
95: invokespecial #274
98: astore        13
100: aload         11
102: invokestatic  #245
105: astore        14
107: new           #122
110: dup
111: aload         9
113: aload         11
115: checkcast     #123
118: invokespecial #124
121: astore        15
123: aload         11
125: invokestatic  #142
128: astore        16
130: aload         11
132: invokestatic  #142
135: astore        17
137: aload         11
139: invokestatic  #142
142: astore        18
144: aload         11
146: invokestatic  #142
149: astore        19
151: aload         19
153: invokestatic  #143
156: astore        20
158: aconst_null
159: astore        21
161: new           #8
164: dup
165: ldc2_w        #31
168: ldc2_w        #33
171: aload         21
173: invokespecial #13
176: astore        22
178: aload         22
180: invokevirtual #71
183: istore        23
185: aload         22
187: invokevirtual #71
190: istore        24
192: aload         22
194: invokevirtual #50
197: istore        25
199: aload         22
201: invokevirtual #103
204: astore        26
206: aconst_null
207: astore        27
209: aconst_null
210: astore        28
212: aconst_null
213: astore        29
215: aconst_null
216: astore        30
218: new           #72
221: dup
222: invokespecial #73
225: astore        31
227: new           #72
230: dup
231: invokespecial #73
234: astore        32
236: aload         32
238: invokevirtual #74
241: astore        33
243: new           #72
246: dup
247: invokespecial #73
250: astore        34
252: new           #72
255: dup
256: invokespecial #73
259: astore        35
261: iconst_4
262: anewarray     #75
265: dup
266: iconst_0
267: aload         31
269: aastore
270: dup
271: iconst_1
272: aload         32
274: aastore
275: dup
276: iconst_2
277: aload         34
279: aastore
280: dup
281: iconst_3
282: aload         35
284: aastore
285: astore        36
287: aload         36
289: invokestatic  #76
292: astore        37
294: new           #122
297: dup
298: aload         30
300: aload         36
302: checkcast     #123
305: invokespecial #124
308: astore        38
310: new           #125
313: dup
314: aload         29
316: aload         36
318: checkcast     #123
321: invokespecial #126
324: astore        39
326: aload         36
328: invokestatic  #77
331: astore        40
333: new           #313
336: dup
337: aload         28
339: ldc2_w        #79
342: invokestatic  #314
345: aload         36
347: checkcast     #123
350: invokespecial #315
353: astore        41
355: aload         36
357: invokestatic  #76
360: astore        42
362: aload         36
364: invokestatic  #76
367: astore        43
369: new           #313
372: dup
373: aload         27
375: ldc2_w        #202
378: invokestatic  #314
381: aload         36
383: checkcast     #123
386: invokespecial #315
389: astore        44
391: aload         36
393: invokestatic  #77
396: astore        45
398: aconst_null
399: astore        46
401: new           #8
404: dup
405: ldc2_w        #31
408: ldc2_w        #33
411: aload         46
413: invokespecial #13
416: astore        47
418: aload         47
420: invokevirtual #71
423: istore        48
425: aload         47
427: invokevirtual #71
430: istore        49
432: aload         47
434: invokevirtual #71
437: istore        50
439: aconst_null
440: astore        51
442: new           #72
445: dup
446: invokespecial #73
449: astore        52
451: new           #72
454: dup
455: invokespecial #73
458: astore        53
460: aload         53
462: invokevirtual #74
465: astore        54
467: new           #72
470: dup
471: invokespecial #73
474: astore        55
476: new           #72
479: dup
480: invokespecial #73
483: astore        56
485: iconst_4
486: anewarray     #75
489: dup
490: iconst_0
491: aload         52
493: aastore
494: dup
495: iconst_1
496: aload         53
498: aastore
499: dup
500: iconst_2
501: aload         55
503: aastore
504: dup
505: iconst_3
506: aload         56
508: aastore
509: astore        57
511: aload         57
513: invokestatic  #76
516: astore        58
518: aload         57
520: checkcast     #89
523: invokestatic  #109
526: astore        59
528: aload         57
530: invokestatic  #77
533: astore        60
535: aload         51
537: aload         60
539: ldc2_w        #181
542: invokestatic  #183
545: astore        61
547: getstatic     #118
550: astore        62
552: aload         47
554: bipush        10
556: aload         60
558: aload         62
560: ldc2_w        #184
563: ldc2_w        #186
566: ldc2_w        #188
569: invokevirtual #44
572: astore        63
574: aload         22
576: bipush        97
578: aload         45
580: aload         62
582: dconst_0
583: ldc2_w        #543
586: ldc2_w        #545
589: invokevirtual #44
592: astore        64
594: aload_2
595: bipush        10
597: aload         19
599: aload         62
601: ldc2_w        #1056
604: ldc2_w        #820
607: invokevirtual #81
610: astore        65
612: ldc           #115
614: invokestatic  #15
617: goto          622
620: astore        65
622: new           #54
625: dup
626: invokespecial #55
629: ldc           #56
631: invokevirtual #57
634: dload_3
635: invokevirtual #58
638: ldc           #59
640: invokevirtual #57
643: dconst_0
644: invokevirtual #58
647: ldc           #56
649: invokevirtual #57
652: invokevirtual #60
655: dload_3
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #61
669: new           #54
672: dup
673: invokespecial #55
676: ldc           #56
678: invokevirtual #57
681: iload         5
683: invokevirtual #62
686: ldc           #59
688: invokevirtual #57
691: iconst_0
692: invokevirtual #62
695: ldc           #56
697: invokevirtual #57
700: invokevirtual #60
703: iload         5
705: ifne          712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #61
716: aload         6
718: invokestatic  #104
721: new           #54
724: dup
725: invokespecial #55
728: ldc           #56
730: invokevirtual #57
733: dload         7
735: invokevirtual #58
738: ldc           #59
740: invokevirtual #57
743: dconst_0
744: invokevirtual #58
747: ldc           #56
749: invokevirtual #57
752: invokevirtual #60
755: dload         7
757: dconst_0
758: dcmpl
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #61
770: aload         11
772: invokestatic  #47
775: aload         12
777: invokestatic  #47
780: aload         14
782: invokestatic  #47
785: aload         16
787: invokestatic  #47
790: aload         17
792: invokestatic  #47
795: aload         18
797: invokestatic  #47
800: aload         19
802: invokestatic  #47
805: aload         20
807: invokestatic  #47
810: new           #54
813: dup
814: invokespecial #55
817: ldc           #56
819: invokevirtual #57
822: iload         23
824: invokevirtual #62
827: ldc           #59
829: invokevirtual #57
832: iconst_0
833: invokevirtual #62
836: ldc           #56
838: invokevirtual #57
841: invokevirtual #60
844: iload         23
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #61
857: new           #54
860: dup
861: invokespecial #55
864: ldc           #56
866: invokevirtual #57
869: iload         24
871: invokevirtual #62
874: ldc           #59
876: invokevirtual #57
879: iconst_0
880: invokevirtual #62
883: ldc           #56
885: invokevirtual #57
888: invokevirtual #60
891: iload         24
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #61
904: new           #54
907: dup
908: invokespecial #55
911: ldc           #56
913: invokevirtual #57
916: iload         25
918: invokevirtual #62
921: ldc           #59
923: invokevirtual #57
926: iconst_0
927: invokevirtual #62
930: ldc           #56
932: invokevirtual #57
935: invokevirtual #60
938: iload         25
940: ifne          947
943: iconst_1
944: goto          948
947: iconst_0
948: invokestatic  #61
951: aload         26
953: invokestatic  #104
956: aload         33
958: invokestatic  #47
961: aload         36
963: invokestatic  #47
966: aload         37
968: invokestatic  #47
971: aload         40
973: invokestatic  #47
976: aload         42
978: invokestatic  #47
981: aload         43
983: invokestatic  #47
986: aload         45
988: invokestatic  #47
991: new           #54
994: dup
995: invokespecial #55
998: ldc           #56
1000: invokevirtual #57
1003: iload         48
1005: invokevirtual #62
1008: ldc           #59
1010: invokevirtual #57
1013: iconst_0
1014: invokevirtual #62
1017: ldc           #56
1019: invokevirtual #57
1022: invokevirtual #60
1025: iload         48
1027: ifne          1034
1030: iconst_1
1031: goto          1035
1034: iconst_0
1035: invokestatic  #61
1038: new           #54
1041: dup
1042: invokespecial #55
1045: ldc           #56
1047: invokevirtual #57
1050: iload         49
1052: invokevirtual #62
1055: ldc           #59
1057: invokevirtual #57
1060: iconst_0
1061: invokevirtual #62
1064: ldc           #56
1066: invokevirtual #57
1069: invokevirtual #60
1072: iload         49
1074: ifne          1081
1077: iconst_1
1078: goto          1082
1081: iconst_0
1082: invokestatic  #61
1085: new           #54
1088: dup
1089: invokespecial #55
1092: ldc           #56
1094: invokevirtual #57
1097: iload         50
1099: invokevirtual #62
1102: ldc           #59
1104: invokevirtual #57
1107: iconst_0
1108: invokevirtual #62
1111: ldc           #56
1113: invokevirtual #57
1116: invokevirtual #60
1119: iload         50
1121: ifne          1128
1124: iconst_1
1125: goto          1129
1128: iconst_0
1129: invokestatic  #61
1132: aload         54
1134: invokestatic  #47
1137: aload         57
1139: invokestatic  #47
1142: aload         58
1144: invokestatic  #47
1147: aload         59
1149: invokestatic  #47
1152: aload         60
1154: invokestatic  #47
1157: aload         61
1159: invokestatic  #47
1162: new           #54
1165: dup
1166: invokespecial #55
1169: ldc           #56
1171: invokevirtual #57
1174: aload         62
1176: invokevirtual #82
1179: ldc           #59
1181: invokevirtual #57
1184: getstatic     #118
1187: invokevirtual #82
1190: ldc           #56
1192: invokevirtual #57
1195: invokevirtual #60
1198: aload         62
1200: getstatic     #118
1203: invokevirtual #83
1206: invokestatic  #61
1209: aload         63
1211: invokestatic  #47
1214: aload         64
1216: invokestatic  #47
1219: return
Exception table:
from    to  target type
594   617   620   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testSinMin
Start line: 40
End line: 55
Method source code: 
    public void testSinMin() {
        UnivariateFunction f = new Sin();
        UnivariateOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
        Assert.assertEquals(3 * Math.PI / 2, optimizer.optimize(200, f, GoalType.MINIMIZE, 4, 5).getPoint(), 1e-8);
        Assert.assertTrue(optimizer.getEvaluations() <= 50);
        Assert.assertEquals(200, optimizer.getMaxEvaluations());
        Assert.assertEquals(3 * Math.PI / 2, optimizer.optimize(200, f, GoalType.MINIMIZE, 1, 5).getPoint(), 1e-8);
        Assert.assertTrue(optimizer.getEvaluations() <= 100);
        Assert.assertTrue(optimizer.getEvaluations() >= 15);
        try {
            optimizer.optimize(10, f, GoalType.MINIMIZE, 4, 5);
            Assert.fail("an exception should have been thrown");
        } catch (TooManyEvaluationsException fee) {
            // expected
        }
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #4
11: dup
12: ldc2_w        #5
15: ldc2_w        #7
18: invokespecial #9
21: astore_2
22: ldc2_w        #11
25: aload_2
26: sipush        200
29: aload_1
30: getstatic     #13
33: ldc2_w        #14
36: ldc2_w        #16
39: invokeinterface #18,  8
44: invokevirtual #19
47: ldc2_w        #20
50: invokestatic  #22
53: aload_2
54: invokeinterface #23,  1
59: bipush        50
61: if_icmpgt     68
64: iconst_1
65: goto          69
68: iconst_0
69: invokestatic  #24
72: ldc2_w        #25
75: aload_2
76: invokeinterface #27,  1
81: i2l
82: invokestatic  #28
85: ldc2_w        #11
88: aload_2
89: sipush        200
92: aload_1
93: getstatic     #13
96: dconst_1
97: ldc2_w        #16
100: invokeinterface #18,  8
105: invokevirtual #19
108: ldc2_w        #20
111: invokestatic  #22
114: aload_2
115: invokeinterface #23,  1
120: bipush        100
122: if_icmpgt     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #24
133: aload_2
134: invokeinterface #23,  1
139: bipush        15
141: if_icmplt     148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #24
152: aload_2
153: bipush        10
155: aload_1
156: getstatic     #13
159: ldc2_w        #14
162: ldc2_w        #16
165: invokeinterface #18,  8
170: pop
171: ldc           #29
173: invokestatic  #30
176: goto          180
179: astore_3
180: return
Exception table:
from    to  target type
152   176   179   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testSinMinWithValueChecker
Start line: 58
End line: 67
Method source code: 
    public void testSinMinWithValueChecker() {
        final UnivariateFunction f = new Sin();
        final ConvergenceChecker<UnivariatePointValuePair> checker = new SimpleUnivariateValueChecker(1e-5, 1e-14);
        // The default stopping criterion of Brent's algorithm should not
        // pass, but the search will stop at the given relative tolerance
        // for the function value.
        final UnivariateOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14, checker);
        final UnivariatePointValuePair result = optimizer.optimize(200, f, GoalType.MINIMIZE, 4, 5);
        Assert.assertEquals(3 * Math.PI / 2, result.getPoint(), 1e-3);
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #32
11: dup
12: ldc2_w        #33
15: ldc2_w        #7
18: invokespecial #35
21: astore_2
22: new           #4
25: dup
26: ldc2_w        #5
29: ldc2_w        #7
32: aload_2
33: invokespecial #36
36: astore_3
37: aload_3
38: sipush        200
41: aload_1
42: getstatic     #13
45: ldc2_w        #14
48: ldc2_w        #16
51: invokeinterface #18,  8
56: astore        4
58: ldc2_w        #11
61: aload         4
63: invokevirtual #19
66: ldc2_w        #37
69: invokestatic  #22
72: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testBoundaries
Start line: 70
End line: 91
Method source code: 
    public void testBoundaries() {
        final double lower = -1.0;
        final double upper = +1.0;
        UnivariateFunction f = new UnivariateFunction() {            
            public double value(double x) {
                if (x < lower) {
                    throw new NumberIsTooSmallException(x, lower, true);
                } else if (x > upper) {
                    throw new NumberIsTooLargeException(x, upper, true);
                } else {
                    return x;
                }
            }
        };
        UnivariateOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
        Assert.assertEquals(lower,
                            optimizer.optimize(100, f, GoalType.MINIMIZE, lower, upper).getPoint(),
                            1.0e-8);
        Assert.assertEquals(upper,
                            optimizer.optimize(100, f, GoalType.MAXIMIZE, lower, upper).getPoint(),
                            1.0e-8);
    }
Method byte code: 
0: ldc2_w        #39
3: dstore_1
4: dconst_1
5: dstore_3
6: new           #41
9: dup
10: aload_0
11: invokespecial #42
14: astore        5
16: new           #4
19: dup
20: ldc2_w        #5
23: ldc2_w        #7
26: invokespecial #9
29: astore        6
31: ldc2_w        #39
34: aload         6
36: bipush        100
38: aload         5
40: getstatic     #13
43: ldc2_w        #39
46: dconst_1
47: invokeinterface #18,  8
52: invokevirtual #19
55: ldc2_w        #20
58: invokestatic  #22
61: dconst_1
62: aload         6
64: bipush        100
66: aload         5
68: getstatic     #43
71: ldc2_w        #39
74: dconst_1
75: invokeinterface #18,  8
80: invokevirtual #19
83: ldc2_w        #20
86: invokestatic  #22
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testQuinticMin
Start line: 94
End line: 105
Method source code: 
    public void testQuinticMin() {
        // The function has local minima at -0.27195613 and 0.82221643.
        UnivariateFunction f = new QuinticFunction();
        UnivariateOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
        Assert.assertEquals(-0.27195613, optimizer.optimize(200, f, GoalType.MINIMIZE, -0.3, -0.2).getPoint(), 1.0e-8);
        Assert.assertEquals( 0.82221643, optimizer.optimize(200, f, GoalType.MINIMIZE,  0.3,  0.9).getPoint(), 1.0e-8);
        Assert.assertTrue(optimizer.getEvaluations() <= 50);

        // search in a large interval
        Assert.assertEquals(-0.27195613, optimizer.optimize(200, f, GoalType.MINIMIZE, -1.0, 0.2).getPoint(), 1.0e-8);
        Assert.assertTrue(optimizer.getEvaluations() <= 50);
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: new           #4
11: dup
12: ldc2_w        #5
15: ldc2_w        #7
18: invokespecial #9
21: astore_2
22: ldc2_w        #46
25: aload_2
26: sipush        200
29: aload_1
30: getstatic     #13
33: ldc2_w        #48
36: ldc2_w        #50
39: invokeinterface #18,  8
44: invokevirtual #19
47: ldc2_w        #20
50: invokestatic  #22
53: ldc2_w        #52
56: aload_2
57: sipush        200
60: aload_1
61: getstatic     #13
64: ldc2_w        #54
67: ldc2_w        #56
70: invokeinterface #18,  8
75: invokevirtual #19
78: ldc2_w        #20
81: invokestatic  #22
84: aload_2
85: invokeinterface #23,  1
90: bipush        50
92: if_icmpgt     99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #24
103: ldc2_w        #46
106: aload_2
107: sipush        200
110: aload_1
111: getstatic     #13
114: ldc2_w        #39
117: ldc2_w        #58
120: invokeinterface #18,  8
125: invokevirtual #19
128: ldc2_w        #20
131: invokestatic  #22
134: aload_2
135: invokeinterface #23,  1
140: bipush        50
142: if_icmpgt     149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #24
153: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testQuinticMinStatistics
Start line: 108
End line: 133
Method source code: 
    public void testQuinticMinStatistics() {
        // The function has local minima at -0.27195613 and 0.82221643.
        UnivariateFunction f = new QuinticFunction();
        UnivariateOptimizer optimizer = new BrentOptimizer(1e-11, 1e-14);

        final DescriptiveStatistics[] stat = new DescriptiveStatistics[2];
        for (int i = 0; i < stat.length; i++) {
            stat[i] = new DescriptiveStatistics();
        }

        final double min = -0.75;
        final double max = 0.25;
        final int nSamples = 200;
        final double delta = (max - min) / nSamples;
        for (int i = 0; i < nSamples; i++) {
            final double start = min + i * delta;
            stat[0].addValue(optimizer.optimize(40, f, GoalType.MINIMIZE, min, max, start).getPoint());
            stat[1].addValue(optimizer.getEvaluations());
        }

        final double meanOptValue = stat[0].getMean();
        final double medianEval = stat[1].getPercentile(50);
        Assert.assertTrue(meanOptValue > -0.2719561281);
        Assert.assertTrue(meanOptValue < -0.2719561280);
        Assert.assertEquals(23, (int) medianEval);
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: new           #4
11: dup
12: ldc2_w        #60
15: ldc2_w        #7
18: invokespecial #9
21: astore_2
22: iconst_2
23: anewarray     #62
26: astore_3
27: iconst_0
28: istore        4
30: iload         4
32: aload_3
33: arraylength
34: if_icmpge     54
37: aload_3
38: iload         4
40: new           #62
43: dup
44: invokespecial #63
47: aastore
48: iinc          4, 1
51: goto          30
54: ldc2_w        #64
57: dstore        4
59: ldc2_w        #66
62: dstore        6
64: sipush        200
67: istore        8
69: ldc2_w        #68
72: dstore        9
74: iconst_0
75: istore        11
77: iload         11
79: sipush        200
82: if_icmpge     146
85: ldc2_w        #64
88: iload         11
90: i2d
91: ldc2_w        #68
94: dmul
95: dadd
96: dstore        12
98: aload_3
99: iconst_0
100: aaload
101: aload_2
102: bipush        40
104: aload_1
105: getstatic     #13
108: ldc2_w        #64
111: ldc2_w        #66
114: dload         12
116: invokeinterface #70,  10
121: invokevirtual #19
124: invokevirtual #71
127: aload_3
128: iconst_1
129: aaload
130: aload_2
131: invokeinterface #23,  1
136: i2d
137: invokevirtual #71
140: iinc          11, 1
143: goto          77
146: aload_3
147: iconst_0
148: aaload
149: invokevirtual #72
152: dstore        11
154: aload_3
155: iconst_1
156: aaload
157: ldc2_w        #73
160: invokevirtual #75
163: dstore        13
165: dload         11
167: ldc2_w        #76
170: dcmpl
171: ifle          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #24
182: dload         11
184: ldc2_w        #78
187: dcmpg
188: ifge          195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #24
199: ldc2_w        #80
202: dload         13
204: d2i
205: i2l
206: invokestatic  #28
209: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testQuinticMax
Start line: 136
End line: 148
Method source code: 
    public void testQuinticMax() {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has a local maximum at 0.27195613.
        UnivariateFunction f = new QuinticFunction();
        UnivariateOptimizer optimizer = new BrentOptimizer(1e-12, 1e-14);
        Assert.assertEquals(0.27195613, optimizer.optimize(100, f, GoalType.MAXIMIZE, 0.2, 0.3).getPoint(), 1e-8);
        try {
            optimizer.optimize(5, f, GoalType.MAXIMIZE, 0.2, 0.3);
            Assert.fail("an exception should have been thrown");
        } catch (TooManyEvaluationsException miee) {
            // expected
        }
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: new           #4
11: dup
12: ldc2_w        #82
15: ldc2_w        #7
18: invokespecial #9
21: astore_2
22: ldc2_w        #84
25: aload_2
26: bipush        100
28: aload_1
29: getstatic     #43
32: ldc2_w        #58
35: ldc2_w        #54
38: invokeinterface #18,  8
43: invokevirtual #19
46: ldc2_w        #20
49: invokestatic  #22
52: aload_2
53: iconst_5
54: aload_1
55: getstatic     #43
58: ldc2_w        #58
61: ldc2_w        #54
64: invokeinterface #18,  8
69: pop
70: ldc           #29
72: invokestatic  #30
75: goto          79
78: astore_3
79: return
Exception table:
from    to  target type
52    75    78   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testMinEndpoints
Start line: 151
End line: 161
Method source code: 
    public void testMinEndpoints() {
        UnivariateFunction f = new Sin();
        UnivariateOptimizer optimizer = new BrentOptimizer(1e-8, 1e-14);

        // endpoint is minimum
        double result = optimizer.optimize(50, f, GoalType.MINIMIZE, 3 * Math.PI / 2, 5).getPoint();
        Assert.assertEquals(3 * Math.PI / 2, result, 1e-6);

        result = optimizer.optimize(50, f, GoalType.MINIMIZE, 4, 3 * Math.PI / 2).getPoint();
        Assert.assertEquals(3 * Math.PI / 2, result, 1e-6);
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #4
11: dup
12: ldc2_w        #20
15: ldc2_w        #7
18: invokespecial #9
21: astore_2
22: aload_2
23: bipush        50
25: aload_1
26: getstatic     #13
29: ldc2_w        #11
32: ldc2_w        #16
35: invokeinterface #18,  8
40: invokevirtual #19
43: dstore_3
44: ldc2_w        #11
47: dload_3
48: ldc2_w        #86
51: invokestatic  #22
54: aload_2
55: bipush        50
57: aload_1
58: getstatic     #13
61: ldc2_w        #14
64: ldc2_w        #11
67: invokeinterface #18,  8
72: invokevirtual #19
75: dstore_3
76: ldc2_w        #11
79: dload_3
80: ldc2_w        #86
83: invokestatic  #22
86: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testMath832
Start line: 164
End line: 184
Method source code: 
    public void testMath832() {
        final UnivariateFunction f = new UnivariateFunction() {
                public double value(double x) {
                    final double sqrtX = FastMath.sqrt(x);
                    final double a = 1e2 * sqrtX;
                    final double b = 1e6 / x;
                    final double c = 1e4 / sqrtX;

                    return a + b + c;
                }
            };

        UnivariateOptimizer optimizer = new BrentOptimizer(1e-10, 1e-8);
        final double result = optimizer.optimize(1483,
                                                 f,
                                                 GoalType.MINIMIZE,
                                                 Double.MIN_VALUE,
                                                 Double.MAX_VALUE).getPoint();

        Assert.assertEquals(804.9355825, result, 1e-6);
    }
Method byte code: 
0: new           #88
3: dup
4: aload_0
5: invokespecial #89
8: astore_1
9: new           #4
12: dup
13: ldc2_w        #5
16: ldc2_w        #20
19: invokespecial #9
22: astore_2
23: aload_2
24: sipush        1483
27: aload_1
28: getstatic     #13
31: ldc2_w        #91
34: ldc2_w        #93
37: invokeinterface #18,  8
42: invokevirtual #19
45: dstore_3
46: ldc2_w        #95
49: dload_3
50: ldc2_w        #86
53: invokestatic  #22
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testKeepInitIfBest
Start line: 192
End line: 221
Method source code: 
    public void testKeepInitIfBest() {
        final double minSin = 3 * Math.PI / 2;
        final double offset = 1e-8;
        final double delta = 1e-7;
        final UnivariateFunction f1 = new Sin();
        final UnivariateFunction f2 = new StepFunction(new double[] { minSin, minSin + offset, minSin + 2 * offset},
                                                       new double[] { 0, -1, 0 });
        final UnivariateFunction f = FunctionUtils.add(f1, f2);
        // A slightly less stringent tolerance would make the test pass
        // even with the previous implementation.
        final double relTol = 1e-8;
        final UnivariateOptimizer optimizer = new BrentOptimizer(relTol, 1e-100);
        final double init = minSin + 1.5 * offset;
        final UnivariatePointValuePair result
            = optimizer.optimize(200, f, GoalType.MINIMIZE,
                                 minSin - 6.789 * delta,
                                 minSin + 9.876 * delta,
                                 init);
        final int numEval = optimizer.getEvaluations();

        final double sol = result.getPoint();
        final double expected = init;

//         System.out.println("numEval=" + numEval);
//         System.out.println("min=" + init + " f=" + f.value(init));
//         System.out.println("sol=" + sol + " f=" + f.value(sol));
//         System.out.println("exp=" + expected + " f=" + f.value(expected));

        Assert.assertTrue("Best point not reported", f.value(sol) <= f.value(expected));
    }
Method byte code: 
0: ldc2_w        #11
3: dstore_1
4: ldc2_w        #20
7: dstore_3
8: ldc2_w        #97
11: dstore        5
13: new           #2
16: dup
17: invokespecial #3
20: astore        7
22: new           #99
25: dup
26: iconst_3
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #11
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #100
40: dastore
41: dup
42: iconst_2
43: ldc2_w        #102
46: dastore
47: iconst_3
48: newarray       double
50: dup
51: iconst_0
52: dconst_0
53: dastore
54: dup
55: iconst_1
56: ldc2_w        #39
59: dastore
60: dup
61: iconst_2
62: dconst_0
63: dastore
64: invokespecial #104
67: astore        8
69: iconst_2
70: anewarray     #105
73: dup
74: iconst_0
75: aload         7
77: aastore
78: dup
79: iconst_1
80: aload         8
82: aastore
83: invokestatic  #106
86: astore        9
88: ldc2_w        #20
91: dstore        10
93: new           #4
96: dup
97: ldc2_w        #20
100: ldc2_w        #107
103: invokespecial #9
106: astore        12
108: ldc2_w        #109
111: dstore        13
113: aload         12
115: sipush        200
118: aload         9
120: getstatic     #13
123: ldc2_w        #111
126: ldc2_w        #113
129: ldc2_w        #109
132: invokeinterface #70,  10
137: astore        15
139: aload         12
141: invokeinterface #23,  1
146: istore        16
148: aload         15
150: invokevirtual #19
153: dstore        17
155: ldc2_w        #109
158: dstore        19
160: ldc           #115
162: aload         9
164: dload         17
166: invokeinterface #116,  3
171: aload         9
173: ldc2_w        #109
176: invokeinterface #116,  3
181: dcmpg
182: ifgt          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #117
193: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.class
Class name: BrentOptimizerTest
Method name: testMath855
Start line: 229
End line: 252
Method source code: 
    public void testMath855() {
        final double minSin = 3 * Math.PI / 2;
        final double offset = 1e-8;
        final double delta = 1e-7;
        final UnivariateFunction f1 = new Sin();
        final UnivariateFunction f2 = new StepFunction(new double[] { minSin, minSin + offset, minSin + 5 * offset },
                                                       new double[] { 0, -1, 0 });
        final UnivariateFunction f = FunctionUtils.add(f1, f2);
        final UnivariateOptimizer optimizer = new BrentOptimizer(1e-8, 1e-100);
        final UnivariatePointValuePair result
            = optimizer.optimize(200, f, GoalType.MINIMIZE,
                                 minSin - 6.789 * delta,
                                 minSin + 9.876 * delta);
        final int numEval = optimizer.getEvaluations();

        final double sol = result.getPoint();
        final double expected = 4.712389027602411;

        // System.out.println("min=" + (minSin + offset) + " f=" + f.value(minSin + offset));
        // System.out.println("sol=" + sol + " f=" + f.value(sol));
        // System.out.println("exp=" + expected + " f=" + f.value(expected));

        Assert.assertTrue("Best point not reported", f.value(sol) <= f.value(expected));
    }
Method byte code: 
0: ldc2_w        #11
3: dstore_1
4: ldc2_w        #20
7: dstore_3
8: ldc2_w        #97
11: dstore        5
13: new           #2
16: dup
17: invokespecial #3
20: astore        7
22: new           #99
25: dup
26: iconst_3
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #11
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #100
40: dastore
41: dup
42: iconst_2
43: ldc2_w        #118
46: dastore
47: iconst_3
48: newarray       double
50: dup
51: iconst_0
52: dconst_0
53: dastore
54: dup
55: iconst_1
56: ldc2_w        #39
59: dastore
60: dup
61: iconst_2
62: dconst_0
63: dastore
64: invokespecial #104
67: astore        8
69: iconst_2
70: anewarray     #105
73: dup
74: iconst_0
75: aload         7
77: aastore
78: dup
79: iconst_1
80: aload         8
82: aastore
83: invokestatic  #106
86: astore        9
88: new           #4
91: dup
92: ldc2_w        #20
95: ldc2_w        #107
98: invokespecial #9
101: astore        10
103: aload         10
105: sipush        200
108: aload         9
110: getstatic     #13
113: ldc2_w        #111
116: ldc2_w        #113
119: invokeinterface #18,  8
124: astore        11
126: aload         10
128: invokeinterface #23,  1
133: istore        12
135: aload         11
137: invokevirtual #19
140: dstore        13
142: ldc2_w        #120
145: dstore        15
147: ldc           #115
149: aload         9
151: dload         13
153: invokeinterface #116,  3
158: aload         9
160: ldc2_w        #120
163: invokeinterface #116,  3
168: dcmpg
169: ifgt          176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #117
180: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test0
Start line: 23
End line: 35
Method source code: 
  public void test0()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = null;
      try {
        brentOptimizer0 = new BrentOptimizer((-29.642378866708057), (-29.642378866708057));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -29.642 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optimization.univariate.BrentOptimizer", e);
      }
  }
Method byte code: 
0: aconst_null
1: astore_1
2: new           #2
5: dup
6: ldc2_w        #3
9: ldc2_w        #3
12: invokespecial #5
15: astore_1
16: ldc           #6
18: invokestatic  #7
21: goto          31
24: astore_2
25: ldc           #9
27: aload_2
28: invokestatic  #10
31: return
Exception table:
from    to  target type
2    21    24   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test1
Start line: 38
End line: 50
Method source code: 
  public void test1()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = null;
      try {
        brentOptimizer0 = new BrentOptimizer(0.2147523467903689, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optimization.univariate.BrentOptimizer", e);
      }
  }
Method byte code: 
0: aconst_null
1: astore_1
2: new           #2
5: dup
6: ldc2_w        #11
9: ldc2_w        #13
12: invokespecial #5
15: astore_1
16: ldc           #6
18: invokestatic  #7
21: goto          31
24: astore_2
25: ldc           #9
27: aload_2
28: invokestatic  #10
31: return
Exception table:
from    to  target type
2    21    24   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test2
Start line: 53
End line: 59
Method source code: 
  public void test2()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.01118, 0.01118);
      Floor floor0 = new Floor();
      GoalType goalType0 = GoalType.MINIMIZE;
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(231, (UnivariateFunction) floor0, goalType0, (double) 231, 0.01118);
      assertEquals(0.9006524172143477, univariatePointValuePair0.getPoint(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #15
7: ldc2_w        #15
10: invokespecial #5
13: astore_1
14: new           #17
17: dup
18: invokespecial #18
21: astore_2
22: getstatic     #19
25: astore_3
26: aload_1
27: sipush        231
30: aload_2
31: aload_3
32: ldc2_w        #20
35: ldc2_w        #15
38: invokevirtual #22
41: astore        4
43: ldc2_w        #23
46: aload         4
48: invokevirtual #25
51: ldc2_w        #26
54: invokestatic  #28
57: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test3
Start line: 62
End line: 68
Method source code: 
  public void test3()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.28346960979658514, 0.28346960979658514);
      Floor floor0 = new Floor();
      GoalType goalType0 = GoalType.MINIMIZE;
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(882, (UnivariateFunction) floor0, goalType0, 0.28346960979658514, (double) 882);
      assertEquals(1.49926708746688, univariatePointValuePair0.getPoint(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #29
7: ldc2_w        #29
10: invokespecial #5
13: astore_1
14: new           #17
17: dup
18: invokespecial #18
21: astore_2
22: getstatic     #19
25: astore_3
26: aload_1
27: sipush        882
30: aload_2
31: aload_3
32: ldc2_w        #29
35: ldc2_w        #31
38: invokevirtual #22
41: astore        4
43: ldc2_w        #33
46: aload         4
48: invokevirtual #25
51: ldc2_w        #26
54: invokestatic  #28
57: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test4
Start line: 71
End line: 77
Method source code: 
  public void test4()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.0111817495789, 0.0111817495789);
      Floor floor0 = new Floor();
      GoalType goalType0 = GoalType.MAXIMIZE;
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(54, (UnivariateFunction) floor0, goalType0, 0.0111817495789, (double) 54);
      assertEquals(52.15369455278684, univariatePointValuePair0.getPoint(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #35
7: ldc2_w        #35
10: invokespecial #5
13: astore_1
14: new           #17
17: dup
18: invokespecial #18
21: astore_2
22: getstatic     #37
25: astore_3
26: aload_1
27: bipush        54
29: aload_2
30: aload_3
31: ldc2_w        #35
34: ldc2_w        #38
37: invokevirtual #22
40: astore        4
42: ldc2_w        #40
45: aload         4
47: invokevirtual #25
50: ldc2_w        #26
53: invokestatic  #28
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test5
Start line: 80
End line: 86
Method source code: 
  public void test5()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.07538672827256383, 0.07538672827256383);
      Floor floor0 = new Floor();
      GoalType goalType0 = GoalType.MINIMIZE;
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(3136, (UnivariateFunction) floor0, goalType0, 0.07538672827256383, (double) 3136);
      assertEquals(1.16423893926864, univariatePointValuePair0.getPoint(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #42
7: ldc2_w        #42
10: invokespecial #5
13: astore_1
14: new           #17
17: dup
18: invokespecial #18
21: astore_2
22: getstatic     #19
25: astore_3
26: aload_1
27: sipush        3136
30: aload_2
31: aload_3
32: ldc2_w        #42
35: ldc2_w        #44
38: invokevirtual #22
41: astore        4
43: ldc2_w        #46
46: aload         4
48: invokevirtual #25
51: ldc2_w        #26
54: invokestatic  #28
57: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test6
Start line: 89
End line: 95
Method source code: 
  public void test6()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.011181749578948895, 0.011181749578948895);
      Cos cos0 = new Cos();
      GoalType goalType0 = GoalType.MAXIMIZE;
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(1184, (UnivariateFunction) cos0, goalType0, 0.011181749578948895, (double) 1184);
      assertEquals(0.2547143024901817, univariatePointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #48
7: ldc2_w        #48
10: invokespecial #5
13: astore_1
14: new           #50
17: dup
18: invokespecial #51
21: astore_2
22: getstatic     #37
25: astore_3
26: aload_1
27: sipush        1184
30: aload_2
31: aload_3
32: ldc2_w        #48
35: ldc2_w        #52
38: invokevirtual #22
41: astore        4
43: ldc2_w        #54
46: aload         4
48: invokevirtual #56
51: ldc2_w        #26
54: invokestatic  #28
57: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test7
Start line: 98
End line: 104
Method source code: 
  public void test7()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.011181749578948895, 0.011181749578948895);
      GoalType goalType0 = GoalType.MINIMIZE;
      Atanh atanh0 = new Atanh();
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(608, (UnivariateFunction) atanh0, goalType0, 0.011181749578948895, (double) 608);
      assertEquals(297.5346940627999, univariatePointValuePair0.getPoint(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #48
7: ldc2_w        #48
10: invokespecial #5
13: astore_1
14: getstatic     #19
17: astore_2
18: new           #57
21: dup
22: invokespecial #58
25: astore_3
26: aload_1
27: sipush        608
30: aload_3
31: aload_2
32: ldc2_w        #48
35: ldc2_w        #59
38: invokevirtual #22
41: astore        4
43: ldc2_w        #61
46: aload         4
48: invokevirtual #25
51: ldc2_w        #26
54: invokestatic  #28
57: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/23/target/test-classes/org/apache/commons/math3/optimization/univariate/BrentOptimizer_ESTest.class
Class name: BrentOptimizer_ESTest
Method name: test8
Start line: 107
End line: 115
Method source code: 
  public void test8()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.011181749578948895, 0.011181749578948895);
      Floor floor0 = new Floor();
      GoalType goalType0 = GoalType.MAXIMIZE;
      UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(1179, (UnivariateFunction) floor0, goalType0, 0.011181749578948895, 0.011181749578948895);
      assertEquals(0.011181749578948895, univariatePointValuePair0.getPoint(), 0.01);
      assertEquals(0.0, univariatePointValuePair0.getValue(), 0.01);
      assertNotNull(univariatePointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #48
7: ldc2_w        #48
10: invokespecial #5
13: astore_1
14: new           #17
17: dup
18: invokespecial #18
21: astore_2
22: getstatic     #37
25: astore_3
26: aload_1
27: sipush        1179
30: aload_2
31: aload_3
32: ldc2_w        #48
35: ldc2_w        #48
38: invokevirtual #22
41: astore        4
43: ldc2_w        #48
46: aload         4
48: invokevirtual #25
51: ldc2_w        #26
54: invokestatic  #28
57: dconst_0
58: aload         4
60: invokevirtual #56
63: ldc2_w        #26
66: invokestatic  #28
69: aload         4
71: invokestatic  #63
74: return
}
