Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 39
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau22 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aconst_null
146: astore        10
148: aload_1
149: aload         10
151: invokevirtual #22
154: ldc           #23
156: invokestatic  #24
159: goto          164
162: astore        11
164: aload_2
165: invokestatic  #26
168: aload_2
169: invokestatic  #27
172: ldc           #28
174: invokestatic  #29
177: aload_3
178: invokestatic  #26
181: aload_3
182: invokestatic  #27
185: ldc           #30
187: invokestatic  #29
190: new           #31
193: dup
194: invokespecial #32
197: ldc           #33
199: invokevirtual #34
202: dload         4
204: invokevirtual #35
207: ldc           #36
209: invokevirtual #34
212: ldc2_w        #10
215: invokevirtual #35
218: ldc           #33
220: invokevirtual #34
223: invokevirtual #37
226: dload         4
228: ldc2_w        #10
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #38
243: new           #31
246: dup
247: invokespecial #32
250: ldc           #33
252: invokevirtual #34
255: iload         8
257: invokevirtual #39
260: ldc           #36
262: invokevirtual #34
265: iconst_0
266: invokevirtual #39
269: ldc           #33
271: invokevirtual #34
274: invokevirtual #37
277: iload         8
279: ifne          286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #38
290: new           #31
293: dup
294: invokespecial #32
297: ldc           #33
299: invokevirtual #34
302: iload         9
304: invokevirtual #39
307: ldc           #36
309: invokevirtual #34
312: iconst_0
313: invokevirtual #39
316: ldc           #33
318: invokevirtual #34
321: invokevirtual #37
324: iload         9
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #38
337: return
Exception table:
from    to  target type
148   159   162   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 42
End line: 54
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = simplexSolver0.isOptimal(simplexTableau1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #40
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aconst_null
33: astore_2
34: aload_1
35: aload_2
36: invokevirtual #42
39: istore_3
40: ldc           #23
42: invokestatic  #24
45: goto          49
48: astore_3
49: return
Exception table:
from    to  target type
34    45    48   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 57
End line: 69
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau2 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.solvePhase1(simplexTableau2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #43
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: aload_1
36: aload_2
37: invokevirtual #44
40: ldc           #23
42: invokestatic  #24
45: goto          49
48: astore_3
49: return
Exception table:
from    to  target type
35    45    48   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 72
End line: 124
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray7 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray14 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double15 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray7, doubleArray14);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction17 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray7, 100.0d);
        java.lang.Object obj18 = null;
        boolean boolean19 = linearObjectiveFunction17.equals(obj18);
        boolean boolean21 = linearObjectiveFunction17.equals((java.lang.Object) "hi!");
        simplexSolver2.f = linearObjectiveFunction17;
        org.apache.commons.math.linear.RealVector realVector23 = null;
        org.apache.commons.math.optimization.linear.Relationship relationship24 = null;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint26 = new org.apache.commons.math.optimization.linear.LinearConstraint(realVector23, relationship24, (double) (byte) 100);
        double[] doubleArray31 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray38 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double39 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray31, doubleArray38);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray31, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector43 = arrayRealVector42.mapAtan();
        org.apache.commons.math.linear.RealVector realVector44 = realVector43.mapSqrt();
        org.apache.commons.math.optimization.linear.Relationship relationship45 = null;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint47 = new org.apache.commons.math.optimization.linear.LinearConstraint(realVector44, relationship45, 0.0d);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray48 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint26, linearConstraint47 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList49 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList49, linearConstraintArray48);
        org.apache.commons.math.optimization.GoalType goalType51 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair53 = simplexSolver0.optimize(linearObjectiveFunction17, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList49, goalType51, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(linearConstraintArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + goalType51 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType51.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #45
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: new           #8
35: dup
36: dconst_0
37: invokespecial #9
40: astore_2
41: iconst_4
42: newarray       double
44: dup
45: iconst_0
46: ldc2_w        #10
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #12
55: dastore
56: dup
57: iconst_2
58: ldc2_w        #12
61: dastore
62: dup
63: iconst_3
64: ldc2_w        #10
67: dastore
68: astore_3
69: bipush        6
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #14
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #14
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #14
90: dastore
91: dup
92: iconst_3
93: dconst_0
94: dastore
95: dup
96: iconst_4
97: dconst_1
98: dastore
99: dup
100: iconst_5
101: ldc2_w        #10
104: dastore
105: astore        4
107: aload_3
108: aload         4
110: invokestatic  #16
113: dstore        5
115: new           #17
118: dup
119: aload_3
120: ldc2_w        #10
123: invokespecial #18
126: astore        7
128: aconst_null
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #19
138: istore        9
140: aload         7
142: ldc           #20
144: invokevirtual #19
147: istore        10
149: aload_2
150: aload         7
152: putfield      #21
155: aconst_null
156: astore        11
158: aconst_null
159: astore        12
161: new           #46
164: dup
165: aload         11
167: aload         12
169: ldc2_w        #10
172: invokespecial #47
175: astore        13
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: ldc2_w        #10
185: dastore
186: dup
187: iconst_1
188: ldc2_w        #12
191: dastore
192: dup
193: iconst_2
194: ldc2_w        #12
197: dastore
198: dup
199: iconst_3
200: ldc2_w        #10
203: dastore
204: astore        14
206: bipush        6
208: newarray       double
210: dup
211: iconst_0
212: ldc2_w        #14
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #14
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #14
227: dastore
228: dup
229: iconst_3
230: dconst_0
231: dastore
232: dup
233: iconst_4
234: dconst_1
235: dastore
236: dup
237: iconst_5
238: ldc2_w        #10
241: dastore
242: astore        15
244: aload         14
246: aload         15
248: invokestatic  #16
251: dstore        16
253: new           #48
256: dup
257: aload         14
259: iconst_1
260: iconst_0
261: invokespecial #49
264: astore        18
266: aload         18
268: invokevirtual #50
271: astore        19
273: aload         19
275: invokeinterface #51,  1
280: astore        20
282: aconst_null
283: astore        21
285: new           #46
288: dup
289: aload         20
291: aload         21
293: dconst_0
294: invokespecial #47
297: astore        22
299: iconst_2
300: anewarray     #46
303: dup
304: iconst_0
305: aload         13
307: aastore
308: dup
309: iconst_1
310: aload         22
312: aastore
313: astore        23
315: new           #52
318: dup
319: invokespecial #53
322: astore        24
324: aload         24
326: aload         23
328: invokestatic  #54
331: istore        25
333: getstatic     #55
336: astore        26
338: aload_1
339: aload         7
341: aload         24
343: aload         26
345: iconst_0
346: invokevirtual #56
349: astore        27
351: ldc           #23
353: invokestatic  #24
356: goto          361
359: astore        27
361: aload_3
362: invokestatic  #26
365: aload_3
366: invokestatic  #27
369: ldc           #28
371: invokestatic  #29
374: aload         4
376: invokestatic  #26
379: aload         4
381: invokestatic  #27
384: ldc           #30
386: invokestatic  #29
389: new           #31
392: dup
393: invokespecial #32
396: ldc           #33
398: invokevirtual #34
401: dload         5
403: invokevirtual #35
406: ldc           #36
408: invokevirtual #34
411: ldc2_w        #10
414: invokevirtual #35
417: ldc           #33
419: invokevirtual #34
422: invokevirtual #37
425: dload         5
427: ldc2_w        #10
430: dcmpl
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #38
442: new           #31
445: dup
446: invokespecial #32
449: ldc           #33
451: invokevirtual #34
454: iload         9
456: invokevirtual #39
459: ldc           #36
461: invokevirtual #34
464: iconst_0
465: invokevirtual #39
468: ldc           #33
470: invokevirtual #34
473: invokevirtual #37
476: iload         9
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #38
489: new           #31
492: dup
493: invokespecial #32
496: ldc           #33
498: invokevirtual #34
501: iload         10
503: invokevirtual #39
506: ldc           #36
508: invokevirtual #34
511: iconst_0
512: invokevirtual #39
515: ldc           #33
517: invokevirtual #34
520: invokevirtual #37
523: iload         10
525: ifne          532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #38
536: aload         14
538: invokestatic  #26
541: aload         14
543: invokestatic  #27
546: ldc           #28
548: invokestatic  #29
551: aload         15
553: invokestatic  #26
556: aload         15
558: invokestatic  #27
561: ldc           #30
563: invokestatic  #29
566: new           #31
569: dup
570: invokespecial #32
573: ldc           #33
575: invokevirtual #34
578: dload         16
580: invokevirtual #35
583: ldc           #36
585: invokevirtual #34
588: ldc2_w        #10
591: invokevirtual #35
594: ldc           #33
596: invokevirtual #34
599: invokevirtual #37
602: dload         16
604: ldc2_w        #10
607: dcmpl
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #38
619: aload         19
621: invokestatic  #26
624: aload         20
626: invokestatic  #26
629: aload         23
631: invokestatic  #26
634: new           #31
637: dup
638: invokespecial #32
641: ldc           #33
643: invokevirtual #34
646: iload         25
648: invokevirtual #39
651: ldc           #36
653: invokevirtual #34
656: iconst_1
657: invokevirtual #39
660: ldc           #33
662: invokevirtual #34
665: invokevirtual #37
668: iload         25
670: iconst_1
671: if_icmpne     678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #38
682: new           #31
685: dup
686: invokespecial #32
689: ldc           #33
691: invokevirtual #34
694: aload         26
696: invokevirtual #57
699: ldc           #36
701: invokevirtual #34
704: getstatic     #55
707: invokevirtual #57
710: ldc           #33
712: invokevirtual #34
715: invokevirtual #37
718: aload         26
720: getstatic     #55
723: invokevirtual #58
726: invokestatic  #38
729: return
Exception table:
from    to  target type
338   356   359   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 127
End line: 179
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver23 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray28 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray35 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double36 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray28, doubleArray35);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction38 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray28, 100.0d);
        java.lang.Object obj39 = null;
        boolean boolean40 = linearObjectiveFunction38.equals(obj39);
        boolean boolean42 = linearObjectiveFunction38.equals((java.lang.Object) "hi!");
        simplexSolver23.f = linearObjectiveFunction38;
        org.apache.commons.math.linear.RealVector realVector44 = null;
        org.apache.commons.math.optimization.linear.Relationship relationship45 = null;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint47 = new org.apache.commons.math.optimization.linear.LinearConstraint(realVector44, relationship45, (double) (byte) 100);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray48 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint47 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList49 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList49, linearConstraintArray48);
        org.apache.commons.math.optimization.GoalType goalType51 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair53 = simplexSolver1.optimize(linearObjectiveFunction38, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList49, goalType51, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(linearConstraintArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + goalType51 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType51.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #59
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: new           #8
148: dup
149: dconst_0
150: invokespecial #9
153: astore        10
155: iconst_4
156: newarray       double
158: dup
159: iconst_0
160: ldc2_w        #10
163: dastore
164: dup
165: iconst_1
166: ldc2_w        #12
169: dastore
170: dup
171: iconst_2
172: ldc2_w        #12
175: dastore
176: dup
177: iconst_3
178: ldc2_w        #10
181: dastore
182: astore        11
184: bipush        6
186: newarray       double
188: dup
189: iconst_0
190: ldc2_w        #14
193: dastore
194: dup
195: iconst_1
196: ldc2_w        #14
199: dastore
200: dup
201: iconst_2
202: ldc2_w        #14
205: dastore
206: dup
207: iconst_3
208: dconst_0
209: dastore
210: dup
211: iconst_4
212: dconst_1
213: dastore
214: dup
215: iconst_5
216: ldc2_w        #10
219: dastore
220: astore        12
222: aload         11
224: aload         12
226: invokestatic  #16
229: dstore        13
231: new           #17
234: dup
235: aload         11
237: ldc2_w        #10
240: invokespecial #18
243: astore        15
245: aconst_null
246: astore        16
248: aload         15
250: aload         16
252: invokevirtual #19
255: istore        17
257: aload         15
259: ldc           #20
261: invokevirtual #19
264: istore        18
266: aload         10
268: aload         15
270: putfield      #21
273: aconst_null
274: astore        19
276: aconst_null
277: astore        20
279: new           #46
282: dup
283: aload         19
285: aload         20
287: ldc2_w        #10
290: invokespecial #47
293: astore        21
295: iconst_1
296: anewarray     #46
299: dup
300: iconst_0
301: aload         21
303: aastore
304: astore        22
306: new           #52
309: dup
310: invokespecial #53
313: astore        23
315: aload         23
317: aload         22
319: invokestatic  #54
322: istore        24
324: getstatic     #55
327: astore        25
329: aload_1
330: aload         15
332: aload         23
334: aload         25
336: iconst_0
337: invokevirtual #56
340: astore        26
342: ldc           #23
344: invokestatic  #24
347: goto          352
350: astore        26
352: aload_2
353: invokestatic  #26
356: aload_2
357: invokestatic  #27
360: ldc           #28
362: invokestatic  #29
365: aload_3
366: invokestatic  #26
369: aload_3
370: invokestatic  #27
373: ldc           #30
375: invokestatic  #29
378: new           #31
381: dup
382: invokespecial #32
385: ldc           #33
387: invokevirtual #34
390: dload         4
392: invokevirtual #35
395: ldc           #36
397: invokevirtual #34
400: ldc2_w        #10
403: invokevirtual #35
406: ldc           #33
408: invokevirtual #34
411: invokevirtual #37
414: dload         4
416: ldc2_w        #10
419: dcmpl
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #38
431: new           #31
434: dup
435: invokespecial #32
438: ldc           #33
440: invokevirtual #34
443: iload         8
445: invokevirtual #39
448: ldc           #36
450: invokevirtual #34
453: iconst_0
454: invokevirtual #39
457: ldc           #33
459: invokevirtual #34
462: invokevirtual #37
465: iload         8
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #38
478: new           #31
481: dup
482: invokespecial #32
485: ldc           #33
487: invokevirtual #34
490: iload         9
492: invokevirtual #39
495: ldc           #36
497: invokevirtual #34
500: iconst_0
501: invokevirtual #39
504: ldc           #33
506: invokevirtual #34
509: invokevirtual #37
512: iload         9
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #38
525: aload         11
527: invokestatic  #26
530: aload         11
532: invokestatic  #27
535: ldc           #28
537: invokestatic  #29
540: aload         12
542: invokestatic  #26
545: aload         12
547: invokestatic  #27
550: ldc           #30
552: invokestatic  #29
555: new           #31
558: dup
559: invokespecial #32
562: ldc           #33
564: invokevirtual #34
567: dload         13
569: invokevirtual #35
572: ldc           #36
574: invokevirtual #34
577: ldc2_w        #10
580: invokevirtual #35
583: ldc           #33
585: invokevirtual #34
588: invokevirtual #37
591: dload         13
593: ldc2_w        #10
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #38
608: new           #31
611: dup
612: invokespecial #32
615: ldc           #33
617: invokevirtual #34
620: iload         17
622: invokevirtual #39
625: ldc           #36
627: invokevirtual #34
630: iconst_0
631: invokevirtual #39
634: ldc           #33
636: invokevirtual #34
639: invokevirtual #37
642: iload         17
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #38
655: new           #31
658: dup
659: invokespecial #32
662: ldc           #33
664: invokevirtual #34
667: iload         18
669: invokevirtual #39
672: ldc           #36
674: invokevirtual #34
677: iconst_0
678: invokevirtual #39
681: ldc           #33
683: invokevirtual #34
686: invokevirtual #37
689: iload         18
691: ifne          698
694: iconst_1
695: goto          699
698: iconst_0
699: invokestatic  #38
702: aload         22
704: invokestatic  #26
707: new           #31
710: dup
711: invokespecial #32
714: ldc           #33
716: invokevirtual #34
719: iload         24
721: invokevirtual #39
724: ldc           #36
726: invokevirtual #34
729: iconst_1
730: invokevirtual #39
733: ldc           #33
735: invokevirtual #34
738: invokevirtual #37
741: iload         24
743: iconst_1
744: if_icmpne     751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #38
755: new           #31
758: dup
759: invokespecial #32
762: ldc           #33
764: invokevirtual #34
767: aload         25
769: invokevirtual #57
772: ldc           #36
774: invokevirtual #34
777: getstatic     #55
780: invokevirtual #57
783: ldc           #33
785: invokevirtual #34
788: invokevirtual #37
791: aload         25
793: getstatic     #55
796: invokevirtual #58
799: invokestatic  #38
802: return
Exception table:
from    to  target type
329   347   350   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 182
End line: 210
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau24 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.solvePhase1(simplexTableau24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #60
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: bipush        10
148: invokevirtual #61
151: aconst_null
152: astore        10
154: aload_1
155: aload         10
157: invokevirtual #44
160: ldc           #23
162: invokestatic  #24
165: goto          170
168: astore        11
170: aload_2
171: invokestatic  #26
174: aload_2
175: invokestatic  #27
178: ldc           #28
180: invokestatic  #29
183: aload_3
184: invokestatic  #26
187: aload_3
188: invokestatic  #27
191: ldc           #30
193: invokestatic  #29
196: new           #31
199: dup
200: invokespecial #32
203: ldc           #33
205: invokevirtual #34
208: dload         4
210: invokevirtual #35
213: ldc           #36
215: invokevirtual #34
218: ldc2_w        #10
221: invokevirtual #35
224: ldc           #33
226: invokevirtual #34
229: invokevirtual #37
232: dload         4
234: ldc2_w        #10
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #38
249: new           #31
252: dup
253: invokespecial #32
256: ldc           #33
258: invokevirtual #34
261: iload         8
263: invokevirtual #39
266: ldc           #36
268: invokevirtual #34
271: iconst_0
272: invokevirtual #39
275: ldc           #33
277: invokevirtual #34
280: invokevirtual #37
283: iload         8
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #38
296: new           #31
299: dup
300: invokespecial #32
303: ldc           #33
305: invokevirtual #34
308: iload         9
310: invokevirtual #39
313: ldc           #36
315: invokevirtual #34
318: iconst_0
319: invokevirtual #39
322: ldc           #33
324: invokevirtual #34
327: invokevirtual #37
330: iload         9
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #38
343: return
Exception table:
from    to  target type
154   165   168   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 213
End line: 226
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.incrementIterationsCounter();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau3 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.solvePhase1(simplexTableau3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #62
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #63
37: aconst_null
38: astore_2
39: aload_1
40: aload_2
41: invokevirtual #44
44: ldc           #23
46: invokestatic  #24
49: goto          53
52: astore_3
53: return
Exception table:
from    to  target type
39    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 229
End line: 243
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau2 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver0.solvePhase1(simplexTableau2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #64
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: invokevirtual #65
36: istore_2
37: aconst_null
38: astore_3
39: aload_1
40: aload_3
41: invokevirtual #44
44: ldc           #23
46: invokestatic  #24
49: goto          54
52: astore        4
54: new           #31
57: dup
58: invokespecial #32
61: ldc           #33
63: invokevirtual #34
66: iload_2
67: invokevirtual #66
70: ldc           #36
72: invokevirtual #34
75: bipush        100
77: invokevirtual #66
80: ldc           #33
82: invokevirtual #34
85: invokevirtual #37
88: iload_2
89: bipush        100
91: if_icmpne     98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #38
102: return
Exception table:
from    to  target type
39    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 246
End line: 261
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau4 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver0.solvePhase1(simplexTableau4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(goalType1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #67
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aconst_null
44: astore_3
45: aload_1
46: aload_3
47: invokevirtual #44
50: ldc           #23
52: invokestatic  #24
55: goto          60
58: astore        4
60: aload_2
61: invokestatic  #69
64: return
Exception table:
from    to  target type
45    55    58   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 264
End line: 292
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        simplexSolver1.restrictToNonNegative = false;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair26 = simplexSolver1.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: bipush        10
148: invokevirtual #61
151: aload_1
152: iconst_0
153: putfield      #71
156: aload_1
157: invokevirtual #72
160: astore        10
162: ldc           #23
164: invokestatic  #24
167: goto          172
170: astore        10
172: aload_2
173: invokestatic  #26
176: aload_2
177: invokestatic  #27
180: ldc           #28
182: invokestatic  #29
185: aload_3
186: invokestatic  #26
189: aload_3
190: invokestatic  #27
193: ldc           #30
195: invokestatic  #29
198: new           #31
201: dup
202: invokespecial #32
205: ldc           #33
207: invokevirtual #34
210: dload         4
212: invokevirtual #35
215: ldc           #36
217: invokevirtual #34
220: ldc2_w        #10
223: invokevirtual #35
226: ldc           #33
228: invokevirtual #34
231: invokevirtual #37
234: dload         4
236: ldc2_w        #10
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #38
251: new           #31
254: dup
255: invokespecial #32
258: ldc           #33
260: invokevirtual #34
263: iload         8
265: invokevirtual #39
268: ldc           #36
270: invokevirtual #34
273: iconst_0
274: invokevirtual #39
277: ldc           #33
279: invokevirtual #34
282: invokevirtual #37
285: iload         8
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #38
298: new           #31
301: dup
302: invokespecial #32
305: ldc           #33
307: invokevirtual #34
310: iload         9
312: invokevirtual #39
315: ldc           #36
317: invokevirtual #34
320: iconst_0
321: invokevirtual #39
324: ldc           #33
326: invokevirtual #34
329: invokevirtual #37
332: iload         9
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #38
345: return
Exception table:
from    to  target type
156   167   170   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 295
End line: 323
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = simplexSolver1.isOptimal(simplexTableau24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #73
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: bipush        10
148: invokevirtual #61
151: aconst_null
152: astore        10
154: aload_1
155: aload         10
157: invokevirtual #42
160: istore        11
162: ldc           #23
164: invokestatic  #24
167: goto          172
170: astore        11
172: aload_2
173: invokestatic  #26
176: aload_2
177: invokestatic  #27
180: ldc           #28
182: invokestatic  #29
185: aload_3
186: invokestatic  #26
189: aload_3
190: invokestatic  #27
193: ldc           #30
195: invokestatic  #29
198: new           #31
201: dup
202: invokespecial #32
205: ldc           #33
207: invokevirtual #34
210: dload         4
212: invokevirtual #35
215: ldc           #36
217: invokevirtual #34
220: ldc2_w        #10
223: invokevirtual #35
226: ldc           #33
228: invokevirtual #34
231: invokevirtual #37
234: dload         4
236: ldc2_w        #10
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #38
251: new           #31
254: dup
255: invokespecial #32
258: ldc           #33
260: invokevirtual #34
263: iload         8
265: invokevirtual #39
268: ldc           #36
270: invokevirtual #34
273: iconst_0
274: invokevirtual #39
277: ldc           #33
279: invokevirtual #34
282: invokevirtual #37
285: iload         8
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #38
298: new           #31
301: dup
302: invokespecial #32
305: ldc           #33
307: invokevirtual #34
310: iload         9
312: invokevirtual #39
315: ldc           #36
317: invokevirtual #34
320: iconst_0
321: invokevirtual #39
324: ldc           #33
326: invokevirtual #34
329: invokevirtual #37
332: iload         9
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #38
345: return
Exception table:
from    to  target type
154   167   170   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 326
End line: 340
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double2 = simplexSolver1.epsilon;
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau3 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #74
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #75
37: dstore_2
38: aconst_null
39: astore        4
41: aload_1
42: aload         4
44: invokevirtual #22
47: ldc           #23
49: invokestatic  #24
52: goto          57
55: astore        5
57: new           #31
60: dup
61: invokespecial #32
64: ldc           #33
66: invokevirtual #34
69: dload_2
70: invokevirtual #35
73: ldc           #36
75: invokevirtual #34
78: dconst_0
79: invokevirtual #35
82: ldc           #33
84: invokevirtual #34
87: invokevirtual #37
90: dload_2
91: dconst_0
92: dcmpl
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #38
104: return
Exception table:
from    to  target type
41    52    55   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 343
End line: 347
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #76
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 350
End line: 363
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        double double8 = simplexSolver1.epsilon;
        simplexSolver1.setMaxIterations(1104152832);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #77
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: getfield      #75
58: dstore        4
60: aload_1
61: ldc           #79
63: invokevirtual #61
66: new           #31
69: dup
70: invokespecial #32
73: ldc           #33
75: invokevirtual #34
78: iload_2
79: invokevirtual #66
82: ldc           #36
84: invokevirtual #34
87: iconst_0
88: invokevirtual #66
91: ldc           #33
93: invokevirtual #34
96: invokevirtual #37
99: iload_2
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #38
111: aload_3
112: invokestatic  #69
115: new           #31
118: dup
119: invokespecial #32
122: ldc           #33
124: invokevirtual #34
127: dload         4
129: invokevirtual #35
132: ldc           #36
134: invokevirtual #34
137: dconst_0
138: invokevirtual #35
141: ldc           #33
143: invokevirtual #34
146: invokevirtual #37
149: dload         4
151: dconst_0
152: dcmpl
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #38
164: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 366
End line: 378
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(10.0d);
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau2 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #80
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aconst_null
36: astore_2
37: aload_1
38: aload_2
39: invokevirtual #22
42: ldc           #23
44: invokestatic  #24
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
37    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 381
End line: 389
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        int int3 = simplexSolver1.getIterations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #81
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: invokevirtual #78
42: istore_3
43: new           #31
46: dup
47: invokespecial #32
50: ldc           #33
52: invokevirtual #34
55: iload_2
56: invokevirtual #66
59: ldc           #36
61: invokevirtual #34
64: iconst_0
65: invokevirtual #66
68: ldc           #33
70: invokevirtual #34
73: invokevirtual #37
76: iload_2
77: ifne          84
80: iconst_1
81: goto          85
84: iconst_0
85: invokestatic  #38
88: new           #31
91: dup
92: invokespecial #32
95: ldc           #33
97: invokevirtual #34
100: iload_3
101: invokevirtual #66
104: ldc           #36
106: invokevirtual #34
109: iconst_0
110: invokevirtual #66
113: ldc           #33
115: invokevirtual #34
118: invokevirtual #37
121: iload_3
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #38
133: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 392
End line: 410
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        int int3 = simplexSolver1.getMaxIterations();
        boolean boolean4 = simplexSolver1.restrictToNonNegative;
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau5 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: invokevirtual #65
42: istore_3
43: aload_1
44: getfield      #71
47: istore        4
49: aconst_null
50: astore        5
52: aload_1
53: aload         5
55: invokevirtual #22
58: ldc           #23
60: invokestatic  #24
63: goto          68
66: astore        6
68: new           #31
71: dup
72: invokespecial #32
75: ldc           #33
77: invokevirtual #34
80: iload_2
81: invokevirtual #66
84: ldc           #36
86: invokevirtual #34
89: iconst_0
90: invokevirtual #66
93: ldc           #33
95: invokevirtual #34
98: invokevirtual #37
101: iload_2
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #38
113: new           #31
116: dup
117: invokespecial #32
120: ldc           #33
122: invokevirtual #34
125: iload_3
126: invokevirtual #66
129: ldc           #36
131: invokevirtual #34
134: bipush        100
136: invokevirtual #66
139: ldc           #33
141: invokevirtual #34
144: invokevirtual #37
147: iload_3
148: bipush        100
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #38
161: new           #31
164: dup
165: invokespecial #32
168: ldc           #33
170: invokevirtual #34
173: iload         4
175: invokevirtual #39
178: ldc           #36
180: invokevirtual #34
183: iconst_0
184: invokevirtual #39
187: ldc           #33
189: invokevirtual #34
192: invokevirtual #37
195: iload         4
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #38
208: return
Exception table:
from    to  target type
52    63    66   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 413
End line: 436
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        simplexSolver1.restrictToNonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType26 = simplexSolver1.goalType;
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(goalType26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #83
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: bipush        10
148: invokevirtual #61
151: aload_1
152: iconst_0
153: putfield      #71
156: aload_1
157: getfield      #68
160: astore        10
162: aload_2
163: invokestatic  #26
166: aload_2
167: invokestatic  #27
170: ldc           #28
172: invokestatic  #29
175: aload_3
176: invokestatic  #26
179: aload_3
180: invokestatic  #27
183: ldc           #30
185: invokestatic  #29
188: new           #31
191: dup
192: invokespecial #32
195: ldc           #33
197: invokevirtual #34
200: dload         4
202: invokevirtual #35
205: ldc           #36
207: invokevirtual #34
210: ldc2_w        #10
213: invokevirtual #35
216: ldc           #33
218: invokevirtual #34
221: invokevirtual #37
224: dload         4
226: ldc2_w        #10
229: dcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #38
241: new           #31
244: dup
245: invokespecial #32
248: ldc           #33
250: invokevirtual #34
253: iload         8
255: invokevirtual #39
258: ldc           #36
260: invokevirtual #34
263: iconst_0
264: invokevirtual #39
267: ldc           #33
269: invokevirtual #34
272: invokevirtual #37
275: iload         8
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #38
288: new           #31
291: dup
292: invokespecial #32
295: ldc           #33
297: invokevirtual #34
300: iload         9
302: invokevirtual #39
305: ldc           #36
307: invokevirtual #34
310: iconst_0
311: invokevirtual #39
314: ldc           #33
316: invokevirtual #34
319: invokevirtual #37
322: iload         9
324: ifne          331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #38
335: aload         10
337: invokestatic  #69
340: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 439
End line: 458
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        simplexSolver1.incrementIterationsCounter();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = simplexSolver1.isOptimal(simplexTableau9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #84
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: invokevirtual #63
58: aconst_null
59: astore        4
61: aload_1
62: aload         4
64: invokevirtual #42
67: istore        5
69: ldc           #23
71: invokestatic  #24
74: goto          79
77: astore        5
79: new           #31
82: dup
83: invokespecial #32
86: ldc           #33
88: invokevirtual #34
91: iload_2
92: invokevirtual #66
95: ldc           #36
97: invokevirtual #34
100: iconst_0
101: invokevirtual #66
104: ldc           #33
106: invokevirtual #34
109: invokevirtual #37
112: iload_2
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #38
124: aload_3
125: invokestatic  #69
128: return
Exception table:
from    to  target type
61    74    77   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 461
End line: 483
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        org.apache.commons.math.optimization.GoalType goalType24 = simplexSolver1.goalType;
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(goalType24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #85
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: bipush        10
148: invokevirtual #61
151: aload_1
152: getfield      #68
155: astore        10
157: aload_2
158: invokestatic  #26
161: aload_2
162: invokestatic  #27
165: ldc           #28
167: invokestatic  #29
170: aload_3
171: invokestatic  #26
174: aload_3
175: invokestatic  #27
178: ldc           #30
180: invokestatic  #29
183: new           #31
186: dup
187: invokespecial #32
190: ldc           #33
192: invokevirtual #34
195: dload         4
197: invokevirtual #35
200: ldc           #36
202: invokevirtual #34
205: ldc2_w        #10
208: invokevirtual #35
211: ldc           #33
213: invokevirtual #34
216: invokevirtual #37
219: dload         4
221: ldc2_w        #10
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #38
236: new           #31
239: dup
240: invokespecial #32
243: ldc           #33
245: invokevirtual #34
248: iload         8
250: invokevirtual #39
253: ldc           #36
255: invokevirtual #34
258: iconst_0
259: invokevirtual #39
262: ldc           #33
264: invokevirtual #34
267: invokevirtual #37
270: iload         8
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #38
283: new           #31
286: dup
287: invokespecial #32
290: ldc           #33
292: invokevirtual #34
295: iload         9
297: invokevirtual #39
300: ldc           #36
302: invokevirtual #34
305: iconst_0
306: invokevirtual #39
309: ldc           #33
311: invokevirtual #34
314: invokevirtual #37
317: iload         9
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #38
330: aload         10
332: invokestatic  #69
335: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 486
End line: 495
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double2 = simplexSolver1.epsilon;
        int int3 = simplexSolver1.getIterations();
        simplexSolver1.restrictToNonNegative = false;
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #86
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #75
37: dstore_2
38: aload_1
39: invokevirtual #78
42: istore        4
44: aload_1
45: iconst_0
46: putfield      #71
49: new           #31
52: dup
53: invokespecial #32
56: ldc           #33
58: invokevirtual #34
61: dload_2
62: invokevirtual #35
65: ldc           #36
67: invokevirtual #34
70: dconst_0
71: invokevirtual #35
74: ldc           #33
76: invokevirtual #34
79: invokevirtual #37
82: dload_2
83: dconst_0
84: dcmpl
85: ifne          92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #38
96: new           #31
99: dup
100: invokespecial #32
103: ldc           #33
105: invokevirtual #34
108: iload         4
110: invokevirtual #66
113: ldc           #36
115: invokevirtual #34
118: iconst_0
119: invokevirtual #66
122: ldc           #33
124: invokevirtual #34
127: invokevirtual #37
130: iload         4
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #38
143: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 498
End line: 510
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        simplexSolver1.incrementIterationsCounter();
        simplexSolver1.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #87
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: invokevirtual #63
58: aload_1
59: invokevirtual #63
62: new           #31
65: dup
66: invokespecial #32
69: ldc           #33
71: invokevirtual #34
74: iload_2
75: invokevirtual #66
78: ldc           #36
80: invokevirtual #34
83: iconst_0
84: invokevirtual #66
87: ldc           #33
89: invokevirtual #34
92: invokevirtual #37
95: iload_2
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #38
107: aload_3
108: invokestatic  #69
111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 513
End line: 523
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        int int4 = simplexSolver0.getMaxIterations();
        simplexSolver0.setMaxIterations(929961856);
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-50) + "'", int4 == (-50));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #88
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: invokevirtual #65
47: istore_3
48: aload_1
49: ldc           #89
51: invokevirtual #61
54: aload_2
55: invokestatic  #69
58: new           #31
61: dup
62: invokespecial #32
65: ldc           #33
67: invokevirtual #34
70: iload_3
71: invokevirtual #66
74: ldc           #36
76: invokevirtual #34
79: bipush        -50
81: invokevirtual #66
84: ldc           #33
86: invokevirtual #34
89: invokevirtual #37
92: iload_3
93: bipush        -50
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #38
106: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 526
End line: 561
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver19 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType20 = simplexSolver19.goalType;
        boolean boolean21 = arrayRealVector15.equals((java.lang.Object) goalType20);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.mapCosToSelf();
        // The following exception was thrown during execution in test generation
        try {
            realVector22.unitize();
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNull(goalType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(realVector22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #90
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #10
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #12
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #12
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #10
50: dastore
51: astore_1
52: bipush        6
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #14
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #14
67: dastore
68: dup
69: iconst_2
70: ldc2_w        #14
73: dastore
74: dup
75: iconst_3
76: dconst_0
77: dastore
78: dup
79: iconst_4
80: dconst_1
81: dastore
82: dup
83: iconst_5
84: ldc2_w        #10
87: dastore
88: astore_2
89: aload_1
90: aload_2
91: invokestatic  #16
94: dstore_3
95: new           #48
98: dup
99: aload_1
100: iconst_1
101: iconst_0
102: invokespecial #49
105: astore        5
107: aload         5
109: invokevirtual #50
112: astore        6
114: aload         5
116: invokevirtual #91
119: astore        7
121: aload         5
123: invokevirtual #92
126: astore        8
128: new           #8
131: dup
132: invokespecial #41
135: astore        9
137: aload         9
139: getfield      #68
142: astore        10
144: aload         5
146: aload         10
148: invokevirtual #93
151: istore        11
153: aload         5
155: invokevirtual #94
158: astore        12
160: aload         12
162: invokeinterface #95,  1
167: ldc           #96
169: invokestatic  #24
172: goto          217
175: astore        13
177: aload         13
179: invokevirtual #98
182: invokevirtual #99
185: ifne          217
188: new           #31
191: dup
192: invokespecial #32
195: ldc           #100
197: invokevirtual #34
200: aload         13
202: invokevirtual #98
205: invokevirtual #101
208: invokevirtual #34
211: invokevirtual #37
214: invokestatic  #24
217: aload_1
218: invokestatic  #26
221: aload_1
222: invokestatic  #27
225: ldc           #28
227: invokestatic  #29
230: aload_2
231: invokestatic  #26
234: aload_2
235: invokestatic  #27
238: ldc           #30
240: invokestatic  #29
243: new           #31
246: dup
247: invokespecial #32
250: ldc           #33
252: invokevirtual #34
255: dload_3
256: invokevirtual #35
259: ldc           #36
261: invokevirtual #34
264: ldc2_w        #10
267: invokevirtual #35
270: ldc           #33
272: invokevirtual #34
275: invokevirtual #37
278: dload_3
279: ldc2_w        #10
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #38
294: aload         6
296: invokestatic  #26
299: aload         7
301: invokestatic  #26
304: aload         8
306: invokestatic  #26
309: aload         10
311: invokestatic  #69
314: new           #31
317: dup
318: invokespecial #32
321: ldc           #33
323: invokevirtual #34
326: iload         11
328: invokevirtual #39
331: ldc           #36
333: invokevirtual #34
336: iconst_0
337: invokevirtual #39
340: ldc           #33
342: invokevirtual #34
345: invokevirtual #37
348: iload         11
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #38
361: aload         12
363: invokestatic  #26
366: return
Exception table:
from    to  target type
160   172   175   Class java/lang/ArithmeticException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 564
End line: 575
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        int int3 = simplexSolver1.getMaxIterations();
        boolean boolean4 = simplexSolver1.restrictToNonNegative;
        simplexSolver1.restrictToNonNegative = false;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #102
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: invokevirtual #65
42: istore_3
43: aload_1
44: getfield      #71
47: istore        4
49: aload_1
50: iconst_0
51: putfield      #71
54: new           #31
57: dup
58: invokespecial #32
61: ldc           #33
63: invokevirtual #34
66: iload_2
67: invokevirtual #66
70: ldc           #36
72: invokevirtual #34
75: iconst_0
76: invokevirtual #66
79: ldc           #33
81: invokevirtual #34
84: invokevirtual #37
87: iload_2
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #38
99: new           #31
102: dup
103: invokespecial #32
106: ldc           #33
108: invokevirtual #34
111: iload_3
112: invokevirtual #66
115: ldc           #36
117: invokevirtual #34
120: bipush        100
122: invokevirtual #66
125: ldc           #33
127: invokevirtual #34
130: invokevirtual #37
133: iload_3
134: bipush        100
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #38
147: new           #31
150: dup
151: invokespecial #32
154: ldc           #33
156: invokevirtual #34
159: iload         4
161: invokevirtual #39
164: ldc           #36
166: invokevirtual #34
169: iconst_0
170: invokevirtual #39
173: ldc           #33
175: invokevirtual #34
178: invokevirtual #37
181: iload         4
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #38
194: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 578
End line: 625
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector2.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver5 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        boolean boolean24 = linearObjectiveFunction20.equals((java.lang.Object) "hi!");
        simplexSolver5.f = linearObjectiveFunction20;
        double[] doubleArray30 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double31 = linearObjectiveFunction20.getValue(doubleArray30);
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        boolean boolean45 = org.apache.commons.math.util.MathUtils.equals(doubleArray30, doubleArray36);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector2.append(doubleArray30);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector2.mapAtan();
        double double48 = arrayRealVector2.getL1Norm();
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector2.mapAtanToSelf();
        org.apache.commons.math.linear.RealVector realVector50 = realVector49.mapAtanToSelf();
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.194558835742002E15d + "'", double31 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertNotNull(realVector50);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #103
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: iconst_0
29: ldc2_w        #12
32: invokespecial #104
35: astore_1
36: aload_1
37: invokevirtual #105
40: astore_2
41: new           #8
44: dup
45: dconst_0
46: invokespecial #9
49: astore_3
50: iconst_4
51: newarray       double
53: dup
54: iconst_0
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_1
61: ldc2_w        #12
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #12
70: dastore
71: dup
72: iconst_3
73: ldc2_w        #10
76: dastore
77: astore        4
79: bipush        6
81: newarray       double
83: dup
84: iconst_0
85: ldc2_w        #14
88: dastore
89: dup
90: iconst_1
91: ldc2_w        #14
94: dastore
95: dup
96: iconst_2
97: ldc2_w        #14
100: dastore
101: dup
102: iconst_3
103: dconst_0
104: dastore
105: dup
106: iconst_4
107: dconst_1
108: dastore
109: dup
110: iconst_5
111: ldc2_w        #10
114: dastore
115: astore        5
117: aload         4
119: aload         5
121: invokestatic  #16
124: dstore        6
126: new           #17
129: dup
130: aload         4
132: ldc2_w        #10
135: invokespecial #18
138: astore        8
140: aconst_null
141: astore        9
143: aload         8
145: aload         9
147: invokevirtual #19
150: istore        10
152: aload         8
154: ldc           #20
156: invokevirtual #19
159: istore        11
161: aload_3
162: aload         8
164: putfield      #21
167: iconst_4
168: newarray       double
170: dup
171: iconst_0
172: ldc2_w        #106
175: dastore
176: dup
177: iconst_1
178: ldc2_w        #108
181: dastore
182: dup
183: iconst_2
184: dconst_1
185: dastore
186: dup
187: iconst_3
188: dconst_0
189: dastore
190: astore        12
192: aload         8
194: aload         12
196: invokevirtual #110
199: dstore        13
201: iconst_4
202: newarray       double
204: dup
205: iconst_0
206: ldc2_w        #10
209: dastore
210: dup
211: iconst_1
212: ldc2_w        #12
215: dastore
216: dup
217: iconst_2
218: ldc2_w        #12
221: dastore
222: dup
223: iconst_3
224: ldc2_w        #10
227: dastore
228: astore        15
230: bipush        6
232: newarray       double
234: dup
235: iconst_0
236: ldc2_w        #14
239: dastore
240: dup
241: iconst_1
242: ldc2_w        #14
245: dastore
246: dup
247: iconst_2
248: ldc2_w        #14
251: dastore
252: dup
253: iconst_3
254: dconst_0
255: dastore
256: dup
257: iconst_4
258: dconst_1
259: dastore
260: dup
261: iconst_5
262: ldc2_w        #10
265: dastore
266: astore        16
268: aload         15
270: aload         16
272: invokestatic  #16
275: dstore        17
277: aload         12
279: aload         15
281: invokestatic  #111
284: istore        19
286: aload_1
287: aload         12
289: invokevirtual #112
292: astore        20
294: aload_1
295: invokevirtual #50
298: astore        21
300: aload_1
301: invokevirtual #113
304: dstore        22
306: aload_1
307: invokevirtual #114
310: astore        24
312: aload         24
314: invokeinterface #115,  1
319: astore        25
321: aload_2
322: invokestatic  #26
325: aload         4
327: invokestatic  #26
330: aload         4
332: invokestatic  #27
335: ldc           #28
337: invokestatic  #29
340: aload         5
342: invokestatic  #26
345: aload         5
347: invokestatic  #27
350: ldc           #30
352: invokestatic  #29
355: new           #31
358: dup
359: invokespecial #32
362: ldc           #33
364: invokevirtual #34
367: dload         6
369: invokevirtual #35
372: ldc           #36
374: invokevirtual #34
377: ldc2_w        #10
380: invokevirtual #35
383: ldc           #33
385: invokevirtual #34
388: invokevirtual #37
391: dload         6
393: ldc2_w        #10
396: dcmpl
397: ifne          404
400: iconst_1
401: goto          405
404: iconst_0
405: invokestatic  #38
408: new           #31
411: dup
412: invokespecial #32
415: ldc           #33
417: invokevirtual #34
420: iload         10
422: invokevirtual #39
425: ldc           #36
427: invokevirtual #34
430: iconst_0
431: invokevirtual #39
434: ldc           #33
436: invokevirtual #34
439: invokevirtual #37
442: iload         10
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #38
455: new           #31
458: dup
459: invokespecial #32
462: ldc           #33
464: invokevirtual #34
467: iload         11
469: invokevirtual #39
472: ldc           #36
474: invokevirtual #34
477: iconst_0
478: invokevirtual #39
481: ldc           #33
483: invokevirtual #34
486: invokevirtual #37
489: iload         11
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #38
502: aload         12
504: invokestatic  #26
507: aload         12
509: invokestatic  #27
512: ldc           #116
514: invokestatic  #29
517: new           #31
520: dup
521: invokespecial #32
524: ldc           #33
526: invokevirtual #34
529: dload         13
531: invokevirtual #35
534: ldc           #36
536: invokevirtual #34
539: ldc2_w        #117
542: invokevirtual #35
545: ldc           #33
547: invokevirtual #34
550: invokevirtual #37
553: dload         13
555: ldc2_w        #117
558: dcmpl
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #38
570: aload         15
572: invokestatic  #26
575: aload         15
577: invokestatic  #27
580: ldc           #28
582: invokestatic  #29
585: aload         16
587: invokestatic  #26
590: aload         16
592: invokestatic  #27
595: ldc           #30
597: invokestatic  #29
600: new           #31
603: dup
604: invokespecial #32
607: ldc           #33
609: invokevirtual #34
612: dload         17
614: invokevirtual #35
617: ldc           #36
619: invokevirtual #34
622: ldc2_w        #10
625: invokevirtual #35
628: ldc           #33
630: invokevirtual #34
633: invokevirtual #37
636: dload         17
638: ldc2_w        #10
641: dcmpl
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #38
653: new           #31
656: dup
657: invokespecial #32
660: ldc           #33
662: invokevirtual #34
665: iload         19
667: invokevirtual #39
670: ldc           #36
672: invokevirtual #34
675: iconst_0
676: invokevirtual #39
679: ldc           #33
681: invokevirtual #34
684: invokevirtual #37
687: iload         19
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #38
700: aload         20
702: invokestatic  #26
705: aload         21
707: invokestatic  #26
710: new           #31
713: dup
714: invokespecial #32
717: ldc           #33
719: invokevirtual #34
722: dload         22
724: invokevirtual #35
727: ldc           #36
729: invokevirtual #34
732: dconst_0
733: invokevirtual #35
736: ldc           #33
738: invokevirtual #34
741: invokevirtual #37
744: dload         22
746: dconst_0
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #38
759: aload         24
761: invokestatic  #26
764: aload         25
766: invokestatic  #26
769: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 628
End line: 661
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver19 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType20 = simplexSolver19.goalType;
        boolean boolean21 = arrayRealVector15.equals((java.lang.Object) goalType20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.unitVector();
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNull(goalType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #119
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #10
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #12
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #12
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #10
50: dastore
51: astore_1
52: bipush        6
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #14
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #14
67: dastore
68: dup
69: iconst_2
70: ldc2_w        #14
73: dastore
74: dup
75: iconst_3
76: dconst_0
77: dastore
78: dup
79: iconst_4
80: dconst_1
81: dastore
82: dup
83: iconst_5
84: ldc2_w        #10
87: dastore
88: astore_2
89: aload_1
90: aload_2
91: invokestatic  #16
94: dstore_3
95: new           #48
98: dup
99: aload_1
100: iconst_1
101: iconst_0
102: invokespecial #49
105: astore        5
107: aload         5
109: invokevirtual #50
112: astore        6
114: aload         5
116: invokevirtual #91
119: astore        7
121: aload         5
123: invokevirtual #92
126: astore        8
128: new           #8
131: dup
132: invokespecial #41
135: astore        9
137: aload         9
139: getfield      #68
142: astore        10
144: aload         5
146: aload         10
148: invokevirtual #93
151: istore        11
153: aload         5
155: invokevirtual #120
158: astore        12
160: ldc           #96
162: invokestatic  #24
165: goto          210
168: astore        12
170: aload         12
172: invokevirtual #98
175: invokevirtual #99
178: ifne          210
181: new           #31
184: dup
185: invokespecial #32
188: ldc           #100
190: invokevirtual #34
193: aload         12
195: invokevirtual #98
198: invokevirtual #101
201: invokevirtual #34
204: invokevirtual #37
207: invokestatic  #24
210: aload_1
211: invokestatic  #26
214: aload_1
215: invokestatic  #27
218: ldc           #28
220: invokestatic  #29
223: aload_2
224: invokestatic  #26
227: aload_2
228: invokestatic  #27
231: ldc           #30
233: invokestatic  #29
236: new           #31
239: dup
240: invokespecial #32
243: ldc           #33
245: invokevirtual #34
248: dload_3
249: invokevirtual #35
252: ldc           #36
254: invokevirtual #34
257: ldc2_w        #10
260: invokevirtual #35
263: ldc           #33
265: invokevirtual #34
268: invokevirtual #37
271: dload_3
272: ldc2_w        #10
275: dcmpl
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #38
287: aload         6
289: invokestatic  #26
292: aload         7
294: invokestatic  #26
297: aload         8
299: invokestatic  #26
302: aload         10
304: invokestatic  #69
307: new           #31
310: dup
311: invokespecial #32
314: ldc           #33
316: invokevirtual #34
319: iload         11
321: invokevirtual #39
324: ldc           #36
326: invokevirtual #34
329: iconst_0
330: invokevirtual #39
333: ldc           #33
335: invokevirtual #34
338: invokevirtual #37
341: iload         11
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #38
354: return
Exception table:
from    to  target type
153   165   168   Class java/lang/ArithmeticException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 664
End line: 691
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver19 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType20 = simplexSolver19.goalType;
        boolean boolean21 = arrayRealVector15.equals((java.lang.Object) goalType20);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.mapCbrt();
        org.apache.commons.math.linear.RealVector realVector23 = arrayRealVector15.mapAtanToSelf();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNull(goalType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #121
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #10
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #12
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #12
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #10
50: dastore
51: astore_1
52: bipush        6
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #14
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #14
67: dastore
68: dup
69: iconst_2
70: ldc2_w        #14
73: dastore
74: dup
75: iconst_3
76: dconst_0
77: dastore
78: dup
79: iconst_4
80: dconst_1
81: dastore
82: dup
83: iconst_5
84: ldc2_w        #10
87: dastore
88: astore_2
89: aload_1
90: aload_2
91: invokestatic  #16
94: dstore_3
95: new           #48
98: dup
99: aload_1
100: iconst_1
101: iconst_0
102: invokespecial #49
105: astore        5
107: aload         5
109: invokevirtual #50
112: astore        6
114: aload         5
116: invokevirtual #91
119: astore        7
121: aload         5
123: invokevirtual #92
126: astore        8
128: new           #8
131: dup
132: invokespecial #41
135: astore        9
137: aload         9
139: getfield      #68
142: astore        10
144: aload         5
146: aload         10
148: invokevirtual #93
151: istore        11
153: aload         5
155: invokevirtual #122
158: astore        12
160: aload         5
162: invokevirtual #114
165: astore        13
167: aload_1
168: invokestatic  #26
171: aload_1
172: invokestatic  #27
175: ldc           #28
177: invokestatic  #29
180: aload_2
181: invokestatic  #26
184: aload_2
185: invokestatic  #27
188: ldc           #30
190: invokestatic  #29
193: new           #31
196: dup
197: invokespecial #32
200: ldc           #33
202: invokevirtual #34
205: dload_3
206: invokevirtual #35
209: ldc           #36
211: invokevirtual #34
214: ldc2_w        #10
217: invokevirtual #35
220: ldc           #33
222: invokevirtual #34
225: invokevirtual #37
228: dload_3
229: ldc2_w        #10
232: dcmpl
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #38
244: aload         6
246: invokestatic  #26
249: aload         7
251: invokestatic  #26
254: aload         8
256: invokestatic  #26
259: aload         10
261: invokestatic  #69
264: new           #31
267: dup
268: invokespecial #32
271: ldc           #33
273: invokevirtual #34
276: iload         11
278: invokevirtual #39
281: ldc           #36
283: invokevirtual #34
286: iconst_0
287: invokevirtual #39
290: ldc           #33
292: invokevirtual #34
295: invokevirtual #37
298: iload         11
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #38
311: aload         12
313: invokestatic  #26
316: aload         13
318: invokestatic  #26
321: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 694
End line: 707
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double2 = simplexSolver1.epsilon;
        org.apache.commons.math.optimization.GoalType goalType3 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver1.goalType = goalType3;
        int int5 = simplexSolver1.getIterations();
        double double6 = simplexSolver1.epsilon;
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType3 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType3.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #123
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #75
37: dstore_2
38: getstatic     #55
41: astore        4
43: aload_1
44: aload         4
46: putfield      #68
49: aload_1
50: invokevirtual #78
53: istore        5
55: aload_1
56: getfield      #75
59: dstore        6
61: new           #31
64: dup
65: invokespecial #32
68: ldc           #33
70: invokevirtual #34
73: dload_2
74: invokevirtual #35
77: ldc           #36
79: invokevirtual #34
82: dconst_0
83: invokevirtual #35
86: ldc           #33
88: invokevirtual #34
91: invokevirtual #37
94: dload_2
95: dconst_0
96: dcmpl
97: ifne          104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #38
108: new           #31
111: dup
112: invokespecial #32
115: ldc           #33
117: invokevirtual #34
120: aload         4
122: invokevirtual #57
125: ldc           #36
127: invokevirtual #34
130: getstatic     #55
133: invokevirtual #57
136: ldc           #33
138: invokevirtual #34
141: invokevirtual #37
144: aload         4
146: getstatic     #55
149: invokevirtual #58
152: invokestatic  #38
155: new           #31
158: dup
159: invokespecial #32
162: ldc           #33
164: invokevirtual #34
167: iload         5
169: invokevirtual #66
172: ldc           #36
174: invokevirtual #34
177: iconst_0
178: invokevirtual #66
181: ldc           #33
183: invokevirtual #34
186: invokevirtual #37
189: iload         5
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #38
202: new           #31
205: dup
206: invokespecial #32
209: ldc           #33
211: invokevirtual #34
214: dload         6
216: invokevirtual #35
219: ldc           #36
221: invokevirtual #34
224: dconst_0
225: invokevirtual #35
228: ldc           #33
230: invokevirtual #34
233: invokevirtual #37
236: dload         6
238: dconst_0
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #38
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 710
End line: 779
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        double double8 = simplexSolver1.epsilon;
        org.apache.commons.math.linear.RealVector realVector9 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction11 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector9, 12.566370614359172d);
        simplexSolver1.f = linearObjectiveFunction11;
        double[] doubleArray17 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray24 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double25 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray17, doubleArray24);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray17, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector28.mapAtan();
        org.apache.commons.math.linear.RealVector realVector30 = arrayRealVector28.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector28.mapAcosToSelf();
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray36, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector48 = arrayRealVector47.mapAtan();
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector47.mapInvToSelf();
        org.apache.commons.math.linear.RealVector realVector51 = realVector49.append((double) ' ');
        org.apache.commons.math.linear.RealVector realVector52 = arrayRealVector28.projection(realVector49);
        org.apache.commons.math.linear.RealVector realVector53 = arrayRealVector28.mapAtan();
        double[] doubleArray54 = realVector53.getData();
        org.apache.commons.math.linear.RealVector realVector56 = realVector53.mapSubtractToSelf((double) 1426542466);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction58 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector56, (double) 929961856);
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection59 = null;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver61 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double62 = simplexSolver61.epsilon;
        org.apache.commons.math.optimization.GoalType goalType63 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver61.goalType = goalType63;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair66 = simplexSolver1.optimize(linearObjectiveFunction58, linearConstraintCollection59, goalType63, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 100.0d + "'", double25 == 100.0d);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(realVector52);
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(realVector56);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType63 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType63.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #124
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: getfield      #75
58: dstore        4
60: aconst_null
61: astore        6
63: new           #17
66: dup
67: aload         6
69: ldc2_w        #125
72: invokespecial #127
75: astore        7
77: aload_1
78: aload         7
80: putfield      #21
83: iconst_4
84: newarray       double
86: dup
87: iconst_0
88: ldc2_w        #10
91: dastore
92: dup
93: iconst_1
94: ldc2_w        #12
97: dastore
98: dup
99: iconst_2
100: ldc2_w        #12
103: dastore
104: dup
105: iconst_3
106: ldc2_w        #10
109: dastore
110: astore        8
112: bipush        6
114: newarray       double
116: dup
117: iconst_0
118: ldc2_w        #14
121: dastore
122: dup
123: iconst_1
124: ldc2_w        #14
127: dastore
128: dup
129: iconst_2
130: ldc2_w        #14
133: dastore
134: dup
135: iconst_3
136: dconst_0
137: dastore
138: dup
139: iconst_4
140: dconst_1
141: dastore
142: dup
143: iconst_5
144: ldc2_w        #10
147: dastore
148: astore        9
150: aload         8
152: aload         9
154: invokestatic  #16
157: dstore        10
159: new           #48
162: dup
163: aload         8
165: iconst_1
166: iconst_0
167: invokespecial #49
170: astore        12
172: aload         12
174: invokevirtual #50
177: astore        13
179: aload         12
181: invokevirtual #91
184: astore        14
186: aload         12
188: invokevirtual #92
191: astore        15
193: iconst_4
194: newarray       double
196: dup
197: iconst_0
198: ldc2_w        #10
201: dastore
202: dup
203: iconst_1
204: ldc2_w        #12
207: dastore
208: dup
209: iconst_2
210: ldc2_w        #12
213: dastore
214: dup
215: iconst_3
216: ldc2_w        #10
219: dastore
220: astore        16
222: bipush        6
224: newarray       double
226: dup
227: iconst_0
228: ldc2_w        #14
231: dastore
232: dup
233: iconst_1
234: ldc2_w        #14
237: dastore
238: dup
239: iconst_2
240: ldc2_w        #14
243: dastore
244: dup
245: iconst_3
246: dconst_0
247: dastore
248: dup
249: iconst_4
250: dconst_1
251: dastore
252: dup
253: iconst_5
254: ldc2_w        #10
257: dastore
258: astore        17
260: aload         16
262: aload         17
264: invokestatic  #16
267: dstore        18
269: new           #48
272: dup
273: aload         16
275: iconst_1
276: iconst_0
277: invokespecial #49
280: astore        20
282: aload         20
284: invokevirtual #50
287: astore        21
289: aload         20
291: invokevirtual #128
294: astore        22
296: aload         22
298: ldc2_w        #129
301: invokeinterface #131,  3
306: astore        23
308: aload         12
310: aload         22
312: invokevirtual #132
315: astore        24
317: aload         12
319: invokevirtual #50
322: astore        25
324: aload         25
326: invokeinterface #133,  1
331: astore        26
333: aload         25
335: ldc2_w        #134
338: invokeinterface #136,  3
343: astore        27
345: new           #17
348: dup
349: aload         27
351: ldc2_w        #137
354: invokespecial #127
357: astore        28
359: aconst_null
360: astore        29
362: new           #8
365: dup
366: dconst_0
367: invokespecial #9
370: astore        30
372: aload         30
374: getfield      #75
377: dstore        31
379: getstatic     #55
382: astore        33
384: aload         30
386: aload         33
388: putfield      #68
391: aload_1
392: aload         28
394: aload         29
396: aload         33
398: iconst_0
399: invokevirtual #56
402: astore        34
404: ldc           #23
406: invokestatic  #24
409: goto          414
412: astore        34
414: new           #31
417: dup
418: invokespecial #32
421: ldc           #33
423: invokevirtual #34
426: iload_2
427: invokevirtual #66
430: ldc           #36
432: invokevirtual #34
435: iconst_0
436: invokevirtual #66
439: ldc           #33
441: invokevirtual #34
444: invokevirtual #37
447: iload_2
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #38
459: aload_3
460: invokestatic  #69
463: new           #31
466: dup
467: invokespecial #32
470: ldc           #33
472: invokevirtual #34
475: dload         4
477: invokevirtual #35
480: ldc           #36
482: invokevirtual #34
485: dconst_0
486: invokevirtual #35
489: ldc           #33
491: invokevirtual #34
494: invokevirtual #37
497: dload         4
499: dconst_0
500: dcmpl
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #38
512: aload         8
514: invokestatic  #26
517: aload         8
519: invokestatic  #27
522: ldc           #28
524: invokestatic  #29
527: aload         9
529: invokestatic  #26
532: aload         9
534: invokestatic  #27
537: ldc           #30
539: invokestatic  #29
542: new           #31
545: dup
546: invokespecial #32
549: ldc           #33
551: invokevirtual #34
554: dload         10
556: invokevirtual #35
559: ldc           #36
561: invokevirtual #34
564: ldc2_w        #10
567: invokevirtual #35
570: ldc           #33
572: invokevirtual #34
575: invokevirtual #37
578: dload         10
580: ldc2_w        #10
583: dcmpl
584: ifne          591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #38
595: aload         13
597: invokestatic  #26
600: aload         14
602: invokestatic  #26
605: aload         15
607: invokestatic  #26
610: aload         16
612: invokestatic  #26
615: aload         16
617: invokestatic  #27
620: ldc           #28
622: invokestatic  #29
625: aload         17
627: invokestatic  #26
630: aload         17
632: invokestatic  #27
635: ldc           #30
637: invokestatic  #29
640: new           #31
643: dup
644: invokespecial #32
647: ldc           #33
649: invokevirtual #34
652: dload         18
654: invokevirtual #35
657: ldc           #36
659: invokevirtual #34
662: ldc2_w        #10
665: invokevirtual #35
668: ldc           #33
670: invokevirtual #34
673: invokevirtual #37
676: dload         18
678: ldc2_w        #10
681: dcmpl
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #38
693: aload         21
695: invokestatic  #26
698: aload         22
700: invokestatic  #26
703: aload         23
705: invokestatic  #26
708: aload         24
710: invokestatic  #26
713: aload         25
715: invokestatic  #26
718: aload         26
720: invokestatic  #26
723: aload         26
725: invokestatic  #27
728: ldc           #139
730: invokestatic  #29
733: aload         27
735: invokestatic  #26
738: new           #31
741: dup
742: invokespecial #32
745: ldc           #33
747: invokevirtual #34
750: dload         31
752: invokevirtual #35
755: ldc           #36
757: invokevirtual #34
760: dconst_0
761: invokevirtual #35
764: ldc           #33
766: invokevirtual #34
769: invokevirtual #37
772: dload         31
774: dconst_0
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #38
787: new           #31
790: dup
791: invokespecial #32
794: ldc           #33
796: invokevirtual #34
799: aload         33
801: invokevirtual #57
804: ldc           #36
806: invokevirtual #34
809: getstatic     #55
812: invokevirtual #57
815: ldc           #33
817: invokevirtual #34
820: invokevirtual #37
823: aload         33
825: getstatic     #55
828: invokevirtual #58
831: invokestatic  #38
834: return
Exception table:
from    to  target type
391   409   412   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 782
End line: 832
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector2.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver5 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        boolean boolean24 = linearObjectiveFunction20.equals((java.lang.Object) "hi!");
        simplexSolver5.f = linearObjectiveFunction20;
        double[] doubleArray30 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double31 = linearObjectiveFunction20.getValue(doubleArray30);
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        boolean boolean45 = org.apache.commons.math.util.MathUtils.equals(doubleArray30, doubleArray36);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector2.append(doubleArray30);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector2.mapAtan();
        double double48 = arrayRealVector2.getL1Norm();
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector2.setEntry((-1426542431), (-0.5309649148733797d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: index -1,426,542,431 out of allowed range [0, -1]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.194558835742002E15d + "'", double31 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: iconst_0
29: ldc2_w        #12
32: invokespecial #104
35: astore_1
36: aload_1
37: invokevirtual #105
40: astore_2
41: new           #8
44: dup
45: dconst_0
46: invokespecial #9
49: astore_3
50: iconst_4
51: newarray       double
53: dup
54: iconst_0
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_1
61: ldc2_w        #12
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #12
70: dastore
71: dup
72: iconst_3
73: ldc2_w        #10
76: dastore
77: astore        4
79: bipush        6
81: newarray       double
83: dup
84: iconst_0
85: ldc2_w        #14
88: dastore
89: dup
90: iconst_1
91: ldc2_w        #14
94: dastore
95: dup
96: iconst_2
97: ldc2_w        #14
100: dastore
101: dup
102: iconst_3
103: dconst_0
104: dastore
105: dup
106: iconst_4
107: dconst_1
108: dastore
109: dup
110: iconst_5
111: ldc2_w        #10
114: dastore
115: astore        5
117: aload         4
119: aload         5
121: invokestatic  #16
124: dstore        6
126: new           #17
129: dup
130: aload         4
132: ldc2_w        #10
135: invokespecial #18
138: astore        8
140: aconst_null
141: astore        9
143: aload         8
145: aload         9
147: invokevirtual #19
150: istore        10
152: aload         8
154: ldc           #20
156: invokevirtual #19
159: istore        11
161: aload_3
162: aload         8
164: putfield      #21
167: iconst_4
168: newarray       double
170: dup
171: iconst_0
172: ldc2_w        #106
175: dastore
176: dup
177: iconst_1
178: ldc2_w        #108
181: dastore
182: dup
183: iconst_2
184: dconst_1
185: dastore
186: dup
187: iconst_3
188: dconst_0
189: dastore
190: astore        12
192: aload         8
194: aload         12
196: invokevirtual #110
199: dstore        13
201: iconst_4
202: newarray       double
204: dup
205: iconst_0
206: ldc2_w        #10
209: dastore
210: dup
211: iconst_1
212: ldc2_w        #12
215: dastore
216: dup
217: iconst_2
218: ldc2_w        #12
221: dastore
222: dup
223: iconst_3
224: ldc2_w        #10
227: dastore
228: astore        15
230: bipush        6
232: newarray       double
234: dup
235: iconst_0
236: ldc2_w        #14
239: dastore
240: dup
241: iconst_1
242: ldc2_w        #14
245: dastore
246: dup
247: iconst_2
248: ldc2_w        #14
251: dastore
252: dup
253: iconst_3
254: dconst_0
255: dastore
256: dup
257: iconst_4
258: dconst_1
259: dastore
260: dup
261: iconst_5
262: ldc2_w        #10
265: dastore
266: astore        16
268: aload         15
270: aload         16
272: invokestatic  #16
275: dstore        17
277: aload         12
279: aload         15
281: invokestatic  #111
284: istore        19
286: aload_1
287: aload         12
289: invokevirtual #112
292: astore        20
294: aload_1
295: invokevirtual #50
298: astore        21
300: aload_1
301: invokevirtual #113
304: dstore        22
306: aload_1
307: ldc           #141
309: ldc2_w        #142
312: invokevirtual #144
315: ldc           #145
317: invokestatic  #24
320: goto          325
323: astore        24
325: aload_2
326: invokestatic  #26
329: aload         4
331: invokestatic  #26
334: aload         4
336: invokestatic  #27
339: ldc           #28
341: invokestatic  #29
344: aload         5
346: invokestatic  #26
349: aload         5
351: invokestatic  #27
354: ldc           #30
356: invokestatic  #29
359: new           #31
362: dup
363: invokespecial #32
366: ldc           #33
368: invokevirtual #34
371: dload         6
373: invokevirtual #35
376: ldc           #36
378: invokevirtual #34
381: ldc2_w        #10
384: invokevirtual #35
387: ldc           #33
389: invokevirtual #34
392: invokevirtual #37
395: dload         6
397: ldc2_w        #10
400: dcmpl
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #38
412: new           #31
415: dup
416: invokespecial #32
419: ldc           #33
421: invokevirtual #34
424: iload         10
426: invokevirtual #39
429: ldc           #36
431: invokevirtual #34
434: iconst_0
435: invokevirtual #39
438: ldc           #33
440: invokevirtual #34
443: invokevirtual #37
446: iload         10
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #38
459: new           #31
462: dup
463: invokespecial #32
466: ldc           #33
468: invokevirtual #34
471: iload         11
473: invokevirtual #39
476: ldc           #36
478: invokevirtual #34
481: iconst_0
482: invokevirtual #39
485: ldc           #33
487: invokevirtual #34
490: invokevirtual #37
493: iload         11
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #38
506: aload         12
508: invokestatic  #26
511: aload         12
513: invokestatic  #27
516: ldc           #116
518: invokestatic  #29
521: new           #31
524: dup
525: invokespecial #32
528: ldc           #33
530: invokevirtual #34
533: dload         13
535: invokevirtual #35
538: ldc           #36
540: invokevirtual #34
543: ldc2_w        #117
546: invokevirtual #35
549: ldc           #33
551: invokevirtual #34
554: invokevirtual #37
557: dload         13
559: ldc2_w        #117
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #38
574: aload         15
576: invokestatic  #26
579: aload         15
581: invokestatic  #27
584: ldc           #28
586: invokestatic  #29
589: aload         16
591: invokestatic  #26
594: aload         16
596: invokestatic  #27
599: ldc           #30
601: invokestatic  #29
604: new           #31
607: dup
608: invokespecial #32
611: ldc           #33
613: invokevirtual #34
616: dload         17
618: invokevirtual #35
621: ldc           #36
623: invokevirtual #34
626: ldc2_w        #10
629: invokevirtual #35
632: ldc           #33
634: invokevirtual #34
637: invokevirtual #37
640: dload         17
642: ldc2_w        #10
645: dcmpl
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #38
657: new           #31
660: dup
661: invokespecial #32
664: ldc           #33
666: invokevirtual #34
669: iload         19
671: invokevirtual #39
674: ldc           #36
676: invokevirtual #34
679: iconst_0
680: invokevirtual #39
683: ldc           #33
685: invokevirtual #34
688: invokevirtual #37
691: iload         19
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #38
704: aload         20
706: invokestatic  #26
709: aload         21
711: invokestatic  #26
714: new           #31
717: dup
718: invokespecial #32
721: ldc           #33
723: invokevirtual #34
726: dload         22
728: invokevirtual #35
731: ldc           #36
733: invokevirtual #34
736: dconst_0
737: invokevirtual #35
740: ldc           #33
742: invokevirtual #34
745: invokevirtual #37
748: dload         22
750: dconst_0
751: dcmpl
752: ifne          759
755: iconst_1
756: goto          760
759: iconst_0
760: invokestatic  #38
763: return
Exception table:
from    to  target type
306   320   323   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 835
End line: 857
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        int int24 = simplexSolver1.getMaxIterations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: bipush        10
148: invokevirtual #61
151: aload_1
152: invokevirtual #65
155: istore        10
157: aload_2
158: invokestatic  #26
161: aload_2
162: invokestatic  #27
165: ldc           #28
167: invokestatic  #29
170: aload_3
171: invokestatic  #26
174: aload_3
175: invokestatic  #27
178: ldc           #30
180: invokestatic  #29
183: new           #31
186: dup
187: invokespecial #32
190: ldc           #33
192: invokevirtual #34
195: dload         4
197: invokevirtual #35
200: ldc           #36
202: invokevirtual #34
205: ldc2_w        #10
208: invokevirtual #35
211: ldc           #33
213: invokevirtual #34
216: invokevirtual #37
219: dload         4
221: ldc2_w        #10
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #38
236: new           #31
239: dup
240: invokespecial #32
243: ldc           #33
245: invokevirtual #34
248: iload         8
250: invokevirtual #39
253: ldc           #36
255: invokevirtual #34
258: iconst_0
259: invokevirtual #39
262: ldc           #33
264: invokevirtual #34
267: invokevirtual #37
270: iload         8
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #38
283: new           #31
286: dup
287: invokespecial #32
290: ldc           #33
292: invokevirtual #34
295: iload         9
297: invokevirtual #39
300: ldc           #36
302: invokevirtual #34
305: iconst_0
306: invokevirtual #39
309: ldc           #33
311: invokevirtual #34
314: invokevirtual #37
317: iload         9
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #38
330: new           #31
333: dup
334: invokespecial #32
337: ldc           #33
339: invokevirtual #34
342: iload         10
344: invokevirtual #66
347: ldc           #36
349: invokevirtual #34
352: bipush        10
354: invokevirtual #66
357: ldc           #33
359: invokevirtual #34
362: invokevirtual #37
365: iload         10
367: bipush        10
369: if_icmpne     376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #38
380: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 860
End line: 892
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.restrictToNonNegative = true;
        int int4 = simplexSolver1.getMaxIterations();
        double[] doubleArray9 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray16 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double17 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray9, doubleArray16);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction19 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray9, 100.0d);
        org.apache.commons.math.linear.RealVector realVector20 = linearObjectiveFunction19.getCoefficients();
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection21 = null;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver23 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double24 = simplexSolver23.epsilon;
        org.apache.commons.math.optimization.GoalType goalType25 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver23.goalType = goalType25;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair28 = simplexSolver1.optimize(linearObjectiveFunction19, linearConstraintCollection21, goalType25, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType25.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_1
35: putfield      #71
38: aload_1
39: invokevirtual #65
42: istore_2
43: iconst_4
44: newarray       double
46: dup
47: iconst_0
48: ldc2_w        #10
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #12
57: dastore
58: dup
59: iconst_2
60: ldc2_w        #12
63: dastore
64: dup
65: iconst_3
66: ldc2_w        #10
69: dastore
70: astore_3
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: ldc2_w        #14
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #14
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #14
92: dastore
93: dup
94: iconst_3
95: dconst_0
96: dastore
97: dup
98: iconst_4
99: dconst_1
100: dastore
101: dup
102: iconst_5
103: ldc2_w        #10
106: dastore
107: astore        4
109: aload_3
110: aload         4
112: invokestatic  #16
115: dstore        5
117: new           #17
120: dup
121: aload_3
122: ldc2_w        #10
125: invokespecial #18
128: astore        7
130: aload         7
132: invokevirtual #149
135: astore        8
137: aconst_null
138: astore        9
140: new           #8
143: dup
144: dconst_0
145: invokespecial #9
148: astore        10
150: aload         10
152: getfield      #75
155: dstore        11
157: getstatic     #55
160: astore        13
162: aload         10
164: aload         13
166: putfield      #68
169: aload_1
170: aload         7
172: aload         9
174: aload         13
176: iconst_0
177: invokevirtual #56
180: astore        14
182: ldc           #23
184: invokestatic  #24
187: goto          192
190: astore        14
192: new           #31
195: dup
196: invokespecial #32
199: ldc           #33
201: invokevirtual #34
204: iload_2
205: invokevirtual #66
208: ldc           #36
210: invokevirtual #34
213: bipush        100
215: invokevirtual #66
218: ldc           #33
220: invokevirtual #34
223: invokevirtual #37
226: iload_2
227: bipush        100
229: if_icmpne     236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #38
240: aload_3
241: invokestatic  #26
244: aload_3
245: invokestatic  #27
248: ldc           #28
250: invokestatic  #29
253: aload         4
255: invokestatic  #26
258: aload         4
260: invokestatic  #27
263: ldc           #30
265: invokestatic  #29
268: new           #31
271: dup
272: invokespecial #32
275: ldc           #33
277: invokevirtual #34
280: dload         5
282: invokevirtual #35
285: ldc           #36
287: invokevirtual #34
290: ldc2_w        #10
293: invokevirtual #35
296: ldc           #33
298: invokevirtual #34
301: invokevirtual #37
304: dload         5
306: ldc2_w        #10
309: dcmpl
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #38
321: aload         8
323: invokestatic  #26
326: new           #31
329: dup
330: invokespecial #32
333: ldc           #33
335: invokevirtual #34
338: dload         11
340: invokevirtual #35
343: ldc           #36
345: invokevirtual #34
348: dconst_0
349: invokevirtual #35
352: ldc           #33
354: invokevirtual #34
357: invokevirtual #37
360: dload         11
362: dconst_0
363: dcmpl
364: ifne          371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #38
375: new           #31
378: dup
379: invokespecial #32
382: ldc           #33
384: invokevirtual #34
387: aload         13
389: invokevirtual #57
392: ldc           #36
394: invokevirtual #34
397: getstatic     #55
400: invokevirtual #57
403: ldc           #33
405: invokevirtual #34
408: invokevirtual #37
411: aload         13
413: getstatic     #55
416: invokevirtual #58
419: invokestatic  #38
422: return
Exception table:
from    to  target type
169   187   190   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 895
End line: 929
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double2 = simplexSolver1.epsilon;
        org.apache.commons.math.optimization.GoalType goalType3 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver1.goalType = goalType3;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver6 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray11 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray18 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double19 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray11, doubleArray18);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction21 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray11, 100.0d);
        java.lang.Object obj22 = null;
        boolean boolean23 = linearObjectiveFunction21.equals(obj22);
        boolean boolean25 = linearObjectiveFunction21.equals((java.lang.Object) "hi!");
        simplexSolver6.f = linearObjectiveFunction21;
        simplexSolver1.f = linearObjectiveFunction21;
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau28 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.solvePhase1(simplexTableau28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType3 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType3.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #150
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #75
37: dstore_2
38: getstatic     #55
41: astore        4
43: aload_1
44: aload         4
46: putfield      #68
49: new           #8
52: dup
53: dconst_0
54: invokespecial #9
57: astore        5
59: iconst_4
60: newarray       double
62: dup
63: iconst_0
64: ldc2_w        #10
67: dastore
68: dup
69: iconst_1
70: ldc2_w        #12
73: dastore
74: dup
75: iconst_2
76: ldc2_w        #12
79: dastore
80: dup
81: iconst_3
82: ldc2_w        #10
85: dastore
86: astore        6
88: bipush        6
90: newarray       double
92: dup
93: iconst_0
94: ldc2_w        #14
97: dastore
98: dup
99: iconst_1
100: ldc2_w        #14
103: dastore
104: dup
105: iconst_2
106: ldc2_w        #14
109: dastore
110: dup
111: iconst_3
112: dconst_0
113: dastore
114: dup
115: iconst_4
116: dconst_1
117: dastore
118: dup
119: iconst_5
120: ldc2_w        #10
123: dastore
124: astore        7
126: aload         6
128: aload         7
130: invokestatic  #16
133: dstore        8
135: new           #17
138: dup
139: aload         6
141: ldc2_w        #10
144: invokespecial #18
147: astore        10
149: aconst_null
150: astore        11
152: aload         10
154: aload         11
156: invokevirtual #19
159: istore        12
161: aload         10
163: ldc           #20
165: invokevirtual #19
168: istore        13
170: aload         5
172: aload         10
174: putfield      #21
177: aload_1
178: aload         10
180: putfield      #21
183: aconst_null
184: astore        14
186: aload_1
187: aload         14
189: invokevirtual #44
192: ldc           #23
194: invokestatic  #24
197: goto          202
200: astore        15
202: new           #31
205: dup
206: invokespecial #32
209: ldc           #33
211: invokevirtual #34
214: dload_2
215: invokevirtual #35
218: ldc           #36
220: invokevirtual #34
223: dconst_0
224: invokevirtual #35
227: ldc           #33
229: invokevirtual #34
232: invokevirtual #37
235: dload_2
236: dconst_0
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #38
249: new           #31
252: dup
253: invokespecial #32
256: ldc           #33
258: invokevirtual #34
261: aload         4
263: invokevirtual #57
266: ldc           #36
268: invokevirtual #34
271: getstatic     #55
274: invokevirtual #57
277: ldc           #33
279: invokevirtual #34
282: invokevirtual #37
285: aload         4
287: getstatic     #55
290: invokevirtual #58
293: invokestatic  #38
296: aload         6
298: invokestatic  #26
301: aload         6
303: invokestatic  #27
306: ldc           #28
308: invokestatic  #29
311: aload         7
313: invokestatic  #26
316: aload         7
318: invokestatic  #27
321: ldc           #30
323: invokestatic  #29
326: new           #31
329: dup
330: invokespecial #32
333: ldc           #33
335: invokevirtual #34
338: dload         8
340: invokevirtual #35
343: ldc           #36
345: invokevirtual #34
348: ldc2_w        #10
351: invokevirtual #35
354: ldc           #33
356: invokevirtual #34
359: invokevirtual #37
362: dload         8
364: ldc2_w        #10
367: dcmpl
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #38
379: new           #31
382: dup
383: invokespecial #32
386: ldc           #33
388: invokevirtual #34
391: iload         12
393: invokevirtual #39
396: ldc           #36
398: invokevirtual #34
401: iconst_0
402: invokevirtual #39
405: ldc           #33
407: invokevirtual #34
410: invokevirtual #37
413: iload         12
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #38
426: new           #31
429: dup
430: invokespecial #32
433: ldc           #33
435: invokevirtual #34
438: iload         13
440: invokevirtual #39
443: ldc           #36
445: invokevirtual #34
448: iconst_0
449: invokevirtual #39
452: ldc           #33
454: invokevirtual #34
457: invokevirtual #37
460: iload         13
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #38
473: return
Exception table:
from    to  target type
186   197   200   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 932
End line: 946
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        int int3 = simplexSolver1.getMaxIterations();
        boolean boolean4 = simplexSolver1.restrictToNonNegative;
        int int5 = simplexSolver1.getIterations();
        double double6 = simplexSolver1.epsilon;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: invokevirtual #65
42: istore_3
43: aload_1
44: getfield      #71
47: istore        4
49: aload_1
50: invokevirtual #78
53: istore        5
55: aload_1
56: getfield      #75
59: dstore        6
61: new           #31
64: dup
65: invokespecial #32
68: ldc           #33
70: invokevirtual #34
73: iload_2
74: invokevirtual #66
77: ldc           #36
79: invokevirtual #34
82: iconst_0
83: invokevirtual #66
86: ldc           #33
88: invokevirtual #34
91: invokevirtual #37
94: iload_2
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #38
106: new           #31
109: dup
110: invokespecial #32
113: ldc           #33
115: invokevirtual #34
118: iload_3
119: invokevirtual #66
122: ldc           #36
124: invokevirtual #34
127: bipush        100
129: invokevirtual #66
132: ldc           #33
134: invokevirtual #34
137: invokevirtual #37
140: iload_3
141: bipush        100
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #38
154: new           #31
157: dup
158: invokespecial #32
161: ldc           #33
163: invokevirtual #34
166: iload         4
168: invokevirtual #39
171: ldc           #36
173: invokevirtual #34
176: iconst_0
177: invokevirtual #39
180: ldc           #33
182: invokevirtual #34
185: invokevirtual #37
188: iload         4
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #38
201: new           #31
204: dup
205: invokespecial #32
208: ldc           #33
210: invokevirtual #34
213: iload         5
215: invokevirtual #66
218: ldc           #36
220: invokevirtual #34
223: iconst_0
224: invokevirtual #66
227: ldc           #33
229: invokevirtual #34
232: invokevirtual #37
235: iload         5
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #38
248: new           #31
251: dup
252: invokespecial #32
255: ldc           #33
257: invokevirtual #34
260: dload         6
262: invokevirtual #35
265: ldc           #36
267: invokevirtual #34
270: dconst_0
271: invokevirtual #35
274: ldc           #33
276: invokevirtual #34
279: invokevirtual #37
282: dload         6
284: dconst_0
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #38
297: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 949
End line: 957
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(10.0d);
        int int2 = simplexSolver1.getMaxIterations();
        boolean boolean3 = simplexSolver1.restrictToNonNegative;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aload_1
36: invokevirtual #65
39: istore_2
40: aload_1
41: getfield      #71
44: istore_3
45: new           #31
48: dup
49: invokespecial #32
52: ldc           #33
54: invokevirtual #34
57: iload_2
58: invokevirtual #66
61: ldc           #36
63: invokevirtual #34
66: bipush        100
68: invokevirtual #66
71: ldc           #33
73: invokevirtual #34
76: invokevirtual #37
79: iload_2
80: bipush        100
82: if_icmpne     89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #38
93: new           #31
96: dup
97: invokespecial #32
100: ldc           #33
102: invokevirtual #34
105: iload_3
106: invokevirtual #39
109: ldc           #36
111: invokevirtual #34
114: iconst_0
115: invokevirtual #39
118: ldc           #33
120: invokevirtual #34
123: invokevirtual #37
126: iload_3
127: ifne          134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #38
138: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 960
End line: 973
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        simplexSolver1.setMaxIterations((-1));
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection10 = simplexSolver1.constraints;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNull(linearConstraintCollection10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #153
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: iconst_m1
56: invokevirtual #61
59: aload_1
60: getfield      #154
63: astore        4
65: new           #31
68: dup
69: invokespecial #32
72: ldc           #33
74: invokevirtual #34
77: iload_2
78: invokevirtual #66
81: ldc           #36
83: invokevirtual #34
86: iconst_0
87: invokevirtual #66
90: ldc           #33
92: invokevirtual #34
95: invokevirtual #37
98: iload_2
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #38
110: aload_3
111: invokestatic  #69
114: aload         4
116: invokestatic  #69
119: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 976
End line: 988
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 10L);
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau2 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.solvePhase1(simplexTableau2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aconst_null
36: astore_2
37: aload_1
38: aload_2
39: invokevirtual #44
42: ldc           #23
44: invokestatic  #24
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
37    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 991
End line: 1002
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        int int4 = simplexSolver0.getMaxIterations();
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection5 = simplexSolver0.constraints;
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-50) + "'", int4 == (-50));
        org.junit.Assert.assertNull(linearConstraintCollection5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: invokevirtual #65
47: istore_3
48: aload_1
49: getfield      #154
52: astore        4
54: aload_2
55: invokestatic  #69
58: new           #31
61: dup
62: invokespecial #32
65: ldc           #33
67: invokevirtual #34
70: iload_3
71: invokevirtual #66
74: ldc           #36
76: invokevirtual #34
79: bipush        -50
81: invokevirtual #66
84: ldc           #33
86: invokevirtual #34
89: invokevirtual #37
92: iload_3
93: bipush        -50
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #38
106: aload         4
108: invokestatic  #69
111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1005
End line: 1022
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        int int4 = simplexSolver0.getMaxIterations();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau5 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver0.doIteration(simplexTableau5);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (-50) exceeded");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-50) + "'", int4 == (-50));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #157
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: invokevirtual #65
47: istore_3
48: aconst_null
49: astore        4
51: aload_1
52: aload         4
54: invokevirtual #22
57: ldc           #158
59: invokestatic  #24
62: goto          67
65: astore        5
67: aload_2
68: invokestatic  #69
71: new           #31
74: dup
75: invokespecial #32
78: ldc           #33
80: invokevirtual #34
83: iload_3
84: invokevirtual #66
87: ldc           #36
89: invokevirtual #34
92: bipush        -50
94: invokevirtual #66
97: ldc           #33
99: invokevirtual #34
102: invokevirtual #37
105: iload_3
106: bipush        -50
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #38
119: return
Exception table:
from    to  target type
51    62    65   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 1025
End line: 1070
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector2.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver5 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        boolean boolean24 = linearObjectiveFunction20.equals((java.lang.Object) "hi!");
        simplexSolver5.f = linearObjectiveFunction20;
        double[] doubleArray30 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double31 = linearObjectiveFunction20.getValue(doubleArray30);
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        boolean boolean45 = org.apache.commons.math.util.MathUtils.equals(doubleArray30, doubleArray36);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector2.append(doubleArray30);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector2.mapAtan();
        double double48 = arrayRealVector2.getL1Norm();
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector2.mapAtan();
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.194558835742002E15d + "'", double31 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(realVector49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: iconst_0
29: ldc2_w        #12
32: invokespecial #104
35: astore_1
36: aload_1
37: invokevirtual #105
40: astore_2
41: new           #8
44: dup
45: dconst_0
46: invokespecial #9
49: astore_3
50: iconst_4
51: newarray       double
53: dup
54: iconst_0
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_1
61: ldc2_w        #12
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #12
70: dastore
71: dup
72: iconst_3
73: ldc2_w        #10
76: dastore
77: astore        4
79: bipush        6
81: newarray       double
83: dup
84: iconst_0
85: ldc2_w        #14
88: dastore
89: dup
90: iconst_1
91: ldc2_w        #14
94: dastore
95: dup
96: iconst_2
97: ldc2_w        #14
100: dastore
101: dup
102: iconst_3
103: dconst_0
104: dastore
105: dup
106: iconst_4
107: dconst_1
108: dastore
109: dup
110: iconst_5
111: ldc2_w        #10
114: dastore
115: astore        5
117: aload         4
119: aload         5
121: invokestatic  #16
124: dstore        6
126: new           #17
129: dup
130: aload         4
132: ldc2_w        #10
135: invokespecial #18
138: astore        8
140: aconst_null
141: astore        9
143: aload         8
145: aload         9
147: invokevirtual #19
150: istore        10
152: aload         8
154: ldc           #20
156: invokevirtual #19
159: istore        11
161: aload_3
162: aload         8
164: putfield      #21
167: iconst_4
168: newarray       double
170: dup
171: iconst_0
172: ldc2_w        #106
175: dastore
176: dup
177: iconst_1
178: ldc2_w        #108
181: dastore
182: dup
183: iconst_2
184: dconst_1
185: dastore
186: dup
187: iconst_3
188: dconst_0
189: dastore
190: astore        12
192: aload         8
194: aload         12
196: invokevirtual #110
199: dstore        13
201: iconst_4
202: newarray       double
204: dup
205: iconst_0
206: ldc2_w        #10
209: dastore
210: dup
211: iconst_1
212: ldc2_w        #12
215: dastore
216: dup
217: iconst_2
218: ldc2_w        #12
221: dastore
222: dup
223: iconst_3
224: ldc2_w        #10
227: dastore
228: astore        15
230: bipush        6
232: newarray       double
234: dup
235: iconst_0
236: ldc2_w        #14
239: dastore
240: dup
241: iconst_1
242: ldc2_w        #14
245: dastore
246: dup
247: iconst_2
248: ldc2_w        #14
251: dastore
252: dup
253: iconst_3
254: dconst_0
255: dastore
256: dup
257: iconst_4
258: dconst_1
259: dastore
260: dup
261: iconst_5
262: ldc2_w        #10
265: dastore
266: astore        16
268: aload         15
270: aload         16
272: invokestatic  #16
275: dstore        17
277: aload         12
279: aload         15
281: invokestatic  #111
284: istore        19
286: aload_1
287: aload         12
289: invokevirtual #112
292: astore        20
294: aload_1
295: invokevirtual #50
298: astore        21
300: aload_1
301: invokevirtual #113
304: dstore        22
306: aload_1
307: invokevirtual #50
310: astore        24
312: aload_2
313: invokestatic  #26
316: aload         4
318: invokestatic  #26
321: aload         4
323: invokestatic  #27
326: ldc           #28
328: invokestatic  #29
331: aload         5
333: invokestatic  #26
336: aload         5
338: invokestatic  #27
341: ldc           #30
343: invokestatic  #29
346: new           #31
349: dup
350: invokespecial #32
353: ldc           #33
355: invokevirtual #34
358: dload         6
360: invokevirtual #35
363: ldc           #36
365: invokevirtual #34
368: ldc2_w        #10
371: invokevirtual #35
374: ldc           #33
376: invokevirtual #34
379: invokevirtual #37
382: dload         6
384: ldc2_w        #10
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #38
399: new           #31
402: dup
403: invokespecial #32
406: ldc           #33
408: invokevirtual #34
411: iload         10
413: invokevirtual #39
416: ldc           #36
418: invokevirtual #34
421: iconst_0
422: invokevirtual #39
425: ldc           #33
427: invokevirtual #34
430: invokevirtual #37
433: iload         10
435: ifne          442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #38
446: new           #31
449: dup
450: invokespecial #32
453: ldc           #33
455: invokevirtual #34
458: iload         11
460: invokevirtual #39
463: ldc           #36
465: invokevirtual #34
468: iconst_0
469: invokevirtual #39
472: ldc           #33
474: invokevirtual #34
477: invokevirtual #37
480: iload         11
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #38
493: aload         12
495: invokestatic  #26
498: aload         12
500: invokestatic  #27
503: ldc           #116
505: invokestatic  #29
508: new           #31
511: dup
512: invokespecial #32
515: ldc           #33
517: invokevirtual #34
520: dload         13
522: invokevirtual #35
525: ldc           #36
527: invokevirtual #34
530: ldc2_w        #117
533: invokevirtual #35
536: ldc           #33
538: invokevirtual #34
541: invokevirtual #37
544: dload         13
546: ldc2_w        #117
549: dcmpl
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #38
561: aload         15
563: invokestatic  #26
566: aload         15
568: invokestatic  #27
571: ldc           #28
573: invokestatic  #29
576: aload         16
578: invokestatic  #26
581: aload         16
583: invokestatic  #27
586: ldc           #30
588: invokestatic  #29
591: new           #31
594: dup
595: invokespecial #32
598: ldc           #33
600: invokevirtual #34
603: dload         17
605: invokevirtual #35
608: ldc           #36
610: invokevirtual #34
613: ldc2_w        #10
616: invokevirtual #35
619: ldc           #33
621: invokevirtual #34
624: invokevirtual #37
627: dload         17
629: ldc2_w        #10
632: dcmpl
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #38
644: new           #31
647: dup
648: invokespecial #32
651: ldc           #33
653: invokevirtual #34
656: iload         19
658: invokevirtual #39
661: ldc           #36
663: invokevirtual #34
666: iconst_0
667: invokevirtual #39
670: ldc           #33
672: invokevirtual #34
675: invokevirtual #37
678: iload         19
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #38
691: aload         20
693: invokestatic  #26
696: aload         21
698: invokestatic  #26
701: new           #31
704: dup
705: invokespecial #32
708: ldc           #33
710: invokevirtual #34
713: dload         22
715: invokevirtual #35
718: ldc           #36
720: invokevirtual #34
723: dconst_0
724: invokevirtual #35
727: ldc           #33
729: invokevirtual #34
732: invokevirtual #37
735: dload         22
737: dconst_0
738: dcmpl
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #38
750: aload         24
752: invokestatic  #26
755: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 1073
End line: 1089
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        double double8 = simplexSolver1.epsilon;
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection9 = simplexSolver1.constraints;
        org.apache.commons.math.optimization.GoalType goalType10 = simplexSolver1.goalType;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(linearConstraintCollection9);
        org.junit.Assert.assertNull(goalType10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: getfield      #75
58: dstore        4
60: aload_1
61: getfield      #154
64: astore        6
66: aload_1
67: getfield      #68
70: astore        7
72: new           #31
75: dup
76: invokespecial #32
79: ldc           #33
81: invokevirtual #34
84: iload_2
85: invokevirtual #66
88: ldc           #36
90: invokevirtual #34
93: iconst_0
94: invokevirtual #66
97: ldc           #33
99: invokevirtual #34
102: invokevirtual #37
105: iload_2
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #38
117: aload_3
118: invokestatic  #69
121: new           #31
124: dup
125: invokespecial #32
128: ldc           #33
130: invokevirtual #34
133: dload         4
135: invokevirtual #35
138: ldc           #36
140: invokevirtual #34
143: dconst_0
144: invokevirtual #35
147: ldc           #33
149: invokevirtual #34
152: invokevirtual #37
155: dload         4
157: dconst_0
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #38
170: aload         6
172: invokestatic  #69
175: aload         7
177: invokestatic  #69
180: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 1092
End line: 1102
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.restrictToNonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType4 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver1.goalType = goalType4;
        int int6 = simplexSolver1.getIterations();
        org.junit.Assert.assertTrue("'" + goalType4 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType4.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #162
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #71
38: getstatic     #55
41: astore_2
42: aload_1
43: aload_2
44: putfield      #68
47: aload_1
48: invokevirtual #78
51: istore_3
52: new           #31
55: dup
56: invokespecial #32
59: ldc           #33
61: invokevirtual #34
64: aload_2
65: invokevirtual #57
68: ldc           #36
70: invokevirtual #34
73: getstatic     #55
76: invokevirtual #57
79: ldc           #33
81: invokevirtual #34
84: invokevirtual #37
87: aload_2
88: getstatic     #55
91: invokevirtual #58
94: invokestatic  #38
97: new           #31
100: dup
101: invokespecial #32
104: ldc           #33
106: invokevirtual #34
109: iload_3
110: invokevirtual #66
113: ldc           #36
115: invokevirtual #34
118: iconst_0
119: invokevirtual #66
122: ldc           #33
124: invokevirtual #34
127: invokevirtual #37
130: iload_3
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #38
142: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 1105
End line: 1132
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver19 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType20 = simplexSolver19.goalType;
        boolean boolean21 = arrayRealVector15.equals((java.lang.Object) goalType20);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.mapCbrt();
        org.apache.commons.math.linear.RealVector realVector24 = realVector22.mapMultiplyToSelf(1.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNull(goalType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #163
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #10
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #12
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #12
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #10
50: dastore
51: astore_1
52: bipush        6
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #14
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #14
67: dastore
68: dup
69: iconst_2
70: ldc2_w        #14
73: dastore
74: dup
75: iconst_3
76: dconst_0
77: dastore
78: dup
79: iconst_4
80: dconst_1
81: dastore
82: dup
83: iconst_5
84: ldc2_w        #10
87: dastore
88: astore_2
89: aload_1
90: aload_2
91: invokestatic  #16
94: dstore_3
95: new           #48
98: dup
99: aload_1
100: iconst_1
101: iconst_0
102: invokespecial #49
105: astore        5
107: aload         5
109: invokevirtual #50
112: astore        6
114: aload         5
116: invokevirtual #91
119: astore        7
121: aload         5
123: invokevirtual #92
126: astore        8
128: new           #8
131: dup
132: invokespecial #41
135: astore        9
137: aload         9
139: getfield      #68
142: astore        10
144: aload         5
146: aload         10
148: invokevirtual #93
151: istore        11
153: aload         5
155: invokevirtual #122
158: astore        12
160: aload         12
162: dconst_1
163: invokeinterface #164,  3
168: astore        13
170: aload_1
171: invokestatic  #26
174: aload_1
175: invokestatic  #27
178: ldc           #28
180: invokestatic  #29
183: aload_2
184: invokestatic  #26
187: aload_2
188: invokestatic  #27
191: ldc           #30
193: invokestatic  #29
196: new           #31
199: dup
200: invokespecial #32
203: ldc           #33
205: invokevirtual #34
208: dload_3
209: invokevirtual #35
212: ldc           #36
214: invokevirtual #34
217: ldc2_w        #10
220: invokevirtual #35
223: ldc           #33
225: invokevirtual #34
228: invokevirtual #37
231: dload_3
232: ldc2_w        #10
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #38
247: aload         6
249: invokestatic  #26
252: aload         7
254: invokestatic  #26
257: aload         8
259: invokestatic  #26
262: aload         10
264: invokestatic  #69
267: new           #31
270: dup
271: invokespecial #32
274: ldc           #33
276: invokevirtual #34
279: iload         11
281: invokevirtual #39
284: ldc           #36
286: invokevirtual #34
289: iconst_0
290: invokevirtual #39
293: ldc           #33
295: invokevirtual #34
298: invokevirtual #37
301: iload         11
303: ifne          310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #38
314: aload         12
316: invokestatic  #26
319: aload         13
321: invokestatic  #26
324: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 1135
End line: 1152
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau6 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (0) exceeded");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #165
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aconst_null
49: astore        4
51: aload_1
52: aload         4
54: invokevirtual #22
57: ldc           #166
59: invokestatic  #24
62: goto          67
65: astore        5
67: new           #31
70: dup
71: invokespecial #32
74: ldc           #33
76: invokevirtual #34
79: iload_2
80: invokevirtual #66
83: ldc           #36
85: invokevirtual #34
88: iconst_0
89: invokevirtual #66
92: ldc           #33
94: invokevirtual #34
97: invokevirtual #37
100: iload_2
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #38
112: aload_3
113: invokestatic  #69
116: return
Exception table:
from    to  target type
51    62    65   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 1155
End line: 1242
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector15.append(0.0d);
        double[] doubleArray24 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray31 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double32 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray24, doubleArray31);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector35.mapAtan();
        org.apache.commons.math.linear.RealVector realVector37 = arrayRealVector35.mapSinhToSelf();
        double[] doubleArray42 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray49 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double50 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray42, doubleArray49);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector54 = arrayRealVector53.mapAtan();
        org.apache.commons.math.linear.RealVector realVector55 = realVector37.projection((org.apache.commons.math.linear.RealVector) arrayRealVector53);
        org.apache.commons.math.linear.RealVector realVector56 = realVector55.mapAbsToSelf();
        org.apache.commons.math.linear.RealVector realVector58 = realVector55.mapDivide((double) 1);
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector15.ebeDivide(realVector55);
        java.lang.String str60 = arrayRealVector15.toString();
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector15.mapFloorToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver63 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray68 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray75 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double76 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray68, doubleArray75);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction78 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray68, 100.0d);
        java.lang.Object obj79 = null;
        boolean boolean80 = linearObjectiveFunction78.equals(obj79);
        boolean boolean82 = linearObjectiveFunction78.equals((java.lang.Object) "hi!");
        simplexSolver63.f = linearObjectiveFunction78;
        double[] doubleArray88 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double89 = linearObjectiveFunction78.getValue(doubleArray88);
        org.apache.commons.math.linear.RealVector realVector90 = arrayRealVector15.append(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector93 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray88, 1219875569, 97);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0d + "'", double32 == 100.0d);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertNotNull(realVector56);
        org.junit.Assert.assertNotNull(realVector58);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 100.0d + "'", double76 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2.194558835742002E15d + "'", double89 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(realVector90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #167
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #10
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #12
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #12
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #10
50: dastore
51: astore_1
52: bipush        6
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #14
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #14
67: dastore
68: dup
69: iconst_2
70: ldc2_w        #14
73: dastore
74: dup
75: iconst_3
76: dconst_0
77: dastore
78: dup
79: iconst_4
80: dconst_1
81: dastore
82: dup
83: iconst_5
84: ldc2_w        #10
87: dastore
88: astore_2
89: aload_1
90: aload_2
91: invokestatic  #16
94: dstore_3
95: new           #48
98: dup
99: aload_1
100: iconst_1
101: iconst_0
102: invokespecial #49
105: astore        5
107: aload         5
109: invokevirtual #50
112: astore        6
114: aload         5
116: invokevirtual #91
119: astore        7
121: aload         5
123: dconst_0
124: invokevirtual #168
127: astore        8
129: iconst_4
130: newarray       double
132: dup
133: iconst_0
134: ldc2_w        #10
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #12
143: dastore
144: dup
145: iconst_2
146: ldc2_w        #12
149: dastore
150: dup
151: iconst_3
152: ldc2_w        #10
155: dastore
156: astore        9
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #14
167: dastore
168: dup
169: iconst_1
170: ldc2_w        #14
173: dastore
174: dup
175: iconst_2
176: ldc2_w        #14
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #10
193: dastore
194: astore        10
196: aload         9
198: aload         10
200: invokestatic  #16
203: dstore        11
205: new           #48
208: dup
209: aload         9
211: iconst_1
212: iconst_0
213: invokespecial #49
216: astore        13
218: aload         13
220: invokevirtual #50
223: astore        14
225: aload         13
227: invokevirtual #91
230: astore        15
232: iconst_4
233: newarray       double
235: dup
236: iconst_0
237: ldc2_w        #10
240: dastore
241: dup
242: iconst_1
243: ldc2_w        #12
246: dastore
247: dup
248: iconst_2
249: ldc2_w        #12
252: dastore
253: dup
254: iconst_3
255: ldc2_w        #10
258: dastore
259: astore        16
261: bipush        6
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #14
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #14
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #14
282: dastore
283: dup
284: iconst_3
285: dconst_0
286: dastore
287: dup
288: iconst_4
289: dconst_1
290: dastore
291: dup
292: iconst_5
293: ldc2_w        #10
296: dastore
297: astore        17
299: aload         16
301: aload         17
303: invokestatic  #16
306: dstore        18
308: new           #48
311: dup
312: aload         16
314: iconst_1
315: iconst_0
316: invokespecial #49
319: astore        20
321: aload         20
323: invokevirtual #50
326: astore        21
328: aload         15
330: aload         20
332: invokeinterface #169,  2
337: astore        22
339: aload         22
341: invokeinterface #170,  1
346: astore        23
348: aload         22
350: dconst_1
351: invokeinterface #171,  3
356: astore        24
358: aload         5
360: aload         22
362: invokevirtual #172
365: astore        25
367: aload         5
369: invokevirtual #173
372: astore        26
374: aload         5
376: invokevirtual #174
379: astore        27
381: new           #8
384: dup
385: dconst_0
386: invokespecial #9
389: astore        28
391: iconst_4
392: newarray       double
394: dup
395: iconst_0
396: ldc2_w        #10
399: dastore
400: dup
401: iconst_1
402: ldc2_w        #12
405: dastore
406: dup
407: iconst_2
408: ldc2_w        #12
411: dastore
412: dup
413: iconst_3
414: ldc2_w        #10
417: dastore
418: astore        29
420: bipush        6
422: newarray       double
424: dup
425: iconst_0
426: ldc2_w        #14
429: dastore
430: dup
431: iconst_1
432: ldc2_w        #14
435: dastore
436: dup
437: iconst_2
438: ldc2_w        #14
441: dastore
442: dup
443: iconst_3
444: dconst_0
445: dastore
446: dup
447: iconst_4
448: dconst_1
449: dastore
450: dup
451: iconst_5
452: ldc2_w        #10
455: dastore
456: astore        30
458: aload         29
460: aload         30
462: invokestatic  #16
465: dstore        31
467: new           #17
470: dup
471: aload         29
473: ldc2_w        #10
476: invokespecial #18
479: astore        33
481: aconst_null
482: astore        34
484: aload         33
486: aload         34
488: invokevirtual #19
491: istore        35
493: aload         33
495: ldc           #20
497: invokevirtual #19
500: istore        36
502: aload         28
504: aload         33
506: putfield      #21
509: iconst_4
510: newarray       double
512: dup
513: iconst_0
514: ldc2_w        #106
517: dastore
518: dup
519: iconst_1
520: ldc2_w        #108
523: dastore
524: dup
525: iconst_2
526: dconst_1
527: dastore
528: dup
529: iconst_3
530: dconst_0
531: dastore
532: astore        37
534: aload         33
536: aload         37
538: invokevirtual #110
541: dstore        38
543: aload         5
545: aload         37
547: invokevirtual #112
550: astore        40
552: new           #48
555: dup
556: aload         37
558: ldc           #175
560: bipush        97
562: invokespecial #49
565: astore        41
567: ldc           #96
569: invokestatic  #24
572: goto          617
575: astore        41
577: aload         41
579: invokevirtual #98
582: invokevirtual #99
585: ifne          617
588: new           #31
591: dup
592: invokespecial #32
595: ldc           #100
597: invokevirtual #34
600: aload         41
602: invokevirtual #98
605: invokevirtual #101
608: invokevirtual #34
611: invokevirtual #37
614: invokestatic  #24
617: aload_1
618: invokestatic  #26
621: aload_1
622: invokestatic  #27
625: ldc           #28
627: invokestatic  #29
630: aload_2
631: invokestatic  #26
634: aload_2
635: invokestatic  #27
638: ldc           #30
640: invokestatic  #29
643: new           #31
646: dup
647: invokespecial #32
650: ldc           #33
652: invokevirtual #34
655: dload_3
656: invokevirtual #35
659: ldc           #36
661: invokevirtual #34
664: ldc2_w        #10
667: invokevirtual #35
670: ldc           #33
672: invokevirtual #34
675: invokevirtual #37
678: dload_3
679: ldc2_w        #10
682: dcmpl
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #38
694: aload         6
696: invokestatic  #26
699: aload         7
701: invokestatic  #26
704: aload         8
706: invokestatic  #26
709: aload         9
711: invokestatic  #26
714: aload         9
716: invokestatic  #27
719: ldc           #28
721: invokestatic  #29
724: aload         10
726: invokestatic  #26
729: aload         10
731: invokestatic  #27
734: ldc           #30
736: invokestatic  #29
739: new           #31
742: dup
743: invokespecial #32
746: ldc           #33
748: invokevirtual #34
751: dload         11
753: invokevirtual #35
756: ldc           #36
758: invokevirtual #34
761: ldc2_w        #10
764: invokevirtual #35
767: ldc           #33
769: invokevirtual #34
772: invokevirtual #37
775: dload         11
777: ldc2_w        #10
780: dcmpl
781: ifne          788
784: iconst_1
785: goto          789
788: iconst_0
789: invokestatic  #38
792: aload         14
794: invokestatic  #26
797: aload         15
799: invokestatic  #26
802: aload         16
804: invokestatic  #26
807: aload         16
809: invokestatic  #27
812: ldc           #28
814: invokestatic  #29
817: aload         17
819: invokestatic  #26
822: aload         17
824: invokestatic  #27
827: ldc           #30
829: invokestatic  #29
832: new           #31
835: dup
836: invokespecial #32
839: ldc           #33
841: invokevirtual #34
844: dload         18
846: invokevirtual #35
849: ldc           #36
851: invokevirtual #34
854: ldc2_w        #10
857: invokevirtual #35
860: ldc           #33
862: invokevirtual #34
865: invokevirtual #37
868: dload         18
870: ldc2_w        #10
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #38
885: aload         21
887: invokestatic  #26
890: aload         22
892: invokestatic  #26
895: aload         23
897: invokestatic  #26
900: aload         24
902: invokestatic  #26
905: aload         25
907: invokestatic  #26
910: new           #31
913: dup
914: invokespecial #32
917: ldc           #33
919: invokevirtual #34
922: aload         26
924: invokevirtual #34
927: ldc           #177
929: invokevirtual #34
932: invokevirtual #37
935: aload         26
937: ldc           #178
939: invokestatic  #179
942: aload         27
944: invokestatic  #26
947: aload         29
949: invokestatic  #26
952: aload         29
954: invokestatic  #27
957: ldc           #28
959: invokestatic  #29
962: aload         30
964: invokestatic  #26
967: aload         30
969: invokestatic  #27
972: ldc           #30
974: invokestatic  #29
977: new           #31
980: dup
981: invokespecial #32
984: ldc           #33
986: invokevirtual #34
989: dload         31
991: invokevirtual #35
994: ldc           #36
996: invokevirtual #34
999: ldc2_w        #10
1002: invokevirtual #35
1005: ldc           #33
1007: invokevirtual #34
1010: invokevirtual #37
1013: dload         31
1015: ldc2_w        #10
1018: dcmpl
1019: ifne          1026
1022: iconst_1
1023: goto          1027
1026: iconst_0
1027: invokestatic  #38
1030: new           #31
1033: dup
1034: invokespecial #32
1037: ldc           #33
1039: invokevirtual #34
1042: iload         35
1044: invokevirtual #39
1047: ldc           #36
1049: invokevirtual #34
1052: iconst_0
1053: invokevirtual #39
1056: ldc           #33
1058: invokevirtual #34
1061: invokevirtual #37
1064: iload         35
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #38
1077: new           #31
1080: dup
1081: invokespecial #32
1084: ldc           #33
1086: invokevirtual #34
1089: iload         36
1091: invokevirtual #39
1094: ldc           #36
1096: invokevirtual #34
1099: iconst_0
1100: invokevirtual #39
1103: ldc           #33
1105: invokevirtual #34
1108: invokevirtual #37
1111: iload         36
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #38
1124: aload         37
1126: invokestatic  #26
1129: aload         37
1131: invokestatic  #27
1134: ldc           #116
1136: invokestatic  #29
1139: new           #31
1142: dup
1143: invokespecial #32
1146: ldc           #33
1148: invokevirtual #34
1151: dload         38
1153: invokevirtual #35
1156: ldc           #36
1158: invokevirtual #34
1161: ldc2_w        #117
1164: invokevirtual #35
1167: ldc           #33
1169: invokevirtual #34
1172: invokevirtual #37
1175: dload         38
1177: ldc2_w        #117
1180: dcmpl
1181: ifne          1188
1184: iconst_1
1185: goto          1189
1188: iconst_0
1189: invokestatic  #38
1192: aload         40
1194: invokestatic  #26
1197: return
Exception table:
from    to  target type
552   572   575   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 1245
End line: 1313
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector15.append(0.0d);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector15.mapDivide(2.6881171418161356E43d);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.mapRintToSelf();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector26 = arrayRealVector25.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver28 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray33 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray40 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double41 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray33, doubleArray40);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction43 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray33, 100.0d);
        java.lang.Object obj44 = null;
        boolean boolean45 = linearObjectiveFunction43.equals(obj44);
        boolean boolean47 = linearObjectiveFunction43.equals((java.lang.Object) "hi!");
        simplexSolver28.f = linearObjectiveFunction43;
        double[] doubleArray53 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double54 = linearObjectiveFunction43.getValue(doubleArray53);
        double[] doubleArray59 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray66 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double67 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray59, doubleArray66);
        boolean boolean68 = org.apache.commons.math.util.MathUtils.equals(doubleArray53, doubleArray59);
        org.apache.commons.math.linear.RealVector realVector69 = arrayRealVector25.append(doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double double70 = arrayRealVector15.getLInfDistance(doubleArray53);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2.194558835742002E15d + "'", double54 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(realVector69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #10
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #12
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #12
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #10
50: dastore
51: astore_1
52: bipush        6
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #14
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #14
67: dastore
68: dup
69: iconst_2
70: ldc2_w        #14
73: dastore
74: dup
75: iconst_3
76: dconst_0
77: dastore
78: dup
79: iconst_4
80: dconst_1
81: dastore
82: dup
83: iconst_5
84: ldc2_w        #10
87: dastore
88: astore_2
89: aload_1
90: aload_2
91: invokestatic  #16
94: dstore_3
95: new           #48
98: dup
99: aload_1
100: iconst_1
101: iconst_0
102: invokespecial #49
105: astore        5
107: aload         5
109: invokevirtual #50
112: astore        6
114: aload         5
116: invokevirtual #91
119: astore        7
121: aload         5
123: dconst_0
124: invokevirtual #168
127: astore        8
129: aload         5
131: ldc2_w        #181
134: invokevirtual #183
137: astore        9
139: aload         5
141: invokevirtual #184
144: astore        10
146: new           #48
149: dup
150: iconst_0
151: ldc2_w        #12
154: invokespecial #104
157: astore        11
159: aload         11
161: invokevirtual #105
164: astore        12
166: new           #8
169: dup
170: dconst_0
171: invokespecial #9
174: astore        13
176: iconst_4
177: newarray       double
179: dup
180: iconst_0
181: ldc2_w        #10
184: dastore
185: dup
186: iconst_1
187: ldc2_w        #12
190: dastore
191: dup
192: iconst_2
193: ldc2_w        #12
196: dastore
197: dup
198: iconst_3
199: ldc2_w        #10
202: dastore
203: astore        14
205: bipush        6
207: newarray       double
209: dup
210: iconst_0
211: ldc2_w        #14
214: dastore
215: dup
216: iconst_1
217: ldc2_w        #14
220: dastore
221: dup
222: iconst_2
223: ldc2_w        #14
226: dastore
227: dup
228: iconst_3
229: dconst_0
230: dastore
231: dup
232: iconst_4
233: dconst_1
234: dastore
235: dup
236: iconst_5
237: ldc2_w        #10
240: dastore
241: astore        15
243: aload         14
245: aload         15
247: invokestatic  #16
250: dstore        16
252: new           #17
255: dup
256: aload         14
258: ldc2_w        #10
261: invokespecial #18
264: astore        18
266: aconst_null
267: astore        19
269: aload         18
271: aload         19
273: invokevirtual #19
276: istore        20
278: aload         18
280: ldc           #20
282: invokevirtual #19
285: istore        21
287: aload         13
289: aload         18
291: putfield      #21
294: iconst_4
295: newarray       double
297: dup
298: iconst_0
299: ldc2_w        #106
302: dastore
303: dup
304: iconst_1
305: ldc2_w        #108
308: dastore
309: dup
310: iconst_2
311: dconst_1
312: dastore
313: dup
314: iconst_3
315: dconst_0
316: dastore
317: astore        22
319: aload         18
321: aload         22
323: invokevirtual #110
326: dstore        23
328: iconst_4
329: newarray       double
331: dup
332: iconst_0
333: ldc2_w        #10
336: dastore
337: dup
338: iconst_1
339: ldc2_w        #12
342: dastore
343: dup
344: iconst_2
345: ldc2_w        #12
348: dastore
349: dup
350: iconst_3
351: ldc2_w        #10
354: dastore
355: astore        25
357: bipush        6
359: newarray       double
361: dup
362: iconst_0
363: ldc2_w        #14
366: dastore
367: dup
368: iconst_1
369: ldc2_w        #14
372: dastore
373: dup
374: iconst_2
375: ldc2_w        #14
378: dastore
379: dup
380: iconst_3
381: dconst_0
382: dastore
383: dup
384: iconst_4
385: dconst_1
386: dastore
387: dup
388: iconst_5
389: ldc2_w        #10
392: dastore
393: astore        26
395: aload         25
397: aload         26
399: invokestatic  #16
402: dstore        27
404: aload         22
406: aload         25
408: invokestatic  #111
411: istore        29
413: aload         11
415: aload         22
417: invokevirtual #112
420: astore        30
422: aload         5
424: aload         22
426: invokevirtual #185
429: dstore        31
431: ldc           #96
433: invokestatic  #24
436: goto          481
439: astore        31
441: aload         31
443: invokevirtual #98
446: invokevirtual #99
449: ifne          481
452: new           #31
455: dup
456: invokespecial #32
459: ldc           #100
461: invokevirtual #34
464: aload         31
466: invokevirtual #98
469: invokevirtual #101
472: invokevirtual #34
475: invokevirtual #37
478: invokestatic  #24
481: aload_1
482: invokestatic  #26
485: aload_1
486: invokestatic  #27
489: ldc           #28
491: invokestatic  #29
494: aload_2
495: invokestatic  #26
498: aload_2
499: invokestatic  #27
502: ldc           #30
504: invokestatic  #29
507: new           #31
510: dup
511: invokespecial #32
514: ldc           #33
516: invokevirtual #34
519: dload_3
520: invokevirtual #35
523: ldc           #36
525: invokevirtual #34
528: ldc2_w        #10
531: invokevirtual #35
534: ldc           #33
536: invokevirtual #34
539: invokevirtual #37
542: dload_3
543: ldc2_w        #10
546: dcmpl
547: ifne          554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #38
558: aload         6
560: invokestatic  #26
563: aload         7
565: invokestatic  #26
568: aload         8
570: invokestatic  #26
573: aload         9
575: invokestatic  #26
578: aload         10
580: invokestatic  #26
583: aload         12
585: invokestatic  #26
588: aload         14
590: invokestatic  #26
593: aload         14
595: invokestatic  #27
598: ldc           #28
600: invokestatic  #29
603: aload         15
605: invokestatic  #26
608: aload         15
610: invokestatic  #27
613: ldc           #30
615: invokestatic  #29
618: new           #31
621: dup
622: invokespecial #32
625: ldc           #33
627: invokevirtual #34
630: dload         16
632: invokevirtual #35
635: ldc           #36
637: invokevirtual #34
640: ldc2_w        #10
643: invokevirtual #35
646: ldc           #33
648: invokevirtual #34
651: invokevirtual #37
654: dload         16
656: ldc2_w        #10
659: dcmpl
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #38
671: new           #31
674: dup
675: invokespecial #32
678: ldc           #33
680: invokevirtual #34
683: iload         20
685: invokevirtual #39
688: ldc           #36
690: invokevirtual #34
693: iconst_0
694: invokevirtual #39
697: ldc           #33
699: invokevirtual #34
702: invokevirtual #37
705: iload         20
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #38
718: new           #31
721: dup
722: invokespecial #32
725: ldc           #33
727: invokevirtual #34
730: iload         21
732: invokevirtual #39
735: ldc           #36
737: invokevirtual #34
740: iconst_0
741: invokevirtual #39
744: ldc           #33
746: invokevirtual #34
749: invokevirtual #37
752: iload         21
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #38
765: aload         22
767: invokestatic  #26
770: aload         22
772: invokestatic  #27
775: ldc           #116
777: invokestatic  #29
780: new           #31
783: dup
784: invokespecial #32
787: ldc           #33
789: invokevirtual #34
792: dload         23
794: invokevirtual #35
797: ldc           #36
799: invokevirtual #34
802: ldc2_w        #117
805: invokevirtual #35
808: ldc           #33
810: invokevirtual #34
813: invokevirtual #37
816: dload         23
818: ldc2_w        #117
821: dcmpl
822: ifne          829
825: iconst_1
826: goto          830
829: iconst_0
830: invokestatic  #38
833: aload         25
835: invokestatic  #26
838: aload         25
840: invokestatic  #27
843: ldc           #28
845: invokestatic  #29
848: aload         26
850: invokestatic  #26
853: aload         26
855: invokestatic  #27
858: ldc           #30
860: invokestatic  #29
863: new           #31
866: dup
867: invokespecial #32
870: ldc           #33
872: invokevirtual #34
875: dload         27
877: invokevirtual #35
880: ldc           #36
882: invokevirtual #34
885: ldc2_w        #10
888: invokevirtual #35
891: ldc           #33
893: invokevirtual #34
896: invokevirtual #37
899: dload         27
901: ldc2_w        #10
904: dcmpl
905: ifne          912
908: iconst_1
909: goto          913
912: iconst_0
913: invokestatic  #38
916: new           #31
919: dup
920: invokespecial #32
923: ldc           #33
925: invokevirtual #34
928: iload         29
930: invokevirtual #39
933: ldc           #36
935: invokevirtual #34
938: iconst_0
939: invokevirtual #39
942: ldc           #33
944: invokevirtual #34
947: invokevirtual #37
950: iload         29
952: ifne          959
955: iconst_1
956: goto          960
959: iconst_0
960: invokestatic  #38
963: aload         30
965: invokestatic  #26
968: return
Exception table:
from    to  target type
422   436   439   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 1316
End line: 1366
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix2 = new org.apache.commons.math.linear.Array2DRowRealMatrix((int) (byte) 100, 10);
        boolean boolean4 = array2DRowRealMatrix2.equals((java.lang.Object) 100.0f);
        boolean boolean5 = array2DRowRealMatrix2.isSquare();
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 100.0d };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray8);
        boolean boolean10 = array2DRowRealMatrix2.equals((java.lang.Object) doubleArray8);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray8);
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector11.mapExp();
        org.apache.commons.math.linear.RealVector realVector13 = arrayRealVector11.mapSinToSelf();
        org.apache.commons.math.linear.RealVector realVector14 = arrayRealVector11.mapLog1p();
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector11.mapSignumToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver18 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray23 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray30 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double31 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray23, doubleArray30);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction33 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray23, 100.0d);
        java.lang.Object obj34 = null;
        boolean boolean35 = linearObjectiveFunction33.equals(obj34);
        boolean boolean37 = linearObjectiveFunction33.equals((java.lang.Object) "hi!");
        simplexSolver18.f = linearObjectiveFunction33;
        double[] doubleArray43 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double44 = linearObjectiveFunction33.getValue(doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector11.setSubVector(1104152832, doubleArray43);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: index 1,104,152,832 out of allowed range [0, 1]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2.194558835742002E15d + "'", double44 == 2.194558835742002E15d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: new           #187
27: dup
28: bipush        100
30: bipush        10
32: invokespecial #188
35: astore_1
36: aload_1
37: ldc           #189
39: invokestatic  #190
42: invokevirtual #191
45: istore_2
46: aload_1
47: invokevirtual #192
50: istore_3
51: iconst_2
52: anewarray     #193
55: dup
56: iconst_0
57: ldc2_w        #12
60: invokestatic  #194
63: aastore
64: dup
65: iconst_1
66: ldc2_w        #10
69: invokestatic  #194
72: aastore
73: astore        4
75: new           #48
78: dup
79: aload         4
81: invokespecial #195
84: astore        5
86: aload_1
87: aload         4
89: invokevirtual #191
92: istore        6
94: new           #48
97: dup
98: aload         4
100: invokespecial #195
103: astore        7
105: aload         7
107: invokevirtual #196
110: astore        8
112: aload         7
114: invokevirtual #197
117: astore        9
119: aload         7
121: invokevirtual #198
124: astore        10
126: aload         7
128: invokevirtual #199
131: astore        11
133: new           #8
136: dup
137: dconst_0
138: invokespecial #9
141: astore        12
143: iconst_4
144: newarray       double
146: dup
147: iconst_0
148: ldc2_w        #10
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #12
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #12
163: dastore
164: dup
165: iconst_3
166: ldc2_w        #10
169: dastore
170: astore        13
172: bipush        6
174: newarray       double
176: dup
177: iconst_0
178: ldc2_w        #14
181: dastore
182: dup
183: iconst_1
184: ldc2_w        #14
187: dastore
188: dup
189: iconst_2
190: ldc2_w        #14
193: dastore
194: dup
195: iconst_3
196: dconst_0
197: dastore
198: dup
199: iconst_4
200: dconst_1
201: dastore
202: dup
203: iconst_5
204: ldc2_w        #10
207: dastore
208: astore        14
210: aload         13
212: aload         14
214: invokestatic  #16
217: dstore        15
219: new           #17
222: dup
223: aload         13
225: ldc2_w        #10
228: invokespecial #18
231: astore        17
233: aconst_null
234: astore        18
236: aload         17
238: aload         18
240: invokevirtual #19
243: istore        19
245: aload         17
247: ldc           #20
249: invokevirtual #19
252: istore        20
254: aload         12
256: aload         17
258: putfield      #21
261: iconst_4
262: newarray       double
264: dup
265: iconst_0
266: ldc2_w        #106
269: dastore
270: dup
271: iconst_1
272: ldc2_w        #108
275: dastore
276: dup
277: iconst_2
278: dconst_1
279: dastore
280: dup
281: iconst_3
282: dconst_0
283: dastore
284: astore        21
286: aload         17
288: aload         21
290: invokevirtual #110
293: dstore        22
295: aload         7
297: ldc           #79
299: aload         21
301: invokevirtual #200
304: ldc           #201
306: invokestatic  #24
309: goto          314
312: astore        24
314: new           #31
317: dup
318: invokespecial #32
321: ldc           #33
323: invokevirtual #34
326: iload_2
327: invokevirtual #39
330: ldc           #36
332: invokevirtual #34
335: iconst_0
336: invokevirtual #39
339: ldc           #33
341: invokevirtual #34
344: invokevirtual #37
347: iload_2
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #38
359: new           #31
362: dup
363: invokespecial #32
366: ldc           #33
368: invokevirtual #34
371: iload_3
372: invokevirtual #39
375: ldc           #36
377: invokevirtual #34
380: iconst_0
381: invokevirtual #39
384: ldc           #33
386: invokevirtual #34
389: invokevirtual #37
392: iload_3
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #38
404: aload         4
406: invokestatic  #26
409: new           #31
412: dup
413: invokespecial #32
416: ldc           #33
418: invokevirtual #34
421: iload         6
423: invokevirtual #39
426: ldc           #36
428: invokevirtual #34
431: iconst_0
432: invokevirtual #39
435: ldc           #33
437: invokevirtual #34
440: invokevirtual #37
443: iload         6
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #38
456: aload         8
458: invokestatic  #26
461: aload         9
463: invokestatic  #26
466: aload         10
468: invokestatic  #26
471: aload         11
473: invokestatic  #26
476: aload         13
478: invokestatic  #26
481: aload         13
483: invokestatic  #27
486: ldc           #28
488: invokestatic  #29
491: aload         14
493: invokestatic  #26
496: aload         14
498: invokestatic  #27
501: ldc           #30
503: invokestatic  #29
506: new           #31
509: dup
510: invokespecial #32
513: ldc           #33
515: invokevirtual #34
518: dload         15
520: invokevirtual #35
523: ldc           #36
525: invokevirtual #34
528: ldc2_w        #10
531: invokevirtual #35
534: ldc           #33
536: invokevirtual #34
539: invokevirtual #37
542: dload         15
544: ldc2_w        #10
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #38
559: new           #31
562: dup
563: invokespecial #32
566: ldc           #33
568: invokevirtual #34
571: iload         19
573: invokevirtual #39
576: ldc           #36
578: invokevirtual #34
581: iconst_0
582: invokevirtual #39
585: ldc           #33
587: invokevirtual #34
590: invokevirtual #37
593: iload         19
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #38
606: new           #31
609: dup
610: invokespecial #32
613: ldc           #33
615: invokevirtual #34
618: iload         20
620: invokevirtual #39
623: ldc           #36
625: invokevirtual #34
628: iconst_0
629: invokevirtual #39
632: ldc           #33
634: invokevirtual #34
637: invokevirtual #37
640: iload         20
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #38
653: aload         21
655: invokestatic  #26
658: aload         21
660: invokestatic  #27
663: ldc           #116
665: invokestatic  #29
668: new           #31
671: dup
672: invokespecial #32
675: ldc           #33
677: invokevirtual #34
680: dload         22
682: invokevirtual #35
685: ldc           #36
687: invokevirtual #34
690: ldc2_w        #117
693: invokevirtual #35
696: ldc           #33
698: invokevirtual #34
701: invokevirtual #37
704: dload         22
706: ldc2_w        #117
709: dcmpl
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #38
721: return
Exception table:
from    to  target type
295   309   312   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 1369
End line: 1391
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        double double8 = simplexSolver1.epsilon;
        int int9 = simplexSolver1.getMaxIterations();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = simplexSolver1.isOptimal(simplexTableau10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #202
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: getfield      #75
58: dstore        4
60: aload_1
61: invokevirtual #65
64: istore        6
66: aconst_null
67: astore        7
69: aload_1
70: aload         7
72: invokevirtual #42
75: istore        8
77: ldc           #23
79: invokestatic  #24
82: goto          87
85: astore        8
87: new           #31
90: dup
91: invokespecial #32
94: ldc           #33
96: invokevirtual #34
99: iload_2
100: invokevirtual #66
103: ldc           #36
105: invokevirtual #34
108: iconst_0
109: invokevirtual #66
112: ldc           #33
114: invokevirtual #34
117: invokevirtual #37
120: iload_2
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #38
132: aload_3
133: invokestatic  #69
136: new           #31
139: dup
140: invokespecial #32
143: ldc           #33
145: invokevirtual #34
148: dload         4
150: invokevirtual #35
153: ldc           #36
155: invokevirtual #34
158: dconst_0
159: invokevirtual #35
162: ldc           #33
164: invokevirtual #34
167: invokevirtual #37
170: dload         4
172: dconst_0
173: dcmpl
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #38
185: new           #31
188: dup
189: invokespecial #32
192: ldc           #33
194: invokevirtual #34
197: iload         6
199: invokevirtual #66
202: ldc           #36
204: invokevirtual #34
207: bipush        97
209: invokevirtual #66
212: ldc           #33
214: invokevirtual #34
217: invokevirtual #37
220: iload         6
222: bipush        97
224: if_icmpne     231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #38
235: return
Exception table:
from    to  target type
69    82    85   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 1394
End line: 1447
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math.linear.ArrayRealVector();
        org.apache.commons.math.linear.RealVector realVector1 = arrayRealVector0.mapTanToSelf();
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray6, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector17.mapAddToSelf((double) '#');
        org.apache.commons.math.linear.RealVector realVector20 = arrayRealVector17.mapExpToSelf();
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector0.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector17);
        double[] doubleArray26 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray33 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double34 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray26, doubleArray33);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector37.mapAtan();
        org.apache.commons.math.linear.RealVector realVector39 = arrayRealVector37.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector37.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver41 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType42 = simplexSolver41.goalType;
        boolean boolean43 = arrayRealVector37.equals((java.lang.Object) goalType42);
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector37.mapCbrt();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix45 = arrayRealVector17.outerProduct(arrayRealVector37);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(realVector1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 100.0d + "'", double34 == 100.0d);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNull(goalType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(realVector44);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #203
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: invokespecial #204
31: astore_1
32: aload_1
33: invokevirtual #205
36: astore_2
37: iconst_4
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #10
45: dastore
46: dup
47: iconst_1
48: ldc2_w        #12
51: dastore
52: dup
53: iconst_2
54: ldc2_w        #12
57: dastore
58: dup
59: iconst_3
60: ldc2_w        #10
63: dastore
64: astore_3
65: bipush        6
67: newarray       double
69: dup
70: iconst_0
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_1
77: ldc2_w        #14
80: dastore
81: dup
82: iconst_2
83: ldc2_w        #14
86: dastore
87: dup
88: iconst_3
89: dconst_0
90: dastore
91: dup
92: iconst_4
93: dconst_1
94: dastore
95: dup
96: iconst_5
97: ldc2_w        #10
100: dastore
101: astore        4
103: aload_3
104: aload         4
106: invokestatic  #16
109: dstore        5
111: new           #48
114: dup
115: aload_3
116: iconst_1
117: iconst_0
118: invokespecial #49
121: astore        7
123: aload         7
125: ldc2_w        #206
128: invokevirtual #208
131: astore        8
133: aload         7
135: invokevirtual #209
138: astore        9
140: aload_1
141: aload         7
143: invokevirtual #172
146: astore        10
148: iconst_4
149: newarray       double
151: dup
152: iconst_0
153: ldc2_w        #10
156: dastore
157: dup
158: iconst_1
159: ldc2_w        #12
162: dastore
163: dup
164: iconst_2
165: ldc2_w        #12
168: dastore
169: dup
170: iconst_3
171: ldc2_w        #10
174: dastore
175: astore        11
177: bipush        6
179: newarray       double
181: dup
182: iconst_0
183: ldc2_w        #14
186: dastore
187: dup
188: iconst_1
189: ldc2_w        #14
192: dastore
193: dup
194: iconst_2
195: ldc2_w        #14
198: dastore
199: dup
200: iconst_3
201: dconst_0
202: dastore
203: dup
204: iconst_4
205: dconst_1
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #10
212: dastore
213: astore        12
215: aload         11
217: aload         12
219: invokestatic  #16
222: dstore        13
224: new           #48
227: dup
228: aload         11
230: iconst_1
231: iconst_0
232: invokespecial #49
235: astore        15
237: aload         15
239: invokevirtual #50
242: astore        16
244: aload         15
246: invokevirtual #91
249: astore        17
251: aload         15
253: invokevirtual #92
256: astore        18
258: new           #8
261: dup
262: invokespecial #41
265: astore        19
267: aload         19
269: getfield      #68
272: astore        20
274: aload         15
276: aload         20
278: invokevirtual #93
281: istore        21
283: aload         15
285: invokevirtual #122
288: astore        22
290: aload         7
292: aload         15
294: invokevirtual #210
297: astore        23
299: ldc           #96
301: invokestatic  #24
304: goto          349
307: astore        23
309: aload         23
311: invokevirtual #98
314: invokevirtual #99
317: ifne          349
320: new           #31
323: dup
324: invokespecial #32
327: ldc           #100
329: invokevirtual #34
332: aload         23
334: invokevirtual #98
337: invokevirtual #101
340: invokevirtual #34
343: invokevirtual #37
346: invokestatic  #24
349: aload_2
350: invokestatic  #26
353: aload_3
354: invokestatic  #26
357: aload_3
358: invokestatic  #27
361: ldc           #28
363: invokestatic  #29
366: aload         4
368: invokestatic  #26
371: aload         4
373: invokestatic  #27
376: ldc           #30
378: invokestatic  #29
381: new           #31
384: dup
385: invokespecial #32
388: ldc           #33
390: invokevirtual #34
393: dload         5
395: invokevirtual #35
398: ldc           #36
400: invokevirtual #34
403: ldc2_w        #10
406: invokevirtual #35
409: ldc           #33
411: invokevirtual #34
414: invokevirtual #37
417: dload         5
419: ldc2_w        #10
422: dcmpl
423: ifne          430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #38
434: aload         8
436: invokestatic  #26
439: aload         9
441: invokestatic  #26
444: aload         10
446: invokestatic  #26
449: aload         11
451: invokestatic  #26
454: aload         11
456: invokestatic  #27
459: ldc           #28
461: invokestatic  #29
464: aload         12
466: invokestatic  #26
469: aload         12
471: invokestatic  #27
474: ldc           #30
476: invokestatic  #29
479: new           #31
482: dup
483: invokespecial #32
486: ldc           #33
488: invokevirtual #34
491: dload         13
493: invokevirtual #35
496: ldc           #36
498: invokevirtual #34
501: ldc2_w        #10
504: invokevirtual #35
507: ldc           #33
509: invokevirtual #34
512: invokevirtual #37
515: dload         13
517: ldc2_w        #10
520: dcmpl
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #38
532: aload         16
534: invokestatic  #26
537: aload         17
539: invokestatic  #26
542: aload         18
544: invokestatic  #26
547: aload         20
549: invokestatic  #69
552: new           #31
555: dup
556: invokespecial #32
559: ldc           #33
561: invokevirtual #34
564: iload         21
566: invokevirtual #39
569: ldc           #36
571: invokevirtual #34
574: iconst_0
575: invokevirtual #39
578: ldc           #33
580: invokevirtual #34
583: invokevirtual #37
586: iload         21
588: ifne          595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #38
599: aload         22
601: invokestatic  #26
604: return
Exception table:
from    to  target type
290   304   307   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 1450
End line: 1544
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        int int4 = simplexSolver0.getMaxIterations();
        int int5 = simplexSolver0.getIterations();
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        simplexSolver0.f = linearObjectiveFunction20;
        double[] doubleArray28 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray35 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double36 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray28, doubleArray35);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray28, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector39.mapAtan();
        org.apache.commons.math.linear.RealVector realVector41 = arrayRealVector39.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector43 = arrayRealVector39.append(0.0d);
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector39.mapSqrt();
        double double45 = arrayRealVector39.getNorm();
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector39.mapCeil();
        double[] doubleArray51 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray58 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double59 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray51, doubleArray58);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray51, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector63 = arrayRealVector62.mapAtan();
        org.apache.commons.math.linear.RealVector realVector64 = arrayRealVector62.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector65 = arrayRealVector62.mapAcosToSelf();
        double[] doubleArray70 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray77 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double78 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray70, doubleArray77);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray70, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector82 = arrayRealVector81.mapAtan();
        org.apache.commons.math.linear.RealVector realVector83 = arrayRealVector81.mapInvToSelf();
        org.apache.commons.math.linear.RealVector realVector85 = realVector83.append((double) ' ');
        org.apache.commons.math.linear.RealVector realVector86 = arrayRealVector62.projection(realVector83);
        org.apache.commons.math.linear.RealVector realVector87 = arrayRealVector62.mapAtan();
        double[] doubleArray88 = realVector87.getData();
        org.apache.commons.math.linear.RealVector realVector89 = realVector46.append(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double90 = linearObjectiveFunction20.getValue(doubleArray88);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-50) + "'", int4 == (-50));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertNotNull(realVector64);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        org.junit.Assert.assertNotNull(realVector82);
        org.junit.Assert.assertNotNull(realVector83);
        org.junit.Assert.assertNotNull(realVector85);
        org.junit.Assert.assertNotNull(realVector86);
        org.junit.Assert.assertNotNull(realVector87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertNotNull(realVector89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #211
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: invokevirtual #65
47: istore_3
48: aload_1
49: invokevirtual #78
52: istore        4
54: iconst_4
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #10
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #12
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #12
74: dastore
75: dup
76: iconst_3
77: ldc2_w        #10
80: dastore
81: astore        5
83: bipush        6
85: newarray       double
87: dup
88: iconst_0
89: ldc2_w        #14
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #14
98: dastore
99: dup
100: iconst_2
101: ldc2_w        #14
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #10
118: dastore
119: astore        6
121: aload         5
123: aload         6
125: invokestatic  #16
128: dstore        7
130: new           #17
133: dup
134: aload         5
136: ldc2_w        #10
139: invokespecial #18
142: astore        9
144: aconst_null
145: astore        10
147: aload         9
149: aload         10
151: invokevirtual #19
154: istore        11
156: aload_1
157: aload         9
159: putfield      #21
162: iconst_4
163: newarray       double
165: dup
166: iconst_0
167: ldc2_w        #10
170: dastore
171: dup
172: iconst_1
173: ldc2_w        #12
176: dastore
177: dup
178: iconst_2
179: ldc2_w        #12
182: dastore
183: dup
184: iconst_3
185: ldc2_w        #10
188: dastore
189: astore        12
191: bipush        6
193: newarray       double
195: dup
196: iconst_0
197: ldc2_w        #14
200: dastore
201: dup
202: iconst_1
203: ldc2_w        #14
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #14
212: dastore
213: dup
214: iconst_3
215: dconst_0
216: dastore
217: dup
218: iconst_4
219: dconst_1
220: dastore
221: dup
222: iconst_5
223: ldc2_w        #10
226: dastore
227: astore        13
229: aload         12
231: aload         13
233: invokestatic  #16
236: dstore        14
238: new           #48
241: dup
242: aload         12
244: iconst_1
245: iconst_0
246: invokespecial #49
249: astore        16
251: aload         16
253: invokevirtual #50
256: astore        17
258: aload         16
260: invokevirtual #91
263: astore        18
265: aload         16
267: dconst_0
268: invokevirtual #168
271: astore        19
273: aload         16
275: invokevirtual #212
278: astore        20
280: aload         16
282: invokevirtual #213
285: dstore        21
287: aload         16
289: invokevirtual #214
292: astore        23
294: iconst_4
295: newarray       double
297: dup
298: iconst_0
299: ldc2_w        #10
302: dastore
303: dup
304: iconst_1
305: ldc2_w        #12
308: dastore
309: dup
310: iconst_2
311: ldc2_w        #12
314: dastore
315: dup
316: iconst_3
317: ldc2_w        #10
320: dastore
321: astore        24
323: bipush        6
325: newarray       double
327: dup
328: iconst_0
329: ldc2_w        #14
332: dastore
333: dup
334: iconst_1
335: ldc2_w        #14
338: dastore
339: dup
340: iconst_2
341: ldc2_w        #14
344: dastore
345: dup
346: iconst_3
347: dconst_0
348: dastore
349: dup
350: iconst_4
351: dconst_1
352: dastore
353: dup
354: iconst_5
355: ldc2_w        #10
358: dastore
359: astore        25
361: aload         24
363: aload         25
365: invokestatic  #16
368: dstore        26
370: new           #48
373: dup
374: aload         24
376: iconst_1
377: iconst_0
378: invokespecial #49
381: astore        28
383: aload         28
385: invokevirtual #50
388: astore        29
390: aload         28
392: invokevirtual #91
395: astore        30
397: aload         28
399: invokevirtual #92
402: astore        31
404: iconst_4
405: newarray       double
407: dup
408: iconst_0
409: ldc2_w        #10
412: dastore
413: dup
414: iconst_1
415: ldc2_w        #12
418: dastore
419: dup
420: iconst_2
421: ldc2_w        #12
424: dastore
425: dup
426: iconst_3
427: ldc2_w        #10
430: dastore
431: astore        32
433: bipush        6
435: newarray       double
437: dup
438: iconst_0
439: ldc2_w        #14
442: dastore
443: dup
444: iconst_1
445: ldc2_w        #14
448: dastore
449: dup
450: iconst_2
451: ldc2_w        #14
454: dastore
455: dup
456: iconst_3
457: dconst_0
458: dastore
459: dup
460: iconst_4
461: dconst_1
462: dastore
463: dup
464: iconst_5
465: ldc2_w        #10
468: dastore
469: astore        33
471: aload         32
473: aload         33
475: invokestatic  #16
478: dstore        34
480: new           #48
483: dup
484: aload         32
486: iconst_1
487: iconst_0
488: invokespecial #49
491: astore        36
493: aload         36
495: invokevirtual #50
498: astore        37
500: aload         36
502: invokevirtual #128
505: astore        38
507: aload         38
509: ldc2_w        #129
512: invokeinterface #131,  3
517: astore        39
519: aload         28
521: aload         38
523: invokevirtual #132
526: astore        40
528: aload         28
530: invokevirtual #50
533: astore        41
535: aload         41
537: invokeinterface #133,  1
542: astore        42
544: aload         23
546: aload         42
548: invokeinterface #215,  2
553: astore        43
555: aload         9
557: aload         42
559: invokevirtual #110
562: dstore        44
564: ldc           #96
566: invokestatic  #24
569: goto          614
572: astore        44
574: aload         44
576: invokevirtual #98
579: invokevirtual #99
582: ifne          614
585: new           #31
588: dup
589: invokespecial #32
592: ldc           #100
594: invokevirtual #34
597: aload         44
599: invokevirtual #98
602: invokevirtual #101
605: invokevirtual #34
608: invokevirtual #37
611: invokestatic  #24
614: aload_2
615: invokestatic  #69
618: new           #31
621: dup
622: invokespecial #32
625: ldc           #33
627: invokevirtual #34
630: iload_3
631: invokevirtual #66
634: ldc           #36
636: invokevirtual #34
639: bipush        -50
641: invokevirtual #66
644: ldc           #33
646: invokevirtual #34
649: invokevirtual #37
652: iload_3
653: bipush        -50
655: if_icmpne     662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #38
666: new           #31
669: dup
670: invokespecial #32
673: ldc           #33
675: invokevirtual #34
678: iload         4
680: invokevirtual #66
683: ldc           #36
685: invokevirtual #34
688: iconst_0
689: invokevirtual #66
692: ldc           #33
694: invokevirtual #34
697: invokevirtual #37
700: iload         4
702: ifne          709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #38
713: aload         5
715: invokestatic  #26
718: aload         5
720: invokestatic  #27
723: ldc           #28
725: invokestatic  #29
728: aload         6
730: invokestatic  #26
733: aload         6
735: invokestatic  #27
738: ldc           #30
740: invokestatic  #29
743: new           #31
746: dup
747: invokespecial #32
750: ldc           #33
752: invokevirtual #34
755: dload         7
757: invokevirtual #35
760: ldc           #36
762: invokevirtual #34
765: ldc2_w        #10
768: invokevirtual #35
771: ldc           #33
773: invokevirtual #34
776: invokevirtual #37
779: dload         7
781: ldc2_w        #10
784: dcmpl
785: ifne          792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #38
796: new           #31
799: dup
800: invokespecial #32
803: ldc           #33
805: invokevirtual #34
808: iload         11
810: invokevirtual #39
813: ldc           #36
815: invokevirtual #34
818: iconst_0
819: invokevirtual #39
822: ldc           #33
824: invokevirtual #34
827: invokevirtual #37
830: iload         11
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #38
843: aload         12
845: invokestatic  #26
848: aload         12
850: invokestatic  #27
853: ldc           #28
855: invokestatic  #29
858: aload         13
860: invokestatic  #26
863: aload         13
865: invokestatic  #27
868: ldc           #30
870: invokestatic  #29
873: new           #31
876: dup
877: invokespecial #32
880: ldc           #33
882: invokevirtual #34
885: dload         14
887: invokevirtual #35
890: ldc           #36
892: invokevirtual #34
895: ldc2_w        #10
898: invokevirtual #35
901: ldc           #33
903: invokevirtual #34
906: invokevirtual #37
909: dload         14
911: ldc2_w        #10
914: dcmpl
915: ifne          922
918: iconst_1
919: goto          923
922: iconst_0
923: invokestatic  #38
926: aload         17
928: invokestatic  #26
931: aload         18
933: invokestatic  #26
936: aload         19
938: invokestatic  #26
941: aload         20
943: invokestatic  #26
946: new           #31
949: dup
950: invokespecial #32
953: ldc           #33
955: invokevirtual #34
958: dload         21
960: invokevirtual #35
963: ldc           #36
965: invokevirtual #34
968: dconst_0
969: invokevirtual #35
972: ldc           #33
974: invokevirtual #34
977: invokevirtual #37
980: dload         21
982: dconst_0
983: dcmpl
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #38
995: aload         23
997: invokestatic  #26
1000: aload         24
1002: invokestatic  #26
1005: aload         24
1007: invokestatic  #27
1010: ldc           #28
1012: invokestatic  #29
1015: aload         25
1017: invokestatic  #26
1020: aload         25
1022: invokestatic  #27
1025: ldc           #30
1027: invokestatic  #29
1030: new           #31
1033: dup
1034: invokespecial #32
1037: ldc           #33
1039: invokevirtual #34
1042: dload         26
1044: invokevirtual #35
1047: ldc           #36
1049: invokevirtual #34
1052: ldc2_w        #10
1055: invokevirtual #35
1058: ldc           #33
1060: invokevirtual #34
1063: invokevirtual #37
1066: dload         26
1068: ldc2_w        #10
1071: dcmpl
1072: ifne          1079
1075: iconst_1
1076: goto          1080
1079: iconst_0
1080: invokestatic  #38
1083: aload         29
1085: invokestatic  #26
1088: aload         30
1090: invokestatic  #26
1093: aload         31
1095: invokestatic  #26
1098: aload         32
1100: invokestatic  #26
1103: aload         32
1105: invokestatic  #27
1108: ldc           #28
1110: invokestatic  #29
1113: aload         33
1115: invokestatic  #26
1118: aload         33
1120: invokestatic  #27
1123: ldc           #30
1125: invokestatic  #29
1128: new           #31
1131: dup
1132: invokespecial #32
1135: ldc           #33
1137: invokevirtual #34
1140: dload         34
1142: invokevirtual #35
1145: ldc           #36
1147: invokevirtual #34
1150: ldc2_w        #10
1153: invokevirtual #35
1156: ldc           #33
1158: invokevirtual #34
1161: invokevirtual #37
1164: dload         34
1166: ldc2_w        #10
1169: dcmpl
1170: ifne          1177
1173: iconst_1
1174: goto          1178
1177: iconst_0
1178: invokestatic  #38
1181: aload         37
1183: invokestatic  #26
1186: aload         38
1188: invokestatic  #26
1191: aload         39
1193: invokestatic  #26
1196: aload         40
1198: invokestatic  #26
1201: aload         41
1203: invokestatic  #26
1206: aload         42
1208: invokestatic  #26
1211: aload         42
1213: invokestatic  #27
1216: ldc           #139
1218: invokestatic  #29
1221: aload         43
1223: invokestatic  #26
1226: return
Exception table:
from    to  target type
555   569   572   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 1547
End line: 1628
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.linear.RealVector realVector22 = linearObjectiveFunction16.getCoefficients();
        double[] doubleArray27 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray34 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double35 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray27, doubleArray34);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray27, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapAddToSelf((double) '#');
        double[] doubleArray45 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray52 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double53 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray45, doubleArray52);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray45, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector57 = arrayRealVector56.mapAtan();
        org.apache.commons.math.linear.RealVector realVector58 = arrayRealVector56.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector56.mapAcosToSelf();
        double[] doubleArray64 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray71 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double72 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray64, doubleArray71);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray64, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector76 = arrayRealVector75.mapAtan();
        org.apache.commons.math.linear.RealVector realVector77 = arrayRealVector75.mapInvToSelf();
        org.apache.commons.math.linear.RealVector realVector79 = realVector77.append((double) ' ');
        org.apache.commons.math.linear.RealVector realVector80 = arrayRealVector56.projection(realVector77);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector38, arrayRealVector56);
        org.apache.commons.math.linear.RealVector realVector82 = arrayRealVector81.mapCoshToSelf();
        double[] doubleArray83 = arrayRealVector81.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector84 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double double85 = linearObjectiveFunction16.getValue(doubleArray83);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertNotNull(realVector58);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 100.0d + "'", double72 == 100.0d);
        org.junit.Assert.assertNotNull(realVector76);
        org.junit.Assert.assertNotNull(realVector77);
        org.junit.Assert.assertNotNull(realVector79);
        org.junit.Assert.assertNotNull(realVector80);
        org.junit.Assert.assertNotNull(realVector82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload         6
147: invokevirtual #149
150: astore        10
152: iconst_4
153: newarray       double
155: dup
156: iconst_0
157: ldc2_w        #10
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #12
166: dastore
167: dup
168: iconst_2
169: ldc2_w        #12
172: dastore
173: dup
174: iconst_3
175: ldc2_w        #10
178: dastore
179: astore        11
181: bipush        6
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #14
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #14
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #14
202: dastore
203: dup
204: iconst_3
205: dconst_0
206: dastore
207: dup
208: iconst_4
209: dconst_1
210: dastore
211: dup
212: iconst_5
213: ldc2_w        #10
216: dastore
217: astore        12
219: aload         11
221: aload         12
223: invokestatic  #16
226: dstore        13
228: new           #48
231: dup
232: aload         11
234: iconst_1
235: iconst_0
236: invokespecial #49
239: astore        15
241: aload         15
243: ldc2_w        #206
246: invokevirtual #208
249: astore        16
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: ldc2_w        #10
259: dastore
260: dup
261: iconst_1
262: ldc2_w        #12
265: dastore
266: dup
267: iconst_2
268: ldc2_w        #12
271: dastore
272: dup
273: iconst_3
274: ldc2_w        #10
277: dastore
278: astore        17
280: bipush        6
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #14
289: dastore
290: dup
291: iconst_1
292: ldc2_w        #14
295: dastore
296: dup
297: iconst_2
298: ldc2_w        #14
301: dastore
302: dup
303: iconst_3
304: dconst_0
305: dastore
306: dup
307: iconst_4
308: dconst_1
309: dastore
310: dup
311: iconst_5
312: ldc2_w        #10
315: dastore
316: astore        18
318: aload         17
320: aload         18
322: invokestatic  #16
325: dstore        19
327: new           #48
330: dup
331: aload         17
333: iconst_1
334: iconst_0
335: invokespecial #49
338: astore        21
340: aload         21
342: invokevirtual #50
345: astore        22
347: aload         21
349: invokevirtual #91
352: astore        23
354: aload         21
356: invokevirtual #92
359: astore        24
361: iconst_4
362: newarray       double
364: dup
365: iconst_0
366: ldc2_w        #10
369: dastore
370: dup
371: iconst_1
372: ldc2_w        #12
375: dastore
376: dup
377: iconst_2
378: ldc2_w        #12
381: dastore
382: dup
383: iconst_3
384: ldc2_w        #10
387: dastore
388: astore        25
390: bipush        6
392: newarray       double
394: dup
395: iconst_0
396: ldc2_w        #14
399: dastore
400: dup
401: iconst_1
402: ldc2_w        #14
405: dastore
406: dup
407: iconst_2
408: ldc2_w        #14
411: dastore
412: dup
413: iconst_3
414: dconst_0
415: dastore
416: dup
417: iconst_4
418: dconst_1
419: dastore
420: dup
421: iconst_5
422: ldc2_w        #10
425: dastore
426: astore        26
428: aload         25
430: aload         26
432: invokestatic  #16
435: dstore        27
437: new           #48
440: dup
441: aload         25
443: iconst_1
444: iconst_0
445: invokespecial #49
448: astore        29
450: aload         29
452: invokevirtual #50
455: astore        30
457: aload         29
459: invokevirtual #128
462: astore        31
464: aload         31
466: ldc2_w        #129
469: invokeinterface #131,  3
474: astore        32
476: aload         21
478: aload         31
480: invokevirtual #132
483: astore        33
485: new           #48
488: dup
489: aload         15
491: aload         21
493: invokespecial #217
496: astore        34
498: aload         34
500: invokevirtual #218
503: astore        35
505: aload         34
507: invokevirtual #219
510: astore        36
512: new           #48
515: dup
516: aload         36
518: invokespecial #220
521: astore        37
523: aload         6
525: aload         36
527: invokevirtual #110
530: dstore        38
532: ldc           #96
534: invokestatic  #24
537: goto          582
540: astore        38
542: aload         38
544: invokevirtual #98
547: invokevirtual #99
550: ifne          582
553: new           #31
556: dup
557: invokespecial #32
560: ldc           #100
562: invokevirtual #34
565: aload         38
567: invokevirtual #98
570: invokevirtual #101
573: invokevirtual #34
576: invokevirtual #37
579: invokestatic  #24
582: aload_2
583: invokestatic  #26
586: aload_2
587: invokestatic  #27
590: ldc           #28
592: invokestatic  #29
595: aload_3
596: invokestatic  #26
599: aload_3
600: invokestatic  #27
603: ldc           #30
605: invokestatic  #29
608: new           #31
611: dup
612: invokespecial #32
615: ldc           #33
617: invokevirtual #34
620: dload         4
622: invokevirtual #35
625: ldc           #36
627: invokevirtual #34
630: ldc2_w        #10
633: invokevirtual #35
636: ldc           #33
638: invokevirtual #34
641: invokevirtual #37
644: dload         4
646: ldc2_w        #10
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #38
661: new           #31
664: dup
665: invokespecial #32
668: ldc           #33
670: invokevirtual #34
673: iload         8
675: invokevirtual #39
678: ldc           #36
680: invokevirtual #34
683: iconst_0
684: invokevirtual #39
687: ldc           #33
689: invokevirtual #34
692: invokevirtual #37
695: iload         8
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #38
708: new           #31
711: dup
712: invokespecial #32
715: ldc           #33
717: invokevirtual #34
720: iload         9
722: invokevirtual #39
725: ldc           #36
727: invokevirtual #34
730: iconst_0
731: invokevirtual #39
734: ldc           #33
736: invokevirtual #34
739: invokevirtual #37
742: iload         9
744: ifne          751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #38
755: aload         10
757: invokestatic  #26
760: aload         11
762: invokestatic  #26
765: aload         11
767: invokestatic  #27
770: ldc           #28
772: invokestatic  #29
775: aload         12
777: invokestatic  #26
780: aload         12
782: invokestatic  #27
785: ldc           #30
787: invokestatic  #29
790: new           #31
793: dup
794: invokespecial #32
797: ldc           #33
799: invokevirtual #34
802: dload         13
804: invokevirtual #35
807: ldc           #36
809: invokevirtual #34
812: ldc2_w        #10
815: invokevirtual #35
818: ldc           #33
820: invokevirtual #34
823: invokevirtual #37
826: dload         13
828: ldc2_w        #10
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #38
843: aload         16
845: invokestatic  #26
848: aload         17
850: invokestatic  #26
853: aload         17
855: invokestatic  #27
858: ldc           #28
860: invokestatic  #29
863: aload         18
865: invokestatic  #26
868: aload         18
870: invokestatic  #27
873: ldc           #30
875: invokestatic  #29
878: new           #31
881: dup
882: invokespecial #32
885: ldc           #33
887: invokevirtual #34
890: dload         19
892: invokevirtual #35
895: ldc           #36
897: invokevirtual #34
900: ldc2_w        #10
903: invokevirtual #35
906: ldc           #33
908: invokevirtual #34
911: invokevirtual #37
914: dload         19
916: ldc2_w        #10
919: dcmpl
920: ifne          927
923: iconst_1
924: goto          928
927: iconst_0
928: invokestatic  #38
931: aload         22
933: invokestatic  #26
936: aload         23
938: invokestatic  #26
941: aload         24
943: invokestatic  #26
946: aload         25
948: invokestatic  #26
951: aload         25
953: invokestatic  #27
956: ldc           #28
958: invokestatic  #29
961: aload         26
963: invokestatic  #26
966: aload         26
968: invokestatic  #27
971: ldc           #30
973: invokestatic  #29
976: new           #31
979: dup
980: invokespecial #32
983: ldc           #33
985: invokevirtual #34
988: dload         27
990: invokevirtual #35
993: ldc           #36
995: invokevirtual #34
998: ldc2_w        #10
1001: invokevirtual #35
1004: ldc           #33
1006: invokevirtual #34
1009: invokevirtual #37
1012: dload         27
1014: ldc2_w        #10
1017: dcmpl
1018: ifne          1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #38
1029: aload         30
1031: invokestatic  #26
1034: aload         31
1036: invokestatic  #26
1039: aload         32
1041: invokestatic  #26
1044: aload         33
1046: invokestatic  #26
1049: aload         35
1051: invokestatic  #26
1054: aload         36
1056: invokestatic  #26
1059: aload         36
1061: invokestatic  #27
1064: ldc           #139
1066: invokestatic  #29
1069: return
Exception table:
from    to  target type
523   537   540   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 1631
End line: 1637
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(10.0d);
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection2 = simplexSolver1.constraints;
        org.junit.Assert.assertNull(linearConstraintCollection2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #221
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aload_1
36: getfield      #154
39: astore_2
40: aload_2
41: invokestatic  #69
44: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 1640
End line: 1663
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        int int22 = simplexSolver1.getMaxIterations();
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection23 = simplexSolver1.constraints;
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNull(linearConstraintCollection23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #222
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload_1
146: invokevirtual #65
149: istore        10
151: aload_1
152: getfield      #154
155: astore        11
157: aload_2
158: invokestatic  #26
161: aload_2
162: invokestatic  #27
165: ldc           #28
167: invokestatic  #29
170: aload_3
171: invokestatic  #26
174: aload_3
175: invokestatic  #27
178: ldc           #30
180: invokestatic  #29
183: new           #31
186: dup
187: invokespecial #32
190: ldc           #33
192: invokevirtual #34
195: dload         4
197: invokevirtual #35
200: ldc           #36
202: invokevirtual #34
205: ldc2_w        #10
208: invokevirtual #35
211: ldc           #33
213: invokevirtual #34
216: invokevirtual #37
219: dload         4
221: ldc2_w        #10
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #38
236: new           #31
239: dup
240: invokespecial #32
243: ldc           #33
245: invokevirtual #34
248: iload         8
250: invokevirtual #39
253: ldc           #36
255: invokevirtual #34
258: iconst_0
259: invokevirtual #39
262: ldc           #33
264: invokevirtual #34
267: invokevirtual #37
270: iload         8
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #38
283: new           #31
286: dup
287: invokespecial #32
290: ldc           #33
292: invokevirtual #34
295: iload         9
297: invokevirtual #39
300: ldc           #36
302: invokevirtual #34
305: iconst_0
306: invokevirtual #39
309: ldc           #33
311: invokevirtual #34
314: invokevirtual #37
317: iload         9
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #38
330: new           #31
333: dup
334: invokespecial #32
337: ldc           #33
339: invokevirtual #34
342: iload         10
344: invokevirtual #66
347: ldc           #36
349: invokevirtual #34
352: bipush        100
354: invokevirtual #66
357: ldc           #33
359: invokevirtual #34
362: invokevirtual #37
365: iload         10
367: bipush        100
369: if_icmpne     376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #38
380: aload         11
382: invokestatic  #69
385: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 1666
End line: 1679
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double3 = simplexSolver2.epsilon;
        org.apache.commons.math.optimization.GoalType goalType4 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver2.goalType = goalType4;
        simplexSolver0.goalType = goalType4;
        int int7 = simplexSolver0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType4 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType4.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #223
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: new           #8
35: dup
36: dconst_0
37: invokespecial #9
40: astore_2
41: aload_2
42: getfield      #75
45: dstore_3
46: getstatic     #55
49: astore        5
51: aload_2
52: aload         5
54: putfield      #68
57: aload_1
58: aload         5
60: putfield      #68
63: aload_1
64: invokevirtual #65
67: istore        6
69: new           #31
72: dup
73: invokespecial #32
76: ldc           #33
78: invokevirtual #34
81: dload_3
82: invokevirtual #35
85: ldc           #36
87: invokevirtual #34
90: dconst_0
91: invokevirtual #35
94: ldc           #33
96: invokevirtual #34
99: invokevirtual #37
102: dload_3
103: dconst_0
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #38
116: new           #31
119: dup
120: invokespecial #32
123: ldc           #33
125: invokevirtual #34
128: aload         5
130: invokevirtual #57
133: ldc           #36
135: invokevirtual #34
138: getstatic     #55
141: invokevirtual #57
144: ldc           #33
146: invokevirtual #34
149: invokevirtual #37
152: aload         5
154: getstatic     #55
157: invokevirtual #58
160: invokestatic  #38
163: new           #31
166: dup
167: invokespecial #32
170: ldc           #33
172: invokevirtual #34
175: iload         6
177: invokevirtual #66
180: ldc           #36
182: invokevirtual #34
185: bipush        100
187: invokevirtual #66
190: ldc           #33
192: invokevirtual #34
195: invokevirtual #37
198: iload         6
200: bipush        100
202: if_icmpne     209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #38
213: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 1682
End line: 1686
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(4.64980929E8d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #224
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #225
31: invokespecial #9
34: astore_1
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 1689
End line: 1702
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.GoalType goalType4 = simplexSolver0.goalType;
        int int5 = simplexSolver0.getMaxIterations();
        int int6 = simplexSolver0.getIterations();
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-50) + "'", int5 == (-50));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: getfield      #68
47: astore_3
48: aload_1
49: invokevirtual #65
52: istore        4
54: aload_1
55: invokevirtual #78
58: istore        5
60: aload_2
61: invokestatic  #69
64: aload_3
65: invokestatic  #69
68: new           #31
71: dup
72: invokespecial #32
75: ldc           #33
77: invokevirtual #34
80: iload         4
82: invokevirtual #66
85: ldc           #36
87: invokevirtual #34
90: bipush        -50
92: invokevirtual #66
95: ldc           #33
97: invokevirtual #34
100: invokevirtual #37
103: iload         4
105: bipush        -50
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #38
118: new           #31
121: dup
122: invokespecial #32
125: ldc           #33
127: invokevirtual #34
130: iload         5
132: invokevirtual #66
135: ldc           #36
137: invokevirtual #34
140: iconst_0
141: invokevirtual #66
144: ldc           #33
146: invokevirtual #34
149: invokevirtual #37
152: iload         5
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #38
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 1705
End line: 1713
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        simplexSolver0.setMaxIterations(133);
        org.junit.Assert.assertNull(goalType1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: sipush        133
47: invokevirtual #61
50: aload_2
51: invokestatic  #69
54: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 1716
End line: 1723
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 10L);
        org.apache.commons.math.optimization.GoalType goalType2 = simplexSolver1.goalType;
        simplexSolver1.incrementIterationsCounter();
        org.junit.Assert.assertNull(goalType2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aload_1
36: getfield      #68
39: astore_2
40: aload_1
41: invokevirtual #63
44: aload_2
45: invokestatic  #69
48: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 1726
End line: 1740
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver4 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver4.restrictToNonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType7 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver4.goalType = goalType7;
        simplexSolver1.goalType = goalType7;
        boolean boolean10 = simplexSolver1.restrictToNonNegative;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + goalType7 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType7.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: new           #8
41: dup
42: dconst_0
43: invokespecial #9
46: astore_3
47: aload_3
48: iconst_0
49: putfield      #71
52: getstatic     #55
55: astore        4
57: aload_3
58: aload         4
60: putfield      #68
63: aload_1
64: aload         4
66: putfield      #68
69: aload_1
70: getfield      #71
73: istore        5
75: new           #31
78: dup
79: invokespecial #32
82: ldc           #33
84: invokevirtual #34
87: iload_2
88: invokevirtual #66
91: ldc           #36
93: invokevirtual #34
96: iconst_0
97: invokevirtual #66
100: ldc           #33
102: invokevirtual #34
105: invokevirtual #37
108: iload_2
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #38
120: new           #31
123: dup
124: invokespecial #32
127: ldc           #33
129: invokevirtual #34
132: aload         4
134: invokevirtual #57
137: ldc           #36
139: invokevirtual #34
142: getstatic     #55
145: invokevirtual #57
148: ldc           #33
150: invokevirtual #34
153: invokevirtual #37
156: aload         4
158: getstatic     #55
161: invokevirtual #58
164: invokestatic  #38
167: new           #31
170: dup
171: invokespecial #32
174: ldc           #33
176: invokevirtual #34
179: iload         5
181: invokevirtual #39
184: ldc           #36
186: invokevirtual #34
189: iconst_0
190: invokevirtual #39
193: ldc           #33
195: invokevirtual #34
198: invokevirtual #37
201: iload         5
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #38
214: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 1743
End line: 1749
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 10L);
        int int2 = simplexSolver1.getIterations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aload_1
36: invokevirtual #78
39: istore_2
40: new           #31
43: dup
44: invokespecial #32
47: ldc           #33
49: invokevirtual #34
52: iload_2
53: invokevirtual #66
56: ldc           #36
58: invokevirtual #34
61: iconst_0
62: invokevirtual #66
65: ldc           #33
67: invokevirtual #34
70: invokevirtual #37
73: iload_2
74: ifne          81
77: iconst_1
78: goto          82
81: iconst_0
82: invokestatic  #38
85: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 1752
End line: 1803
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix2 = new org.apache.commons.math.linear.Array2DRowRealMatrix((int) (byte) 100, 10);
        boolean boolean4 = array2DRowRealMatrix2.equals((java.lang.Object) 100.0f);
        int int5 = array2DRowRealMatrix2.getRowDimension();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector9 = arrayRealVector8.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver11 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray16 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray23 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double24 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray16, doubleArray23);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction26 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray16, 100.0d);
        java.lang.Object obj27 = null;
        boolean boolean28 = linearObjectiveFunction26.equals(obj27);
        boolean boolean30 = linearObjectiveFunction26.equals((java.lang.Object) "hi!");
        simplexSolver11.f = linearObjectiveFunction26;
        double[] doubleArray36 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double37 = linearObjectiveFunction26.getValue(doubleArray36);
        double[] doubleArray42 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray49 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double50 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray42, doubleArray49);
        boolean boolean51 = org.apache.commons.math.util.MathUtils.equals(doubleArray36, doubleArray42);
        org.apache.commons.math.linear.RealVector realVector52 = arrayRealVector8.append(doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray53 = array2DRowRealMatrix2.solve(doubleArray36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.NonSquareMatrixException; message: a 100x10 matrix was provided instead of a square matrix");
        } catch (org.apache.commons.math.linear.NonSquareMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(realVector9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.194558835742002E15d + "'", double37 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(realVector52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #187
27: dup
28: bipush        100
30: bipush        10
32: invokespecial #188
35: astore_1
36: aload_1
37: ldc           #189
39: invokestatic  #190
42: invokevirtual #191
45: istore_2
46: aload_1
47: invokevirtual #233
50: istore_3
51: new           #48
54: dup
55: iconst_0
56: ldc2_w        #12
59: invokespecial #104
62: astore        4
64: aload         4
66: invokevirtual #105
69: astore        5
71: new           #8
74: dup
75: dconst_0
76: invokespecial #9
79: astore        6
81: iconst_4
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #12
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #12
101: dastore
102: dup
103: iconst_3
104: ldc2_w        #10
107: dastore
108: astore        7
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #14
119: dastore
120: dup
121: iconst_1
122: ldc2_w        #14
125: dastore
126: dup
127: iconst_2
128: ldc2_w        #14
131: dastore
132: dup
133: iconst_3
134: dconst_0
135: dastore
136: dup
137: iconst_4
138: dconst_1
139: dastore
140: dup
141: iconst_5
142: ldc2_w        #10
145: dastore
146: astore        8
148: aload         7
150: aload         8
152: invokestatic  #16
155: dstore        9
157: new           #17
160: dup
161: aload         7
163: ldc2_w        #10
166: invokespecial #18
169: astore        11
171: aconst_null
172: astore        12
174: aload         11
176: aload         12
178: invokevirtual #19
181: istore        13
183: aload         11
185: ldc           #20
187: invokevirtual #19
190: istore        14
192: aload         6
194: aload         11
196: putfield      #21
199: iconst_4
200: newarray       double
202: dup
203: iconst_0
204: ldc2_w        #106
207: dastore
208: dup
209: iconst_1
210: ldc2_w        #108
213: dastore
214: dup
215: iconst_2
216: dconst_1
217: dastore
218: dup
219: iconst_3
220: dconst_0
221: dastore
222: astore        15
224: aload         11
226: aload         15
228: invokevirtual #110
231: dstore        16
233: iconst_4
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #10
241: dastore
242: dup
243: iconst_1
244: ldc2_w        #12
247: dastore
248: dup
249: iconst_2
250: ldc2_w        #12
253: dastore
254: dup
255: iconst_3
256: ldc2_w        #10
259: dastore
260: astore        18
262: bipush        6
264: newarray       double
266: dup
267: iconst_0
268: ldc2_w        #14
271: dastore
272: dup
273: iconst_1
274: ldc2_w        #14
277: dastore
278: dup
279: iconst_2
280: ldc2_w        #14
283: dastore
284: dup
285: iconst_3
286: dconst_0
287: dastore
288: dup
289: iconst_4
290: dconst_1
291: dastore
292: dup
293: iconst_5
294: ldc2_w        #10
297: dastore
298: astore        19
300: aload         18
302: aload         19
304: invokestatic  #16
307: dstore        20
309: aload         15
311: aload         18
313: invokestatic  #111
316: istore        22
318: aload         4
320: aload         15
322: invokevirtual #112
325: astore        23
327: aload_1
328: aload         15
330: invokevirtual #234
333: astore        24
335: ldc           #235
337: invokestatic  #24
340: goto          345
343: astore        24
345: new           #31
348: dup
349: invokespecial #32
352: ldc           #33
354: invokevirtual #34
357: iload_2
358: invokevirtual #39
361: ldc           #36
363: invokevirtual #34
366: iconst_0
367: invokevirtual #39
370: ldc           #33
372: invokevirtual #34
375: invokevirtual #37
378: iload_2
379: ifne          386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #38
390: new           #31
393: dup
394: invokespecial #32
397: ldc           #33
399: invokevirtual #34
402: iload_3
403: invokevirtual #66
406: ldc           #36
408: invokevirtual #34
411: bipush        100
413: invokevirtual #66
416: ldc           #33
418: invokevirtual #34
421: invokevirtual #37
424: iload_3
425: bipush        100
427: if_icmpne     434
430: iconst_1
431: goto          435
434: iconst_0
435: invokestatic  #38
438: aload         5
440: invokestatic  #26
443: aload         7
445: invokestatic  #26
448: aload         7
450: invokestatic  #27
453: ldc           #28
455: invokestatic  #29
458: aload         8
460: invokestatic  #26
463: aload         8
465: invokestatic  #27
468: ldc           #30
470: invokestatic  #29
473: new           #31
476: dup
477: invokespecial #32
480: ldc           #33
482: invokevirtual #34
485: dload         9
487: invokevirtual #35
490: ldc           #36
492: invokevirtual #34
495: ldc2_w        #10
498: invokevirtual #35
501: ldc           #33
503: invokevirtual #34
506: invokevirtual #37
509: dload         9
511: ldc2_w        #10
514: dcmpl
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #38
526: new           #31
529: dup
530: invokespecial #32
533: ldc           #33
535: invokevirtual #34
538: iload         13
540: invokevirtual #39
543: ldc           #36
545: invokevirtual #34
548: iconst_0
549: invokevirtual #39
552: ldc           #33
554: invokevirtual #34
557: invokevirtual #37
560: iload         13
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #38
573: new           #31
576: dup
577: invokespecial #32
580: ldc           #33
582: invokevirtual #34
585: iload         14
587: invokevirtual #39
590: ldc           #36
592: invokevirtual #34
595: iconst_0
596: invokevirtual #39
599: ldc           #33
601: invokevirtual #34
604: invokevirtual #37
607: iload         14
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #38
620: aload         15
622: invokestatic  #26
625: aload         15
627: invokestatic  #27
630: ldc           #116
632: invokestatic  #29
635: new           #31
638: dup
639: invokespecial #32
642: ldc           #33
644: invokevirtual #34
647: dload         16
649: invokevirtual #35
652: ldc           #36
654: invokevirtual #34
657: ldc2_w        #117
660: invokevirtual #35
663: ldc           #33
665: invokevirtual #34
668: invokevirtual #37
671: dload         16
673: ldc2_w        #117
676: dcmpl
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #38
688: aload         18
690: invokestatic  #26
693: aload         18
695: invokestatic  #27
698: ldc           #28
700: invokestatic  #29
703: aload         19
705: invokestatic  #26
708: aload         19
710: invokestatic  #27
713: ldc           #30
715: invokestatic  #29
718: new           #31
721: dup
722: invokespecial #32
725: ldc           #33
727: invokevirtual #34
730: dload         20
732: invokevirtual #35
735: ldc           #36
737: invokevirtual #34
740: ldc2_w        #10
743: invokevirtual #35
746: ldc           #33
748: invokevirtual #34
751: invokevirtual #37
754: dload         20
756: ldc2_w        #10
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #38
771: new           #31
774: dup
775: invokespecial #32
778: ldc           #33
780: invokevirtual #34
783: iload         22
785: invokevirtual #39
788: ldc           #36
790: invokevirtual #34
793: iconst_0
794: invokevirtual #39
797: ldc           #33
799: invokevirtual #34
802: invokevirtual #37
805: iload         22
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #38
818: aload         23
820: invokestatic  #26
823: return
Exception table:
from    to  target type
327   340   343   Class org/apache/commons/math/linear/NonSquareMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 1806
End line: 1887
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.linear.RealVector realVector22 = linearObjectiveFunction16.getCoefficients();
        double[] doubleArray27 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray34 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double35 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray27, doubleArray34);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray27, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapAddToSelf((double) '#');
        double[] doubleArray45 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray52 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double53 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray45, doubleArray52);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray45, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector57 = arrayRealVector56.mapAtan();
        org.apache.commons.math.linear.RealVector realVector58 = arrayRealVector56.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector56.mapAcosToSelf();
        double[] doubleArray64 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray71 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double72 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray64, doubleArray71);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray64, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector76 = arrayRealVector75.mapAtan();
        org.apache.commons.math.linear.RealVector realVector77 = arrayRealVector75.mapInvToSelf();
        org.apache.commons.math.linear.RealVector realVector79 = realVector77.append((double) ' ');
        org.apache.commons.math.linear.RealVector realVector80 = arrayRealVector56.projection(realVector77);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector38, arrayRealVector56);
        org.apache.commons.math.linear.RealVector realVector82 = arrayRealVector81.mapCoshToSelf();
        double[] doubleArray83 = arrayRealVector81.getDataRef();
        org.apache.commons.math.optimization.RealPointValuePair realPointValuePair86 = new org.apache.commons.math.optimization.RealPointValuePair(doubleArray83, 1.5430806348152437d, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector87 = realVector22.add(doubleArray83);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertNotNull(realVector58);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 100.0d + "'", double72 == 100.0d);
        org.junit.Assert.assertNotNull(realVector76);
        org.junit.Assert.assertNotNull(realVector77);
        org.junit.Assert.assertNotNull(realVector79);
        org.junit.Assert.assertNotNull(realVector80);
        org.junit.Assert.assertNotNull(realVector82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: iconst_4
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #10
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #12
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #12
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #10
59: dastore
60: astore_2
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #14
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #14
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_1
90: dastore
91: dup
92: iconst_5
93: ldc2_w        #10
96: dastore
97: astore_3
98: aload_2
99: aload_3
100: invokestatic  #16
103: dstore        4
105: new           #17
108: dup
109: aload_2
110: ldc2_w        #10
113: invokespecial #18
116: astore        6
118: aconst_null
119: astore        7
121: aload         6
123: aload         7
125: invokevirtual #19
128: istore        8
130: aload         6
132: ldc           #20
134: invokevirtual #19
137: istore        9
139: aload_1
140: aload         6
142: putfield      #21
145: aload         6
147: invokevirtual #149
150: astore        10
152: iconst_4
153: newarray       double
155: dup
156: iconst_0
157: ldc2_w        #10
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #12
166: dastore
167: dup
168: iconst_2
169: ldc2_w        #12
172: dastore
173: dup
174: iconst_3
175: ldc2_w        #10
178: dastore
179: astore        11
181: bipush        6
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #14
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #14
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #14
202: dastore
203: dup
204: iconst_3
205: dconst_0
206: dastore
207: dup
208: iconst_4
209: dconst_1
210: dastore
211: dup
212: iconst_5
213: ldc2_w        #10
216: dastore
217: astore        12
219: aload         11
221: aload         12
223: invokestatic  #16
226: dstore        13
228: new           #48
231: dup
232: aload         11
234: iconst_1
235: iconst_0
236: invokespecial #49
239: astore        15
241: aload         15
243: ldc2_w        #206
246: invokevirtual #208
249: astore        16
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: ldc2_w        #10
259: dastore
260: dup
261: iconst_1
262: ldc2_w        #12
265: dastore
266: dup
267: iconst_2
268: ldc2_w        #12
271: dastore
272: dup
273: iconst_3
274: ldc2_w        #10
277: dastore
278: astore        17
280: bipush        6
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #14
289: dastore
290: dup
291: iconst_1
292: ldc2_w        #14
295: dastore
296: dup
297: iconst_2
298: ldc2_w        #14
301: dastore
302: dup
303: iconst_3
304: dconst_0
305: dastore
306: dup
307: iconst_4
308: dconst_1
309: dastore
310: dup
311: iconst_5
312: ldc2_w        #10
315: dastore
316: astore        18
318: aload         17
320: aload         18
322: invokestatic  #16
325: dstore        19
327: new           #48
330: dup
331: aload         17
333: iconst_1
334: iconst_0
335: invokespecial #49
338: astore        21
340: aload         21
342: invokevirtual #50
345: astore        22
347: aload         21
349: invokevirtual #91
352: astore        23
354: aload         21
356: invokevirtual #92
359: astore        24
361: iconst_4
362: newarray       double
364: dup
365: iconst_0
366: ldc2_w        #10
369: dastore
370: dup
371: iconst_1
372: ldc2_w        #12
375: dastore
376: dup
377: iconst_2
378: ldc2_w        #12
381: dastore
382: dup
383: iconst_3
384: ldc2_w        #10
387: dastore
388: astore        25
390: bipush        6
392: newarray       double
394: dup
395: iconst_0
396: ldc2_w        #14
399: dastore
400: dup
401: iconst_1
402: ldc2_w        #14
405: dastore
406: dup
407: iconst_2
408: ldc2_w        #14
411: dastore
412: dup
413: iconst_3
414: dconst_0
415: dastore
416: dup
417: iconst_4
418: dconst_1
419: dastore
420: dup
421: iconst_5
422: ldc2_w        #10
425: dastore
426: astore        26
428: aload         25
430: aload         26
432: invokestatic  #16
435: dstore        27
437: new           #48
440: dup
441: aload         25
443: iconst_1
444: iconst_0
445: invokespecial #49
448: astore        29
450: aload         29
452: invokevirtual #50
455: astore        30
457: aload         29
459: invokevirtual #128
462: astore        31
464: aload         31
466: ldc2_w        #129
469: invokeinterface #131,  3
474: astore        32
476: aload         21
478: aload         31
480: invokevirtual #132
483: astore        33
485: new           #48
488: dup
489: aload         15
491: aload         21
493: invokespecial #217
496: astore        34
498: aload         34
500: invokevirtual #218
503: astore        35
505: aload         34
507: invokevirtual #219
510: astore        36
512: new           #238
515: dup
516: aload         36
518: ldc2_w        #239
521: iconst_1
522: invokespecial #241
525: astore        37
527: aload         10
529: aload         36
531: invokeinterface #242,  2
536: astore        38
538: ldc           #96
540: invokestatic  #24
543: goto          588
546: astore        38
548: aload         38
550: invokevirtual #98
553: invokevirtual #99
556: ifne          588
559: new           #31
562: dup
563: invokespecial #32
566: ldc           #100
568: invokevirtual #34
571: aload         38
573: invokevirtual #98
576: invokevirtual #101
579: invokevirtual #34
582: invokevirtual #37
585: invokestatic  #24
588: aload_2
589: invokestatic  #26
592: aload_2
593: invokestatic  #27
596: ldc           #28
598: invokestatic  #29
601: aload_3
602: invokestatic  #26
605: aload_3
606: invokestatic  #27
609: ldc           #30
611: invokestatic  #29
614: new           #31
617: dup
618: invokespecial #32
621: ldc           #33
623: invokevirtual #34
626: dload         4
628: invokevirtual #35
631: ldc           #36
633: invokevirtual #34
636: ldc2_w        #10
639: invokevirtual #35
642: ldc           #33
644: invokevirtual #34
647: invokevirtual #37
650: dload         4
652: ldc2_w        #10
655: dcmpl
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #38
667: new           #31
670: dup
671: invokespecial #32
674: ldc           #33
676: invokevirtual #34
679: iload         8
681: invokevirtual #39
684: ldc           #36
686: invokevirtual #34
689: iconst_0
690: invokevirtual #39
693: ldc           #33
695: invokevirtual #34
698: invokevirtual #37
701: iload         8
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #38
714: new           #31
717: dup
718: invokespecial #32
721: ldc           #33
723: invokevirtual #34
726: iload         9
728: invokevirtual #39
731: ldc           #36
733: invokevirtual #34
736: iconst_0
737: invokevirtual #39
740: ldc           #33
742: invokevirtual #34
745: invokevirtual #37
748: iload         9
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #38
761: aload         10
763: invokestatic  #26
766: aload         11
768: invokestatic  #26
771: aload         11
773: invokestatic  #27
776: ldc           #28
778: invokestatic  #29
781: aload         12
783: invokestatic  #26
786: aload         12
788: invokestatic  #27
791: ldc           #30
793: invokestatic  #29
796: new           #31
799: dup
800: invokespecial #32
803: ldc           #33
805: invokevirtual #34
808: dload         13
810: invokevirtual #35
813: ldc           #36
815: invokevirtual #34
818: ldc2_w        #10
821: invokevirtual #35
824: ldc           #33
826: invokevirtual #34
829: invokevirtual #37
832: dload         13
834: ldc2_w        #10
837: dcmpl
838: ifne          845
841: iconst_1
842: goto          846
845: iconst_0
846: invokestatic  #38
849: aload         16
851: invokestatic  #26
854: aload         17
856: invokestatic  #26
859: aload         17
861: invokestatic  #27
864: ldc           #28
866: invokestatic  #29
869: aload         18
871: invokestatic  #26
874: aload         18
876: invokestatic  #27
879: ldc           #30
881: invokestatic  #29
884: new           #31
887: dup
888: invokespecial #32
891: ldc           #33
893: invokevirtual #34
896: dload         19
898: invokevirtual #35
901: ldc           #36
903: invokevirtual #34
906: ldc2_w        #10
909: invokevirtual #35
912: ldc           #33
914: invokevirtual #34
917: invokevirtual #37
920: dload         19
922: ldc2_w        #10
925: dcmpl
926: ifne          933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #38
937: aload         22
939: invokestatic  #26
942: aload         23
944: invokestatic  #26
947: aload         24
949: invokestatic  #26
952: aload         25
954: invokestatic  #26
957: aload         25
959: invokestatic  #27
962: ldc           #28
964: invokestatic  #29
967: aload         26
969: invokestatic  #26
972: aload         26
974: invokestatic  #27
977: ldc           #30
979: invokestatic  #29
982: new           #31
985: dup
986: invokespecial #32
989: ldc           #33
991: invokevirtual #34
994: dload         27
996: invokevirtual #35
999: ldc           #36
1001: invokevirtual #34
1004: ldc2_w        #10
1007: invokevirtual #35
1010: ldc           #33
1012: invokevirtual #34
1015: invokevirtual #37
1018: dload         27
1020: ldc2_w        #10
1023: dcmpl
1024: ifne          1031
1027: iconst_1
1028: goto          1032
1031: iconst_0
1032: invokestatic  #38
1035: aload         30
1037: invokestatic  #26
1040: aload         31
1042: invokestatic  #26
1045: aload         32
1047: invokestatic  #26
1050: aload         33
1052: invokestatic  #26
1055: aload         35
1057: invokestatic  #26
1060: aload         36
1062: invokestatic  #26
1065: aload         36
1067: invokestatic  #27
1070: ldc           #139
1072: invokestatic  #29
1075: return
Exception table:
from    to  target type
527   543   546   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 1890
End line: 1901
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.restrictToNonNegative = true;
        int int4 = simplexSolver1.getMaxIterations();
        int int5 = simplexSolver1.getIterations();
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection6 = simplexSolver1.constraints;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(linearConstraintCollection6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #243
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_1
35: putfield      #71
38: aload_1
39: invokevirtual #65
42: istore_2
43: aload_1
44: invokevirtual #78
47: istore_3
48: aload_1
49: getfield      #154
52: astore        4
54: new           #31
57: dup
58: invokespecial #32
61: ldc           #33
63: invokevirtual #34
66: iload_2
67: invokevirtual #66
70: ldc           #36
72: invokevirtual #34
75: bipush        100
77: invokevirtual #66
80: ldc           #33
82: invokevirtual #34
85: invokevirtual #37
88: iload_2
89: bipush        100
91: if_icmpne     98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #38
102: new           #31
105: dup
106: invokespecial #32
109: ldc           #33
111: invokevirtual #34
114: iload_3
115: invokevirtual #66
118: ldc           #36
120: invokevirtual #34
123: iconst_0
124: invokevirtual #66
127: ldc           #33
129: invokevirtual #34
132: invokevirtual #37
135: iload_3
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #38
147: aload         4
149: invokestatic  #69
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 1904
End line: 1918
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau3 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aconst_null
39: astore_3
40: aload_1
41: aload_3
42: invokevirtual #22
45: ldc           #23
47: invokestatic  #24
50: goto          55
53: astore        4
55: new           #31
58: dup
59: invokespecial #32
62: ldc           #33
64: invokevirtual #34
67: iload_2
68: invokevirtual #66
71: ldc           #36
73: invokevirtual #34
76: iconst_0
77: invokevirtual #66
80: ldc           #33
82: invokevirtual #34
85: invokevirtual #37
88: iload_2
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #38
100: return
Exception table:
from    to  target type
40    50    53   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 1921
End line: 1959
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math.linear.ArrayRealVector();
        double[] doubleArray5 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray12 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double13 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray5, doubleArray12);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray5, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapAtan();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector16.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector16.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver20 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType21 = simplexSolver20.goalType;
        boolean boolean22 = arrayRealVector16.equals((java.lang.Object) goalType21);
        org.apache.commons.math.linear.RealVector realVector23 = arrayRealVector16.mapCbrt();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector16.mapAdd((double) 10);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = arrayRealVector0.add(arrayRealVector16);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = arrayRealVector0.add(arrayRealVector27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(arrayRealVector26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #245
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: invokespecial #204
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #10
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #12
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #12
52: dastore
53: dup
54: iconst_3
55: ldc2_w        #10
58: dastore
59: astore_2
60: bipush        6
62: newarray       double
64: dup
65: iconst_0
66: ldc2_w        #14
69: dastore
70: dup
71: iconst_1
72: ldc2_w        #14
75: dastore
76: dup
77: iconst_2
78: ldc2_w        #14
81: dastore
82: dup
83: iconst_3
84: dconst_0
85: dastore
86: dup
87: iconst_4
88: dconst_1
89: dastore
90: dup
91: iconst_5
92: ldc2_w        #10
95: dastore
96: astore_3
97: aload_2
98: aload_3
99: invokestatic  #16
102: dstore        4
104: new           #48
107: dup
108: aload_2
109: iconst_1
110: iconst_0
111: invokespecial #49
114: astore        6
116: aload         6
118: invokevirtual #50
121: astore        7
123: aload         6
125: invokevirtual #91
128: astore        8
130: aload         6
132: invokevirtual #92
135: astore        9
137: new           #8
140: dup
141: invokespecial #41
144: astore        10
146: aload         10
148: getfield      #68
151: astore        11
153: aload         6
155: aload         11
157: invokevirtual #93
160: istore        12
162: aload         6
164: invokevirtual #122
167: astore        13
169: aload         6
171: ldc2_w        #14
174: invokevirtual #246
177: astore        14
179: aload_1
180: aload         6
182: invokevirtual #247
185: astore        15
187: aconst_null
188: astore        16
190: aload_1
191: aload         16
193: invokevirtual #247
196: astore        17
198: ldc           #23
200: invokestatic  #24
203: goto          208
206: astore        17
208: aload_2
209: invokestatic  #26
212: aload_2
213: invokestatic  #27
216: ldc           #28
218: invokestatic  #29
221: aload_3
222: invokestatic  #26
225: aload_3
226: invokestatic  #27
229: ldc           #30
231: invokestatic  #29
234: new           #31
237: dup
238: invokespecial #32
241: ldc           #33
243: invokevirtual #34
246: dload         4
248: invokevirtual #35
251: ldc           #36
253: invokevirtual #34
256: ldc2_w        #10
259: invokevirtual #35
262: ldc           #33
264: invokevirtual #34
267: invokevirtual #37
270: dload         4
272: ldc2_w        #10
275: dcmpl
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #38
287: aload         7
289: invokestatic  #26
292: aload         8
294: invokestatic  #26
297: aload         9
299: invokestatic  #26
302: aload         11
304: invokestatic  #69
307: new           #31
310: dup
311: invokespecial #32
314: ldc           #33
316: invokevirtual #34
319: iload         12
321: invokevirtual #39
324: ldc           #36
326: invokevirtual #34
329: iconst_0
330: invokevirtual #39
333: ldc           #33
335: invokevirtual #34
338: invokevirtual #37
341: iload         12
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #38
354: aload         13
356: invokestatic  #26
359: aload         14
361: invokestatic  #26
364: aload         15
366: invokestatic  #26
369: return
Exception table:
from    to  target type
190   203   206   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 1962
End line: 1988
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        int int4 = simplexSolver0.getMaxIterations();
        int int5 = simplexSolver0.getIterations();
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        simplexSolver0.f = linearObjectiveFunction20;
        double double24 = simplexSolver0.epsilon;
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-50) + "'", int4 == (-50));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0E-6d + "'", double24 == 1.0E-6d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: invokevirtual #65
47: istore_3
48: aload_1
49: invokevirtual #78
52: istore        4
54: iconst_4
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #10
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #12
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #12
74: dastore
75: dup
76: iconst_3
77: ldc2_w        #10
80: dastore
81: astore        5
83: bipush        6
85: newarray       double
87: dup
88: iconst_0
89: ldc2_w        #14
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #14
98: dastore
99: dup
100: iconst_2
101: ldc2_w        #14
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #10
118: dastore
119: astore        6
121: aload         5
123: aload         6
125: invokestatic  #16
128: dstore        7
130: new           #17
133: dup
134: aload         5
136: ldc2_w        #10
139: invokespecial #18
142: astore        9
144: aconst_null
145: astore        10
147: aload         9
149: aload         10
151: invokevirtual #19
154: istore        11
156: aload_1
157: aload         9
159: putfield      #21
162: aload_1
163: getfield      #75
166: dstore        12
168: aload_2
169: invokestatic  #69
172: new           #31
175: dup
176: invokespecial #32
179: ldc           #33
181: invokevirtual #34
184: iload_3
185: invokevirtual #66
188: ldc           #36
190: invokevirtual #34
193: bipush        -50
195: invokevirtual #66
198: ldc           #33
200: invokevirtual #34
203: invokevirtual #37
206: iload_3
207: bipush        -50
209: if_icmpne     216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #38
220: new           #31
223: dup
224: invokespecial #32
227: ldc           #33
229: invokevirtual #34
232: iload         4
234: invokevirtual #66
237: ldc           #36
239: invokevirtual #34
242: iconst_0
243: invokevirtual #66
246: ldc           #33
248: invokevirtual #34
251: invokevirtual #37
254: iload         4
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #38
267: aload         5
269: invokestatic  #26
272: aload         5
274: invokestatic  #27
277: ldc           #28
279: invokestatic  #29
282: aload         6
284: invokestatic  #26
287: aload         6
289: invokestatic  #27
292: ldc           #30
294: invokestatic  #29
297: new           #31
300: dup
301: invokespecial #32
304: ldc           #33
306: invokevirtual #34
309: dload         7
311: invokevirtual #35
314: ldc           #36
316: invokevirtual #34
319: ldc2_w        #10
322: invokevirtual #35
325: ldc           #33
327: invokevirtual #34
330: invokevirtual #37
333: dload         7
335: ldc2_w        #10
338: dcmpl
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #38
350: new           #31
353: dup
354: invokespecial #32
357: ldc           #33
359: invokevirtual #34
362: iload         11
364: invokevirtual #39
367: ldc           #36
369: invokevirtual #34
372: iconst_0
373: invokevirtual #39
376: ldc           #33
378: invokevirtual #34
381: invokevirtual #37
384: iload         11
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #38
397: new           #31
400: dup
401: invokespecial #32
404: ldc           #33
406: invokevirtual #34
409: dload         12
411: invokevirtual #35
414: ldc           #36
416: invokevirtual #34
419: ldc2_w        #249
422: invokevirtual #35
425: ldc           #33
427: invokevirtual #34
430: invokevirtual #37
433: dload         12
435: ldc2_w        #249
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #38
450: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 1991
End line: 2042
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        int int4 = simplexSolver0.getMaxIterations();
        int int5 = simplexSolver0.getIterations();
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        simplexSolver0.f = linearObjectiveFunction20;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver25 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double26 = simplexSolver25.epsilon;
        org.apache.commons.math.optimization.GoalType goalType27 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver25.goalType = goalType27;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver30 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int31 = simplexSolver30.getIterations();
        org.apache.commons.math.optimization.GoalType goalType32 = simplexSolver30.goalType;
        simplexSolver30.setMaxIterations((int) (short) 0);
        simplexSolver30.setMaxIterations((int) 'a');
        double double37 = simplexSolver30.epsilon;
        org.apache.commons.math.linear.RealVector realVector38 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction40 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector38, 12.566370614359172d);
        simplexSolver30.f = linearObjectiveFunction40;
        simplexSolver25.f = linearObjectiveFunction40;
        simplexSolver0.f = linearObjectiveFunction40;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair44 = simplexSolver0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-50) + "'", int4 == (-50));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType27.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(goalType32);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #251
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: getfield      #68
36: astore_2
37: aload_1
38: bipush        -50
40: invokevirtual #61
43: aload_1
44: invokevirtual #65
47: istore_3
48: aload_1
49: invokevirtual #78
52: istore        4
54: iconst_4
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #10
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #12
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #12
74: dastore
75: dup
76: iconst_3
77: ldc2_w        #10
80: dastore
81: astore        5
83: bipush        6
85: newarray       double
87: dup
88: iconst_0
89: ldc2_w        #14
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #14
98: dastore
99: dup
100: iconst_2
101: ldc2_w        #14
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #10
118: dastore
119: astore        6
121: aload         5
123: aload         6
125: invokestatic  #16
128: dstore        7
130: new           #17
133: dup
134: aload         5
136: ldc2_w        #10
139: invokespecial #18
142: astore        9
144: aconst_null
145: astore        10
147: aload         9
149: aload         10
151: invokevirtual #19
154: istore        11
156: aload_1
157: aload         9
159: putfield      #21
162: new           #8
165: dup
166: dconst_0
167: invokespecial #9
170: astore        12
172: aload         12
174: getfield      #75
177: dstore        13
179: getstatic     #55
182: astore        15
184: aload         12
186: aload         15
188: putfield      #68
191: new           #8
194: dup
195: dconst_0
196: invokespecial #9
199: astore        16
201: aload         16
203: invokevirtual #78
206: istore        17
208: aload         16
210: getfield      #68
213: astore        18
215: aload         16
217: iconst_0
218: invokevirtual #61
221: aload         16
223: bipush        97
225: invokevirtual #61
228: aload         16
230: getfield      #75
233: dstore        19
235: aconst_null
236: astore        21
238: new           #17
241: dup
242: aload         21
244: ldc2_w        #125
247: invokespecial #127
250: astore        22
252: aload         16
254: aload         22
256: putfield      #21
259: aload         12
261: aload         22
263: putfield      #21
266: aload_1
267: aload         22
269: putfield      #21
272: aload_1
273: invokevirtual #72
276: astore        23
278: ldc           #23
280: invokestatic  #24
283: goto          288
286: astore        23
288: aload_2
289: invokestatic  #69
292: new           #31
295: dup
296: invokespecial #32
299: ldc           #33
301: invokevirtual #34
304: iload_3
305: invokevirtual #66
308: ldc           #36
310: invokevirtual #34
313: bipush        -50
315: invokevirtual #66
318: ldc           #33
320: invokevirtual #34
323: invokevirtual #37
326: iload_3
327: bipush        -50
329: if_icmpne     336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #38
340: new           #31
343: dup
344: invokespecial #32
347: ldc           #33
349: invokevirtual #34
352: iload         4
354: invokevirtual #66
357: ldc           #36
359: invokevirtual #34
362: iconst_0
363: invokevirtual #66
366: ldc           #33
368: invokevirtual #34
371: invokevirtual #37
374: iload         4
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #38
387: aload         5
389: invokestatic  #26
392: aload         5
394: invokestatic  #27
397: ldc           #28
399: invokestatic  #29
402: aload         6
404: invokestatic  #26
407: aload         6
409: invokestatic  #27
412: ldc           #30
414: invokestatic  #29
417: new           #31
420: dup
421: invokespecial #32
424: ldc           #33
426: invokevirtual #34
429: dload         7
431: invokevirtual #35
434: ldc           #36
436: invokevirtual #34
439: ldc2_w        #10
442: invokevirtual #35
445: ldc           #33
447: invokevirtual #34
450: invokevirtual #37
453: dload         7
455: ldc2_w        #10
458: dcmpl
459: ifne          466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #38
470: new           #31
473: dup
474: invokespecial #32
477: ldc           #33
479: invokevirtual #34
482: iload         11
484: invokevirtual #39
487: ldc           #36
489: invokevirtual #34
492: iconst_0
493: invokevirtual #39
496: ldc           #33
498: invokevirtual #34
501: invokevirtual #37
504: iload         11
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #38
517: new           #31
520: dup
521: invokespecial #32
524: ldc           #33
526: invokevirtual #34
529: dload         13
531: invokevirtual #35
534: ldc           #36
536: invokevirtual #34
539: dconst_0
540: invokevirtual #35
543: ldc           #33
545: invokevirtual #34
548: invokevirtual #37
551: dload         13
553: dconst_0
554: dcmpl
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #38
566: new           #31
569: dup
570: invokespecial #32
573: ldc           #33
575: invokevirtual #34
578: aload         15
580: invokevirtual #57
583: ldc           #36
585: invokevirtual #34
588: getstatic     #55
591: invokevirtual #57
594: ldc           #33
596: invokevirtual #34
599: invokevirtual #37
602: aload         15
604: getstatic     #55
607: invokevirtual #58
610: invokestatic  #38
613: new           #31
616: dup
617: invokespecial #32
620: ldc           #33
622: invokevirtual #34
625: iload         17
627: invokevirtual #66
630: ldc           #36
632: invokevirtual #34
635: iconst_0
636: invokevirtual #66
639: ldc           #33
641: invokevirtual #34
644: invokevirtual #37
647: iload         17
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #38
660: aload         18
662: invokestatic  #69
665: new           #31
668: dup
669: invokespecial #32
672: ldc           #33
674: invokevirtual #34
677: dload         19
679: invokevirtual #35
682: ldc           #36
684: invokevirtual #34
687: dconst_0
688: invokevirtual #35
691: ldc           #33
693: invokevirtual #34
696: invokevirtual #37
699: dload         19
701: dconst_0
702: dcmpl
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #38
714: return
Exception table:
from    to  target type
272   283   286   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 2045
End line: 2050
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        simplexSolver0.setMaxIterations((int) 'a');
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #41
31: astore_1
32: aload_1
33: bipush        97
35: invokevirtual #61
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 2053
End line: 2075
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        simplexSolver1.incrementIterationsCounter();
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction9 = simplexSolver1.f;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver10 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver12 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double13 = simplexSolver12.epsilon;
        org.apache.commons.math.optimization.GoalType goalType14 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver12.goalType = goalType14;
        simplexSolver10.goalType = goalType14;
        simplexSolver1.goalType = goalType14;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNull(linearObjectiveFunction9);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType14 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType14.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #253
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #78
37: istore_2
38: aload_1
39: getfield      #68
42: astore_3
43: aload_1
44: iconst_0
45: invokevirtual #61
48: aload_1
49: bipush        97
51: invokevirtual #61
54: aload_1
55: invokevirtual #63
58: aload_1
59: getfield      #21
62: astore        4
64: new           #8
67: dup
68: invokespecial #41
71: astore        5
73: new           #8
76: dup
77: dconst_0
78: invokespecial #9
81: astore        6
83: aload         6
85: getfield      #75
88: dstore        7
90: getstatic     #55
93: astore        9
95: aload         6
97: aload         9
99: putfield      #68
102: aload         5
104: aload         9
106: putfield      #68
109: aload_1
110: aload         9
112: putfield      #68
115: new           #31
118: dup
119: invokespecial #32
122: ldc           #33
124: invokevirtual #34
127: iload_2
128: invokevirtual #66
131: ldc           #36
133: invokevirtual #34
136: iconst_0
137: invokevirtual #66
140: ldc           #33
142: invokevirtual #34
145: invokevirtual #37
148: iload_2
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #38
160: aload_3
161: invokestatic  #69
164: aload         4
166: invokestatic  #69
169: new           #31
172: dup
173: invokespecial #32
176: ldc           #33
178: invokevirtual #34
181: dload         7
183: invokevirtual #35
186: ldc           #36
188: invokevirtual #34
191: dconst_0
192: invokevirtual #35
195: ldc           #33
197: invokevirtual #34
200: invokevirtual #37
203: dload         7
205: dconst_0
206: dcmpl
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #38
218: new           #31
221: dup
222: invokespecial #32
225: ldc           #33
227: invokevirtual #34
230: aload         9
232: invokevirtual #57
235: ldc           #36
237: invokevirtual #34
240: getstatic     #55
243: invokevirtual #57
246: ldc           #33
248: invokevirtual #34
251: invokevirtual #37
254: aload         9
256: getstatic     #55
259: invokevirtual #58
262: invokestatic  #38
265: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 2078
End line: 2085
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(10.0d);
        int int2 = simplexSolver1.getMaxIterations();
        simplexSolver1.restrictToNonNegative = false;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #14
31: invokespecial #9
34: astore_1
35: aload_1
36: invokevirtual #65
39: istore_2
40: aload_1
41: iconst_0
42: putfield      #71
45: new           #31
48: dup
49: invokespecial #32
52: ldc           #33
54: invokevirtual #34
57: iload_2
58: invokevirtual #66
61: ldc           #36
63: invokevirtual #34
66: bipush        100
68: invokevirtual #66
71: ldc           #33
73: invokevirtual #34
76: invokevirtual #37
79: iload_2
80: bipush        100
82: if_icmpne     89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #38
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 2088
End line: 2099
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double2 = simplexSolver1.epsilon;
        int int3 = simplexSolver1.getIterations();
        int int4 = simplexSolver1.getIterations();
        simplexSolver1.restrictToNonNegative = true;
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #75
37: dstore_2
38: aload_1
39: invokevirtual #78
42: istore        4
44: aload_1
45: invokevirtual #78
48: istore        5
50: aload_1
51: iconst_1
52: putfield      #71
55: new           #31
58: dup
59: invokespecial #32
62: ldc           #33
64: invokevirtual #34
67: dload_2
68: invokevirtual #35
71: ldc           #36
73: invokevirtual #34
76: dconst_0
77: invokevirtual #35
80: ldc           #33
82: invokevirtual #34
85: invokevirtual #37
88: dload_2
89: dconst_0
90: dcmpl
91: ifne          98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #38
102: new           #31
105: dup
106: invokespecial #32
109: ldc           #33
111: invokevirtual #34
114: iload         4
116: invokevirtual #66
119: ldc           #36
121: invokevirtual #34
124: iconst_0
125: invokevirtual #66
128: ldc           #33
130: invokevirtual #34
133: invokevirtual #37
136: iload         4
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #38
149: new           #31
152: dup
153: invokespecial #32
156: ldc           #33
158: invokevirtual #34
161: iload         5
163: invokevirtual #66
166: ldc           #36
168: invokevirtual #34
171: iconst_0
172: invokevirtual #66
175: ldc           #33
177: invokevirtual #34
180: invokevirtual #37
183: iload         5
185: ifne          192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #38
196: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 2102
End line: 2108
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.incrementIterationsCounter();
        simplexSolver1.restrictToNonNegative = false;
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #63
38: aload_1
39: iconst_0
40: putfield      #71
43: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 2111
End line: 2122
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction3 = simplexSolver1.f;
        int int4 = simplexSolver1.getMaxIterations();
        simplexSolver1.setMaxIterations(10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(linearObjectiveFunction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #21
43: astore_3
44: aload_1
45: invokevirtual #65
48: istore        4
50: aload_1
51: bipush        10
53: invokevirtual #61
56: new           #31
59: dup
60: invokespecial #32
63: ldc           #33
65: invokevirtual #34
68: iload_2
69: invokevirtual #66
72: ldc           #36
74: invokevirtual #34
77: iconst_0
78: invokevirtual #66
81: ldc           #33
83: invokevirtual #34
86: invokevirtual #37
89: iload_2
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #38
101: aload_3
102: invokestatic  #69
105: new           #31
108: dup
109: invokespecial #32
112: ldc           #33
114: invokevirtual #34
117: iload         4
119: invokevirtual #66
122: ldc           #36
124: invokevirtual #34
127: bipush        100
129: invokevirtual #66
132: ldc           #33
134: invokevirtual #34
137: invokevirtual #37
140: iload         4
142: bipush        100
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #38
155: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 2125
End line: 2148
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction3 = simplexSolver1.f;
        int int4 = simplexSolver1.getMaxIterations();
        int int5 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType6 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver1.goalType = goalType6;
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau8 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.solvePhase1(simplexTableau8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(linearObjectiveFunction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #21
43: astore_3
44: aload_1
45: invokevirtual #65
48: istore        4
50: aload_1
51: invokevirtual #78
54: istore        5
56: getstatic     #55
59: astore        6
61: aload_1
62: aload         6
64: putfield      #68
67: aconst_null
68: astore        7
70: aload_1
71: aload         7
73: invokevirtual #44
76: ldc           #23
78: invokestatic  #24
81: goto          86
84: astore        8
86: new           #31
89: dup
90: invokespecial #32
93: ldc           #33
95: invokevirtual #34
98: iload_2
99: invokevirtual #66
102: ldc           #36
104: invokevirtual #34
107: iconst_0
108: invokevirtual #66
111: ldc           #33
113: invokevirtual #34
116: invokevirtual #37
119: iload_2
120: ifne          127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #38
131: aload_3
132: invokestatic  #69
135: new           #31
138: dup
139: invokespecial #32
142: ldc           #33
144: invokevirtual #34
147: iload         4
149: invokevirtual #66
152: ldc           #36
154: invokevirtual #34
157: bipush        100
159: invokevirtual #66
162: ldc           #33
164: invokevirtual #34
167: invokevirtual #37
170: iload         4
172: bipush        100
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #38
185: new           #31
188: dup
189: invokespecial #32
192: ldc           #33
194: invokevirtual #34
197: iload         5
199: invokevirtual #66
202: ldc           #36
204: invokevirtual #34
207: iconst_0
208: invokevirtual #66
211: ldc           #33
213: invokevirtual #34
216: invokevirtual #37
219: iload         5
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #38
232: new           #31
235: dup
236: invokespecial #32
239: ldc           #33
241: invokevirtual #34
244: aload         6
246: invokevirtual #57
249: ldc           #36
251: invokevirtual #34
254: getstatic     #55
257: invokevirtual #57
260: ldc           #33
262: invokevirtual #34
265: invokevirtual #37
268: aload         6
270: getstatic     #55
273: invokevirtual #58
276: invokestatic  #38
279: return
Exception table:
from    to  target type
70    81    84   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 2151
End line: 2174
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.linear.RealVector realVector22 = linearObjectiveFunction16.getCoefficients();
        org.apache.commons.math.linear.RealVector realVector24 = realVector22.mapAddToSelf((double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #259
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: aload         6
148: invokevirtual #149
151: astore        10
153: aload         10
155: dconst_1
156: invokeinterface #260,  3
161: astore        11
163: aload_2
164: invokestatic  #26
167: aload_2
168: invokestatic  #27
171: ldc           #28
173: invokestatic  #29
176: aload_3
177: invokestatic  #26
180: aload_3
181: invokestatic  #27
184: ldc           #30
186: invokestatic  #29
189: new           #31
192: dup
193: invokespecial #32
196: ldc           #33
198: invokevirtual #34
201: dload         4
203: invokevirtual #35
206: ldc           #36
208: invokevirtual #34
211: ldc2_w        #10
214: invokevirtual #35
217: ldc           #33
219: invokevirtual #34
222: invokevirtual #37
225: dload         4
227: ldc2_w        #10
230: dcmpl
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #38
242: new           #31
245: dup
246: invokespecial #32
249: ldc           #33
251: invokevirtual #34
254: iload         8
256: invokevirtual #39
259: ldc           #36
261: invokevirtual #34
264: iconst_0
265: invokevirtual #39
268: ldc           #33
270: invokevirtual #34
273: invokevirtual #37
276: iload         8
278: ifne          285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #38
289: new           #31
292: dup
293: invokespecial #32
296: ldc           #33
298: invokevirtual #34
301: iload         9
303: invokevirtual #39
306: ldc           #36
308: invokevirtual #34
311: iconst_0
312: invokevirtual #39
315: ldc           #33
317: invokevirtual #34
320: invokevirtual #37
323: iload         9
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #38
336: aload         10
338: invokestatic  #26
341: aload         11
343: invokestatic  #26
346: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 2177
End line: 2235
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        double[] doubleArray8 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray15 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double16 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray8, doubleArray15);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction18 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray8, 100.0d);
        org.apache.commons.math.linear.RealVector realVector19 = linearObjectiveFunction18.getCoefficients();
        double double20 = linearObjectiveFunction18.getConstantTerm();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1, (-1.0f) };
        org.apache.commons.math.linear.InvalidMatrixException invalidMatrixException27 = new org.apache.commons.math.linear.InvalidMatrixException("hi!", objArray26);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException(929961857, "org.apache.commons.math.MathRuntimeException$4: ", objArray26);
        java.lang.Object[] objArray29 = maxIterationsExceededException28.getArguments();
        boolean boolean30 = linearObjectiveFunction18.equals((java.lang.Object) objArray29);
        simplexSolver1.f = linearObjectiveFunction18;
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction46 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray36, 100.0d);
        org.apache.commons.math.linear.RealVector realVector47 = linearObjectiveFunction46.getCoefficients();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector();
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector48.mapCbrtToSelf();
        boolean boolean50 = linearObjectiveFunction46.equals((java.lang.Object) arrayRealVector48);
        org.apache.commons.math.linear.RealVector realVector51 = arrayRealVector48.mapCbrtToSelf();
        org.apache.commons.math.linear.RealVector realVector52 = arrayRealVector48.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector53 = realVector52.mapInv();
        boolean boolean54 = linearObjectiveFunction18.equals((java.lang.Object) realVector53);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, -1.0]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(realVector52);
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #68
43: astore_3
44: iconst_4
45: newarray       double
47: dup
48: iconst_0
49: ldc2_w        #10
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #12
58: dastore
59: dup
60: iconst_2
61: ldc2_w        #12
64: dastore
65: dup
66: iconst_3
67: ldc2_w        #10
70: dastore
71: astore        4
73: bipush        6
75: newarray       double
77: dup
78: iconst_0
79: ldc2_w        #14
82: dastore
83: dup
84: iconst_1
85: ldc2_w        #14
88: dastore
89: dup
90: iconst_2
91: ldc2_w        #14
94: dastore
95: dup
96: iconst_3
97: dconst_0
98: dastore
99: dup
100: iconst_4
101: dconst_1
102: dastore
103: dup
104: iconst_5
105: ldc2_w        #10
108: dastore
109: astore        5
111: aload         4
113: aload         5
115: invokestatic  #16
118: dstore        6
120: new           #17
123: dup
124: aload         4
126: ldc2_w        #10
129: invokespecial #18
132: astore        8
134: aload         8
136: invokevirtual #149
139: astore        9
141: aload         8
143: invokevirtual #262
146: dstore        10
148: iconst_2
149: anewarray     #5
152: dup
153: iconst_0
154: iconst_1
155: invokestatic  #263
158: aastore
159: dup
160: iconst_1
161: ldc_w         #264
164: invokestatic  #190
167: aastore
168: astore        12
170: new           #265
173: dup
174: ldc           #20
176: aload         12
178: invokespecial #266
181: astore        13
183: new           #267
186: dup
187: ldc_w         #268
190: ldc_w         #269
193: aload         12
195: invokespecial #270
198: astore        14
200: aload         14
202: invokevirtual #271
205: astore        15
207: aload         8
209: aload         15
211: invokevirtual #19
214: istore        16
216: aload_1
217: aload         8
219: putfield      #21
222: iconst_4
223: newarray       double
225: dup
226: iconst_0
227: ldc2_w        #10
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #12
236: dastore
237: dup
238: iconst_2
239: ldc2_w        #12
242: dastore
243: dup
244: iconst_3
245: ldc2_w        #10
248: dastore
249: astore        17
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: ldc2_w        #14
260: dastore
261: dup
262: iconst_1
263: ldc2_w        #14
266: dastore
267: dup
268: iconst_2
269: ldc2_w        #14
272: dastore
273: dup
274: iconst_3
275: dconst_0
276: dastore
277: dup
278: iconst_4
279: dconst_1
280: dastore
281: dup
282: iconst_5
283: ldc2_w        #10
286: dastore
287: astore        18
289: aload         17
291: aload         18
293: invokestatic  #16
296: dstore        19
298: new           #17
301: dup
302: aload         17
304: ldc2_w        #10
307: invokespecial #18
310: astore        21
312: aload         21
314: invokevirtual #149
317: astore        22
319: new           #48
322: dup
323: invokespecial #204
326: astore        23
328: aload         23
330: invokevirtual #272
333: astore        24
335: aload         21
337: aload         23
339: invokevirtual #19
342: istore        25
344: aload         23
346: invokevirtual #272
349: astore        26
351: aload         23
353: invokevirtual #273
356: astore        27
358: aload         27
360: invokeinterface #274,  1
365: astore        28
367: aload         8
369: aload         28
371: invokevirtual #19
374: istore        29
376: new           #31
379: dup
380: invokespecial #32
383: ldc           #33
385: invokevirtual #34
388: iload_2
389: invokevirtual #66
392: ldc           #36
394: invokevirtual #34
397: iconst_0
398: invokevirtual #66
401: ldc           #33
403: invokevirtual #34
406: invokevirtual #37
409: iload_2
410: ifne          417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #38
421: aload_3
422: invokestatic  #69
425: aload         4
427: invokestatic  #26
430: aload         4
432: invokestatic  #27
435: ldc           #28
437: invokestatic  #29
440: aload         5
442: invokestatic  #26
445: aload         5
447: invokestatic  #27
450: ldc           #30
452: invokestatic  #29
455: new           #31
458: dup
459: invokespecial #32
462: ldc           #33
464: invokevirtual #34
467: dload         6
469: invokevirtual #35
472: ldc           #36
474: invokevirtual #34
477: ldc2_w        #10
480: invokevirtual #35
483: ldc           #33
485: invokevirtual #34
488: invokevirtual #37
491: dload         6
493: ldc2_w        #10
496: dcmpl
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #38
508: aload         9
510: invokestatic  #26
513: new           #31
516: dup
517: invokespecial #32
520: ldc           #33
522: invokevirtual #34
525: dload         10
527: invokevirtual #35
530: ldc           #36
532: invokevirtual #34
535: ldc2_w        #10
538: invokevirtual #35
541: ldc           #33
543: invokevirtual #34
546: invokevirtual #37
549: dload         10
551: ldc2_w        #10
554: dcmpl
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #38
566: aload         12
568: invokestatic  #26
571: aload         12
573: invokestatic  #275
576: ldc_w         #276
579: invokestatic  #29
582: aload         12
584: invokestatic  #277
587: ldc_w         #276
590: invokestatic  #29
593: aload         15
595: invokestatic  #26
598: aload         15
600: invokestatic  #275
603: ldc_w         #276
606: invokestatic  #29
609: aload         15
611: invokestatic  #277
614: ldc_w         #276
617: invokestatic  #29
620: new           #31
623: dup
624: invokespecial #32
627: ldc           #33
629: invokevirtual #34
632: iload         16
634: invokevirtual #39
637: ldc           #36
639: invokevirtual #34
642: iconst_0
643: invokevirtual #39
646: ldc           #33
648: invokevirtual #34
651: invokevirtual #37
654: iload         16
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #38
667: aload         17
669: invokestatic  #26
672: aload         17
674: invokestatic  #27
677: ldc           #28
679: invokestatic  #29
682: aload         18
684: invokestatic  #26
687: aload         18
689: invokestatic  #27
692: ldc           #30
694: invokestatic  #29
697: new           #31
700: dup
701: invokespecial #32
704: ldc           #33
706: invokevirtual #34
709: dload         19
711: invokevirtual #35
714: ldc           #36
716: invokevirtual #34
719: ldc2_w        #10
722: invokevirtual #35
725: ldc           #33
727: invokevirtual #34
730: invokevirtual #37
733: dload         19
735: ldc2_w        #10
738: dcmpl
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #38
750: aload         22
752: invokestatic  #26
755: aload         24
757: invokestatic  #26
760: new           #31
763: dup
764: invokespecial #32
767: ldc           #33
769: invokevirtual #34
772: iload         25
774: invokevirtual #39
777: ldc           #36
779: invokevirtual #34
782: iconst_0
783: invokevirtual #39
786: ldc           #33
788: invokevirtual #34
791: invokevirtual #37
794: iload         25
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #38
807: aload         26
809: invokestatic  #26
812: aload         27
814: invokestatic  #26
817: aload         28
819: invokestatic  #26
822: new           #31
825: dup
826: invokespecial #32
829: ldc           #33
831: invokevirtual #34
834: iload         29
836: invokevirtual #39
839: ldc           #36
841: invokevirtual #34
844: iconst_0
845: invokevirtual #39
848: ldc           #33
850: invokevirtual #34
853: invokevirtual #37
856: iload         29
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #38
869: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 2238
End line: 2245
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 10L);
        int int2 = simplexSolver1.getIterations();
        simplexSolver1.restrictToNonNegative = false;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #14
32: invokespecial #9
35: astore_1
36: aload_1
37: invokevirtual #78
40: istore_2
41: aload_1
42: iconst_0
43: putfield      #71
46: new           #31
49: dup
50: invokespecial #32
53: ldc           #33
55: invokevirtual #34
58: iload_2
59: invokevirtual #66
62: ldc           #36
64: invokevirtual #34
67: iconst_0
68: invokevirtual #66
71: ldc           #33
73: invokevirtual #34
76: invokevirtual #37
79: iload_2
80: ifne          87
83: iconst_1
84: goto          88
87: iconst_0
88: invokestatic  #38
91: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 2248
End line: 2327
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        double[] doubleArray26 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double27 = linearObjectiveFunction16.getValue(doubleArray26);
        double[] doubleArray32 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray39 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double40 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray32, doubleArray39);
        boolean boolean41 = org.apache.commons.math.util.MathUtils.equals(doubleArray26, doubleArray32);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector45 = arrayRealVector44.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver47 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray52 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray59 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double60 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray52, doubleArray59);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction62 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray52, 100.0d);
        java.lang.Object obj63 = null;
        boolean boolean64 = linearObjectiveFunction62.equals(obj63);
        boolean boolean66 = linearObjectiveFunction62.equals((java.lang.Object) "hi!");
        simplexSolver47.f = linearObjectiveFunction62;
        double[] doubleArray72 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double73 = linearObjectiveFunction62.getValue(doubleArray72);
        double[] doubleArray78 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray85 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double86 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray78, doubleArray85);
        boolean boolean87 = org.apache.commons.math.util.MathUtils.equals(doubleArray72, doubleArray78);
        org.apache.commons.math.linear.RealVector realVector88 = arrayRealVector44.append(doubleArray72);
        double double89 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray26, doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector92 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26, (-1426542331), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.194558835742002E15d + "'", double27 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.0d + "'", double60 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2.194558835742002E15d + "'", double73 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 100.0d + "'", double86 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(realVector88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: iconst_4
147: newarray       double
149: dup
150: iconst_0
151: ldc2_w        #106
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #108
160: dastore
161: dup
162: iconst_2
163: dconst_1
164: dastore
165: dup
166: iconst_3
167: dconst_0
168: dastore
169: astore        10
171: aload         6
173: aload         10
175: invokevirtual #110
178: dstore        11
180: iconst_4
181: newarray       double
183: dup
184: iconst_0
185: ldc2_w        #10
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #12
194: dastore
195: dup
196: iconst_2
197: ldc2_w        #12
200: dastore
201: dup
202: iconst_3
203: ldc2_w        #10
206: dastore
207: astore        13
209: bipush        6
211: newarray       double
213: dup
214: iconst_0
215: ldc2_w        #14
218: dastore
219: dup
220: iconst_1
221: ldc2_w        #14
224: dastore
225: dup
226: iconst_2
227: ldc2_w        #14
230: dastore
231: dup
232: iconst_3
233: dconst_0
234: dastore
235: dup
236: iconst_4
237: dconst_1
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #10
244: dastore
245: astore        14
247: aload         13
249: aload         14
251: invokestatic  #16
254: dstore        15
256: aload         10
258: aload         13
260: invokestatic  #111
263: istore        17
265: new           #48
268: dup
269: iconst_0
270: ldc2_w        #12
273: invokespecial #104
276: astore        18
278: aload         18
280: invokevirtual #105
283: astore        19
285: new           #8
288: dup
289: dconst_0
290: invokespecial #9
293: astore        20
295: iconst_4
296: newarray       double
298: dup
299: iconst_0
300: ldc2_w        #10
303: dastore
304: dup
305: iconst_1
306: ldc2_w        #12
309: dastore
310: dup
311: iconst_2
312: ldc2_w        #12
315: dastore
316: dup
317: iconst_3
318: ldc2_w        #10
321: dastore
322: astore        21
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: ldc2_w        #14
333: dastore
334: dup
335: iconst_1
336: ldc2_w        #14
339: dastore
340: dup
341: iconst_2
342: ldc2_w        #14
345: dastore
346: dup
347: iconst_3
348: dconst_0
349: dastore
350: dup
351: iconst_4
352: dconst_1
353: dastore
354: dup
355: iconst_5
356: ldc2_w        #10
359: dastore
360: astore        22
362: aload         21
364: aload         22
366: invokestatic  #16
369: dstore        23
371: new           #17
374: dup
375: aload         21
377: ldc2_w        #10
380: invokespecial #18
383: astore        25
385: aconst_null
386: astore        26
388: aload         25
390: aload         26
392: invokevirtual #19
395: istore        27
397: aload         25
399: ldc           #20
401: invokevirtual #19
404: istore        28
406: aload         20
408: aload         25
410: putfield      #21
413: iconst_4
414: newarray       double
416: dup
417: iconst_0
418: ldc2_w        #106
421: dastore
422: dup
423: iconst_1
424: ldc2_w        #108
427: dastore
428: dup
429: iconst_2
430: dconst_1
431: dastore
432: dup
433: iconst_3
434: dconst_0
435: dastore
436: astore        29
438: aload         25
440: aload         29
442: invokevirtual #110
445: dstore        30
447: iconst_4
448: newarray       double
450: dup
451: iconst_0
452: ldc2_w        #10
455: dastore
456: dup
457: iconst_1
458: ldc2_w        #12
461: dastore
462: dup
463: iconst_2
464: ldc2_w        #12
467: dastore
468: dup
469: iconst_3
470: ldc2_w        #10
473: dastore
474: astore        32
476: bipush        6
478: newarray       double
480: dup
481: iconst_0
482: ldc2_w        #14
485: dastore
486: dup
487: iconst_1
488: ldc2_w        #14
491: dastore
492: dup
493: iconst_2
494: ldc2_w        #14
497: dastore
498: dup
499: iconst_3
500: dconst_0
501: dastore
502: dup
503: iconst_4
504: dconst_1
505: dastore
506: dup
507: iconst_5
508: ldc2_w        #10
511: dastore
512: astore        33
514: aload         32
516: aload         33
518: invokestatic  #16
521: dstore        34
523: aload         29
525: aload         32
527: invokestatic  #111
530: istore        36
532: aload         18
534: aload         29
536: invokevirtual #112
539: astore        37
541: aload         10
543: aload         29
545: invokestatic  #16
548: dstore        38
550: new           #48
553: dup
554: aload         10
556: ldc_w         #280
559: bipush        100
561: invokespecial #49
564: astore        40
566: ldc_w         #281
569: invokestatic  #24
572: goto          577
575: astore        40
577: aload_2
578: invokestatic  #26
581: aload_2
582: invokestatic  #27
585: ldc           #28
587: invokestatic  #29
590: aload_3
591: invokestatic  #26
594: aload_3
595: invokestatic  #27
598: ldc           #30
600: invokestatic  #29
603: new           #31
606: dup
607: invokespecial #32
610: ldc           #33
612: invokevirtual #34
615: dload         4
617: invokevirtual #35
620: ldc           #36
622: invokevirtual #34
625: ldc2_w        #10
628: invokevirtual #35
631: ldc           #33
633: invokevirtual #34
636: invokevirtual #37
639: dload         4
641: ldc2_w        #10
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #38
656: new           #31
659: dup
660: invokespecial #32
663: ldc           #33
665: invokevirtual #34
668: iload         8
670: invokevirtual #39
673: ldc           #36
675: invokevirtual #34
678: iconst_0
679: invokevirtual #39
682: ldc           #33
684: invokevirtual #34
687: invokevirtual #37
690: iload         8
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #38
703: new           #31
706: dup
707: invokespecial #32
710: ldc           #33
712: invokevirtual #34
715: iload         9
717: invokevirtual #39
720: ldc           #36
722: invokevirtual #34
725: iconst_0
726: invokevirtual #39
729: ldc           #33
731: invokevirtual #34
734: invokevirtual #37
737: iload         9
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #38
750: aload         10
752: invokestatic  #26
755: aload         10
757: invokestatic  #27
760: ldc           #116
762: invokestatic  #29
765: new           #31
768: dup
769: invokespecial #32
772: ldc           #33
774: invokevirtual #34
777: dload         11
779: invokevirtual #35
782: ldc           #36
784: invokevirtual #34
787: ldc2_w        #117
790: invokevirtual #35
793: ldc           #33
795: invokevirtual #34
798: invokevirtual #37
801: dload         11
803: ldc2_w        #117
806: dcmpl
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #38
818: aload         13
820: invokestatic  #26
823: aload         13
825: invokestatic  #27
828: ldc           #28
830: invokestatic  #29
833: aload         14
835: invokestatic  #26
838: aload         14
840: invokestatic  #27
843: ldc           #30
845: invokestatic  #29
848: new           #31
851: dup
852: invokespecial #32
855: ldc           #33
857: invokevirtual #34
860: dload         15
862: invokevirtual #35
865: ldc           #36
867: invokevirtual #34
870: ldc2_w        #10
873: invokevirtual #35
876: ldc           #33
878: invokevirtual #34
881: invokevirtual #37
884: dload         15
886: ldc2_w        #10
889: dcmpl
890: ifne          897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #38
901: new           #31
904: dup
905: invokespecial #32
908: ldc           #33
910: invokevirtual #34
913: iload         17
915: invokevirtual #39
918: ldc           #36
920: invokevirtual #34
923: iconst_0
924: invokevirtual #39
927: ldc           #33
929: invokevirtual #34
932: invokevirtual #37
935: iload         17
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #38
948: aload         19
950: invokestatic  #26
953: aload         21
955: invokestatic  #26
958: aload         21
960: invokestatic  #27
963: ldc           #28
965: invokestatic  #29
968: aload         22
970: invokestatic  #26
973: aload         22
975: invokestatic  #27
978: ldc           #30
980: invokestatic  #29
983: new           #31
986: dup
987: invokespecial #32
990: ldc           #33
992: invokevirtual #34
995: dload         23
997: invokevirtual #35
1000: ldc           #36
1002: invokevirtual #34
1005: ldc2_w        #10
1008: invokevirtual #35
1011: ldc           #33
1013: invokevirtual #34
1016: invokevirtual #37
1019: dload         23
1021: ldc2_w        #10
1024: dcmpl
1025: ifne          1032
1028: iconst_1
1029: goto          1033
1032: iconst_0
1033: invokestatic  #38
1036: new           #31
1039: dup
1040: invokespecial #32
1043: ldc           #33
1045: invokevirtual #34
1048: iload         27
1050: invokevirtual #39
1053: ldc           #36
1055: invokevirtual #34
1058: iconst_0
1059: invokevirtual #39
1062: ldc           #33
1064: invokevirtual #34
1067: invokevirtual #37
1070: iload         27
1072: ifne          1079
1075: iconst_1
1076: goto          1080
1079: iconst_0
1080: invokestatic  #38
1083: new           #31
1086: dup
1087: invokespecial #32
1090: ldc           #33
1092: invokevirtual #34
1095: iload         28
1097: invokevirtual #39
1100: ldc           #36
1102: invokevirtual #34
1105: iconst_0
1106: invokevirtual #39
1109: ldc           #33
1111: invokevirtual #34
1114: invokevirtual #37
1117: iload         28
1119: ifne          1126
1122: iconst_1
1123: goto          1127
1126: iconst_0
1127: invokestatic  #38
1130: aload         29
1132: invokestatic  #26
1135: aload         29
1137: invokestatic  #27
1140: ldc           #116
1142: invokestatic  #29
1145: new           #31
1148: dup
1149: invokespecial #32
1152: ldc           #33
1154: invokevirtual #34
1157: dload         30
1159: invokevirtual #35
1162: ldc           #36
1164: invokevirtual #34
1167: ldc2_w        #117
1170: invokevirtual #35
1173: ldc           #33
1175: invokevirtual #34
1178: invokevirtual #37
1181: dload         30
1183: ldc2_w        #117
1186: dcmpl
1187: ifne          1194
1190: iconst_1
1191: goto          1195
1194: iconst_0
1195: invokestatic  #38
1198: aload         32
1200: invokestatic  #26
1203: aload         32
1205: invokestatic  #27
1208: ldc           #28
1210: invokestatic  #29
1213: aload         33
1215: invokestatic  #26
1218: aload         33
1220: invokestatic  #27
1223: ldc           #30
1225: invokestatic  #29
1228: new           #31
1231: dup
1232: invokespecial #32
1235: ldc           #33
1237: invokevirtual #34
1240: dload         34
1242: invokevirtual #35
1245: ldc           #36
1247: invokevirtual #34
1250: ldc2_w        #10
1253: invokevirtual #35
1256: ldc           #33
1258: invokevirtual #34
1261: invokevirtual #37
1264: dload         34
1266: ldc2_w        #10
1269: dcmpl
1270: ifne          1277
1273: iconst_1
1274: goto          1278
1277: iconst_0
1278: invokestatic  #38
1281: new           #31
1284: dup
1285: invokespecial #32
1288: ldc           #33
1290: invokevirtual #34
1293: iload         36
1295: invokevirtual #39
1298: ldc           #36
1300: invokevirtual #34
1303: iconst_0
1304: invokevirtual #39
1307: ldc           #33
1309: invokevirtual #34
1312: invokevirtual #37
1315: iload         36
1317: ifne          1324
1320: iconst_1
1321: goto          1325
1324: iconst_0
1325: invokestatic  #38
1328: aload         37
1330: invokestatic  #26
1333: new           #31
1336: dup
1337: invokespecial #32
1340: ldc           #33
1342: invokevirtual #34
1345: dload         38
1347: invokevirtual #35
1350: ldc           #36
1352: invokevirtual #34
1355: dconst_0
1356: invokevirtual #35
1359: ldc           #33
1361: invokevirtual #34
1364: invokevirtual #37
1367: dload         38
1369: dconst_0
1370: dcmpl
1371: ifne          1378
1374: iconst_1
1375: goto          1379
1378: iconst_0
1379: invokestatic  #38
1382: return
Exception table:
from    to  target type
550   572   575   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 2330
End line: 2396
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        boolean boolean19 = arrayRealVector15.equals((java.lang.Object) 929961857);
        double[] doubleArray24 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray31 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double32 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray24, doubleArray31);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector35.mapAtan();
        org.apache.commons.math.linear.RealVector realVector37 = arrayRealVector35.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector15.projection((org.apache.commons.math.linear.RealVector) arrayRealVector35);
        boolean boolean39 = arrayRealVector15.isInfinite();
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector15.mapSqrt();
        org.apache.commons.math.linear.RealVector realVector41 = arrayRealVector15.mapLog();
        org.apache.commons.math.linear.RealVector realVector42 = arrayRealVector15.mapAbsToSelf();
        double[] doubleArray47 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray54 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double55 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray47, doubleArray54);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray47, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector58.mapAtan();
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector58.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector58.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver62 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType63 = simplexSolver62.goalType;
        boolean boolean64 = arrayRealVector58.equals((java.lang.Object) goalType63);
        org.apache.commons.math.linear.RealVector realVector65 = arrayRealVector58.mapCbrt();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector15, arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector67 = arrayRealVector58.mapSin();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0d + "'", double32 == 100.0d);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNull(goalType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #283
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #10
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #12
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #12
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #10
51: dastore
52: astore_1
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #14
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #14
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #10
88: dastore
89: astore_2
90: aload_1
91: aload_2
92: invokestatic  #16
95: dstore_3
96: new           #48
99: dup
100: aload_1
101: iconst_1
102: iconst_0
103: invokespecial #49
106: astore        5
108: aload         5
110: invokevirtual #50
113: astore        6
115: aload         5
117: invokevirtual #91
120: astore        7
122: aload         5
124: ldc_w         #268
127: invokestatic  #263
130: invokevirtual #93
133: istore        8
135: iconst_4
136: newarray       double
138: dup
139: iconst_0
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_1
146: ldc2_w        #12
149: dastore
150: dup
151: iconst_2
152: ldc2_w        #12
155: dastore
156: dup
157: iconst_3
158: ldc2_w        #10
161: dastore
162: astore        9
164: bipush        6
166: newarray       double
168: dup
169: iconst_0
170: ldc2_w        #14
173: dastore
174: dup
175: iconst_1
176: ldc2_w        #14
179: dastore
180: dup
181: iconst_2
182: ldc2_w        #14
185: dastore
186: dup
187: iconst_3
188: dconst_0
189: dastore
190: dup
191: iconst_4
192: dconst_1
193: dastore
194: dup
195: iconst_5
196: ldc2_w        #10
199: dastore
200: astore        10
202: aload         9
204: aload         10
206: invokestatic  #16
209: dstore        11
211: new           #48
214: dup
215: aload         9
217: iconst_1
218: iconst_0
219: invokespecial #49
222: astore        13
224: aload         13
226: invokevirtual #50
229: astore        14
231: aload         13
233: invokevirtual #91
236: astore        15
238: aload         5
240: aload         13
242: invokevirtual #132
245: astore        16
247: aload         5
249: invokevirtual #284
252: istore        17
254: aload         5
256: invokevirtual #212
259: astore        18
261: aload         5
263: invokevirtual #285
266: astore        19
268: aload         5
270: invokevirtual #286
273: astore        20
275: iconst_4
276: newarray       double
278: dup
279: iconst_0
280: ldc2_w        #10
283: dastore
284: dup
285: iconst_1
286: ldc2_w        #12
289: dastore
290: dup
291: iconst_2
292: ldc2_w        #12
295: dastore
296: dup
297: iconst_3
298: ldc2_w        #10
301: dastore
302: astore        21
304: bipush        6
306: newarray       double
308: dup
309: iconst_0
310: ldc2_w        #14
313: dastore
314: dup
315: iconst_1
316: ldc2_w        #14
319: dastore
320: dup
321: iconst_2
322: ldc2_w        #14
325: dastore
326: dup
327: iconst_3
328: dconst_0
329: dastore
330: dup
331: iconst_4
332: dconst_1
333: dastore
334: dup
335: iconst_5
336: ldc2_w        #10
339: dastore
340: astore        22
342: aload         21
344: aload         22
346: invokestatic  #16
349: dstore        23
351: new           #48
354: dup
355: aload         21
357: iconst_1
358: iconst_0
359: invokespecial #49
362: astore        25
364: aload         25
366: invokevirtual #50
369: astore        26
371: aload         25
373: invokevirtual #91
376: astore        27
378: aload         25
380: invokevirtual #92
383: astore        28
385: new           #8
388: dup
389: invokespecial #41
392: astore        29
394: aload         29
396: getfield      #68
399: astore        30
401: aload         25
403: aload         30
405: invokevirtual #93
408: istore        31
410: aload         25
412: invokevirtual #122
415: astore        32
417: new           #48
420: dup
421: aload         5
423: aload         25
425: invokespecial #217
428: astore        33
430: aload         25
432: invokevirtual #287
435: astore        34
437: aload_1
438: invokestatic  #26
441: aload_1
442: invokestatic  #27
445: ldc           #28
447: invokestatic  #29
450: aload_2
451: invokestatic  #26
454: aload_2
455: invokestatic  #27
458: ldc           #30
460: invokestatic  #29
463: new           #31
466: dup
467: invokespecial #32
470: ldc           #33
472: invokevirtual #34
475: dload_3
476: invokevirtual #35
479: ldc           #36
481: invokevirtual #34
484: ldc2_w        #10
487: invokevirtual #35
490: ldc           #33
492: invokevirtual #34
495: invokevirtual #37
498: dload_3
499: ldc2_w        #10
502: dcmpl
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #38
514: aload         6
516: invokestatic  #26
519: aload         7
521: invokestatic  #26
524: new           #31
527: dup
528: invokespecial #32
531: ldc           #33
533: invokevirtual #34
536: iload         8
538: invokevirtual #39
541: ldc           #36
543: invokevirtual #34
546: iconst_0
547: invokevirtual #39
550: ldc           #33
552: invokevirtual #34
555: invokevirtual #37
558: iload         8
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #38
571: aload         9
573: invokestatic  #26
576: aload         9
578: invokestatic  #27
581: ldc           #28
583: invokestatic  #29
586: aload         10
588: invokestatic  #26
591: aload         10
593: invokestatic  #27
596: ldc           #30
598: invokestatic  #29
601: new           #31
604: dup
605: invokespecial #32
608: ldc           #33
610: invokevirtual #34
613: dload         11
615: invokevirtual #35
618: ldc           #36
620: invokevirtual #34
623: ldc2_w        #10
626: invokevirtual #35
629: ldc           #33
631: invokevirtual #34
634: invokevirtual #37
637: dload         11
639: ldc2_w        #10
642: dcmpl
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #38
654: aload         14
656: invokestatic  #26
659: aload         15
661: invokestatic  #26
664: aload         16
666: invokestatic  #26
669: new           #31
672: dup
673: invokespecial #32
676: ldc           #33
678: invokevirtual #34
681: iload         17
683: invokevirtual #39
686: ldc           #36
688: invokevirtual #34
691: iconst_0
692: invokevirtual #39
695: ldc           #33
697: invokevirtual #34
700: invokevirtual #37
703: iload         17
705: ifne          712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #38
716: aload         18
718: invokestatic  #26
721: aload         19
723: invokestatic  #26
726: aload         20
728: invokestatic  #26
731: aload         21
733: invokestatic  #26
736: aload         21
738: invokestatic  #27
741: ldc           #28
743: invokestatic  #29
746: aload         22
748: invokestatic  #26
751: aload         22
753: invokestatic  #27
756: ldc           #30
758: invokestatic  #29
761: new           #31
764: dup
765: invokespecial #32
768: ldc           #33
770: invokevirtual #34
773: dload         23
775: invokevirtual #35
778: ldc           #36
780: invokevirtual #34
783: ldc2_w        #10
786: invokevirtual #35
789: ldc           #33
791: invokevirtual #34
794: invokevirtual #37
797: dload         23
799: ldc2_w        #10
802: dcmpl
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #38
814: aload         26
816: invokestatic  #26
819: aload         27
821: invokestatic  #26
824: aload         28
826: invokestatic  #26
829: aload         30
831: invokestatic  #69
834: new           #31
837: dup
838: invokespecial #32
841: ldc           #33
843: invokevirtual #34
846: iload         31
848: invokevirtual #39
851: ldc           #36
853: invokevirtual #34
856: iconst_0
857: invokevirtual #39
860: ldc           #33
862: invokevirtual #34
865: invokevirtual #37
868: iload         31
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #38
881: aload         32
883: invokestatic  #26
886: aload         34
888: invokestatic  #26
891: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 2399
End line: 2411
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction3 = simplexSolver1.f;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction4 = simplexSolver1.f;
        org.apache.commons.math.optimization.GoalType goalType5 = simplexSolver1.goalType;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(linearObjectiveFunction3);
        org.junit.Assert.assertNull(linearObjectiveFunction4);
        org.junit.Assert.assertNull(goalType5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #21
43: astore_3
44: aload_1
45: getfield      #21
48: astore        4
50: aload_1
51: getfield      #68
54: astore        5
56: new           #31
59: dup
60: invokespecial #32
63: ldc           #33
65: invokevirtual #34
68: iload_2
69: invokevirtual #66
72: ldc           #36
74: invokevirtual #34
77: iconst_0
78: invokevirtual #66
81: ldc           #33
83: invokevirtual #34
86: invokevirtual #37
89: iload_2
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #38
101: aload_3
102: invokestatic  #69
105: aload         4
107: invokestatic  #69
110: aload         5
112: invokestatic  #69
115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 2414
End line: 2438
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        simplexSolver1.restrictToNonNegative = false;
        simplexSolver1.setMaxIterations((-30));
        org.apache.commons.math.optimization.GoalType goalType28 = simplexSolver1.goalType;
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(goalType28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #289
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: aload_1
147: bipush        10
149: invokevirtual #61
152: aload_1
153: iconst_0
154: putfield      #71
157: aload_1
158: bipush        -30
160: invokevirtual #61
163: aload_1
164: getfield      #68
167: astore        10
169: aload_2
170: invokestatic  #26
173: aload_2
174: invokestatic  #27
177: ldc           #28
179: invokestatic  #29
182: aload_3
183: invokestatic  #26
186: aload_3
187: invokestatic  #27
190: ldc           #30
192: invokestatic  #29
195: new           #31
198: dup
199: invokespecial #32
202: ldc           #33
204: invokevirtual #34
207: dload         4
209: invokevirtual #35
212: ldc           #36
214: invokevirtual #34
217: ldc2_w        #10
220: invokevirtual #35
223: ldc           #33
225: invokevirtual #34
228: invokevirtual #37
231: dload         4
233: ldc2_w        #10
236: dcmpl
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #38
248: new           #31
251: dup
252: invokespecial #32
255: ldc           #33
257: invokevirtual #34
260: iload         8
262: invokevirtual #39
265: ldc           #36
267: invokevirtual #34
270: iconst_0
271: invokevirtual #39
274: ldc           #33
276: invokevirtual #34
279: invokevirtual #37
282: iload         8
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #38
295: new           #31
298: dup
299: invokespecial #32
302: ldc           #33
304: invokevirtual #34
307: iload         9
309: invokevirtual #39
312: ldc           #36
314: invokevirtual #34
317: iconst_0
318: invokevirtual #39
321: ldc           #33
323: invokevirtual #34
326: invokevirtual #37
329: iload         9
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #38
342: aload         10
344: invokestatic  #69
347: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 2441
End line: 2454
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.GoalType goalType4 = simplexSolver0.goalType;
        boolean boolean5 = simplexSolver0.restrictToNonNegative;
        int int6 = simplexSolver0.getIterations();
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: getfield      #68
37: astore_2
38: aload_1
39: bipush        -50
41: invokevirtual #61
44: aload_1
45: getfield      #68
48: astore_3
49: aload_1
50: getfield      #71
53: istore        4
55: aload_1
56: invokevirtual #78
59: istore        5
61: aload_2
62: invokestatic  #69
65: aload_3
66: invokestatic  #69
69: new           #31
72: dup
73: invokespecial #32
76: ldc           #33
78: invokevirtual #34
81: iload         4
83: invokevirtual #39
86: ldc           #36
88: invokevirtual #34
91: iconst_0
92: invokevirtual #39
95: ldc           #33
97: invokevirtual #34
100: invokevirtual #37
103: iload         4
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #38
116: new           #31
119: dup
120: invokespecial #32
123: ldc           #33
125: invokevirtual #34
128: iload         5
130: invokevirtual #66
133: ldc           #36
135: invokevirtual #34
138: iconst_0
139: invokevirtual #66
142: ldc           #33
144: invokevirtual #34
147: invokevirtual #37
150: iload         5
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #38
163: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 2457
End line: 2463
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 2);
        double double2 = simplexSolver1.epsilon;
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 2.0d + "'", double2 == 2.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #292
32: invokespecial #9
35: astore_1
36: aload_1
37: getfield      #75
40: dstore_2
41: new           #31
44: dup
45: invokespecial #32
48: ldc           #33
50: invokevirtual #34
53: dload_2
54: invokevirtual #35
57: ldc           #36
59: invokevirtual #34
62: ldc2_w        #292
65: invokevirtual #35
68: ldc           #33
70: invokevirtual #34
73: invokevirtual #37
76: dload_2
77: ldc2_w        #292
80: dcmpl
81: ifne          88
84: iconst_1
85: goto          89
88: iconst_0
89: invokestatic  #38
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 2466
End line: 2509
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector2.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver5 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        boolean boolean24 = linearObjectiveFunction20.equals((java.lang.Object) "hi!");
        simplexSolver5.f = linearObjectiveFunction20;
        double[] doubleArray30 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double31 = linearObjectiveFunction20.getValue(doubleArray30);
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        boolean boolean45 = org.apache.commons.math.util.MathUtils.equals(doubleArray30, doubleArray36);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector2.append(doubleArray30);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector2.copy();
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector2.mapSubtractToSelf((double) (-1650));
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.194558835742002E15d + "'", double31 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #48
28: dup
29: iconst_0
30: ldc2_w        #12
33: invokespecial #104
36: astore_1
37: aload_1
38: invokevirtual #105
41: astore_2
42: new           #8
45: dup
46: dconst_0
47: invokespecial #9
50: astore_3
51: iconst_4
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #10
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #12
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #12
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #10
77: dastore
78: astore        4
80: bipush        6
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #14
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #14
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #14
101: dastore
102: dup
103: iconst_3
104: dconst_0
105: dastore
106: dup
107: iconst_4
108: dconst_1
109: dastore
110: dup
111: iconst_5
112: ldc2_w        #10
115: dastore
116: astore        5
118: aload         4
120: aload         5
122: invokestatic  #16
125: dstore        6
127: new           #17
130: dup
131: aload         4
133: ldc2_w        #10
136: invokespecial #18
139: astore        8
141: aconst_null
142: astore        9
144: aload         8
146: aload         9
148: invokevirtual #19
151: istore        10
153: aload         8
155: ldc           #20
157: invokevirtual #19
160: istore        11
162: aload_3
163: aload         8
165: putfield      #21
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: ldc2_w        #106
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #108
182: dastore
183: dup
184: iconst_2
185: dconst_1
186: dastore
187: dup
188: iconst_3
189: dconst_0
190: dastore
191: astore        12
193: aload         8
195: aload         12
197: invokevirtual #110
200: dstore        13
202: iconst_4
203: newarray       double
205: dup
206: iconst_0
207: ldc2_w        #10
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #12
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #12
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #10
228: dastore
229: astore        15
231: bipush        6
233: newarray       double
235: dup
236: iconst_0
237: ldc2_w        #14
240: dastore
241: dup
242: iconst_1
243: ldc2_w        #14
246: dastore
247: dup
248: iconst_2
249: ldc2_w        #14
252: dastore
253: dup
254: iconst_3
255: dconst_0
256: dastore
257: dup
258: iconst_4
259: dconst_1
260: dastore
261: dup
262: iconst_5
263: ldc2_w        #10
266: dastore
267: astore        16
269: aload         15
271: aload         16
273: invokestatic  #16
276: dstore        17
278: aload         12
280: aload         15
282: invokestatic  #111
285: istore        19
287: aload_1
288: aload         12
290: invokevirtual #112
293: astore        20
295: aload_1
296: invokevirtual #295
299: astore        21
301: aload_1
302: ldc2_w        #296
305: invokevirtual #298
308: astore        22
310: aload_2
311: invokestatic  #26
314: aload         4
316: invokestatic  #26
319: aload         4
321: invokestatic  #27
324: ldc           #28
326: invokestatic  #29
329: aload         5
331: invokestatic  #26
334: aload         5
336: invokestatic  #27
339: ldc           #30
341: invokestatic  #29
344: new           #31
347: dup
348: invokespecial #32
351: ldc           #33
353: invokevirtual #34
356: dload         6
358: invokevirtual #35
361: ldc           #36
363: invokevirtual #34
366: ldc2_w        #10
369: invokevirtual #35
372: ldc           #33
374: invokevirtual #34
377: invokevirtual #37
380: dload         6
382: ldc2_w        #10
385: dcmpl
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #38
397: new           #31
400: dup
401: invokespecial #32
404: ldc           #33
406: invokevirtual #34
409: iload         10
411: invokevirtual #39
414: ldc           #36
416: invokevirtual #34
419: iconst_0
420: invokevirtual #39
423: ldc           #33
425: invokevirtual #34
428: invokevirtual #37
431: iload         10
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #38
444: new           #31
447: dup
448: invokespecial #32
451: ldc           #33
453: invokevirtual #34
456: iload         11
458: invokevirtual #39
461: ldc           #36
463: invokevirtual #34
466: iconst_0
467: invokevirtual #39
470: ldc           #33
472: invokevirtual #34
475: invokevirtual #37
478: iload         11
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #38
491: aload         12
493: invokestatic  #26
496: aload         12
498: invokestatic  #27
501: ldc           #116
503: invokestatic  #29
506: new           #31
509: dup
510: invokespecial #32
513: ldc           #33
515: invokevirtual #34
518: dload         13
520: invokevirtual #35
523: ldc           #36
525: invokevirtual #34
528: ldc2_w        #117
531: invokevirtual #35
534: ldc           #33
536: invokevirtual #34
539: invokevirtual #37
542: dload         13
544: ldc2_w        #117
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #38
559: aload         15
561: invokestatic  #26
564: aload         15
566: invokestatic  #27
569: ldc           #28
571: invokestatic  #29
574: aload         16
576: invokestatic  #26
579: aload         16
581: invokestatic  #27
584: ldc           #30
586: invokestatic  #29
589: new           #31
592: dup
593: invokespecial #32
596: ldc           #33
598: invokevirtual #34
601: dload         17
603: invokevirtual #35
606: ldc           #36
608: invokevirtual #34
611: ldc2_w        #10
614: invokevirtual #35
617: ldc           #33
619: invokevirtual #34
622: invokevirtual #37
625: dload         17
627: ldc2_w        #10
630: dcmpl
631: ifne          638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #38
642: new           #31
645: dup
646: invokespecial #32
649: ldc           #33
651: invokevirtual #34
654: iload         19
656: invokevirtual #39
659: ldc           #36
661: invokevirtual #34
664: iconst_0
665: invokevirtual #39
668: ldc           #33
670: invokevirtual #34
673: invokevirtual #37
676: iload         19
678: ifne          685
681: iconst_1
682: goto          686
685: iconst_0
686: invokestatic  #38
689: aload         20
691: invokestatic  #26
694: aload         21
696: invokestatic  #26
699: aload         22
701: invokestatic  #26
704: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 2512
End line: 2585
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapAtanToSelf();
        double[] doubleArray23 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray30 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double31 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray23, doubleArray30);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray23, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector35 = arrayRealVector34.mapLog10ToSelf();
        double double36 = arrayRealVector15.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector34);
        boolean boolean37 = arrayRealVector34.isInfinite();
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector34.mapRint();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector42 = arrayRealVector41.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver44 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray49 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray56 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double57 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray49, doubleArray56);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction59 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray49, 100.0d);
        java.lang.Object obj60 = null;
        boolean boolean61 = linearObjectiveFunction59.equals(obj60);
        boolean boolean63 = linearObjectiveFunction59.equals((java.lang.Object) "hi!");
        simplexSolver44.f = linearObjectiveFunction59;
        double[] doubleArray69 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double70 = linearObjectiveFunction59.getValue(doubleArray69);
        double[] doubleArray75 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray82 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double83 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray75, doubleArray82);
        boolean boolean84 = org.apache.commons.math.util.MathUtils.equals(doubleArray69, doubleArray75);
        org.apache.commons.math.linear.RealVector realVector85 = arrayRealVector41.append(doubleArray69);
        double double86 = arrayRealVector34.getL1Distance(arrayRealVector41);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2.194558835742002E15d + "'", double70 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 100.0d + "'", double83 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(realVector85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #299
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #10
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #12
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #12
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #10
51: dastore
52: astore_1
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #14
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #14
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #10
88: dastore
89: astore_2
90: aload_1
91: aload_2
92: invokestatic  #16
95: dstore_3
96: new           #48
99: dup
100: aload_1
101: iconst_1
102: iconst_0
103: invokespecial #49
106: astore        5
108: aload         5
110: invokevirtual #50
113: astore        6
115: aload         5
117: invokevirtual #91
120: astore        7
122: aload         5
124: invokevirtual #114
127: astore        8
129: iconst_4
130: newarray       double
132: dup
133: iconst_0
134: ldc2_w        #10
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #12
143: dastore
144: dup
145: iconst_2
146: ldc2_w        #12
149: dastore
150: dup
151: iconst_3
152: ldc2_w        #10
155: dastore
156: astore        9
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #14
167: dastore
168: dup
169: iconst_1
170: ldc2_w        #14
173: dastore
174: dup
175: iconst_2
176: ldc2_w        #14
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #10
193: dastore
194: astore        10
196: aload         9
198: aload         10
200: invokestatic  #16
203: dstore        11
205: new           #48
208: dup
209: aload         9
211: iconst_1
212: iconst_0
213: invokespecial #49
216: astore        13
218: aload         13
220: invokevirtual #300
223: astore        14
225: aload         5
227: aload         13
229: invokevirtual #301
232: dstore        15
234: aload         13
236: invokevirtual #284
239: istore        17
241: aload         13
243: invokevirtual #302
246: astore        18
248: new           #48
251: dup
252: iconst_0
253: ldc2_w        #12
256: invokespecial #104
259: astore        19
261: aload         19
263: invokevirtual #105
266: astore        20
268: new           #8
271: dup
272: dconst_0
273: invokespecial #9
276: astore        21
278: iconst_4
279: newarray       double
281: dup
282: iconst_0
283: ldc2_w        #10
286: dastore
287: dup
288: iconst_1
289: ldc2_w        #12
292: dastore
293: dup
294: iconst_2
295: ldc2_w        #12
298: dastore
299: dup
300: iconst_3
301: ldc2_w        #10
304: dastore
305: astore        22
307: bipush        6
309: newarray       double
311: dup
312: iconst_0
313: ldc2_w        #14
316: dastore
317: dup
318: iconst_1
319: ldc2_w        #14
322: dastore
323: dup
324: iconst_2
325: ldc2_w        #14
328: dastore
329: dup
330: iconst_3
331: dconst_0
332: dastore
333: dup
334: iconst_4
335: dconst_1
336: dastore
337: dup
338: iconst_5
339: ldc2_w        #10
342: dastore
343: astore        23
345: aload         22
347: aload         23
349: invokestatic  #16
352: dstore        24
354: new           #17
357: dup
358: aload         22
360: ldc2_w        #10
363: invokespecial #18
366: astore        26
368: aconst_null
369: astore        27
371: aload         26
373: aload         27
375: invokevirtual #19
378: istore        28
380: aload         26
382: ldc           #20
384: invokevirtual #19
387: istore        29
389: aload         21
391: aload         26
393: putfield      #21
396: iconst_4
397: newarray       double
399: dup
400: iconst_0
401: ldc2_w        #106
404: dastore
405: dup
406: iconst_1
407: ldc2_w        #108
410: dastore
411: dup
412: iconst_2
413: dconst_1
414: dastore
415: dup
416: iconst_3
417: dconst_0
418: dastore
419: astore        30
421: aload         26
423: aload         30
425: invokevirtual #110
428: dstore        31
430: iconst_4
431: newarray       double
433: dup
434: iconst_0
435: ldc2_w        #10
438: dastore
439: dup
440: iconst_1
441: ldc2_w        #12
444: dastore
445: dup
446: iconst_2
447: ldc2_w        #12
450: dastore
451: dup
452: iconst_3
453: ldc2_w        #10
456: dastore
457: astore        33
459: bipush        6
461: newarray       double
463: dup
464: iconst_0
465: ldc2_w        #14
468: dastore
469: dup
470: iconst_1
471: ldc2_w        #14
474: dastore
475: dup
476: iconst_2
477: ldc2_w        #14
480: dastore
481: dup
482: iconst_3
483: dconst_0
484: dastore
485: dup
486: iconst_4
487: dconst_1
488: dastore
489: dup
490: iconst_5
491: ldc2_w        #10
494: dastore
495: astore        34
497: aload         33
499: aload         34
501: invokestatic  #16
504: dstore        35
506: aload         30
508: aload         33
510: invokestatic  #111
513: istore        37
515: aload         19
517: aload         30
519: invokevirtual #112
522: astore        38
524: aload         13
526: aload         19
528: invokevirtual #303
531: dstore        39
533: aload_1
534: invokestatic  #26
537: aload_1
538: invokestatic  #27
541: ldc           #28
543: invokestatic  #29
546: aload_2
547: invokestatic  #26
550: aload_2
551: invokestatic  #27
554: ldc           #30
556: invokestatic  #29
559: new           #31
562: dup
563: invokespecial #32
566: ldc           #33
568: invokevirtual #34
571: dload_3
572: invokevirtual #35
575: ldc           #36
577: invokevirtual #34
580: ldc2_w        #10
583: invokevirtual #35
586: ldc           #33
588: invokevirtual #34
591: invokevirtual #37
594: dload_3
595: ldc2_w        #10
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #38
610: aload         6
612: invokestatic  #26
615: aload         7
617: invokestatic  #26
620: aload         8
622: invokestatic  #26
625: aload         9
627: invokestatic  #26
630: aload         9
632: invokestatic  #27
635: ldc           #28
637: invokestatic  #29
640: aload         10
642: invokestatic  #26
645: aload         10
647: invokestatic  #27
650: ldc           #30
652: invokestatic  #29
655: new           #31
658: dup
659: invokespecial #32
662: ldc           #33
664: invokevirtual #34
667: dload         11
669: invokevirtual #35
672: ldc           #36
674: invokevirtual #34
677: ldc2_w        #10
680: invokevirtual #35
683: ldc           #33
685: invokevirtual #34
688: invokevirtual #37
691: dload         11
693: ldc2_w        #10
696: dcmpl
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #38
708: aload         14
710: invokestatic  #26
713: new           #31
716: dup
717: invokespecial #32
720: ldc           #33
722: invokevirtual #34
725: dload         15
727: invokevirtual #35
730: ldc           #36
732: invokevirtual #34
735: dconst_0
736: invokevirtual #35
739: ldc           #33
741: invokevirtual #34
744: invokevirtual #37
747: dload         15
749: dconst_0
750: dcmpl
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #38
762: new           #31
765: dup
766: invokespecial #32
769: ldc           #33
771: invokevirtual #34
774: iload         17
776: invokevirtual #39
779: ldc           #36
781: invokevirtual #34
784: iconst_0
785: invokevirtual #39
788: ldc           #33
790: invokevirtual #34
793: invokevirtual #37
796: iload         17
798: ifne          805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #38
809: aload         18
811: invokestatic  #26
814: aload         20
816: invokestatic  #26
819: aload         22
821: invokestatic  #26
824: aload         22
826: invokestatic  #27
829: ldc           #28
831: invokestatic  #29
834: aload         23
836: invokestatic  #26
839: aload         23
841: invokestatic  #27
844: ldc           #30
846: invokestatic  #29
849: new           #31
852: dup
853: invokespecial #32
856: ldc           #33
858: invokevirtual #34
861: dload         24
863: invokevirtual #35
866: ldc           #36
868: invokevirtual #34
871: ldc2_w        #10
874: invokevirtual #35
877: ldc           #33
879: invokevirtual #34
882: invokevirtual #37
885: dload         24
887: ldc2_w        #10
890: dcmpl
891: ifne          898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #38
902: new           #31
905: dup
906: invokespecial #32
909: ldc           #33
911: invokevirtual #34
914: iload         28
916: invokevirtual #39
919: ldc           #36
921: invokevirtual #34
924: iconst_0
925: invokevirtual #39
928: ldc           #33
930: invokevirtual #34
933: invokevirtual #37
936: iload         28
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #38
949: new           #31
952: dup
953: invokespecial #32
956: ldc           #33
958: invokevirtual #34
961: iload         29
963: invokevirtual #39
966: ldc           #36
968: invokevirtual #34
971: iconst_0
972: invokevirtual #39
975: ldc           #33
977: invokevirtual #34
980: invokevirtual #37
983: iload         29
985: ifne          992
988: iconst_1
989: goto          993
992: iconst_0
993: invokestatic  #38
996: aload         30
998: invokestatic  #26
1001: aload         30
1003: invokestatic  #27
1006: ldc           #116
1008: invokestatic  #29
1011: new           #31
1014: dup
1015: invokespecial #32
1018: ldc           #33
1020: invokevirtual #34
1023: dload         31
1025: invokevirtual #35
1028: ldc           #36
1030: invokevirtual #34
1033: ldc2_w        #117
1036: invokevirtual #35
1039: ldc           #33
1041: invokevirtual #34
1044: invokevirtual #37
1047: dload         31
1049: ldc2_w        #117
1052: dcmpl
1053: ifne          1060
1056: iconst_1
1057: goto          1061
1060: iconst_0
1061: invokestatic  #38
1064: aload         33
1066: invokestatic  #26
1069: aload         33
1071: invokestatic  #27
1074: ldc           #28
1076: invokestatic  #29
1079: aload         34
1081: invokestatic  #26
1084: aload         34
1086: invokestatic  #27
1089: ldc           #30
1091: invokestatic  #29
1094: new           #31
1097: dup
1098: invokespecial #32
1101: ldc           #33
1103: invokevirtual #34
1106: dload         35
1108: invokevirtual #35
1111: ldc           #36
1113: invokevirtual #34
1116: ldc2_w        #10
1119: invokevirtual #35
1122: ldc           #33
1124: invokevirtual #34
1127: invokevirtual #37
1130: dload         35
1132: ldc2_w        #10
1135: dcmpl
1136: ifne          1143
1139: iconst_1
1140: goto          1144
1143: iconst_0
1144: invokestatic  #38
1147: new           #31
1150: dup
1151: invokespecial #32
1154: ldc           #33
1156: invokevirtual #34
1159: iload         37
1161: invokevirtual #39
1164: ldc           #36
1166: invokevirtual #34
1169: iconst_0
1170: invokevirtual #39
1173: ldc           #33
1175: invokevirtual #34
1178: invokevirtual #37
1181: iload         37
1183: ifne          1190
1186: iconst_1
1187: goto          1191
1190: iconst_0
1191: invokestatic  #38
1194: aload         38
1196: invokestatic  #26
1199: new           #31
1202: dup
1203: invokespecial #32
1206: ldc           #33
1208: invokevirtual #34
1211: dload         39
1213: invokevirtual #35
1216: ldc           #36
1218: invokevirtual #34
1221: dconst_0
1222: invokevirtual #35
1225: ldc           #33
1227: invokevirtual #34
1230: invokevirtual #37
1233: dload         39
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #38
1248: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 2588
End line: 2668
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        double[] doubleArray22 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray29 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double30 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray22, doubleArray29);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapAtan();
        org.apache.commons.math.linear.RealVector realVector35 = realVector17.projection((org.apache.commons.math.linear.RealVector) arrayRealVector33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapExpm1();
        org.apache.commons.math.linear.RealVector realVector37 = arrayRealVector33.mapAcosToSelf();
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector33.mapLog1pToSelf();
        org.apache.commons.math.linear.RealVector realVector39 = arrayRealVector33.mapTan();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver41 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray46 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray53 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double54 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray46, doubleArray53);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction56 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray46, 100.0d);
        java.lang.Object obj57 = null;
        boolean boolean58 = linearObjectiveFunction56.equals(obj57);
        boolean boolean60 = linearObjectiveFunction56.equals((java.lang.Object) "hi!");
        simplexSolver41.f = linearObjectiveFunction56;
        double[] doubleArray66 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double67 = linearObjectiveFunction56.getValue(doubleArray66);
        double[] doubleArray72 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray79 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double80 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray72, doubleArray79);
        boolean boolean81 = org.apache.commons.math.util.MathUtils.equals(doubleArray66, doubleArray72);
        int int82 = org.apache.commons.math.util.MathUtils.hash(doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = realVector39.getL1Distance(doubleArray72);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 100.0d + "'", double30 == 100.0d);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2.194558835742002E15d + "'", double67 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.0d + "'", double80 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 929961857 + "'", int82 == 929961857);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #10
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #12
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #12
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #10
51: dastore
52: astore_1
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #14
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #14
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #10
88: dastore
89: astore_2
90: aload_1
91: aload_2
92: invokestatic  #16
95: dstore_3
96: new           #48
99: dup
100: aload_1
101: iconst_1
102: iconst_0
103: invokespecial #49
106: astore        5
108: aload         5
110: invokevirtual #50
113: astore        6
115: aload         5
117: invokevirtual #91
120: astore        7
122: iconst_4
123: newarray       double
125: dup
126: iconst_0
127: ldc2_w        #10
130: dastore
131: dup
132: iconst_1
133: ldc2_w        #12
136: dastore
137: dup
138: iconst_2
139: ldc2_w        #12
142: dastore
143: dup
144: iconst_3
145: ldc2_w        #10
148: dastore
149: astore        8
151: bipush        6
153: newarray       double
155: dup
156: iconst_0
157: ldc2_w        #14
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #14
166: dastore
167: dup
168: iconst_2
169: ldc2_w        #14
172: dastore
173: dup
174: iconst_3
175: dconst_0
176: dastore
177: dup
178: iconst_4
179: dconst_1
180: dastore
181: dup
182: iconst_5
183: ldc2_w        #10
186: dastore
187: astore        9
189: aload         8
191: aload         9
193: invokestatic  #16
196: dstore        10
198: new           #48
201: dup
202: aload         8
204: iconst_1
205: iconst_0
206: invokespecial #49
209: astore        12
211: aload         12
213: invokevirtual #50
216: astore        13
218: aload         7
220: aload         12
222: invokeinterface #169,  2
227: astore        14
229: aload         12
231: invokevirtual #305
234: astore        15
236: aload         12
238: invokevirtual #92
241: astore        16
243: aload         12
245: invokevirtual #306
248: astore        17
250: aload         12
252: invokevirtual #307
255: astore        18
257: new           #8
260: dup
261: dconst_0
262: invokespecial #9
265: astore        19
267: iconst_4
268: newarray       double
270: dup
271: iconst_0
272: ldc2_w        #10
275: dastore
276: dup
277: iconst_1
278: ldc2_w        #12
281: dastore
282: dup
283: iconst_2
284: ldc2_w        #12
287: dastore
288: dup
289: iconst_3
290: ldc2_w        #10
293: dastore
294: astore        20
296: bipush        6
298: newarray       double
300: dup
301: iconst_0
302: ldc2_w        #14
305: dastore
306: dup
307: iconst_1
308: ldc2_w        #14
311: dastore
312: dup
313: iconst_2
314: ldc2_w        #14
317: dastore
318: dup
319: iconst_3
320: dconst_0
321: dastore
322: dup
323: iconst_4
324: dconst_1
325: dastore
326: dup
327: iconst_5
328: ldc2_w        #10
331: dastore
332: astore        21
334: aload         20
336: aload         21
338: invokestatic  #16
341: dstore        22
343: new           #17
346: dup
347: aload         20
349: ldc2_w        #10
352: invokespecial #18
355: astore        24
357: aconst_null
358: astore        25
360: aload         24
362: aload         25
364: invokevirtual #19
367: istore        26
369: aload         24
371: ldc           #20
373: invokevirtual #19
376: istore        27
378: aload         19
380: aload         24
382: putfield      #21
385: iconst_4
386: newarray       double
388: dup
389: iconst_0
390: ldc2_w        #106
393: dastore
394: dup
395: iconst_1
396: ldc2_w        #108
399: dastore
400: dup
401: iconst_2
402: dconst_1
403: dastore
404: dup
405: iconst_3
406: dconst_0
407: dastore
408: astore        28
410: aload         24
412: aload         28
414: invokevirtual #110
417: dstore        29
419: iconst_4
420: newarray       double
422: dup
423: iconst_0
424: ldc2_w        #10
427: dastore
428: dup
429: iconst_1
430: ldc2_w        #12
433: dastore
434: dup
435: iconst_2
436: ldc2_w        #12
439: dastore
440: dup
441: iconst_3
442: ldc2_w        #10
445: dastore
446: astore        31
448: bipush        6
450: newarray       double
452: dup
453: iconst_0
454: ldc2_w        #14
457: dastore
458: dup
459: iconst_1
460: ldc2_w        #14
463: dastore
464: dup
465: iconst_2
466: ldc2_w        #14
469: dastore
470: dup
471: iconst_3
472: dconst_0
473: dastore
474: dup
475: iconst_4
476: dconst_1
477: dastore
478: dup
479: iconst_5
480: ldc2_w        #10
483: dastore
484: astore        32
486: aload         31
488: aload         32
490: invokestatic  #16
493: dstore        33
495: aload         28
497: aload         31
499: invokestatic  #111
502: istore        35
504: aload         31
506: invokestatic  #308
509: istore        36
511: aload         18
513: aload         31
515: invokeinterface #309,  2
520: dstore        37
522: ldc           #96
524: invokestatic  #24
527: goto          572
530: astore        37
532: aload         37
534: invokevirtual #98
537: invokevirtual #99
540: ifne          572
543: new           #31
546: dup
547: invokespecial #32
550: ldc           #100
552: invokevirtual #34
555: aload         37
557: invokevirtual #98
560: invokevirtual #101
563: invokevirtual #34
566: invokevirtual #37
569: invokestatic  #24
572: aload_1
573: invokestatic  #26
576: aload_1
577: invokestatic  #27
580: ldc           #28
582: invokestatic  #29
585: aload_2
586: invokestatic  #26
589: aload_2
590: invokestatic  #27
593: ldc           #30
595: invokestatic  #29
598: new           #31
601: dup
602: invokespecial #32
605: ldc           #33
607: invokevirtual #34
610: dload_3
611: invokevirtual #35
614: ldc           #36
616: invokevirtual #34
619: ldc2_w        #10
622: invokevirtual #35
625: ldc           #33
627: invokevirtual #34
630: invokevirtual #37
633: dload_3
634: ldc2_w        #10
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #38
649: aload         6
651: invokestatic  #26
654: aload         7
656: invokestatic  #26
659: aload         8
661: invokestatic  #26
664: aload         8
666: invokestatic  #27
669: ldc           #28
671: invokestatic  #29
674: aload         9
676: invokestatic  #26
679: aload         9
681: invokestatic  #27
684: ldc           #30
686: invokestatic  #29
689: new           #31
692: dup
693: invokespecial #32
696: ldc           #33
698: invokevirtual #34
701: dload         10
703: invokevirtual #35
706: ldc           #36
708: invokevirtual #34
711: ldc2_w        #10
714: invokevirtual #35
717: ldc           #33
719: invokevirtual #34
722: invokevirtual #37
725: dload         10
727: ldc2_w        #10
730: dcmpl
731: ifne          738
734: iconst_1
735: goto          739
738: iconst_0
739: invokestatic  #38
742: aload         13
744: invokestatic  #26
747: aload         14
749: invokestatic  #26
752: aload         15
754: invokestatic  #26
757: aload         16
759: invokestatic  #26
762: aload         17
764: invokestatic  #26
767: aload         18
769: invokestatic  #26
772: aload         20
774: invokestatic  #26
777: aload         20
779: invokestatic  #27
782: ldc           #28
784: invokestatic  #29
787: aload         21
789: invokestatic  #26
792: aload         21
794: invokestatic  #27
797: ldc           #30
799: invokestatic  #29
802: new           #31
805: dup
806: invokespecial #32
809: ldc           #33
811: invokevirtual #34
814: dload         22
816: invokevirtual #35
819: ldc           #36
821: invokevirtual #34
824: ldc2_w        #10
827: invokevirtual #35
830: ldc           #33
832: invokevirtual #34
835: invokevirtual #37
838: dload         22
840: ldc2_w        #10
843: dcmpl
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #38
855: new           #31
858: dup
859: invokespecial #32
862: ldc           #33
864: invokevirtual #34
867: iload         26
869: invokevirtual #39
872: ldc           #36
874: invokevirtual #34
877: iconst_0
878: invokevirtual #39
881: ldc           #33
883: invokevirtual #34
886: invokevirtual #37
889: iload         26
891: ifne          898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #38
902: new           #31
905: dup
906: invokespecial #32
909: ldc           #33
911: invokevirtual #34
914: iload         27
916: invokevirtual #39
919: ldc           #36
921: invokevirtual #34
924: iconst_0
925: invokevirtual #39
928: ldc           #33
930: invokevirtual #34
933: invokevirtual #37
936: iload         27
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #38
949: aload         28
951: invokestatic  #26
954: aload         28
956: invokestatic  #27
959: ldc           #116
961: invokestatic  #29
964: new           #31
967: dup
968: invokespecial #32
971: ldc           #33
973: invokevirtual #34
976: dload         29
978: invokevirtual #35
981: ldc           #36
983: invokevirtual #34
986: ldc2_w        #117
989: invokevirtual #35
992: ldc           #33
994: invokevirtual #34
997: invokevirtual #37
1000: dload         29
1002: ldc2_w        #117
1005: dcmpl
1006: ifne          1013
1009: iconst_1
1010: goto          1014
1013: iconst_0
1014: invokestatic  #38
1017: aload         31
1019: invokestatic  #26
1022: aload         31
1024: invokestatic  #27
1027: ldc           #28
1029: invokestatic  #29
1032: aload         32
1034: invokestatic  #26
1037: aload         32
1039: invokestatic  #27
1042: ldc           #30
1044: invokestatic  #29
1047: new           #31
1050: dup
1051: invokespecial #32
1054: ldc           #33
1056: invokevirtual #34
1059: dload         33
1061: invokevirtual #35
1064: ldc           #36
1066: invokevirtual #34
1069: ldc2_w        #10
1072: invokevirtual #35
1075: ldc           #33
1077: invokevirtual #34
1080: invokevirtual #37
1083: dload         33
1085: ldc2_w        #10
1088: dcmpl
1089: ifne          1096
1092: iconst_1
1093: goto          1097
1096: iconst_0
1097: invokestatic  #38
1100: new           #31
1103: dup
1104: invokespecial #32
1107: ldc           #33
1109: invokevirtual #34
1112: iload         35
1114: invokevirtual #39
1117: ldc           #36
1119: invokevirtual #34
1122: iconst_0
1123: invokevirtual #39
1126: ldc           #33
1128: invokevirtual #34
1131: invokevirtual #37
1134: iload         35
1136: ifne          1143
1139: iconst_1
1140: goto          1144
1143: iconst_0
1144: invokestatic  #38
1147: new           #31
1150: dup
1151: invokespecial #32
1154: ldc           #33
1156: invokevirtual #34
1159: iload         36
1161: invokevirtual #66
1164: ldc           #36
1166: invokevirtual #34
1169: ldc_w         #268
1172: invokevirtual #66
1175: ldc           #33
1177: invokevirtual #34
1180: invokevirtual #37
1183: iload         36
1185: ldc_w         #268
1188: if_icmpne     1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #38
1199: return
Exception table:
from    to  target type
511   527   530   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 2671
End line: 2681
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.restrictToNonNegative = true;
        int int4 = simplexSolver1.getMaxIterations();
        int int5 = simplexSolver1.getIterations();
        simplexSolver1.setMaxIterations((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: iconst_1
36: putfield      #71
39: aload_1
40: invokevirtual #65
43: istore_2
44: aload_1
45: invokevirtual #78
48: istore_3
49: aload_1
50: bipush        10
52: invokevirtual #61
55: new           #31
58: dup
59: invokespecial #32
62: ldc           #33
64: invokevirtual #34
67: iload_2
68: invokevirtual #66
71: ldc           #36
73: invokevirtual #34
76: bipush        100
78: invokevirtual #66
81: ldc           #33
83: invokevirtual #34
86: invokevirtual #37
89: iload_2
90: bipush        100
92: if_icmpne     99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #38
103: new           #31
106: dup
107: invokespecial #32
110: ldc           #33
112: invokevirtual #34
115: iload_3
116: invokevirtual #66
119: ldc           #36
121: invokevirtual #34
124: iconst_0
125: invokevirtual #66
128: ldc           #33
130: invokevirtual #34
133: invokevirtual #37
136: iload_3
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #38
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 2684
End line: 2715
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.incrementIterationsCounter();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver4 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double5 = simplexSolver4.epsilon;
        org.apache.commons.math.optimization.GoalType goalType6 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver4.goalType = goalType6;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver9 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray14 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray21 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double22 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray14, doubleArray21);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction24 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray14, 100.0d);
        java.lang.Object obj25 = null;
        boolean boolean26 = linearObjectiveFunction24.equals(obj25);
        boolean boolean28 = linearObjectiveFunction24.equals((java.lang.Object) "hi!");
        simplexSolver9.f = linearObjectiveFunction24;
        simplexSolver4.f = linearObjectiveFunction24;
        simplexSolver1.f = linearObjectiveFunction24;
        int int32 = simplexSolver1.getIterations();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #311
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #63
38: new           #8
41: dup
42: dconst_0
43: invokespecial #9
46: astore_2
47: aload_2
48: getfield      #75
51: dstore_3
52: getstatic     #55
55: astore        5
57: aload_2
58: aload         5
60: putfield      #68
63: new           #8
66: dup
67: dconst_0
68: invokespecial #9
71: astore        6
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: ldc2_w        #10
81: dastore
82: dup
83: iconst_1
84: ldc2_w        #12
87: dastore
88: dup
89: iconst_2
90: ldc2_w        #12
93: dastore
94: dup
95: iconst_3
96: ldc2_w        #10
99: dastore
100: astore        7
102: bipush        6
104: newarray       double
106: dup
107: iconst_0
108: ldc2_w        #14
111: dastore
112: dup
113: iconst_1
114: ldc2_w        #14
117: dastore
118: dup
119: iconst_2
120: ldc2_w        #14
123: dastore
124: dup
125: iconst_3
126: dconst_0
127: dastore
128: dup
129: iconst_4
130: dconst_1
131: dastore
132: dup
133: iconst_5
134: ldc2_w        #10
137: dastore
138: astore        8
140: aload         7
142: aload         8
144: invokestatic  #16
147: dstore        9
149: new           #17
152: dup
153: aload         7
155: ldc2_w        #10
158: invokespecial #18
161: astore        11
163: aconst_null
164: astore        12
166: aload         11
168: aload         12
170: invokevirtual #19
173: istore        13
175: aload         11
177: ldc           #20
179: invokevirtual #19
182: istore        14
184: aload         6
186: aload         11
188: putfield      #21
191: aload_2
192: aload         11
194: putfield      #21
197: aload_1
198: aload         11
200: putfield      #21
203: aload_1
204: invokevirtual #78
207: istore        15
209: new           #31
212: dup
213: invokespecial #32
216: ldc           #33
218: invokevirtual #34
221: dload_3
222: invokevirtual #35
225: ldc           #36
227: invokevirtual #34
230: dconst_0
231: invokevirtual #35
234: ldc           #33
236: invokevirtual #34
239: invokevirtual #37
242: dload_3
243: dconst_0
244: dcmpl
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #38
256: new           #31
259: dup
260: invokespecial #32
263: ldc           #33
265: invokevirtual #34
268: aload         5
270: invokevirtual #57
273: ldc           #36
275: invokevirtual #34
278: getstatic     #55
281: invokevirtual #57
284: ldc           #33
286: invokevirtual #34
289: invokevirtual #37
292: aload         5
294: getstatic     #55
297: invokevirtual #58
300: invokestatic  #38
303: aload         7
305: invokestatic  #26
308: aload         7
310: invokestatic  #27
313: ldc           #28
315: invokestatic  #29
318: aload         8
320: invokestatic  #26
323: aload         8
325: invokestatic  #27
328: ldc           #30
330: invokestatic  #29
333: new           #31
336: dup
337: invokespecial #32
340: ldc           #33
342: invokevirtual #34
345: dload         9
347: invokevirtual #35
350: ldc           #36
352: invokevirtual #34
355: ldc2_w        #10
358: invokevirtual #35
361: ldc           #33
363: invokevirtual #34
366: invokevirtual #37
369: dload         9
371: ldc2_w        #10
374: dcmpl
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #38
386: new           #31
389: dup
390: invokespecial #32
393: ldc           #33
395: invokevirtual #34
398: iload         13
400: invokevirtual #39
403: ldc           #36
405: invokevirtual #34
408: iconst_0
409: invokevirtual #39
412: ldc           #33
414: invokevirtual #34
417: invokevirtual #37
420: iload         13
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #38
433: new           #31
436: dup
437: invokespecial #32
440: ldc           #33
442: invokevirtual #34
445: iload         14
447: invokevirtual #39
450: ldc           #36
452: invokevirtual #34
455: iconst_0
456: invokevirtual #39
459: ldc           #33
461: invokevirtual #34
464: invokevirtual #37
467: iload         14
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #38
480: new           #31
483: dup
484: invokespecial #32
487: ldc           #33
489: invokevirtual #34
492: iload         15
494: invokevirtual #66
497: ldc           #36
499: invokevirtual #34
502: iconst_1
503: invokevirtual #66
506: ldc           #33
508: invokevirtual #34
511: invokevirtual #37
514: iload         15
516: iconst_1
517: if_icmpne     524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #38
528: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 2718
End line: 2805
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver19 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType20 = simplexSolver19.goalType;
        boolean boolean21 = arrayRealVector15.equals((java.lang.Object) goalType20);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.mapCbrt();
        org.apache.commons.math.linear.RealVector realVector23 = arrayRealVector15.copy();
        double[] doubleArray28 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray35 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double36 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray28, doubleArray35);
        int int37 = org.apache.commons.math.util.MathUtils.hash(doubleArray28);
        double[] doubleArray42 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray49 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double50 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray42, doubleArray49);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector54 = arrayRealVector53.mapAtan();
        org.apache.commons.math.linear.RealVector realVector55 = arrayRealVector53.mapSinhToSelf();
        boolean boolean57 = arrayRealVector53.equals((java.lang.Object) 929961857);
        double[] doubleArray62 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray69 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double70 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray62, doubleArray69);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray62, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector74 = arrayRealVector73.mapAtan();
        org.apache.commons.math.linear.RealVector realVector75 = arrayRealVector73.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector76 = arrayRealVector53.projection((org.apache.commons.math.linear.RealVector) arrayRealVector73);
        double[] doubleArray77 = arrayRealVector73.getDataRef();
        org.apache.commons.math.optimization.RealPointValuePair realPointValuePair79 = new org.apache.commons.math.optimization.RealPointValuePair(doubleArray77, (double) 0L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector80 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray28, doubleArray77);
        org.apache.commons.math.linear.RealVector realVector81 = arrayRealVector80.mapLog10();
        double[] doubleArray82 = realVector81.toArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector83 = realVector23.ebeDivide(doubleArray82);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNull(goalType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 929961857 + "'", int37 == 929961857);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 100.0d + "'", double70 == 100.0d);
        org.junit.Assert.assertNotNull(realVector74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertNotNull(realVector76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[2.0, NaN, NaN, 2.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #10
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #12
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #12
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #10
51: dastore
52: astore_1
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #14
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #14
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #10
88: dastore
89: astore_2
90: aload_1
91: aload_2
92: invokestatic  #16
95: dstore_3
96: new           #48
99: dup
100: aload_1
101: iconst_1
102: iconst_0
103: invokespecial #49
106: astore        5
108: aload         5
110: invokevirtual #50
113: astore        6
115: aload         5
117: invokevirtual #91
120: astore        7
122: aload         5
124: invokevirtual #92
127: astore        8
129: new           #8
132: dup
133: invokespecial #41
136: astore        9
138: aload         9
140: getfield      #68
143: astore        10
145: aload         5
147: aload         10
149: invokevirtual #93
152: istore        11
154: aload         5
156: invokevirtual #122
159: astore        12
161: aload         5
163: invokevirtual #295
166: astore        13
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: ldc2_w        #10
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #12
182: dastore
183: dup
184: iconst_2
185: ldc2_w        #12
188: dastore
189: dup
190: iconst_3
191: ldc2_w        #10
194: dastore
195: astore        14
197: bipush        6
199: newarray       double
201: dup
202: iconst_0
203: ldc2_w        #14
206: dastore
207: dup
208: iconst_1
209: ldc2_w        #14
212: dastore
213: dup
214: iconst_2
215: ldc2_w        #14
218: dastore
219: dup
220: iconst_3
221: dconst_0
222: dastore
223: dup
224: iconst_4
225: dconst_1
226: dastore
227: dup
228: iconst_5
229: ldc2_w        #10
232: dastore
233: astore        15
235: aload         14
237: aload         15
239: invokestatic  #16
242: dstore        16
244: aload         14
246: invokestatic  #308
249: istore        18
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: ldc2_w        #10
259: dastore
260: dup
261: iconst_1
262: ldc2_w        #12
265: dastore
266: dup
267: iconst_2
268: ldc2_w        #12
271: dastore
272: dup
273: iconst_3
274: ldc2_w        #10
277: dastore
278: astore        19
280: bipush        6
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #14
289: dastore
290: dup
291: iconst_1
292: ldc2_w        #14
295: dastore
296: dup
297: iconst_2
298: ldc2_w        #14
301: dastore
302: dup
303: iconst_3
304: dconst_0
305: dastore
306: dup
307: iconst_4
308: dconst_1
309: dastore
310: dup
311: iconst_5
312: ldc2_w        #10
315: dastore
316: astore        20
318: aload         19
320: aload         20
322: invokestatic  #16
325: dstore        21
327: new           #48
330: dup
331: aload         19
333: iconst_1
334: iconst_0
335: invokespecial #49
338: astore        23
340: aload         23
342: invokevirtual #50
345: astore        24
347: aload         23
349: invokevirtual #91
352: astore        25
354: aload         23
356: ldc_w         #268
359: invokestatic  #263
362: invokevirtual #93
365: istore        26
367: iconst_4
368: newarray       double
370: dup
371: iconst_0
372: ldc2_w        #10
375: dastore
376: dup
377: iconst_1
378: ldc2_w        #12
381: dastore
382: dup
383: iconst_2
384: ldc2_w        #12
387: dastore
388: dup
389: iconst_3
390: ldc2_w        #10
393: dastore
394: astore        27
396: bipush        6
398: newarray       double
400: dup
401: iconst_0
402: ldc2_w        #14
405: dastore
406: dup
407: iconst_1
408: ldc2_w        #14
411: dastore
412: dup
413: iconst_2
414: ldc2_w        #14
417: dastore
418: dup
419: iconst_3
420: dconst_0
421: dastore
422: dup
423: iconst_4
424: dconst_1
425: dastore
426: dup
427: iconst_5
428: ldc2_w        #10
431: dastore
432: astore        28
434: aload         27
436: aload         28
438: invokestatic  #16
441: dstore        29
443: new           #48
446: dup
447: aload         27
449: iconst_1
450: iconst_0
451: invokespecial #49
454: astore        31
456: aload         31
458: invokevirtual #50
461: astore        32
463: aload         31
465: invokevirtual #91
468: astore        33
470: aload         23
472: aload         31
474: invokevirtual #132
477: astore        34
479: aload         31
481: invokevirtual #219
484: astore        35
486: new           #238
489: dup
490: aload         35
492: dconst_0
493: invokespecial #313
496: astore        36
498: new           #48
501: dup
502: aload         14
504: aload         35
506: invokespecial #314
509: astore        37
511: aload         37
513: invokevirtual #315
516: astore        38
518: aload         38
520: invokeinterface #316,  1
525: astore        39
527: aload         13
529: aload         39
531: invokeinterface #317,  2
536: astore        40
538: ldc           #96
540: invokestatic  #24
543: goto          588
546: astore        40
548: aload         40
550: invokevirtual #98
553: invokevirtual #99
556: ifne          588
559: new           #31
562: dup
563: invokespecial #32
566: ldc           #100
568: invokevirtual #34
571: aload         40
573: invokevirtual #98
576: invokevirtual #101
579: invokevirtual #34
582: invokevirtual #37
585: invokestatic  #24
588: aload_1
589: invokestatic  #26
592: aload_1
593: invokestatic  #27
596: ldc           #28
598: invokestatic  #29
601: aload_2
602: invokestatic  #26
605: aload_2
606: invokestatic  #27
609: ldc           #30
611: invokestatic  #29
614: new           #31
617: dup
618: invokespecial #32
621: ldc           #33
623: invokevirtual #34
626: dload_3
627: invokevirtual #35
630: ldc           #36
632: invokevirtual #34
635: ldc2_w        #10
638: invokevirtual #35
641: ldc           #33
643: invokevirtual #34
646: invokevirtual #37
649: dload_3
650: ldc2_w        #10
653: dcmpl
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #38
665: aload         6
667: invokestatic  #26
670: aload         7
672: invokestatic  #26
675: aload         8
677: invokestatic  #26
680: aload         10
682: invokestatic  #69
685: new           #31
688: dup
689: invokespecial #32
692: ldc           #33
694: invokevirtual #34
697: iload         11
699: invokevirtual #39
702: ldc           #36
704: invokevirtual #34
707: iconst_0
708: invokevirtual #39
711: ldc           #33
713: invokevirtual #34
716: invokevirtual #37
719: iload         11
721: ifne          728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #38
732: aload         12
734: invokestatic  #26
737: aload         13
739: invokestatic  #26
742: aload         14
744: invokestatic  #26
747: aload         14
749: invokestatic  #27
752: ldc           #28
754: invokestatic  #29
757: aload         15
759: invokestatic  #26
762: aload         15
764: invokestatic  #27
767: ldc           #30
769: invokestatic  #29
772: new           #31
775: dup
776: invokespecial #32
779: ldc           #33
781: invokevirtual #34
784: dload         16
786: invokevirtual #35
789: ldc           #36
791: invokevirtual #34
794: ldc2_w        #10
797: invokevirtual #35
800: ldc           #33
802: invokevirtual #34
805: invokevirtual #37
808: dload         16
810: ldc2_w        #10
813: dcmpl
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #38
825: new           #31
828: dup
829: invokespecial #32
832: ldc           #33
834: invokevirtual #34
837: iload         18
839: invokevirtual #66
842: ldc           #36
844: invokevirtual #34
847: ldc_w         #268
850: invokevirtual #66
853: ldc           #33
855: invokevirtual #34
858: invokevirtual #37
861: iload         18
863: ldc_w         #268
866: if_icmpne     873
869: iconst_1
870: goto          874
873: iconst_0
874: invokestatic  #38
877: aload         19
879: invokestatic  #26
882: aload         19
884: invokestatic  #27
887: ldc           #28
889: invokestatic  #29
892: aload         20
894: invokestatic  #26
897: aload         20
899: invokestatic  #27
902: ldc           #30
904: invokestatic  #29
907: new           #31
910: dup
911: invokespecial #32
914: ldc           #33
916: invokevirtual #34
919: dload         21
921: invokevirtual #35
924: ldc           #36
926: invokevirtual #34
929: ldc2_w        #10
932: invokevirtual #35
935: ldc           #33
937: invokevirtual #34
940: invokevirtual #37
943: dload         21
945: ldc2_w        #10
948: dcmpl
949: ifne          956
952: iconst_1
953: goto          957
956: iconst_0
957: invokestatic  #38
960: aload         24
962: invokestatic  #26
965: aload         25
967: invokestatic  #26
970: new           #31
973: dup
974: invokespecial #32
977: ldc           #33
979: invokevirtual #34
982: iload         26
984: invokevirtual #39
987: ldc           #36
989: invokevirtual #34
992: iconst_0
993: invokevirtual #39
996: ldc           #33
998: invokevirtual #34
1001: invokevirtual #37
1004: iload         26
1006: ifne          1013
1009: iconst_1
1010: goto          1014
1013: iconst_0
1014: invokestatic  #38
1017: aload         27
1019: invokestatic  #26
1022: aload         27
1024: invokestatic  #27
1027: ldc           #28
1029: invokestatic  #29
1032: aload         28
1034: invokestatic  #26
1037: aload         28
1039: invokestatic  #27
1042: ldc           #30
1044: invokestatic  #29
1047: new           #31
1050: dup
1051: invokespecial #32
1054: ldc           #33
1056: invokevirtual #34
1059: dload         29
1061: invokevirtual #35
1064: ldc           #36
1066: invokevirtual #34
1069: ldc2_w        #10
1072: invokevirtual #35
1075: ldc           #33
1077: invokevirtual #34
1080: invokevirtual #37
1083: dload         29
1085: ldc2_w        #10
1088: dcmpl
1089: ifne          1096
1092: iconst_1
1093: goto          1097
1096: iconst_0
1097: invokestatic  #38
1100: aload         32
1102: invokestatic  #26
1105: aload         33
1107: invokestatic  #26
1110: aload         34
1112: invokestatic  #26
1115: aload         35
1117: invokestatic  #26
1120: aload         35
1122: invokestatic  #27
1125: ldc           #139
1127: invokestatic  #29
1130: aload         38
1132: invokestatic  #26
1135: aload         39
1137: invokestatic  #26
1140: aload         39
1142: invokestatic  #27
1145: ldc_w         #318
1148: invokestatic  #29
1151: return
Exception table:
from    to  target type
527   543   546   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 2808
End line: 2830
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        double double8 = simplexSolver1.epsilon;
        int int9 = simplexSolver1.getMaxIterations();
        org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau10 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver1.doIteration(simplexTableau10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #68
43: astore_3
44: aload_1
45: iconst_0
46: invokevirtual #61
49: aload_1
50: bipush        97
52: invokevirtual #61
55: aload_1
56: getfield      #75
59: dstore        4
61: aload_1
62: invokevirtual #65
65: istore        6
67: aconst_null
68: astore        7
70: aload_1
71: aload         7
73: invokevirtual #22
76: ldc           #23
78: invokestatic  #24
81: goto          86
84: astore        8
86: new           #31
89: dup
90: invokespecial #32
93: ldc           #33
95: invokevirtual #34
98: iload_2
99: invokevirtual #66
102: ldc           #36
104: invokevirtual #34
107: iconst_0
108: invokevirtual #66
111: ldc           #33
113: invokevirtual #34
116: invokevirtual #37
119: iload_2
120: ifne          127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #38
131: aload_3
132: invokestatic  #69
135: new           #31
138: dup
139: invokespecial #32
142: ldc           #33
144: invokevirtual #34
147: dload         4
149: invokevirtual #35
152: ldc           #36
154: invokevirtual #34
157: dconst_0
158: invokevirtual #35
161: ldc           #33
163: invokevirtual #34
166: invokevirtual #37
169: dload         4
171: dconst_0
172: dcmpl
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #38
184: new           #31
187: dup
188: invokespecial #32
191: ldc           #33
193: invokevirtual #34
196: iload         6
198: invokevirtual #66
201: ldc           #36
203: invokevirtual #34
206: bipush        97
208: invokevirtual #66
211: ldc           #33
213: invokevirtual #34
216: invokevirtual #37
219: iload         6
221: bipush        97
223: if_icmpne     230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #38
234: return
Exception table:
from    to  target type
70    81    84   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 2833
End line: 2865
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.Relationship relationship1 = null;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint3 = new org.apache.commons.math.optimization.linear.LinearConstraint(realVector0, relationship1, (double) (byte) 100);
        double double4 = linearConstraint3.getValue();
        org.apache.commons.math.linear.RealVector realVector5 = linearConstraint3.getCoefficients();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver7 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray12 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray19 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double20 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray12, doubleArray19);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction22 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray12, 100.0d);
        java.lang.Object obj23 = null;
        boolean boolean24 = linearObjectiveFunction22.equals(obj23);
        boolean boolean26 = linearObjectiveFunction22.equals((java.lang.Object) "hi!");
        simplexSolver7.f = linearObjectiveFunction22;
        org.apache.commons.math.linear.RealVector realVector28 = linearObjectiveFunction22.getCoefficients();
        double double29 = linearObjectiveFunction22.getConstantTerm();
        boolean boolean30 = linearConstraint3.equals((java.lang.Object) linearObjectiveFunction22);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNull(realVector5);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: new           #46
32: dup
33: aload_1
34: aload_2
35: ldc2_w        #10
38: invokespecial #47
41: astore_3
42: aload_3
43: invokevirtual #321
46: dstore        4
48: aload_3
49: invokevirtual #322
52: astore        6
54: new           #8
57: dup
58: dconst_0
59: invokespecial #9
62: astore        7
64: iconst_4
65: newarray       double
67: dup
68: iconst_0
69: ldc2_w        #10
72: dastore
73: dup
74: iconst_1
75: ldc2_w        #12
78: dastore
79: dup
80: iconst_2
81: ldc2_w        #12
84: dastore
85: dup
86: iconst_3
87: ldc2_w        #10
90: dastore
91: astore        8
93: bipush        6
95: newarray       double
97: dup
98: iconst_0
99: ldc2_w        #14
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #14
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #14
114: dastore
115: dup
116: iconst_3
117: dconst_0
118: dastore
119: dup
120: iconst_4
121: dconst_1
122: dastore
123: dup
124: iconst_5
125: ldc2_w        #10
128: dastore
129: astore        9
131: aload         8
133: aload         9
135: invokestatic  #16
138: dstore        10
140: new           #17
143: dup
144: aload         8
146: ldc2_w        #10
149: invokespecial #18
152: astore        12
154: aconst_null
155: astore        13
157: aload         12
159: aload         13
161: invokevirtual #19
164: istore        14
166: aload         12
168: ldc           #20
170: invokevirtual #19
173: istore        15
175: aload         7
177: aload         12
179: putfield      #21
182: aload         12
184: invokevirtual #149
187: astore        16
189: aload         12
191: invokevirtual #262
194: dstore        17
196: aload_3
197: aload         12
199: invokevirtual #323
202: istore        19
204: new           #31
207: dup
208: invokespecial #32
211: ldc           #33
213: invokevirtual #34
216: dload         4
218: invokevirtual #35
221: ldc           #36
223: invokevirtual #34
226: ldc2_w        #10
229: invokevirtual #35
232: ldc           #33
234: invokevirtual #34
237: invokevirtual #37
240: dload         4
242: ldc2_w        #10
245: dcmpl
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #38
257: aload         6
259: invokestatic  #69
262: aload         8
264: invokestatic  #26
267: aload         8
269: invokestatic  #27
272: ldc           #28
274: invokestatic  #29
277: aload         9
279: invokestatic  #26
282: aload         9
284: invokestatic  #27
287: ldc           #30
289: invokestatic  #29
292: new           #31
295: dup
296: invokespecial #32
299: ldc           #33
301: invokevirtual #34
304: dload         10
306: invokevirtual #35
309: ldc           #36
311: invokevirtual #34
314: ldc2_w        #10
317: invokevirtual #35
320: ldc           #33
322: invokevirtual #34
325: invokevirtual #37
328: dload         10
330: ldc2_w        #10
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #38
345: new           #31
348: dup
349: invokespecial #32
352: ldc           #33
354: invokevirtual #34
357: iload         14
359: invokevirtual #39
362: ldc           #36
364: invokevirtual #34
367: iconst_0
368: invokevirtual #39
371: ldc           #33
373: invokevirtual #34
376: invokevirtual #37
379: iload         14
381: ifne          388
384: iconst_1
385: goto          389
388: iconst_0
389: invokestatic  #38
392: new           #31
395: dup
396: invokespecial #32
399: ldc           #33
401: invokevirtual #34
404: iload         15
406: invokevirtual #39
409: ldc           #36
411: invokevirtual #34
414: iconst_0
415: invokevirtual #39
418: ldc           #33
420: invokevirtual #34
423: invokevirtual #37
426: iload         15
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #38
439: aload         16
441: invokestatic  #26
444: new           #31
447: dup
448: invokespecial #32
451: ldc           #33
453: invokevirtual #34
456: dload         17
458: invokevirtual #35
461: ldc           #36
463: invokevirtual #34
466: ldc2_w        #10
469: invokevirtual #35
472: ldc           #33
474: invokevirtual #34
477: invokevirtual #37
480: dload         17
482: ldc2_w        #10
485: dcmpl
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #38
497: new           #31
500: dup
501: invokespecial #32
504: ldc           #33
506: invokevirtual #34
509: iload         19
511: invokevirtual #39
514: ldc           #36
516: invokevirtual #34
519: iconst_0
520: invokevirtual #39
523: ldc           #33
525: invokevirtual #34
528: invokevirtual #37
531: iload         19
533: ifne          540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #38
544: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 2868
End line: 2881
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.GoalType goalType4 = simplexSolver0.goalType;
        boolean boolean5 = simplexSolver0.restrictToNonNegative;
        double double6 = simplexSolver0.epsilon;
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0E-6d + "'", double6 == 1.0E-6d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: getfield      #68
37: astore_2
38: aload_1
39: bipush        -50
41: invokevirtual #61
44: aload_1
45: getfield      #68
48: astore_3
49: aload_1
50: getfield      #71
53: istore        4
55: aload_1
56: getfield      #75
59: dstore        5
61: aload_2
62: invokestatic  #69
65: aload_3
66: invokestatic  #69
69: new           #31
72: dup
73: invokespecial #32
76: ldc           #33
78: invokevirtual #34
81: iload         4
83: invokevirtual #39
86: ldc           #36
88: invokevirtual #34
91: iconst_0
92: invokevirtual #39
95: ldc           #33
97: invokevirtual #34
100: invokevirtual #37
103: iload         4
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #38
116: new           #31
119: dup
120: invokespecial #32
123: ldc           #33
125: invokevirtual #34
128: dload         5
130: invokevirtual #35
133: ldc           #36
135: invokevirtual #34
138: ldc2_w        #249
141: invokevirtual #35
144: ldc           #33
146: invokevirtual #34
149: invokevirtual #37
152: dload         5
154: ldc2_w        #249
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #38
169: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 2884
End line: 2936
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        java.text.NumberFormat numberFormat3 = null;
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat4 = new org.apache.commons.math.linear.RealVectorFormat("hi!", "org.apache.commons.math.MaxIterationsExceededException: org.apache.commons.math.MathRuntimeException$4: ", "", numberFormat3);
        java.lang.String str5 = realVectorFormat4.getSeparator();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver7 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int8 = simplexSolver7.getIterations();
        org.apache.commons.math.optimization.GoalType goalType9 = simplexSolver7.goalType;
        double[] doubleArray14 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray21 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double22 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray14, doubleArray21);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction24 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray14, 100.0d);
        org.apache.commons.math.linear.RealVector realVector25 = linearObjectiveFunction24.getCoefficients();
        double double26 = linearObjectiveFunction24.getConstantTerm();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1, (-1.0f) };
        org.apache.commons.math.linear.InvalidMatrixException invalidMatrixException33 = new org.apache.commons.math.linear.InvalidMatrixException("hi!", objArray32);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException34 = new org.apache.commons.math.MaxIterationsExceededException(929961857, "org.apache.commons.math.MathRuntimeException$4: ", objArray32);
        java.lang.Object[] objArray35 = maxIterationsExceededException34.getArguments();
        boolean boolean36 = linearObjectiveFunction24.equals((java.lang.Object) objArray35);
        simplexSolver7.f = linearObjectiveFunction24;
        org.apache.commons.math.optimization.GoalType goalType38 = simplexSolver7.goalType;
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = realVectorFormat4.format((java.lang.Object) simplexSolver7, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(goalType9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 100.0d + "'", double26 == 100.0d);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, -1.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(goalType38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #326
30: dup
31: ldc           #20
33: ldc_w         #327
36: ldc_w         #328
39: aload_1
40: invokespecial #329
43: astore_2
44: aload_2
45: invokevirtual #330
48: astore_3
49: new           #8
52: dup
53: dconst_0
54: invokespecial #9
57: astore        4
59: aload         4
61: invokevirtual #78
64: istore        5
66: aload         4
68: getfield      #68
71: astore        6
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: ldc2_w        #10
81: dastore
82: dup
83: iconst_1
84: ldc2_w        #12
87: dastore
88: dup
89: iconst_2
90: ldc2_w        #12
93: dastore
94: dup
95: iconst_3
96: ldc2_w        #10
99: dastore
100: astore        7
102: bipush        6
104: newarray       double
106: dup
107: iconst_0
108: ldc2_w        #14
111: dastore
112: dup
113: iconst_1
114: ldc2_w        #14
117: dastore
118: dup
119: iconst_2
120: ldc2_w        #14
123: dastore
124: dup
125: iconst_3
126: dconst_0
127: dastore
128: dup
129: iconst_4
130: dconst_1
131: dastore
132: dup
133: iconst_5
134: ldc2_w        #10
137: dastore
138: astore        8
140: aload         7
142: aload         8
144: invokestatic  #16
147: dstore        9
149: new           #17
152: dup
153: aload         7
155: ldc2_w        #10
158: invokespecial #18
161: astore        11
163: aload         11
165: invokevirtual #149
168: astore        12
170: aload         11
172: invokevirtual #262
175: dstore        13
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: iconst_1
184: invokestatic  #263
187: aastore
188: dup
189: iconst_1
190: ldc_w         #264
193: invokestatic  #190
196: aastore
197: astore        15
199: new           #265
202: dup
203: ldc           #20
205: aload         15
207: invokespecial #266
210: astore        16
212: new           #267
215: dup
216: ldc_w         #268
219: ldc_w         #269
222: aload         15
224: invokespecial #270
227: astore        17
229: aload         17
231: invokevirtual #271
234: astore        18
236: aload         11
238: aload         18
240: invokevirtual #19
243: istore        19
245: aload         4
247: aload         11
249: putfield      #21
252: aload         4
254: getfield      #68
257: astore        20
259: aconst_null
260: astore        21
262: aconst_null
263: astore        22
265: aload_2
266: aload         4
268: aload         21
270: aload         22
272: invokevirtual #331
275: astore        23
277: ldc           #96
279: invokestatic  #24
282: goto          327
285: astore        23
287: aload         23
289: invokevirtual #98
292: invokevirtual #99
295: ifne          327
298: new           #31
301: dup
302: invokespecial #32
305: ldc           #100
307: invokevirtual #34
310: aload         23
312: invokevirtual #98
315: invokevirtual #101
318: invokevirtual #34
321: invokevirtual #37
324: invokestatic  #24
327: new           #31
330: dup
331: invokespecial #32
334: ldc           #33
336: invokevirtual #34
339: aload_3
340: invokevirtual #34
343: ldc_w         #332
346: invokevirtual #34
349: invokevirtual #37
352: aload_3
353: ldc_w         #328
356: invokestatic  #179
359: new           #31
362: dup
363: invokespecial #32
366: ldc           #33
368: invokevirtual #34
371: iload         5
373: invokevirtual #66
376: ldc           #36
378: invokevirtual #34
381: iconst_0
382: invokevirtual #66
385: ldc           #33
387: invokevirtual #34
390: invokevirtual #37
393: iload         5
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #38
406: aload         6
408: invokestatic  #69
411: aload         7
413: invokestatic  #26
416: aload         7
418: invokestatic  #27
421: ldc           #28
423: invokestatic  #29
426: aload         8
428: invokestatic  #26
431: aload         8
433: invokestatic  #27
436: ldc           #30
438: invokestatic  #29
441: new           #31
444: dup
445: invokespecial #32
448: ldc           #33
450: invokevirtual #34
453: dload         9
455: invokevirtual #35
458: ldc           #36
460: invokevirtual #34
463: ldc2_w        #10
466: invokevirtual #35
469: ldc           #33
471: invokevirtual #34
474: invokevirtual #37
477: dload         9
479: ldc2_w        #10
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #38
494: aload         12
496: invokestatic  #26
499: new           #31
502: dup
503: invokespecial #32
506: ldc           #33
508: invokevirtual #34
511: dload         13
513: invokevirtual #35
516: ldc           #36
518: invokevirtual #34
521: ldc2_w        #10
524: invokevirtual #35
527: ldc           #33
529: invokevirtual #34
532: invokevirtual #37
535: dload         13
537: ldc2_w        #10
540: dcmpl
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #38
552: aload         15
554: invokestatic  #26
557: aload         15
559: invokestatic  #275
562: ldc_w         #276
565: invokestatic  #29
568: aload         15
570: invokestatic  #277
573: ldc_w         #276
576: invokestatic  #29
579: aload         18
581: invokestatic  #26
584: aload         18
586: invokestatic  #275
589: ldc_w         #276
592: invokestatic  #29
595: aload         18
597: invokestatic  #277
600: ldc_w         #276
603: invokestatic  #29
606: new           #31
609: dup
610: invokespecial #32
613: ldc           #33
615: invokevirtual #34
618: iload         19
620: invokevirtual #39
623: ldc           #36
625: invokevirtual #34
628: iconst_0
629: invokevirtual #39
632: ldc           #33
634: invokevirtual #34
637: invokevirtual #37
640: iload         19
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #38
653: aload         20
655: invokestatic  #69
658: return
Exception table:
from    to  target type
265   282   285   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 2939
End line: 2950
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        int int3 = simplexSolver1.getMaxIterations();
        int int4 = simplexSolver1.getMaxIterations();
        simplexSolver1.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: invokevirtual #65
43: istore_3
44: aload_1
45: invokevirtual #65
48: istore        4
50: aload_1
51: invokevirtual #63
54: new           #31
57: dup
58: invokespecial #32
61: ldc           #33
63: invokevirtual #34
66: iload_2
67: invokevirtual #66
70: ldc           #36
72: invokevirtual #34
75: iconst_0
76: invokevirtual #66
79: ldc           #33
81: invokevirtual #34
84: invokevirtual #37
87: iload_2
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #38
99: new           #31
102: dup
103: invokespecial #32
106: ldc           #33
108: invokevirtual #34
111: iload_3
112: invokevirtual #66
115: ldc           #36
117: invokevirtual #34
120: bipush        100
122: invokevirtual #66
125: ldc           #33
127: invokevirtual #34
130: invokevirtual #37
133: iload_3
134: bipush        100
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #38
147: new           #31
150: dup
151: invokespecial #32
154: ldc           #33
156: invokevirtual #34
159: iload         4
161: invokevirtual #66
164: ldc           #36
166: invokevirtual #34
169: bipush        100
171: invokevirtual #66
174: ldc           #33
176: invokevirtual #34
179: invokevirtual #37
182: iload         4
184: bipush        100
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #38
197: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 2953
End line: 3003
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction14 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray4, 100.0d);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix15 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray4);
        org.apache.commons.math.linear.RealMatrix realMatrix17 = array2DRowRealMatrix15.scalarAdd(0.23545686572229663d);
        double[] doubleArray22 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray29 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double30 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray22, doubleArray29);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapAtan();
        org.apache.commons.math.linear.RealVector realVector35 = arrayRealVector33.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver37 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType38 = simplexSolver37.goalType;
        boolean boolean39 = arrayRealVector33.equals((java.lang.Object) goalType38);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector33.mapCbrt();
        double[] doubleArray41 = arrayRealVector33.toArray();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray42 = array2DRowRealMatrix15.preMultiply(doubleArray41);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 100.0d + "'", double30 == 100.0d);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNull(goalType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #10
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #12
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #12
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #10
51: dastore
52: astore_1
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #14
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #14
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #10
88: dastore
89: astore_2
90: aload_1
91: aload_2
92: invokestatic  #16
95: dstore_3
96: new           #17
99: dup
100: aload_1
101: ldc2_w        #10
104: invokespecial #18
107: astore        5
109: new           #187
112: dup
113: aload_1
114: invokespecial #335
117: astore        6
119: aload         6
121: ldc2_w        #336
124: invokevirtual #338
127: astore        7
129: iconst_4
130: newarray       double
132: dup
133: iconst_0
134: ldc2_w        #10
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #12
143: dastore
144: dup
145: iconst_2
146: ldc2_w        #12
149: dastore
150: dup
151: iconst_3
152: ldc2_w        #10
155: dastore
156: astore        8
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #14
167: dastore
168: dup
169: iconst_1
170: ldc2_w        #14
173: dastore
174: dup
175: iconst_2
176: ldc2_w        #14
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #10
193: dastore
194: astore        9
196: aload         8
198: aload         9
200: invokestatic  #16
203: dstore        10
205: new           #48
208: dup
209: aload         8
211: iconst_1
212: iconst_0
213: invokespecial #49
216: astore        12
218: aload         12
220: invokevirtual #50
223: astore        13
225: aload         12
227: invokevirtual #91
230: astore        14
232: aload         12
234: invokevirtual #92
237: astore        15
239: new           #8
242: dup
243: invokespecial #41
246: astore        16
248: aload         16
250: getfield      #68
253: astore        17
255: aload         12
257: aload         17
259: invokevirtual #93
262: istore        18
264: aload         12
266: invokevirtual #122
269: astore        19
271: aload         12
273: invokevirtual #339
276: astore        20
278: aload         6
280: aload         20
282: invokevirtual #340
285: astore        21
287: ldc           #96
289: invokestatic  #24
292: goto          337
295: astore        21
297: aload         21
299: invokevirtual #98
302: invokevirtual #99
305: ifne          337
308: new           #31
311: dup
312: invokespecial #32
315: ldc           #100
317: invokevirtual #34
320: aload         21
322: invokevirtual #98
325: invokevirtual #101
328: invokevirtual #34
331: invokevirtual #37
334: invokestatic  #24
337: aload_1
338: invokestatic  #26
341: aload_1
342: invokestatic  #27
345: ldc           #28
347: invokestatic  #29
350: aload_2
351: invokestatic  #26
354: aload_2
355: invokestatic  #27
358: ldc           #30
360: invokestatic  #29
363: new           #31
366: dup
367: invokespecial #32
370: ldc           #33
372: invokevirtual #34
375: dload_3
376: invokevirtual #35
379: ldc           #36
381: invokevirtual #34
384: ldc2_w        #10
387: invokevirtual #35
390: ldc           #33
392: invokevirtual #34
395: invokevirtual #37
398: dload_3
399: ldc2_w        #10
402: dcmpl
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #38
414: aload         7
416: invokestatic  #26
419: aload         8
421: invokestatic  #26
424: aload         8
426: invokestatic  #27
429: ldc           #28
431: invokestatic  #29
434: aload         9
436: invokestatic  #26
439: aload         9
441: invokestatic  #27
444: ldc           #30
446: invokestatic  #29
449: new           #31
452: dup
453: invokespecial #32
456: ldc           #33
458: invokevirtual #34
461: dload         10
463: invokevirtual #35
466: ldc           #36
468: invokevirtual #34
471: ldc2_w        #10
474: invokevirtual #35
477: ldc           #33
479: invokevirtual #34
482: invokevirtual #37
485: dload         10
487: ldc2_w        #10
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #38
502: aload         13
504: invokestatic  #26
507: aload         14
509: invokestatic  #26
512: aload         15
514: invokestatic  #26
517: aload         17
519: invokestatic  #69
522: new           #31
525: dup
526: invokespecial #32
529: ldc           #33
531: invokevirtual #34
534: iload         18
536: invokevirtual #39
539: ldc           #36
541: invokevirtual #34
544: iconst_0
545: invokevirtual #39
548: ldc           #33
550: invokevirtual #34
553: invokevirtual #37
556: iload         18
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #38
569: aload         19
571: invokestatic  #26
574: aload         20
576: invokestatic  #26
579: aload         20
581: invokestatic  #27
584: ldc           #139
586: invokestatic  #29
589: return
Exception table:
from    to  target type
278   292   295   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 3006
End line: 3015
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.restrictToNonNegative = true;
        double double4 = simplexSolver1.epsilon;
        int int5 = simplexSolver1.getMaxIterations();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: iconst_1
36: putfield      #71
39: aload_1
40: getfield      #75
43: dstore_2
44: aload_1
45: invokevirtual #65
48: istore        4
50: new           #31
53: dup
54: invokespecial #32
57: ldc           #33
59: invokevirtual #34
62: dload_2
63: invokevirtual #35
66: ldc           #36
68: invokevirtual #34
71: dconst_0
72: invokevirtual #35
75: ldc           #33
77: invokevirtual #34
80: invokevirtual #37
83: dload_2
84: dconst_0
85: dcmpl
86: ifne          93
89: iconst_1
90: goto          94
93: iconst_0
94: invokestatic  #38
97: new           #31
100: dup
101: invokespecial #32
104: ldc           #33
106: invokevirtual #34
109: iload         4
111: invokevirtual #66
114: ldc           #36
116: invokevirtual #34
119: bipush        100
121: invokevirtual #66
124: ldc           #33
126: invokevirtual #34
129: invokevirtual #37
132: iload         4
134: bipush        100
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #38
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 3018
End line: 3099
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        double[] doubleArray26 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double27 = linearObjectiveFunction16.getValue(doubleArray26);
        double[] doubleArray32 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray39 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double40 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray32, doubleArray39);
        boolean boolean41 = org.apache.commons.math.util.MathUtils.equals(doubleArray26, doubleArray32);
        double[] doubleArray46 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray53 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double54 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray46, doubleArray53);
        int int55 = org.apache.commons.math.util.MathUtils.hash(doubleArray46);
        double[] doubleArray60 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray67 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double68 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray60, doubleArray67);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray60, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector72 = arrayRealVector71.mapAtan();
        org.apache.commons.math.linear.RealVector realVector73 = arrayRealVector71.mapSinhToSelf();
        boolean boolean75 = arrayRealVector71.equals((java.lang.Object) 929961857);
        double[] doubleArray80 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray87 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double88 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray80, doubleArray87);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector91 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray80, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector92 = arrayRealVector91.mapAtan();
        org.apache.commons.math.linear.RealVector realVector93 = arrayRealVector91.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector94 = arrayRealVector71.projection((org.apache.commons.math.linear.RealVector) arrayRealVector91);
        double[] doubleArray95 = arrayRealVector91.getDataRef();
        org.apache.commons.math.optimization.RealPointValuePair realPointValuePair97 = new org.apache.commons.math.optimization.RealPointValuePair(doubleArray95, (double) 0L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector98 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray46, doubleArray95);
        boolean boolean99 = org.apache.commons.math.util.MathUtils.equals(doubleArray26, doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.194558835742002E15d + "'", double27 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 929961857 + "'", int55 == 929961857);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(realVector73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 100.0d + "'", double88 == 100.0d);
        org.junit.Assert.assertNotNull(realVector92);
        org.junit.Assert.assertNotNull(realVector93);
        org.junit.Assert.assertNotNull(realVector94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #342
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: iconst_4
147: newarray       double
149: dup
150: iconst_0
151: ldc2_w        #106
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #108
160: dastore
161: dup
162: iconst_2
163: dconst_1
164: dastore
165: dup
166: iconst_3
167: dconst_0
168: dastore
169: astore        10
171: aload         6
173: aload         10
175: invokevirtual #110
178: dstore        11
180: iconst_4
181: newarray       double
183: dup
184: iconst_0
185: ldc2_w        #10
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #12
194: dastore
195: dup
196: iconst_2
197: ldc2_w        #12
200: dastore
201: dup
202: iconst_3
203: ldc2_w        #10
206: dastore
207: astore        13
209: bipush        6
211: newarray       double
213: dup
214: iconst_0
215: ldc2_w        #14
218: dastore
219: dup
220: iconst_1
221: ldc2_w        #14
224: dastore
225: dup
226: iconst_2
227: ldc2_w        #14
230: dastore
231: dup
232: iconst_3
233: dconst_0
234: dastore
235: dup
236: iconst_4
237: dconst_1
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #10
244: dastore
245: astore        14
247: aload         13
249: aload         14
251: invokestatic  #16
254: dstore        15
256: aload         10
258: aload         13
260: invokestatic  #111
263: istore        17
265: iconst_4
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #10
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #12
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #12
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #10
291: dastore
292: astore        18
294: bipush        6
296: newarray       double
298: dup
299: iconst_0
300: ldc2_w        #14
303: dastore
304: dup
305: iconst_1
306: ldc2_w        #14
309: dastore
310: dup
311: iconst_2
312: ldc2_w        #14
315: dastore
316: dup
317: iconst_3
318: dconst_0
319: dastore
320: dup
321: iconst_4
322: dconst_1
323: dastore
324: dup
325: iconst_5
326: ldc2_w        #10
329: dastore
330: astore        19
332: aload         18
334: aload         19
336: invokestatic  #16
339: dstore        20
341: aload         18
343: invokestatic  #308
346: istore        22
348: iconst_4
349: newarray       double
351: dup
352: iconst_0
353: ldc2_w        #10
356: dastore
357: dup
358: iconst_1
359: ldc2_w        #12
362: dastore
363: dup
364: iconst_2
365: ldc2_w        #12
368: dastore
369: dup
370: iconst_3
371: ldc2_w        #10
374: dastore
375: astore        23
377: bipush        6
379: newarray       double
381: dup
382: iconst_0
383: ldc2_w        #14
386: dastore
387: dup
388: iconst_1
389: ldc2_w        #14
392: dastore
393: dup
394: iconst_2
395: ldc2_w        #14
398: dastore
399: dup
400: iconst_3
401: dconst_0
402: dastore
403: dup
404: iconst_4
405: dconst_1
406: dastore
407: dup
408: iconst_5
409: ldc2_w        #10
412: dastore
413: astore        24
415: aload         23
417: aload         24
419: invokestatic  #16
422: dstore        25
424: new           #48
427: dup
428: aload         23
430: iconst_1
431: iconst_0
432: invokespecial #49
435: astore        27
437: aload         27
439: invokevirtual #50
442: astore        28
444: aload         27
446: invokevirtual #91
449: astore        29
451: aload         27
453: ldc_w         #268
456: invokestatic  #263
459: invokevirtual #93
462: istore        30
464: iconst_4
465: newarray       double
467: dup
468: iconst_0
469: ldc2_w        #10
472: dastore
473: dup
474: iconst_1
475: ldc2_w        #12
478: dastore
479: dup
480: iconst_2
481: ldc2_w        #12
484: dastore
485: dup
486: iconst_3
487: ldc2_w        #10
490: dastore
491: astore        31
493: bipush        6
495: newarray       double
497: dup
498: iconst_0
499: ldc2_w        #14
502: dastore
503: dup
504: iconst_1
505: ldc2_w        #14
508: dastore
509: dup
510: iconst_2
511: ldc2_w        #14
514: dastore
515: dup
516: iconst_3
517: dconst_0
518: dastore
519: dup
520: iconst_4
521: dconst_1
522: dastore
523: dup
524: iconst_5
525: ldc2_w        #10
528: dastore
529: astore        32
531: aload         31
533: aload         32
535: invokestatic  #16
538: dstore        33
540: new           #48
543: dup
544: aload         31
546: iconst_1
547: iconst_0
548: invokespecial #49
551: astore        35
553: aload         35
555: invokevirtual #50
558: astore        36
560: aload         35
562: invokevirtual #91
565: astore        37
567: aload         27
569: aload         35
571: invokevirtual #132
574: astore        38
576: aload         35
578: invokevirtual #219
581: astore        39
583: new           #238
586: dup
587: aload         39
589: dconst_0
590: invokespecial #313
593: astore        40
595: new           #48
598: dup
599: aload         18
601: aload         39
603: invokespecial #314
606: astore        41
608: aload         10
610: aload         18
612: invokestatic  #111
615: istore        42
617: aload_2
618: invokestatic  #26
621: aload_2
622: invokestatic  #27
625: ldc           #28
627: invokestatic  #29
630: aload_3
631: invokestatic  #26
634: aload_3
635: invokestatic  #27
638: ldc           #30
640: invokestatic  #29
643: new           #31
646: dup
647: invokespecial #32
650: ldc           #33
652: invokevirtual #34
655: dload         4
657: invokevirtual #35
660: ldc           #36
662: invokevirtual #34
665: ldc2_w        #10
668: invokevirtual #35
671: ldc           #33
673: invokevirtual #34
676: invokevirtual #37
679: dload         4
681: ldc2_w        #10
684: dcmpl
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #38
696: new           #31
699: dup
700: invokespecial #32
703: ldc           #33
705: invokevirtual #34
708: iload         8
710: invokevirtual #39
713: ldc           #36
715: invokevirtual #34
718: iconst_0
719: invokevirtual #39
722: ldc           #33
724: invokevirtual #34
727: invokevirtual #37
730: iload         8
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #38
743: new           #31
746: dup
747: invokespecial #32
750: ldc           #33
752: invokevirtual #34
755: iload         9
757: invokevirtual #39
760: ldc           #36
762: invokevirtual #34
765: iconst_0
766: invokevirtual #39
769: ldc           #33
771: invokevirtual #34
774: invokevirtual #37
777: iload         9
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #38
790: aload         10
792: invokestatic  #26
795: aload         10
797: invokestatic  #27
800: ldc           #116
802: invokestatic  #29
805: new           #31
808: dup
809: invokespecial #32
812: ldc           #33
814: invokevirtual #34
817: dload         11
819: invokevirtual #35
822: ldc           #36
824: invokevirtual #34
827: ldc2_w        #117
830: invokevirtual #35
833: ldc           #33
835: invokevirtual #34
838: invokevirtual #37
841: dload         11
843: ldc2_w        #117
846: dcmpl
847: ifne          854
850: iconst_1
851: goto          855
854: iconst_0
855: invokestatic  #38
858: aload         13
860: invokestatic  #26
863: aload         13
865: invokestatic  #27
868: ldc           #28
870: invokestatic  #29
873: aload         14
875: invokestatic  #26
878: aload         14
880: invokestatic  #27
883: ldc           #30
885: invokestatic  #29
888: new           #31
891: dup
892: invokespecial #32
895: ldc           #33
897: invokevirtual #34
900: dload         15
902: invokevirtual #35
905: ldc           #36
907: invokevirtual #34
910: ldc2_w        #10
913: invokevirtual #35
916: ldc           #33
918: invokevirtual #34
921: invokevirtual #37
924: dload         15
926: ldc2_w        #10
929: dcmpl
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #38
941: new           #31
944: dup
945: invokespecial #32
948: ldc           #33
950: invokevirtual #34
953: iload         17
955: invokevirtual #39
958: ldc           #36
960: invokevirtual #34
963: iconst_0
964: invokevirtual #39
967: ldc           #33
969: invokevirtual #34
972: invokevirtual #37
975: iload         17
977: ifne          984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #38
988: aload         18
990: invokestatic  #26
993: aload         18
995: invokestatic  #27
998: ldc           #28
1000: invokestatic  #29
1003: aload         19
1005: invokestatic  #26
1008: aload         19
1010: invokestatic  #27
1013: ldc           #30
1015: invokestatic  #29
1018: new           #31
1021: dup
1022: invokespecial #32
1025: ldc           #33
1027: invokevirtual #34
1030: dload         20
1032: invokevirtual #35
1035: ldc           #36
1037: invokevirtual #34
1040: ldc2_w        #10
1043: invokevirtual #35
1046: ldc           #33
1048: invokevirtual #34
1051: invokevirtual #37
1054: dload         20
1056: ldc2_w        #10
1059: dcmpl
1060: ifne          1067
1063: iconst_1
1064: goto          1068
1067: iconst_0
1068: invokestatic  #38
1071: new           #31
1074: dup
1075: invokespecial #32
1078: ldc           #33
1080: invokevirtual #34
1083: iload         22
1085: invokevirtual #66
1088: ldc           #36
1090: invokevirtual #34
1093: ldc_w         #268
1096: invokevirtual #66
1099: ldc           #33
1101: invokevirtual #34
1104: invokevirtual #37
1107: iload         22
1109: ldc_w         #268
1112: if_icmpne     1119
1115: iconst_1
1116: goto          1120
1119: iconst_0
1120: invokestatic  #38
1123: aload         23
1125: invokestatic  #26
1128: aload         23
1130: invokestatic  #27
1133: ldc           #28
1135: invokestatic  #29
1138: aload         24
1140: invokestatic  #26
1143: aload         24
1145: invokestatic  #27
1148: ldc           #30
1150: invokestatic  #29
1153: new           #31
1156: dup
1157: invokespecial #32
1160: ldc           #33
1162: invokevirtual #34
1165: dload         25
1167: invokevirtual #35
1170: ldc           #36
1172: invokevirtual #34
1175: ldc2_w        #10
1178: invokevirtual #35
1181: ldc           #33
1183: invokevirtual #34
1186: invokevirtual #37
1189: dload         25
1191: ldc2_w        #10
1194: dcmpl
1195: ifne          1202
1198: iconst_1
1199: goto          1203
1202: iconst_0
1203: invokestatic  #38
1206: aload         28
1208: invokestatic  #26
1211: aload         29
1213: invokestatic  #26
1216: new           #31
1219: dup
1220: invokespecial #32
1223: ldc           #33
1225: invokevirtual #34
1228: iload         30
1230: invokevirtual #39
1233: ldc           #36
1235: invokevirtual #34
1238: iconst_0
1239: invokevirtual #39
1242: ldc           #33
1244: invokevirtual #34
1247: invokevirtual #37
1250: iload         30
1252: ifne          1259
1255: iconst_1
1256: goto          1260
1259: iconst_0
1260: invokestatic  #38
1263: aload         31
1265: invokestatic  #26
1268: aload         31
1270: invokestatic  #27
1273: ldc           #28
1275: invokestatic  #29
1278: aload         32
1280: invokestatic  #26
1283: aload         32
1285: invokestatic  #27
1288: ldc           #30
1290: invokestatic  #29
1293: new           #31
1296: dup
1297: invokespecial #32
1300: ldc           #33
1302: invokevirtual #34
1305: dload         33
1307: invokevirtual #35
1310: ldc           #36
1312: invokevirtual #34
1315: ldc2_w        #10
1318: invokevirtual #35
1321: ldc           #33
1323: invokevirtual #34
1326: invokevirtual #37
1329: dload         33
1331: ldc2_w        #10
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #38
1346: aload         36
1348: invokestatic  #26
1351: aload         37
1353: invokestatic  #26
1356: aload         38
1358: invokestatic  #26
1361: aload         39
1363: invokestatic  #26
1366: aload         39
1368: invokestatic  #27
1371: ldc           #139
1373: invokestatic  #29
1376: new           #31
1379: dup
1380: invokespecial #32
1383: ldc           #33
1385: invokevirtual #34
1388: iload         42
1390: invokevirtual #39
1393: ldc           #36
1395: invokevirtual #34
1398: iconst_0
1399: invokevirtual #39
1402: ldc           #33
1404: invokevirtual #34
1407: invokevirtual #37
1410: iload         42
1412: ifne          1419
1415: iconst_1
1416: goto          1420
1419: iconst_0
1420: invokestatic  #38
1423: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 3102
End line: 3127
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.linear.RealVector realVector22 = linearObjectiveFunction16.getCoefficients();
        double double23 = linearObjectiveFunction16.getConstantTerm();
        org.apache.commons.math.linear.RealVector realVector24 = linearObjectiveFunction16.getCoefficients();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertNotNull(realVector24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: aload         6
148: invokevirtual #149
151: astore        10
153: aload         6
155: invokevirtual #262
158: dstore        11
160: aload         6
162: invokevirtual #149
165: astore        13
167: aload_2
168: invokestatic  #26
171: aload_2
172: invokestatic  #27
175: ldc           #28
177: invokestatic  #29
180: aload_3
181: invokestatic  #26
184: aload_3
185: invokestatic  #27
188: ldc           #30
190: invokestatic  #29
193: new           #31
196: dup
197: invokespecial #32
200: ldc           #33
202: invokevirtual #34
205: dload         4
207: invokevirtual #35
210: ldc           #36
212: invokevirtual #34
215: ldc2_w        #10
218: invokevirtual #35
221: ldc           #33
223: invokevirtual #34
226: invokevirtual #37
229: dload         4
231: ldc2_w        #10
234: dcmpl
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #38
246: new           #31
249: dup
250: invokespecial #32
253: ldc           #33
255: invokevirtual #34
258: iload         8
260: invokevirtual #39
263: ldc           #36
265: invokevirtual #34
268: iconst_0
269: invokevirtual #39
272: ldc           #33
274: invokevirtual #34
277: invokevirtual #37
280: iload         8
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #38
293: new           #31
296: dup
297: invokespecial #32
300: ldc           #33
302: invokevirtual #34
305: iload         9
307: invokevirtual #39
310: ldc           #36
312: invokevirtual #34
315: iconst_0
316: invokevirtual #39
319: ldc           #33
321: invokevirtual #34
324: invokevirtual #37
327: iload         9
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #38
340: aload         10
342: invokestatic  #26
345: new           #31
348: dup
349: invokespecial #32
352: ldc           #33
354: invokevirtual #34
357: dload         11
359: invokevirtual #35
362: ldc           #36
364: invokevirtual #34
367: ldc2_w        #10
370: invokevirtual #35
373: ldc           #33
375: invokevirtual #34
378: invokevirtual #37
381: dload         11
383: ldc2_w        #10
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #38
398: aload         13
400: invokestatic  #26
403: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 3130
End line: 3139
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations(97);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #68
43: astore_3
44: aload_1
45: bipush        97
47: invokevirtual #61
50: new           #31
53: dup
54: invokespecial #32
57: ldc           #33
59: invokevirtual #34
62: iload_2
63: invokevirtual #66
66: ldc           #36
68: invokevirtual #34
71: iconst_0
72: invokevirtual #66
75: ldc           #33
77: invokevirtual #34
80: invokevirtual #37
83: iload_2
84: ifne          91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #38
95: aload_3
96: invokestatic  #69
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 3142
End line: 3152
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction3 = simplexSolver1.f;
        int int4 = simplexSolver1.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(linearObjectiveFunction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #345
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #21
43: astore_3
44: aload_1
45: invokevirtual #65
48: istore        4
50: new           #31
53: dup
54: invokespecial #32
57: ldc           #33
59: invokevirtual #34
62: iload_2
63: invokevirtual #66
66: ldc           #36
68: invokevirtual #34
71: iconst_0
72: invokevirtual #66
75: ldc           #33
77: invokevirtual #34
80: invokevirtual #37
83: iload_2
84: ifne          91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #38
95: aload_3
96: invokestatic  #69
99: new           #31
102: dup
103: invokespecial #32
106: ldc           #33
108: invokevirtual #34
111: iload         4
113: invokevirtual #66
116: ldc           #36
118: invokevirtual #34
121: bipush        100
123: invokevirtual #66
126: ldc           #33
128: invokevirtual #34
131: invokevirtual #37
134: iload         4
136: bipush        100
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #38
149: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 3155
End line: 3162
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        simplexSolver0.setMaxIterations(133);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #346
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: invokevirtual #65
37: istore_2
38: aload_1
39: sipush        133
42: invokevirtual #61
45: new           #31
48: dup
49: invokespecial #32
52: ldc           #33
54: invokevirtual #34
57: iload_2
58: invokevirtual #66
61: ldc           #36
63: invokevirtual #34
66: bipush        100
68: invokevirtual #66
71: ldc           #33
73: invokevirtual #34
76: invokevirtual #37
79: iload_2
80: bipush        100
82: if_icmpne     89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #38
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 3165
End line: 3171
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        double double1 = simplexSolver0.epsilon;
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0E-6d + "'", double1 == 1.0E-6d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #347
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: getfield      #75
37: dstore_2
38: new           #31
41: dup
42: invokespecial #32
45: ldc           #33
47: invokevirtual #34
50: dload_2
51: invokevirtual #35
54: ldc           #36
56: invokevirtual #34
59: ldc2_w        #249
62: invokevirtual #35
65: ldc           #33
67: invokevirtual #34
70: invokevirtual #37
73: dload_2
74: ldc2_w        #249
77: dcmpl
78: ifne          85
81: iconst_1
82: goto          86
85: iconst_0
86: invokestatic  #38
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 3174
End line: 3178
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (-50));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #349
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 3181
End line: 3196
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.GoalType goalType4 = simplexSolver0.goalType;
        boolean boolean5 = simplexSolver0.restrictToNonNegative;
        int int6 = simplexSolver0.getMaxIterations();
        int int7 = simplexSolver0.getMaxIterations();
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-50) + "'", int6 == (-50));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-50) + "'", int7 == (-50));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: getfield      #68
37: astore_2
38: aload_1
39: bipush        -50
41: invokevirtual #61
44: aload_1
45: getfield      #68
48: astore_3
49: aload_1
50: getfield      #71
53: istore        4
55: aload_1
56: invokevirtual #65
59: istore        5
61: aload_1
62: invokevirtual #65
65: istore        6
67: aload_2
68: invokestatic  #69
71: aload_3
72: invokestatic  #69
75: new           #31
78: dup
79: invokespecial #32
82: ldc           #33
84: invokevirtual #34
87: iload         4
89: invokevirtual #39
92: ldc           #36
94: invokevirtual #34
97: iconst_0
98: invokevirtual #39
101: ldc           #33
103: invokevirtual #34
106: invokevirtual #37
109: iload         4
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #38
122: new           #31
125: dup
126: invokespecial #32
129: ldc           #33
131: invokevirtual #34
134: iload         5
136: invokevirtual #66
139: ldc           #36
141: invokevirtual #34
144: bipush        -50
146: invokevirtual #66
149: ldc           #33
151: invokevirtual #34
154: invokevirtual #37
157: iload         5
159: bipush        -50
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #38
172: new           #31
175: dup
176: invokespecial #32
179: ldc           #33
181: invokevirtual #34
184: iload         6
186: invokevirtual #66
189: ldc           #36
191: invokevirtual #34
194: bipush        -50
196: invokevirtual #66
199: ldc           #33
201: invokevirtual #34
204: invokevirtual #37
207: iload         6
209: bipush        -50
211: if_icmpne     218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #38
222: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 3199
End line: 3213
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.GoalType goalType4 = simplexSolver0.goalType;
        boolean boolean5 = simplexSolver0.restrictToNonNegative;
        int int6 = simplexSolver0.getMaxIterations();
        simplexSolver0.setMaxIterations(0);
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-50) + "'", int6 == (-50));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #352
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: getfield      #68
37: astore_2
38: aload_1
39: bipush        -50
41: invokevirtual #61
44: aload_1
45: getfield      #68
48: astore_3
49: aload_1
50: getfield      #71
53: istore        4
55: aload_1
56: invokevirtual #65
59: istore        5
61: aload_1
62: iconst_0
63: invokevirtual #61
66: aload_2
67: invokestatic  #69
70: aload_3
71: invokestatic  #69
74: new           #31
77: dup
78: invokespecial #32
81: ldc           #33
83: invokevirtual #34
86: iload         4
88: invokevirtual #39
91: ldc           #36
93: invokevirtual #34
96: iconst_0
97: invokevirtual #39
100: ldc           #33
102: invokevirtual #34
105: invokevirtual #37
108: iload         4
110: ifne          117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #38
121: new           #31
124: dup
125: invokespecial #32
128: ldc           #33
130: invokevirtual #34
133: iload         5
135: invokevirtual #66
138: ldc           #36
140: invokevirtual #34
143: bipush        -50
145: invokevirtual #66
148: ldc           #33
150: invokevirtual #34
153: invokevirtual #37
156: iload         5
158: bipush        -50
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #38
171: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 3216
End line: 3294
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        double[] doubleArray4 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray11 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double12 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray11);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector15.mapAtan();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector15.append(0.0d);
        arrayRealVector15.set((double) (short) 1);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector15.mapExp();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(realVector22);
        org.apache.commons.math.linear.RealVector realVector24 = arrayRealVector23.mapUlpToSelf();
        double[] doubleArray29 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray36 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double37 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray29, doubleArray36);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray29, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector41 = arrayRealVector40.mapAtan();
        org.apache.commons.math.linear.RealVector realVector42 = arrayRealVector40.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector43 = arrayRealVector40.mapAcosToSelf();
        double[] doubleArray44 = arrayRealVector40.getData();
        double double45 = arrayRealVector23.getDistance(doubleArray44);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector();
        double[] doubleArray52 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray59 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double60 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray52, doubleArray59);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray52, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector64 = arrayRealVector63.mapAtan();
        org.apache.commons.math.linear.RealVector realVector65 = arrayRealVector63.mapSinhToSelf();
        org.apache.commons.math.linear.RealVector realVector66 = arrayRealVector63.mapAcosToSelf();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver67 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType68 = simplexSolver67.goalType;
        boolean boolean69 = arrayRealVector63.equals((java.lang.Object) goalType68);
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector63.mapCbrt();
        org.apache.commons.math.linear.RealVector realVector72 = arrayRealVector63.mapAdd((double) 10);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = arrayRealVector47.add(arrayRealVector63);
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector23.set(102, arrayRealVector47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: index 102 out of allowed range [0, -1]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.0d + "'", double60 == 100.0d);
        org.junit.Assert.assertNotNull(realVector64);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertNull(goalType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(arrayRealVector73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #10
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #12
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #12
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #10
51: dastore
52: astore_1
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #14
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #14
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #14
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #10
88: dastore
89: astore_2
90: aload_1
91: aload_2
92: invokestatic  #16
95: dstore_3
96: new           #48
99: dup
100: aload_1
101: iconst_1
102: iconst_0
103: invokespecial #49
106: astore        5
108: aload         5
110: invokevirtual #50
113: astore        6
115: aload         5
117: invokevirtual #91
120: astore        7
122: aload         5
124: dconst_0
125: invokevirtual #168
128: astore        8
130: aload         5
132: dconst_1
133: invokevirtual #354
136: aload         5
138: invokevirtual #196
141: astore        9
143: new           #48
146: dup
147: aload         9
149: invokespecial #355
152: astore        10
154: aload         10
156: invokevirtual #356
159: astore        11
161: iconst_4
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #10
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #12
175: dastore
176: dup
177: iconst_2
178: ldc2_w        #12
181: dastore
182: dup
183: iconst_3
184: ldc2_w        #10
187: dastore
188: astore        12
190: bipush        6
192: newarray       double
194: dup
195: iconst_0
196: ldc2_w        #14
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #14
205: dastore
206: dup
207: iconst_2
208: ldc2_w        #14
211: dastore
212: dup
213: iconst_3
214: dconst_0
215: dastore
216: dup
217: iconst_4
218: dconst_1
219: dastore
220: dup
221: iconst_5
222: ldc2_w        #10
225: dastore
226: astore        13
228: aload         12
230: aload         13
232: invokestatic  #16
235: dstore        14
237: new           #48
240: dup
241: aload         12
243: iconst_1
244: iconst_0
245: invokespecial #49
248: astore        16
250: aload         16
252: invokevirtual #50
255: astore        17
257: aload         16
259: invokevirtual #91
262: astore        18
264: aload         16
266: invokevirtual #92
269: astore        19
271: aload         16
273: invokevirtual #357
276: astore        20
278: aload         10
280: aload         20
282: invokevirtual #358
285: dstore        21
287: new           #48
290: dup
291: invokespecial #204
294: astore        23
296: iconst_4
297: newarray       double
299: dup
300: iconst_0
301: ldc2_w        #10
304: dastore
305: dup
306: iconst_1
307: ldc2_w        #12
310: dastore
311: dup
312: iconst_2
313: ldc2_w        #12
316: dastore
317: dup
318: iconst_3
319: ldc2_w        #10
322: dastore
323: astore        24
325: bipush        6
327: newarray       double
329: dup
330: iconst_0
331: ldc2_w        #14
334: dastore
335: dup
336: iconst_1
337: ldc2_w        #14
340: dastore
341: dup
342: iconst_2
343: ldc2_w        #14
346: dastore
347: dup
348: iconst_3
349: dconst_0
350: dastore
351: dup
352: iconst_4
353: dconst_1
354: dastore
355: dup
356: iconst_5
357: ldc2_w        #10
360: dastore
361: astore        25
363: aload         24
365: aload         25
367: invokestatic  #16
370: dstore        26
372: new           #48
375: dup
376: aload         24
378: iconst_1
379: iconst_0
380: invokespecial #49
383: astore        28
385: aload         28
387: invokevirtual #50
390: astore        29
392: aload         28
394: invokevirtual #91
397: astore        30
399: aload         28
401: invokevirtual #92
404: astore        31
406: new           #8
409: dup
410: invokespecial #41
413: astore        32
415: aload         32
417: getfield      #68
420: astore        33
422: aload         28
424: aload         33
426: invokevirtual #93
429: istore        34
431: aload         28
433: invokevirtual #122
436: astore        35
438: aload         28
440: ldc2_w        #14
443: invokevirtual #246
446: astore        36
448: aload         23
450: aload         28
452: invokevirtual #247
455: astore        37
457: aload         10
459: bipush        102
461: aload         23
463: invokevirtual #359
466: ldc_w         #360
469: invokestatic  #24
472: goto          477
475: astore        38
477: aload_1
478: invokestatic  #26
481: aload_1
482: invokestatic  #27
485: ldc           #28
487: invokestatic  #29
490: aload_2
491: invokestatic  #26
494: aload_2
495: invokestatic  #27
498: ldc           #30
500: invokestatic  #29
503: new           #31
506: dup
507: invokespecial #32
510: ldc           #33
512: invokevirtual #34
515: dload_3
516: invokevirtual #35
519: ldc           #36
521: invokevirtual #34
524: ldc2_w        #10
527: invokevirtual #35
530: ldc           #33
532: invokevirtual #34
535: invokevirtual #37
538: dload_3
539: ldc2_w        #10
542: dcmpl
543: ifne          550
546: iconst_1
547: goto          551
550: iconst_0
551: invokestatic  #38
554: aload         6
556: invokestatic  #26
559: aload         7
561: invokestatic  #26
564: aload         8
566: invokestatic  #26
569: aload         9
571: invokestatic  #26
574: aload         11
576: invokestatic  #26
579: aload         12
581: invokestatic  #26
584: aload         12
586: invokestatic  #27
589: ldc           #28
591: invokestatic  #29
594: aload         13
596: invokestatic  #26
599: aload         13
601: invokestatic  #27
604: ldc           #30
606: invokestatic  #29
609: new           #31
612: dup
613: invokespecial #32
616: ldc           #33
618: invokevirtual #34
621: dload         14
623: invokevirtual #35
626: ldc           #36
628: invokevirtual #34
631: ldc2_w        #10
634: invokevirtual #35
637: ldc           #33
639: invokevirtual #34
642: invokevirtual #37
645: dload         14
647: ldc2_w        #10
650: dcmpl
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #38
662: aload         17
664: invokestatic  #26
667: aload         18
669: invokestatic  #26
672: aload         19
674: invokestatic  #26
677: aload         20
679: invokestatic  #26
682: aload         20
684: invokestatic  #27
687: ldc           #139
689: invokestatic  #29
692: new           #31
695: dup
696: invokespecial #32
699: ldc           #33
701: invokevirtual #34
704: dload         21
706: invokevirtual #35
709: ldc           #36
711: invokevirtual #34
714: dconst_0
715: invokevirtual #35
718: ldc           #33
720: invokevirtual #34
723: invokevirtual #37
726: dload         21
728: dconst_0
729: dcmpl
730: ifne          737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #38
741: aload         24
743: invokestatic  #26
746: aload         24
748: invokestatic  #27
751: ldc           #28
753: invokestatic  #29
756: aload         25
758: invokestatic  #26
761: aload         25
763: invokestatic  #27
766: ldc           #30
768: invokestatic  #29
771: new           #31
774: dup
775: invokespecial #32
778: ldc           #33
780: invokevirtual #34
783: dload         26
785: invokevirtual #35
788: ldc           #36
790: invokevirtual #34
793: ldc2_w        #10
796: invokevirtual #35
799: ldc           #33
801: invokevirtual #34
804: invokevirtual #37
807: dload         26
809: ldc2_w        #10
812: dcmpl
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #38
824: aload         29
826: invokestatic  #26
829: aload         30
831: invokestatic  #26
834: aload         31
836: invokestatic  #26
839: aload         33
841: invokestatic  #69
844: new           #31
847: dup
848: invokespecial #32
851: ldc           #33
853: invokevirtual #34
856: iload         34
858: invokevirtual #39
861: ldc           #36
863: invokevirtual #34
866: iconst_0
867: invokevirtual #39
870: ldc           #33
872: invokevirtual #34
875: invokevirtual #37
878: iload         34
880: ifne          887
883: iconst_1
884: goto          888
887: iconst_0
888: invokestatic  #38
891: aload         35
893: invokestatic  #26
896: aload         36
898: invokestatic  #26
901: aload         37
903: invokestatic  #26
906: return
Exception table:
from    to  target type
457   472   475   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 3297
End line: 3343
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector2.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver5 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        boolean boolean24 = linearObjectiveFunction20.equals((java.lang.Object) "hi!");
        simplexSolver5.f = linearObjectiveFunction20;
        double[] doubleArray30 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double31 = linearObjectiveFunction20.getValue(doubleArray30);
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        boolean boolean45 = org.apache.commons.math.util.MathUtils.equals(doubleArray30, doubleArray36);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector2.append(doubleArray30);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector2.copy();
        org.apache.commons.math.linear.RealVector realVector48 = arrayRealVector2.mapExp();
        double[] doubleArray49 = arrayRealVector2.toArray();
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.194558835742002E15d + "'", double31 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: new           #48
28: dup
29: iconst_0
30: ldc2_w        #12
33: invokespecial #104
36: astore_1
37: aload_1
38: invokevirtual #105
41: astore_2
42: new           #8
45: dup
46: dconst_0
47: invokespecial #9
50: astore_3
51: iconst_4
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #10
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #12
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #12
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #10
77: dastore
78: astore        4
80: bipush        6
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #14
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #14
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #14
101: dastore
102: dup
103: iconst_3
104: dconst_0
105: dastore
106: dup
107: iconst_4
108: dconst_1
109: dastore
110: dup
111: iconst_5
112: ldc2_w        #10
115: dastore
116: astore        5
118: aload         4
120: aload         5
122: invokestatic  #16
125: dstore        6
127: new           #17
130: dup
131: aload         4
133: ldc2_w        #10
136: invokespecial #18
139: astore        8
141: aconst_null
142: astore        9
144: aload         8
146: aload         9
148: invokevirtual #19
151: istore        10
153: aload         8
155: ldc           #20
157: invokevirtual #19
160: istore        11
162: aload_3
163: aload         8
165: putfield      #21
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: ldc2_w        #106
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #108
182: dastore
183: dup
184: iconst_2
185: dconst_1
186: dastore
187: dup
188: iconst_3
189: dconst_0
190: dastore
191: astore        12
193: aload         8
195: aload         12
197: invokevirtual #110
200: dstore        13
202: iconst_4
203: newarray       double
205: dup
206: iconst_0
207: ldc2_w        #10
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #12
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #12
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #10
228: dastore
229: astore        15
231: bipush        6
233: newarray       double
235: dup
236: iconst_0
237: ldc2_w        #14
240: dastore
241: dup
242: iconst_1
243: ldc2_w        #14
246: dastore
247: dup
248: iconst_2
249: ldc2_w        #14
252: dastore
253: dup
254: iconst_3
255: dconst_0
256: dastore
257: dup
258: iconst_4
259: dconst_1
260: dastore
261: dup
262: iconst_5
263: ldc2_w        #10
266: dastore
267: astore        16
269: aload         15
271: aload         16
273: invokestatic  #16
276: dstore        17
278: aload         12
280: aload         15
282: invokestatic  #111
285: istore        19
287: aload_1
288: aload         12
290: invokevirtual #112
293: astore        20
295: aload_1
296: invokevirtual #295
299: astore        21
301: aload_1
302: invokevirtual #196
305: astore        22
307: aload_1
308: invokevirtual #339
311: astore        23
313: aload_2
314: invokestatic  #26
317: aload         4
319: invokestatic  #26
322: aload         4
324: invokestatic  #27
327: ldc           #28
329: invokestatic  #29
332: aload         5
334: invokestatic  #26
337: aload         5
339: invokestatic  #27
342: ldc           #30
344: invokestatic  #29
347: new           #31
350: dup
351: invokespecial #32
354: ldc           #33
356: invokevirtual #34
359: dload         6
361: invokevirtual #35
364: ldc           #36
366: invokevirtual #34
369: ldc2_w        #10
372: invokevirtual #35
375: ldc           #33
377: invokevirtual #34
380: invokevirtual #37
383: dload         6
385: ldc2_w        #10
388: dcmpl
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #38
400: new           #31
403: dup
404: invokespecial #32
407: ldc           #33
409: invokevirtual #34
412: iload         10
414: invokevirtual #39
417: ldc           #36
419: invokevirtual #34
422: iconst_0
423: invokevirtual #39
426: ldc           #33
428: invokevirtual #34
431: invokevirtual #37
434: iload         10
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #38
447: new           #31
450: dup
451: invokespecial #32
454: ldc           #33
456: invokevirtual #34
459: iload         11
461: invokevirtual #39
464: ldc           #36
466: invokevirtual #34
469: iconst_0
470: invokevirtual #39
473: ldc           #33
475: invokevirtual #34
478: invokevirtual #37
481: iload         11
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #38
494: aload         12
496: invokestatic  #26
499: aload         12
501: invokestatic  #27
504: ldc           #116
506: invokestatic  #29
509: new           #31
512: dup
513: invokespecial #32
516: ldc           #33
518: invokevirtual #34
521: dload         13
523: invokevirtual #35
526: ldc           #36
528: invokevirtual #34
531: ldc2_w        #117
534: invokevirtual #35
537: ldc           #33
539: invokevirtual #34
542: invokevirtual #37
545: dload         13
547: ldc2_w        #117
550: dcmpl
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #38
562: aload         15
564: invokestatic  #26
567: aload         15
569: invokestatic  #27
572: ldc           #28
574: invokestatic  #29
577: aload         16
579: invokestatic  #26
582: aload         16
584: invokestatic  #27
587: ldc           #30
589: invokestatic  #29
592: new           #31
595: dup
596: invokespecial #32
599: ldc           #33
601: invokevirtual #34
604: dload         17
606: invokevirtual #35
609: ldc           #36
611: invokevirtual #34
614: ldc2_w        #10
617: invokevirtual #35
620: ldc           #33
622: invokevirtual #34
625: invokevirtual #37
628: dload         17
630: ldc2_w        #10
633: dcmpl
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #38
645: new           #31
648: dup
649: invokespecial #32
652: ldc           #33
654: invokevirtual #34
657: iload         19
659: invokevirtual #39
662: ldc           #36
664: invokevirtual #34
667: iconst_0
668: invokevirtual #39
671: ldc           #33
673: invokevirtual #34
676: invokevirtual #37
679: iload         19
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #38
692: aload         20
694: invokestatic  #26
697: aload         21
699: invokestatic  #26
702: aload         22
704: invokestatic  #26
707: aload         23
709: invokestatic  #26
712: aload         23
714: invokestatic  #27
717: ldc           #139
719: invokestatic  #29
722: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 3346
End line: 3353
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 10L);
        org.apache.commons.math.optimization.GoalType goalType2 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations(0);
        org.junit.Assert.assertNull(goalType2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #14
32: invokespecial #9
35: astore_1
36: aload_1
37: getfield      #68
40: astore_2
41: aload_1
42: iconst_0
43: invokevirtual #61
46: aload_2
47: invokestatic  #69
50: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 3356
End line: 3381
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        double double22 = linearObjectiveFunction16.getConstantTerm();
        double double23 = linearObjectiveFunction16.getConstantTerm();
        org.apache.commons.math.linear.RealVector realVector24 = linearObjectiveFunction16.getCoefficients();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertNotNull(realVector24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #363
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: aload         6
148: invokevirtual #262
151: dstore        10
153: aload         6
155: invokevirtual #262
158: dstore        12
160: aload         6
162: invokevirtual #149
165: astore        14
167: aload_2
168: invokestatic  #26
171: aload_2
172: invokestatic  #27
175: ldc           #28
177: invokestatic  #29
180: aload_3
181: invokestatic  #26
184: aload_3
185: invokestatic  #27
188: ldc           #30
190: invokestatic  #29
193: new           #31
196: dup
197: invokespecial #32
200: ldc           #33
202: invokevirtual #34
205: dload         4
207: invokevirtual #35
210: ldc           #36
212: invokevirtual #34
215: ldc2_w        #10
218: invokevirtual #35
221: ldc           #33
223: invokevirtual #34
226: invokevirtual #37
229: dload         4
231: ldc2_w        #10
234: dcmpl
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #38
246: new           #31
249: dup
250: invokespecial #32
253: ldc           #33
255: invokevirtual #34
258: iload         8
260: invokevirtual #39
263: ldc           #36
265: invokevirtual #34
268: iconst_0
269: invokevirtual #39
272: ldc           #33
274: invokevirtual #34
277: invokevirtual #37
280: iload         8
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #38
293: new           #31
296: dup
297: invokespecial #32
300: ldc           #33
302: invokevirtual #34
305: iload         9
307: invokevirtual #39
310: ldc           #36
312: invokevirtual #34
315: iconst_0
316: invokevirtual #39
319: ldc           #33
321: invokevirtual #34
324: invokevirtual #37
327: iload         9
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #38
340: new           #31
343: dup
344: invokespecial #32
347: ldc           #33
349: invokevirtual #34
352: dload         10
354: invokevirtual #35
357: ldc           #36
359: invokevirtual #34
362: ldc2_w        #10
365: invokevirtual #35
368: ldc           #33
370: invokevirtual #34
373: invokevirtual #37
376: dload         10
378: ldc2_w        #10
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #38
393: new           #31
396: dup
397: invokespecial #32
400: ldc           #33
402: invokevirtual #34
405: dload         12
407: invokevirtual #35
410: ldc           #36
412: invokevirtual #34
415: ldc2_w        #10
418: invokevirtual #35
421: ldc           #33
423: invokevirtual #34
426: invokevirtual #37
429: dload         12
431: ldc2_w        #10
434: dcmpl
435: ifne          442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #38
446: aload         14
448: invokestatic  #26
451: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 3384
End line: 3389
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (-2117355765));
        simplexSolver1.restrictToNonNegative = false;
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #365
32: invokespecial #9
35: astore_1
36: aload_1
37: iconst_0
38: putfield      #71
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 3392
End line: 3422
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        double double22 = simplexSolver1.epsilon;
        int int23 = simplexSolver1.getIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair24 = simplexSolver1.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: aload_1
147: getfield      #75
150: dstore        10
152: aload_1
153: invokevirtual #78
156: istore        12
158: aload_1
159: invokevirtual #72
162: astore        13
164: ldc           #23
166: invokestatic  #24
169: goto          174
172: astore        13
174: aload_2
175: invokestatic  #26
178: aload_2
179: invokestatic  #27
182: ldc           #28
184: invokestatic  #29
187: aload_3
188: invokestatic  #26
191: aload_3
192: invokestatic  #27
195: ldc           #30
197: invokestatic  #29
200: new           #31
203: dup
204: invokespecial #32
207: ldc           #33
209: invokevirtual #34
212: dload         4
214: invokevirtual #35
217: ldc           #36
219: invokevirtual #34
222: ldc2_w        #10
225: invokevirtual #35
228: ldc           #33
230: invokevirtual #34
233: invokevirtual #37
236: dload         4
238: ldc2_w        #10
241: dcmpl
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #38
253: new           #31
256: dup
257: invokespecial #32
260: ldc           #33
262: invokevirtual #34
265: iload         8
267: invokevirtual #39
270: ldc           #36
272: invokevirtual #34
275: iconst_0
276: invokevirtual #39
279: ldc           #33
281: invokevirtual #34
284: invokevirtual #37
287: iload         8
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #38
300: new           #31
303: dup
304: invokespecial #32
307: ldc           #33
309: invokevirtual #34
312: iload         9
314: invokevirtual #39
317: ldc           #36
319: invokevirtual #34
322: iconst_0
323: invokevirtual #39
326: ldc           #33
328: invokevirtual #34
331: invokevirtual #37
334: iload         9
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #38
347: new           #31
350: dup
351: invokespecial #32
354: ldc           #33
356: invokevirtual #34
359: dload         10
361: invokevirtual #35
364: ldc           #36
366: invokevirtual #34
369: dconst_0
370: invokevirtual #35
373: ldc           #33
375: invokevirtual #34
378: invokevirtual #37
381: dload         10
383: dconst_0
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #38
396: new           #31
399: dup
400: invokespecial #32
403: ldc           #33
405: invokevirtual #34
408: iload         12
410: invokevirtual #66
413: ldc           #36
415: invokevirtual #34
418: iconst_0
419: invokevirtual #66
422: ldc           #33
424: invokevirtual #34
427: invokevirtual #37
430: iload         12
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #38
443: return
Exception table:
from    to  target type
158   169   172   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 3425
End line: 3429
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(10.0499d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #368
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #369
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 3432
End line: 3437
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 9);
        simplexSolver1.restrictToNonNegative = true;
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #372
32: invokespecial #9
35: astore_1
36: aload_1
37: iconst_1
38: putfield      #71
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 3440
End line: 3446
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 97);
        int int2 = simplexSolver1.getIterations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #108
32: invokespecial #9
35: astore_1
36: aload_1
37: invokevirtual #78
40: istore_2
41: new           #31
44: dup
45: invokespecial #32
48: ldc           #33
50: invokevirtual #34
53: iload_2
54: invokevirtual #66
57: ldc           #36
59: invokevirtual #34
62: iconst_0
63: invokevirtual #66
66: ldc           #33
68: invokevirtual #34
71: invokevirtual #37
74: iload_2
75: ifne          82
78: iconst_1
79: goto          83
82: iconst_0
83: invokestatic  #38
86: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 3449
End line: 3453
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) 31L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #375
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #376
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 3456
End line: 3486
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        org.apache.commons.math.optimization.GoalType goalType3 = simplexSolver1.goalType;
        simplexSolver1.setMaxIterations((int) (short) 0);
        simplexSolver1.setMaxIterations((int) 'a');
        double double8 = simplexSolver1.epsilon;
        int int9 = simplexSolver1.getMaxIterations();
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection10 = null;
        simplexSolver1.constraints = linearConstraintCollection10;
        boolean boolean12 = simplexSolver1.restrictToNonNegative;
        double[] doubleArray17 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray24 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double25 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray17, doubleArray24);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction27 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray17, 100.0d);
        org.apache.commons.math.linear.RealVector realVector28 = linearObjectiveFunction27.getCoefficients();
        simplexSolver1.f = linearObjectiveFunction27;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 100.0d + "'", double25 == 100.0d);
        org.junit.Assert.assertNotNull(realVector28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: getfield      #68
43: astore_3
44: aload_1
45: iconst_0
46: invokevirtual #61
49: aload_1
50: bipush        97
52: invokevirtual #61
55: aload_1
56: getfield      #75
59: dstore        4
61: aload_1
62: invokevirtual #65
65: istore        6
67: aconst_null
68: astore        7
70: aload_1
71: aload         7
73: putfield      #154
76: aload_1
77: getfield      #71
80: istore        8
82: iconst_4
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #10
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #12
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #12
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #10
108: dastore
109: astore        9
111: bipush        6
113: newarray       double
115: dup
116: iconst_0
117: ldc2_w        #14
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #14
126: dastore
127: dup
128: iconst_2
129: ldc2_w        #14
132: dastore
133: dup
134: iconst_3
135: dconst_0
136: dastore
137: dup
138: iconst_4
139: dconst_1
140: dastore
141: dup
142: iconst_5
143: ldc2_w        #10
146: dastore
147: astore        10
149: aload         9
151: aload         10
153: invokestatic  #16
156: dstore        11
158: new           #17
161: dup
162: aload         9
164: ldc2_w        #10
167: invokespecial #18
170: astore        13
172: aload         13
174: invokevirtual #149
177: astore        14
179: aload_1
180: aload         13
182: putfield      #21
185: new           #31
188: dup
189: invokespecial #32
192: ldc           #33
194: invokevirtual #34
197: iload_2
198: invokevirtual #66
201: ldc           #36
203: invokevirtual #34
206: iconst_0
207: invokevirtual #66
210: ldc           #33
212: invokevirtual #34
215: invokevirtual #37
218: iload_2
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #38
230: aload_3
231: invokestatic  #69
234: new           #31
237: dup
238: invokespecial #32
241: ldc           #33
243: invokevirtual #34
246: dload         4
248: invokevirtual #35
251: ldc           #36
253: invokevirtual #34
256: dconst_0
257: invokevirtual #35
260: ldc           #33
262: invokevirtual #34
265: invokevirtual #37
268: dload         4
270: dconst_0
271: dcmpl
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #38
283: new           #31
286: dup
287: invokespecial #32
290: ldc           #33
292: invokevirtual #34
295: iload         6
297: invokevirtual #66
300: ldc           #36
302: invokevirtual #34
305: bipush        97
307: invokevirtual #66
310: ldc           #33
312: invokevirtual #34
315: invokevirtual #37
318: iload         6
320: bipush        97
322: if_icmpne     329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #38
333: new           #31
336: dup
337: invokespecial #32
340: ldc           #33
342: invokevirtual #34
345: iload         8
347: invokevirtual #39
350: ldc           #36
352: invokevirtual #34
355: iconst_0
356: invokevirtual #39
359: ldc           #33
361: invokevirtual #34
364: invokevirtual #37
367: iload         8
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #38
380: aload         9
382: invokestatic  #26
385: aload         9
387: invokestatic  #27
390: ldc           #28
392: invokestatic  #29
395: aload         10
397: invokestatic  #26
400: aload         10
402: invokestatic  #27
405: ldc           #30
407: invokestatic  #29
410: new           #31
413: dup
414: invokespecial #32
417: ldc           #33
419: invokevirtual #34
422: dload         11
424: invokevirtual #35
427: ldc           #36
429: invokevirtual #34
432: ldc2_w        #10
435: invokevirtual #35
438: ldc           #33
440: invokevirtual #34
443: invokevirtual #37
446: dload         11
448: ldc2_w        #10
451: dcmpl
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #38
463: aload         14
465: invokestatic  #26
468: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 3489
End line: 3532
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 0, (double) (-1));
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector2.mapTanh();
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver5 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray10 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray17 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double18 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray10, doubleArray17);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction20 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray10, 100.0d);
        java.lang.Object obj21 = null;
        boolean boolean22 = linearObjectiveFunction20.equals(obj21);
        boolean boolean24 = linearObjectiveFunction20.equals((java.lang.Object) "hi!");
        simplexSolver5.f = linearObjectiveFunction20;
        double[] doubleArray30 = new double[] { 2.194558835742E13d, 'a', (short) 1, 0.0f };
        double double31 = linearObjectiveFunction20.getValue(doubleArray30);
        double[] doubleArray36 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray43 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double44 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray36, doubleArray43);
        boolean boolean45 = org.apache.commons.math.util.MathUtils.equals(doubleArray30, doubleArray36);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector2.append(doubleArray30);
        org.apache.commons.math.linear.RealVector realVector48 = arrayRealVector2.mapSubtract((double) (-2117355765));
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector2.mapLog1p();
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[2.194558835742E13, 97.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.194558835742002E15d + "'", double31 == 2.194558835742002E15d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realVector49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #379
20: aastore
21: invokevirtual #7
24: pop
25: new           #48
28: dup
29: iconst_0
30: ldc2_w        #12
33: invokespecial #104
36: astore_1
37: aload_1
38: invokevirtual #105
41: astore_2
42: new           #8
45: dup
46: dconst_0
47: invokespecial #9
50: astore_3
51: iconst_4
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #10
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #12
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #12
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #10
77: dastore
78: astore        4
80: bipush        6
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #14
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #14
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #14
101: dastore
102: dup
103: iconst_3
104: dconst_0
105: dastore
106: dup
107: iconst_4
108: dconst_1
109: dastore
110: dup
111: iconst_5
112: ldc2_w        #10
115: dastore
116: astore        5
118: aload         4
120: aload         5
122: invokestatic  #16
125: dstore        6
127: new           #17
130: dup
131: aload         4
133: ldc2_w        #10
136: invokespecial #18
139: astore        8
141: aconst_null
142: astore        9
144: aload         8
146: aload         9
148: invokevirtual #19
151: istore        10
153: aload         8
155: ldc           #20
157: invokevirtual #19
160: istore        11
162: aload_3
163: aload         8
165: putfield      #21
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: ldc2_w        #106
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #108
182: dastore
183: dup
184: iconst_2
185: dconst_1
186: dastore
187: dup
188: iconst_3
189: dconst_0
190: dastore
191: astore        12
193: aload         8
195: aload         12
197: invokevirtual #110
200: dstore        13
202: iconst_4
203: newarray       double
205: dup
206: iconst_0
207: ldc2_w        #10
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #12
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #12
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #10
228: dastore
229: astore        15
231: bipush        6
233: newarray       double
235: dup
236: iconst_0
237: ldc2_w        #14
240: dastore
241: dup
242: iconst_1
243: ldc2_w        #14
246: dastore
247: dup
248: iconst_2
249: ldc2_w        #14
252: dastore
253: dup
254: iconst_3
255: dconst_0
256: dastore
257: dup
258: iconst_4
259: dconst_1
260: dastore
261: dup
262: iconst_5
263: ldc2_w        #10
266: dastore
267: astore        16
269: aload         15
271: aload         16
273: invokestatic  #16
276: dstore        17
278: aload         12
280: aload         15
282: invokestatic  #111
285: istore        19
287: aload_1
288: aload         12
290: invokevirtual #112
293: astore        20
295: aload_1
296: ldc2_w        #365
299: invokevirtual #380
302: astore        21
304: aload_1
305: invokevirtual #198
308: astore        22
310: aload_2
311: invokestatic  #26
314: aload         4
316: invokestatic  #26
319: aload         4
321: invokestatic  #27
324: ldc           #28
326: invokestatic  #29
329: aload         5
331: invokestatic  #26
334: aload         5
336: invokestatic  #27
339: ldc           #30
341: invokestatic  #29
344: new           #31
347: dup
348: invokespecial #32
351: ldc           #33
353: invokevirtual #34
356: dload         6
358: invokevirtual #35
361: ldc           #36
363: invokevirtual #34
366: ldc2_w        #10
369: invokevirtual #35
372: ldc           #33
374: invokevirtual #34
377: invokevirtual #37
380: dload         6
382: ldc2_w        #10
385: dcmpl
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #38
397: new           #31
400: dup
401: invokespecial #32
404: ldc           #33
406: invokevirtual #34
409: iload         10
411: invokevirtual #39
414: ldc           #36
416: invokevirtual #34
419: iconst_0
420: invokevirtual #39
423: ldc           #33
425: invokevirtual #34
428: invokevirtual #37
431: iload         10
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #38
444: new           #31
447: dup
448: invokespecial #32
451: ldc           #33
453: invokevirtual #34
456: iload         11
458: invokevirtual #39
461: ldc           #36
463: invokevirtual #34
466: iconst_0
467: invokevirtual #39
470: ldc           #33
472: invokevirtual #34
475: invokevirtual #37
478: iload         11
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #38
491: aload         12
493: invokestatic  #26
496: aload         12
498: invokestatic  #27
501: ldc           #116
503: invokestatic  #29
506: new           #31
509: dup
510: invokespecial #32
513: ldc           #33
515: invokevirtual #34
518: dload         13
520: invokevirtual #35
523: ldc           #36
525: invokevirtual #34
528: ldc2_w        #117
531: invokevirtual #35
534: ldc           #33
536: invokevirtual #34
539: invokevirtual #37
542: dload         13
544: ldc2_w        #117
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #38
559: aload         15
561: invokestatic  #26
564: aload         15
566: invokestatic  #27
569: ldc           #28
571: invokestatic  #29
574: aload         16
576: invokestatic  #26
579: aload         16
581: invokestatic  #27
584: ldc           #30
586: invokestatic  #29
589: new           #31
592: dup
593: invokespecial #32
596: ldc           #33
598: invokevirtual #34
601: dload         17
603: invokevirtual #35
606: ldc           #36
608: invokevirtual #34
611: ldc2_w        #10
614: invokevirtual #35
617: ldc           #33
619: invokevirtual #34
622: invokevirtual #37
625: dload         17
627: ldc2_w        #10
630: dcmpl
631: ifne          638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #38
642: new           #31
645: dup
646: invokespecial #32
649: ldc           #33
651: invokevirtual #34
654: iload         19
656: invokevirtual #39
659: ldc           #36
661: invokevirtual #34
664: iconst_0
665: invokevirtual #39
668: ldc           #33
670: invokevirtual #34
673: invokevirtual #37
676: iload         19
678: ifne          685
681: iconst_1
682: goto          686
685: iconst_0
686: invokestatic  #38
689: aload         20
691: invokestatic  #26
694: aload         21
696: invokestatic  #26
699: aload         22
701: invokestatic  #26
704: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 3535
End line: 3556
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        simplexSolver1.setMaxIterations((int) (short) 10);
        simplexSolver1.restrictToNonNegative = true;
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #381
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: aload_1
147: bipush        10
149: invokevirtual #61
152: aload_1
153: iconst_1
154: putfield      #71
157: aload_2
158: invokestatic  #26
161: aload_2
162: invokestatic  #27
165: ldc           #28
167: invokestatic  #29
170: aload_3
171: invokestatic  #26
174: aload_3
175: invokestatic  #27
178: ldc           #30
180: invokestatic  #29
183: new           #31
186: dup
187: invokespecial #32
190: ldc           #33
192: invokevirtual #34
195: dload         4
197: invokevirtual #35
200: ldc           #36
202: invokevirtual #34
205: ldc2_w        #10
208: invokevirtual #35
211: ldc           #33
213: invokevirtual #34
216: invokevirtual #37
219: dload         4
221: ldc2_w        #10
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #38
236: new           #31
239: dup
240: invokespecial #32
243: ldc           #33
245: invokevirtual #34
248: iload         8
250: invokevirtual #39
253: ldc           #36
255: invokevirtual #34
258: iconst_0
259: invokevirtual #39
262: ldc           #33
264: invokevirtual #34
267: invokevirtual #37
270: iload         8
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #38
283: new           #31
286: dup
287: invokespecial #32
290: ldc           #33
292: invokevirtual #34
295: iload         9
297: invokevirtual #39
300: ldc           #36
302: invokevirtual #34
305: iconst_0
306: invokevirtual #39
309: ldc           #33
311: invokevirtual #34
314: invokevirtual #37
317: iload         9
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #38
330: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 3559
End line: 3587
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double double2 = simplexSolver1.epsilon;
        org.apache.commons.math.optimization.GoalType goalType3 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver1.goalType = goalType3;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver6 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray11 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray18 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double19 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray11, doubleArray18);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction21 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray11, 100.0d);
        java.lang.Object obj22 = null;
        boolean boolean23 = linearObjectiveFunction21.equals(obj22);
        boolean boolean25 = linearObjectiveFunction21.equals((java.lang.Object) "hi!");
        simplexSolver6.f = linearObjectiveFunction21;
        simplexSolver1.f = linearObjectiveFunction21;
        org.apache.commons.math.linear.RealVector realVector28 = linearObjectiveFunction21.getCoefficients();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + goalType3 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType3.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(realVector28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #382
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: getfield      #75
38: dstore_2
39: getstatic     #55
42: astore        4
44: aload_1
45: aload         4
47: putfield      #68
50: new           #8
53: dup
54: dconst_0
55: invokespecial #9
58: astore        5
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: ldc2_w        #10
68: dastore
69: dup
70: iconst_1
71: ldc2_w        #12
74: dastore
75: dup
76: iconst_2
77: ldc2_w        #12
80: dastore
81: dup
82: iconst_3
83: ldc2_w        #10
86: dastore
87: astore        6
89: bipush        6
91: newarray       double
93: dup
94: iconst_0
95: ldc2_w        #14
98: dastore
99: dup
100: iconst_1
101: ldc2_w        #14
104: dastore
105: dup
106: iconst_2
107: ldc2_w        #14
110: dastore
111: dup
112: iconst_3
113: dconst_0
114: dastore
115: dup
116: iconst_4
117: dconst_1
118: dastore
119: dup
120: iconst_5
121: ldc2_w        #10
124: dastore
125: astore        7
127: aload         6
129: aload         7
131: invokestatic  #16
134: dstore        8
136: new           #17
139: dup
140: aload         6
142: ldc2_w        #10
145: invokespecial #18
148: astore        10
150: aconst_null
151: astore        11
153: aload         10
155: aload         11
157: invokevirtual #19
160: istore        12
162: aload         10
164: ldc           #20
166: invokevirtual #19
169: istore        13
171: aload         5
173: aload         10
175: putfield      #21
178: aload_1
179: aload         10
181: putfield      #21
184: aload         10
186: invokevirtual #149
189: astore        14
191: new           #31
194: dup
195: invokespecial #32
198: ldc           #33
200: invokevirtual #34
203: dload_2
204: invokevirtual #35
207: ldc           #36
209: invokevirtual #34
212: dconst_0
213: invokevirtual #35
216: ldc           #33
218: invokevirtual #34
221: invokevirtual #37
224: dload_2
225: dconst_0
226: dcmpl
227: ifne          234
230: iconst_1
231: goto          235
234: iconst_0
235: invokestatic  #38
238: new           #31
241: dup
242: invokespecial #32
245: ldc           #33
247: invokevirtual #34
250: aload         4
252: invokevirtual #57
255: ldc           #36
257: invokevirtual #34
260: getstatic     #55
263: invokevirtual #57
266: ldc           #33
268: invokevirtual #34
271: invokevirtual #37
274: aload         4
276: getstatic     #55
279: invokevirtual #58
282: invokestatic  #38
285: aload         6
287: invokestatic  #26
290: aload         6
292: invokestatic  #27
295: ldc           #28
297: invokestatic  #29
300: aload         7
302: invokestatic  #26
305: aload         7
307: invokestatic  #27
310: ldc           #30
312: invokestatic  #29
315: new           #31
318: dup
319: invokespecial #32
322: ldc           #33
324: invokevirtual #34
327: dload         8
329: invokevirtual #35
332: ldc           #36
334: invokevirtual #34
337: ldc2_w        #10
340: invokevirtual #35
343: ldc           #33
345: invokevirtual #34
348: invokevirtual #37
351: dload         8
353: ldc2_w        #10
356: dcmpl
357: ifne          364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #38
368: new           #31
371: dup
372: invokespecial #32
375: ldc           #33
377: invokevirtual #34
380: iload         12
382: invokevirtual #39
385: ldc           #36
387: invokevirtual #34
390: iconst_0
391: invokevirtual #39
394: ldc           #33
396: invokevirtual #34
399: invokevirtual #37
402: iload         12
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #38
415: new           #31
418: dup
419: invokespecial #32
422: ldc           #33
424: invokevirtual #34
427: iload         13
429: invokevirtual #39
432: ldc           #36
434: invokevirtual #34
437: iconst_0
438: invokevirtual #39
441: ldc           #33
443: invokevirtual #34
446: invokevirtual #37
449: iload         13
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #38
462: aload         14
464: invokestatic  #26
467: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 3590
End line: 3594
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.7754358298131919d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #383
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #384
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 3597
End line: 3606
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        int int2 = simplexSolver1.getIterations();
        int int3 = simplexSolver1.getMaxIterations();
        simplexSolver1.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #78
38: istore_2
39: aload_1
40: invokevirtual #65
43: istore_3
44: aload_1
45: invokevirtual #63
48: new           #31
51: dup
52: invokespecial #32
55: ldc           #33
57: invokevirtual #34
60: iload_2
61: invokevirtual #66
64: ldc           #36
66: invokevirtual #34
69: iconst_0
70: invokevirtual #66
73: ldc           #33
75: invokevirtual #34
78: invokevirtual #37
81: iload_2
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #38
93: new           #31
96: dup
97: invokespecial #32
100: ldc           #33
102: invokevirtual #34
105: iload_3
106: invokevirtual #66
109: ldc           #36
111: invokevirtual #34
114: bipush        100
116: invokevirtual #66
119: ldc           #33
121: invokevirtual #34
124: invokevirtual #37
127: iload_3
128: bipush        100
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #38
141: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 3609
End line: 3622
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        simplexSolver1.restrictToNonNegative = true;
        double double4 = simplexSolver1.epsilon;
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection5 = simplexSolver1.constraints;
        int int6 = simplexSolver1.getMaxIterations();
        int int7 = simplexSolver1.getIterations();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(linearConstraintCollection5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: aload_1
35: iconst_1
36: putfield      #71
39: aload_1
40: getfield      #75
43: dstore_2
44: aload_1
45: getfield      #154
48: astore        4
50: aload_1
51: invokevirtual #65
54: istore        5
56: aload_1
57: invokevirtual #78
60: istore        6
62: new           #31
65: dup
66: invokespecial #32
69: ldc           #33
71: invokevirtual #34
74: dload_2
75: invokevirtual #35
78: ldc           #36
80: invokevirtual #34
83: dconst_0
84: invokevirtual #35
87: ldc           #33
89: invokevirtual #34
92: invokevirtual #37
95: dload_2
96: dconst_0
97: dcmpl
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #38
109: aload         4
111: invokestatic  #69
114: new           #31
117: dup
118: invokespecial #32
121: ldc           #33
123: invokevirtual #34
126: iload         5
128: invokevirtual #66
131: ldc           #36
133: invokevirtual #34
136: bipush        100
138: invokevirtual #66
141: ldc           #33
143: invokevirtual #34
146: invokevirtual #37
149: iload         5
151: bipush        100
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #38
164: new           #31
167: dup
168: invokespecial #32
171: ldc           #33
173: invokevirtual #34
176: iload         6
178: invokevirtual #66
181: ldc           #36
183: invokevirtual #34
186: iconst_0
187: invokevirtual #66
190: ldc           #33
192: invokevirtual #34
195: invokevirtual #37
198: iload         6
200: ifne          207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #38
211: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 3625
End line: 3660
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver1 = new org.apache.commons.math.optimization.linear.SimplexSolver(0.0d);
        double[] doubleArray6 = new double[] { 100, (-1), (-1), (byte) 100 };
        double[] doubleArray13 = new double[] { 10.0f, 10L, (short) 10, (short) 0, 1L, 100 };
        double double14 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray6, doubleArray13);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction16 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray6, 100.0d);
        java.lang.Object obj17 = null;
        boolean boolean18 = linearObjectiveFunction16.equals(obj17);
        boolean boolean20 = linearObjectiveFunction16.equals((java.lang.Object) "hi!");
        simplexSolver1.f = linearObjectiveFunction16;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver22 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType23 = simplexSolver22.goalType;
        simplexSolver22.setMaxIterations((-50));
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction26 = simplexSolver22.f;
        boolean boolean27 = linearObjectiveFunction16.equals((java.lang.Object) linearObjectiveFunction26);
        double[] doubleArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = linearObjectiveFunction16.getValue(doubleArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 10.0, 0.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(goalType23);
        org.junit.Assert.assertNull(linearObjectiveFunction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #388
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: iconst_4
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #12
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #12
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #10
60: dastore
61: astore_2
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: ldc2_w        #14
71: dastore
72: dup
73: iconst_1
74: ldc2_w        #14
77: dastore
78: dup
79: iconst_2
80: ldc2_w        #14
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #10
97: dastore
98: astore_3
99: aload_2
100: aload_3
101: invokestatic  #16
104: dstore        4
106: new           #17
109: dup
110: aload_2
111: ldc2_w        #10
114: invokespecial #18
117: astore        6
119: aconst_null
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #19
129: istore        8
131: aload         6
133: ldc           #20
135: invokevirtual #19
138: istore        9
140: aload_1
141: aload         6
143: putfield      #21
146: new           #8
149: dup
150: invokespecial #41
153: astore        10
155: aload         10
157: getfield      #68
160: astore        11
162: aload         10
164: bipush        -50
166: invokevirtual #61
169: aload         10
171: getfield      #21
174: astore        12
176: aload         6
178: aload         12
180: invokevirtual #19
183: istore        13
185: aconst_null
186: astore        14
188: aload         6
190: aload         14
192: invokevirtual #110
195: dstore        15
197: ldc           #23
199: invokestatic  #24
202: goto          207
205: astore        15
207: aload_2
208: invokestatic  #26
211: aload_2
212: invokestatic  #27
215: ldc           #28
217: invokestatic  #29
220: aload_3
221: invokestatic  #26
224: aload_3
225: invokestatic  #27
228: ldc           #30
230: invokestatic  #29
233: new           #31
236: dup
237: invokespecial #32
240: ldc           #33
242: invokevirtual #34
245: dload         4
247: invokevirtual #35
250: ldc           #36
252: invokevirtual #34
255: ldc2_w        #10
258: invokevirtual #35
261: ldc           #33
263: invokevirtual #34
266: invokevirtual #37
269: dload         4
271: ldc2_w        #10
274: dcmpl
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #38
286: new           #31
289: dup
290: invokespecial #32
293: ldc           #33
295: invokevirtual #34
298: iload         8
300: invokevirtual #39
303: ldc           #36
305: invokevirtual #34
308: iconst_0
309: invokevirtual #39
312: ldc           #33
314: invokevirtual #34
317: invokevirtual #37
320: iload         8
322: ifne          329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #38
333: new           #31
336: dup
337: invokespecial #32
340: ldc           #33
342: invokevirtual #34
345: iload         9
347: invokevirtual #39
350: ldc           #36
352: invokevirtual #34
355: iconst_0
356: invokevirtual #39
359: ldc           #33
361: invokevirtual #34
364: invokevirtual #37
367: iload         9
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #38
380: aload         11
382: invokestatic  #69
385: aload         12
387: invokestatic  #69
390: new           #31
393: dup
394: invokespecial #32
397: ldc           #33
399: invokevirtual #34
402: iload         13
404: invokevirtual #39
407: ldc           #36
409: invokevirtual #34
412: iconst_0
413: invokevirtual #39
416: ldc           #33
418: invokevirtual #34
421: invokevirtual #37
424: iload         13
426: ifne          433
429: iconst_1
430: goto          434
433: iconst_0
434: invokestatic  #38
437: return
Exception table:
from    to  target type
188   202   205   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 3663
End line: 3675
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        org.apache.commons.math.optimization.GoalType goalType1 = simplexSolver0.goalType;
        simplexSolver0.setMaxIterations((-50));
        org.apache.commons.math.optimization.GoalType goalType4 = simplexSolver0.goalType;
        boolean boolean5 = simplexSolver0.restrictToNonNegative;
        simplexSolver0.setMaxIterations((-1064394752));
        org.junit.Assert.assertNull(goalType1);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #389
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #41
32: astore_1
33: aload_1
34: getfield      #68
37: astore_2
38: aload_1
39: bipush        -50
41: invokevirtual #61
44: aload_1
45: getfield      #68
48: astore_3
49: aload_1
50: getfield      #71
53: istore        4
55: aload_1
56: ldc_w         #390
59: invokevirtual #61
62: aload_2
63: invokestatic  #69
66: aload_3
67: invokestatic  #69
70: new           #31
73: dup
74: invokespecial #32
77: ldc           #33
79: invokevirtual #34
82: iload         4
84: invokevirtual #39
87: ldc           #36
89: invokevirtual #34
92: iconst_0
93: invokevirtual #39
96: ldc           #33
98: invokevirtual #34
101: invokevirtual #37
104: iload         4
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #38
117: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath272
Start line: 34
End line: 48
Method source code: 
    public void testMath272() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        
        assertEquals(0.0, solution.getPoint()[0], .0000001);
        assertEquals(1.0, solution.getPoint()[1], .0000001);
        assertEquals(1.0, solution.getPoint()[2], .0000001);
        assertEquals(3.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #3
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #3
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #5
27: astore_1
28: new           #6
31: dup
32: invokespecial #7
35: astore_2
36: aload_2
37: new           #8
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: dconst_1
47: dastore
48: dup
49: iconst_1
50: dconst_1
51: dastore
52: dup
53: iconst_2
54: dconst_0
55: dastore
56: getstatic     #9
59: dconst_1
60: invokespecial #10
63: invokeinterface #11,  2
68: pop
69: aload_2
70: new           #8
73: dup
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_0
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: getstatic     #9
92: dconst_1
93: invokespecial #10
96: invokeinterface #11,  2
101: pop
102: aload_2
103: new           #8
106: dup
107: iconst_3
108: newarray       double
110: dup
111: iconst_0
112: dconst_0
113: dastore
114: dup
115: iconst_1
116: dconst_1
117: dastore
118: dup
119: iconst_2
120: dconst_0
121: dastore
122: getstatic     #9
125: dconst_1
126: invokespecial #10
129: invokeinterface #11,  2
134: pop
135: new           #12
138: dup
139: invokespecial #13
142: astore_3
143: aload_3
144: aload_1
145: aload_2
146: getstatic     #14
149: iconst_1
150: invokevirtual #15
153: astore        4
155: dconst_0
156: aload         4
158: invokevirtual #16
161: iconst_0
162: daload
163: ldc2_w        #17
166: invokestatic  #19
169: dconst_1
170: aload         4
172: invokevirtual #16
175: iconst_1
176: daload
177: ldc2_w        #17
180: invokestatic  #19
183: dconst_1
184: aload         4
186: invokevirtual #16
189: iconst_2
190: daload
191: ldc2_w        #17
194: invokestatic  #19
197: ldc2_w        #20
200: aload         4
202: invokevirtual #22
205: ldc2_w        #17
208: invokestatic  #19
211: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath286
Start line: 51
End line: 58
Method source code: 
    public void testMath286() throws OptimizationException {
      LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.2, 0.3 }, 0 );
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ, 23.0));

      RealPointValuePair solution = new SimplexSolver().optimize(f, constraints, GoalType.MAXIMIZE, true);
      assertEquals(6.9, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #23
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #25
18: dastore
19: dconst_0
20: invokespecial #5
23: astore_1
24: new           #6
27: dup
28: invokespecial #7
31: astore_2
32: aload_2
33: new           #8
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: getstatic     #27
51: ldc2_w        #28
54: invokespecial #10
57: invokeinterface #11,  2
62: pop
63: new           #12
66: dup
67: invokespecial #13
70: aload_1
71: aload_2
72: getstatic     #30
75: iconst_1
76: invokevirtual #15
79: astore_3
80: ldc2_w        #31
83: aload_3
84: invokevirtual #22
87: ldc2_w        #17
90: invokestatic  #19
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath288
Start line: 61
End line: 73
Method source code: 
    public void testMath288() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 7, 3, 0, 0 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 3, 0, -5, 0 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 2, 0, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 0, 3, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0 }, Relationship.LEQ, 1.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 0 }, Relationship.LEQ, 1.0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        assertEquals(10.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_4
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #33
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #20
18: dastore
19: dup
20: iconst_2
21: dconst_0
22: dastore
23: dup
24: iconst_3
25: dconst_0
26: dastore
27: dconst_0
28: invokespecial #5
31: astore_1
32: new           #6
35: dup
36: invokespecial #7
39: astore_2
40: aload_2
41: new           #8
44: dup
45: iconst_4
46: newarray       double
48: dup
49: iconst_0
50: ldc2_w        #20
53: dastore
54: dup
55: iconst_1
56: dconst_0
57: dastore
58: dup
59: iconst_2
60: ldc2_w        #35
63: dastore
64: dup
65: iconst_3
66: dconst_0
67: dastore
68: getstatic     #37
71: dconst_0
72: invokespecial #10
75: invokeinterface #11,  2
80: pop
81: aload_2
82: new           #8
85: dup
86: iconst_4
87: newarray       double
89: dup
90: iconst_0
91: ldc2_w        #3
94: dastore
95: dup
96: iconst_1
97: dconst_0
98: dastore
99: dup
100: iconst_2
101: dconst_0
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #35
108: dastore
109: getstatic     #37
112: dconst_0
113: invokespecial #10
116: invokeinterface #11,  2
121: pop
122: aload_2
123: new           #8
126: dup
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #20
139: dastore
140: dup
141: iconst_2
142: dconst_0
143: dastore
144: dup
145: iconst_3
146: ldc2_w        #35
149: dastore
150: getstatic     #37
153: dconst_0
154: invokespecial #10
157: invokeinterface #11,  2
162: pop
163: aload_2
164: new           #8
167: dup
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: dconst_1
174: dastore
175: dup
176: iconst_1
177: dconst_0
178: dastore
179: dup
180: iconst_2
181: dconst_0
182: dastore
183: dup
184: iconst_3
185: dconst_0
186: dastore
187: getstatic     #37
190: dconst_1
191: invokespecial #10
194: invokeinterface #11,  2
199: pop
200: aload_2
201: new           #8
204: dup
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: dconst_1
215: dastore
216: dup
217: iconst_2
218: dconst_0
219: dastore
220: dup
221: iconst_3
222: dconst_0
223: dastore
224: getstatic     #37
227: dconst_1
228: invokespecial #10
231: invokeinterface #11,  2
236: pop
237: new           #12
240: dup
241: invokespecial #13
244: astore_3
245: aload_3
246: aload_1
247: aload_2
248: getstatic     #30
251: iconst_1
252: invokevirtual #15
255: astore        4
257: ldc2_w        #38
260: aload         4
262: invokevirtual #22
265: ldc2_w        #17
268: invokestatic  #19
271: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSimplexSolver
Start line: 76
End line: 89
Method source code: 
    public void testSimplexSolver() throws OptimizationException {
        LinearObjectiveFunction f =
            new LinearObjectiveFunction(new double[] { 15, 10 }, 7);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ, 4));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        assertEquals(2.0, solution.getPoint()[0], 0.0);
        assertEquals(2.0, solution.getPoint()[1], 0.0);
        assertEquals(57.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #40
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #38
18: dastore
19: ldc2_w        #33
22: invokespecial #5
25: astore_1
26: new           #6
29: dup
30: invokespecial #7
33: astore_2
34: aload_2
35: new           #8
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dconst_1
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: getstatic     #37
53: ldc2_w        #3
56: invokespecial #10
59: invokeinterface #11,  2
64: pop
65: aload_2
66: new           #8
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_1
80: dastore
81: getstatic     #37
84: ldc2_w        #20
87: invokespecial #10
90: invokeinterface #11,  2
95: pop
96: aload_2
97: new           #8
100: dup
101: iconst_2
102: newarray       double
104: dup
105: iconst_0
106: dconst_1
107: dastore
108: dup
109: iconst_1
110: dconst_1
111: dastore
112: getstatic     #27
115: ldc2_w        #42
118: invokespecial #10
121: invokeinterface #11,  2
126: pop
127: new           #12
130: dup
131: invokespecial #13
134: astore_3
135: aload_3
136: aload_1
137: aload_2
138: getstatic     #30
141: iconst_0
142: invokevirtual #15
145: astore        4
147: ldc2_w        #3
150: aload         4
152: invokevirtual #16
155: iconst_0
156: daload
157: dconst_0
158: invokestatic  #19
161: ldc2_w        #3
164: aload         4
166: invokevirtual #16
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #19
175: ldc2_w        #44
178: aload         4
180: invokevirtual #22
183: dconst_0
184: invokestatic  #19
187: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSingleVariableAndConstraint
Start line: 92
End line: 101
Method source code: 
    public void testSingleVariableAndConstraint() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        assertEquals(10.0, solution.getPoint()[0], 0.0);
        assertEquals(30.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #20
12: dastore
13: dconst_0
14: invokespecial #5
17: astore_1
18: new           #6
21: dup
22: invokespecial #7
25: astore_2
26: aload_2
27: new           #8
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #37
41: ldc2_w        #38
44: invokespecial #10
47: invokeinterface #11,  2
52: pop
53: new           #12
56: dup
57: invokespecial #13
60: astore_3
61: aload_3
62: aload_1
63: aload_2
64: getstatic     #30
67: iconst_0
68: invokevirtual #15
71: astore        4
73: ldc2_w        #38
76: aload         4
78: invokevirtual #16
81: iconst_0
82: daload
83: dconst_0
84: invokestatic  #19
87: ldc2_w        #46
90: aload         4
92: invokevirtual #22
95: dconst_0
96: invokestatic  #19
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testModelWithNoArtificialVars
Start line: 108
End line: 120
Method source code: 
    public void testModelWithNoArtificialVars() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 4));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        assertEquals(2.0, solution.getPoint()[0], 0.0);
        assertEquals(2.0, solution.getPoint()[1], 0.0);
        assertEquals(50.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #40
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #38
18: dastore
19: dconst_0
20: invokespecial #5
23: astore_1
24: new           #6
27: dup
28: invokespecial #7
31: astore_2
32: aload_2
33: new           #8
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #37
51: ldc2_w        #3
54: invokespecial #10
57: invokeinterface #11,  2
62: pop
63: aload_2
64: new           #8
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_1
78: dastore
79: getstatic     #37
82: ldc2_w        #20
85: invokespecial #10
88: invokeinterface #11,  2
93: pop
94: aload_2
95: new           #8
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #37
113: ldc2_w        #42
116: invokespecial #10
119: invokeinterface #11,  2
124: pop
125: new           #12
128: dup
129: invokespecial #13
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #30
139: iconst_0
140: invokevirtual #15
143: astore        4
145: ldc2_w        #3
148: aload         4
150: invokevirtual #16
153: iconst_0
154: daload
155: dconst_0
156: invokestatic  #19
159: ldc2_w        #3
162: aload         4
164: invokevirtual #16
167: iconst_1
168: daload
169: dconst_0
170: invokestatic  #19
173: ldc2_w        #48
176: aload         4
178: invokevirtual #22
181: dconst_0
182: invokestatic  #19
185: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMinimization
Start line: 123
End line: 135
Method source code: 
    public void testMinimization() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, -5);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 3, 2 }, Relationship.LEQ, 12));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        assertEquals(4.0, solution.getPoint()[0], 0.0);
        assertEquals(0.0, solution.getPoint()[1], 0.0);
        assertEquals(-13.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #50
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: ldc2_w        #35
20: invokespecial #5
23: astore_1
24: new           #6
27: dup
28: invokespecial #7
31: astore_2
32: aload_2
33: new           #8
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: ldc2_w        #3
49: dastore
50: getstatic     #37
53: ldc2_w        #52
56: invokespecial #10
59: invokeinterface #11,  2
64: pop
65: aload_2
66: new           #8
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #20
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #3
84: dastore
85: getstatic     #37
88: ldc2_w        #54
91: invokespecial #10
94: invokeinterface #11,  2
99: pop
100: aload_2
101: new           #8
104: dup
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: dconst_0
111: dastore
112: dup
113: iconst_1
114: dconst_1
115: dastore
116: getstatic     #9
119: dconst_0
120: invokespecial #10
123: invokeinterface #11,  2
128: pop
129: new           #12
132: dup
133: invokespecial #13
136: astore_3
137: aload_3
138: aload_1
139: aload_2
140: getstatic     #14
143: iconst_0
144: invokevirtual #15
147: astore        4
149: ldc2_w        #42
152: aload         4
154: invokevirtual #16
157: iconst_0
158: daload
159: dconst_0
160: invokestatic  #19
163: dconst_0
164: aload         4
166: invokevirtual #16
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #19
175: ldc2_w        #56
178: aload         4
180: invokevirtual #22
183: dconst_0
184: invokestatic  #19
187: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSolutionWithNegativeDecisionVariable
Start line: 138
End line: 149
Method source code: 
    public void testSolutionWithNegativeDecisionVariable() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.GEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 14));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        assertEquals(-2.0, solution.getPoint()[0], 0.0);
        assertEquals(8.0, solution.getPoint()[1], 0.0);
        assertEquals(12.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #50
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: dconst_0
18: invokespecial #5
21: astore_1
22: new           #6
25: dup
26: invokespecial #7
29: astore_2
30: aload_2
31: new           #8
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: dconst_1
41: dastore
42: dup
43: iconst_1
44: dconst_1
45: dastore
46: getstatic     #9
49: ldc2_w        #52
52: invokespecial #10
55: invokeinterface #11,  2
60: pop
61: aload_2
62: new           #8
65: dup
66: iconst_2
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: ldc2_w        #3
78: dastore
79: getstatic     #37
82: ldc2_w        #58
85: invokespecial #10
88: invokeinterface #11,  2
93: pop
94: new           #12
97: dup
98: invokespecial #13
101: astore_3
102: aload_3
103: aload_1
104: aload_2
105: getstatic     #30
108: iconst_0
109: invokevirtual #15
112: astore        4
114: ldc2_w        #50
117: aload         4
119: invokevirtual #16
122: iconst_0
123: daload
124: dconst_0
125: invokestatic  #19
128: ldc2_w        #60
131: aload         4
133: invokevirtual #16
136: iconst_1
137: daload
138: dconst_0
139: invokestatic  #19
142: ldc2_w        #54
145: aload         4
147: invokevirtual #22
150: dconst_0
151: invokestatic  #19
154: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testInfeasibleSolution
Start line: 152
End line: 160
Method source code: 
    public void testInfeasibleSolution() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 1));
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.GEQ, 3));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #40
12: dastore
13: dconst_0
14: invokespecial #5
17: astore_1
18: new           #6
21: dup
22: invokespecial #7
25: astore_2
26: aload_2
27: new           #8
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #37
41: dconst_1
42: invokespecial #10
45: invokeinterface #11,  2
50: pop
51: aload_2
52: new           #8
55: dup
56: iconst_1
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: getstatic     #9
66: ldc2_w        #20
69: invokespecial #10
72: invokeinterface #11,  2
77: pop
78: new           #12
81: dup
82: invokespecial #13
85: astore_3
86: aload_3
87: aload_1
88: aload_2
89: getstatic     #30
92: iconst_0
93: invokevirtual #15
96: pop
97: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testUnboundedSolution
Start line: 163
End line: 170
Method source code: 
    public void testUnboundedSolution() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.EQ, 2));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #40
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #38
18: dastore
19: dconst_0
20: invokespecial #5
23: astore_1
24: new           #6
27: dup
28: invokespecial #7
31: astore_2
32: aload_2
33: new           #8
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #27
51: ldc2_w        #3
54: invokespecial #10
57: invokeinterface #11,  2
62: pop
63: new           #12
66: dup
67: invokespecial #13
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #30
77: iconst_0
78: invokevirtual #15
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testRestrictVariablesToNonNegative
Start line: 173
End line: 190
Method source code: 
    public void testRestrictVariablesToNonNegative() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 409, 523, 70, 204, 339 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {    43,   56, 345,  56,    5 }, Relationship.LEQ,  4567456));
        constraints.add(new LinearConstraint(new double[] {    12,   45,   7,  56,   23 }, Relationship.LEQ,    56454));
        constraints.add(new LinearConstraint(new double[] {     8,  768,   0,  34, 7456 }, Relationship.LEQ,  1923421));
        constraints.add(new LinearConstraint(new double[] { 12342, 2342,  34, 678, 2342 }, Relationship.GEQ,     4356));
        constraints.add(new LinearConstraint(new double[] {    45,  678,  76,  52,   23 }, Relationship.EQ,    456356));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        assertEquals(2902.92783505155, solution.getPoint()[0], .0000001);
        assertEquals(480.419243986254, solution.getPoint()[1], .0000001);
        assertEquals(0.0, solution.getPoint()[2], .0000001);
        assertEquals(0.0, solution.getPoint()[3], .0000001);
        assertEquals(0.0, solution.getPoint()[4], .0000001);
        assertEquals(1438556.7491409, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_5
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #62
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #64
18: dastore
19: dup
20: iconst_2
21: ldc2_w        #66
24: dastore
25: dup
26: iconst_3
27: ldc2_w        #68
30: dastore
31: dup
32: iconst_4
33: ldc2_w        #70
36: dastore
37: dconst_0
38: invokespecial #5
41: astore_1
42: new           #6
45: dup
46: invokespecial #7
49: astore_2
50: aload_2
51: new           #8
54: dup
55: iconst_5
56: newarray       double
58: dup
59: iconst_0
60: ldc2_w        #72
63: dastore
64: dup
65: iconst_1
66: ldc2_w        #74
69: dastore
70: dup
71: iconst_2
72: ldc2_w        #76
75: dastore
76: dup
77: iconst_3
78: ldc2_w        #74
81: dastore
82: dup
83: iconst_4
84: ldc2_w        #78
87: dastore
88: getstatic     #37
91: ldc2_w        #80
94: invokespecial #10
97: invokeinterface #11,  2
102: pop
103: aload_2
104: new           #8
107: dup
108: iconst_5
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #54
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #82
122: dastore
123: dup
124: iconst_2
125: ldc2_w        #33
128: dastore
129: dup
130: iconst_3
131: ldc2_w        #74
134: dastore
135: dup
136: iconst_4
137: ldc2_w        #28
140: dastore
141: getstatic     #37
144: ldc2_w        #84
147: invokespecial #10
150: invokeinterface #11,  2
155: pop
156: aload_2
157: new           #8
160: dup
161: iconst_5
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #60
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #86
175: dastore
176: dup
177: iconst_2
178: dconst_0
179: dastore
180: dup
181: iconst_3
182: ldc2_w        #88
185: dastore
186: dup
187: iconst_4
188: ldc2_w        #90
191: dastore
192: getstatic     #37
195: ldc2_w        #92
198: invokespecial #10
201: invokeinterface #11,  2
206: pop
207: aload_2
208: new           #8
211: dup
212: iconst_5
213: newarray       double
215: dup
216: iconst_0
217: ldc2_w        #94
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #96
226: dastore
227: dup
228: iconst_2
229: ldc2_w        #88
232: dastore
233: dup
234: iconst_3
235: ldc2_w        #98
238: dastore
239: dup
240: iconst_4
241: ldc2_w        #96
244: dastore
245: getstatic     #9
248: ldc2_w        #100
251: invokespecial #10
254: invokeinterface #11,  2
259: pop
260: aload_2
261: new           #8
264: dup
265: iconst_5
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #82
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #98
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #102
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #104
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #28
297: dastore
298: getstatic     #27
301: ldc2_w        #106
304: invokespecial #10
307: invokeinterface #11,  2
312: pop
313: new           #12
316: dup
317: invokespecial #13
320: astore_3
321: aload_3
322: aload_1
323: aload_2
324: getstatic     #30
327: iconst_1
328: invokevirtual #15
331: astore        4
333: ldc2_w        #108
336: aload         4
338: invokevirtual #16
341: iconst_0
342: daload
343: ldc2_w        #17
346: invokestatic  #19
349: ldc2_w        #110
352: aload         4
354: invokevirtual #16
357: iconst_1
358: daload
359: ldc2_w        #17
362: invokestatic  #19
365: dconst_0
366: aload         4
368: invokevirtual #16
371: iconst_2
372: daload
373: ldc2_w        #17
376: invokestatic  #19
379: dconst_0
380: aload         4
382: invokevirtual #16
385: iconst_3
386: daload
387: ldc2_w        #17
390: invokestatic  #19
393: dconst_0
394: aload         4
396: invokevirtual #16
399: iconst_4
400: daload
401: ldc2_w        #17
404: invokestatic  #19
407: ldc2_w        #112
410: aload         4
412: invokevirtual #22
415: ldc2_w        #17
418: invokestatic  #19
421: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testEpsilon
Start line: 193
End line: 207
Method source code: 
    public void testEpsilon() throws OptimizationException {
      LinearObjectiveFunction f =
          new LinearObjectiveFunction(new double[] { 10, 5, 1 }, 0);
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] {  9, 8, 0 }, Relationship.EQ,  17));
      constraints.add(new LinearConstraint(new double[] {  0, 7, 8 }, Relationship.LEQ,  7));
      constraints.add(new LinearConstraint(new double[] { 10, 0, 2 }, Relationship.LEQ, 10));

      SimplexSolver solver = new SimplexSolver();
      RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
      assertEquals(1.0, solution.getPoint()[0], 0.0);
      assertEquals(1.0, solution.getPoint()[1], 0.0);
      assertEquals(0.0, solution.getPoint()[2], 0.0);
      assertEquals(15.0, solution.getValue(), 0.0);
  }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #38
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #78
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #5
27: astore_1
28: new           #6
31: dup
32: invokespecial #7
35: astore_2
36: aload_2
37: new           #8
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: ldc2_w        #114
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #60
55: dastore
56: dup
57: iconst_2
58: dconst_0
59: dastore
60: getstatic     #27
63: ldc2_w        #116
66: invokespecial #10
69: invokeinterface #11,  2
74: pop
75: aload_2
76: new           #8
79: dup
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_0
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #33
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #60
98: dastore
99: getstatic     #37
102: ldc2_w        #33
105: invokespecial #10
108: invokeinterface #11,  2
113: pop
114: aload_2
115: new           #8
118: dup
119: iconst_3
120: newarray       double
122: dup
123: iconst_0
124: ldc2_w        #38
127: dastore
128: dup
129: iconst_1
130: dconst_0
131: dastore
132: dup
133: iconst_2
134: ldc2_w        #3
137: dastore
138: getstatic     #37
141: ldc2_w        #38
144: invokespecial #10
147: invokeinterface #11,  2
152: pop
153: new           #12
156: dup
157: invokespecial #13
160: astore_3
161: aload_3
162: aload_1
163: aload_2
164: getstatic     #30
167: iconst_0
168: invokevirtual #15
171: astore        4
173: dconst_1
174: aload         4
176: invokevirtual #16
179: iconst_0
180: daload
181: dconst_0
182: invokestatic  #19
185: dconst_1
186: aload         4
188: invokevirtual #16
191: iconst_1
192: daload
193: dconst_0
194: invokestatic  #19
197: dconst_0
198: aload         4
200: invokevirtual #16
203: iconst_2
204: daload
205: dconst_0
206: invokestatic  #19
209: ldc2_w        #40
212: aload         4
214: invokevirtual #22
217: dconst_0
218: invokestatic  #19
221: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testTrivialModel
Start line: 210
End line: 218
Method source code: 
    public void testTrivialModel() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ,  0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        assertEquals(0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #5
19: astore_1
20: new           #6
23: dup
24: invokespecial #7
27: astore_2
28: aload_2
29: new           #8
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_1
43: dastore
44: getstatic     #27
47: dconst_0
48: invokespecial #10
51: invokeinterface #11,  2
56: pop
57: new           #12
60: dup
61: invokespecial #13
64: astore_3
65: aload_3
66: aload_1
67: aload_2
68: getstatic     #30
71: iconst_1
72: invokevirtual #15
75: astore        4
77: dconst_0
78: aload         4
80: invokevirtual #22
83: ldc2_w        #17
86: invokestatic  #19
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testLargeModel
Start line: 221
End line: 345
Method source code: 
    public void testLargeModel() throws OptimizationException {
        double[] objective = new double[] {
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           12, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 12, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 12, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 12, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1};

        LinearObjectiveFunction f = new LinearObjectiveFunction(objective, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 >= 49"));
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 >= 42"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 >= 49"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 >= 42"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 >= 51"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 >= 44"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x82 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x83 = 0"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 >= 51"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 >= 44"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x110 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x111 = 0"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 >= 49"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 >= 42"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 >= 59"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 >= 42"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x83 + x82 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x111 + x110 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x175 + x176 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x192 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x205 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x206 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x207 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x208 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x209 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x210 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x211 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x212 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x213 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x214 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x215 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x192 = 0"));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        assertEquals(7518.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: sipush        216
3: newarray       double
5: dup
6: iconst_0
7: dconst_1
8: dastore
9: dup
10: iconst_1
11: dconst_1
12: dastore
13: dup
14: iconst_2
15: dconst_1
16: dastore
17: dup
18: iconst_3
19: dconst_1
20: dastore
21: dup
22: iconst_4
23: dconst_1
24: dastore
25: dup
26: iconst_5
27: dconst_1
28: dastore
29: dup
30: bipush        6
32: dconst_1
33: dastore
34: dup
35: bipush        7
37: dconst_1
38: dastore
39: dup
40: bipush        8
42: dconst_1
43: dastore
44: dup
45: bipush        9
47: dconst_1
48: dastore
49: dup
50: bipush        10
52: dconst_1
53: dastore
54: dup
55: bipush        11
57: dconst_1
58: dastore
59: dup
60: bipush        12
62: ldc2_w        #54
65: dastore
66: dup
67: bipush        13
69: dconst_1
70: dastore
71: dup
72: bipush        14
74: dconst_1
75: dastore
76: dup
77: bipush        15
79: dconst_1
80: dastore
81: dup
82: bipush        16
84: dconst_1
85: dastore
86: dup
87: bipush        17
89: dconst_1
90: dastore
91: dup
92: bipush        18
94: dconst_1
95: dastore
96: dup
97: bipush        19
99: dconst_1
100: dastore
101: dup
102: bipush        20
104: dconst_1
105: dastore
106: dup
107: bipush        21
109: dconst_1
110: dastore
111: dup
112: bipush        22
114: dconst_1
115: dastore
116: dup
117: bipush        23
119: dconst_1
120: dastore
121: dup
122: bipush        24
124: dconst_1
125: dastore
126: dup
127: bipush        25
129: dconst_1
130: dastore
131: dup
132: bipush        26
134: dconst_1
135: dastore
136: dup
137: bipush        27
139: dconst_1
140: dastore
141: dup
142: bipush        28
144: dconst_1
145: dastore
146: dup
147: bipush        29
149: dconst_1
150: dastore
151: dup
152: bipush        30
154: dconst_1
155: dastore
156: dup
157: bipush        31
159: dconst_1
160: dastore
161: dup
162: bipush        32
164: dconst_1
165: dastore
166: dup
167: bipush        33
169: dconst_1
170: dastore
171: dup
172: bipush        34
174: dconst_1
175: dastore
176: dup
177: bipush        35
179: dconst_1
180: dastore
181: dup
182: bipush        36
184: dconst_1
185: dastore
186: dup
187: bipush        37
189: dconst_1
190: dastore
191: dup
192: bipush        38
194: dconst_1
195: dastore
196: dup
197: bipush        39
199: dconst_1
200: dastore
201: dup
202: bipush        40
204: ldc2_w        #54
207: dastore
208: dup
209: bipush        41
211: dconst_1
212: dastore
213: dup
214: bipush        42
216: dconst_1
217: dastore
218: dup
219: bipush        43
221: dconst_1
222: dastore
223: dup
224: bipush        44
226: dconst_1
227: dastore
228: dup
229: bipush        45
231: dconst_1
232: dastore
233: dup
234: bipush        46
236: dconst_1
237: dastore
238: dup
239: bipush        47
241: dconst_1
242: dastore
243: dup
244: bipush        48
246: dconst_1
247: dastore
248: dup
249: bipush        49
251: dconst_1
252: dastore
253: dup
254: bipush        50
256: dconst_1
257: dastore
258: dup
259: bipush        51
261: dconst_1
262: dastore
263: dup
264: bipush        52
266: dconst_1
267: dastore
268: dup
269: bipush        53
271: dconst_1
272: dastore
273: dup
274: bipush        54
276: dconst_1
277: dastore
278: dup
279: bipush        55
281: dconst_1
282: dastore
283: dup
284: bipush        56
286: dconst_1
287: dastore
288: dup
289: bipush        57
291: dconst_1
292: dastore
293: dup
294: bipush        58
296: dconst_1
297: dastore
298: dup
299: bipush        59
301: dconst_1
302: dastore
303: dup
304: bipush        60
306: dconst_1
307: dastore
308: dup
309: bipush        61
311: dconst_1
312: dastore
313: dup
314: bipush        62
316: dconst_1
317: dastore
318: dup
319: bipush        63
321: dconst_1
322: dastore
323: dup
324: bipush        64
326: dconst_1
327: dastore
328: dup
329: bipush        65
331: dconst_1
332: dastore
333: dup
334: bipush        66
336: dconst_1
337: dastore
338: dup
339: bipush        67
341: dconst_1
342: dastore
343: dup
344: bipush        68
346: ldc2_w        #54
349: dastore
350: dup
351: bipush        69
353: dconst_1
354: dastore
355: dup
356: bipush        70
358: dconst_1
359: dastore
360: dup
361: bipush        71
363: dconst_1
364: dastore
365: dup
366: bipush        72
368: dconst_1
369: dastore
370: dup
371: bipush        73
373: dconst_1
374: dastore
375: dup
376: bipush        74
378: dconst_1
379: dastore
380: dup
381: bipush        75
383: dconst_1
384: dastore
385: dup
386: bipush        76
388: dconst_1
389: dastore
390: dup
391: bipush        77
393: dconst_1
394: dastore
395: dup
396: bipush        78
398: dconst_1
399: dastore
400: dup
401: bipush        79
403: dconst_1
404: dastore
405: dup
406: bipush        80
408: dconst_1
409: dastore
410: dup
411: bipush        81
413: dconst_1
414: dastore
415: dup
416: bipush        82
418: dconst_1
419: dastore
420: dup
421: bipush        83
423: dconst_1
424: dastore
425: dup
426: bipush        84
428: dconst_1
429: dastore
430: dup
431: bipush        85
433: dconst_1
434: dastore
435: dup
436: bipush        86
438: dconst_1
439: dastore
440: dup
441: bipush        87
443: dconst_1
444: dastore
445: dup
446: bipush        88
448: dconst_1
449: dastore
450: dup
451: bipush        89
453: dconst_1
454: dastore
455: dup
456: bipush        90
458: dconst_1
459: dastore
460: dup
461: bipush        91
463: dconst_1
464: dastore
465: dup
466: bipush        92
468: dconst_1
469: dastore
470: dup
471: bipush        93
473: dconst_1
474: dastore
475: dup
476: bipush        94
478: dconst_1
479: dastore
480: dup
481: bipush        95
483: dconst_1
484: dastore
485: dup
486: bipush        96
488: ldc2_w        #54
491: dastore
492: dup
493: bipush        97
495: dconst_1
496: dastore
497: dup
498: bipush        98
500: dconst_1
501: dastore
502: dup
503: bipush        99
505: dconst_1
506: dastore
507: dup
508: bipush        100
510: dconst_1
511: dastore
512: dup
513: bipush        101
515: dconst_1
516: dastore
517: dup
518: bipush        102
520: dconst_1
521: dastore
522: dup
523: bipush        103
525: dconst_1
526: dastore
527: dup
528: bipush        104
530: dconst_1
531: dastore
532: dup
533: bipush        105
535: dconst_1
536: dastore
537: dup
538: bipush        106
540: dconst_1
541: dastore
542: dup
543: bipush        107
545: dconst_1
546: dastore
547: dup
548: bipush        108
550: dconst_1
551: dastore
552: dup
553: bipush        109
555: dconst_1
556: dastore
557: dup
558: bipush        110
560: dconst_1
561: dastore
562: dup
563: bipush        111
565: dconst_1
566: dastore
567: dup
568: bipush        112
570: dconst_1
571: dastore
572: dup
573: bipush        113
575: dconst_1
576: dastore
577: dup
578: bipush        114
580: dconst_1
581: dastore
582: dup
583: bipush        115
585: dconst_1
586: dastore
587: dup
588: bipush        116
590: dconst_1
591: dastore
592: dup
593: bipush        117
595: dconst_1
596: dastore
597: dup
598: bipush        118
600: dconst_1
601: dastore
602: dup
603: bipush        119
605: dconst_1
606: dastore
607: dup
608: bipush        120
610: dconst_1
611: dastore
612: dup
613: bipush        121
615: dconst_1
616: dastore
617: dup
618: bipush        122
620: dconst_1
621: dastore
622: dup
623: bipush        123
625: dconst_1
626: dastore
627: dup
628: bipush        124
630: ldc2_w        #54
633: dastore
634: dup
635: bipush        125
637: dconst_1
638: dastore
639: dup
640: bipush        126
642: dconst_1
643: dastore
644: dup
645: bipush        127
647: dconst_1
648: dastore
649: dup
650: sipush        128
653: dconst_1
654: dastore
655: dup
656: sipush        129
659: dconst_1
660: dastore
661: dup
662: sipush        130
665: dconst_1
666: dastore
667: dup
668: sipush        131
671: dconst_1
672: dastore
673: dup
674: sipush        132
677: dconst_1
678: dastore
679: dup
680: sipush        133
683: dconst_1
684: dastore
685: dup
686: sipush        134
689: dconst_1
690: dastore
691: dup
692: sipush        135
695: dconst_1
696: dastore
697: dup
698: sipush        136
701: dconst_1
702: dastore
703: dup
704: sipush        137
707: dconst_1
708: dastore
709: dup
710: sipush        138
713: dconst_1
714: dastore
715: dup
716: sipush        139
719: dconst_1
720: dastore
721: dup
722: sipush        140
725: dconst_1
726: dastore
727: dup
728: sipush        141
731: dconst_1
732: dastore
733: dup
734: sipush        142
737: dconst_1
738: dastore
739: dup
740: sipush        143
743: dconst_1
744: dastore
745: dup
746: sipush        144
749: dconst_1
750: dastore
751: dup
752: sipush        145
755: dconst_1
756: dastore
757: dup
758: sipush        146
761: dconst_1
762: dastore
763: dup
764: sipush        147
767: dconst_1
768: dastore
769: dup
770: sipush        148
773: dconst_1
774: dastore
775: dup
776: sipush        149
779: dconst_1
780: dastore
781: dup
782: sipush        150
785: dconst_1
786: dastore
787: dup
788: sipush        151
791: dconst_1
792: dastore
793: dup
794: sipush        152
797: ldc2_w        #54
800: dastore
801: dup
802: sipush        153
805: dconst_1
806: dastore
807: dup
808: sipush        154
811: dconst_1
812: dastore
813: dup
814: sipush        155
817: dconst_1
818: dastore
819: dup
820: sipush        156
823: dconst_1
824: dastore
825: dup
826: sipush        157
829: dconst_1
830: dastore
831: dup
832: sipush        158
835: dconst_1
836: dastore
837: dup
838: sipush        159
841: dconst_1
842: dastore
843: dup
844: sipush        160
847: dconst_1
848: dastore
849: dup
850: sipush        161
853: dconst_1
854: dastore
855: dup
856: sipush        162
859: dconst_1
860: dastore
861: dup
862: sipush        163
865: dconst_1
866: dastore
867: dup
868: sipush        164
871: dconst_1
872: dastore
873: dup
874: sipush        165
877: dconst_1
878: dastore
879: dup
880: sipush        166
883: dconst_1
884: dastore
885: dup
886: sipush        167
889: dconst_1
890: dastore
891: dup
892: sipush        168
895: dconst_1
896: dastore
897: dup
898: sipush        169
901: dconst_1
902: dastore
903: dup
904: sipush        170
907: dconst_1
908: dastore
909: dup
910: sipush        171
913: dconst_1
914: dastore
915: dup
916: sipush        172
919: dconst_1
920: dastore
921: dup
922: sipush        173
925: dconst_1
926: dastore
927: dup
928: sipush        174
931: dconst_1
932: dastore
933: dup
934: sipush        175
937: dconst_1
938: dastore
939: dup
940: sipush        176
943: dconst_1
944: dastore
945: dup
946: sipush        177
949: dconst_1
950: dastore
951: dup
952: sipush        178
955: dconst_1
956: dastore
957: dup
958: sipush        179
961: dconst_1
962: dastore
963: dup
964: sipush        180
967: dconst_1
968: dastore
969: dup
970: sipush        181
973: dconst_1
974: dastore
975: dup
976: sipush        182
979: dconst_1
980: dastore
981: dup
982: sipush        183
985: dconst_1
986: dastore
987: dup
988: sipush        184
991: dconst_1
992: dastore
993: dup
994: sipush        185
997: dconst_1
998: dastore
999: dup
1000: sipush        186
1003: dconst_1
1004: dastore
1005: dup
1006: sipush        187
1009: dconst_1
1010: dastore
1011: dup
1012: sipush        188
1015: dconst_1
1016: dastore
1017: dup
1018: sipush        189
1021: dconst_1
1022: dastore
1023: dup
1024: sipush        190
1027: dconst_1
1028: dastore
1029: dup
1030: sipush        191
1033: dconst_1
1034: dastore
1035: dup
1036: sipush        192
1039: dconst_1
1040: dastore
1041: dup
1042: sipush        193
1045: dconst_1
1046: dastore
1047: dup
1048: sipush        194
1051: dconst_1
1052: dastore
1053: dup
1054: sipush        195
1057: dconst_1
1058: dastore
1059: dup
1060: sipush        196
1063: dconst_1
1064: dastore
1065: dup
1066: sipush        197
1069: dconst_1
1070: dastore
1071: dup
1072: sipush        198
1075: dconst_1
1076: dastore
1077: dup
1078: sipush        199
1081: dconst_1
1082: dastore
1083: dup
1084: sipush        200
1087: dconst_1
1088: dastore
1089: dup
1090: sipush        201
1093: dconst_1
1094: dastore
1095: dup
1096: sipush        202
1099: dconst_1
1100: dastore
1101: dup
1102: sipush        203
1105: dconst_1
1106: dastore
1107: dup
1108: sipush        204
1111: dconst_1
1112: dastore
1113: dup
1114: sipush        205
1117: dconst_1
1118: dastore
1119: dup
1120: sipush        206
1123: dconst_1
1124: dastore
1125: dup
1126: sipush        207
1129: dconst_1
1130: dastore
1131: dup
1132: sipush        208
1135: dconst_1
1136: dastore
1137: dup
1138: sipush        209
1141: dconst_1
1142: dastore
1143: dup
1144: sipush        210
1147: dconst_1
1148: dastore
1149: dup
1150: sipush        211
1153: dconst_1
1154: dastore
1155: dup
1156: sipush        212
1159: dconst_1
1160: dastore
1161: dup
1162: sipush        213
1165: dconst_1
1166: dastore
1167: dup
1168: sipush        214
1171: dconst_1
1172: dastore
1173: dup
1174: sipush        215
1177: dconst_1
1178: dastore
1179: astore_1
1180: new           #2
1183: dup
1184: aload_1
1185: dconst_0
1186: invokespecial #5
1189: astore_2
1190: new           #6
1193: dup
1194: invokespecial #7
1197: astore_3
1198: aload_3
1199: aload_0
1200: aload_1
1201: arraylength
1202: ldc           #118
1204: invokespecial #119
1207: invokeinterface #11,  2
1212: pop
1213: aload_3
1214: aload_0
1215: aload_1
1216: arraylength
1217: ldc           #120
1219: invokespecial #119
1222: invokeinterface #11,  2
1227: pop
1228: aload_3
1229: aload_0
1230: aload_1
1231: arraylength
1232: ldc           #121
1234: invokespecial #119
1237: invokeinterface #11,  2
1242: pop
1243: aload_3
1244: aload_0
1245: aload_1
1246: arraylength
1247: ldc           #122
1249: invokespecial #119
1252: invokeinterface #11,  2
1257: pop
1258: aload_3
1259: aload_0
1260: aload_1
1261: arraylength
1262: ldc           #123
1264: invokespecial #119
1267: invokeinterface #11,  2
1272: pop
1273: aload_3
1274: aload_0
1275: aload_1
1276: arraylength
1277: ldc           #124
1279: invokespecial #119
1282: invokeinterface #11,  2
1287: pop
1288: aload_3
1289: aload_0
1290: aload_1
1291: arraylength
1292: ldc           #125
1294: invokespecial #119
1297: invokeinterface #11,  2
1302: pop
1303: aload_3
1304: aload_0
1305: aload_1
1306: arraylength
1307: ldc           #126
1309: invokespecial #119
1312: invokeinterface #11,  2
1317: pop
1318: aload_3
1319: aload_0
1320: aload_1
1321: arraylength
1322: ldc           #127
1324: invokespecial #119
1327: invokeinterface #11,  2
1332: pop
1333: aload_3
1334: aload_0
1335: aload_1
1336: arraylength
1337: ldc           #128
1339: invokespecial #119
1342: invokeinterface #11,  2
1347: pop
1348: aload_3
1349: aload_0
1350: aload_1
1351: arraylength
1352: ldc           #129
1354: invokespecial #119
1357: invokeinterface #11,  2
1362: pop
1363: aload_3
1364: aload_0
1365: aload_1
1366: arraylength
1367: ldc           #130
1369: invokespecial #119
1372: invokeinterface #11,  2
1377: pop
1378: aload_3
1379: aload_0
1380: aload_1
1381: arraylength
1382: ldc           #131
1384: invokespecial #119
1387: invokeinterface #11,  2
1392: pop
1393: aload_3
1394: aload_0
1395: aload_1
1396: arraylength
1397: ldc           #132
1399: invokespecial #119
1402: invokeinterface #11,  2
1407: pop
1408: aload_3
1409: aload_0
1410: aload_1
1411: arraylength
1412: ldc           #133
1414: invokespecial #119
1417: invokeinterface #11,  2
1422: pop
1423: aload_3
1424: aload_0
1425: aload_1
1426: arraylength
1427: ldc           #134
1429: invokespecial #119
1432: invokeinterface #11,  2
1437: pop
1438: aload_3
1439: aload_0
1440: aload_1
1441: arraylength
1442: ldc           #135
1444: invokespecial #119
1447: invokeinterface #11,  2
1452: pop
1453: aload_3
1454: aload_0
1455: aload_1
1456: arraylength
1457: ldc           #136
1459: invokespecial #119
1462: invokeinterface #11,  2
1467: pop
1468: aload_3
1469: aload_0
1470: aload_1
1471: arraylength
1472: ldc           #137
1474: invokespecial #119
1477: invokeinterface #11,  2
1482: pop
1483: aload_3
1484: aload_0
1485: aload_1
1486: arraylength
1487: ldc           #138
1489: invokespecial #119
1492: invokeinterface #11,  2
1497: pop
1498: aload_3
1499: aload_0
1500: aload_1
1501: arraylength
1502: ldc           #139
1504: invokespecial #119
1507: invokeinterface #11,  2
1512: pop
1513: aload_3
1514: aload_0
1515: aload_1
1516: arraylength
1517: ldc           #140
1519: invokespecial #119
1522: invokeinterface #11,  2
1527: pop
1528: aload_3
1529: aload_0
1530: aload_1
1531: arraylength
1532: ldc           #141
1534: invokespecial #119
1537: invokeinterface #11,  2
1542: pop
1543: aload_3
1544: aload_0
1545: aload_1
1546: arraylength
1547: ldc           #142
1549: invokespecial #119
1552: invokeinterface #11,  2
1557: pop
1558: aload_3
1559: aload_0
1560: aload_1
1561: arraylength
1562: ldc           #143
1564: invokespecial #119
1567: invokeinterface #11,  2
1572: pop
1573: aload_3
1574: aload_0
1575: aload_1
1576: arraylength
1577: ldc           #144
1579: invokespecial #119
1582: invokeinterface #11,  2
1587: pop
1588: aload_3
1589: aload_0
1590: aload_1
1591: arraylength
1592: ldc           #145
1594: invokespecial #119
1597: invokeinterface #11,  2
1602: pop
1603: aload_3
1604: aload_0
1605: aload_1
1606: arraylength
1607: ldc           #146
1609: invokespecial #119
1612: invokeinterface #11,  2
1617: pop
1618: aload_3
1619: aload_0
1620: aload_1
1621: arraylength
1622: ldc           #147
1624: invokespecial #119
1627: invokeinterface #11,  2
1632: pop
1633: aload_3
1634: aload_0
1635: aload_1
1636: arraylength
1637: ldc           #148
1639: invokespecial #119
1642: invokeinterface #11,  2
1647: pop
1648: aload_3
1649: aload_0
1650: aload_1
1651: arraylength
1652: ldc           #149
1654: invokespecial #119
1657: invokeinterface #11,  2
1662: pop
1663: aload_3
1664: aload_0
1665: aload_1
1666: arraylength
1667: ldc           #150
1669: invokespecial #119
1672: invokeinterface #11,  2
1677: pop
1678: aload_3
1679: aload_0
1680: aload_1
1681: arraylength
1682: ldc           #151
1684: invokespecial #119
1687: invokeinterface #11,  2
1692: pop
1693: aload_3
1694: aload_0
1695: aload_1
1696: arraylength
1697: ldc           #152
1699: invokespecial #119
1702: invokeinterface #11,  2
1707: pop
1708: aload_3
1709: aload_0
1710: aload_1
1711: arraylength
1712: ldc           #153
1714: invokespecial #119
1717: invokeinterface #11,  2
1722: pop
1723: aload_3
1724: aload_0
1725: aload_1
1726: arraylength
1727: ldc           #154
1729: invokespecial #119
1732: invokeinterface #11,  2
1737: pop
1738: aload_3
1739: aload_0
1740: aload_1
1741: arraylength
1742: ldc           #155
1744: invokespecial #119
1747: invokeinterface #11,  2
1752: pop
1753: aload_3
1754: aload_0
1755: aload_1
1756: arraylength
1757: ldc           #156
1759: invokespecial #119
1762: invokeinterface #11,  2
1767: pop
1768: aload_3
1769: aload_0
1770: aload_1
1771: arraylength
1772: ldc           #157
1774: invokespecial #119
1777: invokeinterface #11,  2
1782: pop
1783: aload_3
1784: aload_0
1785: aload_1
1786: arraylength
1787: ldc           #158
1789: invokespecial #119
1792: invokeinterface #11,  2
1797: pop
1798: aload_3
1799: aload_0
1800: aload_1
1801: arraylength
1802: ldc           #159
1804: invokespecial #119
1807: invokeinterface #11,  2
1812: pop
1813: aload_3
1814: aload_0
1815: aload_1
1816: arraylength
1817: ldc           #160
1819: invokespecial #119
1822: invokeinterface #11,  2
1827: pop
1828: aload_3
1829: aload_0
1830: aload_1
1831: arraylength
1832: ldc           #161
1834: invokespecial #119
1837: invokeinterface #11,  2
1842: pop
1843: aload_3
1844: aload_0
1845: aload_1
1846: arraylength
1847: ldc           #162
1849: invokespecial #119
1852: invokeinterface #11,  2
1857: pop
1858: aload_3
1859: aload_0
1860: aload_1
1861: arraylength
1862: ldc           #163
1864: invokespecial #119
1867: invokeinterface #11,  2
1872: pop
1873: aload_3
1874: aload_0
1875: aload_1
1876: arraylength
1877: ldc           #164
1879: invokespecial #119
1882: invokeinterface #11,  2
1887: pop
1888: aload_3
1889: aload_0
1890: aload_1
1891: arraylength
1892: ldc           #165
1894: invokespecial #119
1897: invokeinterface #11,  2
1902: pop
1903: aload_3
1904: aload_0
1905: aload_1
1906: arraylength
1907: ldc           #166
1909: invokespecial #119
1912: invokeinterface #11,  2
1917: pop
1918: aload_3
1919: aload_0
1920: aload_1
1921: arraylength
1922: ldc           #167
1924: invokespecial #119
1927: invokeinterface #11,  2
1932: pop
1933: aload_3
1934: aload_0
1935: aload_1
1936: arraylength
1937: ldc           #168
1939: invokespecial #119
1942: invokeinterface #11,  2
1947: pop
1948: aload_3
1949: aload_0
1950: aload_1
1951: arraylength
1952: ldc           #169
1954: invokespecial #119
1957: invokeinterface #11,  2
1962: pop
1963: aload_3
1964: aload_0
1965: aload_1
1966: arraylength
1967: ldc           #170
1969: invokespecial #119
1972: invokeinterface #11,  2
1977: pop
1978: aload_3
1979: aload_0
1980: aload_1
1981: arraylength
1982: ldc           #171
1984: invokespecial #119
1987: invokeinterface #11,  2
1992: pop
1993: aload_3
1994: aload_0
1995: aload_1
1996: arraylength
1997: ldc           #172
1999: invokespecial #119
2002: invokeinterface #11,  2
2007: pop
2008: aload_3
2009: aload_0
2010: aload_1
2011: arraylength
2012: ldc           #173
2014: invokespecial #119
2017: invokeinterface #11,  2
2022: pop
2023: aload_3
2024: aload_0
2025: aload_1
2026: arraylength
2027: ldc           #174
2029: invokespecial #119
2032: invokeinterface #11,  2
2037: pop
2038: aload_3
2039: aload_0
2040: aload_1
2041: arraylength
2042: ldc           #175
2044: invokespecial #119
2047: invokeinterface #11,  2
2052: pop
2053: aload_3
2054: aload_0
2055: aload_1
2056: arraylength
2057: ldc           #176
2059: invokespecial #119
2062: invokeinterface #11,  2
2067: pop
2068: aload_3
2069: aload_0
2070: aload_1
2071: arraylength
2072: ldc           #177
2074: invokespecial #119
2077: invokeinterface #11,  2
2082: pop
2083: aload_3
2084: aload_0
2085: aload_1
2086: arraylength
2087: ldc           #178
2089: invokespecial #119
2092: invokeinterface #11,  2
2097: pop
2098: aload_3
2099: aload_0
2100: aload_1
2101: arraylength
2102: ldc           #179
2104: invokespecial #119
2107: invokeinterface #11,  2
2112: pop
2113: aload_3
2114: aload_0
2115: aload_1
2116: arraylength
2117: ldc           #180
2119: invokespecial #119
2122: invokeinterface #11,  2
2127: pop
2128: aload_3
2129: aload_0
2130: aload_1
2131: arraylength
2132: ldc           #181
2134: invokespecial #119
2137: invokeinterface #11,  2
2142: pop
2143: aload_3
2144: aload_0
2145: aload_1
2146: arraylength
2147: ldc           #182
2149: invokespecial #119
2152: invokeinterface #11,  2
2157: pop
2158: aload_3
2159: aload_0
2160: aload_1
2161: arraylength
2162: ldc           #183
2164: invokespecial #119
2167: invokeinterface #11,  2
2172: pop
2173: aload_3
2174: aload_0
2175: aload_1
2176: arraylength
2177: ldc           #184
2179: invokespecial #119
2182: invokeinterface #11,  2
2187: pop
2188: aload_3
2189: aload_0
2190: aload_1
2191: arraylength
2192: ldc           #185
2194: invokespecial #119
2197: invokeinterface #11,  2
2202: pop
2203: aload_3
2204: aload_0
2205: aload_1
2206: arraylength
2207: ldc           #186
2209: invokespecial #119
2212: invokeinterface #11,  2
2217: pop
2218: aload_3
2219: aload_0
2220: aload_1
2221: arraylength
2222: ldc           #187
2224: invokespecial #119
2227: invokeinterface #11,  2
2232: pop
2233: aload_3
2234: aload_0
2235: aload_1
2236: arraylength
2237: ldc           #188
2239: invokespecial #119
2242: invokeinterface #11,  2
2247: pop
2248: aload_3
2249: aload_0
2250: aload_1
2251: arraylength
2252: ldc           #189
2254: invokespecial #119
2257: invokeinterface #11,  2
2262: pop
2263: aload_3
2264: aload_0
2265: aload_1
2266: arraylength
2267: ldc           #190
2269: invokespecial #119
2272: invokeinterface #11,  2
2277: pop
2278: aload_3
2279: aload_0
2280: aload_1
2281: arraylength
2282: ldc           #191
2284: invokespecial #119
2287: invokeinterface #11,  2
2292: pop
2293: aload_3
2294: aload_0
2295: aload_1
2296: arraylength
2297: ldc           #192
2299: invokespecial #119
2302: invokeinterface #11,  2
2307: pop
2308: aload_3
2309: aload_0
2310: aload_1
2311: arraylength
2312: ldc           #193
2314: invokespecial #119
2317: invokeinterface #11,  2
2322: pop
2323: aload_3
2324: aload_0
2325: aload_1
2326: arraylength
2327: ldc           #194
2329: invokespecial #119
2332: invokeinterface #11,  2
2337: pop
2338: aload_3
2339: aload_0
2340: aload_1
2341: arraylength
2342: ldc           #195
2344: invokespecial #119
2347: invokeinterface #11,  2
2352: pop
2353: aload_3
2354: aload_0
2355: aload_1
2356: arraylength
2357: ldc           #196
2359: invokespecial #119
2362: invokeinterface #11,  2
2367: pop
2368: aload_3
2369: aload_0
2370: aload_1
2371: arraylength
2372: ldc           #197
2374: invokespecial #119
2377: invokeinterface #11,  2
2382: pop
2383: aload_3
2384: aload_0
2385: aload_1
2386: arraylength
2387: ldc           #198
2389: invokespecial #119
2392: invokeinterface #11,  2
2397: pop
2398: aload_3
2399: aload_0
2400: aload_1
2401: arraylength
2402: ldc           #199
2404: invokespecial #119
2407: invokeinterface #11,  2
2412: pop
2413: aload_3
2414: aload_0
2415: aload_1
2416: arraylength
2417: ldc           #200
2419: invokespecial #119
2422: invokeinterface #11,  2
2427: pop
2428: aload_3
2429: aload_0
2430: aload_1
2431: arraylength
2432: ldc           #201
2434: invokespecial #119
2437: invokeinterface #11,  2
2442: pop
2443: aload_3
2444: aload_0
2445: aload_1
2446: arraylength
2447: ldc           #202
2449: invokespecial #119
2452: invokeinterface #11,  2
2457: pop
2458: aload_3
2459: aload_0
2460: aload_1
2461: arraylength
2462: ldc           #203
2464: invokespecial #119
2467: invokeinterface #11,  2
2472: pop
2473: aload_3
2474: aload_0
2475: aload_1
2476: arraylength
2477: ldc           #204
2479: invokespecial #119
2482: invokeinterface #11,  2
2487: pop
2488: aload_3
2489: aload_0
2490: aload_1
2491: arraylength
2492: ldc           #205
2494: invokespecial #119
2497: invokeinterface #11,  2
2502: pop
2503: aload_3
2504: aload_0
2505: aload_1
2506: arraylength
2507: ldc           #206
2509: invokespecial #119
2512: invokeinterface #11,  2
2517: pop
2518: aload_3
2519: aload_0
2520: aload_1
2521: arraylength
2522: ldc           #207
2524: invokespecial #119
2527: invokeinterface #11,  2
2532: pop
2533: aload_3
2534: aload_0
2535: aload_1
2536: arraylength
2537: ldc           #208
2539: invokespecial #119
2542: invokeinterface #11,  2
2547: pop
2548: aload_3
2549: aload_0
2550: aload_1
2551: arraylength
2552: ldc           #209
2554: invokespecial #119
2557: invokeinterface #11,  2
2562: pop
2563: aload_3
2564: aload_0
2565: aload_1
2566: arraylength
2567: ldc           #210
2569: invokespecial #119
2572: invokeinterface #11,  2
2577: pop
2578: aload_3
2579: aload_0
2580: aload_1
2581: arraylength
2582: ldc           #211
2584: invokespecial #119
2587: invokeinterface #11,  2
2592: pop
2593: new           #12
2596: dup
2597: invokespecial #13
2600: astore        4
2602: aload         4
2604: aload_2
2605: aload_3
2606: getstatic     #14
2609: iconst_1
2610: invokevirtual #15
2613: astore        5
2615: ldc2_w        #212
2618: aload         5
2620: invokevirtual #22
2623: ldc2_w        #17
2626: invokestatic  #19
2629: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test0
Start line: 26
End line: 44
Method source code: 
  public void test0()  throws Throwable  {
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      SimplexSolver simplexSolver0 = new SimplexSolver();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(100, 100);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 100);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 100);
      simplexTableau0.numArtificialVariables = 100;
      try { 
        simplexSolver0.solvePhase1(simplexTableau0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unbounded solution
         //
         verifyException("org.apache.commons.math.optimization.linear.SimplexSolver", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #4
11: dup
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: bipush        100
22: ldc2_w        #7
25: invokespecial #9
28: astore_3
29: new           #10
32: dup
33: aload_3
34: ldc2_w        #7
37: invokespecial #11
40: astore        4
42: getstatic     #12
45: astore        5
47: new           #13
50: dup
51: aload         4
53: aload_1
54: aload         5
56: iconst_0
57: ldc2_w        #7
60: invokespecial #14
63: astore        6
65: aload         6
67: bipush        100
69: putfield      #15
72: aload_2
73: aload         6
75: invokevirtual #16
78: ldc           #17
80: invokestatic  #18
83: goto          95
86: astore        7
88: ldc           #20
90: aload         7
92: invokestatic  #21
95: return
Exception table:
from    to  target type
72    83    86   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test1
Start line: 47
End line: 68
Method source code: 
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      SimplexSolver simplexSolver0 = new SimplexSolver();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 100);
      double[][] doubleArray1 = new double[8][6];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd((-94.2324483308101));
      simplexTableau0.tableau = realMatrix0;
      try { 
        simplexSolver0.doIteration(simplexTableau0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unbounded solution
         //
         verifyException("org.apache.commons.math.optimization.linear.SimplexSolver", e);
      }
  }
Method byte code: 
0: bipush        6
2: newarray       double
4: astore_1
5: new           #2
8: dup
9: invokespecial #3
12: astore_2
13: new           #10
16: dup
17: aload_1
18: dconst_0
19: invokespecial #22
22: astore_3
23: new           #4
26: dup
27: invokespecial #5
30: astore        4
32: getstatic     #12
35: astore        5
37: new           #13
40: dup
41: aload_3
42: aload_2
43: aload         5
45: iconst_1
46: ldc2_w        #7
49: invokespecial #14
52: astore        6
54: bipush        8
56: bipush        6
58: multianewarray #23,  2
62: astore        7
64: new           #24
67: dup
68: aload         7
70: invokespecial #25
73: astore        8
75: aload         8
77: ldc2_w        #26
80: invokevirtual #28
83: astore        9
85: aload         6
87: aload         9
89: putfield      #29
92: aload         4
94: aload         6
96: invokevirtual #30
99: ldc           #17
101: invokestatic  #18
104: goto          116
107: astore        10
109: ldc           #20
111: aload         10
113: invokestatic  #21
116: return
Exception table:
from    to  target type
92   104   107   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test2
Start line: 71
End line: 89
Method source code: 
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.3002365926117163);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexSolver simplexSolver0 = new SimplexSolver();
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.3002365926117163);
      simplexTableau0.numArtificialVariables = 100;
      try { 
        simplexSolver0.solvePhase1(simplexTableau0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no feasible solution
         //
         verifyException("org.apache.commons.math.optimization.linear.SimplexSolver", e);
      }
  }
Method byte code: 
0: iconst_3
1: newarray       double
3: astore_1
4: new           #10
7: dup
8: aload_1
9: ldc2_w        #31
12: invokespecial #22
15: astore_2
16: getstatic     #12
19: astore_3
20: new           #4
23: dup
24: invokespecial #5
27: astore        4
29: new           #2
32: dup
33: invokespecial #3
36: astore        5
38: new           #13
41: dup
42: aload_2
43: aload         5
45: aload_3
46: iconst_0
47: ldc2_w        #31
50: invokespecial #14
53: astore        6
55: aload         6
57: bipush        100
59: putfield      #15
62: aload         4
64: aload         6
66: invokevirtual #16
69: ldc           #17
71: invokestatic  #18
74: goto          86
77: astore        7
79: ldc           #20
81: aload         7
83: invokestatic  #21
86: return
Exception table:
from    to  target type
62    74    77   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test3
Start line: 92
End line: 108
Method source code: 
  public void test3()  throws Throwable  {
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      SimplexSolver simplexSolver0 = new SimplexSolver();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(100, 100);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 100);
      GoalType goalType0 = GoalType.MAXIMIZE;
      try { 
        simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unbounded solution
         //
         verifyException("org.apache.commons.math.optimization.linear.SimplexSolver", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #4
11: dup
12: invokespecial #5
15: astore_2
16: new           #6
19: dup
20: bipush        100
22: ldc2_w        #7
25: invokespecial #9
28: astore_3
29: new           #10
32: dup
33: aload_3
34: ldc2_w        #7
37: invokespecial #11
40: astore        4
42: getstatic     #33
45: astore        5
47: aload_2
48: aload         4
50: aload_1
51: aload         5
53: iconst_0
54: invokevirtual #34
57: pop
58: ldc           #17
60: invokestatic  #18
63: goto          75
66: astore        6
68: ldc           #20
70: aload         6
72: invokestatic  #21
75: return
Exception table:
from    to  target type
47    63    66   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test4
Start line: 111
End line: 121
Method source code: 
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      SimplexSolver simplexSolver0 = new SimplexSolver();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2880.3323383807156);
      simplexTableau0.numArtificialVariables = 100;
      boolean boolean0 = simplexSolver0.isOptimal(simplexTableau0);
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_3
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: invokespecial #3
11: astore_2
12: new           #10
15: dup
16: aload_1
17: dconst_0
18: invokespecial #22
21: astore_3
22: new           #4
25: dup
26: invokespecial #5
29: astore        4
31: getstatic     #33
34: astore        5
36: new           #13
39: dup
40: aload_3
41: aload_2
42: aload         5
44: iconst_1
45: ldc2_w        #35
48: invokespecial #14
51: astore        6
53: aload         6
55: bipush        100
57: putfield      #15
60: aload         4
62: aload         6
64: invokevirtual #37
67: istore        7
69: iload         7
71: invokestatic  #38
74: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test5
Start line: 124
End line: 132
Method source code: 
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      SimplexSolver simplexSolver0 = new SimplexSolver();
      GoalType goalType0 = GoalType.MINIMIZE;
      RealPointValuePair realPointValuePair0 = simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, true);
      assertEquals(0.0, realPointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: invokespecial #3
11: astore_2
12: new           #10
15: dup
16: aload_1
17: dconst_0
18: invokespecial #22
21: astore_3
22: new           #4
25: dup
26: invokespecial #5
29: astore        4
31: getstatic     #12
34: astore        5
36: aload         4
38: aload_3
39: aload_2
40: aload         5
42: iconst_1
43: invokevirtual #34
46: astore        6
48: dconst_0
49: aload         6
51: invokevirtual #39
54: ldc2_w        #40
57: invokestatic  #42
60: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/82/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test6
Start line: 135
End line: 145
Method source code: 
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexSolver simplexSolver0 = new SimplexSolver();
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 100);
      simplexTableau0.numArtificialVariables = 100;
      simplexSolver0.solvePhase1(simplexTableau0);
      assertEquals(4, simplexTableau0.getNumVariables());
  }
Method byte code: 
0: iconst_4
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: invokespecial #3
11: astore_2
12: new           #10
15: dup
16: aload_1
17: dconst_0
18: invokespecial #22
21: astore_3
22: getstatic     #12
25: astore        4
27: new           #4
30: dup
31: invokespecial #5
34: astore        5
36: new           #13
39: dup
40: aload_3
41: aload_2
42: aload         4
44: iconst_0
45: ldc2_w        #7
48: invokespecial #14
51: astore        6
53: aload         6
55: bipush        100
57: putfield      #15
60: aload         5
62: aload         6
64: invokevirtual #16
67: ldc2_w        #43
70: aload         6
72: invokevirtual #45
75: i2l
76: invokestatic  #46
79: return
}
