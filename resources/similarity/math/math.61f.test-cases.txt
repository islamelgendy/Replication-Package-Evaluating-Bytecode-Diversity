Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 28
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = poissonDistributionImpl1.inverseCumulativeProbability((double) (byte) 10);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: ldc2_w        #13
46: invokevirtual #15
49: istore        4
51: ldc           #16
53: invokestatic  #17
56: goto          101
59: astore        4
61: aload         4
63: invokevirtual #19
66: invokevirtual #20
69: ifne          101
72: new           #21
75: dup
76: invokespecial #22
79: ldc           #23
81: invokevirtual #24
84: aload         4
86: invokevirtual #19
89: invokevirtual #25
92: invokevirtual #24
95: invokevirtual #26
98: invokestatic  #17
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_2
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: ldc2_w        #30
125: invokevirtual #28
128: ldc           #27
130: invokevirtual #24
133: invokevirtual #26
136: dload_2
137: ldc2_w        #30
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: return
Exception table:
from    to  target type
42    56    59   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 31
End line: 47
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int3 = poissonDistributionImpl1.getDomainUpperBound((double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double6 = poissonDistributionImpl1.cumulativeProbability(Double.NaN, (-1.5574077246549023d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #33
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #34
38: istore_2
39: aload_1
40: ldc2_w        #36
43: ldc2_w        #38
46: invokevirtual #12
49: dstore_3
50: ldc           #16
52: invokestatic  #17
55: goto          97
58: astore_3
59: aload_3
60: invokevirtual #19
63: invokevirtual #20
66: ifne          97
69: new           #21
72: dup
73: invokespecial #22
76: ldc           #23
78: invokevirtual #24
81: aload_3
82: invokevirtual #19
85: invokevirtual #25
88: invokevirtual #24
91: invokevirtual #26
94: invokestatic  #17
97: new           #21
100: dup
101: invokespecial #22
104: ldc           #27
106: invokevirtual #24
109: iload_2
110: invokevirtual #40
113: ldc           #29
115: invokevirtual #24
118: ldc           #41
120: invokevirtual #40
123: ldc           #27
125: invokevirtual #24
128: invokevirtual #26
131: iload_2
132: ldc           #41
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #32
145: return
Exception table:
from    to  target type
39    55    58   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 50
End line: 60
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.probability(100.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.941866060050443E-159d + "'", double8 == 3.941866060050443E-159d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #42
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #10
53: invokevirtual #44
56: dstore        6
58: new           #21
61: dup
62: invokespecial #22
65: ldc           #27
67: invokevirtual #24
70: dload_2
71: invokevirtual #28
74: ldc           #29
76: invokevirtual #24
79: ldc2_w        #30
82: invokevirtual #28
85: ldc           #27
87: invokevirtual #24
90: invokevirtual #26
93: dload_2
94: ldc2_w        #30
97: dcmpl
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #32
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload         4
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #45
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload         4
147: ldc2_w        #45
150: dcmpl
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #32
162: new           #21
165: dup
166: invokespecial #22
169: ldc           #27
171: invokevirtual #24
174: dload         6
176: invokevirtual #28
179: ldc           #29
181: invokevirtual #24
184: ldc2_w        #47
187: invokevirtual #28
190: ldc           #27
192: invokevirtual #24
195: invokevirtual #26
198: dload         6
200: ldc2_w        #47
203: dcmpl
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #32
215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 63
End line: 73
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.0d, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #49
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: bipush        52
31: invokespecial #50
34: astore_1
35: ldc           #51
37: invokestatic  #17
40: goto          44
43: astore_1
44: return
Exception table:
from    to  target type
24    40    43   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 76
End line: 94
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        // The following exception was thrown during execution in test generation
        try {
            double double9 = poissonDistributionImpl1.cumulativeProbability(10.0d, (double) (byte) 1);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #53
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: dconst_0
42: ldc2_w        #55
45: invokevirtual #12
48: dstore        4
50: aload_1
51: ldc2_w        #13
54: dconst_1
55: invokevirtual #12
58: dstore        6
60: ldc           #16
62: invokestatic  #17
65: goto          110
68: astore        6
70: aload         6
72: invokevirtual #19
75: invokevirtual #20
78: ifne          110
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #23
90: invokevirtual #24
93: aload         6
95: invokevirtual #19
98: invokevirtual #25
101: invokevirtual #24
104: invokevirtual #26
107: invokestatic  #17
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #27
119: invokevirtual #24
122: dload_2
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #47
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload_2
146: ldc2_w        #47
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: new           #21
164: dup
165: invokespecial #22
168: ldc           #27
170: invokevirtual #24
173: dload         4
175: invokevirtual #28
178: ldc           #29
180: invokevirtual #24
183: dconst_1
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         4
197: dconst_1
198: dcmpl
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #32
210: return
Exception table:
from    to  target type
50    65    68   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 97
End line: 108
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl2.cumulativeProbability((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 100");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #10
31: iconst_0
32: invokespecial #50
35: astore_1
36: aload_1
37: iconst_0
38: invokevirtual #43
41: dstore_2
42: ldc           #58
44: invokestatic  #17
47: goto          51
50: astore_2
51: return
Exception table:
from    to  target type
36    47    50   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 111
End line: 121
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #60
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: invokevirtual #61
53: istore        6
55: new           #21
58: dup
59: invokespecial #22
62: ldc           #27
64: invokevirtual #24
67: dload_2
68: invokevirtual #28
71: ldc           #29
73: invokevirtual #24
76: ldc2_w        #30
79: invokevirtual #28
82: ldc           #27
84: invokevirtual #24
87: invokevirtual #26
90: dload_2
91: ldc2_w        #30
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: dload         4
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: ldc2_w        #45
131: invokevirtual #28
134: ldc           #27
136: invokevirtual #24
139: invokevirtual #26
142: dload         4
144: ldc2_w        #45
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 124
End line: 146
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        // The following exception was thrown during execution in test generation
        try {
            int int12 = poissonDistributionImpl1.inverseCumulativeProbability((-0.10342451229184121d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #62
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: ldc2_w        #67
71: invokevirtual #15
74: istore        10
76: ldc           #16
78: invokestatic  #17
81: goto          126
84: astore        10
86: aload         10
88: invokevirtual #19
91: invokevirtual #20
94: ifne          126
97: new           #21
100: dup
101: invokespecial #22
104: ldc           #23
106: invokevirtual #24
109: aload         10
111: invokevirtual #19
114: invokevirtual #25
117: invokevirtual #24
120: invokevirtual #26
123: invokestatic  #17
126: new           #21
129: dup
130: invokespecial #22
133: ldc           #27
135: invokevirtual #24
138: dload_2
139: invokevirtual #28
142: ldc           #29
144: invokevirtual #24
147: ldc2_w        #47
150: invokevirtual #28
153: ldc           #27
155: invokevirtual #24
158: invokevirtual #26
161: dload_2
162: ldc2_w        #47
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         4
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: dconst_1
200: invokevirtual #28
203: ldc           #27
205: invokevirtual #24
208: invokevirtual #26
211: dload         4
213: dconst_1
214: dcmpl
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #32
226: new           #21
229: dup
230: invokespecial #22
233: ldc           #27
235: invokevirtual #24
238: dload         6
240: invokevirtual #28
243: ldc           #29
245: invokevirtual #24
248: ldc2_w        #69
251: invokevirtual #28
254: ldc           #27
256: invokevirtual #24
259: invokevirtual #26
262: dload         6
264: ldc2_w        #69
267: dcmpl
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: dload         8
293: invokevirtual #28
296: ldc           #29
298: invokevirtual #24
301: dconst_0
302: invokevirtual #28
305: ldc           #27
307: invokevirtual #24
310: invokevirtual #26
313: dload         8
315: dconst_0
316: dcmpl
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #32
328: return
Exception table:
from    to  target type
67    81    84   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 149
End line: 169
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        double double6 = randomDataImpl4.nextT(5.656854249492381d);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = randomDataImpl4.nextHypergeometric((int) (short) 10, (int) (byte) 0, (int) 'a');
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.4356592083234563d + "'", double6 == 0.4356592083234563d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #71
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: getfield      #72
44: astore        4
46: aload         4
48: ldc2_w        #73
51: invokevirtual #75
54: dstore        5
56: aload         4
58: bipush        10
60: iconst_0
61: bipush        97
63: invokevirtual #76
66: istore        7
68: ldc           #16
70: invokestatic  #17
73: goto          118
76: astore        7
78: aload         7
80: invokevirtual #19
83: invokevirtual #20
86: ifne          118
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #23
98: invokevirtual #24
101: aload         7
103: invokevirtual #19
106: invokevirtual #25
109: invokevirtual #24
112: invokevirtual #26
115: invokestatic  #17
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload_2
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #47
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload_2
154: ldc2_w        #47
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #32
169: aload         4
171: invokestatic  #77
174: return
Exception table:
from    to  target type
56    73    76   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 172
End line: 182
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #78
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_0
51: invokevirtual #43
54: dstore        6
56: new           #21
59: dup
60: invokespecial #22
63: ldc           #27
65: invokevirtual #24
68: dload_2
69: invokevirtual #28
72: ldc           #29
74: invokevirtual #24
77: ldc2_w        #30
80: invokevirtual #28
83: ldc           #27
85: invokevirtual #24
88: invokevirtual #26
91: dload_2
92: ldc2_w        #30
95: dcmpl
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #32
107: new           #21
110: dup
111: invokespecial #22
114: ldc           #27
116: invokevirtual #24
119: dload         4
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #45
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload         4
145: ldc2_w        #45
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: new           #21
163: dup
164: invokespecial #22
167: ldc           #27
169: invokevirtual #24
172: dload         6
174: invokevirtual #28
177: ldc           #29
179: invokevirtual #24
182: ldc2_w        #45
185: invokevirtual #28
188: ldc           #27
190: invokevirtual #24
193: invokevirtual #26
196: dload         6
198: ldc2_w        #45
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 185
End line: 208
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = randomDataImpl13.nextSecureLong(2147483647L, (long) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 2,147,483,647 is larger than, or equal to, the maximum (97): lower bound (2,147,483,647) must be strictly less than upper bound (97)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #79
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_m1
51: invokevirtual #63
54: dstore        6
56: aload_1
57: bipush        52
59: invokevirtual #43
62: dstore        8
64: aload_1
65: ldc2_w        #10
68: invokevirtual #44
71: dstore        10
73: aload_1
74: getfield      #72
77: astore        12
79: aload         12
81: ldc2_w        #80
84: ldc2_w        #82
87: invokevirtual #84
90: lstore        13
92: ldc           #85
94: invokestatic  #17
97: goto          102
100: astore        13
102: new           #21
105: dup
106: invokespecial #22
109: ldc           #27
111: invokevirtual #24
114: dload_2
115: invokevirtual #28
118: ldc           #29
120: invokevirtual #24
123: ldc2_w        #30
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload_2
138: ldc2_w        #30
141: dcmpl
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #32
153: new           #21
156: dup
157: invokespecial #22
160: ldc           #27
162: invokevirtual #24
165: dload         4
167: invokevirtual #28
170: ldc           #29
172: invokevirtual #24
175: ldc2_w        #45
178: invokevirtual #28
181: ldc           #27
183: invokevirtual #24
186: invokevirtual #26
189: dload         4
191: ldc2_w        #45
194: dcmpl
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #32
206: new           #21
209: dup
210: invokespecial #22
213: ldc           #27
215: invokevirtual #24
218: dload         6
220: invokevirtual #28
223: ldc           #29
225: invokevirtual #24
228: ldc2_w        #87
231: invokevirtual #28
234: ldc           #27
236: invokevirtual #24
239: invokevirtual #26
242: dload         6
244: ldc2_w        #87
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #32
259: new           #21
262: dup
263: invokespecial #22
266: ldc           #27
268: invokevirtual #24
271: dload         8
273: invokevirtual #28
276: ldc           #29
278: invokevirtual #24
281: dconst_1
282: invokevirtual #28
285: ldc           #27
287: invokevirtual #24
290: invokevirtual #26
293: dload         8
295: dconst_1
296: dcmpl
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #32
308: new           #21
311: dup
312: invokespecial #22
315: ldc           #27
317: invokevirtual #24
320: dload         10
322: invokevirtual #28
325: ldc           #29
327: invokevirtual #24
330: ldc2_w        #47
333: invokevirtual #28
336: ldc           #27
338: invokevirtual #24
341: invokevirtual #26
344: dload         10
346: ldc2_w        #47
349: dcmpl
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: aload         12
363: invokestatic  #77
366: return
Exception table:
from    to  target type
79    97   100   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 211
End line: 228
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        double double6 = randomDataImpl4.nextT(5.656854249492381d);
        // The following exception was thrown during execution in test generation
        try {
            long long8 = randomDataImpl4.nextPoisson((-0.04336495540712863d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.043 is smaller than, or equal to, the minimum (0): mean (-0.043)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5119442819698615d + "'", double6 == 0.5119442819698615d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #89
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: getfield      #72
44: astore        4
46: aload         4
48: ldc2_w        #73
51: invokevirtual #75
54: dstore        5
56: aload         4
58: ldc2_w        #90
61: invokevirtual #92
64: lstore        7
66: ldc           #93
68: invokestatic  #17
71: goto          76
74: astore        7
76: new           #21
79: dup
80: invokespecial #22
83: ldc           #27
85: invokevirtual #24
88: dload_2
89: invokevirtual #28
92: ldc           #29
94: invokevirtual #24
97: ldc2_w        #47
100: invokevirtual #28
103: ldc           #27
105: invokevirtual #24
108: invokevirtual #26
111: dload_2
112: ldc2_w        #47
115: dcmpl
116: ifne          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #32
127: aload         4
129: invokestatic  #77
132: return
Exception table:
from    to  target type
56    71    74   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 231
End line: 241
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-2.5459021783676956d), (-1.207854600801523d), (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -2.546 is smaller than, or equal to, the minimum (0): mean (-2.546)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #94
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #95
31: ldc2_w        #65
34: bipush        97
36: invokespecial #97
39: astore_1
40: ldc           #98
42: invokestatic  #17
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
24    45    48   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 244
End line: 260
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        double double13 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #99
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: ldc2_w        #100
71: invokevirtual #34
74: istore        10
76: aload_1
77: invokevirtual #102
80: dstore        11
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #27
91: invokevirtual #24
94: dload_2
95: invokevirtual #28
98: ldc           #29
100: invokevirtual #24
103: ldc2_w        #47
106: invokevirtual #28
109: ldc           #27
111: invokevirtual #24
114: invokevirtual #26
117: dload_2
118: ldc2_w        #47
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #32
133: new           #21
136: dup
137: invokespecial #22
140: ldc           #27
142: invokevirtual #24
145: dload         4
147: invokevirtual #28
150: ldc           #29
152: invokevirtual #24
155: dconst_1
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload         4
169: dconst_1
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: dload         6
196: invokevirtual #28
199: ldc           #29
201: invokevirtual #24
204: ldc2_w        #69
207: invokevirtual #28
210: ldc           #27
212: invokevirtual #24
215: invokevirtual #26
218: dload         6
220: ldc2_w        #69
223: dcmpl
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #32
235: new           #21
238: dup
239: invokespecial #22
242: ldc           #27
244: invokevirtual #24
247: dload         8
249: invokevirtual #28
252: ldc           #29
254: invokevirtual #24
257: dconst_0
258: invokevirtual #28
261: ldc           #27
263: invokevirtual #24
266: invokevirtual #26
269: dload         8
271: dconst_0
272: dcmpl
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #32
284: new           #21
287: dup
288: invokespecial #22
291: ldc           #27
293: invokevirtual #24
296: iload         10
298: invokevirtual #40
301: ldc           #29
303: invokevirtual #24
306: ldc           #41
308: invokevirtual #40
311: ldc           #27
313: invokevirtual #24
316: invokevirtual #26
319: iload         10
321: ldc           #41
323: if_icmpne     330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #32
334: new           #21
337: dup
338: invokespecial #22
341: ldc           #27
343: invokevirtual #24
346: dload         11
348: invokevirtual #28
351: ldc           #29
353: invokevirtual #24
356: dconst_1
357: invokevirtual #28
360: ldc           #27
362: invokevirtual #24
365: invokevirtual #26
368: dload         11
370: dconst_1
371: dcmpl
372: ifne          379
375: iconst_1
376: goto          380
379: iconst_0
380: invokestatic  #32
383: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 263
End line: 283
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = poissonDistributionImpl1.inverseCumulativeProbability(1.0190743989225088d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #103
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #104
62: invokevirtual #15
65: istore        8
67: ldc           #16
69: invokestatic  #17
72: goto          117
75: astore        8
77: aload         8
79: invokevirtual #19
82: invokevirtual #20
85: ifne          117
88: new           #21
91: dup
92: invokespecial #22
95: ldc           #23
97: invokevirtual #24
100: aload         8
102: invokevirtual #19
105: invokevirtual #25
108: invokevirtual #24
111: invokevirtual #26
114: invokestatic  #17
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload_2
130: invokevirtual #28
133: ldc           #29
135: invokevirtual #24
138: ldc2_w        #47
141: invokevirtual #28
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: dload_2
153: ldc2_w        #47
156: dcmpl
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #32
168: new           #21
171: dup
172: invokespecial #22
175: ldc           #27
177: invokevirtual #24
180: dload         4
182: invokevirtual #28
185: ldc           #29
187: invokevirtual #24
190: dconst_1
191: invokevirtual #28
194: ldc           #27
196: invokevirtual #24
199: invokevirtual #26
202: dload         4
204: dconst_1
205: dcmpl
206: ifne          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #32
217: new           #21
220: dup
221: invokespecial #22
224: ldc           #27
226: invokevirtual #24
229: dload         6
231: invokevirtual #28
234: ldc           #29
236: invokevirtual #24
239: ldc2_w        #69
242: invokevirtual #28
245: ldc           #27
247: invokevirtual #24
250: invokevirtual #26
253: dload         6
255: ldc2_w        #69
258: dcmpl
259: ifne          266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #32
270: return
Exception table:
from    to  target type
58    72    75   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 286
End line: 315
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = randomDataImpl5.nextBinomial((int) (byte) -1, (double) 'a');
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 612.1683136863576d + "'", double7 == 612.1683136863576d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #106
19: aastore
20: invokevirtual #7
23: pop
24: new           #107
27: dup
28: invokespecial #108
31: astore_1
32: aload_1
33: ldc2_w        #10
36: invokestatic  #109
39: invokevirtual #110
42: dstore_2
43: aload_1
44: dconst_1
45: invokevirtual #111
48: dstore        4
50: aload_1
51: getfield      #112
54: astore        6
56: aload         6
58: ldc2_w        #113
61: invokevirtual #115
64: dstore        7
66: new           #8
69: dup
70: dconst_1
71: invokespecial #9
74: astore        9
76: aload         9
78: bipush        100
80: invokevirtual #54
83: dstore        10
85: aload         9
87: dconst_0
88: ldc2_w        #55
91: invokevirtual #12
94: dstore        12
96: aload         6
98: aload         9
100: invokevirtual #116
103: istore        14
105: aload         6
107: iconst_m1
108: ldc2_w        #55
111: invokevirtual #117
114: istore        15
116: ldc           #16
118: invokestatic  #17
121: goto          166
124: astore        15
126: aload         15
128: invokevirtual #19
131: invokevirtual #20
134: ifne          166
137: new           #21
140: dup
141: invokespecial #22
144: ldc           #23
146: invokevirtual #24
149: aload         15
151: invokevirtual #19
154: invokevirtual #25
157: invokevirtual #24
160: invokevirtual #26
163: invokestatic  #17
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: dload_2
179: invokevirtual #28
182: ldc           #29
184: invokevirtual #24
187: dconst_0
188: invokevirtual #28
191: ldc           #27
193: invokevirtual #24
196: invokevirtual #26
199: dload_2
200: dconst_0
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: new           #21
216: dup
217: invokespecial #22
220: ldc           #27
222: invokevirtual #24
225: dload         4
227: invokevirtual #28
230: ldc           #29
232: invokevirtual #24
235: ldc2_w        #118
238: invokevirtual #28
241: ldc           #27
243: invokevirtual #24
246: invokevirtual #26
249: dload         4
251: ldc2_w        #118
254: dcmpl
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #32
266: aload         6
268: invokestatic  #77
271: new           #21
274: dup
275: invokespecial #22
278: ldc           #27
280: invokevirtual #24
283: dload         10
285: invokevirtual #28
288: ldc           #29
290: invokevirtual #24
293: ldc2_w        #47
296: invokevirtual #28
299: ldc           #27
301: invokevirtual #24
304: invokevirtual #26
307: dload         10
309: ldc2_w        #47
312: dcmpl
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #32
324: new           #21
327: dup
328: invokespecial #22
331: ldc           #27
333: invokevirtual #24
336: dload         12
338: invokevirtual #28
341: ldc           #29
343: invokevirtual #24
346: dconst_1
347: invokevirtual #28
350: ldc           #27
352: invokevirtual #24
355: invokevirtual #26
358: dload         12
360: dconst_1
361: dcmpl
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #32
373: return
Exception table:
from    to  target type
105   121   124   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 318
End line: 333
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = randomDataImpl4.nextLong((long) (byte) 1, (long) (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 1 is larger than, or equal to, the maximum (-1): lower bound (1) must be strictly less than upper bound (-1)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #120
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: getfield      #72
44: astore        4
46: aload         4
48: lconst_1
49: ldc2_w        #121
52: invokevirtual #123
55: lstore        5
57: ldc           #124
59: invokestatic  #17
62: goto          67
65: astore        5
67: new           #21
70: dup
71: invokespecial #22
74: ldc           #27
76: invokevirtual #24
79: dload_2
80: invokevirtual #28
83: ldc           #29
85: invokevirtual #24
88: ldc2_w        #47
91: invokevirtual #28
94: ldc           #27
96: invokevirtual #24
99: invokevirtual #26
102: dload_2
103: ldc2_w        #47
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #32
118: aload         4
120: invokestatic  #77
123: return
Exception table:
from    to  target type
46    62    65   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 336
End line: 362
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        double double12 = poissonDistributionImpl1.probability(100);
        int int14 = poissonDistributionImpl1.inverseCumulativeProbability(0.06680720126885803d);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = poissonDistributionImpl1.inverseCumulativeProbability((double) (byte) 100);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #125
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: bipush        100
70: invokevirtual #54
73: dstore        10
75: aload_1
76: ldc2_w        #87
79: invokevirtual #15
82: istore        12
84: aload_1
85: ldc2_w        #10
88: invokevirtual #15
91: istore        13
93: ldc           #16
95: invokestatic  #17
98: goto          143
101: astore        13
103: aload         13
105: invokevirtual #19
108: invokevirtual #20
111: ifne          143
114: new           #21
117: dup
118: invokespecial #22
121: ldc           #23
123: invokevirtual #24
126: aload         13
128: invokevirtual #19
131: invokevirtual #25
134: invokevirtual #24
137: invokevirtual #26
140: invokestatic  #17
143: new           #21
146: dup
147: invokespecial #22
150: ldc           #27
152: invokevirtual #24
155: dload_2
156: invokevirtual #28
159: ldc           #29
161: invokevirtual #24
164: ldc2_w        #47
167: invokevirtual #28
170: ldc           #27
172: invokevirtual #24
175: invokevirtual #26
178: dload_2
179: ldc2_w        #47
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         4
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: dconst_1
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         4
230: dconst_1
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: dload         6
257: invokevirtual #28
260: ldc           #29
262: invokevirtual #24
265: ldc2_w        #69
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         6
281: ldc2_w        #69
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: dload         8
310: invokevirtual #28
313: ldc           #29
315: invokevirtual #24
318: dconst_0
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         8
332: dconst_0
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: new           #21
348: dup
349: invokespecial #22
352: ldc           #27
354: invokevirtual #24
357: dload         10
359: invokevirtual #28
362: ldc           #29
364: invokevirtual #24
367: ldc2_w        #47
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         10
383: ldc2_w        #47
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #32
398: new           #21
401: dup
402: invokespecial #22
405: ldc           #27
407: invokevirtual #24
410: iload         12
412: invokevirtual #40
415: ldc           #29
417: invokevirtual #24
420: iconst_m1
421: invokevirtual #40
424: ldc           #27
426: invokevirtual #24
429: invokevirtual #26
432: iload         12
434: iconst_m1
435: if_icmpne     442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #32
446: return
Exception table:
from    to  target type
84    98   101   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 365
End line: 375
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.0d, 0.4925042174359671d, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_0
29: ldc2_w        #127
32: iconst_1
33: invokespecial #97
36: astore_1
37: ldc           #51
39: invokestatic  #17
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
24    42    45   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 378
End line: 388
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-0.7853981633974483d), (-1.5574077246549023d), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.785 is smaller than, or equal to, the minimum (0): mean (-0.785)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #129
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #130
31: ldc2_w        #38
34: bipush        100
36: invokespecial #97
39: astore_1
40: ldc           #132
42: invokestatic  #17
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
24    45    48   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 391
End line: 415
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        double double12 = poissonDistributionImpl1.probability(100);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = poissonDistributionImpl1.cumulativeProbability(1.5551841930150851d, 1.0190743989225088d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #133
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: bipush        100
70: invokevirtual #54
73: dstore        10
75: aload_1
76: ldc2_w        #134
79: ldc2_w        #104
82: invokevirtual #12
85: dstore        12
87: ldc           #16
89: invokestatic  #17
92: goto          137
95: astore        12
97: aload         12
99: invokevirtual #19
102: invokevirtual #20
105: ifne          137
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #23
117: invokevirtual #24
120: aload         12
122: invokevirtual #19
125: invokevirtual #25
128: invokevirtual #24
131: invokevirtual #26
134: invokestatic  #17
137: new           #21
140: dup
141: invokespecial #22
144: ldc           #27
146: invokevirtual #24
149: dload_2
150: invokevirtual #28
153: ldc           #29
155: invokevirtual #24
158: ldc2_w        #47
161: invokevirtual #28
164: ldc           #27
166: invokevirtual #24
169: invokevirtual #26
172: dload_2
173: ldc2_w        #47
176: dcmpl
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #32
188: new           #21
191: dup
192: invokespecial #22
195: ldc           #27
197: invokevirtual #24
200: dload         4
202: invokevirtual #28
205: ldc           #29
207: invokevirtual #24
210: dconst_1
211: invokevirtual #28
214: ldc           #27
216: invokevirtual #24
219: invokevirtual #26
222: dload         4
224: dconst_1
225: dcmpl
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #32
237: new           #21
240: dup
241: invokespecial #22
244: ldc           #27
246: invokevirtual #24
249: dload         6
251: invokevirtual #28
254: ldc           #29
256: invokevirtual #24
259: ldc2_w        #69
262: invokevirtual #28
265: ldc           #27
267: invokevirtual #24
270: invokevirtual #26
273: dload         6
275: ldc2_w        #69
278: dcmpl
279: ifne          286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #32
290: new           #21
293: dup
294: invokespecial #22
297: ldc           #27
299: invokevirtual #24
302: dload         8
304: invokevirtual #28
307: ldc           #29
309: invokevirtual #24
312: dconst_0
313: invokevirtual #28
316: ldc           #27
318: invokevirtual #24
321: invokevirtual #26
324: dload         8
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #32
339: new           #21
342: dup
343: invokespecial #22
346: ldc           #27
348: invokevirtual #24
351: dload         10
353: invokevirtual #28
356: ldc           #29
358: invokevirtual #24
361: ldc2_w        #47
364: invokevirtual #28
367: ldc           #27
369: invokevirtual #24
372: invokevirtual #26
375: dload         10
377: ldc2_w        #47
380: dcmpl
381: ifne          388
384: iconst_1
385: goto          389
388: iconst_0
389: invokestatic  #32
392: return
Exception table:
from    to  target type
75    92    95   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 418
End line: 432
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        int int12 = poissonDistributionImpl1.getDomainLowerBound(2.164067214887496d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #136
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_m1
51: invokevirtual #63
54: dstore        6
56: aload_1
57: bipush        52
59: invokevirtual #43
62: dstore        8
64: aload_1
65: ldc2_w        #137
68: invokevirtual #139
71: istore        10
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #27
82: invokevirtual #24
85: dload_2
86: invokevirtual #28
89: ldc           #29
91: invokevirtual #24
94: ldc2_w        #30
97: invokevirtual #28
100: ldc           #27
102: invokevirtual #24
105: invokevirtual #26
108: dload_2
109: ldc2_w        #30
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #45
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #45
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: ldc2_w        #87
202: invokevirtual #28
205: ldc           #27
207: invokevirtual #24
210: invokevirtual #26
213: dload         6
215: ldc2_w        #87
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: dload         8
244: invokevirtual #28
247: ldc           #29
249: invokevirtual #24
252: dconst_1
253: invokevirtual #28
256: ldc           #27
258: invokevirtual #24
261: invokevirtual #26
264: dload         8
266: dconst_1
267: dcmpl
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: iload         10
293: invokevirtual #40
296: ldc           #29
298: invokevirtual #24
301: iconst_0
302: invokevirtual #40
305: ldc           #27
307: invokevirtual #24
310: invokevirtual #26
313: iload         10
315: ifne          322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #32
326: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 435
End line: 459
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = poissonDistributionImpl1.inverseCumulativeProbability(1.7976931348623157E308d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_m1
51: invokevirtual #63
54: dstore        6
56: aload_1
57: dconst_0
58: invokevirtual #141
61: dstore        8
63: aload_1
64: ldc2_w        #142
67: invokevirtual #139
70: istore        10
72: aload_1
73: ldc2_w        #144
76: invokevirtual #15
79: istore        11
81: ldc           #16
83: invokestatic  #17
86: goto          131
89: astore        11
91: aload         11
93: invokevirtual #19
96: invokevirtual #20
99: ifne          131
102: new           #21
105: dup
106: invokespecial #22
109: ldc           #23
111: invokevirtual #24
114: aload         11
116: invokevirtual #19
119: invokevirtual #25
122: invokevirtual #24
125: invokevirtual #26
128: invokestatic  #17
131: new           #21
134: dup
135: invokespecial #22
138: ldc           #27
140: invokevirtual #24
143: dload_2
144: invokevirtual #28
147: ldc           #29
149: invokevirtual #24
152: ldc2_w        #30
155: invokevirtual #28
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: dload_2
167: ldc2_w        #30
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: dload         4
196: invokevirtual #28
199: ldc           #29
201: invokevirtual #24
204: ldc2_w        #45
207: invokevirtual #28
210: ldc           #27
212: invokevirtual #24
215: invokevirtual #26
218: dload         4
220: ldc2_w        #45
223: dcmpl
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #32
235: new           #21
238: dup
239: invokespecial #22
242: ldc           #27
244: invokevirtual #24
247: dload         6
249: invokevirtual #28
252: ldc           #29
254: invokevirtual #24
257: ldc2_w        #87
260: invokevirtual #28
263: ldc           #27
265: invokevirtual #24
268: invokevirtual #26
271: dload         6
273: ldc2_w        #87
276: dcmpl
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #32
288: new           #21
291: dup
292: invokespecial #22
295: ldc           #27
297: invokevirtual #24
300: dload         8
302: invokevirtual #28
305: ldc           #29
307: invokevirtual #24
310: ldc2_w        #45
313: invokevirtual #28
316: ldc           #27
318: invokevirtual #24
321: invokevirtual #26
324: dload         8
326: ldc2_w        #45
329: dcmpl
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #32
341: new           #21
344: dup
345: invokespecial #22
348: ldc           #27
350: invokevirtual #24
353: iload         10
355: invokevirtual #40
358: ldc           #29
360: invokevirtual #24
363: iconst_0
364: invokevirtual #40
367: ldc           #27
369: invokevirtual #24
372: invokevirtual #26
375: iload         10
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #32
388: return
Exception table:
from    to  target type
72    86    89   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 462
End line: 484
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = poissonDistributionImpl1.cumulativeProbability((int) (byte) 10, 0);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #146
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_m1
51: invokevirtual #63
54: dstore        6
56: aload_1
57: dconst_0
58: invokevirtual #141
61: dstore        8
63: aload_1
64: bipush        10
66: iconst_0
67: invokevirtual #64
70: dstore        10
72: ldc           #16
74: invokestatic  #17
77: goto          122
80: astore        10
82: aload         10
84: invokevirtual #19
87: invokevirtual #20
90: ifne          122
93: new           #21
96: dup
97: invokespecial #22
100: ldc           #23
102: invokevirtual #24
105: aload         10
107: invokevirtual #19
110: invokevirtual #25
113: invokevirtual #24
116: invokevirtual #26
119: invokestatic  #17
122: new           #21
125: dup
126: invokespecial #22
129: ldc           #27
131: invokevirtual #24
134: dload_2
135: invokevirtual #28
138: ldc           #29
140: invokevirtual #24
143: ldc2_w        #30
146: invokevirtual #28
149: ldc           #27
151: invokevirtual #24
154: invokevirtual #26
157: dload_2
158: ldc2_w        #30
161: dcmpl
162: ifne          169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #32
173: new           #21
176: dup
177: invokespecial #22
180: ldc           #27
182: invokevirtual #24
185: dload         4
187: invokevirtual #28
190: ldc           #29
192: invokevirtual #24
195: ldc2_w        #45
198: invokevirtual #28
201: ldc           #27
203: invokevirtual #24
206: invokevirtual #26
209: dload         4
211: ldc2_w        #45
214: dcmpl
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #32
226: new           #21
229: dup
230: invokespecial #22
233: ldc           #27
235: invokevirtual #24
238: dload         6
240: invokevirtual #28
243: ldc           #29
245: invokevirtual #24
248: ldc2_w        #87
251: invokevirtual #28
254: ldc           #27
256: invokevirtual #24
259: invokevirtual #26
262: dload         6
264: ldc2_w        #87
267: dcmpl
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: dload         8
293: invokevirtual #28
296: ldc           #29
298: invokevirtual #24
301: ldc2_w        #45
304: invokevirtual #28
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: dload         8
317: ldc2_w        #45
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: return
Exception table:
from    to  target type
63    77    80   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 487
End line: 501
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl1.cumulativeProbability(0.0021073229577450916d, (-0.5872139151569291d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #10
31: invokespecial #9
34: astore_1
35: aload_1
36: ldc2_w        #148
39: ldc2_w        #150
42: invokevirtual #12
45: dstore_2
46: ldc           #16
48: invokestatic  #17
51: goto          93
54: astore_2
55: aload_2
56: invokevirtual #19
59: invokevirtual #20
62: ifne          93
65: new           #21
68: dup
69: invokespecial #22
72: ldc           #23
74: invokevirtual #24
77: aload_2
78: invokevirtual #19
81: invokevirtual #25
84: invokevirtual #24
87: invokevirtual #26
90: invokestatic  #17
93: return
Exception table:
from    to  target type
35    51    54   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 504
End line: 522
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        int int15 = poissonDistributionImpl1.getDomainUpperBound(2.5722962688314924E-6d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_m1
51: invokevirtual #63
54: dstore        6
56: aload_1
57: bipush        52
59: invokevirtual #43
62: dstore        8
64: aload_1
65: ldc2_w        #10
68: invokevirtual #44
71: dstore        10
73: aload_1
74: getfield      #72
77: astore        12
79: aload_1
80: ldc2_w        #153
83: invokevirtual #34
86: istore        13
88: new           #21
91: dup
92: invokespecial #22
95: ldc           #27
97: invokevirtual #24
100: dload_2
101: invokevirtual #28
104: ldc           #29
106: invokevirtual #24
109: ldc2_w        #30
112: invokevirtual #28
115: ldc           #27
117: invokevirtual #24
120: invokevirtual #26
123: dload_2
124: ldc2_w        #30
127: dcmpl
128: ifne          135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #32
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload         4
153: invokevirtual #28
156: ldc           #29
158: invokevirtual #24
161: ldc2_w        #45
164: invokevirtual #28
167: ldc           #27
169: invokevirtual #24
172: invokevirtual #26
175: dload         4
177: ldc2_w        #45
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload         6
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: ldc2_w        #87
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         6
230: ldc2_w        #87
233: dcmpl
234: ifne          241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #32
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: dload         8
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: dconst_1
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         8
281: dconst_1
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         10
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: ldc2_w        #47
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         10
332: ldc2_w        #47
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: aload         12
349: invokestatic  #77
352: new           #21
355: dup
356: invokespecial #22
359: ldc           #27
361: invokevirtual #24
364: iload         13
366: invokevirtual #40
369: ldc           #29
371: invokevirtual #24
374: ldc           #41
376: invokevirtual #40
379: ldc           #27
381: invokevirtual #24
384: invokevirtual #26
387: iload         13
389: ldc           #41
391: if_icmpne     398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #32
402: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 525
End line: 541
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        int int13 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: ldc2_w        #100
71: invokevirtual #34
74: istore        10
76: aload_1
77: invokevirtual #61
80: istore        11
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #27
91: invokevirtual #24
94: dload_2
95: invokevirtual #28
98: ldc           #29
100: invokevirtual #24
103: ldc2_w        #47
106: invokevirtual #28
109: ldc           #27
111: invokevirtual #24
114: invokevirtual #26
117: dload_2
118: ldc2_w        #47
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #32
133: new           #21
136: dup
137: invokespecial #22
140: ldc           #27
142: invokevirtual #24
145: dload         4
147: invokevirtual #28
150: ldc           #29
152: invokevirtual #24
155: dconst_1
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload         4
169: dconst_1
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: dload         6
196: invokevirtual #28
199: ldc           #29
201: invokevirtual #24
204: ldc2_w        #69
207: invokevirtual #28
210: ldc           #27
212: invokevirtual #24
215: invokevirtual #26
218: dload         6
220: ldc2_w        #69
223: dcmpl
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #32
235: new           #21
238: dup
239: invokespecial #22
242: ldc           #27
244: invokevirtual #24
247: dload         8
249: invokevirtual #28
252: ldc           #29
254: invokevirtual #24
257: dconst_0
258: invokevirtual #28
261: ldc           #27
263: invokevirtual #24
266: invokevirtual #26
269: dload         8
271: dconst_0
272: dcmpl
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #32
284: new           #21
287: dup
288: invokespecial #22
291: ldc           #27
293: invokevirtual #24
296: iload         10
298: invokevirtual #40
301: ldc           #29
303: invokevirtual #24
306: ldc           #41
308: invokevirtual #40
311: ldc           #27
313: invokevirtual #24
316: invokevirtual #26
319: iload         10
321: ldc           #41
323: if_icmpne     330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #32
334: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 544
End line: 563
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        poissonDistributionImpl1.reseedRandomGenerator(0L);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = poissonDistributionImpl1.cumulativeProbability((-0.05276668818524178d), (-0.5872139151569291d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: dconst_0
42: ldc2_w        #55
45: invokevirtual #12
48: dstore        4
50: aload_1
51: lconst_0
52: invokevirtual #157
55: aload_1
56: ldc2_w        #158
59: ldc2_w        #150
62: invokevirtual #12
65: dstore        6
67: ldc           #16
69: invokestatic  #17
72: goto          117
75: astore        6
77: aload         6
79: invokevirtual #19
82: invokevirtual #20
85: ifne          117
88: new           #21
91: dup
92: invokespecial #22
95: ldc           #23
97: invokevirtual #24
100: aload         6
102: invokevirtual #19
105: invokevirtual #25
108: invokevirtual #24
111: invokevirtual #26
114: invokestatic  #17
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload_2
130: invokevirtual #28
133: ldc           #29
135: invokevirtual #24
138: ldc2_w        #47
141: invokevirtual #28
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: dload_2
153: ldc2_w        #47
156: dcmpl
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #32
168: new           #21
171: dup
172: invokespecial #22
175: ldc           #27
177: invokevirtual #24
180: dload         4
182: invokevirtual #28
185: ldc           #29
187: invokevirtual #24
190: dconst_1
191: invokevirtual #28
194: ldc           #27
196: invokevirtual #24
199: invokevirtual #26
202: dload         4
204: dconst_1
205: dcmpl
206: ifne          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #32
217: return
Exception table:
from    to  target type
55    72    75   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 566
End line: 582
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl2.cumulativeProbability((double) 42L, (-0.18404532627671905d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #10
31: iconst_0
32: invokespecial #50
35: astore_1
36: aload_1
37: iconst_0
38: invokevirtual #63
41: dstore_2
42: aload_1
43: ldc2_w        #161
46: ldc2_w        #163
49: invokevirtual #12
52: dstore        4
54: ldc           #16
56: invokestatic  #17
59: goto          104
62: astore        4
64: aload         4
66: invokevirtual #19
69: invokevirtual #20
72: ifne          104
75: new           #21
78: dup
79: invokespecial #22
82: ldc           #23
84: invokevirtual #24
87: aload         4
89: invokevirtual #19
92: invokevirtual #25
95: invokevirtual #24
98: invokevirtual #26
101: invokestatic  #17
104: new           #21
107: dup
108: invokespecial #22
111: ldc           #27
113: invokevirtual #24
116: dload_2
117: invokevirtual #28
120: ldc           #29
122: invokevirtual #24
125: dconst_0
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload_2
138: dconst_0
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #32
151: return
Exception table:
from    to  target type
42    59    62   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 585
End line: 601
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double12 = poissonDistributionImpl1.probability(0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117144233d + "'", double12 == 0.36787944117144233d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #165
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: ldc2_w        #13
52: invokevirtual #34
55: istore        6
57: aload_1
58: ldc2_w        #166
61: invokevirtual #139
64: istore        7
66: aload_1
67: invokevirtual #61
70: istore        8
72: aload_1
73: dconst_0
74: invokevirtual #44
77: dstore        9
79: new           #21
82: dup
83: invokespecial #22
86: ldc           #27
88: invokevirtual #24
91: dload_2
92: invokevirtual #28
95: ldc           #29
97: invokevirtual #24
100: ldc2_w        #47
103: invokevirtual #28
106: ldc           #27
108: invokevirtual #24
111: invokevirtual #26
114: dload_2
115: ldc2_w        #47
118: dcmpl
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #32
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: dload         4
144: invokevirtual #28
147: ldc           #29
149: invokevirtual #24
152: dconst_1
153: invokevirtual #28
156: ldc           #27
158: invokevirtual #24
161: invokevirtual #26
164: dload         4
166: dconst_1
167: dcmpl
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #32
179: new           #21
182: dup
183: invokespecial #22
186: ldc           #27
188: invokevirtual #24
191: iload         6
193: invokevirtual #40
196: ldc           #29
198: invokevirtual #24
201: ldc           #41
203: invokevirtual #40
206: ldc           #27
208: invokevirtual #24
211: invokevirtual #26
214: iload         6
216: ldc           #41
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #32
229: new           #21
232: dup
233: invokespecial #22
236: ldc           #27
238: invokevirtual #24
241: iload         7
243: invokevirtual #40
246: ldc           #29
248: invokevirtual #24
251: iconst_0
252: invokevirtual #40
255: ldc           #27
257: invokevirtual #24
260: invokevirtual #26
263: iload         7
265: ifne          272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #32
276: new           #21
279: dup
280: invokespecial #22
283: ldc           #27
285: invokevirtual #24
288: dload         9
290: invokevirtual #28
293: ldc           #29
295: invokevirtual #24
298: ldc2_w        #168
301: invokevirtual #28
304: ldc           #27
306: invokevirtual #24
309: invokevirtual #26
312: dload         9
314: ldc2_w        #168
317: dcmpl
318: ifne          325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #32
329: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 604
End line: 616
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        double double6 = randomDataImpl4.nextT(5.656854249492381d);
        long long8 = randomDataImpl4.nextPoisson(4.4895039227874735E-8d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.7534689855041378d) + "'", double6 == (-0.7534689855041378d));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #170
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: getfield      #72
44: astore        4
46: aload         4
48: ldc2_w        #73
51: invokevirtual #75
54: dstore        5
56: aload         4
58: ldc2_w        #171
61: invokevirtual #92
64: lstore        7
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #47
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #47
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: aload         4
119: invokestatic  #77
122: new           #21
125: dup
126: invokespecial #22
129: ldc           #27
131: invokevirtual #24
134: lload         7
136: invokevirtual #173
139: ldc           #29
141: invokevirtual #24
144: lconst_0
145: invokevirtual #173
148: ldc           #27
150: invokevirtual #24
153: invokevirtual #26
156: lload         7
158: lconst_0
159: lcmp
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #32
171: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 619
End line: 645
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        double double14 = poissonDistributionImpl1.cumulativeProbability((double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            int int16 = poissonDistributionImpl1.inverseCumulativeProbability((-0.7534689855041378d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #174
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: iconst_m1
51: invokevirtual #63
54: dstore        6
56: aload_1
57: bipush        52
59: invokevirtual #43
62: dstore        8
64: aload_1
65: ldc2_w        #10
68: invokevirtual #44
71: dstore        10
73: aload_1
74: ldc2_w        #142
77: invokevirtual #141
80: dstore        12
82: aload_1
83: ldc2_w        #175
86: invokevirtual #15
89: istore        14
91: ldc           #16
93: invokestatic  #17
96: goto          141
99: astore        14
101: aload         14
103: invokevirtual #19
106: invokevirtual #20
109: ifne          141
112: new           #21
115: dup
116: invokespecial #22
119: ldc           #23
121: invokevirtual #24
124: aload         14
126: invokevirtual #19
129: invokevirtual #25
132: invokevirtual #24
135: invokevirtual #26
138: invokestatic  #17
141: new           #21
144: dup
145: invokespecial #22
148: ldc           #27
150: invokevirtual #24
153: dload_2
154: invokevirtual #28
157: ldc           #29
159: invokevirtual #24
162: ldc2_w        #30
165: invokevirtual #28
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: dload_2
177: ldc2_w        #30
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload         4
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: ldc2_w        #45
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         4
230: ldc2_w        #45
233: dcmpl
234: ifne          241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #32
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: dload         6
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: ldc2_w        #87
270: invokevirtual #28
273: ldc           #27
275: invokevirtual #24
278: invokevirtual #26
281: dload         6
283: ldc2_w        #87
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #32
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: dload         8
312: invokevirtual #28
315: ldc           #29
317: invokevirtual #24
320: dconst_1
321: invokevirtual #28
324: ldc           #27
326: invokevirtual #24
329: invokevirtual #26
332: dload         8
334: dconst_1
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         10
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: ldc2_w        #47
372: invokevirtual #28
375: ldc           #27
377: invokevirtual #24
380: invokevirtual #26
383: dload         10
385: ldc2_w        #47
388: dcmpl
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #32
400: new           #21
403: dup
404: invokespecial #22
407: ldc           #27
409: invokevirtual #24
412: dload         12
414: invokevirtual #28
417: ldc           #29
419: invokevirtual #24
422: dconst_0
423: invokevirtual #28
426: ldc           #27
428: invokevirtual #24
431: invokevirtual #26
434: dload         12
436: dconst_0
437: dcmpl
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #32
449: return
Exception table:
from    to  target type
82    96    99   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 648
End line: 666
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100);
        double double3 = poissonDistributionImpl1.probability(0.9999999899522336d);
        double double5 = poissonDistributionImpl1.probability((-1));
        // The following exception was thrown during execution in test generation
        try {
            double double8 = poissonDistributionImpl1.cumulativeProbability((-0.4673841036516608d), (-0.04336495540712863d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #177
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #10
31: invokespecial #9
34: astore_1
35: aload_1
36: ldc2_w        #178
39: invokevirtual #44
42: dstore_2
43: aload_1
44: iconst_m1
45: invokevirtual #54
48: dstore        4
50: aload_1
51: ldc2_w        #180
54: ldc2_w        #90
57: invokevirtual #12
60: dstore        6
62: ldc           #16
64: invokestatic  #17
67: goto          112
70: astore        6
72: aload         6
74: invokevirtual #19
77: invokevirtual #20
80: ifne          112
83: new           #21
86: dup
87: invokespecial #22
90: ldc           #23
92: invokevirtual #24
95: aload         6
97: invokevirtual #19
100: invokevirtual #25
103: invokevirtual #24
106: invokevirtual #26
109: invokestatic  #17
112: new           #21
115: dup
116: invokespecial #22
119: ldc           #27
121: invokevirtual #24
124: dload_2
125: invokevirtual #28
128: ldc           #29
130: invokevirtual #24
133: dconst_0
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload_2
146: dconst_0
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload         4
173: invokevirtual #28
176: ldc           #29
178: invokevirtual #24
181: dconst_0
182: invokevirtual #28
185: ldc           #27
187: invokevirtual #24
190: invokevirtual #26
193: dload         4
195: dconst_0
196: dcmpl
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #32
208: return
Exception table:
from    to  target type
50    67    70   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 669
End line: 685
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        double double11 = poissonDistributionImpl1.probability(0.0d);
        double double12 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.36787944117144233d + "'", double11 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #182
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: ldc2_w        #13
52: invokevirtual #34
55: istore        6
57: aload_1
58: ldc2_w        #166
61: invokevirtual #139
64: istore        7
66: aload_1
67: dconst_0
68: invokevirtual #44
71: dstore        8
73: aload_1
74: invokevirtual #102
77: dstore        10
79: new           #21
82: dup
83: invokespecial #22
86: ldc           #27
88: invokevirtual #24
91: dload_2
92: invokevirtual #28
95: ldc           #29
97: invokevirtual #24
100: ldc2_w        #47
103: invokevirtual #28
106: ldc           #27
108: invokevirtual #24
111: invokevirtual #26
114: dload_2
115: ldc2_w        #47
118: dcmpl
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #32
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: dload         4
144: invokevirtual #28
147: ldc           #29
149: invokevirtual #24
152: dconst_1
153: invokevirtual #28
156: ldc           #27
158: invokevirtual #24
161: invokevirtual #26
164: dload         4
166: dconst_1
167: dcmpl
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #32
179: new           #21
182: dup
183: invokespecial #22
186: ldc           #27
188: invokevirtual #24
191: iload         6
193: invokevirtual #40
196: ldc           #29
198: invokevirtual #24
201: ldc           #41
203: invokevirtual #40
206: ldc           #27
208: invokevirtual #24
211: invokevirtual #26
214: iload         6
216: ldc           #41
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #32
229: new           #21
232: dup
233: invokespecial #22
236: ldc           #27
238: invokevirtual #24
241: iload         7
243: invokevirtual #40
246: ldc           #29
248: invokevirtual #24
251: iconst_0
252: invokevirtual #40
255: ldc           #27
257: invokevirtual #24
260: invokevirtual #26
263: iload         7
265: ifne          272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #32
276: new           #21
279: dup
280: invokespecial #22
283: ldc           #27
285: invokevirtual #24
288: dload         8
290: invokevirtual #28
293: ldc           #29
295: invokevirtual #24
298: ldc2_w        #168
301: invokevirtual #28
304: ldc           #27
306: invokevirtual #24
309: invokevirtual #26
312: dload         8
314: ldc2_w        #168
317: dcmpl
318: ifne          325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #32
329: new           #21
332: dup
333: invokespecial #22
336: ldc           #27
338: invokevirtual #24
341: dload         10
343: invokevirtual #28
346: ldc           #29
348: invokevirtual #24
351: dconst_1
352: invokevirtual #28
355: ldc           #27
357: invokevirtual #24
360: invokevirtual #26
363: dload         10
365: dconst_1
366: dcmpl
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #32
378: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 688
End line: 711
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        double double15 = poissonDistributionImpl1.cumulativeProbability((-1), 1);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray17 = poissonDistributionImpl1.sample((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7357588823428858d + "'", double15 == 0.7357588823428858d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: ldc2_w        #100
71: invokevirtual #34
74: istore        10
76: aload_1
77: iconst_m1
78: iconst_1
79: invokevirtual #64
82: dstore        11
84: aload_1
85: iconst_m1
86: invokevirtual #184
89: astore        13
91: ldc           #185
93: invokestatic  #17
96: goto          101
99: astore        13
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_2
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: ldc2_w        #47
125: invokevirtual #28
128: ldc           #27
130: invokevirtual #24
133: invokevirtual #26
136: dload_2
137: ldc2_w        #47
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: new           #21
155: dup
156: invokespecial #22
159: ldc           #27
161: invokevirtual #24
164: dload         4
166: invokevirtual #28
169: ldc           #29
171: invokevirtual #24
174: dconst_1
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload         4
188: dconst_1
189: dcmpl
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #32
201: new           #21
204: dup
205: invokespecial #22
208: ldc           #27
210: invokevirtual #24
213: dload         6
215: invokevirtual #28
218: ldc           #29
220: invokevirtual #24
223: ldc2_w        #69
226: invokevirtual #28
229: ldc           #27
231: invokevirtual #24
234: invokevirtual #26
237: dload         6
239: ldc2_w        #69
242: dcmpl
243: ifne          250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #32
254: new           #21
257: dup
258: invokespecial #22
261: ldc           #27
263: invokevirtual #24
266: dload         8
268: invokevirtual #28
271: ldc           #29
273: invokevirtual #24
276: dconst_0
277: invokevirtual #28
280: ldc           #27
282: invokevirtual #24
285: invokevirtual #26
288: dload         8
290: dconst_0
291: dcmpl
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #32
303: new           #21
306: dup
307: invokespecial #22
310: ldc           #27
312: invokevirtual #24
315: iload         10
317: invokevirtual #40
320: ldc           #29
322: invokevirtual #24
325: ldc           #41
327: invokevirtual #40
330: ldc           #27
332: invokevirtual #24
335: invokevirtual #26
338: iload         10
340: ldc           #41
342: if_icmpne     349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #32
353: new           #21
356: dup
357: invokespecial #22
360: ldc           #27
362: invokevirtual #24
365: dload         11
367: invokevirtual #28
370: ldc           #29
372: invokevirtual #24
375: ldc2_w        #187
378: invokevirtual #28
381: ldc           #27
383: invokevirtual #24
386: invokevirtual #26
389: dload         11
391: ldc2_w        #187
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #32
406: return
Exception table:
from    to  target type
84    96    99   Class java/lang/NegativeArraySizeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 714
End line: 736
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            double double10 = randomDataImpl7.nextGamma((double) 31, 0.0d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #189
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: getfield      #72
44: astore        4
46: aload_1
47: dconst_0
48: invokevirtual #15
51: istore        5
53: aload_1
54: getfield      #72
57: astore        6
59: aload         6
61: ldc2_w        #190
64: dconst_0
65: invokevirtual #192
68: dstore        7
70: ldc           #16
72: invokestatic  #17
75: goto          120
78: astore        7
80: aload         7
82: invokevirtual #19
85: invokevirtual #20
88: ifne          120
91: new           #21
94: dup
95: invokespecial #22
98: ldc           #23
100: invokevirtual #24
103: aload         7
105: invokevirtual #19
108: invokevirtual #25
111: invokevirtual #24
114: invokevirtual #26
117: invokestatic  #17
120: new           #21
123: dup
124: invokespecial #22
127: ldc           #27
129: invokevirtual #24
132: dload_2
133: invokevirtual #28
136: ldc           #29
138: invokevirtual #24
141: ldc2_w        #47
144: invokevirtual #28
147: ldc           #27
149: invokevirtual #24
152: invokevirtual #26
155: dload_2
156: ldc2_w        #47
159: dcmpl
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #32
171: aload         4
173: invokestatic  #77
176: new           #21
179: dup
180: invokespecial #22
183: ldc           #27
185: invokevirtual #24
188: iload         5
190: invokevirtual #40
193: ldc           #29
195: invokevirtual #24
198: iconst_m1
199: invokevirtual #40
202: ldc           #27
204: invokevirtual #24
207: invokevirtual #26
210: iload         5
212: iconst_m1
213: if_icmpne     220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #32
224: aload         6
226: invokestatic  #77
229: return
Exception table:
from    to  target type
59    75    78   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 739
End line: 749
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-0.9314434025787122d), (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.931 is smaller than, or equal to, the minimum (0): mean (-0.931)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #194
31: bipush        97
33: invokespecial #50
36: astore_1
37: ldc           #196
39: invokestatic  #17
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
24    42    45   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 752
End line: 786
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double18 = randomDataImpl5.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl20 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double22 = poissonDistributionImpl20.probability(100);
        double double24 = poissonDistributionImpl20.normalApproximateProbability(2147483647);
        double double27 = poissonDistributionImpl20.cumulativeProbability((int) (short) 10, 2147483647);
        double double29 = poissonDistributionImpl20.normalApproximateProbability((int) (byte) -1);
        int int30 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl20);
        double double32 = randomDataImpl5.nextExponential((double) ' ');
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 590.1217756384684d + "'", double7 == 590.1217756384684d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.8282195779455327d + "'", double18 == 0.8282195779455327d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.941866060050443E-159d + "'", double22 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.1142547828857374E-7d + "'", double27 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.06680720126885803d + "'", double29 == 0.06680720126885803d);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double32 + "' != '" + 68.40720380691614d + "'", double32 == 68.40720380691614d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #107
27: dup
28: invokespecial #108
31: astore_1
32: aload_1
33: ldc2_w        #10
36: invokestatic  #109
39: invokevirtual #110
42: dstore_2
43: aload_1
44: dconst_1
45: invokevirtual #111
48: dstore        4
50: aload_1
51: getfield      #112
54: astore        6
56: aload         6
58: ldc2_w        #113
61: invokevirtual #115
64: dstore        7
66: new           #8
69: dup
70: dconst_1
71: invokespecial #9
74: astore        9
76: aload         9
78: bipush        100
80: invokevirtual #54
83: dstore        10
85: aload         9
87: dconst_0
88: ldc2_w        #55
91: invokevirtual #12
94: dstore        12
96: aload         6
98: aload         9
100: invokevirtual #116
103: istore        14
105: aload         6
107: ldc2_w        #198
110: ldc2_w        #127
113: invokevirtual #200
116: dstore        15
118: new           #8
121: dup
122: dconst_1
123: invokespecial #9
126: astore        17
128: aload         17
130: bipush        100
132: invokevirtual #54
135: dstore        18
137: aload         17
139: ldc           #41
141: invokevirtual #63
144: dstore        20
146: aload         17
148: bipush        10
150: ldc           #41
152: invokevirtual #64
155: dstore        22
157: aload         17
159: iconst_m1
160: invokevirtual #63
163: dstore        24
165: aload         6
167: aload         17
169: invokevirtual #116
172: istore        26
174: aload         6
176: ldc2_w        #201
179: invokevirtual #203
182: dstore        27
184: new           #21
187: dup
188: invokespecial #22
191: ldc           #27
193: invokevirtual #24
196: dload_2
197: invokevirtual #28
200: ldc           #29
202: invokevirtual #24
205: dconst_0
206: invokevirtual #28
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: dload_2
218: dconst_0
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #32
231: new           #21
234: dup
235: invokespecial #22
238: ldc           #27
240: invokevirtual #24
243: dload         4
245: invokevirtual #28
248: ldc           #29
250: invokevirtual #24
253: ldc2_w        #118
256: invokevirtual #28
259: ldc           #27
261: invokevirtual #24
264: invokevirtual #26
267: dload         4
269: ldc2_w        #118
272: dcmpl
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #32
284: aload         6
286: invokestatic  #77
289: new           #21
292: dup
293: invokespecial #22
296: ldc           #27
298: invokevirtual #24
301: dload         10
303: invokevirtual #28
306: ldc           #29
308: invokevirtual #24
311: ldc2_w        #47
314: invokevirtual #28
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: dload         10
327: ldc2_w        #47
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #32
342: new           #21
345: dup
346: invokespecial #22
349: ldc           #27
351: invokevirtual #24
354: dload         12
356: invokevirtual #28
359: ldc           #29
361: invokevirtual #24
364: dconst_1
365: invokevirtual #28
368: ldc           #27
370: invokevirtual #24
373: invokevirtual #26
376: dload         12
378: dconst_1
379: dcmpl
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #32
391: new           #21
394: dup
395: invokespecial #22
398: ldc           #27
400: invokevirtual #24
403: dload         18
405: invokevirtual #28
408: ldc           #29
410: invokevirtual #24
413: ldc2_w        #47
416: invokevirtual #28
419: ldc           #27
421: invokevirtual #24
424: invokevirtual #26
427: dload         18
429: ldc2_w        #47
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #32
444: new           #21
447: dup
448: invokespecial #22
451: ldc           #27
453: invokevirtual #24
456: dload         20
458: invokevirtual #28
461: ldc           #29
463: invokevirtual #24
466: dconst_1
467: invokevirtual #28
470: ldc           #27
472: invokevirtual #24
475: invokevirtual #26
478: dload         20
480: dconst_1
481: dcmpl
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #32
493: new           #21
496: dup
497: invokespecial #22
500: ldc           #27
502: invokevirtual #24
505: dload         22
507: invokevirtual #28
510: ldc           #29
512: invokevirtual #24
515: ldc2_w        #69
518: invokevirtual #28
521: ldc           #27
523: invokevirtual #24
526: invokevirtual #26
529: dload         22
531: ldc2_w        #69
534: dcmpl
535: ifne          542
538: iconst_1
539: goto          543
542: iconst_0
543: invokestatic  #32
546: new           #21
549: dup
550: invokespecial #22
553: ldc           #27
555: invokevirtual #24
558: dload         24
560: invokevirtual #28
563: ldc           #29
565: invokevirtual #24
568: ldc2_w        #87
571: invokevirtual #28
574: ldc           #27
576: invokevirtual #24
579: invokevirtual #26
582: dload         24
584: ldc2_w        #87
587: dcmpl
588: ifne          595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #32
599: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 789
End line: 804
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray7 = randomDataImpl4.nextPermutation((int) (byte) 0, 2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 2 is larger than the maximum (0): permutation size (2) exceeds permuation domain (0)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #204
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: getfield      #72
44: astore        4
46: aload         4
48: iconst_0
49: iconst_2
50: invokevirtual #205
53: astore        5
55: ldc           #206
57: invokestatic  #17
60: goto          65
63: astore        5
65: new           #21
68: dup
69: invokespecial #22
72: ldc           #27
74: invokevirtual #24
77: dload_2
78: invokevirtual #28
81: ldc           #29
83: invokevirtual #24
86: ldc2_w        #47
89: invokevirtual #28
92: ldc           #27
94: invokevirtual #24
97: invokevirtual #26
100: dload_2
101: ldc2_w        #47
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #32
116: aload         4
118: invokestatic  #77
121: return
Exception table:
from    to  target type
46    60    63   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 807
End line: 811
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(1.2221998187075216d, (double) (-1.0f), 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #207
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #208
31: ldc2_w        #142
34: iconst_0
35: invokespecial #97
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 814
End line: 828
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        double double11 = poissonDistributionImpl1.normalApproximateProbability(0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.308537538725987d + "'", double11 == 0.308537538725987d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #210
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_1
35: ldc2_w        #10
38: invokevirtual #12
41: dstore_2
42: aload_1
43: iconst_0
44: invokevirtual #43
47: dstore        4
49: aload_1
50: invokevirtual #61
53: istore        6
55: aload_1
56: ldc2_w        #211
59: invokevirtual #34
62: istore        7
64: aload_1
65: iconst_0
66: invokevirtual #63
69: dstore        8
71: new           #21
74: dup
75: invokespecial #22
78: ldc           #27
80: invokevirtual #24
83: dload_2
84: invokevirtual #28
87: ldc           #29
89: invokevirtual #24
92: ldc2_w        #30
95: invokevirtual #28
98: ldc           #27
100: invokevirtual #24
103: invokevirtual #26
106: dload_2
107: ldc2_w        #30
110: dcmpl
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #32
122: new           #21
125: dup
126: invokespecial #22
129: ldc           #27
131: invokevirtual #24
134: dload         4
136: invokevirtual #28
139: ldc           #29
141: invokevirtual #24
144: ldc2_w        #45
147: invokevirtual #28
150: ldc           #27
152: invokevirtual #24
155: invokevirtual #26
158: dload         4
160: ldc2_w        #45
163: dcmpl
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #32
175: new           #21
178: dup
179: invokespecial #22
182: ldc           #27
184: invokevirtual #24
187: iload         7
189: invokevirtual #40
192: ldc           #29
194: invokevirtual #24
197: ldc           #41
199: invokevirtual #40
202: ldc           #27
204: invokevirtual #24
207: invokevirtual #26
210: iload         7
212: ldc           #41
214: if_icmpne     221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #32
225: new           #21
228: dup
229: invokespecial #22
232: ldc           #27
234: invokevirtual #24
237: dload         8
239: invokevirtual #28
242: ldc           #29
244: invokevirtual #24
247: ldc2_w        #213
250: invokevirtual #28
253: ldc           #27
255: invokevirtual #24
258: invokevirtual #26
261: dload         8
263: ldc2_w        #213
266: dcmpl
267: ifne          274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #32
278: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 831
End line: 844
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        int int8 = poissonDistributionImpl1.getDomainLowerBound((-0.9501789451592945d));
        int[] intArray10 = poissonDistributionImpl1.sample((int) ' ');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(intArray10);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 1, 0, 2, 2, 2, 0, 1, 4, 0, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 3, 3, 0, 1, 1, 0, 1, 2, 1]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #215
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: dconst_0
42: ldc2_w        #55
45: invokevirtual #12
48: dstore        4
50: aload_1
51: ldc2_w        #216
54: invokevirtual #139
57: istore        6
59: aload_1
60: bipush        32
62: invokevirtual #184
65: astore        7
67: new           #21
70: dup
71: invokespecial #22
74: ldc           #27
76: invokevirtual #24
79: dload_2
80: invokevirtual #28
83: ldc           #29
85: invokevirtual #24
88: ldc2_w        #47
91: invokevirtual #28
94: ldc           #27
96: invokevirtual #24
99: invokevirtual #26
102: dload_2
103: ldc2_w        #47
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #32
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload         4
132: invokevirtual #28
135: ldc           #29
137: invokevirtual #24
140: dconst_1
141: invokevirtual #28
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: dload         4
154: dconst_1
155: dcmpl
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #32
167: new           #21
170: dup
171: invokespecial #22
174: ldc           #27
176: invokevirtual #24
179: iload         6
181: invokevirtual #40
184: ldc           #29
186: invokevirtual #24
189: iconst_0
190: invokevirtual #40
193: ldc           #27
195: invokevirtual #24
198: invokevirtual #26
201: iload         6
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #32
214: aload         7
216: invokestatic  #77
219: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 847
End line: 862
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double3 = poissonDistributionImpl2.getMean();
        double double5 = poissonDistributionImpl2.probability(1);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl2.cumulativeProbability((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (0) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.720075976020796E-42d + "'", double5 == 3.720075976020796E-42d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #10
31: iconst_0
32: invokespecial #50
35: astore_1
36: aload_1
37: invokevirtual #102
40: dstore_2
41: aload_1
42: iconst_1
43: invokevirtual #54
46: dstore        4
48: aload_1
49: bipush        100
51: invokevirtual #43
54: dstore        6
56: ldc           #219
58: invokestatic  #17
61: goto          66
64: astore        6
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #10
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #10
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #220
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload         4
155: ldc2_w        #220
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #32
170: return
Exception table:
from    to  target type
48    61    64   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 865
End line: 883
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        double double5 = poissonDistributionImpl2.getMean();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = poissonDistributionImpl2.inverseCumulativeProbability((-0.3744285675311057d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 52.0d + "'", double5 == 52.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #222
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #223
31: ldc           #225
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_m1
39: invokevirtual #43
42: dstore_2
43: aload_1
44: invokevirtual #102
47: dstore        4
49: aload_1
50: ldc2_w        #226
53: invokevirtual #15
56: istore        6
58: ldc           #16
60: invokestatic  #17
63: goto          108
66: astore        6
68: aload         6
70: invokevirtual #19
73: invokevirtual #20
76: ifne          108
79: new           #21
82: dup
83: invokespecial #22
86: ldc           #23
88: invokevirtual #24
91: aload         6
93: invokevirtual #19
96: invokevirtual #25
99: invokevirtual #24
102: invokevirtual #26
105: invokestatic  #17
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload_2
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: dconst_0
130: invokevirtual #28
133: ldc           #27
135: invokevirtual #24
138: invokevirtual #26
141: dload_2
142: dconst_0
143: dcmpl
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #32
155: new           #21
158: dup
159: invokespecial #22
162: ldc           #27
164: invokevirtual #24
167: dload         4
169: invokevirtual #28
172: ldc           #29
174: invokevirtual #24
177: ldc2_w        #223
180: invokevirtual #28
183: ldc           #27
185: invokevirtual #24
188: invokevirtual #26
191: dload         4
193: ldc2_w        #223
196: dcmpl
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #32
208: return
Exception table:
from    to  target type
49    63    66   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 886
End line: 896
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double8 = poissonDistributionImpl1.cumulativeProbability((double) (-1.0f), 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: bipush        10
43: invokevirtual #43
46: dstore        4
48: aload_1
49: ldc2_w        #142
52: dconst_0
53: invokevirtual #12
56: dstore        6
58: new           #21
61: dup
62: invokespecial #22
65: ldc           #27
67: invokevirtual #24
70: dload_2
71: invokevirtual #28
74: ldc           #29
76: invokevirtual #24
79: ldc2_w        #47
82: invokevirtual #28
85: ldc           #27
87: invokevirtual #24
90: invokevirtual #26
93: dload_2
94: ldc2_w        #47
97: dcmpl
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #32
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload         4
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #178
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload         4
147: ldc2_w        #178
150: dcmpl
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #32
162: new           #21
165: dup
166: invokespecial #22
169: ldc           #27
171: invokevirtual #24
174: dload         6
176: invokevirtual #28
179: ldc           #29
181: invokevirtual #24
184: ldc2_w        #45
187: invokevirtual #28
190: ldc           #27
192: invokevirtual #24
195: invokevirtual #26
198: dload         6
200: ldc2_w        #45
203: dcmpl
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #32
215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 899
End line: 910
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6564770073333787d, (-0.7534689855041378d), (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double5 = poissonDistributionImpl3.cumulativeProbability(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (100) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #230
31: ldc2_w        #175
34: bipush        100
36: invokespecial #97
39: astore_1
40: aload_1
41: iconst_0
42: invokevirtual #43
45: dstore_2
46: ldc           #232
48: invokestatic  #17
51: goto          55
54: astore_2
55: return
Exception table:
from    to  target type
40    51    54   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 913
End line: 930
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double14 = poissonDistributionImpl1.cumulativeProbability((int) (short) 100);
        double double16 = poissonDistributionImpl1.cumulativeProbability(0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: bipush        10
51: ldc           #41
53: invokevirtual #64
56: dstore        6
58: aload_1
59: ldc2_w        #65
62: invokevirtual #44
65: dstore        8
67: aload_1
68: ldc2_w        #234
71: invokevirtual #157
74: aload_1
75: bipush        100
77: invokevirtual #43
80: dstore        10
82: aload_1
83: iconst_0
84: invokevirtual #43
87: dstore        12
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #27
98: invokevirtual #24
101: dload_2
102: invokevirtual #28
105: ldc           #29
107: invokevirtual #24
110: ldc2_w        #47
113: invokevirtual #28
116: ldc           #27
118: invokevirtual #24
121: invokevirtual #26
124: dload_2
125: ldc2_w        #47
128: dcmpl
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #32
140: new           #21
143: dup
144: invokespecial #22
147: ldc           #27
149: invokevirtual #24
152: dload         4
154: invokevirtual #28
157: ldc           #29
159: invokevirtual #24
162: dconst_1
163: invokevirtual #28
166: ldc           #27
168: invokevirtual #24
171: invokevirtual #26
174: dload         4
176: dconst_1
177: dcmpl
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #32
189: new           #21
192: dup
193: invokespecial #22
196: ldc           #27
198: invokevirtual #24
201: dload         6
203: invokevirtual #28
206: ldc           #29
208: invokevirtual #24
211: ldc2_w        #69
214: invokevirtual #28
217: ldc           #27
219: invokevirtual #24
222: invokevirtual #26
225: dload         6
227: ldc2_w        #69
230: dcmpl
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #32
242: new           #21
245: dup
246: invokespecial #22
249: ldc           #27
251: invokevirtual #24
254: dload         8
256: invokevirtual #28
259: ldc           #29
261: invokevirtual #24
264: dconst_0
265: invokevirtual #28
268: ldc           #27
270: invokevirtual #24
273: invokevirtual #26
276: dload         8
278: dconst_0
279: dcmpl
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #32
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: dload         10
305: invokevirtual #28
308: ldc           #29
310: invokevirtual #24
313: dconst_1
314: invokevirtual #28
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: dload         10
327: dconst_1
328: dcmpl
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #32
340: new           #21
343: dup
344: invokespecial #22
347: ldc           #27
349: invokevirtual #24
352: dload         12
354: invokevirtual #28
357: ldc           #29
359: invokevirtual #24
362: ldc2_w        #45
365: invokevirtual #28
368: ldc           #27
370: invokevirtual #24
373: invokevirtual #26
376: dload         12
378: ldc2_w        #45
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #32
393: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 933
End line: 951
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        double double13 = poissonDistributionImpl1.probability((double) 2147483647L);
        int int15 = poissonDistributionImpl1.getDomainLowerBound(0.47712125471966244d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #236
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: ldc           #41
43: invokevirtual #63
46: dstore        4
48: aload_1
49: ldc2_w        #13
52: invokevirtual #34
55: istore        6
57: aload_1
58: ldc2_w        #237
61: invokevirtual #15
64: istore        7
66: aload_1
67: ldc2_w        #239
70: invokevirtual #44
73: dstore        8
75: aload_1
76: ldc2_w        #211
79: invokevirtual #44
82: dstore        10
84: aload_1
85: ldc2_w        #241
88: invokevirtual #139
91: istore        12
93: new           #21
96: dup
97: invokespecial #22
100: ldc           #27
102: invokevirtual #24
105: dload_2
106: invokevirtual #28
109: ldc           #29
111: invokevirtual #24
114: ldc2_w        #47
117: invokevirtual #28
120: ldc           #27
122: invokevirtual #24
125: invokevirtual #26
128: dload_2
129: ldc2_w        #47
132: dcmpl
133: ifne          140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #32
144: new           #21
147: dup
148: invokespecial #22
151: ldc           #27
153: invokevirtual #24
156: dload         4
158: invokevirtual #28
161: ldc           #29
163: invokevirtual #24
166: dconst_1
167: invokevirtual #28
170: ldc           #27
172: invokevirtual #24
175: invokevirtual #26
178: dload         4
180: dconst_1
181: dcmpl
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #32
193: new           #21
196: dup
197: invokespecial #22
200: ldc           #27
202: invokevirtual #24
205: iload         6
207: invokevirtual #40
210: ldc           #29
212: invokevirtual #24
215: ldc           #41
217: invokevirtual #40
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: iload         6
230: ldc           #41
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: iload         7
257: invokevirtual #40
260: ldc           #29
262: invokevirtual #24
265: iconst_1
266: invokevirtual #40
269: ldc           #27
271: invokevirtual #24
274: invokevirtual #26
277: iload         7
279: iconst_1
280: if_icmpne     287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #32
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: dload         8
305: invokevirtual #28
308: ldc           #29
310: invokevirtual #24
313: dconst_0
314: invokevirtual #28
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: dload         8
327: dconst_0
328: dcmpl
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #32
340: new           #21
343: dup
344: invokespecial #22
347: ldc           #27
349: invokevirtual #24
352: dload         10
354: invokevirtual #28
357: ldc           #29
359: invokevirtual #24
362: dconst_0
363: invokevirtual #28
366: ldc           #27
368: invokevirtual #24
371: invokevirtual #26
374: dload         10
376: dconst_0
377: dcmpl
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #32
389: new           #21
392: dup
393: invokespecial #22
396: ldc           #27
398: invokevirtual #24
401: iload         12
403: invokevirtual #40
406: ldc           #29
408: invokevirtual #24
411: iconst_0
412: invokevirtual #40
415: ldc           #27
417: invokevirtual #24
420: invokevirtual #26
423: iload         12
425: ifne          432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #32
436: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 954
End line: 964
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        int int6 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #243
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: bipush        10
43: invokevirtual #43
46: dstore        4
48: aload_1
49: invokevirtual #61
52: istore        6
54: new           #21
57: dup
58: invokespecial #22
61: ldc           #27
63: invokevirtual #24
66: dload_2
67: invokevirtual #28
70: ldc           #29
72: invokevirtual #24
75: ldc2_w        #47
78: invokevirtual #28
81: ldc           #27
83: invokevirtual #24
86: invokevirtual #26
89: dload_2
90: ldc2_w        #47
93: dcmpl
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #32
105: new           #21
108: dup
109: invokespecial #22
112: ldc           #27
114: invokevirtual #24
117: dload         4
119: invokevirtual #28
122: ldc           #29
124: invokevirtual #24
127: ldc2_w        #178
130: invokevirtual #28
133: ldc           #27
135: invokevirtual #24
138: invokevirtual #26
141: dload         4
143: ldc2_w        #178
146: dcmpl
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #32
158: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 967
End line: 987
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double7 = poissonDistributionImpl1.getMean();
        // The following exception was thrown during execution in test generation
        try {
            double double10 = poissonDistributionImpl1.cumulativeProbability(0.06929810837522998d, (double) 0);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: dconst_1
29: invokespecial #9
32: astore_1
33: aload_1
34: bipush        100
36: invokevirtual #54
39: dstore_2
40: aload_1
41: dconst_0
42: ldc2_w        #55
45: invokevirtual #12
48: dstore        4
50: aload_1
51: invokevirtual #102
54: dstore        6
56: aload_1
57: ldc2_w        #245
60: dconst_0
61: invokevirtual #12
64: dstore        8
66: ldc           #16
68: invokestatic  #17
71: goto          116
74: astore        8
76: aload         8
78: invokevirtual #19
81: invokevirtual #20
84: ifne          116
87: new           #21
90: dup
91: invokespecial #22
94: ldc           #23
96: invokevirtual #24
99: aload         8
101: invokevirtual #19
104: invokevirtual #25
107: invokevirtual #24
110: invokevirtual #26
113: invokestatic  #17
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #27
125: invokevirtual #24
128: dload_2
129: invokevirtual #28
132: ldc           #29
134: invokevirtual #24
137: ldc2_w        #47
140: invokevirtual #28
143: ldc           #27
145: invokevirtual #24
148: invokevirtual #26
151: dload_2
152: ldc2_w        #47
155: dcmpl
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #32
167: new           #21
170: dup
171: invokespecial #22
174: ldc           #27
176: invokevirtual #24
179: dload         4
181: invokevirtual #28
184: ldc           #29
186: invokevirtual #24
189: dconst_1
190: invokevirtual #28
193: ldc           #27
195: invokevirtual #24
198: invokevirtual #26
201: dload         4
203: dconst_1
204: dcmpl
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #32
216: new           #21
219: dup
220: invokespecial #22
223: ldc           #27
225: invokevirtual #24
228: dload         6
230: invokevirtual #28
233: ldc           #29
235: invokevirtual #24
238: dconst_1
239: invokevirtual #28
242: ldc           #27
244: invokevirtual #24
247: invokevirtual #26
250: dload         6
252: dconst_1
253: dcmpl
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #32
265: return
Exception table:
from    to  target type
56    71    74   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 990
End line: 1003
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            double double6 = poissonDistributionImpl2.cumulativeProbability(1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 100");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #247
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #10
31: iconst_0
32: invokespecial #50
35: astore_1
36: aload_1
37: iconst_0
38: invokevirtual #63
41: dstore_2
42: aload_1
43: iconst_1
44: invokevirtual #43
47: dstore        4
49: ldc           #58
51: invokestatic  #17
54: goto          59
57: astore        4
59: new           #21
62: dup
63: invokespecial #22
66: ldc           #27
68: invokevirtual #24
71: dload_2
72: invokevirtual #28
75: ldc           #29
77: invokevirtual #24
80: dconst_0
81: invokevirtual #28
84: ldc           #27
86: invokevirtual #24
89: invokevirtual #26
92: dload_2
93: dconst_0
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: return
Exception table:
from    to  target type
42    54    57   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 1006
End line: 1016
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-0.12296910173947198d), 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.123 is smaller than, or equal to, the minimum (0): mean (-0.123)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #249
31: iconst_0
32: invokespecial #50
35: astore_1
36: ldc           #251
38: invokestatic  #17
41: goto          45
44: astore_1
45: return
Exception table:
from    to  target type
24    41    44   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 1019
End line: 1025
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(Double.POSITIVE_INFINITY, 0.0d);
        double double3 = poissonDistributionImpl2.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + Double.POSITIVE_INFINITY + "'", double3 == Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #253
31: dconst_0
32: invokespecial #255
35: astore_1
36: aload_1
37: invokevirtual #102
40: dstore_2
41: new           #21
44: dup
45: invokespecial #22
48: ldc           #27
50: invokevirtual #24
53: dload_2
54: invokevirtual #28
57: ldc           #29
59: invokevirtual #24
62: ldc2_w        #253
65: invokevirtual #28
68: ldc           #27
70: invokevirtual #24
73: invokevirtual #26
76: dload_2
77: ldc2_w        #253
80: dcmpl
81: ifne          88
84: iconst_1
85: goto          89
88: iconst_0
89: invokestatic  #32
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 1028
End line: 1039
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(3.941866060050443E-159d, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl2.cumulativeProbability(1.5426522143184942d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (0) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #47
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: ldc2_w        #257
41: invokevirtual #141
44: dstore_2
45: ldc           #219
47: invokestatic  #17
50: goto          54
53: astore_2
54: return
Exception table:
from    to  target type
37    50    53   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 1042
End line: 1052
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.0d, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #259
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: iconst_0
31: invokespecial #50
34: astore_1
35: ldc           #51
37: invokestatic  #17
40: goto          44
43: astore_1
44: return
Exception table:
from    to  target type
25    40    43   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 1055
End line: 1063
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100);
        double double3 = poissonDistributionImpl1.probability(0.9999999899522336d);
        double double5 = poissonDistributionImpl1.probability((int) (short) 10);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0251532120868618E-30d + "'", double5 == 1.0251532120868618E-30d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #260
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: invokespecial #9
35: astore_1
36: aload_1
37: ldc2_w        #178
40: invokevirtual #44
43: dstore_2
44: aload_1
45: bipush        10
47: invokevirtual #54
50: dstore        4
52: new           #21
55: dup
56: invokespecial #22
59: ldc           #27
61: invokevirtual #24
64: dload_2
65: invokevirtual #28
68: ldc           #29
70: invokevirtual #24
73: dconst_0
74: invokevirtual #28
77: ldc           #27
79: invokevirtual #24
82: invokevirtual #26
85: dload_2
86: dconst_0
87: dcmpl
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #32
99: new           #21
102: dup
103: invokespecial #22
106: ldc           #27
108: invokevirtual #24
111: dload         4
113: invokevirtual #28
116: ldc           #29
118: invokevirtual #24
121: ldc2_w        #261
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload         4
137: ldc2_w        #261
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 1066
End line: 1070
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6246292191371761d, 114.31880956042181d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #263
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #264
32: ldc2_w        #266
35: invokespecial #255
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 1073
End line: 1081
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d, 0.10400365104880639d, (int) (short) 1);
        double double5 = poissonDistributionImpl3.normalApproximateProbability((int) (byte) 1);
        double double7 = poissonDistributionImpl3.probability(572.9577951308232d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9213503964748575d + "'", double5 == 0.9213503964748575d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #268
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: ldc2_w        #271
35: iconst_1
36: invokespecial #97
39: astore_1
40: aload_1
41: iconst_1
42: invokevirtual #63
45: dstore_2
46: aload_1
47: ldc2_w        #113
50: invokevirtual #44
53: dstore        4
55: new           #21
58: dup
59: invokespecial #22
62: ldc           #27
64: invokevirtual #24
67: dload_2
68: invokevirtual #28
71: ldc           #29
73: invokevirtual #24
76: ldc2_w        #273
79: invokevirtual #28
82: ldc           #27
84: invokevirtual #24
87: invokevirtual #26
90: dload_2
91: ldc2_w        #273
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: dload         4
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: dconst_0
129: invokevirtual #28
132: ldc           #27
134: invokevirtual #24
137: invokevirtual #26
140: dload         4
142: dconst_0
143: dcmpl
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #32
155: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 1084
End line: 1108
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        int int11 = poissonDistributionImpl1.sample();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = poissonDistributionImpl1.inverseCumulativeProbability((double) 844785);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #275
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: invokevirtual #61
69: istore        10
71: aload_1
72: ldc2_w        #276
75: invokevirtual #15
78: istore        11
80: ldc           #16
82: invokestatic  #17
85: goto          130
88: astore        11
90: aload         11
92: invokevirtual #19
95: invokevirtual #20
98: ifne          130
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #23
110: invokevirtual #24
113: aload         11
115: invokevirtual #19
118: invokevirtual #25
121: invokevirtual #24
124: invokevirtual #26
127: invokestatic  #17
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: dload_2
143: invokevirtual #28
146: ldc           #29
148: invokevirtual #24
151: ldc2_w        #30
154: invokevirtual #28
157: ldc           #27
159: invokevirtual #24
162: invokevirtual #26
165: dload_2
166: ldc2_w        #30
169: dcmpl
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: new           #21
184: dup
185: invokespecial #22
188: ldc           #27
190: invokevirtual #24
193: dload         4
195: invokevirtual #28
198: ldc           #29
200: invokevirtual #24
203: ldc2_w        #45
206: invokevirtual #28
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: dload         4
219: ldc2_w        #45
222: dcmpl
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #32
234: new           #21
237: dup
238: invokespecial #22
241: ldc           #27
243: invokevirtual #24
246: dload         6
248: invokevirtual #28
251: ldc           #29
253: invokevirtual #24
256: ldc2_w        #87
259: invokevirtual #28
262: ldc           #27
264: invokevirtual #24
267: invokevirtual #26
270: dload         6
272: ldc2_w        #87
275: dcmpl
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #32
287: new           #21
290: dup
291: invokespecial #22
294: ldc           #27
296: invokevirtual #24
299: dload         8
301: invokevirtual #28
304: ldc           #29
306: invokevirtual #24
309: dconst_1
310: invokevirtual #28
313: ldc           #27
315: invokevirtual #24
318: invokevirtual #26
321: dload         8
323: dconst_1
324: dcmpl
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #32
336: return
Exception table:
from    to  target type
71    85    88   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 1111
End line: 1131
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        double double14 = poissonDistributionImpl1.cumulativeProbability((double) (-1));
        double double16 = poissonDistributionImpl1.probability((double) (byte) 0);
        double double18 = poissonDistributionImpl1.cumulativeProbability((-0.7148414578669797d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117144233d + "'", double16 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: ldc2_w        #142
78: invokevirtual #141
81: dstore        12
83: aload_1
84: dconst_0
85: invokevirtual #44
88: dstore        14
90: aload_1
91: ldc2_w        #279
94: invokevirtual #141
97: dstore        16
99: new           #21
102: dup
103: invokespecial #22
106: ldc           #27
108: invokevirtual #24
111: dload_2
112: invokevirtual #28
115: ldc           #29
117: invokevirtual #24
120: ldc2_w        #30
123: invokevirtual #28
126: ldc           #27
128: invokevirtual #24
131: invokevirtual #26
134: dload_2
135: ldc2_w        #30
138: dcmpl
139: ifne          146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #32
150: new           #21
153: dup
154: invokespecial #22
157: ldc           #27
159: invokevirtual #24
162: dload         4
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: ldc2_w        #45
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload         4
188: ldc2_w        #45
191: dcmpl
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #32
203: new           #21
206: dup
207: invokespecial #22
210: ldc           #27
212: invokevirtual #24
215: dload         6
217: invokevirtual #28
220: ldc           #29
222: invokevirtual #24
225: ldc2_w        #87
228: invokevirtual #28
231: ldc           #27
233: invokevirtual #24
236: invokevirtual #26
239: dload         6
241: ldc2_w        #87
244: dcmpl
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #32
256: new           #21
259: dup
260: invokespecial #22
263: ldc           #27
265: invokevirtual #24
268: dload         8
270: invokevirtual #28
273: ldc           #29
275: invokevirtual #24
278: dconst_1
279: invokevirtual #28
282: ldc           #27
284: invokevirtual #24
287: invokevirtual #26
290: dload         8
292: dconst_1
293: dcmpl
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: dload         10
319: invokevirtual #28
322: ldc           #29
324: invokevirtual #24
327: ldc2_w        #47
330: invokevirtual #28
333: ldc           #27
335: invokevirtual #24
338: invokevirtual #26
341: dload         10
343: ldc2_w        #47
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: dload         12
372: invokevirtual #28
375: ldc           #29
377: invokevirtual #24
380: dconst_0
381: invokevirtual #28
384: ldc           #27
386: invokevirtual #24
389: invokevirtual #26
392: dload         12
394: dconst_0
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #32
407: new           #21
410: dup
411: invokespecial #22
414: ldc           #27
416: invokevirtual #24
419: dload         14
421: invokevirtual #28
424: ldc           #29
426: invokevirtual #24
429: ldc2_w        #168
432: invokevirtual #28
435: ldc           #27
437: invokevirtual #24
440: invokevirtual #26
443: dload         14
445: ldc2_w        #168
448: dcmpl
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #32
460: new           #21
463: dup
464: invokespecial #22
467: ldc           #27
469: invokevirtual #24
472: dload         16
474: invokevirtual #28
477: ldc           #29
479: invokevirtual #24
482: dconst_0
483: invokevirtual #28
486: ldc           #27
488: invokevirtual #24
491: invokevirtual #26
494: dload         16
496: dconst_0
497: dcmpl
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #32
509: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 1134
End line: 1151
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = randomDataImpl4.nextGaussian((-1.7540630599962477d), (-0.7880014968389955d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.788 is smaller than, or equal to, the minimum (0): standard deviation (-0.788)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #284
62: ldc2_w        #286
65: invokevirtual #288
68: dstore        7
70: ldc_w         #289
73: invokestatic  #17
76: goto          81
79: astore        7
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #27
90: invokevirtual #24
93: dload_2
94: invokevirtual #28
97: ldc           #29
99: invokevirtual #24
102: ldc2_w        #47
105: invokevirtual #28
108: ldc           #27
110: invokevirtual #24
113: invokevirtual #26
116: dload_2
117: ldc2_w        #47
120: dcmpl
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #32
132: aload         4
134: invokestatic  #77
137: return
Exception table:
from    to  target type
57    76    79   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 1154
End line: 1181
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double20 = poissonDistributionImpl9.cumulativeProbability(0.0d, 0.0d);
        double double22 = poissonDistributionImpl9.cumulativeProbability((int) (byte) 10);
        double double23 = poissonDistributionImpl9.getMean();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 568.0462096409312d + "'", double7 == 568.0462096409312d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.36787944117146065d + "'", double20 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9999999899522336d + "'", double22 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: dconst_0
118: dconst_0
119: invokevirtual #12
122: dstore        17
124: aload         9
126: bipush        10
128: invokevirtual #43
131: dstore        19
133: aload         9
135: invokevirtual #102
138: dstore        21
140: new           #21
143: dup
144: invokespecial #22
147: ldc           #27
149: invokevirtual #24
152: dload_2
153: invokevirtual #28
156: ldc           #29
158: invokevirtual #24
161: dconst_0
162: invokevirtual #28
165: ldc           #27
167: invokevirtual #24
170: invokevirtual #26
173: dload_2
174: dconst_0
175: dcmpl
176: ifne          183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #32
187: new           #21
190: dup
191: invokespecial #22
194: ldc           #27
196: invokevirtual #24
199: dload         4
201: invokevirtual #28
204: ldc           #29
206: invokevirtual #24
209: ldc2_w        #118
212: invokevirtual #28
215: ldc           #27
217: invokevirtual #24
220: invokevirtual #26
223: dload         4
225: ldc2_w        #118
228: dcmpl
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #32
240: aload         6
242: invokestatic  #77
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: dload         10
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: ldc2_w        #47
270: invokevirtual #28
273: ldc           #27
275: invokevirtual #24
278: invokevirtual #26
281: dload         10
283: ldc2_w        #47
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #32
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: dload         12
312: invokevirtual #28
315: ldc           #29
317: invokevirtual #24
320: dconst_1
321: invokevirtual #28
324: ldc           #27
326: invokevirtual #24
329: invokevirtual #26
332: dload         12
334: dconst_1
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         15
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: dconst_1
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         15
383: dconst_1
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: new           #21
399: dup
400: invokespecial #22
403: ldc           #27
405: invokevirtual #24
408: dload         17
410: invokevirtual #28
413: ldc           #29
415: invokevirtual #24
418: ldc2_w        #45
421: invokevirtual #28
424: ldc           #27
426: invokevirtual #24
429: invokevirtual #26
432: dload         17
434: ldc2_w        #45
437: dcmpl
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #32
449: new           #21
452: dup
453: invokespecial #22
456: ldc           #27
458: invokevirtual #24
461: dload         19
463: invokevirtual #28
466: ldc           #29
468: invokevirtual #24
471: ldc2_w        #178
474: invokevirtual #28
477: ldc           #27
479: invokevirtual #24
482: invokevirtual #26
485: dload         19
487: ldc2_w        #178
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #32
502: new           #21
505: dup
506: invokespecial #22
509: ldc           #27
511: invokevirtual #24
514: dload         21
516: invokevirtual #28
519: ldc           #29
521: invokevirtual #24
524: dconst_1
525: invokevirtual #28
528: ldc           #27
530: invokevirtual #24
533: invokevirtual #26
536: dload         21
538: dconst_1
539: dcmpl
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #32
551: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 1184
End line: 1200
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.inverseCumulativeProbability(0.14003537305923877d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #292
77: invokevirtual #15
80: istore        9
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #27
91: invokevirtual #24
94: dload_2
95: invokevirtual #28
98: ldc           #29
100: invokevirtual #24
103: ldc2_w        #47
106: invokevirtual #28
109: ldc           #27
111: invokevirtual #24
114: invokevirtual #26
117: dload_2
118: ldc2_w        #47
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #32
133: new           #21
136: dup
137: invokespecial #22
140: ldc           #27
142: invokevirtual #24
145: dload         4
147: invokevirtual #28
150: ldc           #29
152: invokevirtual #24
155: dconst_1
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload         4
169: dconst_1
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: iload         6
196: invokevirtual #40
199: ldc           #29
201: invokevirtual #24
204: ldc           #41
206: invokevirtual #40
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: iload         6
219: ldc           #41
221: if_icmpne     228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #32
232: new           #21
235: dup
236: invokespecial #22
239: ldc           #27
241: invokevirtual #24
244: iload         7
246: invokevirtual #40
249: ldc           #29
251: invokevirtual #24
254: iconst_0
255: invokevirtual #40
258: ldc           #27
260: invokevirtual #24
263: invokevirtual #26
266: iload         7
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: iload         9
293: invokevirtual #40
296: ldc           #29
298: invokevirtual #24
301: iconst_m1
302: invokevirtual #40
305: ldc           #27
307: invokevirtual #24
310: invokevirtual #26
313: iload         9
315: iconst_m1
316: if_icmpne     323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #32
327: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 1203
End line: 1213
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int3 = poissonDistributionImpl1.getDomainUpperBound((double) (short) 0);
        double double4 = poissonDistributionImpl1.getMean();
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.7357588823428858d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #34
39: istore_2
40: aload_1
41: invokevirtual #102
44: dstore_3
45: aload_1
46: ldc2_w        #187
49: invokevirtual #141
52: dstore        5
54: new           #21
57: dup
58: invokespecial #22
61: ldc           #27
63: invokevirtual #24
66: iload_2
67: invokevirtual #40
70: ldc           #29
72: invokevirtual #24
75: ldc           #41
77: invokevirtual #40
80: ldc           #27
82: invokevirtual #24
85: invokevirtual #26
88: iload_2
89: ldc           #41
91: if_icmpne     98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #32
102: new           #21
105: dup
106: invokespecial #22
109: ldc           #27
111: invokevirtual #24
114: dload_3
115: invokevirtual #28
118: ldc           #29
120: invokevirtual #24
123: dconst_1
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload_3
136: dconst_1
137: dcmpl
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #32
149: new           #21
152: dup
153: invokespecial #22
156: ldc           #27
158: invokevirtual #24
161: dload         5
163: invokevirtual #28
166: ldc           #29
168: invokevirtual #24
171: ldc2_w        #45
174: invokevirtual #28
177: ldc           #27
179: invokevirtual #24
182: invokevirtual #26
185: dload         5
187: ldc2_w        #45
190: dcmpl
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #32
202: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 1216
End line: 1243
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound(0.9014110163717823d);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = poissonDistributionImpl1.cumulativeProbability(2.6881171418161356E43d, (-364.7393755555635d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #298
84: invokevirtual #139
87: istore        11
89: aload_1
90: ldc2_w        #300
93: ldc2_w        #302
96: invokevirtual #12
99: dstore        12
101: ldc           #16
103: invokestatic  #17
106: goto          151
109: astore        12
111: aload         12
113: invokevirtual #19
116: invokevirtual #20
119: ifne          151
122: new           #21
125: dup
126: invokespecial #22
129: ldc           #23
131: invokevirtual #24
134: aload         12
136: invokevirtual #19
139: invokevirtual #25
142: invokevirtual #24
145: invokevirtual #26
148: invokestatic  #17
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload_2
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: ldc2_w        #30
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload_2
187: ldc2_w        #30
190: dcmpl
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #32
202: new           #21
205: dup
206: invokespecial #22
209: ldc           #27
211: invokevirtual #24
214: dload         4
216: invokevirtual #28
219: ldc           #29
221: invokevirtual #24
224: ldc2_w        #45
227: invokevirtual #28
230: ldc           #27
232: invokevirtual #24
235: invokevirtual #26
238: dload         4
240: ldc2_w        #45
243: dcmpl
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #32
255: new           #21
258: dup
259: invokespecial #22
262: ldc           #27
264: invokevirtual #24
267: dload         6
269: invokevirtual #28
272: ldc           #29
274: invokevirtual #24
277: ldc2_w        #87
280: invokevirtual #28
283: ldc           #27
285: invokevirtual #24
288: invokevirtual #26
291: dload         6
293: ldc2_w        #87
296: dcmpl
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #32
308: new           #21
311: dup
312: invokespecial #22
315: ldc           #27
317: invokevirtual #24
320: dload         8
322: invokevirtual #28
325: ldc           #29
327: invokevirtual #24
330: ldc2_w        #45
333: invokevirtual #28
336: ldc           #27
338: invokevirtual #24
341: invokevirtual #26
344: dload         8
346: ldc2_w        #45
349: dcmpl
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: new           #21
364: dup
365: invokespecial #22
368: ldc           #27
370: invokevirtual #24
373: iload         10
375: invokevirtual #40
378: ldc           #29
380: invokevirtual #24
383: iconst_0
384: invokevirtual #40
387: ldc           #27
389: invokevirtual #24
392: invokevirtual #26
395: iload         10
397: ifne          404
400: iconst_1
401: goto          405
404: iconst_0
405: invokestatic  #32
408: new           #21
411: dup
412: invokespecial #22
415: ldc           #27
417: invokevirtual #24
420: iload         11
422: invokevirtual #40
425: ldc           #29
427: invokevirtual #24
430: iconst_0
431: invokevirtual #40
434: ldc           #27
436: invokevirtual #24
439: invokevirtual #26
442: iload         11
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #32
455: return
Exception table:
from    to  target type
89   106   109   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 1246
End line: 1256
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-3.7635303525966806d), (-0.4673841036516608d), 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -3.764 is smaller than, or equal to, the minimum (0): mean (-3.764)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #305
32: ldc2_w        #180
35: iconst_0
36: invokespecial #97
39: astore_1
40: ldc_w         #307
43: invokestatic  #17
46: goto          50
49: astore_1
50: return
Exception table:
from    to  target type
25    46    49   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 1259
End line: 1272
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6564770073333787d, (-0.7534689855041378d), (int) (short) 100);
        double double5 = poissonDistributionImpl3.normalApproximateProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl3.cumulativeProbability(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (100) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.4234301409057203d + "'", double5 == 0.4234301409057203d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #308
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #230
32: ldc2_w        #175
35: bipush        100
37: invokespecial #97
40: astore_1
41: aload_1
42: iconst_0
43: invokevirtual #63
46: dstore_2
47: aload_1
48: iconst_0
49: invokevirtual #43
52: dstore        4
54: ldc           #232
56: invokestatic  #17
59: goto          64
62: astore        4
64: new           #21
67: dup
68: invokespecial #22
71: ldc           #27
73: invokevirtual #24
76: dload_2
77: invokevirtual #28
80: ldc           #29
82: invokevirtual #24
85: ldc2_w        #309
88: invokevirtual #28
91: ldc           #27
93: invokevirtual #24
96: invokevirtual #26
99: dload_2
100: ldc2_w        #309
103: dcmpl
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #32
115: return
Exception table:
from    to  target type
47    59    62   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 1275
End line: 1293
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.probability(100);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = poissonDistributionImpl1.inverseCumulativeProbability(1.0806339911283105d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.941866060050443E-159d + "'", double6 == 3.941866060050443E-159d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #311
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: bipush        100
46: invokevirtual #54
49: dstore        4
51: aload_1
52: ldc2_w        #312
55: invokevirtual #15
58: istore        6
60: ldc           #16
62: invokestatic  #17
65: goto          110
68: astore        6
70: aload         6
72: invokevirtual #19
75: invokevirtual #20
78: ifne          110
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #23
90: invokevirtual #24
93: aload         6
95: invokevirtual #19
98: invokevirtual #25
101: invokevirtual #24
104: invokevirtual #26
107: invokestatic  #17
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #27
119: invokevirtual #24
122: dload_2
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #30
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload_2
146: ldc2_w        #30
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: new           #21
164: dup
165: invokespecial #22
168: ldc           #27
170: invokevirtual #24
173: dload         4
175: invokevirtual #28
178: ldc           #29
180: invokevirtual #24
183: ldc2_w        #47
186: invokevirtual #28
189: ldc           #27
191: invokevirtual #24
194: invokevirtual #26
197: dload         4
199: ldc2_w        #47
202: dcmpl
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #32
214: return
Exception table:
from    to  target type
51    65    68   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 1296
End line: 1315
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGamma(2.6593984616112802d, 0.9937903346742238d);
        // The following exception was thrown during execution in test generation
        try {
            long long12 = randomDataImpl4.nextSecureLong(0L, 0L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 0 is larger than, or equal to, the maximum (0): lower bound (0) must be strictly less than upper bound (0)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.8465684155157288d + "'", double9 == 0.8465684155157288d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #314
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #315
62: ldc2_w        #317
65: invokevirtual #192
68: dstore        7
70: aload         4
72: lconst_0
73: lconst_0
74: invokevirtual #84
77: lstore        9
79: ldc_w         #319
82: invokestatic  #17
85: goto          90
88: astore        9
90: new           #21
93: dup
94: invokespecial #22
97: ldc           #27
99: invokevirtual #24
102: dload_2
103: invokevirtual #28
106: ldc           #29
108: invokevirtual #24
111: ldc2_w        #47
114: invokevirtual #28
117: ldc           #27
119: invokevirtual #24
122: invokevirtual #26
125: dload_2
126: ldc2_w        #47
129: dcmpl
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #32
141: aload         4
143: invokestatic  #77
146: return
Exception table:
from    to  target type
70    85    88   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 1318
End line: 1341
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray16 = randomDataImpl13.nextPermutation(2, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 10 is larger than the maximum (2): permutation size (10) exceeds permuation domain (2)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload         12
82: iconst_2
83: bipush        10
85: invokevirtual #205
88: astore        13
90: ldc_w         #321
93: invokestatic  #17
96: goto          101
99: astore        13
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_2
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: ldc2_w        #30
125: invokevirtual #28
128: ldc           #27
130: invokevirtual #24
133: invokevirtual #26
136: dload_2
137: ldc2_w        #30
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: new           #21
155: dup
156: invokespecial #22
159: ldc           #27
161: invokevirtual #24
164: dload         4
166: invokevirtual #28
169: ldc           #29
171: invokevirtual #24
174: ldc2_w        #45
177: invokevirtual #28
180: ldc           #27
182: invokevirtual #24
185: invokevirtual #26
188: dload         4
190: ldc2_w        #45
193: dcmpl
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #32
205: new           #21
208: dup
209: invokespecial #22
212: ldc           #27
214: invokevirtual #24
217: dload         6
219: invokevirtual #28
222: ldc           #29
224: invokevirtual #24
227: ldc2_w        #87
230: invokevirtual #28
233: ldc           #27
235: invokevirtual #24
238: invokevirtual #26
241: dload         6
243: ldc2_w        #87
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: dload         8
272: invokevirtual #28
275: ldc           #29
277: invokevirtual #24
280: dconst_1
281: invokevirtual #28
284: ldc           #27
286: invokevirtual #24
289: invokevirtual #26
292: dload         8
294: dconst_1
295: dcmpl
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #32
307: new           #21
310: dup
311: invokespecial #22
314: ldc           #27
316: invokevirtual #24
319: dload         10
321: invokevirtual #28
324: ldc           #29
326: invokevirtual #24
329: ldc2_w        #47
332: invokevirtual #28
335: ldc           #27
337: invokevirtual #24
340: invokevirtual #26
343: dload         10
345: ldc2_w        #47
348: dcmpl
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #32
360: aload         12
362: invokestatic  #77
365: return
Exception table:
from    to  target type
80    96    99   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 1344
End line: 1348
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.938124312256864d, 0.3899356327042469d, 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #322
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #323
32: ldc2_w        #325
35: iconst_0
36: invokespecial #97
39: astore_1
40: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 1351
End line: 1379
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double18 = randomDataImpl5.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = randomDataImpl5.nextHexString(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): length (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 582.0873648943793d + "'", double7 == 582.0873648943793d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.4468701524151414d + "'", double18 == 0.4468701524151414d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #198
111: ldc2_w        #127
114: invokevirtual #200
117: dstore        15
119: aload         6
121: iconst_0
122: invokevirtual #328
125: astore        17
127: ldc_w         #329
130: invokestatic  #17
133: goto          138
136: astore        17
138: new           #21
141: dup
142: invokespecial #22
145: ldc           #27
147: invokevirtual #24
150: dload_2
151: invokevirtual #28
154: ldc           #29
156: invokevirtual #24
159: dconst_0
160: invokevirtual #28
163: ldc           #27
165: invokevirtual #24
168: invokevirtual #26
171: dload_2
172: dconst_0
173: dcmpl
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #32
185: new           #21
188: dup
189: invokespecial #22
192: ldc           #27
194: invokevirtual #24
197: dload         4
199: invokevirtual #28
202: ldc           #29
204: invokevirtual #24
207: ldc2_w        #118
210: invokevirtual #28
213: ldc           #27
215: invokevirtual #24
218: invokevirtual #26
221: dload         4
223: ldc2_w        #118
226: dcmpl
227: ifne          234
230: iconst_1
231: goto          235
234: iconst_0
235: invokestatic  #32
238: aload         6
240: invokestatic  #77
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: dload         10
257: invokevirtual #28
260: ldc           #29
262: invokevirtual #24
265: ldc2_w        #47
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         10
281: ldc2_w        #47
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: dload         12
310: invokevirtual #28
313: ldc           #29
315: invokevirtual #24
318: dconst_1
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         12
332: dconst_1
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: return
Exception table:
from    to  target type
119   133   136   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 1382
End line: 1413
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        double double19 = poissonDistributionImpl1.probability(100);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = poissonDistributionImpl1.cumulativeProbability(593.9053572049485d, 1.5858848923609055d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.941866060050443E-159d + "'", double19 == 3.941866060050443E-159d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload_1
96: bipush        100
98: invokevirtual #54
101: dstore        13
103: aload_1
104: ldc2_w        #331
107: ldc2_w        #333
110: invokevirtual #12
113: dstore        15
115: ldc           #16
117: invokestatic  #17
120: goto          165
123: astore        15
125: aload         15
127: invokevirtual #19
130: invokevirtual #20
133: ifne          165
136: new           #21
139: dup
140: invokespecial #22
143: ldc           #23
145: invokevirtual #24
148: aload         15
150: invokevirtual #19
153: invokevirtual #25
156: invokevirtual #24
159: invokevirtual #26
162: invokestatic  #17
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: dload_2
178: invokevirtual #28
181: ldc           #29
183: invokevirtual #24
186: ldc2_w        #30
189: invokevirtual #28
192: ldc           #27
194: invokevirtual #24
197: invokevirtual #26
200: dload_2
201: ldc2_w        #30
204: dcmpl
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #32
216: new           #21
219: dup
220: invokespecial #22
223: ldc           #27
225: invokevirtual #24
228: dload         4
230: invokevirtual #28
233: ldc           #29
235: invokevirtual #24
238: ldc2_w        #45
241: invokevirtual #28
244: ldc           #27
246: invokevirtual #24
249: invokevirtual #26
252: dload         4
254: ldc2_w        #45
257: dcmpl
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #32
269: new           #21
272: dup
273: invokespecial #22
276: ldc           #27
278: invokevirtual #24
281: dload         6
283: invokevirtual #28
286: ldc           #29
288: invokevirtual #24
291: ldc2_w        #87
294: invokevirtual #28
297: ldc           #27
299: invokevirtual #24
302: invokevirtual #26
305: dload         6
307: ldc2_w        #87
310: dcmpl
311: ifne          318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #32
322: new           #21
325: dup
326: invokespecial #22
329: ldc           #27
331: invokevirtual #24
334: dload         8
336: invokevirtual #28
339: ldc           #29
341: invokevirtual #24
344: ldc2_w        #45
347: invokevirtual #28
350: ldc           #27
352: invokevirtual #24
355: invokevirtual #26
358: dload         8
360: ldc2_w        #45
363: dcmpl
364: ifne          371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #32
375: new           #21
378: dup
379: invokespecial #22
382: ldc           #27
384: invokevirtual #24
387: iload         10
389: invokevirtual #40
392: ldc           #29
394: invokevirtual #24
397: iconst_0
398: invokevirtual #40
401: ldc           #27
403: invokevirtual #24
406: invokevirtual #26
409: iload         10
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #32
422: new           #21
425: dup
426: invokespecial #22
429: ldc           #27
431: invokevirtual #24
434: iload         11
436: invokevirtual #40
439: ldc           #29
441: invokevirtual #24
444: iconst_0
445: invokevirtual #40
448: ldc           #27
450: invokevirtual #24
453: invokevirtual #26
456: iload         11
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #32
469: aload         12
471: invokestatic  #77
474: new           #21
477: dup
478: invokespecial #22
481: ldc           #27
483: invokevirtual #24
486: dload         13
488: invokevirtual #28
491: ldc           #29
493: invokevirtual #24
496: ldc2_w        #47
499: invokevirtual #28
502: ldc           #27
504: invokevirtual #24
507: invokevirtual #26
510: dload         13
512: ldc2_w        #47
515: dcmpl
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #32
527: return
Exception table:
from    to  target type
103   120   123   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 1416
End line: 1436
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        double double13 = poissonDistributionImpl1.probability(0.31738700241670326d);
        double double15 = poissonDistributionImpl1.cumulativeProbability((int) (short) 100);
        double double16 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #336
80: invokevirtual #44
83: dstore        10
85: aload_1
86: bipush        100
88: invokevirtual #43
91: dstore        12
93: aload_1
94: invokevirtual #102
97: dstore        14
99: new           #21
102: dup
103: invokespecial #22
106: ldc           #27
108: invokevirtual #24
111: dload_2
112: invokevirtual #28
115: ldc           #29
117: invokevirtual #24
120: ldc2_w        #47
123: invokevirtual #28
126: ldc           #27
128: invokevirtual #24
131: invokevirtual #26
134: dload_2
135: ldc2_w        #47
138: dcmpl
139: ifne          146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #32
150: new           #21
153: dup
154: invokespecial #22
157: ldc           #27
159: invokevirtual #24
162: dload         4
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: dconst_1
173: invokevirtual #28
176: ldc           #27
178: invokevirtual #24
181: invokevirtual #26
184: dload         4
186: dconst_1
187: dcmpl
188: ifne          195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #32
199: new           #21
202: dup
203: invokespecial #22
206: ldc           #27
208: invokevirtual #24
211: iload         6
213: invokevirtual #40
216: ldc           #29
218: invokevirtual #24
221: ldc           #41
223: invokevirtual #40
226: ldc           #27
228: invokevirtual #24
231: invokevirtual #26
234: iload         6
236: ldc           #41
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #32
249: new           #21
252: dup
253: invokespecial #22
256: ldc           #27
258: invokevirtual #24
261: iload         7
263: invokevirtual #40
266: ldc           #29
268: invokevirtual #24
271: iconst_1
272: invokevirtual #40
275: ldc           #27
277: invokevirtual #24
280: invokevirtual #26
283: iload         7
285: iconst_1
286: if_icmpne     293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: dload         8
311: invokevirtual #28
314: ldc           #29
316: invokevirtual #24
319: dconst_0
320: invokevirtual #28
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: dload         8
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: new           #21
349: dup
350: invokespecial #22
353: ldc           #27
355: invokevirtual #24
358: dload         10
360: invokevirtual #28
363: ldc           #29
365: invokevirtual #24
368: dconst_0
369: invokevirtual #28
372: ldc           #27
374: invokevirtual #24
377: invokevirtual #26
380: dload         10
382: dconst_0
383: dcmpl
384: ifne          391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #32
395: new           #21
398: dup
399: invokespecial #22
402: ldc           #27
404: invokevirtual #24
407: dload         12
409: invokevirtual #28
412: ldc           #29
414: invokevirtual #24
417: dconst_1
418: invokevirtual #28
421: ldc           #27
423: invokevirtual #24
426: invokevirtual #26
429: dload         12
431: dconst_1
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #32
444: new           #21
447: dup
448: invokespecial #22
451: ldc           #27
453: invokevirtual #24
456: dload         14
458: invokevirtual #28
461: ldc           #29
463: invokevirtual #24
466: dconst_1
467: invokevirtual #28
470: ldc           #27
472: invokevirtual #24
475: invokevirtual #26
478: dload         14
480: dconst_1
481: dcmpl
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #32
493: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 1439
End line: 1453
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double8 = poissonDistributionImpl1.cumulativeProbability((-1.0870302912451684d), 0.47712125471966244d);
        double double9 = poissonDistributionImpl1.getMean();
        double double11 = poissonDistributionImpl1.cumulativeProbability(10000000);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #339
53: ldc2_w        #241
56: invokevirtual #12
59: dstore        6
61: aload_1
62: invokevirtual #102
65: dstore        8
67: aload_1
68: ldc           #225
70: invokevirtual #43
73: dstore        10
75: new           #21
78: dup
79: invokespecial #22
82: ldc           #27
84: invokevirtual #24
87: dload_2
88: invokevirtual #28
91: ldc           #29
93: invokevirtual #24
96: ldc2_w        #47
99: invokevirtual #28
102: ldc           #27
104: invokevirtual #24
107: invokevirtual #26
110: dload_2
111: ldc2_w        #47
114: dcmpl
115: ifne          122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #32
126: new           #21
129: dup
130: invokespecial #22
133: ldc           #27
135: invokevirtual #24
138: dload         4
140: invokevirtual #28
143: ldc           #29
145: invokevirtual #24
148: ldc2_w        #178
151: invokevirtual #28
154: ldc           #27
156: invokevirtual #24
159: invokevirtual #26
162: dload         4
164: ldc2_w        #178
167: dcmpl
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #32
179: new           #21
182: dup
183: invokespecial #22
186: ldc           #27
188: invokevirtual #24
191: dload         6
193: invokevirtual #28
196: ldc           #29
198: invokevirtual #24
201: ldc2_w        #45
204: invokevirtual #28
207: ldc           #27
209: invokevirtual #24
212: invokevirtual #26
215: dload         6
217: ldc2_w        #45
220: dcmpl
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #32
232: new           #21
235: dup
236: invokespecial #22
239: ldc           #27
241: invokevirtual #24
244: dload         8
246: invokevirtual #28
249: ldc           #29
251: invokevirtual #24
254: dconst_1
255: invokevirtual #28
258: ldc           #27
260: invokevirtual #24
263: invokevirtual #26
266: dload         8
268: dconst_1
269: dcmpl
270: ifne          277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #32
281: new           #21
284: dup
285: invokespecial #22
288: ldc           #27
290: invokevirtual #24
293: dload         10
295: invokevirtual #28
298: ldc           #29
300: invokevirtual #24
303: dconst_1
304: invokevirtual #28
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: dload         10
317: dconst_1
318: dcmpl
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #32
330: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 1456
End line: 1462
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d);
        java.lang.Class<?> wildcardClass2 = poissonDistributionImpl1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: invokespecial #9
35: astore_1
36: aload_1
37: invokevirtual #19
40: astore_2
41: aload_2
42: invokestatic  #77
45: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 1465
End line: 1499
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double18 = randomDataImpl5.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl20 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double22 = poissonDistributionImpl20.probability(100);
        double double24 = poissonDistributionImpl20.normalApproximateProbability(2147483647);
        double double27 = poissonDistributionImpl20.cumulativeProbability((int) (short) 10, 2147483647);
        double double29 = poissonDistributionImpl20.normalApproximateProbability((int) (byte) -1);
        int int30 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl20);
        double double33 = poissonDistributionImpl20.cumulativeProbability((int) (byte) 10, (int) ' ');
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 631.3954374438053d + "'", double7 == 631.3954374438053d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.32947338752667243d + "'", double18 == 0.32947338752667243d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.941866060050443E-159d + "'", double22 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.1142547828857374E-7d + "'", double27 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.06680720126885803d + "'", double29 == 0.06680720126885803d);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.1142547828857374E-7d + "'", double33 == 1.1142547828857374E-7d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #342
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #198
111: ldc2_w        #127
114: invokevirtual #200
117: dstore        15
119: new           #8
122: dup
123: dconst_1
124: invokespecial #9
127: astore        17
129: aload         17
131: bipush        100
133: invokevirtual #54
136: dstore        18
138: aload         17
140: ldc           #41
142: invokevirtual #63
145: dstore        20
147: aload         17
149: bipush        10
151: ldc           #41
153: invokevirtual #64
156: dstore        22
158: aload         17
160: iconst_m1
161: invokevirtual #63
164: dstore        24
166: aload         6
168: aload         17
170: invokevirtual #116
173: istore        26
175: aload         17
177: bipush        10
179: bipush        32
181: invokevirtual #64
184: dstore        27
186: new           #21
189: dup
190: invokespecial #22
193: ldc           #27
195: invokevirtual #24
198: dload_2
199: invokevirtual #28
202: ldc           #29
204: invokevirtual #24
207: dconst_0
208: invokevirtual #28
211: ldc           #27
213: invokevirtual #24
216: invokevirtual #26
219: dload_2
220: dconst_0
221: dcmpl
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #32
233: new           #21
236: dup
237: invokespecial #22
240: ldc           #27
242: invokevirtual #24
245: dload         4
247: invokevirtual #28
250: ldc           #29
252: invokevirtual #24
255: ldc2_w        #118
258: invokevirtual #28
261: ldc           #27
263: invokevirtual #24
266: invokevirtual #26
269: dload         4
271: ldc2_w        #118
274: dcmpl
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #32
286: aload         6
288: invokestatic  #77
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: dload         10
305: invokevirtual #28
308: ldc           #29
310: invokevirtual #24
313: ldc2_w        #47
316: invokevirtual #28
319: ldc           #27
321: invokevirtual #24
324: invokevirtual #26
327: dload         10
329: ldc2_w        #47
332: dcmpl
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #32
344: new           #21
347: dup
348: invokespecial #22
351: ldc           #27
353: invokevirtual #24
356: dload         12
358: invokevirtual #28
361: ldc           #29
363: invokevirtual #24
366: dconst_1
367: invokevirtual #28
370: ldc           #27
372: invokevirtual #24
375: invokevirtual #26
378: dload         12
380: dconst_1
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #32
393: new           #21
396: dup
397: invokespecial #22
400: ldc           #27
402: invokevirtual #24
405: dload         18
407: invokevirtual #28
410: ldc           #29
412: invokevirtual #24
415: ldc2_w        #47
418: invokevirtual #28
421: ldc           #27
423: invokevirtual #24
426: invokevirtual #26
429: dload         18
431: ldc2_w        #47
434: dcmpl
435: ifne          442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #32
446: new           #21
449: dup
450: invokespecial #22
453: ldc           #27
455: invokevirtual #24
458: dload         20
460: invokevirtual #28
463: ldc           #29
465: invokevirtual #24
468: dconst_1
469: invokevirtual #28
472: ldc           #27
474: invokevirtual #24
477: invokevirtual #26
480: dload         20
482: dconst_1
483: dcmpl
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #32
495: new           #21
498: dup
499: invokespecial #22
502: ldc           #27
504: invokevirtual #24
507: dload         22
509: invokevirtual #28
512: ldc           #29
514: invokevirtual #24
517: ldc2_w        #69
520: invokevirtual #28
523: ldc           #27
525: invokevirtual #24
528: invokevirtual #26
531: dload         22
533: ldc2_w        #69
536: dcmpl
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #32
548: new           #21
551: dup
552: invokespecial #22
555: ldc           #27
557: invokevirtual #24
560: dload         24
562: invokevirtual #28
565: ldc           #29
567: invokevirtual #24
570: ldc2_w        #87
573: invokevirtual #28
576: ldc           #27
578: invokevirtual #24
581: invokevirtual #26
584: dload         24
586: ldc2_w        #87
589: dcmpl
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #32
601: new           #21
604: dup
605: invokespecial #22
608: ldc           #27
610: invokevirtual #24
613: dload         27
615: invokevirtual #28
618: ldc           #29
620: invokevirtual #24
623: ldc2_w        #69
626: invokevirtual #28
629: ldc           #27
631: invokevirtual #24
634: invokevirtual #26
637: dload         27
639: ldc2_w        #69
642: dcmpl
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #32
654: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 1502
End line: 1510
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6564770073333787d, (-0.7534689855041378d), (int) (short) 100);
        int int5 = poissonDistributionImpl3.getDomainUpperBound(0.4003827058782961d);
        int int6 = poissonDistributionImpl3.sample();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #230
32: ldc2_w        #175
35: bipush        100
37: invokespecial #97
40: astore_1
41: aload_1
42: ldc2_w        #344
45: invokevirtual #34
48: istore_2
49: aload_1
50: invokevirtual #61
53: istore_3
54: new           #21
57: dup
58: invokespecial #22
61: ldc           #27
63: invokevirtual #24
66: iload_2
67: invokevirtual #40
70: ldc           #29
72: invokevirtual #24
75: ldc           #41
77: invokevirtual #40
80: ldc           #27
82: invokevirtual #24
85: invokevirtual #26
88: iload_2
89: ldc           #41
91: if_icmpne     98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #32
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 1513
End line: 1530
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        double double4 = randomDataImpl1.nextUniform((-0.12296910173947198d), 0.38027637262405517d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl8 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6564770073333787d, (-0.7534689855041378d), (int) (short) 100);
        double double10 = poissonDistributionImpl8.normalApproximateProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.FunctionEvaluationException; message: maximal number of iterations (100) exceeded");
        } catch (org.apache.commons.math.FunctionEvaluationException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.2779126769758983d + "'", double4 == 0.2779126769758983d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.4234301409057203d + "'", double10 == 0.4234301409057203d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #346
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: aload_2
37: ldc2_w        #249
40: ldc2_w        #349
43: invokevirtual #351
46: dstore_3
47: new           #8
50: dup
51: ldc2_w        #230
54: ldc2_w        #175
57: bipush        100
59: invokespecial #97
62: astore        5
64: aload         5
66: iconst_0
67: invokevirtual #63
70: dstore        6
72: aload_2
73: aload         5
75: invokevirtual #116
78: istore        8
80: ldc_w         #352
83: invokestatic  #17
86: goto          91
89: astore        8
91: new           #21
94: dup
95: invokespecial #22
98: ldc           #27
100: invokevirtual #24
103: dload         6
105: invokevirtual #28
108: ldc           #29
110: invokevirtual #24
113: ldc2_w        #309
116: invokevirtual #28
119: ldc           #27
121: invokevirtual #24
124: invokevirtual #26
127: dload         6
129: ldc2_w        #309
132: dcmpl
133: ifne          140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #32
144: return
Exception table:
from    to  target type
72    86    89   Class org/apache/commons/math/FunctionEvaluationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 1533
End line: 1547
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        double double12 = poissonDistributionImpl1.cumulativeProbability(0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #354
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: iconst_0
66: invokevirtual #43
69: dstore        10
71: new           #21
74: dup
75: invokespecial #22
78: ldc           #27
80: invokevirtual #24
83: dload_2
84: invokevirtual #28
87: ldc           #29
89: invokevirtual #24
92: ldc2_w        #30
95: invokevirtual #28
98: ldc           #27
100: invokevirtual #24
103: invokevirtual #26
106: dload_2
107: ldc2_w        #30
110: dcmpl
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #32
122: new           #21
125: dup
126: invokespecial #22
129: ldc           #27
131: invokevirtual #24
134: dload         4
136: invokevirtual #28
139: ldc           #29
141: invokevirtual #24
144: ldc2_w        #45
147: invokevirtual #28
150: ldc           #27
152: invokevirtual #24
155: invokevirtual #26
158: dload         4
160: ldc2_w        #45
163: dcmpl
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #32
175: new           #21
178: dup
179: invokespecial #22
182: ldc           #27
184: invokevirtual #24
187: dload         6
189: invokevirtual #28
192: ldc           #29
194: invokevirtual #24
197: ldc2_w        #87
200: invokevirtual #28
203: ldc           #27
205: invokevirtual #24
208: invokevirtual #26
211: dload         6
213: ldc2_w        #87
216: dcmpl
217: ifne          224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #32
228: new           #21
231: dup
232: invokespecial #22
235: ldc           #27
237: invokevirtual #24
240: dload         8
242: invokevirtual #28
245: ldc           #29
247: invokevirtual #24
250: ldc2_w        #45
253: invokevirtual #28
256: ldc           #27
258: invokevirtual #24
261: invokevirtual #26
264: dload         8
266: ldc2_w        #45
269: dcmpl
270: ifne          277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #32
281: new           #21
284: dup
285: invokespecial #22
288: ldc           #27
290: invokevirtual #24
293: dload         10
295: invokevirtual #28
298: ldc           #29
300: invokevirtual #24
303: ldc2_w        #45
306: invokevirtual #28
309: ldc           #27
311: invokevirtual #24
314: invokevirtual #26
317: dload         10
319: ldc2_w        #45
322: dcmpl
323: ifne          330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #32
334: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 1550
End line: 1562
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(1.555184193015085d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.7357588823428858d + "'", double10 == 0.7357588823428858d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #355
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: ldc2_w        #356
61: invokevirtual #141
64: dstore        8
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #30
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #30
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #45
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload         4
155: ldc2_w        #45
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #32
170: new           #21
173: dup
174: invokespecial #22
177: ldc           #27
179: invokevirtual #24
182: dload         6
184: invokevirtual #28
187: ldc           #29
189: invokevirtual #24
192: ldc2_w        #87
195: invokevirtual #28
198: ldc           #27
200: invokevirtual #24
203: invokevirtual #26
206: dload         6
208: ldc2_w        #87
211: dcmpl
212: ifne          219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #32
223: new           #21
226: dup
227: invokespecial #22
230: ldc           #27
232: invokevirtual #24
235: dload         8
237: invokevirtual #28
240: ldc           #29
242: invokevirtual #24
245: ldc2_w        #187
248: invokevirtual #28
251: ldc           #27
253: invokevirtual #24
256: invokevirtual #26
259: dload         8
261: ldc2_w        #187
264: dcmpl
265: ifne          272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #32
276: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 1565
End line: 1575
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.0d, 7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: bipush        7
32: invokespecial #50
35: astore_1
36: ldc           #51
38: invokestatic  #17
41: goto          45
44: astore_1
45: return
Exception table:
from    to  target type
25    41    44   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 1578
End line: 1589
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(0);
        int int6 = poissonDistributionImpl2.getDomainLowerBound(1.6406870697463487d);
        int[] intArray8 = poissonDistributionImpl2.sample(0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #63
42: dstore_2
43: aload_1
44: ldc2_w        #360
47: invokevirtual #139
50: istore        4
52: aload_1
53: iconst_0
54: invokevirtual #184
57: astore        5
59: new           #21
62: dup
63: invokespecial #22
66: ldc           #27
68: invokevirtual #24
71: dload_2
72: invokevirtual #28
75: ldc           #29
77: invokevirtual #24
80: dconst_0
81: invokevirtual #28
84: ldc           #27
86: invokevirtual #24
89: invokevirtual #26
92: dload_2
93: dconst_0
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: iload         4
120: invokevirtual #40
123: ldc           #29
125: invokevirtual #24
128: iconst_0
129: invokevirtual #40
132: ldc           #27
134: invokevirtual #24
137: invokevirtual #26
140: iload         4
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #32
153: aload         5
155: invokestatic  #77
158: aload         5
160: invokestatic  #362
163: ldc_w         #363
166: invokestatic  #364
169: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 1592
End line: 1619
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double20 = poissonDistributionImpl9.cumulativeProbability(0.0d, 0.0d);
        double double22 = poissonDistributionImpl9.cumulativeProbability((int) (byte) 10);
        int int24 = poissonDistributionImpl9.inverseCumulativeProbability(0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 553.9141611695554d + "'", double7 == 553.9141611695554d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.36787944117146065d + "'", double20 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9999999899522336d + "'", double22 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #365
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: dconst_0
118: dconst_0
119: invokevirtual #12
122: dstore        17
124: aload         9
126: bipush        10
128: invokevirtual #43
131: dstore        19
133: aload         9
135: ldc2_w        #45
138: invokevirtual #15
141: istore        21
143: new           #21
146: dup
147: invokespecial #22
150: ldc           #27
152: invokevirtual #24
155: dload_2
156: invokevirtual #28
159: ldc           #29
161: invokevirtual #24
164: dconst_0
165: invokevirtual #28
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: dload_2
177: dconst_0
178: dcmpl
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #32
190: new           #21
193: dup
194: invokespecial #22
197: ldc           #27
199: invokevirtual #24
202: dload         4
204: invokevirtual #28
207: ldc           #29
209: invokevirtual #24
212: ldc2_w        #118
215: invokevirtual #28
218: ldc           #27
220: invokevirtual #24
223: invokevirtual #26
226: dload         4
228: ldc2_w        #118
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: aload         6
245: invokestatic  #77
248: new           #21
251: dup
252: invokespecial #22
255: ldc           #27
257: invokevirtual #24
260: dload         10
262: invokevirtual #28
265: ldc           #29
267: invokevirtual #24
270: ldc2_w        #47
273: invokevirtual #28
276: ldc           #27
278: invokevirtual #24
281: invokevirtual #26
284: dload         10
286: ldc2_w        #47
289: dcmpl
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #32
301: new           #21
304: dup
305: invokespecial #22
308: ldc           #27
310: invokevirtual #24
313: dload         12
315: invokevirtual #28
318: ldc           #29
320: invokevirtual #24
323: dconst_1
324: invokevirtual #28
327: ldc           #27
329: invokevirtual #24
332: invokevirtual #26
335: dload         12
337: dconst_1
338: dcmpl
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #32
350: new           #21
353: dup
354: invokespecial #22
357: ldc           #27
359: invokevirtual #24
362: dload         15
364: invokevirtual #28
367: ldc           #29
369: invokevirtual #24
372: dconst_1
373: invokevirtual #28
376: ldc           #27
378: invokevirtual #24
381: invokevirtual #26
384: dload         15
386: dconst_1
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: new           #21
402: dup
403: invokespecial #22
406: ldc           #27
408: invokevirtual #24
411: dload         17
413: invokevirtual #28
416: ldc           #29
418: invokevirtual #24
421: ldc2_w        #45
424: invokevirtual #28
427: ldc           #27
429: invokevirtual #24
432: invokevirtual #26
435: dload         17
437: ldc2_w        #45
440: dcmpl
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #32
452: new           #21
455: dup
456: invokespecial #22
459: ldc           #27
461: invokevirtual #24
464: dload         19
466: invokevirtual #28
469: ldc           #29
471: invokevirtual #24
474: ldc2_w        #178
477: invokevirtual #28
480: ldc           #27
482: invokevirtual #24
485: invokevirtual #26
488: dload         19
490: ldc2_w        #178
493: dcmpl
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #32
505: new           #21
508: dup
509: invokespecial #22
512: ldc           #27
514: invokevirtual #24
517: iload         21
519: invokevirtual #40
522: ldc           #29
524: invokevirtual #24
527: iconst_0
528: invokevirtual #40
531: ldc           #27
533: invokevirtual #24
536: invokevirtual #26
539: iload         21
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #32
552: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 1622
End line: 1644
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        // The following exception was thrown during execution in test generation
        try {
            double double13 = poissonDistributionImpl1.cumulativeProbability((-0.9730869162075215d), (double) (short) -1);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #367
72: ldc2_w        #142
75: invokevirtual #12
78: dstore        10
80: ldc           #16
82: invokestatic  #17
85: goto          130
88: astore        10
90: aload         10
92: invokevirtual #19
95: invokevirtual #20
98: ifne          130
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #23
110: invokevirtual #24
113: aload         10
115: invokevirtual #19
118: invokevirtual #25
121: invokevirtual #24
124: invokevirtual #26
127: invokestatic  #17
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: dload_2
143: invokevirtual #28
146: ldc           #29
148: invokevirtual #24
151: ldc2_w        #47
154: invokevirtual #28
157: ldc           #27
159: invokevirtual #24
162: invokevirtual #26
165: dload_2
166: ldc2_w        #47
169: dcmpl
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: new           #21
184: dup
185: invokespecial #22
188: ldc           #27
190: invokevirtual #24
193: dload         4
195: invokevirtual #28
198: ldc           #29
200: invokevirtual #24
203: dconst_1
204: invokevirtual #28
207: ldc           #27
209: invokevirtual #24
212: invokevirtual #26
215: dload         4
217: dconst_1
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: dload         6
244: invokevirtual #28
247: ldc           #29
249: invokevirtual #24
252: ldc2_w        #69
255: invokevirtual #28
258: ldc           #27
260: invokevirtual #24
263: invokevirtual #26
266: dload         6
268: ldc2_w        #69
271: dcmpl
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #32
283: new           #21
286: dup
287: invokespecial #22
290: ldc           #27
292: invokevirtual #24
295: dload         8
297: invokevirtual #28
300: ldc           #29
302: invokevirtual #24
305: dconst_0
306: invokevirtual #28
309: ldc           #27
311: invokevirtual #24
314: invokevirtual #26
317: dload         8
319: dconst_0
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: return
Exception table:
from    to  target type
68    85    88   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 1647
End line: 1651
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(100.31196146694707d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #370
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 1654
End line: 1664
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int3 = poissonDistributionImpl1.getDomainUpperBound((double) (short) 0);
        double double4 = poissonDistributionImpl1.getMean();
        double double5 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #34
39: istore_2
40: aload_1
41: invokevirtual #102
44: dstore_3
45: aload_1
46: invokevirtual #102
49: dstore        5
51: new           #21
54: dup
55: invokespecial #22
58: ldc           #27
60: invokevirtual #24
63: iload_2
64: invokevirtual #40
67: ldc           #29
69: invokevirtual #24
72: ldc           #41
74: invokevirtual #40
77: ldc           #27
79: invokevirtual #24
82: invokevirtual #26
85: iload_2
86: ldc           #41
88: if_icmpne     95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #32
99: new           #21
102: dup
103: invokespecial #22
106: ldc           #27
108: invokevirtual #24
111: dload_3
112: invokevirtual #28
115: ldc           #29
117: invokevirtual #24
120: dconst_1
121: invokevirtual #28
124: ldc           #27
126: invokevirtual #24
129: invokevirtual #26
132: dload_3
133: dconst_1
134: dcmpl
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #32
146: new           #21
149: dup
150: invokespecial #22
153: ldc           #27
155: invokevirtual #24
158: dload         5
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: dconst_1
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload         5
182: dconst_1
183: dcmpl
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #32
195: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 1667
End line: 1686
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        double double17 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #373
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: invokevirtual #102
93: dstore        12
95: new           #21
98: dup
99: invokespecial #22
102: ldc           #27
104: invokevirtual #24
107: dload_2
108: invokevirtual #28
111: ldc           #29
113: invokevirtual #24
116: ldc2_w        #30
119: invokevirtual #28
122: ldc           #27
124: invokevirtual #24
127: invokevirtual #26
130: dload_2
131: ldc2_w        #30
134: dcmpl
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #32
146: new           #21
149: dup
150: invokespecial #22
153: ldc           #27
155: invokevirtual #24
158: dload         4
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: ldc2_w        #45
171: invokevirtual #28
174: ldc           #27
176: invokevirtual #24
179: invokevirtual #26
182: dload         4
184: ldc2_w        #45
187: dcmpl
188: ifne          195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #32
199: new           #21
202: dup
203: invokespecial #22
206: ldc           #27
208: invokevirtual #24
211: dload         6
213: invokevirtual #28
216: ldc           #29
218: invokevirtual #24
221: ldc2_w        #87
224: invokevirtual #28
227: ldc           #27
229: invokevirtual #24
232: invokevirtual #26
235: dload         6
237: ldc2_w        #87
240: dcmpl
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #32
252: new           #21
255: dup
256: invokespecial #22
259: ldc           #27
261: invokevirtual #24
264: dload         8
266: invokevirtual #28
269: ldc           #29
271: invokevirtual #24
274: ldc2_w        #45
277: invokevirtual #28
280: ldc           #27
282: invokevirtual #24
285: invokevirtual #26
288: dload         8
290: ldc2_w        #45
293: dcmpl
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: iload         10
319: invokevirtual #40
322: ldc           #29
324: invokevirtual #24
327: iconst_0
328: invokevirtual #40
331: ldc           #27
333: invokevirtual #24
336: invokevirtual #26
339: iload         10
341: ifne          348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #32
352: new           #21
355: dup
356: invokespecial #22
359: ldc           #27
361: invokevirtual #24
364: iload         11
366: invokevirtual #40
369: ldc           #29
371: invokevirtual #24
374: iconst_0
375: invokevirtual #40
378: ldc           #27
380: invokevirtual #24
383: invokevirtual #26
386: iload         11
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: new           #21
402: dup
403: invokespecial #22
406: ldc           #27
408: invokevirtual #24
411: dload         12
413: invokevirtual #28
416: ldc           #29
418: invokevirtual #24
421: dconst_1
422: invokevirtual #28
425: ldc           #27
427: invokevirtual #24
430: invokevirtual #26
433: dload         12
435: dconst_1
436: dcmpl
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #32
448: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 1689
End line: 1712
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        long long12 = randomDataImpl7.nextPoisson(42.879806762648634d);
        // The following exception was thrown during execution in test generation
        try {
            long long15 = randomDataImpl7.nextSecureLong(69L, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 69 is larger than, or equal to, the maximum (-1): lower bound (69) must be strictly less than upper bound (-1)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.0878348688495327d + "'", double10 == 2.0878348688495327d);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 38L + "'", long12 == 38L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: ldc2_w        #379
78: invokevirtual #92
81: lstore        9
83: aload         6
85: ldc2_w        #381
88: ldc2_w        #121
91: invokevirtual #84
94: lstore        11
96: ldc_w         #383
99: invokestatic  #17
102: goto          107
105: astore        11
107: new           #21
110: dup
111: invokespecial #22
114: ldc           #27
116: invokevirtual #24
119: dload_2
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: ldc2_w        #47
131: invokevirtual #28
134: ldc           #27
136: invokevirtual #24
139: invokevirtual #26
142: dload_2
143: ldc2_w        #47
146: dcmpl
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #32
158: aload         4
160: invokestatic  #77
163: new           #21
166: dup
167: invokespecial #22
170: ldc           #27
172: invokevirtual #24
175: iload         5
177: invokevirtual #40
180: ldc           #29
182: invokevirtual #24
185: iconst_m1
186: invokevirtual #40
189: ldc           #27
191: invokevirtual #24
194: invokevirtual #26
197: iload         5
199: iconst_m1
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #32
211: aload         6
213: invokestatic  #77
216: return
Exception table:
from    to  target type
83   102   105   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 1715
End line: 1741
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = poissonDistributionImpl1.inverseCumulativeProbability((-2.0350218741518478d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #384
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload_1
81: ldc2_w        #385
84: invokevirtual #15
87: istore        13
89: ldc           #16
91: invokestatic  #17
94: goto          139
97: astore        13
99: aload         13
101: invokevirtual #19
104: invokevirtual #20
107: ifne          139
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #23
119: invokevirtual #24
122: aload         13
124: invokevirtual #19
127: invokevirtual #25
130: invokevirtual #24
133: invokevirtual #26
136: invokestatic  #17
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload_2
152: invokevirtual #28
155: ldc           #29
157: invokevirtual #24
160: ldc2_w        #30
163: invokevirtual #28
166: ldc           #27
168: invokevirtual #24
171: invokevirtual #26
174: dload_2
175: ldc2_w        #30
178: dcmpl
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #32
190: new           #21
193: dup
194: invokespecial #22
197: ldc           #27
199: invokevirtual #24
202: dload         4
204: invokevirtual #28
207: ldc           #29
209: invokevirtual #24
212: ldc2_w        #45
215: invokevirtual #28
218: ldc           #27
220: invokevirtual #24
223: invokevirtual #26
226: dload         4
228: ldc2_w        #45
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: dload         6
257: invokevirtual #28
260: ldc           #29
262: invokevirtual #24
265: ldc2_w        #87
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         6
281: ldc2_w        #87
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: dload         8
310: invokevirtual #28
313: ldc           #29
315: invokevirtual #24
318: dconst_1
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         8
332: dconst_1
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: new           #21
348: dup
349: invokespecial #22
352: ldc           #27
354: invokevirtual #24
357: dload         10
359: invokevirtual #28
362: ldc           #29
364: invokevirtual #24
367: ldc2_w        #47
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         10
383: ldc2_w        #47
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #32
398: aload         12
400: invokestatic  #77
403: return
Exception table:
from    to  target type
80    94    97   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 1744
End line: 1757
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        poissonDistributionImpl1.reseedRandomGenerator(0L);
        int int9 = poissonDistributionImpl1.sample();
        int int10 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: lconst_0
53: invokevirtual #157
56: aload_1
57: invokevirtual #61
60: istore        6
62: aload_1
63: invokevirtual #61
66: istore        7
68: new           #21
71: dup
72: invokespecial #22
75: ldc           #27
77: invokevirtual #24
80: dload_2
81: invokevirtual #28
84: ldc           #29
86: invokevirtual #24
89: ldc2_w        #47
92: invokevirtual #28
95: ldc           #27
97: invokevirtual #24
100: invokevirtual #26
103: dload_2
104: ldc2_w        #47
107: dcmpl
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #32
119: new           #21
122: dup
123: invokespecial #22
126: ldc           #27
128: invokevirtual #24
131: dload         4
133: invokevirtual #28
136: ldc           #29
138: invokevirtual #24
141: dconst_1
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload         4
155: dconst_1
156: dcmpl
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #32
168: new           #21
171: dup
172: invokespecial #22
175: ldc           #27
177: invokevirtual #24
180: iload         6
182: invokevirtual #40
185: ldc           #29
187: invokevirtual #24
190: iconst_1
191: invokevirtual #40
194: ldc           #27
196: invokevirtual #24
199: invokevirtual #26
202: iload         6
204: iconst_1
205: if_icmpne     212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #32
216: new           #21
219: dup
220: invokespecial #22
223: ldc           #27
225: invokevirtual #24
228: iload         7
230: invokevirtual #40
233: ldc           #29
235: invokevirtual #24
238: iconst_1
239: invokevirtual #40
242: ldc           #27
244: invokevirtual #24
247: invokevirtual #26
250: iload         7
252: iconst_1
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #32
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 1760
End line: 1773
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        poissonDistributionImpl1.reseedRandomGenerator(0L);
        double double10 = poissonDistributionImpl1.probability(0);
        int int12 = poissonDistributionImpl1.getDomainUpperBound(116.25481454655774d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117144233d + "'", double10 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #388
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: lconst_0
53: invokevirtual #157
56: aload_1
57: iconst_0
58: invokevirtual #54
61: dstore        6
63: aload_1
64: ldc2_w        #389
67: invokevirtual #34
70: istore        8
72: new           #21
75: dup
76: invokespecial #22
79: ldc           #27
81: invokevirtual #24
84: dload_2
85: invokevirtual #28
88: ldc           #29
90: invokevirtual #24
93: ldc2_w        #47
96: invokevirtual #28
99: ldc           #27
101: invokevirtual #24
104: invokevirtual #26
107: dload_2
108: ldc2_w        #47
111: dcmpl
112: ifne          119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #32
123: new           #21
126: dup
127: invokespecial #22
130: ldc           #27
132: invokevirtual #24
135: dload         4
137: invokevirtual #28
140: ldc           #29
142: invokevirtual #24
145: dconst_1
146: invokevirtual #28
149: ldc           #27
151: invokevirtual #24
154: invokevirtual #26
157: dload         4
159: dconst_1
160: dcmpl
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #32
172: new           #21
175: dup
176: invokespecial #22
179: ldc           #27
181: invokevirtual #24
184: dload         6
186: invokevirtual #28
189: ldc           #29
191: invokevirtual #24
194: ldc2_w        #168
197: invokevirtual #28
200: ldc           #27
202: invokevirtual #24
205: invokevirtual #26
208: dload         6
210: ldc2_w        #168
213: dcmpl
214: ifne          221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #32
225: new           #21
228: dup
229: invokespecial #22
232: ldc           #27
234: invokevirtual #24
237: iload         8
239: invokevirtual #40
242: ldc           #29
244: invokevirtual #24
247: ldc           #41
249: invokevirtual #40
252: ldc           #27
254: invokevirtual #24
257: invokevirtual #26
260: iload         8
262: ldc           #41
264: if_icmpne     271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #32
275: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 1776
End line: 1810
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        randomDataImpl5.reSeedSecure((long) (byte) 1);
        int int15 = randomDataImpl5.nextZipf(3, 0.4849214332324801d);
        long long18 = randomDataImpl5.nextSecureLong((long) (short) 0, (long) 1);
        randomDataImpl5.reSeed();
        long long22 = randomDataImpl5.nextLong((long) (-1), 2L);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl24 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double26 = poissonDistributionImpl24.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl27 = poissonDistributionImpl24.randomData;
        int int29 = poissonDistributionImpl24.inverseCumulativeProbability(0.0d);
        int int30 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl24);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.10774786703015163d + "'", double10 == 0.10774786703015163d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 3.941866060050443E-159d + "'", double26 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #391
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: invokevirtual #394
101: aload         6
103: iconst_3
104: ldc2_w        #395
107: invokevirtual #397
110: istore        14
112: aload         6
114: lconst_0
115: lconst_1
116: invokevirtual #84
119: lstore        15
121: aload         6
123: invokevirtual #398
126: aload         6
128: ldc2_w        #121
131: ldc2_w        #399
134: invokevirtual #123
137: lstore        17
139: new           #8
142: dup
143: dconst_1
144: invokespecial #9
147: astore        19
149: aload         19
151: bipush        100
153: invokevirtual #54
156: dstore        20
158: aload         19
160: getfield      #72
163: astore        22
165: aload         19
167: dconst_0
168: invokevirtual #15
171: istore        23
173: aload         6
175: aload         19
177: invokevirtual #116
180: istore        24
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: dload_2
195: invokevirtual #28
198: ldc           #29
200: invokevirtual #24
203: dconst_0
204: invokevirtual #28
207: ldc           #27
209: invokevirtual #24
212: invokevirtual #26
215: dload_2
216: dconst_0
217: dcmpl
218: ifne          225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #32
229: new           #21
232: dup
233: invokespecial #22
236: ldc           #27
238: invokevirtual #24
241: dload         4
243: invokevirtual #28
246: ldc           #29
248: invokevirtual #24
251: ldc2_w        #118
254: invokevirtual #28
257: ldc           #27
259: invokevirtual #24
262: invokevirtual #26
265: dload         4
267: ldc2_w        #118
270: dcmpl
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #32
282: aload         6
284: invokestatic  #77
287: new           #21
290: dup
291: invokespecial #22
294: ldc           #27
296: invokevirtual #24
299: dload         8
301: invokevirtual #28
304: ldc           #29
306: invokevirtual #24
309: dconst_0
310: invokevirtual #28
313: ldc           #27
315: invokevirtual #24
318: invokevirtual #26
321: dload         8
323: dconst_0
324: dcmpl
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #32
336: new           #21
339: dup
340: invokespecial #22
343: ldc           #27
345: invokevirtual #24
348: dload         10
350: invokevirtual #28
353: ldc           #29
355: invokevirtual #24
358: dconst_0
359: invokevirtual #28
362: ldc           #27
364: invokevirtual #24
367: invokevirtual #26
370: dload         10
372: dconst_0
373: dcmpl
374: ifne          381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #32
385: new           #21
388: dup
389: invokespecial #22
392: ldc           #27
394: invokevirtual #24
397: dload         20
399: invokevirtual #28
402: ldc           #29
404: invokevirtual #24
407: ldc2_w        #47
410: invokevirtual #28
413: ldc           #27
415: invokevirtual #24
418: invokevirtual #26
421: dload         20
423: ldc2_w        #47
426: dcmpl
427: ifne          434
430: iconst_1
431: goto          435
434: iconst_0
435: invokestatic  #32
438: aload         22
440: invokestatic  #77
443: new           #21
446: dup
447: invokespecial #22
450: ldc           #27
452: invokevirtual #24
455: iload         23
457: invokevirtual #40
460: ldc           #29
462: invokevirtual #24
465: iconst_m1
466: invokevirtual #40
469: ldc           #27
471: invokevirtual #24
474: invokevirtual #26
477: iload         23
479: iconst_m1
480: if_icmpne     487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #32
491: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 1813
End line: 1831
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound((-0.7531344911940551d));
        double double15 = poissonDistributionImpl1.cumulativeProbability(3.04148991607407d, (double) 30L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.01898815687615274d + "'", double15 == 0.01898815687615274d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #401
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #402
77: invokevirtual #139
80: istore        9
82: aload_1
83: ldc2_w        #404
86: ldc2_w        #406
89: invokevirtual #12
92: dstore        10
94: new           #21
97: dup
98: invokespecial #22
101: ldc           #27
103: invokevirtual #24
106: dload_2
107: invokevirtual #28
110: ldc           #29
112: invokevirtual #24
115: ldc2_w        #47
118: invokevirtual #28
121: ldc           #27
123: invokevirtual #24
126: invokevirtual #26
129: dload_2
130: ldc2_w        #47
133: dcmpl
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #32
145: new           #21
148: dup
149: invokespecial #22
152: ldc           #27
154: invokevirtual #24
157: dload         4
159: invokevirtual #28
162: ldc           #29
164: invokevirtual #24
167: dconst_1
168: invokevirtual #28
171: ldc           #27
173: invokevirtual #24
176: invokevirtual #26
179: dload         4
181: dconst_1
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: iload         6
208: invokevirtual #40
211: ldc           #29
213: invokevirtual #24
216: ldc           #41
218: invokevirtual #40
221: ldc           #27
223: invokevirtual #24
226: invokevirtual #26
229: iload         6
231: ldc           #41
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #32
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: iload         7
258: invokevirtual #40
261: ldc           #29
263: invokevirtual #24
266: iconst_0
267: invokevirtual #40
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: iload         7
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #32
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: iload         9
305: invokevirtual #40
308: ldc           #29
310: invokevirtual #24
313: iconst_0
314: invokevirtual #40
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: iload         9
327: ifne          334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #32
338: new           #21
341: dup
342: invokespecial #22
345: ldc           #27
347: invokevirtual #24
350: dload         10
352: invokevirtual #28
355: ldc           #29
357: invokevirtual #24
360: ldc2_w        #408
363: invokevirtual #28
366: ldc           #27
368: invokevirtual #24
371: invokevirtual #26
374: dload         10
376: ldc2_w        #408
379: dcmpl
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #32
391: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 1834
End line: 1844
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-27.889356548750253d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -27.889 is smaller than, or equal to, the minimum (0): mean (-27.889)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #411
32: invokespecial #9
35: astore_1
36: ldc_w         #413
39: invokestatic  #17
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 1847
End line: 1855
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d);
        double double3 = poissonDistributionImpl1.normalApproximateProbability((int) (short) -1);
        double double5 = poissonDistributionImpl1.probability(10);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.07864960352514244d + "'", double3 == 0.07864960352514244d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.632261621956627E-10d + "'", double5 == 1.632261621956627E-10d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #414
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: invokespecial #9
35: astore_1
36: aload_1
37: iconst_m1
38: invokevirtual #63
41: dstore_2
42: aload_1
43: bipush        10
45: invokevirtual #54
48: dstore        4
50: new           #21
53: dup
54: invokespecial #22
57: ldc           #27
59: invokevirtual #24
62: dload_2
63: invokevirtual #28
66: ldc           #29
68: invokevirtual #24
71: ldc2_w        #415
74: invokevirtual #28
77: ldc           #27
79: invokevirtual #24
82: invokevirtual #26
85: dload_2
86: ldc2_w        #415
89: dcmpl
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #32
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload         4
115: invokevirtual #28
118: ldc           #29
120: invokevirtual #24
123: ldc2_w        #417
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload         4
139: ldc2_w        #417
142: dcmpl
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #32
154: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 1858
End line: 1876
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        int int4 = poissonDistributionImpl1.sample();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl1.cumulativeProbability(1565197, 12);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #419
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: invokevirtual #61
45: istore        4
47: aload_1
48: ldc_w         #420
51: bipush        12
53: invokevirtual #64
56: dstore        5
58: ldc           #16
60: invokestatic  #17
63: goto          108
66: astore        5
68: aload         5
70: invokevirtual #19
73: invokevirtual #20
76: ifne          108
79: new           #21
82: dup
83: invokespecial #22
86: ldc           #23
88: invokevirtual #24
91: aload         5
93: invokevirtual #19
96: invokevirtual #25
99: invokevirtual #24
102: invokevirtual #26
105: invokestatic  #17
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload_2
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #47
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload_2
144: ldc2_w        #47
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: return
Exception table:
from    to  target type
47    63    66   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 1879
End line: 1891
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double7 = poissonDistributionImpl1.getMean();
        double double9 = poissonDistributionImpl1.probability(66);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 6.758204490611066E-94d + "'", double9 == 6.758204490611066E-94d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: invokevirtual #102
55: dstore        6
57: aload_1
58: bipush        66
60: invokevirtual #54
63: dstore        8
65: new           #21
68: dup
69: invokespecial #22
72: ldc           #27
74: invokevirtual #24
77: dload_2
78: invokevirtual #28
81: ldc           #29
83: invokevirtual #24
86: ldc2_w        #47
89: invokevirtual #28
92: ldc           #27
94: invokevirtual #24
97: invokevirtual #26
100: dload_2
101: ldc2_w        #47
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #32
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #27
125: invokevirtual #24
128: dload         4
130: invokevirtual #28
133: ldc           #29
135: invokevirtual #24
138: dconst_1
139: invokevirtual #28
142: ldc           #27
144: invokevirtual #24
147: invokevirtual #26
150: dload         4
152: dconst_1
153: dcmpl
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #32
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: dload         6
179: invokevirtual #28
182: ldc           #29
184: invokevirtual #24
187: dconst_1
188: invokevirtual #28
191: ldc           #27
193: invokevirtual #24
196: invokevirtual #26
199: dload         6
201: dconst_1
202: dcmpl
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #32
214: new           #21
217: dup
218: invokespecial #22
221: ldc           #27
223: invokevirtual #24
226: dload         8
228: invokevirtual #28
231: ldc           #29
233: invokevirtual #24
236: ldc2_w        #422
239: invokevirtual #28
242: ldc           #27
244: invokevirtual #24
247: invokevirtual #26
250: dload         8
252: ldc2_w        #422
255: dcmpl
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #32
267: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 1894
End line: 1900
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 29L, 2.5729148168449405d);
        double double4 = poissonDistributionImpl2.probability((double) 18L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.008361476369318738d + "'", double4 == 0.008361476369318738d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #424
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #425
32: ldc2_w        #427
35: invokespecial #255
38: astore_1
39: aload_1
40: ldc2_w        #429
43: invokevirtual #44
46: dstore_2
47: new           #21
50: dup
51: invokespecial #22
54: ldc           #27
56: invokevirtual #24
59: dload_2
60: invokevirtual #28
63: ldc           #29
65: invokevirtual #24
68: ldc2_w        #431
71: invokevirtual #28
74: ldc           #27
76: invokevirtual #24
79: invokevirtual #26
82: dload_2
83: ldc2_w        #431
86: dcmpl
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #32
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 1903
End line: 1919
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        double double11 = poissonDistributionImpl1.probability(0.0d);
        double double13 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.36787944117144233d + "'", double11 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.308537538725987d + "'", double13 == 0.308537538725987d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #433
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: dconst_0
69: invokevirtual #44
72: dstore        8
74: aload_1
75: iconst_0
76: invokevirtual #63
79: dstore        10
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #27
90: invokevirtual #24
93: dload_2
94: invokevirtual #28
97: ldc           #29
99: invokevirtual #24
102: ldc2_w        #47
105: invokevirtual #28
108: ldc           #27
110: invokevirtual #24
113: invokevirtual #26
116: dload_2
117: ldc2_w        #47
120: dcmpl
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #32
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: dload         4
146: invokevirtual #28
149: ldc           #29
151: invokevirtual #24
154: dconst_1
155: invokevirtual #28
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: dload         4
168: dconst_1
169: dcmpl
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: new           #21
184: dup
185: invokespecial #22
188: ldc           #27
190: invokevirtual #24
193: iload         6
195: invokevirtual #40
198: ldc           #29
200: invokevirtual #24
203: ldc           #41
205: invokevirtual #40
208: ldc           #27
210: invokevirtual #24
213: invokevirtual #26
216: iload         6
218: ldc           #41
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #32
231: new           #21
234: dup
235: invokespecial #22
238: ldc           #27
240: invokevirtual #24
243: iload         7
245: invokevirtual #40
248: ldc           #29
250: invokevirtual #24
253: iconst_0
254: invokevirtual #40
257: ldc           #27
259: invokevirtual #24
262: invokevirtual #26
265: iload         7
267: ifne          274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #32
278: new           #21
281: dup
282: invokespecial #22
285: ldc           #27
287: invokevirtual #24
290: dload         8
292: invokevirtual #28
295: ldc           #29
297: invokevirtual #24
300: ldc2_w        #168
303: invokevirtual #28
306: ldc           #27
308: invokevirtual #24
311: invokevirtual #26
314: dload         8
316: ldc2_w        #168
319: dcmpl
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #32
331: new           #21
334: dup
335: invokespecial #22
338: ldc           #27
340: invokevirtual #24
343: dload         10
345: invokevirtual #28
348: ldc           #29
350: invokevirtual #24
353: ldc2_w        #213
356: invokevirtual #28
359: ldc           #27
361: invokevirtual #24
364: invokevirtual #26
367: dload         10
369: ldc2_w        #213
372: dcmpl
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #32
384: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 1922
End line: 1928
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(614.4704208761831d);
        double double3 = poissonDistributionImpl1.probability(52);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.7151005413705508E-190d + "'", double3 == 1.7151005413705508E-190d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #435
32: invokespecial #9
35: astore_1
36: aload_1
37: bipush        52
39: invokevirtual #54
42: dstore_2
43: new           #21
46: dup
47: invokespecial #22
50: ldc           #27
52: invokevirtual #24
55: dload_2
56: invokevirtual #28
59: ldc           #29
61: invokevirtual #24
64: ldc2_w        #437
67: invokevirtual #28
70: ldc           #27
72: invokevirtual #24
75: invokevirtual #26
78: dload_2
79: ldc2_w        #437
82: dcmpl
83: ifne          90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #32
94: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 1931
End line: 1935
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(43.636130838093536d, 100.73512494149897d, 108);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #439
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #440
32: ldc2_w        #442
35: bipush        108
37: invokespecial #97
40: astore_1
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 1938
End line: 1960
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.9999999958776927d);
        double double8 = poissonDistributionImpl1.normalApproximateProbability(3);
        int int10 = poissonDistributionImpl1.getDomainUpperBound(4.641588833612779d);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = poissonDistributionImpl1.inverseCumulativeProbability(1.3564303006046416d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9937903346742238d + "'", double8 == 0.9937903346742238d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #444
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: ldc2_w        #445
47: invokevirtual #141
50: dstore        4
52: aload_1
53: iconst_3
54: invokevirtual #63
57: dstore        6
59: aload_1
60: ldc2_w        #447
63: invokevirtual #34
66: istore        8
68: aload_1
69: ldc2_w        #449
72: invokevirtual #15
75: istore        9
77: ldc           #16
79: invokestatic  #17
82: goto          127
85: astore        9
87: aload         9
89: invokevirtual #19
92: invokevirtual #20
95: ifne          127
98: new           #21
101: dup
102: invokespecial #22
105: ldc           #23
107: invokevirtual #24
110: aload         9
112: invokevirtual #19
115: invokevirtual #25
118: invokevirtual #24
121: invokevirtual #26
124: invokestatic  #17
127: new           #21
130: dup
131: invokespecial #22
134: ldc           #27
136: invokevirtual #24
139: dload_2
140: invokevirtual #28
143: ldc           #29
145: invokevirtual #24
148: ldc2_w        #30
151: invokevirtual #28
154: ldc           #27
156: invokevirtual #24
159: invokevirtual #26
162: dload_2
163: ldc2_w        #30
166: dcmpl
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #32
178: new           #21
181: dup
182: invokespecial #22
185: ldc           #27
187: invokevirtual #24
190: dload         4
192: invokevirtual #28
195: ldc           #29
197: invokevirtual #24
200: ldc2_w        #45
203: invokevirtual #28
206: ldc           #27
208: invokevirtual #24
211: invokevirtual #26
214: dload         4
216: ldc2_w        #45
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #32
231: new           #21
234: dup
235: invokespecial #22
238: ldc           #27
240: invokevirtual #24
243: dload         6
245: invokevirtual #28
248: ldc           #29
250: invokevirtual #24
253: ldc2_w        #317
256: invokevirtual #28
259: ldc           #27
261: invokevirtual #24
264: invokevirtual #26
267: dload         6
269: ldc2_w        #317
272: dcmpl
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #32
284: new           #21
287: dup
288: invokespecial #22
291: ldc           #27
293: invokevirtual #24
296: iload         8
298: invokevirtual #40
301: ldc           #29
303: invokevirtual #24
306: ldc           #41
308: invokevirtual #40
311: ldc           #27
313: invokevirtual #24
316: invokevirtual #26
319: iload         8
321: ldc           #41
323: if_icmpne     330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #32
334: return
Exception table:
from    to  target type
68    82    85   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 1963
End line: 1967
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(83.39706539520998d, 86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #451
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #452
32: bipush        86
34: invokespecial #50
37: astore_1
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 1970
End line: 1986
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        java.lang.String str12 = randomDataImpl7.nextHexString(100);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.0878348687287582d + "'", double10 == 2.0878348687287582d);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "b4302ea931e5bcdd52a37ba194d5dfdb65bad4c52d117505be30ee7f096395258e435bbd460c8c97a9ba78b13288b98818d4" + "'", str12, "b4302ea931e5bcdd52a37ba194d5dfdb65bad4c52d117505be30ee7f096395258e435bbd460c8c97a9ba78b13288b98818d4");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #454
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: bipush        100
77: invokevirtual #328
80: astore        9
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #27
91: invokevirtual #24
94: dload_2
95: invokevirtual #28
98: ldc           #29
100: invokevirtual #24
103: ldc2_w        #47
106: invokevirtual #28
109: ldc           #27
111: invokevirtual #24
114: invokevirtual #26
117: dload_2
118: ldc2_w        #47
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #32
133: aload         4
135: invokestatic  #77
138: new           #21
141: dup
142: invokespecial #22
145: ldc           #27
147: invokevirtual #24
150: iload         5
152: invokevirtual #40
155: ldc           #29
157: invokevirtual #24
160: iconst_m1
161: invokevirtual #40
164: ldc           #27
166: invokevirtual #24
169: invokevirtual #26
172: iload         5
174: iconst_m1
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #32
186: aload         6
188: invokestatic  #77
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 1989
End line: 2002
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6931471805599453d, (int) (short) 1);
        int int3 = poissonDistributionImpl2.sample();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = poissonDistributionImpl2.cumulativeProbability((-0.28727288807984297d), 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (1) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #455
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #456
32: iconst_1
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #61
41: istore_2
42: aload_1
43: ldc2_w        #458
46: dconst_0
47: invokevirtual #12
50: dstore_3
51: ldc_w         #460
54: invokestatic  #17
57: goto          61
60: astore_3
61: return
Exception table:
from    to  target type
42    57    60   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 2005
End line: 2027
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.getDomainLowerBound((-0.1617659083592266d));
        double double8 = poissonDistributionImpl1.normalApproximateProbability(6862160);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = poissonDistributionImpl1.cumulativeProbability((double) 31L, 0.0d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #461
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: ldc2_w        #462
51: invokevirtual #139
54: istore        5
56: aload_1
57: ldc_w         #464
60: invokevirtual #63
63: dstore        6
65: aload_1
66: ldc2_w        #190
69: dconst_0
70: invokevirtual #12
73: dstore        8
75: ldc           #16
77: invokestatic  #17
80: goto          125
83: astore        8
85: aload         8
87: invokevirtual #19
90: invokevirtual #20
93: ifne          125
96: new           #21
99: dup
100: invokespecial #22
103: ldc           #23
105: invokevirtual #24
108: aload         8
110: invokevirtual #19
113: invokevirtual #25
116: invokevirtual #24
119: invokevirtual #26
122: invokestatic  #17
125: new           #21
128: dup
129: invokespecial #22
132: ldc           #27
134: invokevirtual #24
137: dload_2
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #47
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload_2
161: ldc2_w        #47
164: dcmpl
165: ifne          172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #32
176: aload         4
178: invokestatic  #77
181: new           #21
184: dup
185: invokespecial #22
188: ldc           #27
190: invokevirtual #24
193: iload         5
195: invokevirtual #40
198: ldc           #29
200: invokevirtual #24
203: iconst_0
204: invokevirtual #40
207: ldc           #27
209: invokevirtual #24
212: invokevirtual #26
215: iload         5
217: ifne          224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #32
228: new           #21
231: dup
232: invokespecial #22
235: ldc           #27
237: invokevirtual #24
240: dload         6
242: invokevirtual #28
245: ldc           #29
247: invokevirtual #24
250: dconst_1
251: invokevirtual #28
254: ldc           #27
256: invokevirtual #24
259: invokevirtual #26
262: dload         6
264: dconst_1
265: dcmpl
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #32
277: return
Exception table:
from    to  target type
65    80    83   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 2030
End line: 2045
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(0);
        int int6 = poissonDistributionImpl2.getDomainLowerBound(1.6406870697463487d);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = poissonDistributionImpl2.cumulativeProbability((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 100");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #465
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #63
42: dstore_2
43: aload_1
44: ldc2_w        #360
47: invokevirtual #139
50: istore        4
52: aload_1
53: iconst_0
54: invokevirtual #43
57: dstore        5
59: ldc           #58
61: invokestatic  #17
64: goto          69
67: astore        5
69: new           #21
72: dup
73: invokespecial #22
76: ldc           #27
78: invokevirtual #24
81: dload_2
82: invokevirtual #28
85: ldc           #29
87: invokevirtual #24
90: dconst_0
91: invokevirtual #28
94: ldc           #27
96: invokevirtual #24
99: invokevirtual #26
102: dload_2
103: dconst_0
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #32
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #27
125: invokevirtual #24
128: iload         4
130: invokevirtual #40
133: ldc           #29
135: invokevirtual #24
138: iconst_0
139: invokevirtual #40
142: ldc           #27
144: invokevirtual #24
147: invokevirtual #26
150: iload         4
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #32
163: return
Exception table:
from    to  target type
52    64    67   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 2048
End line: 2066
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        int int14 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #466
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload_1
81: invokevirtual #61
84: istore        13
86: new           #21
89: dup
90: invokespecial #22
93: ldc           #27
95: invokevirtual #24
98: dload_2
99: invokevirtual #28
102: ldc           #29
104: invokevirtual #24
107: ldc2_w        #30
110: invokevirtual #28
113: ldc           #27
115: invokevirtual #24
118: invokevirtual #26
121: dload_2
122: ldc2_w        #30
125: dcmpl
126: ifne          133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #32
137: new           #21
140: dup
141: invokespecial #22
144: ldc           #27
146: invokevirtual #24
149: dload         4
151: invokevirtual #28
154: ldc           #29
156: invokevirtual #24
159: ldc2_w        #45
162: invokevirtual #28
165: ldc           #27
167: invokevirtual #24
170: invokevirtual #26
173: dload         4
175: ldc2_w        #45
178: dcmpl
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #32
190: new           #21
193: dup
194: invokespecial #22
197: ldc           #27
199: invokevirtual #24
202: dload         6
204: invokevirtual #28
207: ldc           #29
209: invokevirtual #24
212: ldc2_w        #87
215: invokevirtual #28
218: ldc           #27
220: invokevirtual #24
223: invokevirtual #26
226: dload         6
228: ldc2_w        #87
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: dload         8
257: invokevirtual #28
260: ldc           #29
262: invokevirtual #24
265: dconst_1
266: invokevirtual #28
269: ldc           #27
271: invokevirtual #24
274: invokevirtual #26
277: dload         8
279: dconst_1
280: dcmpl
281: ifne          288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #32
292: new           #21
295: dup
296: invokespecial #22
299: ldc           #27
301: invokevirtual #24
304: dload         10
306: invokevirtual #28
309: ldc           #29
311: invokevirtual #24
314: ldc2_w        #47
317: invokevirtual #28
320: ldc           #27
322: invokevirtual #24
325: invokevirtual #26
328: dload         10
330: ldc2_w        #47
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: aload         12
347: invokestatic  #77
350: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 2069
End line: 2079
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: invokespecial #9
33: astore_1
34: ldc           #51
36: invokestatic  #17
39: goto          43
42: astore_1
43: return
Exception table:
from    to  target type
25    39    42   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 2082
End line: 2102
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        double double13 = poissonDistributionImpl1.probability((double) 2147483647L);
        double double16 = poissonDistributionImpl1.cumulativeProbability(0.0d, 0.5403023058681398d);
        double double18 = poissonDistributionImpl1.normalApproximateProbability(100);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #468
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #211
80: invokevirtual #44
83: dstore        10
85: aload_1
86: dconst_0
87: ldc2_w        #469
90: invokevirtual #12
93: dstore        12
95: aload_1
96: bipush        100
98: invokevirtual #63
101: dstore        14
103: new           #21
106: dup
107: invokespecial #22
110: ldc           #27
112: invokevirtual #24
115: dload_2
116: invokevirtual #28
119: ldc           #29
121: invokevirtual #24
124: ldc2_w        #47
127: invokevirtual #28
130: ldc           #27
132: invokevirtual #24
135: invokevirtual #26
138: dload_2
139: ldc2_w        #47
142: dcmpl
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #32
154: new           #21
157: dup
158: invokespecial #22
161: ldc           #27
163: invokevirtual #24
166: dload         4
168: invokevirtual #28
171: ldc           #29
173: invokevirtual #24
176: dconst_1
177: invokevirtual #28
180: ldc           #27
182: invokevirtual #24
185: invokevirtual #26
188: dload         4
190: dconst_1
191: dcmpl
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #32
203: new           #21
206: dup
207: invokespecial #22
210: ldc           #27
212: invokevirtual #24
215: iload         6
217: invokevirtual #40
220: ldc           #29
222: invokevirtual #24
225: ldc           #41
227: invokevirtual #40
230: ldc           #27
232: invokevirtual #24
235: invokevirtual #26
238: iload         6
240: ldc           #41
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #32
253: new           #21
256: dup
257: invokespecial #22
260: ldc           #27
262: invokevirtual #24
265: iload         7
267: invokevirtual #40
270: ldc           #29
272: invokevirtual #24
275: iconst_1
276: invokevirtual #40
279: ldc           #27
281: invokevirtual #24
284: invokevirtual #26
287: iload         7
289: iconst_1
290: if_icmpne     297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #32
301: new           #21
304: dup
305: invokespecial #22
308: ldc           #27
310: invokevirtual #24
313: dload         8
315: invokevirtual #28
318: ldc           #29
320: invokevirtual #24
323: dconst_0
324: invokevirtual #28
327: ldc           #27
329: invokevirtual #24
332: invokevirtual #26
335: dload         8
337: dconst_0
338: dcmpl
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #32
350: new           #21
353: dup
354: invokespecial #22
357: ldc           #27
359: invokevirtual #24
362: dload         10
364: invokevirtual #28
367: ldc           #29
369: invokevirtual #24
372: dconst_0
373: invokevirtual #28
376: ldc           #27
378: invokevirtual #24
381: invokevirtual #26
384: dload         10
386: dconst_0
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: new           #21
402: dup
403: invokespecial #22
406: ldc           #27
408: invokevirtual #24
411: dload         12
413: invokevirtual #28
416: ldc           #29
418: invokevirtual #24
421: ldc2_w        #45
424: invokevirtual #28
427: ldc           #27
429: invokevirtual #24
432: invokevirtual #26
435: dload         12
437: ldc2_w        #45
440: dcmpl
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #32
452: new           #21
455: dup
456: invokespecial #22
459: ldc           #27
461: invokevirtual #24
464: dload         14
466: invokevirtual #28
469: ldc           #29
471: invokevirtual #24
474: dconst_1
475: invokevirtual #28
478: ldc           #27
480: invokevirtual #24
483: invokevirtual #26
486: dload         14
488: dconst_1
489: dcmpl
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #32
501: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 2105
End line: 2125
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        double double16 = poissonDistributionImpl1.cumulativeProbability(1, (int) (short) 100);
        double double18 = poissonDistributionImpl1.probability((int) 'a');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.6321205588285393d + "'", double16 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.8243984514608465E-153d + "'", double18 == 3.8243984514608465E-153d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #471
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: iconst_1
83: bipush        100
85: invokevirtual #64
88: dstore        11
90: aload_1
91: bipush        97
93: invokevirtual #54
96: dstore        13
98: new           #21
101: dup
102: invokespecial #22
105: ldc           #27
107: invokevirtual #24
110: dload_2
111: invokevirtual #28
114: ldc           #29
116: invokevirtual #24
119: ldc2_w        #47
122: invokevirtual #28
125: ldc           #27
127: invokevirtual #24
130: invokevirtual #26
133: dload_2
134: ldc2_w        #47
137: dcmpl
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #32
149: new           #21
152: dup
153: invokespecial #22
156: ldc           #27
158: invokevirtual #24
161: dload         4
163: invokevirtual #28
166: ldc           #29
168: invokevirtual #24
171: dconst_1
172: invokevirtual #28
175: ldc           #27
177: invokevirtual #24
180: invokevirtual #26
183: dload         4
185: dconst_1
186: dcmpl
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #32
198: new           #21
201: dup
202: invokespecial #22
205: ldc           #27
207: invokevirtual #24
210: iload         6
212: invokevirtual #40
215: ldc           #29
217: invokevirtual #24
220: ldc           #41
222: invokevirtual #40
225: ldc           #27
227: invokevirtual #24
230: invokevirtual #26
233: iload         6
235: ldc           #41
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #32
248: new           #21
251: dup
252: invokespecial #22
255: ldc           #27
257: invokevirtual #24
260: iload         7
262: invokevirtual #40
265: ldc           #29
267: invokevirtual #24
270: iconst_0
271: invokevirtual #40
274: ldc           #27
276: invokevirtual #24
279: invokevirtual #26
282: iload         7
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #32
295: new           #21
298: dup
299: invokespecial #22
302: ldc           #27
304: invokevirtual #24
307: dload         9
309: invokevirtual #28
312: ldc           #29
314: invokevirtual #24
317: ldc2_w        #45
320: invokevirtual #28
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: dload         9
333: ldc2_w        #45
336: dcmpl
337: ifne          344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #32
348: new           #21
351: dup
352: invokespecial #22
355: ldc           #27
357: invokevirtual #24
360: dload         11
362: invokevirtual #28
365: ldc           #29
367: invokevirtual #24
370: ldc2_w        #30
373: invokevirtual #28
376: ldc           #27
378: invokevirtual #24
381: invokevirtual #26
384: dload         11
386: ldc2_w        #30
389: dcmpl
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #32
401: new           #21
404: dup
405: invokespecial #22
408: ldc           #27
410: invokevirtual #24
413: dload         13
415: invokevirtual #28
418: ldc           #29
420: invokevirtual #24
423: ldc2_w        #472
426: invokevirtual #28
429: ldc           #27
431: invokevirtual #24
434: invokevirtual #26
437: dload         13
439: ldc2_w        #472
442: dcmpl
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #32
454: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 2128
End line: 2140
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #474
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: iconst_m1
56: invokevirtual #63
59: dstore        6
61: new           #21
64: dup
65: invokespecial #22
68: ldc           #27
70: invokevirtual #24
73: dload_2
74: invokevirtual #28
77: ldc           #29
79: invokevirtual #24
82: ldc2_w        #47
85: invokevirtual #28
88: ldc           #27
90: invokevirtual #24
93: invokevirtual #26
96: dload_2
97: ldc2_w        #47
100: dcmpl
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #32
112: aload         4
114: invokestatic  #77
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: iload         5
131: invokevirtual #40
134: ldc           #29
136: invokevirtual #24
139: iconst_m1
140: invokevirtual #40
143: ldc           #27
145: invokevirtual #24
148: invokevirtual #26
151: iload         5
153: iconst_m1
154: if_icmpne     161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #32
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: dload         6
179: invokevirtual #28
182: ldc           #29
184: invokevirtual #24
187: ldc2_w        #87
190: invokevirtual #28
193: ldc           #27
195: invokevirtual #24
198: invokevirtual #26
201: dload         6
203: ldc2_w        #87
206: dcmpl
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #32
218: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 2143
End line: 2163
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound((-0.7531344911940551d));
        double double14 = poissonDistributionImpl1.probability(0);
        double double16 = poissonDistributionImpl1.probability(0.39894228040143026d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.36787944117144233d + "'", double14 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #402
77: invokevirtual #139
80: istore        9
82: aload_1
83: iconst_0
84: invokevirtual #54
87: dstore        10
89: aload_1
90: ldc2_w        #476
93: invokevirtual #44
96: dstore        12
98: new           #21
101: dup
102: invokespecial #22
105: ldc           #27
107: invokevirtual #24
110: dload_2
111: invokevirtual #28
114: ldc           #29
116: invokevirtual #24
119: ldc2_w        #47
122: invokevirtual #28
125: ldc           #27
127: invokevirtual #24
130: invokevirtual #26
133: dload_2
134: ldc2_w        #47
137: dcmpl
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #32
149: new           #21
152: dup
153: invokespecial #22
156: ldc           #27
158: invokevirtual #24
161: dload         4
163: invokevirtual #28
166: ldc           #29
168: invokevirtual #24
171: dconst_1
172: invokevirtual #28
175: ldc           #27
177: invokevirtual #24
180: invokevirtual #26
183: dload         4
185: dconst_1
186: dcmpl
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #32
198: new           #21
201: dup
202: invokespecial #22
205: ldc           #27
207: invokevirtual #24
210: iload         6
212: invokevirtual #40
215: ldc           #29
217: invokevirtual #24
220: ldc           #41
222: invokevirtual #40
225: ldc           #27
227: invokevirtual #24
230: invokevirtual #26
233: iload         6
235: ldc           #41
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #32
248: new           #21
251: dup
252: invokespecial #22
255: ldc           #27
257: invokevirtual #24
260: iload         7
262: invokevirtual #40
265: ldc           #29
267: invokevirtual #24
270: iconst_0
271: invokevirtual #40
274: ldc           #27
276: invokevirtual #24
279: invokevirtual #26
282: iload         7
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #32
295: new           #21
298: dup
299: invokespecial #22
302: ldc           #27
304: invokevirtual #24
307: iload         9
309: invokevirtual #40
312: ldc           #29
314: invokevirtual #24
317: iconst_0
318: invokevirtual #40
321: ldc           #27
323: invokevirtual #24
326: invokevirtual #26
329: iload         9
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #32
342: new           #21
345: dup
346: invokespecial #22
349: ldc           #27
351: invokevirtual #24
354: dload         10
356: invokevirtual #28
359: ldc           #29
361: invokevirtual #24
364: ldc2_w        #168
367: invokevirtual #28
370: ldc           #27
372: invokevirtual #24
375: invokevirtual #26
378: dload         10
380: ldc2_w        #168
383: dcmpl
384: ifne          391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #32
395: new           #21
398: dup
399: invokespecial #22
402: ldc           #27
404: invokevirtual #24
407: dload         12
409: invokevirtual #28
412: ldc           #29
414: invokevirtual #24
417: dconst_0
418: invokevirtual #28
421: ldc           #27
423: invokevirtual #24
426: invokevirtual #26
429: dload         12
431: dconst_0
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #32
444: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 2166
End line: 2170
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(1.0422345456402626d, 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #479
32: iconst_0
33: invokespecial #50
36: astore_1
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 2173
End line: 2189
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        double double11 = poissonDistributionImpl1.probability(0.0d);
        double double13 = poissonDistributionImpl1.cumulativeProbability(48);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.36787944117144233d + "'", double11 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #481
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: dconst_0
69: invokevirtual #44
72: dstore        8
74: aload_1
75: bipush        48
77: invokevirtual #43
80: dstore        10
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #27
91: invokevirtual #24
94: dload_2
95: invokevirtual #28
98: ldc           #29
100: invokevirtual #24
103: ldc2_w        #47
106: invokevirtual #28
109: ldc           #27
111: invokevirtual #24
114: invokevirtual #26
117: dload_2
118: ldc2_w        #47
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #32
133: new           #21
136: dup
137: invokespecial #22
140: ldc           #27
142: invokevirtual #24
145: dload         4
147: invokevirtual #28
150: ldc           #29
152: invokevirtual #24
155: dconst_1
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload         4
169: dconst_1
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: iload         6
196: invokevirtual #40
199: ldc           #29
201: invokevirtual #24
204: ldc           #41
206: invokevirtual #40
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: iload         6
219: ldc           #41
221: if_icmpne     228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #32
232: new           #21
235: dup
236: invokespecial #22
239: ldc           #27
241: invokevirtual #24
244: iload         7
246: invokevirtual #40
249: ldc           #29
251: invokevirtual #24
254: iconst_0
255: invokevirtual #40
258: ldc           #27
260: invokevirtual #24
263: invokevirtual #26
266: iload         7
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: dload         8
293: invokevirtual #28
296: ldc           #29
298: invokevirtual #24
301: ldc2_w        #168
304: invokevirtual #28
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: dload         8
317: ldc2_w        #168
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: new           #21
335: dup
336: invokespecial #22
339: ldc           #27
341: invokevirtual #24
344: dload         10
346: invokevirtual #28
349: ldc           #29
351: invokevirtual #24
354: dconst_1
355: invokevirtual #28
358: ldc           #27
360: invokevirtual #24
363: invokevirtual #26
366: dload         10
368: dconst_1
369: dcmpl
370: ifne          377
373: iconst_1
374: goto          378
377: iconst_0
378: invokestatic  #32
381: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 2192
End line: 2221
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double19 = poissonDistributionImpl9.normalApproximateProbability((-1));
        int int21 = poissonDistributionImpl9.getDomainUpperBound(0.0d);
        double double23 = poissonDistributionImpl9.cumulativeProbability(7);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl24 = poissonDistributionImpl9.randomData;
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 548.4574973833304d + "'", double7 == 548.4574973833304d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.06680720126885803d + "'", double19 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9999897508033253d + "'", double23 == 0.9999897508033253d);
        org.junit.Assert.assertNotNull(randomDataImpl24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: iconst_m1
118: invokevirtual #63
121: dstore        17
123: aload         9
125: dconst_0
126: invokevirtual #34
129: istore        19
131: aload         9
133: bipush        7
135: invokevirtual #43
138: dstore        20
140: aload         9
142: getfield      #72
145: astore        22
147: new           #21
150: dup
151: invokespecial #22
154: ldc           #27
156: invokevirtual #24
159: dload_2
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: dconst_0
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload_2
181: dconst_0
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         4
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #118
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         4
232: ldc2_w        #118
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: aload         6
249: invokestatic  #77
252: new           #21
255: dup
256: invokespecial #22
259: ldc           #27
261: invokevirtual #24
264: dload         10
266: invokevirtual #28
269: ldc           #29
271: invokevirtual #24
274: ldc2_w        #47
277: invokevirtual #28
280: ldc           #27
282: invokevirtual #24
285: invokevirtual #26
288: dload         10
290: ldc2_w        #47
293: dcmpl
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: dload         12
319: invokevirtual #28
322: ldc           #29
324: invokevirtual #24
327: dconst_1
328: invokevirtual #28
331: ldc           #27
333: invokevirtual #24
336: invokevirtual #26
339: dload         12
341: dconst_1
342: dcmpl
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #32
354: new           #21
357: dup
358: invokespecial #22
361: ldc           #27
363: invokevirtual #24
366: dload         15
368: invokevirtual #28
371: ldc           #29
373: invokevirtual #24
376: dconst_1
377: invokevirtual #28
380: ldc           #27
382: invokevirtual #24
385: invokevirtual #26
388: dload         15
390: dconst_1
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #32
403: new           #21
406: dup
407: invokespecial #22
410: ldc           #27
412: invokevirtual #24
415: dload         17
417: invokevirtual #28
420: ldc           #29
422: invokevirtual #24
425: ldc2_w        #87
428: invokevirtual #28
431: ldc           #27
433: invokevirtual #24
436: invokevirtual #26
439: dload         17
441: ldc2_w        #87
444: dcmpl
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #32
456: new           #21
459: dup
460: invokespecial #22
463: ldc           #27
465: invokevirtual #24
468: iload         19
470: invokevirtual #40
473: ldc           #29
475: invokevirtual #24
478: ldc           #41
480: invokevirtual #40
483: ldc           #27
485: invokevirtual #24
488: invokevirtual #26
491: iload         19
493: ldc           #41
495: if_icmpne     502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #32
506: new           #21
509: dup
510: invokespecial #22
513: ldc           #27
515: invokevirtual #24
518: dload         20
520: invokevirtual #28
523: ldc           #29
525: invokevirtual #24
528: ldc2_w        #483
531: invokevirtual #28
534: ldc           #27
536: invokevirtual #24
539: invokevirtual #26
542: dload         20
544: ldc2_w        #483
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #32
559: aload         22
561: invokestatic  #77
564: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 2224
End line: 2241
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double15 = poissonDistributionImpl1.cumulativeProbability(51, 844785);
        java.lang.Class<?> wildcardClass16 = poissonDistributionImpl1.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #485
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: bipush        51
78: ldc_w         #486
81: invokevirtual #64
84: dstore        10
86: aload_1
87: invokevirtual #19
90: astore        12
92: new           #21
95: dup
96: invokespecial #22
99: ldc           #27
101: invokevirtual #24
104: dload_2
105: invokevirtual #28
108: ldc           #29
110: invokevirtual #24
113: ldc2_w        #47
116: invokevirtual #28
119: ldc           #27
121: invokevirtual #24
124: invokevirtual #26
127: dload_2
128: ldc2_w        #47
131: dcmpl
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #32
143: new           #21
146: dup
147: invokespecial #22
150: ldc           #27
152: invokevirtual #24
155: dload         4
157: invokevirtual #28
160: ldc           #29
162: invokevirtual #24
165: dconst_1
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: dconst_1
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload         6
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: ldc2_w        #69
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         6
230: ldc2_w        #69
233: dcmpl
234: ifne          241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #32
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: dload         8
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: dconst_0
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         8
281: dconst_0
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         10
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: dconst_0
317: invokevirtual #28
320: ldc           #27
322: invokevirtual #24
325: invokevirtual #26
328: dload         10
330: dconst_0
331: dcmpl
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #32
343: aload         12
345: invokestatic  #77
348: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 2244
End line: 2260
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double9 = poissonDistributionImpl1.cumulativeProbability(10);
        double double11 = poissonDistributionImpl1.normalApproximateProbability(1565197);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9999999899522336d + "'", double9 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #487
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload_1
61: bipush        10
63: invokevirtual #43
66: dstore        7
68: aload_1
69: ldc_w         #420
72: invokevirtual #63
75: dstore        9
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_2
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: ldc2_w        #47
101: invokevirtual #28
104: ldc           #27
106: invokevirtual #24
109: invokevirtual #26
112: dload_2
113: ldc2_w        #47
116: dcmpl
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #32
128: aload         4
130: invokestatic  #77
133: new           #21
136: dup
137: invokespecial #22
140: ldc           #27
142: invokevirtual #24
145: iload         5
147: invokevirtual #40
150: ldc           #29
152: invokevirtual #24
155: iconst_m1
156: invokevirtual #40
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: iload         5
169: iconst_m1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: aload         6
183: invokestatic  #77
186: new           #21
189: dup
190: invokespecial #22
193: ldc           #27
195: invokevirtual #24
198: dload         7
200: invokevirtual #28
203: ldc           #29
205: invokevirtual #24
208: ldc2_w        #178
211: invokevirtual #28
214: ldc           #27
216: invokevirtual #24
219: invokevirtual #26
222: dload         7
224: ldc2_w        #178
227: dcmpl
228: ifne          235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #32
239: new           #21
242: dup
243: invokespecial #22
246: ldc           #27
248: invokevirtual #24
251: dload         9
253: invokevirtual #28
256: ldc           #29
258: invokevirtual #24
261: dconst_1
262: invokevirtual #28
265: ldc           #27
267: invokevirtual #24
270: invokevirtual #26
273: dload         9
275: dconst_1
276: dcmpl
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #32
288: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 2263
End line: 2278
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        int int13 = poissonDistributionImpl1.inverseCumulativeProbability((double) (byte) 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: dconst_0
74: invokevirtual #15
77: istore        8
79: new           #21
82: dup
83: invokespecial #22
86: ldc           #27
88: invokevirtual #24
91: dload_2
92: invokevirtual #28
95: ldc           #29
97: invokevirtual #24
100: ldc2_w        #30
103: invokevirtual #28
106: ldc           #27
108: invokevirtual #24
111: invokevirtual #26
114: dload_2
115: ldc2_w        #30
118: dcmpl
119: ifne          126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #32
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: dload         4
144: invokevirtual #28
147: ldc           #29
149: invokevirtual #24
152: ldc2_w        #45
155: invokevirtual #28
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: dload         4
168: ldc2_w        #45
171: dcmpl
172: ifne          179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #32
183: new           #21
186: dup
187: invokespecial #22
190: ldc           #27
192: invokevirtual #24
195: iload         7
197: invokevirtual #40
200: ldc           #29
202: invokevirtual #24
205: ldc           #41
207: invokevirtual #40
210: ldc           #27
212: invokevirtual #24
215: invokevirtual #26
218: iload         7
220: ldc           #41
222: if_icmpne     229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #32
233: new           #21
236: dup
237: invokespecial #22
240: ldc           #27
242: invokevirtual #24
245: iload         8
247: invokevirtual #40
250: ldc           #29
252: invokevirtual #24
255: iconst_m1
256: invokevirtual #40
259: ldc           #27
261: invokevirtual #24
264: invokevirtual #26
267: iload         8
269: iconst_m1
270: if_icmpne     277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #32
281: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 2281
End line: 2295
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double6 = poissonDistributionImpl1.getMean();
        int int7 = poissonDistributionImpl1.sample();
        double double9 = poissonDistributionImpl1.probability(1.5607966601082315d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: invokevirtual #102
53: dstore        6
55: aload_1
56: invokevirtual #61
59: istore        8
61: aload_1
62: ldc2_w        #492
65: invokevirtual #44
68: dstore        9
70: new           #21
73: dup
74: invokespecial #22
77: ldc           #27
79: invokevirtual #24
82: dload_2
83: invokevirtual #28
86: ldc           #29
88: invokevirtual #24
91: ldc2_w        #47
94: invokevirtual #28
97: ldc           #27
99: invokevirtual #24
102: invokevirtual #26
105: dload_2
106: ldc2_w        #47
109: dcmpl
110: ifne          117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #32
121: new           #21
124: dup
125: invokespecial #22
128: ldc           #27
130: invokevirtual #24
133: dload         4
135: invokevirtual #28
138: ldc           #29
140: invokevirtual #24
143: ldc2_w        #178
146: invokevirtual #28
149: ldc           #27
151: invokevirtual #24
154: invokevirtual #26
157: dload         4
159: ldc2_w        #178
162: dcmpl
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #32
174: new           #21
177: dup
178: invokespecial #22
181: ldc           #27
183: invokevirtual #24
186: dload         6
188: invokevirtual #28
191: ldc           #29
193: invokevirtual #24
196: dconst_1
197: invokevirtual #28
200: ldc           #27
202: invokevirtual #24
205: invokevirtual #26
208: dload         6
210: dconst_1
211: dcmpl
212: ifne          219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #32
223: new           #21
226: dup
227: invokespecial #22
230: ldc           #27
232: invokevirtual #24
235: dload         9
237: invokevirtual #28
240: ldc           #29
242: invokevirtual #24
245: dconst_0
246: invokevirtual #28
249: ldc           #27
251: invokevirtual #24
254: invokevirtual #26
257: dload         9
259: dconst_0
260: dcmpl
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 2298
End line: 2312
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 9223372036854775807L);
        // The following exception was thrown during execution in test generation
        try {
            int int3 = poissonDistributionImpl1.inverseCumulativeProbability((double) 66);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #494
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #495
32: invokespecial #9
35: astore_1
36: aload_1
37: ldc2_w        #497
40: invokevirtual #15
43: istore_2
44: ldc           #16
46: invokestatic  #17
49: goto          91
52: astore_2
53: aload_2
54: invokevirtual #19
57: invokevirtual #20
60: ifne          91
63: new           #21
66: dup
67: invokespecial #22
70: ldc           #23
72: invokevirtual #24
75: aload_2
76: invokevirtual #19
79: invokevirtual #25
82: invokevirtual #24
85: invokevirtual #26
88: invokestatic  #17
91: return
Exception table:
from    to  target type
36    49    52   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 2315
End line: 2325
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        int int7 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #499
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: dconst_0
51: invokevirtual #15
54: istore        6
56: new           #21
59: dup
60: invokespecial #22
63: ldc           #27
65: invokevirtual #24
68: dload_2
69: invokevirtual #28
72: ldc           #29
74: invokevirtual #24
77: ldc2_w        #47
80: invokevirtual #28
83: ldc           #27
85: invokevirtual #24
88: invokevirtual #26
91: dload_2
92: ldc2_w        #47
95: dcmpl
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #32
107: new           #21
110: dup
111: invokespecial #22
114: ldc           #27
116: invokevirtual #24
119: dload         4
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #178
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload         4
145: ldc2_w        #178
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: new           #21
163: dup
164: invokespecial #22
167: ldc           #27
169: invokevirtual #24
172: iload         6
174: invokevirtual #40
177: ldc           #29
179: invokevirtual #24
182: iconst_m1
183: invokevirtual #40
186: ldc           #27
188: invokevirtual #24
191: invokevirtual #26
194: iload         6
196: iconst_m1
197: if_icmpne     204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #32
208: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 2328
End line: 2338
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double3 = poissonDistributionImpl2.getMean();
        double double5 = poissonDistributionImpl2.probability(1);
        int int6 = poissonDistributionImpl2.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.720075976020796E-42d + "'", double5 == 3.720075976020796E-42d);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 96 + "'", int6 == 96);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #500
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: aload_1
43: iconst_1
44: invokevirtual #54
47: dstore        4
49: aload_1
50: invokevirtual #61
53: istore        6
55: new           #21
58: dup
59: invokespecial #22
62: ldc           #27
64: invokevirtual #24
67: dload_2
68: invokevirtual #28
71: ldc           #29
73: invokevirtual #24
76: ldc2_w        #10
79: invokevirtual #28
82: ldc           #27
84: invokevirtual #24
87: invokevirtual #26
90: dload_2
91: ldc2_w        #10
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: dload         4
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: ldc2_w        #220
131: invokevirtual #28
134: ldc           #27
136: invokevirtual #24
139: invokevirtual #26
142: dload         4
144: ldc2_w        #220
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 2341
End line: 2363
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            double double10 = poissonDistributionImpl1.cumulativeProbability(844785, 0);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #501
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload_1
61: ldc_w         #486
64: iconst_0
65: invokevirtual #64
68: dstore        7
70: ldc           #16
72: invokestatic  #17
75: goto          120
78: astore        7
80: aload         7
82: invokevirtual #19
85: invokevirtual #20
88: ifne          120
91: new           #21
94: dup
95: invokespecial #22
98: ldc           #23
100: invokevirtual #24
103: aload         7
105: invokevirtual #19
108: invokevirtual #25
111: invokevirtual #24
114: invokevirtual #26
117: invokestatic  #17
120: new           #21
123: dup
124: invokespecial #22
127: ldc           #27
129: invokevirtual #24
132: dload_2
133: invokevirtual #28
136: ldc           #29
138: invokevirtual #24
141: ldc2_w        #47
144: invokevirtual #28
147: ldc           #27
149: invokevirtual #24
152: invokevirtual #26
155: dload_2
156: ldc2_w        #47
159: dcmpl
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #32
171: aload         4
173: invokestatic  #77
176: new           #21
179: dup
180: invokespecial #22
183: ldc           #27
185: invokevirtual #24
188: iload         5
190: invokevirtual #40
193: ldc           #29
195: invokevirtual #24
198: iconst_m1
199: invokevirtual #40
202: ldc           #27
204: invokevirtual #24
207: invokevirtual #26
210: iload         5
212: iconst_m1
213: if_icmpne     220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #32
224: aload         6
226: invokestatic  #77
229: return
Exception table:
from    to  target type
60    75    78   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 2366
End line: 2378
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.9999999958776927d);
        double double8 = poissonDistributionImpl1.normalApproximateProbability(3);
        int int10 = poissonDistributionImpl1.getDomainUpperBound(0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9937903346742238d + "'", double8 == 0.9937903346742238d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #502
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: ldc2_w        #445
47: invokevirtual #141
50: dstore        4
52: aload_1
53: iconst_3
54: invokevirtual #63
57: dstore        6
59: aload_1
60: dconst_0
61: invokevirtual #34
64: istore        8
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #30
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #30
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #45
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload         4
155: ldc2_w        #45
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #32
170: new           #21
173: dup
174: invokespecial #22
177: ldc           #27
179: invokevirtual #24
182: dload         6
184: invokevirtual #28
187: ldc           #29
189: invokevirtual #24
192: ldc2_w        #317
195: invokevirtual #28
198: ldc           #27
200: invokevirtual #24
203: invokevirtual #26
206: dload         6
208: ldc2_w        #317
211: dcmpl
212: ifne          219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #32
223: new           #21
226: dup
227: invokespecial #22
230: ldc           #27
232: invokevirtual #24
235: iload         8
237: invokevirtual #40
240: ldc           #29
242: invokevirtual #24
245: ldc           #41
247: invokevirtual #40
250: ldc           #27
252: invokevirtual #24
255: invokevirtual #26
258: iload         8
260: ldc           #41
262: if_icmpne     269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #32
273: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 2381
End line: 2410
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = poissonDistributionImpl1.cumulativeProbability((int) ' ', 0);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #503
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload_1
96: bipush        32
98: iconst_0
99: invokevirtual #64
102: dstore        13
104: ldc           #16
106: invokestatic  #17
109: goto          154
112: astore        13
114: aload         13
116: invokevirtual #19
119: invokevirtual #20
122: ifne          154
125: new           #21
128: dup
129: invokespecial #22
132: ldc           #23
134: invokevirtual #24
137: aload         13
139: invokevirtual #19
142: invokevirtual #25
145: invokevirtual #24
148: invokevirtual #26
151: invokestatic  #17
154: new           #21
157: dup
158: invokespecial #22
161: ldc           #27
163: invokevirtual #24
166: dload_2
167: invokevirtual #28
170: ldc           #29
172: invokevirtual #24
175: ldc2_w        #30
178: invokevirtual #28
181: ldc           #27
183: invokevirtual #24
186: invokevirtual #26
189: dload_2
190: ldc2_w        #30
193: dcmpl
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #32
205: new           #21
208: dup
209: invokespecial #22
212: ldc           #27
214: invokevirtual #24
217: dload         4
219: invokevirtual #28
222: ldc           #29
224: invokevirtual #24
227: ldc2_w        #45
230: invokevirtual #28
233: ldc           #27
235: invokevirtual #24
238: invokevirtual #26
241: dload         4
243: ldc2_w        #45
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: dload         6
272: invokevirtual #28
275: ldc           #29
277: invokevirtual #24
280: ldc2_w        #87
283: invokevirtual #28
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: dload         6
296: ldc2_w        #87
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: dload         8
325: invokevirtual #28
328: ldc           #29
330: invokevirtual #24
333: ldc2_w        #45
336: invokevirtual #28
339: ldc           #27
341: invokevirtual #24
344: invokevirtual #26
347: dload         8
349: ldc2_w        #45
352: dcmpl
353: ifne          360
356: iconst_1
357: goto          361
360: iconst_0
361: invokestatic  #32
364: new           #21
367: dup
368: invokespecial #22
371: ldc           #27
373: invokevirtual #24
376: iload         10
378: invokevirtual #40
381: ldc           #29
383: invokevirtual #24
386: iconst_0
387: invokevirtual #40
390: ldc           #27
392: invokevirtual #24
395: invokevirtual #26
398: iload         10
400: ifne          407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #32
411: new           #21
414: dup
415: invokespecial #22
418: ldc           #27
420: invokevirtual #24
423: iload         11
425: invokevirtual #40
428: ldc           #29
430: invokevirtual #24
433: iconst_0
434: invokevirtual #40
437: ldc           #27
439: invokevirtual #24
442: invokevirtual #26
445: iload         11
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #32
458: aload         12
460: invokestatic  #77
463: return
Exception table:
from    to  target type
95   109   112   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 2413
End line: 2432
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        double double16 = poissonDistributionImpl1.cumulativeProbability(1, (int) (short) 100);
        poissonDistributionImpl1.reseedRandomGenerator((long) 'a');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.6321205588285393d + "'", double16 == 0.6321205588285393d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #504
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: iconst_1
83: bipush        100
85: invokevirtual #64
88: dstore        11
90: aload_1
91: ldc2_w        #82
94: invokevirtual #157
97: new           #21
100: dup
101: invokespecial #22
104: ldc           #27
106: invokevirtual #24
109: dload_2
110: invokevirtual #28
113: ldc           #29
115: invokevirtual #24
118: ldc2_w        #47
121: invokevirtual #28
124: ldc           #27
126: invokevirtual #24
129: invokevirtual #26
132: dload_2
133: ldc2_w        #47
136: dcmpl
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #32
148: new           #21
151: dup
152: invokespecial #22
155: ldc           #27
157: invokevirtual #24
160: dload         4
162: invokevirtual #28
165: ldc           #29
167: invokevirtual #24
170: dconst_1
171: invokevirtual #28
174: ldc           #27
176: invokevirtual #24
179: invokevirtual #26
182: dload         4
184: dconst_1
185: dcmpl
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #32
197: new           #21
200: dup
201: invokespecial #22
204: ldc           #27
206: invokevirtual #24
209: iload         6
211: invokevirtual #40
214: ldc           #29
216: invokevirtual #24
219: ldc           #41
221: invokevirtual #40
224: ldc           #27
226: invokevirtual #24
229: invokevirtual #26
232: iload         6
234: ldc           #41
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: new           #21
250: dup
251: invokespecial #22
254: ldc           #27
256: invokevirtual #24
259: iload         7
261: invokevirtual #40
264: ldc           #29
266: invokevirtual #24
269: iconst_0
270: invokevirtual #40
273: ldc           #27
275: invokevirtual #24
278: invokevirtual #26
281: iload         7
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         9
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: ldc2_w        #45
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         9
332: ldc2_w        #45
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         11
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: ldc2_w        #30
372: invokevirtual #28
375: ldc           #27
377: invokevirtual #24
380: invokevirtual #26
383: dload         11
385: ldc2_w        #30
388: dcmpl
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #32
400: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 2435
End line: 2467
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        double double21 = randomDataImpl1.nextGaussian((-0.47093222618459063d), 8.706621142874209d);
        // The following exception was thrown during execution in test generation
        try {
            long long24 = randomDataImpl1.nextLong((long) 1108008, 2L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 1,108,008 is larger than, or equal to, the maximum (2): lower bound (1,108,008) must be strictly less than upper bound (2)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6164704857113975d + "'", double5 == 0.6164704857113975d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double21 + "' != '" + 6.922169004965981d + "'", double21 == 6.922169004965981d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #505
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: aload_2
122: ldc2_w        #507
125: ldc2_w        #509
128: invokevirtual #288
131: dstore        19
133: aload_2
134: ldc2_w        #511
137: ldc2_w        #399
140: invokevirtual #123
143: lstore        21
145: ldc_w         #513
148: invokestatic  #17
151: goto          156
154: astore        21
156: new           #21
159: dup
160: invokespecial #22
163: ldc           #27
165: invokevirtual #24
168: dload         4
170: invokevirtual #28
173: ldc           #29
175: invokevirtual #24
178: dconst_1
179: invokevirtual #28
182: ldc           #27
184: invokevirtual #24
187: invokevirtual #26
190: dload         4
192: dconst_1
193: dcmpl
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #32
205: new           #21
208: dup
209: invokespecial #22
212: ldc           #27
214: invokevirtual #24
217: dload         9
219: invokevirtual #28
222: ldc           #29
224: invokevirtual #24
227: ldc2_w        #30
230: invokevirtual #28
233: ldc           #27
235: invokevirtual #24
238: invokevirtual #26
241: dload         9
243: ldc2_w        #30
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: dload         11
272: invokevirtual #28
275: ldc           #29
277: invokevirtual #24
280: ldc2_w        #45
283: invokevirtual #28
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: dload         11
296: ldc2_w        #45
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: dload         13
325: invokevirtual #28
328: ldc           #29
330: invokevirtual #24
333: ldc2_w        #87
336: invokevirtual #28
339: ldc           #27
341: invokevirtual #24
344: invokevirtual #26
347: dload         13
349: ldc2_w        #87
352: dcmpl
353: ifne          360
356: iconst_1
357: goto          361
360: iconst_0
361: invokestatic  #32
364: new           #21
367: dup
368: invokespecial #22
371: ldc           #27
373: invokevirtual #24
376: dload         15
378: invokevirtual #28
381: ldc           #29
383: invokevirtual #24
386: dconst_1
387: invokevirtual #28
390: ldc           #27
392: invokevirtual #24
395: invokevirtual #26
398: dload         15
400: dconst_1
401: dcmpl
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #32
413: return
Exception table:
from    to  target type
133   151   154   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 2470
End line: 2480
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100);
        int int2 = poissonDistributionImpl1.sample();
        int int4 = poissonDistributionImpl1.getDomainLowerBound(0.9238853122786159d);
        int int5 = poissonDistributionImpl1.sample();
// flaky:         org.junit.Assert.assertTrue("'" + int2 + "' != '" + 105 + "'", int2 == 105);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 98 + "'", int5 == 98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #514
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: invokespecial #9
35: astore_1
36: aload_1
37: invokevirtual #61
40: istore_2
41: aload_1
42: ldc2_w        #515
45: invokevirtual #139
48: istore_3
49: aload_1
50: invokevirtual #61
53: istore        4
55: new           #21
58: dup
59: invokespecial #22
62: ldc           #27
64: invokevirtual #24
67: iload_3
68: invokevirtual #40
71: ldc           #29
73: invokevirtual #24
76: iconst_0
77: invokevirtual #40
80: ldc           #27
82: invokevirtual #24
85: invokevirtual #26
88: iload_3
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #32
100: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 2483
End line: 2505
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            double double9 = randomDataImpl7.nextChiSquare(0.0d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #517
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: dconst_0
63: invokevirtual #115
66: dstore        7
68: ldc           #16
70: invokestatic  #17
73: goto          118
76: astore        7
78: aload         7
80: invokevirtual #19
83: invokevirtual #20
86: ifne          118
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #23
98: invokevirtual #24
101: aload         7
103: invokevirtual #19
106: invokevirtual #25
109: invokevirtual #24
112: invokevirtual #26
115: invokestatic  #17
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload_2
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #47
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload_2
154: ldc2_w        #47
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #32
169: aload         4
171: invokestatic  #77
174: new           #21
177: dup
178: invokespecial #22
181: ldc           #27
183: invokevirtual #24
186: iload         5
188: invokevirtual #40
191: ldc           #29
193: invokevirtual #24
196: iconst_m1
197: invokevirtual #40
200: ldc           #27
202: invokevirtual #24
205: invokevirtual #26
208: iload         5
210: iconst_m1
211: if_icmpne     218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #32
222: aload         6
224: invokestatic  #77
227: return
Exception table:
from    to  target type
60    73    76   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 2508
End line: 2535
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        double double16 = poissonDistributionImpl1.cumulativeProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = poissonDistributionImpl1.cumulativeProbability(86, 0);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #518
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: iconst_0
82: invokevirtual #43
85: dstore        11
87: aload_1
88: bipush        86
90: iconst_0
91: invokevirtual #64
94: dstore        13
96: ldc           #16
98: invokestatic  #17
101: goto          146
104: astore        13
106: aload         13
108: invokevirtual #19
111: invokevirtual #20
114: ifne          146
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #23
126: invokevirtual #24
129: aload         13
131: invokevirtual #19
134: invokevirtual #25
137: invokevirtual #24
140: invokevirtual #26
143: invokestatic  #17
146: new           #21
149: dup
150: invokespecial #22
153: ldc           #27
155: invokevirtual #24
158: dload_2
159: invokevirtual #28
162: ldc           #29
164: invokevirtual #24
167: ldc2_w        #30
170: invokevirtual #28
173: ldc           #27
175: invokevirtual #24
178: invokevirtual #26
181: dload_2
182: ldc2_w        #30
185: dcmpl
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #32
197: new           #21
200: dup
201: invokespecial #22
204: ldc           #27
206: invokevirtual #24
209: dload         4
211: invokevirtual #28
214: ldc           #29
216: invokevirtual #24
219: ldc2_w        #45
222: invokevirtual #28
225: ldc           #27
227: invokevirtual #24
230: invokevirtual #26
233: dload         4
235: ldc2_w        #45
238: dcmpl
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #32
250: new           #21
253: dup
254: invokespecial #22
257: ldc           #27
259: invokevirtual #24
262: dload         6
264: invokevirtual #28
267: ldc           #29
269: invokevirtual #24
272: ldc2_w        #87
275: invokevirtual #28
278: ldc           #27
280: invokevirtual #24
283: invokevirtual #26
286: dload         6
288: ldc2_w        #87
291: dcmpl
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #32
303: new           #21
306: dup
307: invokespecial #22
310: ldc           #27
312: invokevirtual #24
315: dload         8
317: invokevirtual #28
320: ldc           #29
322: invokevirtual #24
325: ldc2_w        #45
328: invokevirtual #28
331: ldc           #27
333: invokevirtual #24
336: invokevirtual #26
339: dload         8
341: ldc2_w        #45
344: dcmpl
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #32
356: new           #21
359: dup
360: invokespecial #22
363: ldc           #27
365: invokevirtual #24
368: iload         10
370: invokevirtual #40
373: ldc           #29
375: invokevirtual #24
378: iconst_0
379: invokevirtual #40
382: ldc           #27
384: invokevirtual #24
387: invokevirtual #26
390: iload         10
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #32
403: new           #21
406: dup
407: invokespecial #22
410: ldc           #27
412: invokevirtual #24
415: dload         11
417: invokevirtual #28
420: ldc           #29
422: invokevirtual #24
425: ldc2_w        #45
428: invokevirtual #28
431: ldc           #27
433: invokevirtual #24
436: invokevirtual #26
439: dload         11
441: ldc2_w        #45
444: dcmpl
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #32
456: return
Exception table:
from    to  target type
87   101   104   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 2538
End line: 2552
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double8 = poissonDistributionImpl1.cumulativeProbability((-1.0870302912451684d), 0.47712125471966244d);
        double double9 = poissonDistributionImpl1.getMean();
        int int11 = poissonDistributionImpl1.getDomainUpperBound(985680.4407314587d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #519
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #339
53: ldc2_w        #241
56: invokevirtual #12
59: dstore        6
61: aload_1
62: invokevirtual #102
65: dstore        8
67: aload_1
68: ldc2_w        #520
71: invokevirtual #34
74: istore        10
76: new           #21
79: dup
80: invokespecial #22
83: ldc           #27
85: invokevirtual #24
88: dload_2
89: invokevirtual #28
92: ldc           #29
94: invokevirtual #24
97: ldc2_w        #47
100: invokevirtual #28
103: ldc           #27
105: invokevirtual #24
108: invokevirtual #26
111: dload_2
112: ldc2_w        #47
115: dcmpl
116: ifne          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #32
127: new           #21
130: dup
131: invokespecial #22
134: ldc           #27
136: invokevirtual #24
139: dload         4
141: invokevirtual #28
144: ldc           #29
146: invokevirtual #24
149: ldc2_w        #178
152: invokevirtual #28
155: ldc           #27
157: invokevirtual #24
160: invokevirtual #26
163: dload         4
165: ldc2_w        #178
168: dcmpl
169: ifne          176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #32
180: new           #21
183: dup
184: invokespecial #22
187: ldc           #27
189: invokevirtual #24
192: dload         6
194: invokevirtual #28
197: ldc           #29
199: invokevirtual #24
202: ldc2_w        #45
205: invokevirtual #28
208: ldc           #27
210: invokevirtual #24
213: invokevirtual #26
216: dload         6
218: ldc2_w        #45
221: dcmpl
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #32
233: new           #21
236: dup
237: invokespecial #22
240: ldc           #27
242: invokevirtual #24
245: dload         8
247: invokevirtual #28
250: ldc           #29
252: invokevirtual #24
255: dconst_1
256: invokevirtual #28
259: ldc           #27
261: invokevirtual #24
264: invokevirtual #26
267: dload         8
269: dconst_1
270: dcmpl
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #32
282: new           #21
285: dup
286: invokespecial #22
289: ldc           #27
291: invokevirtual #24
294: iload         10
296: invokevirtual #40
299: ldc           #29
301: invokevirtual #24
304: ldc           #41
306: invokevirtual #40
309: ldc           #27
311: invokevirtual #24
314: invokevirtual #26
317: iload         10
319: ldc           #41
321: if_icmpne     328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 2555
End line: 2583
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound((-0.7531344911940551d));
        double double14 = poissonDistributionImpl1.probability(0);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = poissonDistributionImpl1.cumulativeProbability(186864, 108);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.36787944117144233d + "'", double14 == 0.36787944117144233d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #522
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #402
77: invokevirtual #139
80: istore        9
82: aload_1
83: iconst_0
84: invokevirtual #54
87: dstore        10
89: aload_1
90: ldc_w         #523
93: bipush        108
95: invokevirtual #64
98: dstore        12
100: ldc           #16
102: invokestatic  #17
105: goto          150
108: astore        12
110: aload         12
112: invokevirtual #19
115: invokevirtual #20
118: ifne          150
121: new           #21
124: dup
125: invokespecial #22
128: ldc           #23
130: invokevirtual #24
133: aload         12
135: invokevirtual #19
138: invokevirtual #25
141: invokevirtual #24
144: invokevirtual #26
147: invokestatic  #17
150: new           #21
153: dup
154: invokespecial #22
157: ldc           #27
159: invokevirtual #24
162: dload_2
163: invokevirtual #28
166: ldc           #29
168: invokevirtual #24
171: ldc2_w        #47
174: invokevirtual #28
177: ldc           #27
179: invokevirtual #24
182: invokevirtual #26
185: dload_2
186: ldc2_w        #47
189: dcmpl
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #32
201: new           #21
204: dup
205: invokespecial #22
208: ldc           #27
210: invokevirtual #24
213: dload         4
215: invokevirtual #28
218: ldc           #29
220: invokevirtual #24
223: dconst_1
224: invokevirtual #28
227: ldc           #27
229: invokevirtual #24
232: invokevirtual #26
235: dload         4
237: dconst_1
238: dcmpl
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #32
250: new           #21
253: dup
254: invokespecial #22
257: ldc           #27
259: invokevirtual #24
262: iload         6
264: invokevirtual #40
267: ldc           #29
269: invokevirtual #24
272: ldc           #41
274: invokevirtual #40
277: ldc           #27
279: invokevirtual #24
282: invokevirtual #26
285: iload         6
287: ldc           #41
289: if_icmpne     296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #32
300: new           #21
303: dup
304: invokespecial #22
307: ldc           #27
309: invokevirtual #24
312: iload         7
314: invokevirtual #40
317: ldc           #29
319: invokevirtual #24
322: iconst_0
323: invokevirtual #40
326: ldc           #27
328: invokevirtual #24
331: invokevirtual #26
334: iload         7
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: iload         9
361: invokevirtual #40
364: ldc           #29
366: invokevirtual #24
369: iconst_0
370: invokevirtual #40
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: iload         9
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #32
394: new           #21
397: dup
398: invokespecial #22
401: ldc           #27
403: invokevirtual #24
406: dload         10
408: invokevirtual #28
411: ldc           #29
413: invokevirtual #24
416: ldc2_w        #168
419: invokevirtual #28
422: ldc           #27
424: invokevirtual #24
427: invokevirtual #26
430: dload         10
432: ldc2_w        #168
435: dcmpl
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #32
447: return
Exception table:
from    to  target type
89   105   108   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 2586
End line: 2613
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double19 = poissonDistributionImpl9.normalApproximateProbability((-1));
        int int21 = poissonDistributionImpl9.getDomainUpperBound(0.0d);
        int int23 = poissonDistributionImpl9.inverseCumulativeProbability(0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 576.9522295411717d + "'", double7 == 576.9522295411717d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.06680720126885803d + "'", double19 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #524
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: iconst_m1
118: invokevirtual #63
121: dstore        17
123: aload         9
125: dconst_0
126: invokevirtual #34
129: istore        19
131: aload         9
133: dconst_0
134: invokevirtual #15
137: istore        20
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload_2
152: invokevirtual #28
155: ldc           #29
157: invokevirtual #24
160: dconst_0
161: invokevirtual #28
164: ldc           #27
166: invokevirtual #24
169: invokevirtual #26
172: dload_2
173: dconst_0
174: dcmpl
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #32
186: new           #21
189: dup
190: invokespecial #22
193: ldc           #27
195: invokevirtual #24
198: dload         4
200: invokevirtual #28
203: ldc           #29
205: invokevirtual #24
208: ldc2_w        #118
211: invokevirtual #28
214: ldc           #27
216: invokevirtual #24
219: invokevirtual #26
222: dload         4
224: ldc2_w        #118
227: dcmpl
228: ifne          235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #32
239: aload         6
241: invokestatic  #77
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: dload         10
258: invokevirtual #28
261: ldc           #29
263: invokevirtual #24
266: ldc2_w        #47
269: invokevirtual #28
272: ldc           #27
274: invokevirtual #24
277: invokevirtual #26
280: dload         10
282: ldc2_w        #47
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: dload         12
311: invokevirtual #28
314: ldc           #29
316: invokevirtual #24
319: dconst_1
320: invokevirtual #28
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: dload         12
333: dconst_1
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: new           #21
349: dup
350: invokespecial #22
353: ldc           #27
355: invokevirtual #24
358: dload         15
360: invokevirtual #28
363: ldc           #29
365: invokevirtual #24
368: dconst_1
369: invokevirtual #28
372: ldc           #27
374: invokevirtual #24
377: invokevirtual #26
380: dload         15
382: dconst_1
383: dcmpl
384: ifne          391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #32
395: new           #21
398: dup
399: invokespecial #22
402: ldc           #27
404: invokevirtual #24
407: dload         17
409: invokevirtual #28
412: ldc           #29
414: invokevirtual #24
417: ldc2_w        #87
420: invokevirtual #28
423: ldc           #27
425: invokevirtual #24
428: invokevirtual #26
431: dload         17
433: ldc2_w        #87
436: dcmpl
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #32
448: new           #21
451: dup
452: invokespecial #22
455: ldc           #27
457: invokevirtual #24
460: iload         19
462: invokevirtual #40
465: ldc           #29
467: invokevirtual #24
470: ldc           #41
472: invokevirtual #40
475: ldc           #27
477: invokevirtual #24
480: invokevirtual #26
483: iload         19
485: ldc           #41
487: if_icmpne     494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #32
498: new           #21
501: dup
502: invokespecial #22
505: ldc           #27
507: invokevirtual #24
510: iload         20
512: invokevirtual #40
515: ldc           #29
517: invokevirtual #24
520: iconst_m1
521: invokevirtual #40
524: ldc           #27
526: invokevirtual #24
529: invokevirtual #26
532: iload         20
534: iconst_m1
535: if_icmpne     542
538: iconst_1
539: goto          543
542: iconst_0
543: invokestatic  #32
546: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 2616
End line: 2628
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double3 = poissonDistributionImpl2.getMean();
        double double5 = poissonDistributionImpl2.probability(1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl6 = poissonDistributionImpl2.randomData;
        int int10 = randomDataImpl6.nextHypergeometric(60, (int) (short) 10, (int) ' ');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.720075976020796E-42d + "'", double5 == 3.720075976020796E-42d);
        org.junit.Assert.assertNotNull(randomDataImpl6);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6 + "'", int10 == 6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #525
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: aload_1
43: iconst_1
44: invokevirtual #54
47: dstore        4
49: aload_1
50: getfield      #72
53: astore        6
55: aload         6
57: bipush        60
59: bipush        10
61: bipush        32
63: invokevirtual #76
66: istore        7
68: new           #21
71: dup
72: invokespecial #22
75: ldc           #27
77: invokevirtual #24
80: dload_2
81: invokevirtual #28
84: ldc           #29
86: invokevirtual #24
89: ldc2_w        #10
92: invokevirtual #28
95: ldc           #27
97: invokevirtual #24
100: invokevirtual #26
103: dload_2
104: ldc2_w        #10
107: dcmpl
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #32
119: new           #21
122: dup
123: invokespecial #22
126: ldc           #27
128: invokevirtual #24
131: dload         4
133: invokevirtual #28
136: ldc           #29
138: invokevirtual #24
141: ldc2_w        #220
144: invokevirtual #28
147: ldc           #27
149: invokevirtual #24
152: invokevirtual #26
155: dload         4
157: ldc2_w        #220
160: dcmpl
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #32
172: aload         6
174: invokestatic  #77
177: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 2631
End line: 2640
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        poissonDistributionImpl2.reseedRandomGenerator(16L);
        double double8 = poissonDistributionImpl2.probability((double) 34);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0019527022227375538d + "'", double8 == 0.0019527022227375538d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: ldc2_w        #527
48: invokevirtual #157
51: aload_1
52: ldc2_w        #529
55: invokevirtual #44
58: dstore        4
60: new           #21
63: dup
64: invokespecial #22
67: ldc           #27
69: invokevirtual #24
72: dload_2
73: invokevirtual #28
76: ldc           #29
78: invokevirtual #24
81: dconst_0
82: invokevirtual #28
85: ldc           #27
87: invokevirtual #24
90: invokevirtual #26
93: dload_2
94: dconst_0
95: dcmpl
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #32
107: new           #21
110: dup
111: invokespecial #22
114: ldc           #27
116: invokevirtual #24
119: dload         4
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #531
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload         4
145: ldc2_w        #531
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 2643
End line: 2665
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        int int13 = poissonDistributionImpl1.getDomainUpperBound((-1.7540630599962477d));
        double double16 = poissonDistributionImpl1.cumulativeProbability((int) (byte) -1, 108);
        int int18 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        double double20 = poissonDistributionImpl1.cumulativeProbability((-1.1696764552645635d));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #533
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #284
80: invokevirtual #34
83: istore        10
85: aload_1
86: iconst_m1
87: bipush        108
89: invokevirtual #64
92: dstore        11
94: aload_1
95: dconst_0
96: invokevirtual #15
99: istore        13
101: aload_1
102: ldc2_w        #534
105: invokevirtual #141
108: dstore        14
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #27
119: invokevirtual #24
122: dload_2
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #47
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload_2
146: ldc2_w        #47
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: new           #21
164: dup
165: invokespecial #22
168: ldc           #27
170: invokevirtual #24
173: dload         4
175: invokevirtual #28
178: ldc           #29
180: invokevirtual #24
183: dconst_1
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         4
197: dconst_1
198: dcmpl
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #32
210: new           #21
213: dup
214: invokespecial #22
217: ldc           #27
219: invokevirtual #24
222: iload         6
224: invokevirtual #40
227: ldc           #29
229: invokevirtual #24
232: ldc           #41
234: invokevirtual #40
237: ldc           #27
239: invokevirtual #24
242: invokevirtual #26
245: iload         6
247: ldc           #41
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #32
260: new           #21
263: dup
264: invokespecial #22
267: ldc           #27
269: invokevirtual #24
272: iload         7
274: invokevirtual #40
277: ldc           #29
279: invokevirtual #24
282: iconst_1
283: invokevirtual #40
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: iload         7
296: iconst_1
297: if_icmpne     304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #32
308: new           #21
311: dup
312: invokespecial #22
315: ldc           #27
317: invokevirtual #24
320: dload         8
322: invokevirtual #28
325: ldc           #29
327: invokevirtual #24
330: dconst_0
331: invokevirtual #28
334: ldc           #27
336: invokevirtual #24
339: invokevirtual #26
342: dload         8
344: dconst_0
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #32
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: iload         10
371: invokevirtual #40
374: ldc           #29
376: invokevirtual #24
379: ldc           #41
381: invokevirtual #40
384: ldc           #27
386: invokevirtual #24
389: invokevirtual #26
392: iload         10
394: ldc           #41
396: if_icmpne     403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #32
407: new           #21
410: dup
411: invokespecial #22
414: ldc           #27
416: invokevirtual #24
419: dload         11
421: invokevirtual #28
424: ldc           #29
426: invokevirtual #24
429: dconst_1
430: invokevirtual #28
433: ldc           #27
435: invokevirtual #24
438: invokevirtual #26
441: dload         11
443: dconst_1
444: dcmpl
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #32
456: new           #21
459: dup
460: invokespecial #22
463: ldc           #27
465: invokevirtual #24
468: iload         13
470: invokevirtual #40
473: ldc           #29
475: invokevirtual #24
478: iconst_m1
479: invokevirtual #40
482: ldc           #27
484: invokevirtual #24
487: invokevirtual #26
490: iload         13
492: iconst_m1
493: if_icmpne     500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #32
504: new           #21
507: dup
508: invokespecial #22
511: ldc           #27
513: invokevirtual #24
516: dload         14
518: invokevirtual #28
521: ldc           #29
523: invokevirtual #24
526: dconst_0
527: invokevirtual #28
530: ldc           #27
532: invokevirtual #24
535: invokevirtual #26
538: dload         14
540: dconst_0
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #32
553: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 2668
End line: 2676
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5403023058681399d, (-0.27769304627179253d));
        double double4 = poissonDistributionImpl2.probability(17.27245511419795d);
        double double6 = poissonDistributionImpl2.probability(99.13154645400108d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #536
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #537
32: ldc2_w        #539
35: invokespecial #255
38: astore_1
39: aload_1
40: ldc2_w        #541
43: invokevirtual #44
46: dstore_2
47: aload_1
48: ldc2_w        #543
51: invokevirtual #44
54: dstore        4
56: new           #21
59: dup
60: invokespecial #22
63: ldc           #27
65: invokevirtual #24
68: dload_2
69: invokevirtual #28
72: ldc           #29
74: invokevirtual #24
77: dconst_0
78: invokevirtual #28
81: ldc           #27
83: invokevirtual #24
86: invokevirtual #26
89: dload_2
90: dconst_0
91: dcmpl
92: ifne          99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #32
103: new           #21
106: dup
107: invokespecial #22
110: ldc           #27
112: invokevirtual #24
115: dload         4
117: invokevirtual #28
120: ldc           #29
122: invokevirtual #24
125: dconst_0
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload         4
139: dconst_0
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 2679
End line: 2743
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        long long13 = randomDataImpl5.nextLong((long) (short) 1, (long) (short) 100);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl14 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double16 = normalDistributionImpl14.density((java.lang.Double) 100.0d);
        double double17 = normalDistributionImpl14.getMean();
        double double18 = normalDistributionImpl14.getMean();
        double double19 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl14);
        randomDataImpl5.reSeed((long) (byte) 1);
        double double24 = randomDataImpl5.nextUniform(0.2930641738000717d, 812.156551123258d);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl25 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double27 = normalDistributionImpl25.density((java.lang.Double) 100.0d);
        double double29 = normalDistributionImpl25.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl30 = normalDistributionImpl25.randomData;
        double double32 = randomDataImpl30.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl34 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double36 = poissonDistributionImpl34.probability(100);
        double double39 = poissonDistributionImpl34.cumulativeProbability(0.0d, (double) 'a');
        int int40 = randomDataImpl30.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl34);
        double double43 = randomDataImpl30.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl45 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double47 = poissonDistributionImpl45.probability(100);
        double double49 = poissonDistributionImpl45.normalApproximateProbability(2147483647);
        double double52 = poissonDistributionImpl45.cumulativeProbability((int) (short) 10, 2147483647);
        double double54 = poissonDistributionImpl45.normalApproximateProbability((int) (byte) -1);
        int int55 = randomDataImpl30.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl45);
        int int56 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl45);
        double double58 = poissonDistributionImpl45.probability(9703232);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.7936626092744135d + "'", double10 == 0.7936626092744135d);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 99L + "'", long13 == 99L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.36220233062264423d) + "'", double19 == (-0.36220233062264423d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 593.6663806134848d + "'", double24 == 593.6663806134848d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.24197072451914337d + "'", double29 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl30);
// flaky:         org.junit.Assert.assertTrue("'" + double32 + "' != '" + 599.5826040747659d + "'", double32 == 599.5826040747659d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 3.941866060050443E-159d + "'", double36 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.004107608396441554d + "'", double43 == 0.004107608396441554d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 3.941866060050443E-159d + "'", double47 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.1142547828857374E-7d + "'", double52 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.06680720126885803d + "'", double54 == 0.06680720126885803d);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #545
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: ldc2_w        #546
101: invokevirtual #123
104: lstore        14
106: new           #107
109: dup
110: invokespecial #108
113: astore        16
115: aload         16
117: ldc2_w        #10
120: invokestatic  #109
123: invokevirtual #110
126: dstore        17
128: aload         16
130: invokevirtual #392
133: dstore        19
135: aload         16
137: invokevirtual #392
140: dstore        21
142: aload         6
144: aload         16
146: invokevirtual #393
149: dstore        23
151: aload         6
153: lconst_1
154: invokevirtual #548
157: aload         6
159: ldc2_w        #198
162: ldc2_w        #549
165: invokevirtual #351
168: dstore        25
170: new           #107
173: dup
174: invokespecial #108
177: astore        27
179: aload         27
181: ldc2_w        #10
184: invokestatic  #109
187: invokevirtual #110
190: dstore        28
192: aload         27
194: dconst_1
195: invokevirtual #111
198: dstore        30
200: aload         27
202: getfield      #112
205: astore        32
207: aload         32
209: ldc2_w        #113
212: invokevirtual #115
215: dstore        33
217: new           #8
220: dup
221: dconst_1
222: invokespecial #9
225: astore        35
227: aload         35
229: bipush        100
231: invokevirtual #54
234: dstore        36
236: aload         35
238: dconst_0
239: ldc2_w        #55
242: invokevirtual #12
245: dstore        38
247: aload         32
249: aload         35
251: invokevirtual #116
254: istore        40
256: aload         32
258: ldc2_w        #198
261: ldc2_w        #127
264: invokevirtual #200
267: dstore        41
269: new           #8
272: dup
273: dconst_1
274: invokespecial #9
277: astore        43
279: aload         43
281: bipush        100
283: invokevirtual #54
286: dstore        44
288: aload         43
290: ldc           #41
292: invokevirtual #63
295: dstore        46
297: aload         43
299: bipush        10
301: ldc           #41
303: invokevirtual #64
306: dstore        48
308: aload         43
310: iconst_m1
311: invokevirtual #63
314: dstore        50
316: aload         32
318: aload         43
320: invokevirtual #116
323: istore        52
325: aload         6
327: aload         43
329: invokevirtual #116
332: istore        53
334: aload         43
336: ldc_w         #551
339: invokevirtual #54
342: dstore        54
344: new           #21
347: dup
348: invokespecial #22
351: ldc           #27
353: invokevirtual #24
356: dload_2
357: invokevirtual #28
360: ldc           #29
362: invokevirtual #24
365: dconst_0
366: invokevirtual #28
369: ldc           #27
371: invokevirtual #24
374: invokevirtual #26
377: dload_2
378: dconst_0
379: dcmpl
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #32
391: new           #21
394: dup
395: invokespecial #22
398: ldc           #27
400: invokevirtual #24
403: dload         4
405: invokevirtual #28
408: ldc           #29
410: invokevirtual #24
413: ldc2_w        #118
416: invokevirtual #28
419: ldc           #27
421: invokevirtual #24
424: invokevirtual #26
427: dload         4
429: ldc2_w        #118
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #32
444: aload         6
446: invokestatic  #77
449: new           #21
452: dup
453: invokespecial #22
456: ldc           #27
458: invokevirtual #24
461: dload         8
463: invokevirtual #28
466: ldc           #29
468: invokevirtual #24
471: dconst_0
472: invokevirtual #28
475: ldc           #27
477: invokevirtual #24
480: invokevirtual #26
483: dload         8
485: dconst_0
486: dcmpl
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #32
498: new           #21
501: dup
502: invokespecial #22
505: ldc           #27
507: invokevirtual #24
510: dload         10
512: invokevirtual #28
515: ldc           #29
517: invokevirtual #24
520: dconst_0
521: invokevirtual #28
524: ldc           #27
526: invokevirtual #24
529: invokevirtual #26
532: dload         10
534: dconst_0
535: dcmpl
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #32
547: new           #21
550: dup
551: invokespecial #22
554: ldc           #27
556: invokevirtual #24
559: dload         17
561: invokevirtual #28
564: ldc           #29
566: invokevirtual #24
569: dconst_0
570: invokevirtual #28
573: ldc           #27
575: invokevirtual #24
578: invokevirtual #26
581: dload         17
583: dconst_0
584: dcmpl
585: ifne          592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #32
596: new           #21
599: dup
600: invokespecial #22
603: ldc           #27
605: invokevirtual #24
608: dload         19
610: invokevirtual #28
613: ldc           #29
615: invokevirtual #24
618: dconst_0
619: invokevirtual #28
622: ldc           #27
624: invokevirtual #24
627: invokevirtual #26
630: dload         19
632: dconst_0
633: dcmpl
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #32
645: new           #21
648: dup
649: invokespecial #22
652: ldc           #27
654: invokevirtual #24
657: dload         21
659: invokevirtual #28
662: ldc           #29
664: invokevirtual #24
667: dconst_0
668: invokevirtual #28
671: ldc           #27
673: invokevirtual #24
676: invokevirtual #26
679: dload         21
681: dconst_0
682: dcmpl
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #32
694: new           #21
697: dup
698: invokespecial #22
701: ldc           #27
703: invokevirtual #24
706: dload         25
708: invokevirtual #28
711: ldc           #29
713: invokevirtual #24
716: ldc2_w        #552
719: invokevirtual #28
722: ldc           #27
724: invokevirtual #24
727: invokevirtual #26
730: dload         25
732: ldc2_w        #552
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #32
747: new           #21
750: dup
751: invokespecial #22
754: ldc           #27
756: invokevirtual #24
759: dload         28
761: invokevirtual #28
764: ldc           #29
766: invokevirtual #24
769: dconst_0
770: invokevirtual #28
773: ldc           #27
775: invokevirtual #24
778: invokevirtual #26
781: dload         28
783: dconst_0
784: dcmpl
785: ifne          792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #32
796: new           #21
799: dup
800: invokespecial #22
803: ldc           #27
805: invokevirtual #24
808: dload         30
810: invokevirtual #28
813: ldc           #29
815: invokevirtual #24
818: ldc2_w        #118
821: invokevirtual #28
824: ldc           #27
826: invokevirtual #24
829: invokevirtual #26
832: dload         30
834: ldc2_w        #118
837: dcmpl
838: ifne          845
841: iconst_1
842: goto          846
845: iconst_0
846: invokestatic  #32
849: aload         32
851: invokestatic  #77
854: new           #21
857: dup
858: invokespecial #22
861: ldc           #27
863: invokevirtual #24
866: dload         36
868: invokevirtual #28
871: ldc           #29
873: invokevirtual #24
876: ldc2_w        #47
879: invokevirtual #28
882: ldc           #27
884: invokevirtual #24
887: invokevirtual #26
890: dload         36
892: ldc2_w        #47
895: dcmpl
896: ifne          903
899: iconst_1
900: goto          904
903: iconst_0
904: invokestatic  #32
907: new           #21
910: dup
911: invokespecial #22
914: ldc           #27
916: invokevirtual #24
919: dload         38
921: invokevirtual #28
924: ldc           #29
926: invokevirtual #24
929: dconst_1
930: invokevirtual #28
933: ldc           #27
935: invokevirtual #24
938: invokevirtual #26
941: dload         38
943: dconst_1
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #32
956: new           #21
959: dup
960: invokespecial #22
963: ldc           #27
965: invokevirtual #24
968: dload         44
970: invokevirtual #28
973: ldc           #29
975: invokevirtual #24
978: ldc2_w        #47
981: invokevirtual #28
984: ldc           #27
986: invokevirtual #24
989: invokevirtual #26
992: dload         44
994: ldc2_w        #47
997: dcmpl
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #32
1009: new           #21
1012: dup
1013: invokespecial #22
1016: ldc           #27
1018: invokevirtual #24
1021: dload         46
1023: invokevirtual #28
1026: ldc           #29
1028: invokevirtual #24
1031: dconst_1
1032: invokevirtual #28
1035: ldc           #27
1037: invokevirtual #24
1040: invokevirtual #26
1043: dload         46
1045: dconst_1
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #32
1058: new           #21
1061: dup
1062: invokespecial #22
1065: ldc           #27
1067: invokevirtual #24
1070: dload         48
1072: invokevirtual #28
1075: ldc           #29
1077: invokevirtual #24
1080: ldc2_w        #69
1083: invokevirtual #28
1086: ldc           #27
1088: invokevirtual #24
1091: invokevirtual #26
1094: dload         48
1096: ldc2_w        #69
1099: dcmpl
1100: ifne          1107
1103: iconst_1
1104: goto          1108
1107: iconst_0
1108: invokestatic  #32
1111: new           #21
1114: dup
1115: invokespecial #22
1118: ldc           #27
1120: invokevirtual #24
1123: dload         50
1125: invokevirtual #28
1128: ldc           #29
1130: invokevirtual #24
1133: ldc2_w        #87
1136: invokevirtual #28
1139: ldc           #27
1141: invokevirtual #24
1144: invokevirtual #26
1147: dload         50
1149: ldc2_w        #87
1152: dcmpl
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #32
1164: new           #21
1167: dup
1168: invokespecial #22
1171: ldc           #27
1173: invokevirtual #24
1176: iload         53
1178: invokevirtual #40
1181: ldc           #29
1183: invokevirtual #24
1186: iconst_1
1187: invokevirtual #40
1190: ldc           #27
1192: invokevirtual #24
1195: invokevirtual #26
1198: iload         53
1200: iconst_1
1201: if_icmpne     1208
1204: iconst_1
1205: goto          1209
1208: iconst_0
1209: invokestatic  #32
1212: new           #21
1215: dup
1216: invokespecial #22
1219: ldc           #27
1221: invokevirtual #24
1224: dload         54
1226: invokevirtual #28
1229: ldc           #29
1231: invokevirtual #24
1234: dconst_0
1235: invokevirtual #28
1238: ldc           #27
1240: invokevirtual #24
1243: invokevirtual #26
1246: dload         54
1248: dconst_0
1249: dcmpl
1250: ifne          1257
1253: iconst_1
1254: goto          1258
1257: iconst_0
1258: invokestatic  #32
1261: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 2746
End line: 2756
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        int int4 = poissonDistributionImpl1.sample();
        double double7 = poissonDistributionImpl1.cumulativeProbability(89, 7432864);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #554
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: invokevirtual #61
45: istore        4
47: aload_1
48: bipush        89
50: ldc_w         #555
53: invokevirtual #64
56: dstore        5
58: new           #21
61: dup
62: invokespecial #22
65: ldc           #27
67: invokevirtual #24
70: dload_2
71: invokevirtual #28
74: ldc           #29
76: invokevirtual #24
79: ldc2_w        #47
82: invokevirtual #28
85: ldc           #27
87: invokevirtual #24
90: invokevirtual #26
93: dload_2
94: ldc2_w        #47
97: dcmpl
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #32
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload         5
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: dconst_0
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload         5
145: dconst_0
146: dcmpl
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #32
158: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 2759
End line: 2767
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.probability(100.32425841150517d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #556
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: ldc2_w        #557
47: invokevirtual #44
50: dstore        4
52: new           #21
55: dup
56: invokespecial #22
59: ldc           #27
61: invokevirtual #24
64: dload_2
65: invokevirtual #28
68: ldc           #29
70: invokevirtual #24
73: ldc2_w        #30
76: invokevirtual #28
79: ldc           #27
81: invokevirtual #24
84: invokevirtual #26
87: dload_2
88: ldc2_w        #30
91: dcmpl
92: ifne          99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #32
103: new           #21
106: dup
107: invokespecial #22
110: ldc           #27
112: invokevirtual #24
115: dload         4
117: invokevirtual #28
120: ldc           #29
122: invokevirtual #24
125: dconst_0
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload         4
139: dconst_0
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 2770
End line: 2774
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(5.656854249492381d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #559
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #73
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 2777
End line: 2796
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGamma(2.6593984616112802d, 0.9937903346742238d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = randomDataImpl4.nextUniform(1.4560709405486472d, 1.2221998187075218d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 1.456 is larger than, or equal to, the maximum (1.222): lower bound (1.456) must be strictly less than upper bound (1.222)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.051897113700156d + "'", double9 == 1.051897113700156d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #560
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #315
62: ldc2_w        #317
65: invokevirtual #192
68: dstore        7
70: aload         4
72: ldc2_w        #561
75: ldc2_w        #563
78: invokevirtual #351
81: dstore        9
83: ldc_w         #565
86: invokestatic  #17
89: goto          94
92: astore        9
94: new           #21
97: dup
98: invokespecial #22
101: ldc           #27
103: invokevirtual #24
106: dload_2
107: invokevirtual #28
110: ldc           #29
112: invokevirtual #24
115: ldc2_w        #47
118: invokevirtual #28
121: ldc           #27
123: invokevirtual #24
126: invokevirtual #26
129: dload_2
130: ldc2_w        #47
133: dcmpl
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #32
145: aload         4
147: invokestatic  #77
150: return
Exception table:
from    to  target type
70    89    92   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 2799
End line: 2810
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6931471805599453d, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = poissonDistributionImpl2.inverseCumulativeProbability(1.0251532120868618E-30d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.FunctionEvaluationException; message: maximal number of iterations (1) exceeded");
        } catch (org.apache.commons.math.FunctionEvaluationException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #456
32: iconst_1
33: invokespecial #50
36: astore_1
37: aload_1
38: ldc2_w        #261
41: invokevirtual #15
44: istore_2
45: ldc_w         #567
48: invokestatic  #17
51: goto          55
54: astore_2
55: return
Exception table:
from    to  target type
37    51    54   Class org/apache/commons/math/FunctionEvaluationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 2813
End line: 2836
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        double double19 = poissonDistributionImpl1.probability(100);
        int int20 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.941866060050443E-159d + "'", double19 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #568
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload_1
96: bipush        100
98: invokevirtual #54
101: dstore        13
103: aload_1
104: invokevirtual #61
107: istore        15
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload_2
122: invokevirtual #28
125: ldc           #29
127: invokevirtual #24
130: ldc2_w        #30
133: invokevirtual #28
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: dload_2
145: ldc2_w        #30
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: new           #21
163: dup
164: invokespecial #22
167: ldc           #27
169: invokevirtual #24
172: dload         4
174: invokevirtual #28
177: ldc           #29
179: invokevirtual #24
182: ldc2_w        #45
185: invokevirtual #28
188: ldc           #27
190: invokevirtual #24
193: invokevirtual #26
196: dload         4
198: ldc2_w        #45
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: new           #21
216: dup
217: invokespecial #22
220: ldc           #27
222: invokevirtual #24
225: dload         6
227: invokevirtual #28
230: ldc           #29
232: invokevirtual #24
235: ldc2_w        #87
238: invokevirtual #28
241: ldc           #27
243: invokevirtual #24
246: invokevirtual #26
249: dload         6
251: ldc2_w        #87
254: dcmpl
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #32
266: new           #21
269: dup
270: invokespecial #22
273: ldc           #27
275: invokevirtual #24
278: dload         8
280: invokevirtual #28
283: ldc           #29
285: invokevirtual #24
288: ldc2_w        #45
291: invokevirtual #28
294: ldc           #27
296: invokevirtual #24
299: invokevirtual #26
302: dload         8
304: ldc2_w        #45
307: dcmpl
308: ifne          315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #32
319: new           #21
322: dup
323: invokespecial #22
326: ldc           #27
328: invokevirtual #24
331: iload         10
333: invokevirtual #40
336: ldc           #29
338: invokevirtual #24
341: iconst_0
342: invokevirtual #40
345: ldc           #27
347: invokevirtual #24
350: invokevirtual #26
353: iload         10
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #32
366: new           #21
369: dup
370: invokespecial #22
373: ldc           #27
375: invokevirtual #24
378: iload         11
380: invokevirtual #40
383: ldc           #29
385: invokevirtual #24
388: iconst_0
389: invokevirtual #40
392: ldc           #27
394: invokevirtual #24
397: invokevirtual #26
400: iload         11
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #32
413: aload         12
415: invokestatic  #77
418: new           #21
421: dup
422: invokespecial #22
425: ldc           #27
427: invokevirtual #24
430: dload         13
432: invokevirtual #28
435: ldc           #29
437: invokevirtual #24
440: ldc2_w        #47
443: invokevirtual #28
446: ldc           #27
448: invokevirtual #24
451: invokevirtual #26
454: dload         13
456: ldc2_w        #47
459: dcmpl
460: ifne          467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #32
471: new           #21
474: dup
475: invokespecial #22
478: ldc           #27
480: invokevirtual #24
483: iload         15
485: invokevirtual #40
488: ldc           #29
490: invokevirtual #24
493: iconst_1
494: invokevirtual #40
497: ldc           #27
499: invokevirtual #24
502: invokevirtual #26
505: iload         15
507: iconst_1
508: if_icmpne     515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #32
519: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 2839
End line: 2853
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int5 = poissonDistributionImpl1.sample();
        double double8 = poissonDistributionImpl1.cumulativeProbability(0.5789527014473835d, (double) 100);
        double double10 = poissonDistributionImpl1.probability(3.9116227652145885d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.6321205588285393d + "'", double8 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #569
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: invokevirtual #61
51: istore        5
53: aload_1
54: ldc2_w        #570
57: ldc2_w        #10
60: invokevirtual #12
63: dstore        6
65: aload_1
66: ldc2_w        #572
69: invokevirtual #44
72: dstore        8
74: new           #21
77: dup
78: invokespecial #22
81: ldc           #27
83: invokevirtual #24
86: dload_2
87: invokevirtual #28
90: ldc           #29
92: invokevirtual #24
95: ldc2_w        #47
98: invokevirtual #28
101: ldc           #27
103: invokevirtual #24
106: invokevirtual #26
109: dload_2
110: ldc2_w        #47
113: dcmpl
114: ifne          121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #32
125: aload         4
127: invokestatic  #77
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: dload         6
144: invokevirtual #28
147: ldc           #29
149: invokevirtual #24
152: ldc2_w        #30
155: invokevirtual #28
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: dload         6
168: ldc2_w        #30
171: dcmpl
172: ifne          179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #32
183: new           #21
186: dup
187: invokespecial #22
190: ldc           #27
192: invokevirtual #24
195: dload         8
197: invokevirtual #28
200: ldc           #29
202: invokevirtual #24
205: dconst_0
206: invokevirtual #28
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: dload         8
219: dconst_0
220: dcmpl
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #32
232: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 2856
End line: 2875
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        poissonDistributionImpl1.reseedRandomGenerator(0L);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = poissonDistributionImpl1.cumulativeProbability(0.2440351621206197d, (-0.6293977666581311d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #574
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: lconst_0
53: invokevirtual #157
56: aload_1
57: ldc2_w        #575
60: ldc2_w        #577
63: invokevirtual #12
66: dstore        6
68: ldc           #16
70: invokestatic  #17
73: goto          118
76: astore        6
78: aload         6
80: invokevirtual #19
83: invokevirtual #20
86: ifne          118
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #23
98: invokevirtual #24
101: aload         6
103: invokevirtual #19
106: invokevirtual #25
109: invokevirtual #24
112: invokevirtual #26
115: invokestatic  #17
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload_2
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #47
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload_2
154: ldc2_w        #47
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #32
169: new           #21
172: dup
173: invokespecial #22
176: ldc           #27
178: invokevirtual #24
181: dload         4
183: invokevirtual #28
186: ldc           #29
188: invokevirtual #24
191: dconst_1
192: invokevirtual #28
195: ldc           #27
197: invokevirtual #24
200: invokevirtual #26
203: dload         4
205: dconst_1
206: dcmpl
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #32
218: return
Exception table:
from    to  target type
56    73    76   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 2878
End line: 2892
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        int int6 = poissonDistributionImpl2.getDomainLowerBound((-0.17739400468773303d));
        double double8 = poissonDistributionImpl2.cumulativeProbability(1.1643428520428265d);
        int int10 = poissonDistributionImpl2.getDomainUpperBound((double) 128L);
        int int11 = poissonDistributionImpl2.sample();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.3834479069238827E-21d + "'", double8 == 1.3834479069238827E-21d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 57 + "'", int11 == 57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #579
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: ldc2_w        #580
48: invokevirtual #139
51: istore        4
53: aload_1
54: ldc2_w        #582
57: invokevirtual #141
60: dstore        5
62: aload_1
63: ldc2_w        #584
66: invokevirtual #34
69: istore        7
71: aload_1
72: invokevirtual #61
75: istore        8
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_2
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: dconst_0
99: invokevirtual #28
102: ldc           #27
104: invokevirtual #24
107: invokevirtual #26
110: dload_2
111: dconst_0
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: iload         4
138: invokevirtual #40
141: ldc           #29
143: invokevirtual #24
146: iconst_0
147: invokevirtual #40
150: ldc           #27
152: invokevirtual #24
155: invokevirtual #26
158: iload         4
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #32
171: new           #21
174: dup
175: invokespecial #22
178: ldc           #27
180: invokevirtual #24
183: dload         5
185: invokevirtual #28
188: ldc           #29
190: invokevirtual #24
193: ldc2_w        #586
196: invokevirtual #28
199: ldc           #27
201: invokevirtual #24
204: invokevirtual #26
207: dload         5
209: ldc2_w        #586
212: dcmpl
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #32
224: new           #21
227: dup
228: invokespecial #22
231: ldc           #27
233: invokevirtual #24
236: iload         7
238: invokevirtual #40
241: ldc           #29
243: invokevirtual #24
246: ldc           #41
248: invokevirtual #40
251: ldc           #27
253: invokevirtual #24
256: invokevirtual #26
259: iload         7
261: ldc           #41
263: if_icmpne     270
266: iconst_1
267: goto          271
270: iconst_0
271: invokestatic  #32
274: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 2895
End line: 2909
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) '4', (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = poissonDistributionImpl2.inverseCumulativeProbability((double) 1108008);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #588
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: ldc2_w        #589
41: invokevirtual #15
44: istore_2
45: ldc           #16
47: invokestatic  #17
50: goto          92
53: astore_2
54: aload_2
55: invokevirtual #19
58: invokevirtual #20
61: ifne          92
64: new           #21
67: dup
68: invokespecial #22
71: ldc           #23
73: invokevirtual #24
76: aload_2
77: invokevirtual #19
80: invokevirtual #25
83: invokevirtual #24
86: invokevirtual #26
89: invokestatic  #17
92: return
Exception table:
from    to  target type
37    50    53   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 2912
End line: 2933
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGaussian((double) 10.0f, (double) (short) 100);
        double double12 = randomDataImpl4.nextGaussian((-0.5410786873689865d), (double) 52);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = randomDataImpl4.nextExponential((-0.8292101271379335d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.829 is smaller than, or equal to, the minimum (0): mean (-0.829)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-140.44679867532932d) + "'", double9 == (-140.44679867532932d));
// flaky:         org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-10.851452334730368d) + "'", double12 == (-10.851452334730368d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #591
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #13
62: ldc2_w        #10
65: invokevirtual #288
68: dstore        7
70: aload         4
72: ldc2_w        #592
75: ldc2_w        #223
78: invokevirtual #288
81: dstore        9
83: aload         4
85: ldc2_w        #594
88: invokevirtual #203
91: dstore        11
93: ldc_w         #596
96: invokestatic  #17
99: goto          104
102: astore        11
104: new           #21
107: dup
108: invokespecial #22
111: ldc           #27
113: invokevirtual #24
116: dload_2
117: invokevirtual #28
120: ldc           #29
122: invokevirtual #24
125: ldc2_w        #47
128: invokevirtual #28
131: ldc           #27
133: invokevirtual #24
136: invokevirtual #26
139: dload_2
140: ldc2_w        #47
143: dcmpl
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #32
155: aload         4
157: invokestatic  #77
160: return
Exception table:
from    to  target type
83    99   102   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 2936
End line: 2956
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound((-0.7531344911940551d));
        double double14 = poissonDistributionImpl1.probability((-0.9501789451592945d));
        double double16 = poissonDistributionImpl1.probability(7092238);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #597
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #402
77: invokevirtual #139
80: istore        9
82: aload_1
83: ldc2_w        #216
86: invokevirtual #44
89: dstore        10
91: aload_1
92: ldc_w         #598
95: invokevirtual #54
98: dstore        12
100: new           #21
103: dup
104: invokespecial #22
107: ldc           #27
109: invokevirtual #24
112: dload_2
113: invokevirtual #28
116: ldc           #29
118: invokevirtual #24
121: ldc2_w        #47
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload_2
136: ldc2_w        #47
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #32
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload         4
165: invokevirtual #28
168: ldc           #29
170: invokevirtual #24
173: dconst_1
174: invokevirtual #28
177: ldc           #27
179: invokevirtual #24
182: invokevirtual #26
185: dload         4
187: dconst_1
188: dcmpl
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #32
200: new           #21
203: dup
204: invokespecial #22
207: ldc           #27
209: invokevirtual #24
212: iload         6
214: invokevirtual #40
217: ldc           #29
219: invokevirtual #24
222: ldc           #41
224: invokevirtual #40
227: ldc           #27
229: invokevirtual #24
232: invokevirtual #26
235: iload         6
237: ldc           #41
239: if_icmpne     246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #32
250: new           #21
253: dup
254: invokespecial #22
257: ldc           #27
259: invokevirtual #24
262: iload         7
264: invokevirtual #40
267: ldc           #29
269: invokevirtual #24
272: iconst_0
273: invokevirtual #40
276: ldc           #27
278: invokevirtual #24
281: invokevirtual #26
284: iload         7
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: iload         9
311: invokevirtual #40
314: ldc           #29
316: invokevirtual #24
319: iconst_0
320: invokevirtual #40
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: iload         9
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #32
344: new           #21
347: dup
348: invokespecial #22
351: ldc           #27
353: invokevirtual #24
356: dload         10
358: invokevirtual #28
361: ldc           #29
363: invokevirtual #24
366: dconst_0
367: invokevirtual #28
370: ldc           #27
372: invokevirtual #24
375: invokevirtual #26
378: dload         10
380: dconst_0
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #32
393: new           #21
396: dup
397: invokespecial #22
400: ldc           #27
402: invokevirtual #24
405: dload         12
407: invokevirtual #28
410: ldc           #29
412: invokevirtual #24
415: dconst_0
416: invokevirtual #28
419: ldc           #27
421: invokevirtual #24
424: invokevirtual #26
427: dload         12
429: dconst_0
430: dcmpl
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #32
442: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 2959
End line: 2965
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6240474076765692d);
        double double3 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.07738188098587934d + "'", double3 == 0.07738188098587934d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #599
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #600
32: invokespecial #9
35: astore_1
36: aload_1
37: iconst_m1
38: invokevirtual #63
41: dstore_2
42: new           #21
45: dup
46: invokespecial #22
49: ldc           #27
51: invokevirtual #24
54: dload_2
55: invokevirtual #28
58: ldc           #29
60: invokevirtual #24
63: ldc2_w        #602
66: invokevirtual #28
69: ldc           #27
71: invokevirtual #24
74: invokevirtual #26
77: dload_2
78: ldc2_w        #602
81: dcmpl
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #32
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 2968
End line: 2974
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.9014110163717823d, (int) (short) -1);
        double double3 = poissonDistributionImpl2.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.9014110163717823d + "'", double3 == 0.9014110163717823d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #604
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #298
32: iconst_m1
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: new           #21
45: dup
46: invokespecial #22
49: ldc           #27
51: invokevirtual #24
54: dload_2
55: invokevirtual #28
58: ldc           #29
60: invokevirtual #24
63: ldc2_w        #298
66: invokevirtual #28
69: ldc           #27
71: invokevirtual #24
74: invokevirtual #26
77: dload_2
78: ldc2_w        #298
81: dcmpl
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #32
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 2977
End line: 2981
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.9238853122786159d, 46);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #605
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #515
32: bipush        46
34: invokespecial #50
37: astore_1
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 2984
End line: 2995
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        poissonDistributionImpl1.reseedRandomGenerator(0L);
        double double10 = poissonDistributionImpl1.probability(10000000);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #606
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: lconst_0
53: invokevirtual #157
56: aload_1
57: ldc           #225
59: invokevirtual #54
62: dstore        6
64: new           #21
67: dup
68: invokespecial #22
71: ldc           #27
73: invokevirtual #24
76: dload_2
77: invokevirtual #28
80: ldc           #29
82: invokevirtual #24
85: ldc2_w        #47
88: invokevirtual #28
91: ldc           #27
93: invokevirtual #24
96: invokevirtual #26
99: dload_2
100: ldc2_w        #47
103: dcmpl
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #32
115: new           #21
118: dup
119: invokespecial #22
122: ldc           #27
124: invokevirtual #24
127: dload         4
129: invokevirtual #28
132: ldc           #29
134: invokevirtual #24
137: dconst_1
138: invokevirtual #28
141: ldc           #27
143: invokevirtual #24
146: invokevirtual #26
149: dload         4
151: dconst_1
152: dcmpl
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #32
164: new           #21
167: dup
168: invokespecial #22
171: ldc           #27
173: invokevirtual #24
176: dload         6
178: invokevirtual #28
181: ldc           #29
183: invokevirtual #24
186: dconst_0
187: invokevirtual #28
190: ldc           #27
192: invokevirtual #24
195: invokevirtual #26
198: dload         6
200: dconst_0
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 2998
End line: 3016
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        double double11 = poissonDistributionImpl1.probability(0.0d);
        int int13 = poissonDistributionImpl1.getDomainLowerBound(0.248672111195961d);
        int int15 = poissonDistributionImpl1.getDomainLowerBound(0.35273059057024947d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.36787944117144233d + "'", double11 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #607
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: dconst_0
69: invokevirtual #44
72: dstore        8
74: aload_1
75: ldc2_w        #608
78: invokevirtual #139
81: istore        10
83: aload_1
84: ldc2_w        #610
87: invokevirtual #139
90: istore        11
92: new           #21
95: dup
96: invokespecial #22
99: ldc           #27
101: invokevirtual #24
104: dload_2
105: invokevirtual #28
108: ldc           #29
110: invokevirtual #24
113: ldc2_w        #47
116: invokevirtual #28
119: ldc           #27
121: invokevirtual #24
124: invokevirtual #26
127: dload_2
128: ldc2_w        #47
131: dcmpl
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #32
143: new           #21
146: dup
147: invokespecial #22
150: ldc           #27
152: invokevirtual #24
155: dload         4
157: invokevirtual #28
160: ldc           #29
162: invokevirtual #24
165: dconst_1
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: dconst_1
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: iload         6
206: invokevirtual #40
209: ldc           #29
211: invokevirtual #24
214: ldc           #41
216: invokevirtual #40
219: ldc           #27
221: invokevirtual #24
224: invokevirtual #26
227: iload         6
229: ldc           #41
231: if_icmpne     238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #32
242: new           #21
245: dup
246: invokespecial #22
249: ldc           #27
251: invokevirtual #24
254: iload         7
256: invokevirtual #40
259: ldc           #29
261: invokevirtual #24
264: iconst_0
265: invokevirtual #40
268: ldc           #27
270: invokevirtual #24
273: invokevirtual #26
276: iload         7
278: ifne          285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #32
289: new           #21
292: dup
293: invokespecial #22
296: ldc           #27
298: invokevirtual #24
301: dload         8
303: invokevirtual #28
306: ldc           #29
308: invokevirtual #24
311: ldc2_w        #168
314: invokevirtual #28
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: dload         8
327: ldc2_w        #168
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #32
342: new           #21
345: dup
346: invokespecial #22
349: ldc           #27
351: invokevirtual #24
354: iload         10
356: invokevirtual #40
359: ldc           #29
361: invokevirtual #24
364: iconst_0
365: invokevirtual #40
368: ldc           #27
370: invokevirtual #24
373: invokevirtual #26
376: iload         10
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #32
389: new           #21
392: dup
393: invokespecial #22
396: ldc           #27
398: invokevirtual #24
401: iload         11
403: invokevirtual #40
406: ldc           #29
408: invokevirtual #24
411: iconst_0
412: invokevirtual #40
415: ldc           #27
417: invokevirtual #24
420: invokevirtual #26
423: iload         11
425: ifne          432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #32
436: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 3019
End line: 3035
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double8 = poissonDistributionImpl1.cumulativeProbability((-1.0870302912451684d), 0.47712125471966244d);
        double double9 = poissonDistributionImpl1.getMean();
        int int11 = poissonDistributionImpl1.getDomainUpperBound((-1.7942705279814837d));
        int int13 = poissonDistributionImpl1.getDomainLowerBound(0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #612
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #339
53: ldc2_w        #241
56: invokevirtual #12
59: dstore        6
61: aload_1
62: invokevirtual #102
65: dstore        8
67: aload_1
68: ldc2_w        #613
71: invokevirtual #34
74: istore        10
76: aload_1
77: dconst_0
78: invokevirtual #139
81: istore        11
83: new           #21
86: dup
87: invokespecial #22
90: ldc           #27
92: invokevirtual #24
95: dload_2
96: invokevirtual #28
99: ldc           #29
101: invokevirtual #24
104: ldc2_w        #47
107: invokevirtual #28
110: ldc           #27
112: invokevirtual #24
115: invokevirtual #26
118: dload_2
119: ldc2_w        #47
122: dcmpl
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #32
134: new           #21
137: dup
138: invokespecial #22
141: ldc           #27
143: invokevirtual #24
146: dload         4
148: invokevirtual #28
151: ldc           #29
153: invokevirtual #24
156: ldc2_w        #178
159: invokevirtual #28
162: ldc           #27
164: invokevirtual #24
167: invokevirtual #26
170: dload         4
172: ldc2_w        #178
175: dcmpl
176: ifne          183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #32
187: new           #21
190: dup
191: invokespecial #22
194: ldc           #27
196: invokevirtual #24
199: dload         6
201: invokevirtual #28
204: ldc           #29
206: invokevirtual #24
209: ldc2_w        #45
212: invokevirtual #28
215: ldc           #27
217: invokevirtual #24
220: invokevirtual #26
223: dload         6
225: ldc2_w        #45
228: dcmpl
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #32
240: new           #21
243: dup
244: invokespecial #22
247: ldc           #27
249: invokevirtual #24
252: dload         8
254: invokevirtual #28
257: ldc           #29
259: invokevirtual #24
262: dconst_1
263: invokevirtual #28
266: ldc           #27
268: invokevirtual #24
271: invokevirtual #26
274: dload         8
276: dconst_1
277: dcmpl
278: ifne          285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #32
289: new           #21
292: dup
293: invokespecial #22
296: ldc           #27
298: invokevirtual #24
301: iload         10
303: invokevirtual #40
306: ldc           #29
308: invokevirtual #24
311: ldc           #41
313: invokevirtual #40
316: ldc           #27
318: invokevirtual #24
321: invokevirtual #26
324: iload         10
326: ldc           #41
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #32
339: new           #21
342: dup
343: invokespecial #22
346: ldc           #27
348: invokevirtual #24
351: iload         11
353: invokevirtual #40
356: ldc           #29
358: invokevirtual #24
361: iconst_0
362: invokevirtual #40
365: ldc           #27
367: invokevirtual #24
370: invokevirtual #26
373: iload         11
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #32
386: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 3038
End line: 3056
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        double double14 = poissonDistributionImpl1.probability(100);
        int int16 = poissonDistributionImpl1.getDomainUpperBound(0.142948745358914d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.941866060050443E-159d + "'", double14 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #615
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #100
72: invokevirtual #34
75: istore        10
77: aload_1
78: bipush        100
80: invokevirtual #54
83: dstore        11
85: aload_1
86: ldc2_w        #616
89: invokevirtual #34
92: istore        13
94: new           #21
97: dup
98: invokespecial #22
101: ldc           #27
103: invokevirtual #24
106: dload_2
107: invokevirtual #28
110: ldc           #29
112: invokevirtual #24
115: ldc2_w        #47
118: invokevirtual #28
121: ldc           #27
123: invokevirtual #24
126: invokevirtual #26
129: dload_2
130: ldc2_w        #47
133: dcmpl
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #32
145: new           #21
148: dup
149: invokespecial #22
152: ldc           #27
154: invokevirtual #24
157: dload         4
159: invokevirtual #28
162: ldc           #29
164: invokevirtual #24
167: dconst_1
168: invokevirtual #28
171: ldc           #27
173: invokevirtual #24
176: invokevirtual #26
179: dload         4
181: dconst_1
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         6
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #69
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         6
232: ldc2_w        #69
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: new           #21
250: dup
251: invokespecial #22
254: ldc           #27
256: invokevirtual #24
259: dload         8
261: invokevirtual #28
264: ldc           #29
266: invokevirtual #24
269: dconst_0
270: invokevirtual #28
273: ldc           #27
275: invokevirtual #24
278: invokevirtual #26
281: dload         8
283: dconst_0
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: iload         10
310: invokevirtual #40
313: ldc           #29
315: invokevirtual #24
318: ldc           #41
320: invokevirtual #40
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: iload         10
333: ldc           #41
335: if_icmpne     342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: new           #21
349: dup
350: invokespecial #22
353: ldc           #27
355: invokevirtual #24
358: dload         11
360: invokevirtual #28
363: ldc           #29
365: invokevirtual #24
368: ldc2_w        #47
371: invokevirtual #28
374: ldc           #27
376: invokevirtual #24
379: invokevirtual #26
382: dload         11
384: ldc2_w        #47
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: new           #21
402: dup
403: invokespecial #22
406: ldc           #27
408: invokevirtual #24
411: iload         13
413: invokevirtual #40
416: ldc           #29
418: invokevirtual #24
421: ldc           #41
423: invokevirtual #40
426: ldc           #27
428: invokevirtual #24
431: invokevirtual #26
434: iload         13
436: ldc           #41
438: if_icmpne     445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #32
449: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 3059
End line: 3086
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        double double21 = randomDataImpl1.nextGaussian((-0.47093222618459063d), 8.706621142874209d);
        double double24 = randomDataImpl1.nextUniform(0.7615941559557649d, (double) 74L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.084046552296989d) + "'", double5 == (-1.084046552296989d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-13.362671521883925d) + "'", double21 == (-13.362671521883925d));
// flaky:         org.junit.Assert.assertTrue("'" + double24 + "' != '" + 41.14151760127741d + "'", double24 == 41.14151760127741d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #618
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: aload_2
122: ldc2_w        #507
125: ldc2_w        #509
128: invokevirtual #288
131: dstore        19
133: aload_2
134: ldc2_w        #619
137: ldc2_w        #621
140: invokevirtual #351
143: dstore        21
145: new           #21
148: dup
149: invokespecial #22
152: ldc           #27
154: invokevirtual #24
157: dload         4
159: invokevirtual #28
162: ldc           #29
164: invokevirtual #24
167: dconst_1
168: invokevirtual #28
171: ldc           #27
173: invokevirtual #24
176: invokevirtual #26
179: dload         4
181: dconst_1
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         9
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #30
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         9
232: ldc2_w        #30
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: new           #21
250: dup
251: invokespecial #22
254: ldc           #27
256: invokevirtual #24
259: dload         11
261: invokevirtual #28
264: ldc           #29
266: invokevirtual #24
269: ldc2_w        #45
272: invokevirtual #28
275: ldc           #27
277: invokevirtual #24
280: invokevirtual #26
283: dload         11
285: ldc2_w        #45
288: dcmpl
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #32
300: new           #21
303: dup
304: invokespecial #22
307: ldc           #27
309: invokevirtual #24
312: dload         13
314: invokevirtual #28
317: ldc           #29
319: invokevirtual #24
322: ldc2_w        #87
325: invokevirtual #28
328: ldc           #27
330: invokevirtual #24
333: invokevirtual #26
336: dload         13
338: ldc2_w        #87
341: dcmpl
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #32
353: new           #21
356: dup
357: invokespecial #22
360: ldc           #27
362: invokevirtual #24
365: dload         15
367: invokevirtual #28
370: ldc           #29
372: invokevirtual #24
375: dconst_1
376: invokevirtual #28
379: ldc           #27
381: invokevirtual #24
384: invokevirtual #26
387: dload         15
389: dconst_1
390: dcmpl
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #32
402: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 3089
End line: 3101
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        int int6 = poissonDistributionImpl2.getDomainLowerBound((-0.17739400468773303d));
        double double8 = poissonDistributionImpl2.cumulativeProbability(1.1643428520428265d);
        int int10 = poissonDistributionImpl2.getDomainUpperBound(0.39894228040143026d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.3834479069238827E-21d + "'", double8 == 1.3834479069238827E-21d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #623
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: ldc2_w        #580
48: invokevirtual #139
51: istore        4
53: aload_1
54: ldc2_w        #582
57: invokevirtual #141
60: dstore        5
62: aload_1
63: ldc2_w        #476
66: invokevirtual #34
69: istore        7
71: new           #21
74: dup
75: invokespecial #22
78: ldc           #27
80: invokevirtual #24
83: dload_2
84: invokevirtual #28
87: ldc           #29
89: invokevirtual #24
92: dconst_0
93: invokevirtual #28
96: ldc           #27
98: invokevirtual #24
101: invokevirtual #26
104: dload_2
105: dconst_0
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #32
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: iload         4
132: invokevirtual #40
135: ldc           #29
137: invokevirtual #24
140: iconst_0
141: invokevirtual #40
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: iload         4
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #32
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: dload         5
179: invokevirtual #28
182: ldc           #29
184: invokevirtual #24
187: ldc2_w        #586
190: invokevirtual #28
193: ldc           #27
195: invokevirtual #24
198: invokevirtual #26
201: dload         5
203: ldc2_w        #586
206: dcmpl
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #32
218: new           #21
221: dup
222: invokespecial #22
225: ldc           #27
227: invokevirtual #24
230: iload         7
232: invokevirtual #40
235: ldc           #29
237: invokevirtual #24
240: ldc           #41
242: invokevirtual #40
245: ldc           #27
247: invokevirtual #24
250: invokevirtual #26
253: iload         7
255: ldc           #41
257: if_icmpne     264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #32
268: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 3104
End line: 3108
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(1.3534097966303924d, 99.04467467011315d, 129);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #624
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #625
32: ldc2_w        #627
35: sipush        129
38: invokespecial #97
41: astore_1
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 3111
End line: 3121
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-0.36651292058166435d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.367 is smaller than, or equal to, the minimum (0): mean (-0.367)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #629
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #630
32: invokespecial #9
35: astore_1
36: ldc_w         #632
39: invokestatic  #17
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 3124
End line: 3130
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6564770073333787d, (-0.7534689855041378d), (int) (short) 100);
        double double5 = poissonDistributionImpl3.normalApproximateProbability(89);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #633
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #230
32: ldc2_w        #175
35: bipush        100
37: invokespecial #97
40: astore_1
41: aload_1
42: bipush        89
44: invokevirtual #63
47: dstore_2
48: new           #21
51: dup
52: invokespecial #22
55: ldc           #27
57: invokevirtual #24
60: dload_2
61: invokevirtual #28
64: ldc           #29
66: invokevirtual #24
69: dconst_1
70: invokevirtual #28
73: ldc           #27
75: invokevirtual #24
78: invokevirtual #26
81: dload_2
82: dconst_1
83: dcmpl
84: ifne          91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #32
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 3133
End line: 3143
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.0d, 0.0d, 57);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #634
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: dconst_0
31: bipush        57
33: invokespecial #97
36: astore_1
37: ldc           #51
39: invokestatic  #17
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 3146
End line: 3156
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int3 = poissonDistributionImpl1.getDomainUpperBound((double) (short) 0);
        int int5 = poissonDistributionImpl1.getDomainLowerBound(0.3596375654125127d);
        double double7 = poissonDistributionImpl1.probability(2.0126213261736259E242d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #635
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #34
39: istore_2
40: aload_1
41: ldc2_w        #636
44: invokevirtual #139
47: istore_3
48: aload_1
49: ldc2_w        #638
52: invokevirtual #44
55: dstore        4
57: new           #21
60: dup
61: invokespecial #22
64: ldc           #27
66: invokevirtual #24
69: iload_2
70: invokevirtual #40
73: ldc           #29
75: invokevirtual #24
78: ldc           #41
80: invokevirtual #40
83: ldc           #27
85: invokevirtual #24
88: invokevirtual #26
91: iload_2
92: ldc           #41
94: if_icmpne     101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #32
105: new           #21
108: dup
109: invokespecial #22
112: ldc           #27
114: invokevirtual #24
117: iload_3
118: invokevirtual #40
121: ldc           #29
123: invokevirtual #24
126: iconst_0
127: invokevirtual #40
130: ldc           #27
132: invokevirtual #24
135: invokevirtual #26
138: iload_3
139: ifne          146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #32
150: new           #21
153: dup
154: invokespecial #22
157: ldc           #27
159: invokevirtual #24
162: dload         4
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: dconst_0
173: invokevirtual #28
176: ldc           #27
178: invokevirtual #24
181: invokevirtual #26
184: dload         4
186: dconst_0
187: dcmpl
188: ifne          195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #32
199: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 3159
End line: 3175
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        double double14 = poissonDistributionImpl1.cumulativeProbability(10);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9999999899522336d + "'", double14 == 0.9999999899522336d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #640
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: bipush        10
76: invokevirtual #43
79: dstore        11
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #27
90: invokevirtual #24
93: dload_2
94: invokevirtual #28
97: ldc           #29
99: invokevirtual #24
102: ldc2_w        #30
105: invokevirtual #28
108: ldc           #27
110: invokevirtual #24
113: invokevirtual #26
116: dload_2
117: ldc2_w        #30
120: dcmpl
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #32
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: dload         4
146: invokevirtual #28
149: ldc           #29
151: invokevirtual #24
154: ldc2_w        #45
157: invokevirtual #28
160: ldc           #27
162: invokevirtual #24
165: invokevirtual #26
168: dload         4
170: ldc2_w        #45
173: dcmpl
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #32
185: new           #21
188: dup
189: invokespecial #22
192: ldc           #27
194: invokevirtual #24
197: dload         6
199: invokevirtual #28
202: ldc           #29
204: invokevirtual #24
207: ldc2_w        #87
210: invokevirtual #28
213: ldc           #27
215: invokevirtual #24
218: invokevirtual #26
221: dload         6
223: ldc2_w        #87
226: dcmpl
227: ifne          234
230: iconst_1
231: goto          235
234: iconst_0
235: invokestatic  #32
238: new           #21
241: dup
242: invokespecial #22
245: ldc           #27
247: invokevirtual #24
250: dload         8
252: invokevirtual #28
255: ldc           #29
257: invokevirtual #24
260: ldc2_w        #45
263: invokevirtual #28
266: ldc           #27
268: invokevirtual #24
271: invokevirtual #26
274: dload         8
276: ldc2_w        #45
279: dcmpl
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #32
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: iload         10
305: invokevirtual #40
308: ldc           #29
310: invokevirtual #24
313: iconst_0
314: invokevirtual #40
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: iload         10
327: ifne          334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #32
338: new           #21
341: dup
342: invokespecial #22
345: ldc           #27
347: invokevirtual #24
350: dload         11
352: invokevirtual #28
355: ldc           #29
357: invokevirtual #24
360: ldc2_w        #178
363: invokevirtual #28
366: ldc           #27
368: invokevirtual #24
371: invokevirtual #26
374: dload         11
376: ldc2_w        #178
379: dcmpl
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #32
391: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 3178
End line: 3209
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        double double16 = poissonDistributionImpl1.cumulativeProbability(0);
        int int17 = poissonDistributionImpl1.sample();
        double double19 = poissonDistributionImpl1.cumulativeProbability(24);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = poissonDistributionImpl1.cumulativeProbability((double) 97L, 0.31738700241670326d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #641
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: iconst_0
82: invokevirtual #43
85: dstore        11
87: aload_1
88: invokevirtual #61
91: istore        13
93: aload_1
94: bipush        24
96: invokevirtual #43
99: dstore        14
101: aload_1
102: ldc2_w        #55
105: ldc2_w        #336
108: invokevirtual #12
111: dstore        16
113: ldc           #16
115: invokestatic  #17
118: goto          163
121: astore        16
123: aload         16
125: invokevirtual #19
128: invokevirtual #20
131: ifne          163
134: new           #21
137: dup
138: invokespecial #22
141: ldc           #23
143: invokevirtual #24
146: aload         16
148: invokevirtual #19
151: invokevirtual #25
154: invokevirtual #24
157: invokevirtual #26
160: invokestatic  #17
163: new           #21
166: dup
167: invokespecial #22
170: ldc           #27
172: invokevirtual #24
175: dload_2
176: invokevirtual #28
179: ldc           #29
181: invokevirtual #24
184: ldc2_w        #30
187: invokevirtual #28
190: ldc           #27
192: invokevirtual #24
195: invokevirtual #26
198: dload_2
199: ldc2_w        #30
202: dcmpl
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #32
214: new           #21
217: dup
218: invokespecial #22
221: ldc           #27
223: invokevirtual #24
226: dload         4
228: invokevirtual #28
231: ldc           #29
233: invokevirtual #24
236: ldc2_w        #45
239: invokevirtual #28
242: ldc           #27
244: invokevirtual #24
247: invokevirtual #26
250: dload         4
252: ldc2_w        #45
255: dcmpl
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #32
267: new           #21
270: dup
271: invokespecial #22
274: ldc           #27
276: invokevirtual #24
279: dload         6
281: invokevirtual #28
284: ldc           #29
286: invokevirtual #24
289: ldc2_w        #87
292: invokevirtual #28
295: ldc           #27
297: invokevirtual #24
300: invokevirtual #26
303: dload         6
305: ldc2_w        #87
308: dcmpl
309: ifne          316
312: iconst_1
313: goto          317
316: iconst_0
317: invokestatic  #32
320: new           #21
323: dup
324: invokespecial #22
327: ldc           #27
329: invokevirtual #24
332: dload         8
334: invokevirtual #28
337: ldc           #29
339: invokevirtual #24
342: ldc2_w        #45
345: invokevirtual #28
348: ldc           #27
350: invokevirtual #24
353: invokevirtual #26
356: dload         8
358: ldc2_w        #45
361: dcmpl
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #32
373: new           #21
376: dup
377: invokespecial #22
380: ldc           #27
382: invokevirtual #24
385: iload         10
387: invokevirtual #40
390: ldc           #29
392: invokevirtual #24
395: iconst_0
396: invokevirtual #40
399: ldc           #27
401: invokevirtual #24
404: invokevirtual #26
407: iload         10
409: ifne          416
412: iconst_1
413: goto          417
416: iconst_0
417: invokestatic  #32
420: new           #21
423: dup
424: invokespecial #22
427: ldc           #27
429: invokevirtual #24
432: dload         11
434: invokevirtual #28
437: ldc           #29
439: invokevirtual #24
442: ldc2_w        #45
445: invokevirtual #28
448: ldc           #27
450: invokevirtual #24
453: invokevirtual #26
456: dload         11
458: ldc2_w        #45
461: dcmpl
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #32
473: new           #21
476: dup
477: invokespecial #22
480: ldc           #27
482: invokevirtual #24
485: iload         13
487: invokevirtual #40
490: ldc           #29
492: invokevirtual #24
495: iconst_1
496: invokevirtual #40
499: ldc           #27
501: invokevirtual #24
504: invokevirtual #26
507: iload         13
509: iconst_1
510: if_icmpne     517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #32
521: new           #21
524: dup
525: invokespecial #22
528: ldc           #27
530: invokevirtual #24
533: dload         14
535: invokevirtual #28
538: ldc           #29
540: invokevirtual #24
543: dconst_1
544: invokevirtual #28
547: ldc           #27
549: invokevirtual #24
552: invokevirtual #26
555: dload         14
557: dconst_1
558: dcmpl
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #32
570: return
Exception table:
from    to  target type
101   118   121   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 3212
End line: 3232
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        double double14 = poissonDistributionImpl1.cumulativeProbability((double) (-1));
        double double16 = poissonDistributionImpl1.probability((-1));
        double double18 = poissonDistributionImpl1.probability((-0.7772100563230903d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #642
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: ldc2_w        #142
78: invokevirtual #141
81: dstore        12
83: aload_1
84: iconst_m1
85: invokevirtual #54
88: dstore        14
90: aload_1
91: ldc2_w        #643
94: invokevirtual #44
97: dstore        16
99: new           #21
102: dup
103: invokespecial #22
106: ldc           #27
108: invokevirtual #24
111: dload_2
112: invokevirtual #28
115: ldc           #29
117: invokevirtual #24
120: ldc2_w        #30
123: invokevirtual #28
126: ldc           #27
128: invokevirtual #24
131: invokevirtual #26
134: dload_2
135: ldc2_w        #30
138: dcmpl
139: ifne          146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #32
150: new           #21
153: dup
154: invokespecial #22
157: ldc           #27
159: invokevirtual #24
162: dload         4
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: ldc2_w        #45
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload         4
188: ldc2_w        #45
191: dcmpl
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #32
203: new           #21
206: dup
207: invokespecial #22
210: ldc           #27
212: invokevirtual #24
215: dload         6
217: invokevirtual #28
220: ldc           #29
222: invokevirtual #24
225: ldc2_w        #87
228: invokevirtual #28
231: ldc           #27
233: invokevirtual #24
236: invokevirtual #26
239: dload         6
241: ldc2_w        #87
244: dcmpl
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #32
256: new           #21
259: dup
260: invokespecial #22
263: ldc           #27
265: invokevirtual #24
268: dload         8
270: invokevirtual #28
273: ldc           #29
275: invokevirtual #24
278: dconst_1
279: invokevirtual #28
282: ldc           #27
284: invokevirtual #24
287: invokevirtual #26
290: dload         8
292: dconst_1
293: dcmpl
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: dload         10
319: invokevirtual #28
322: ldc           #29
324: invokevirtual #24
327: ldc2_w        #47
330: invokevirtual #28
333: ldc           #27
335: invokevirtual #24
338: invokevirtual #26
341: dload         10
343: ldc2_w        #47
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: dload         12
372: invokevirtual #28
375: ldc           #29
377: invokevirtual #24
380: dconst_0
381: invokevirtual #28
384: ldc           #27
386: invokevirtual #24
389: invokevirtual #26
392: dload         12
394: dconst_0
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #32
407: new           #21
410: dup
411: invokespecial #22
414: ldc           #27
416: invokevirtual #24
419: dload         14
421: invokevirtual #28
424: ldc           #29
426: invokevirtual #24
429: dconst_0
430: invokevirtual #28
433: ldc           #27
435: invokevirtual #24
438: invokevirtual #26
441: dload         14
443: dconst_0
444: dcmpl
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #32
456: new           #21
459: dup
460: invokespecial #22
463: ldc           #27
465: invokevirtual #24
468: dload         16
470: invokevirtual #28
473: ldc           #29
475: invokevirtual #24
478: dconst_0
479: invokevirtual #28
482: ldc           #27
484: invokevirtual #24
487: invokevirtual #26
490: dload         16
492: dconst_0
493: dcmpl
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #32
505: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 3235
End line: 3265
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        long long18 = randomDataImpl5.nextLong(52L, 60L);
        double double21 = randomDataImpl5.nextCauchy(0.18116021952662198d, (double) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = randomDataImpl5.nextSecureInt(48, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 48 is larger than, or equal to, the maximum (0): lower bound (48) must be strictly less than upper bound (0)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 554.4068459182583d + "'", double7 == 554.4068459182583d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 57L + "'", long18 == 57L);
// flaky:         org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0408003152561758d + "'", double21 == 1.0408003152561758d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #645
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #646
111: ldc2_w        #648
114: invokevirtual #123
117: lstore        15
119: aload         6
121: ldc2_w        #650
124: dconst_1
125: invokevirtual #652
128: dstore        17
130: aload         6
132: bipush        48
134: iconst_0
135: invokevirtual #653
138: istore        19
140: ldc_w         #654
143: invokestatic  #17
146: goto          151
149: astore        19
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload_2
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: dconst_0
173: invokevirtual #28
176: ldc           #27
178: invokevirtual #24
181: invokevirtual #26
184: dload_2
185: dconst_0
186: dcmpl
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #32
198: new           #21
201: dup
202: invokespecial #22
205: ldc           #27
207: invokevirtual #24
210: dload         4
212: invokevirtual #28
215: ldc           #29
217: invokevirtual #24
220: ldc2_w        #118
223: invokevirtual #28
226: ldc           #27
228: invokevirtual #24
231: invokevirtual #26
234: dload         4
236: ldc2_w        #118
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #32
251: aload         6
253: invokestatic  #77
256: new           #21
259: dup
260: invokespecial #22
263: ldc           #27
265: invokevirtual #24
268: dload         10
270: invokevirtual #28
273: ldc           #29
275: invokevirtual #24
278: ldc2_w        #47
281: invokevirtual #28
284: ldc           #27
286: invokevirtual #24
289: invokevirtual #26
292: dload         10
294: ldc2_w        #47
297: dcmpl
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #32
309: new           #21
312: dup
313: invokespecial #22
316: ldc           #27
318: invokevirtual #24
321: dload         12
323: invokevirtual #28
326: ldc           #29
328: invokevirtual #24
331: dconst_1
332: invokevirtual #28
335: ldc           #27
337: invokevirtual #24
340: invokevirtual #26
343: dload         12
345: dconst_1
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: return
Exception table:
from    to  target type
130   146   149   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 3268
End line: 3280
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double8 = poissonDistributionImpl1.cumulativeProbability((-1.0870302912451684d), 0.47712125471966244d);
        double double10 = poissonDistributionImpl1.probability(0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117144233d + "'", double10 == 0.36787944117144233d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #655
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #339
53: ldc2_w        #241
56: invokevirtual #12
59: dstore        6
61: aload_1
62: dconst_0
63: invokevirtual #44
66: dstore        8
68: new           #21
71: dup
72: invokespecial #22
75: ldc           #27
77: invokevirtual #24
80: dload_2
81: invokevirtual #28
84: ldc           #29
86: invokevirtual #24
89: ldc2_w        #47
92: invokevirtual #28
95: ldc           #27
97: invokevirtual #24
100: invokevirtual #26
103: dload_2
104: ldc2_w        #47
107: dcmpl
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #32
119: new           #21
122: dup
123: invokespecial #22
126: ldc           #27
128: invokevirtual #24
131: dload         4
133: invokevirtual #28
136: ldc           #29
138: invokevirtual #24
141: ldc2_w        #178
144: invokevirtual #28
147: ldc           #27
149: invokevirtual #24
152: invokevirtual #26
155: dload         4
157: ldc2_w        #178
160: dcmpl
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #32
172: new           #21
175: dup
176: invokespecial #22
179: ldc           #27
181: invokevirtual #24
184: dload         6
186: invokevirtual #28
189: ldc           #29
191: invokevirtual #24
194: ldc2_w        #45
197: invokevirtual #28
200: ldc           #27
202: invokevirtual #24
205: invokevirtual #26
208: dload         6
210: ldc2_w        #45
213: dcmpl
214: ifne          221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #32
225: new           #21
228: dup
229: invokespecial #22
232: ldc           #27
234: invokevirtual #24
237: dload         8
239: invokevirtual #28
242: ldc           #29
244: invokevirtual #24
247: ldc2_w        #168
250: invokevirtual #28
253: ldc           #27
255: invokevirtual #24
258: invokevirtual #26
261: dload         8
263: ldc2_w        #168
266: dcmpl
267: ifne          274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #32
278: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 3283
End line: 3304
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability((double) 55L);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 556.0680330409584d + "'", double7 == 556.0680330409584d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #656
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc2_w        #657
111: invokevirtual #141
114: dstore        15
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #27
125: invokevirtual #24
128: dload_2
129: invokevirtual #28
132: ldc           #29
134: invokevirtual #24
137: dconst_0
138: invokevirtual #28
141: ldc           #27
143: invokevirtual #24
146: invokevirtual #26
149: dload_2
150: dconst_0
151: dcmpl
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #32
163: new           #21
166: dup
167: invokespecial #22
170: ldc           #27
172: invokevirtual #24
175: dload         4
177: invokevirtual #28
180: ldc           #29
182: invokevirtual #24
185: ldc2_w        #118
188: invokevirtual #28
191: ldc           #27
193: invokevirtual #24
196: invokevirtual #26
199: dload         4
201: ldc2_w        #118
204: dcmpl
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #32
216: aload         6
218: invokestatic  #77
221: new           #21
224: dup
225: invokespecial #22
228: ldc           #27
230: invokevirtual #24
233: dload         10
235: invokevirtual #28
238: ldc           #29
240: invokevirtual #24
243: ldc2_w        #47
246: invokevirtual #28
249: ldc           #27
251: invokevirtual #24
254: invokevirtual #26
257: dload         10
259: ldc2_w        #47
262: dcmpl
263: ifne          270
266: iconst_1
267: goto          271
270: iconst_0
271: invokestatic  #32
274: new           #21
277: dup
278: invokespecial #22
281: ldc           #27
283: invokevirtual #24
286: dload         12
288: invokevirtual #28
291: ldc           #29
293: invokevirtual #24
296: dconst_1
297: invokevirtual #28
300: ldc           #27
302: invokevirtual #24
305: invokevirtual #26
308: dload         12
310: dconst_1
311: dcmpl
312: ifne          319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #32
323: new           #21
326: dup
327: invokespecial #22
330: ldc           #27
332: invokevirtual #24
335: dload         15
337: invokevirtual #28
340: ldc           #29
342: invokevirtual #24
345: dconst_1
346: invokevirtual #28
349: ldc           #27
351: invokevirtual #24
354: invokevirtual #26
357: dload         15
359: dconst_1
360: dcmpl
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #32
372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 3307
End line: 3336
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = poissonDistributionImpl1.cumulativeProbability(108, 54);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #659
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload_1
96: bipush        108
98: bipush        54
100: invokevirtual #64
103: dstore        13
105: ldc           #16
107: invokestatic  #17
110: goto          155
113: astore        13
115: aload         13
117: invokevirtual #19
120: invokevirtual #20
123: ifne          155
126: new           #21
129: dup
130: invokespecial #22
133: ldc           #23
135: invokevirtual #24
138: aload         13
140: invokevirtual #19
143: invokevirtual #25
146: invokevirtual #24
149: invokevirtual #26
152: invokestatic  #17
155: new           #21
158: dup
159: invokespecial #22
162: ldc           #27
164: invokevirtual #24
167: dload_2
168: invokevirtual #28
171: ldc           #29
173: invokevirtual #24
176: ldc2_w        #30
179: invokevirtual #28
182: ldc           #27
184: invokevirtual #24
187: invokevirtual #26
190: dload_2
191: ldc2_w        #30
194: dcmpl
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #32
206: new           #21
209: dup
210: invokespecial #22
213: ldc           #27
215: invokevirtual #24
218: dload         4
220: invokevirtual #28
223: ldc           #29
225: invokevirtual #24
228: ldc2_w        #45
231: invokevirtual #28
234: ldc           #27
236: invokevirtual #24
239: invokevirtual #26
242: dload         4
244: ldc2_w        #45
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #32
259: new           #21
262: dup
263: invokespecial #22
266: ldc           #27
268: invokevirtual #24
271: dload         6
273: invokevirtual #28
276: ldc           #29
278: invokevirtual #24
281: ldc2_w        #87
284: invokevirtual #28
287: ldc           #27
289: invokevirtual #24
292: invokevirtual #26
295: dload         6
297: ldc2_w        #87
300: dcmpl
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #32
312: new           #21
315: dup
316: invokespecial #22
319: ldc           #27
321: invokevirtual #24
324: dload         8
326: invokevirtual #28
329: ldc           #29
331: invokevirtual #24
334: ldc2_w        #45
337: invokevirtual #28
340: ldc           #27
342: invokevirtual #24
345: invokevirtual #26
348: dload         8
350: ldc2_w        #45
353: dcmpl
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #32
365: new           #21
368: dup
369: invokespecial #22
372: ldc           #27
374: invokevirtual #24
377: iload         10
379: invokevirtual #40
382: ldc           #29
384: invokevirtual #24
387: iconst_0
388: invokevirtual #40
391: ldc           #27
393: invokevirtual #24
396: invokevirtual #26
399: iload         10
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #32
412: new           #21
415: dup
416: invokespecial #22
419: ldc           #27
421: invokevirtual #24
424: iload         11
426: invokevirtual #40
429: ldc           #29
431: invokevirtual #24
434: iconst_0
435: invokevirtual #40
438: ldc           #27
440: invokevirtual #24
443: invokevirtual #26
446: iload         11
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #32
459: aload         12
461: invokestatic  #77
464: return
Exception table:
from    to  target type
95   110   113   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test174
Start line: 3339
End line: 3358
Method source code: 
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        int int17 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #660
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: invokevirtual #61
93: istore        12
95: new           #21
98: dup
99: invokespecial #22
102: ldc           #27
104: invokevirtual #24
107: dload_2
108: invokevirtual #28
111: ldc           #29
113: invokevirtual #24
116: ldc2_w        #30
119: invokevirtual #28
122: ldc           #27
124: invokevirtual #24
127: invokevirtual #26
130: dload_2
131: ldc2_w        #30
134: dcmpl
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #32
146: new           #21
149: dup
150: invokespecial #22
153: ldc           #27
155: invokevirtual #24
158: dload         4
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: ldc2_w        #45
171: invokevirtual #28
174: ldc           #27
176: invokevirtual #24
179: invokevirtual #26
182: dload         4
184: ldc2_w        #45
187: dcmpl
188: ifne          195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #32
199: new           #21
202: dup
203: invokespecial #22
206: ldc           #27
208: invokevirtual #24
211: dload         6
213: invokevirtual #28
216: ldc           #29
218: invokevirtual #24
221: ldc2_w        #87
224: invokevirtual #28
227: ldc           #27
229: invokevirtual #24
232: invokevirtual #26
235: dload         6
237: ldc2_w        #87
240: dcmpl
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #32
252: new           #21
255: dup
256: invokespecial #22
259: ldc           #27
261: invokevirtual #24
264: dload         8
266: invokevirtual #28
269: ldc           #29
271: invokevirtual #24
274: ldc2_w        #45
277: invokevirtual #28
280: ldc           #27
282: invokevirtual #24
285: invokevirtual #26
288: dload         8
290: ldc2_w        #45
293: dcmpl
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: iload         10
319: invokevirtual #40
322: ldc           #29
324: invokevirtual #24
327: iconst_0
328: invokevirtual #40
331: ldc           #27
333: invokevirtual #24
336: invokevirtual #26
339: iload         10
341: ifne          348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #32
352: new           #21
355: dup
356: invokespecial #22
359: ldc           #27
361: invokevirtual #24
364: iload         11
366: invokevirtual #40
369: ldc           #29
371: invokevirtual #24
374: iconst_0
375: invokevirtual #40
378: ldc           #27
380: invokevirtual #24
383: invokevirtual #26
386: iload         11
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: new           #21
402: dup
403: invokespecial #22
406: ldc           #27
408: invokevirtual #24
411: iload         12
413: invokevirtual #40
416: ldc           #29
418: invokevirtual #24
421: iconst_1
422: invokevirtual #40
425: ldc           #27
427: invokevirtual #24
430: invokevirtual #26
433: iload         12
435: iconst_1
436: if_icmpne     443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #32
447: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test175
Start line: 3361
End line: 3373
Method source code: 
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double3 = poissonDistributionImpl2.getMean();
        double double4 = poissonDistributionImpl2.getMean();
        int int6 = poissonDistributionImpl2.getDomainLowerBound(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl2.randomData;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #661
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: aload_1
43: invokevirtual #102
46: dstore        4
48: aload_1
49: dconst_0
50: invokevirtual #139
53: istore        6
55: aload_1
56: getfield      #72
59: astore        7
61: new           #21
64: dup
65: invokespecial #22
68: ldc           #27
70: invokevirtual #24
73: dload_2
74: invokevirtual #28
77: ldc           #29
79: invokevirtual #24
82: ldc2_w        #10
85: invokevirtual #28
88: ldc           #27
90: invokevirtual #24
93: invokevirtual #26
96: dload_2
97: ldc2_w        #10
100: dcmpl
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #32
112: new           #21
115: dup
116: invokespecial #22
119: ldc           #27
121: invokevirtual #24
124: dload         4
126: invokevirtual #28
129: ldc           #29
131: invokevirtual #24
134: ldc2_w        #10
137: invokevirtual #28
140: ldc           #27
142: invokevirtual #24
145: invokevirtual #26
148: dload         4
150: ldc2_w        #10
153: dcmpl
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #32
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: iload         6
179: invokevirtual #40
182: ldc           #29
184: invokevirtual #24
187: iconst_0
188: invokevirtual #40
191: ldc           #27
193: invokevirtual #24
196: invokevirtual #26
199: iload         6
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #32
212: aload         7
214: invokestatic  #77
217: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test176
Start line: 3376
End line: 3384
Method source code: 
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d);
        double double3 = poissonDistributionImpl1.normalApproximateProbability((int) (short) -1);
        double double4 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.07864960352514244d + "'", double3 == 0.07864960352514244d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.5d + "'", double4 == 0.5d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #662
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: invokespecial #9
35: astore_1
36: aload_1
37: iconst_m1
38: invokevirtual #63
41: dstore_2
42: aload_1
43: invokevirtual #102
46: dstore        4
48: new           #21
51: dup
52: invokespecial #22
55: ldc           #27
57: invokevirtual #24
60: dload_2
61: invokevirtual #28
64: ldc           #29
66: invokevirtual #24
69: ldc2_w        #415
72: invokevirtual #28
75: ldc           #27
77: invokevirtual #24
80: invokevirtual #26
83: dload_2
84: ldc2_w        #415
87: dcmpl
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #32
99: new           #21
102: dup
103: invokespecial #22
106: ldc           #27
108: invokevirtual #24
111: dload         4
113: invokevirtual #28
116: ldc           #29
118: invokevirtual #24
121: ldc2_w        #269
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload         4
137: ldc2_w        #269
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test177
Start line: 3387
End line: 3404
Method source code: 
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        double double14 = poissonDistributionImpl1.cumulativeProbability(0, 96);
        int int16 = poissonDistributionImpl1.getDomainLowerBound((-0.8924617384065663d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #663
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: iconst_0
74: bipush        96
76: invokevirtual #64
79: dstore        8
81: aload_1
82: ldc2_w        #664
85: invokevirtual #139
88: istore        10
90: new           #21
93: dup
94: invokespecial #22
97: ldc           #27
99: invokevirtual #24
102: dload_2
103: invokevirtual #28
106: ldc           #29
108: invokevirtual #24
111: ldc2_w        #30
114: invokevirtual #28
117: ldc           #27
119: invokevirtual #24
122: invokevirtual #26
125: dload_2
126: ldc2_w        #30
129: dcmpl
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #32
141: new           #21
144: dup
145: invokespecial #22
148: ldc           #27
150: invokevirtual #24
153: dload         4
155: invokevirtual #28
158: ldc           #29
160: invokevirtual #24
163: ldc2_w        #45
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: ldc2_w        #45
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: iload         7
208: invokevirtual #40
211: ldc           #29
213: invokevirtual #24
216: ldc           #41
218: invokevirtual #40
221: ldc           #27
223: invokevirtual #24
226: invokevirtual #26
229: iload         7
231: ldc           #41
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #32
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: dload         8
258: invokevirtual #28
261: ldc           #29
263: invokevirtual #24
266: dconst_1
267: invokevirtual #28
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: dload         8
280: dconst_1
281: dcmpl
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #32
293: new           #21
296: dup
297: invokespecial #22
300: ldc           #27
302: invokevirtual #24
305: iload         10
307: invokevirtual #40
310: ldc           #29
312: invokevirtual #24
315: iconst_0
316: invokevirtual #40
319: ldc           #27
321: invokevirtual #24
324: invokevirtual #26
327: iload         10
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #32
340: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test178
Start line: 3407
End line: 3423
Method source code: 
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        double double12 = randomDataImpl7.nextT(0.2419707245191434d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.087834868877128d + "'", double10 == 2.087834868877128d);
// flaky:         org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.1102749655166307d + "'", double12 == 0.1102749655166307d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #666
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: ldc2_w        #667
78: invokevirtual #75
81: dstore        9
83: new           #21
86: dup
87: invokespecial #22
90: ldc           #27
92: invokevirtual #24
95: dload_2
96: invokevirtual #28
99: ldc           #29
101: invokevirtual #24
104: ldc2_w        #47
107: invokevirtual #28
110: ldc           #27
112: invokevirtual #24
115: invokevirtual #26
118: dload_2
119: ldc2_w        #47
122: dcmpl
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #32
134: aload         4
136: invokestatic  #77
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: iload         5
153: invokevirtual #40
156: ldc           #29
158: invokevirtual #24
161: iconst_m1
162: invokevirtual #40
165: ldc           #27
167: invokevirtual #24
170: invokevirtual #26
173: iload         5
175: iconst_m1
176: if_icmpne     183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #32
187: aload         6
189: invokestatic  #77
192: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test179
Start line: 3426
End line: 3432
Method source code: 
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.015611499573953436d, 5.699573249784173d);
        double double4 = poissonDistributionImpl2.cumulativeProbability(4);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.9999999999923922d + "'", double4 == 0.9999999999923922d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #669
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #670
32: ldc2_w        #672
35: invokespecial #255
38: astore_1
39: aload_1
40: iconst_4
41: invokevirtual #43
44: dstore_2
45: new           #21
48: dup
49: invokespecial #22
52: ldc           #27
54: invokevirtual #24
57: dload_2
58: invokevirtual #28
61: ldc           #29
63: invokevirtual #24
66: ldc2_w        #674
69: invokevirtual #28
72: ldc           #27
74: invokevirtual #24
77: invokevirtual #26
80: dload_2
81: ldc2_w        #674
84: dcmpl
85: ifne          92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #32
96: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test180
Start line: 3435
End line: 3462
Method source code: 
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double19 = poissonDistributionImpl9.cumulativeProbability(0);
        double double22 = poissonDistributionImpl9.cumulativeProbability(0.0d, 0.48656760131299903d);
        int int24 = poissonDistributionImpl9.getDomainLowerBound(35.23346405691215d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 584.6781282556448d + "'", double7 == 584.6781282556448d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.36787944117146065d + "'", double19 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.36787944117146065d + "'", double22 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #676
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: iconst_0
118: invokevirtual #43
121: dstore        17
123: aload         9
125: dconst_0
126: ldc2_w        #677
129: invokevirtual #12
132: dstore        19
134: aload         9
136: ldc2_w        #679
139: invokevirtual #139
142: istore        21
144: new           #21
147: dup
148: invokespecial #22
151: ldc           #27
153: invokevirtual #24
156: dload_2
157: invokevirtual #28
160: ldc           #29
162: invokevirtual #24
165: dconst_0
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload_2
178: dconst_0
179: dcmpl
180: ifne          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #32
191: new           #21
194: dup
195: invokespecial #22
198: ldc           #27
200: invokevirtual #24
203: dload         4
205: invokevirtual #28
208: ldc           #29
210: invokevirtual #24
213: ldc2_w        #118
216: invokevirtual #28
219: ldc           #27
221: invokevirtual #24
224: invokevirtual #26
227: dload         4
229: ldc2_w        #118
232: dcmpl
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #32
244: aload         6
246: invokestatic  #77
249: new           #21
252: dup
253: invokespecial #22
256: ldc           #27
258: invokevirtual #24
261: dload         10
263: invokevirtual #28
266: ldc           #29
268: invokevirtual #24
271: ldc2_w        #47
274: invokevirtual #28
277: ldc           #27
279: invokevirtual #24
282: invokevirtual #26
285: dload         10
287: ldc2_w        #47
290: dcmpl
291: ifne          298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #32
302: new           #21
305: dup
306: invokespecial #22
309: ldc           #27
311: invokevirtual #24
314: dload         12
316: invokevirtual #28
319: ldc           #29
321: invokevirtual #24
324: dconst_1
325: invokevirtual #28
328: ldc           #27
330: invokevirtual #24
333: invokevirtual #26
336: dload         12
338: dconst_1
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #32
351: new           #21
354: dup
355: invokespecial #22
358: ldc           #27
360: invokevirtual #24
363: dload         15
365: invokevirtual #28
368: ldc           #29
370: invokevirtual #24
373: dconst_1
374: invokevirtual #28
377: ldc           #27
379: invokevirtual #24
382: invokevirtual #26
385: dload         15
387: dconst_1
388: dcmpl
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #32
400: new           #21
403: dup
404: invokespecial #22
407: ldc           #27
409: invokevirtual #24
412: dload         17
414: invokevirtual #28
417: ldc           #29
419: invokevirtual #24
422: ldc2_w        #45
425: invokevirtual #28
428: ldc           #27
430: invokevirtual #24
433: invokevirtual #26
436: dload         17
438: ldc2_w        #45
441: dcmpl
442: ifne          449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #32
453: new           #21
456: dup
457: invokespecial #22
460: ldc           #27
462: invokevirtual #24
465: dload         19
467: invokevirtual #28
470: ldc           #29
472: invokevirtual #24
475: ldc2_w        #45
478: invokevirtual #28
481: ldc           #27
483: invokevirtual #24
486: invokevirtual #26
489: dload         19
491: ldc2_w        #45
494: dcmpl
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #32
506: new           #21
509: dup
510: invokespecial #22
513: ldc           #27
515: invokevirtual #24
518: iload         21
520: invokevirtual #40
523: ldc           #29
525: invokevirtual #24
528: iconst_0
529: invokevirtual #40
532: ldc           #27
534: invokevirtual #24
537: invokevirtual #26
540: iload         21
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #32
553: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test181
Start line: 3465
End line: 3476
Method source code: 
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.9014110163717823d, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl2.cumulativeProbability(5.345891027618216d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (-1) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #681
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #298
32: iconst_m1
33: invokespecial #50
36: astore_1
37: aload_1
38: ldc2_w        #682
41: invokevirtual #141
44: dstore_2
45: ldc_w         #684
48: invokestatic  #17
51: goto          55
54: astore_2
55: return
Exception table:
from    to  target type
37    51    54   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test182
Start line: 3479
End line: 3499
Method source code: 
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        double double16 = poissonDistributionImpl1.cumulativeProbability(1, (int) (short) 100);
        double double18 = poissonDistributionImpl1.cumulativeProbability(10000000);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.6321205588285393d + "'", double16 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #685
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: iconst_1
83: bipush        100
85: invokevirtual #64
88: dstore        11
90: aload_1
91: ldc           #225
93: invokevirtual #43
96: dstore        13
98: new           #21
101: dup
102: invokespecial #22
105: ldc           #27
107: invokevirtual #24
110: dload_2
111: invokevirtual #28
114: ldc           #29
116: invokevirtual #24
119: ldc2_w        #47
122: invokevirtual #28
125: ldc           #27
127: invokevirtual #24
130: invokevirtual #26
133: dload_2
134: ldc2_w        #47
137: dcmpl
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #32
149: new           #21
152: dup
153: invokespecial #22
156: ldc           #27
158: invokevirtual #24
161: dload         4
163: invokevirtual #28
166: ldc           #29
168: invokevirtual #24
171: dconst_1
172: invokevirtual #28
175: ldc           #27
177: invokevirtual #24
180: invokevirtual #26
183: dload         4
185: dconst_1
186: dcmpl
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #32
198: new           #21
201: dup
202: invokespecial #22
205: ldc           #27
207: invokevirtual #24
210: iload         6
212: invokevirtual #40
215: ldc           #29
217: invokevirtual #24
220: ldc           #41
222: invokevirtual #40
225: ldc           #27
227: invokevirtual #24
230: invokevirtual #26
233: iload         6
235: ldc           #41
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #32
248: new           #21
251: dup
252: invokespecial #22
255: ldc           #27
257: invokevirtual #24
260: iload         7
262: invokevirtual #40
265: ldc           #29
267: invokevirtual #24
270: iconst_0
271: invokevirtual #40
274: ldc           #27
276: invokevirtual #24
279: invokevirtual #26
282: iload         7
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #32
295: new           #21
298: dup
299: invokespecial #22
302: ldc           #27
304: invokevirtual #24
307: dload         9
309: invokevirtual #28
312: ldc           #29
314: invokevirtual #24
317: ldc2_w        #45
320: invokevirtual #28
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: dload         9
333: ldc2_w        #45
336: dcmpl
337: ifne          344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #32
348: new           #21
351: dup
352: invokespecial #22
355: ldc           #27
357: invokevirtual #24
360: dload         11
362: invokevirtual #28
365: ldc           #29
367: invokevirtual #24
370: ldc2_w        #30
373: invokevirtual #28
376: ldc           #27
378: invokevirtual #24
381: invokevirtual #26
384: dload         11
386: ldc2_w        #30
389: dcmpl
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #32
401: new           #21
404: dup
405: invokespecial #22
408: ldc           #27
410: invokevirtual #24
413: dload         13
415: invokevirtual #28
418: ldc           #29
420: invokevirtual #24
423: dconst_1
424: invokevirtual #28
427: ldc           #27
429: invokevirtual #24
432: invokevirtual #26
435: dload         13
437: dconst_1
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #32
450: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test183
Start line: 3502
End line: 3514
Method source code: 
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainLowerBound(0.12308411467852295d);
        int int9 = poissonDistributionImpl1.getDomainUpperBound((-2.4621505057366684d));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #686
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #687
53: invokevirtual #139
56: istore        6
58: aload_1
59: ldc2_w        #689
62: invokevirtual #34
65: istore        7
67: new           #21
70: dup
71: invokespecial #22
74: ldc           #27
76: invokevirtual #24
79: dload_2
80: invokevirtual #28
83: ldc           #29
85: invokevirtual #24
88: ldc2_w        #47
91: invokevirtual #28
94: ldc           #27
96: invokevirtual #24
99: invokevirtual #26
102: dload_2
103: ldc2_w        #47
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #32
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload         4
132: invokevirtual #28
135: ldc           #29
137: invokevirtual #24
140: dconst_1
141: invokevirtual #28
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: dload         4
154: dconst_1
155: dcmpl
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #32
167: new           #21
170: dup
171: invokespecial #22
174: ldc           #27
176: invokevirtual #24
179: iload         6
181: invokevirtual #40
184: ldc           #29
186: invokevirtual #24
189: iconst_0
190: invokevirtual #40
193: ldc           #27
195: invokevirtual #24
198: invokevirtual #26
201: iload         6
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #32
214: new           #21
217: dup
218: invokespecial #22
221: ldc           #27
223: invokevirtual #24
226: iload         7
228: invokevirtual #40
231: ldc           #29
233: invokevirtual #24
236: ldc           #41
238: invokevirtual #40
241: ldc           #27
243: invokevirtual #24
246: invokevirtual #26
249: iload         7
251: ldc           #41
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #32
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test184
Start line: 3517
End line: 3581
Method source code: 
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        randomDataImpl5.reSeedSecure((long) (byte) 1);
        int int15 = randomDataImpl5.nextZipf(3, 0.4849214332324801d);
        double double18 = randomDataImpl5.nextGaussian(593.9053572378232d, 1.1920928955078125E-7d);
        randomDataImpl5.reSeed(0L);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl21 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double23 = normalDistributionImpl21.density((java.lang.Double) 100.0d);
        double double25 = normalDistributionImpl21.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl26 = normalDistributionImpl21.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl27 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double29 = normalDistributionImpl27.density((java.lang.Double) 100.0d);
        double double30 = normalDistributionImpl27.getMean();
        double double31 = randomDataImpl26.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl27);
        randomDataImpl26.reSeedSecure((long) (byte) 1);
        int int36 = randomDataImpl26.nextZipf(3, 0.4849214332324801d);
        long long39 = randomDataImpl26.nextSecureLong((long) (short) 0, (long) 1);
        randomDataImpl26.reSeed();
        long long43 = randomDataImpl26.nextLong((long) (-1), 2L);
        int int46 = randomDataImpl26.nextPascal((int) (short) 10, 0.08904502638040439d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl48 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double50 = poissonDistributionImpl48.probability(100);
        double double52 = poissonDistributionImpl48.normalApproximateProbability(2147483647);
        int int54 = poissonDistributionImpl48.getDomainUpperBound((double) 10L);
        int int56 = poissonDistributionImpl48.getDomainLowerBound(3.141592653589793d);
        int int57 = poissonDistributionImpl48.sample();
        int int58 = randomDataImpl26.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl48);
        int int59 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl48);
        double double60 = poissonDistributionImpl48.getMean();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.28566807802108873d + "'", double10 == 0.28566807802108873d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 593.9053574080506d + "'", double18 == 593.9053574080506d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.24197072451914337d + "'", double25 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.28543422477289365d + "'", double31 == 0.28543422477289365d);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 186 + "'", int46 == 186);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 3.941866060050443E-159d + "'", double50 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2147483647 + "'", int54 == 2147483647);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #691
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: invokevirtual #394
101: aload         6
103: iconst_3
104: ldc2_w        #395
107: invokevirtual #397
110: istore        14
112: aload         6
114: ldc2_w        #692
117: ldc2_w        #694
120: invokevirtual #288
123: dstore        15
125: aload         6
127: lconst_0
128: invokevirtual #548
131: new           #107
134: dup
135: invokespecial #108
138: astore        17
140: aload         17
142: ldc2_w        #10
145: invokestatic  #109
148: invokevirtual #110
151: dstore        18
153: aload         17
155: dconst_1
156: invokevirtual #111
159: dstore        20
161: aload         17
163: getfield      #112
166: astore        22
168: new           #107
171: dup
172: invokespecial #108
175: astore        23
177: aload         23
179: ldc2_w        #10
182: invokestatic  #109
185: invokevirtual #110
188: dstore        24
190: aload         23
192: invokevirtual #392
195: dstore        26
197: aload         22
199: aload         23
201: invokevirtual #393
204: dstore        28
206: aload         22
208: lconst_1
209: invokevirtual #394
212: aload         22
214: iconst_3
215: ldc2_w        #395
218: invokevirtual #397
221: istore        30
223: aload         22
225: lconst_0
226: lconst_1
227: invokevirtual #84
230: lstore        31
232: aload         22
234: invokevirtual #398
237: aload         22
239: ldc2_w        #121
242: ldc2_w        #399
245: invokevirtual #123
248: lstore        33
250: aload         22
252: bipush        10
254: ldc2_w        #696
257: invokevirtual #698
260: istore        35
262: new           #8
265: dup
266: dconst_1
267: invokespecial #9
270: astore        36
272: aload         36
274: bipush        100
276: invokevirtual #54
279: dstore        37
281: aload         36
283: ldc           #41
285: invokevirtual #63
288: dstore        39
290: aload         36
292: ldc2_w        #13
295: invokevirtual #34
298: istore        41
300: aload         36
302: ldc2_w        #166
305: invokevirtual #139
308: istore        42
310: aload         36
312: invokevirtual #61
315: istore        43
317: aload         22
319: aload         36
321: invokevirtual #116
324: istore        44
326: aload         6
328: aload         36
330: invokevirtual #116
333: istore        45
335: aload         36
337: invokevirtual #102
340: dstore        46
342: new           #21
345: dup
346: invokespecial #22
349: ldc           #27
351: invokevirtual #24
354: dload_2
355: invokevirtual #28
358: ldc           #29
360: invokevirtual #24
363: dconst_0
364: invokevirtual #28
367: ldc           #27
369: invokevirtual #24
372: invokevirtual #26
375: dload_2
376: dconst_0
377: dcmpl
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #32
389: new           #21
392: dup
393: invokespecial #22
396: ldc           #27
398: invokevirtual #24
401: dload         4
403: invokevirtual #28
406: ldc           #29
408: invokevirtual #24
411: ldc2_w        #118
414: invokevirtual #28
417: ldc           #27
419: invokevirtual #24
422: invokevirtual #26
425: dload         4
427: ldc2_w        #118
430: dcmpl
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #32
442: aload         6
444: invokestatic  #77
447: new           #21
450: dup
451: invokespecial #22
454: ldc           #27
456: invokevirtual #24
459: dload         8
461: invokevirtual #28
464: ldc           #29
466: invokevirtual #24
469: dconst_0
470: invokevirtual #28
473: ldc           #27
475: invokevirtual #24
478: invokevirtual #26
481: dload         8
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #32
496: new           #21
499: dup
500: invokespecial #22
503: ldc           #27
505: invokevirtual #24
508: dload         10
510: invokevirtual #28
513: ldc           #29
515: invokevirtual #24
518: dconst_0
519: invokevirtual #28
522: ldc           #27
524: invokevirtual #24
527: invokevirtual #26
530: dload         10
532: dconst_0
533: dcmpl
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #32
545: new           #21
548: dup
549: invokespecial #22
552: ldc           #27
554: invokevirtual #24
557: dload         18
559: invokevirtual #28
562: ldc           #29
564: invokevirtual #24
567: dconst_0
568: invokevirtual #28
571: ldc           #27
573: invokevirtual #24
576: invokevirtual #26
579: dload         18
581: dconst_0
582: dcmpl
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #32
594: new           #21
597: dup
598: invokespecial #22
601: ldc           #27
603: invokevirtual #24
606: dload         20
608: invokevirtual #28
611: ldc           #29
613: invokevirtual #24
616: ldc2_w        #118
619: invokevirtual #28
622: ldc           #27
624: invokevirtual #24
627: invokevirtual #26
630: dload         20
632: ldc2_w        #118
635: dcmpl
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #32
647: aload         22
649: invokestatic  #77
652: new           #21
655: dup
656: invokespecial #22
659: ldc           #27
661: invokevirtual #24
664: dload         24
666: invokevirtual #28
669: ldc           #29
671: invokevirtual #24
674: dconst_0
675: invokevirtual #28
678: ldc           #27
680: invokevirtual #24
683: invokevirtual #26
686: dload         24
688: dconst_0
689: dcmpl
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #32
701: new           #21
704: dup
705: invokespecial #22
708: ldc           #27
710: invokevirtual #24
713: dload         26
715: invokevirtual #28
718: ldc           #29
720: invokevirtual #24
723: dconst_0
724: invokevirtual #28
727: ldc           #27
729: invokevirtual #24
732: invokevirtual #26
735: dload         26
737: dconst_0
738: dcmpl
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #32
750: new           #21
753: dup
754: invokespecial #22
757: ldc           #27
759: invokevirtual #24
762: dload         37
764: invokevirtual #28
767: ldc           #29
769: invokevirtual #24
772: ldc2_w        #47
775: invokevirtual #28
778: ldc           #27
780: invokevirtual #24
783: invokevirtual #26
786: dload         37
788: ldc2_w        #47
791: dcmpl
792: ifne          799
795: iconst_1
796: goto          800
799: iconst_0
800: invokestatic  #32
803: new           #21
806: dup
807: invokespecial #22
810: ldc           #27
812: invokevirtual #24
815: dload         39
817: invokevirtual #28
820: ldc           #29
822: invokevirtual #24
825: dconst_1
826: invokevirtual #28
829: ldc           #27
831: invokevirtual #24
834: invokevirtual #26
837: dload         39
839: dconst_1
840: dcmpl
841: ifne          848
844: iconst_1
845: goto          849
848: iconst_0
849: invokestatic  #32
852: new           #21
855: dup
856: invokespecial #22
859: ldc           #27
861: invokevirtual #24
864: iload         41
866: invokevirtual #40
869: ldc           #29
871: invokevirtual #24
874: ldc           #41
876: invokevirtual #40
879: ldc           #27
881: invokevirtual #24
884: invokevirtual #26
887: iload         41
889: ldc           #41
891: if_icmpne     898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #32
902: new           #21
905: dup
906: invokespecial #22
909: ldc           #27
911: invokevirtual #24
914: iload         42
916: invokevirtual #40
919: ldc           #29
921: invokevirtual #24
924: iconst_0
925: invokevirtual #40
928: ldc           #27
930: invokevirtual #24
933: invokevirtual #26
936: iload         42
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #32
949: new           #21
952: dup
953: invokespecial #22
956: ldc           #27
958: invokevirtual #24
961: iload         45
963: invokevirtual #40
966: ldc           #29
968: invokevirtual #24
971: iconst_1
972: invokevirtual #40
975: ldc           #27
977: invokevirtual #24
980: invokevirtual #26
983: iload         45
985: iconst_1
986: if_icmpne     993
989: iconst_1
990: goto          994
993: iconst_0
994: invokestatic  #32
997: new           #21
1000: dup
1001: invokespecial #22
1004: ldc           #27
1006: invokevirtual #24
1009: dload         46
1011: invokevirtual #28
1014: ldc           #29
1016: invokevirtual #24
1019: dconst_1
1020: invokevirtual #28
1023: ldc           #27
1025: invokevirtual #24
1028: invokevirtual #26
1031: dload         46
1033: dconst_1
1034: dcmpl
1035: ifne          1042
1038: iconst_1
1039: goto          1043
1042: iconst_0
1043: invokestatic  #32
1046: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test185
Start line: 3584
End line: 3588
Method source code: 
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(6.758204490611066E-94d, 4.033789588108382d, 3257539);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #699
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #422
32: ldc2_w        #700
35: ldc_w         #702
38: invokespecial #97
41: astore_1
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test186
Start line: 3591
End line: 3616
Method source code: 
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        long long18 = randomDataImpl5.nextLong(52L, 60L);
        double double21 = randomDataImpl5.nextCauchy(0.18116021952662198d, (double) 1);
        java.lang.String str23 = randomDataImpl5.nextSecureHexString((int) ' ');
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 576.2140738462908d + "'", double7 == 576.2140738462908d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 55L + "'", long18 == 55L);
// flaky:         org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-3.920891858411741d) + "'", double21 == (-3.920891858411741d));
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "45beb336909d35812231e85590303ffa" + "'", str23, "45beb336909d35812231e85590303ffa");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #703
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #646
111: ldc2_w        #648
114: invokevirtual #123
117: lstore        15
119: aload         6
121: ldc2_w        #650
124: dconst_1
125: invokevirtual #652
128: dstore        17
130: aload         6
132: bipush        32
134: invokevirtual #704
137: astore        19
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload_2
152: invokevirtual #28
155: ldc           #29
157: invokevirtual #24
160: dconst_0
161: invokevirtual #28
164: ldc           #27
166: invokevirtual #24
169: invokevirtual #26
172: dload_2
173: dconst_0
174: dcmpl
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #32
186: new           #21
189: dup
190: invokespecial #22
193: ldc           #27
195: invokevirtual #24
198: dload         4
200: invokevirtual #28
203: ldc           #29
205: invokevirtual #24
208: ldc2_w        #118
211: invokevirtual #28
214: ldc           #27
216: invokevirtual #24
219: invokevirtual #26
222: dload         4
224: ldc2_w        #118
227: dcmpl
228: ifne          235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #32
239: aload         6
241: invokestatic  #77
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: dload         10
258: invokevirtual #28
261: ldc           #29
263: invokevirtual #24
266: ldc2_w        #47
269: invokevirtual #28
272: ldc           #27
274: invokevirtual #24
277: invokevirtual #26
280: dload         10
282: ldc2_w        #47
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: dload         12
311: invokevirtual #28
314: ldc           #29
316: invokevirtual #24
319: dconst_1
320: invokevirtual #28
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: dload         12
333: dconst_1
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test187
Start line: 3619
End line: 3642
Method source code: 
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        double double19 = poissonDistributionImpl1.probability(100);
        double double21 = poissonDistributionImpl1.probability(89);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.941866060050443E-159d + "'", double19 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2.2284979428742054E-137d + "'", double21 == 2.2284979428742054E-137d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #705
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload_1
96: bipush        100
98: invokevirtual #54
101: dstore        13
103: aload_1
104: bipush        89
106: invokevirtual #54
109: dstore        15
111: new           #21
114: dup
115: invokespecial #22
118: ldc           #27
120: invokevirtual #24
123: dload_2
124: invokevirtual #28
127: ldc           #29
129: invokevirtual #24
132: ldc2_w        #30
135: invokevirtual #28
138: ldc           #27
140: invokevirtual #24
143: invokevirtual #26
146: dload_2
147: ldc2_w        #30
150: dcmpl
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #32
162: new           #21
165: dup
166: invokespecial #22
169: ldc           #27
171: invokevirtual #24
174: dload         4
176: invokevirtual #28
179: ldc           #29
181: invokevirtual #24
184: ldc2_w        #45
187: invokevirtual #28
190: ldc           #27
192: invokevirtual #24
195: invokevirtual #26
198: dload         4
200: ldc2_w        #45
203: dcmpl
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #32
215: new           #21
218: dup
219: invokespecial #22
222: ldc           #27
224: invokevirtual #24
227: dload         6
229: invokevirtual #28
232: ldc           #29
234: invokevirtual #24
237: ldc2_w        #87
240: invokevirtual #28
243: ldc           #27
245: invokevirtual #24
248: invokevirtual #26
251: dload         6
253: ldc2_w        #87
256: dcmpl
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #32
268: new           #21
271: dup
272: invokespecial #22
275: ldc           #27
277: invokevirtual #24
280: dload         8
282: invokevirtual #28
285: ldc           #29
287: invokevirtual #24
290: ldc2_w        #45
293: invokevirtual #28
296: ldc           #27
298: invokevirtual #24
301: invokevirtual #26
304: dload         8
306: ldc2_w        #45
309: dcmpl
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #32
321: new           #21
324: dup
325: invokespecial #22
328: ldc           #27
330: invokevirtual #24
333: iload         10
335: invokevirtual #40
338: ldc           #29
340: invokevirtual #24
343: iconst_0
344: invokevirtual #40
347: ldc           #27
349: invokevirtual #24
352: invokevirtual #26
355: iload         10
357: ifne          364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #32
368: new           #21
371: dup
372: invokespecial #22
375: ldc           #27
377: invokevirtual #24
380: iload         11
382: invokevirtual #40
385: ldc           #29
387: invokevirtual #24
390: iconst_0
391: invokevirtual #40
394: ldc           #27
396: invokevirtual #24
399: invokevirtual #26
402: iload         11
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #32
415: aload         12
417: invokestatic  #77
420: new           #21
423: dup
424: invokespecial #22
427: ldc           #27
429: invokevirtual #24
432: dload         13
434: invokevirtual #28
437: ldc           #29
439: invokevirtual #24
442: ldc2_w        #47
445: invokevirtual #28
448: ldc           #27
450: invokevirtual #24
453: invokevirtual #26
456: dload         13
458: ldc2_w        #47
461: dcmpl
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #32
473: new           #21
476: dup
477: invokespecial #22
480: ldc           #27
482: invokevirtual #24
485: dload         15
487: invokevirtual #28
490: ldc           #29
492: invokevirtual #24
495: ldc2_w        #706
498: invokevirtual #28
501: ldc           #27
503: invokevirtual #24
506: invokevirtual #26
509: dload         15
511: ldc2_w        #706
514: dcmpl
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #32
526: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test188
Start line: 3645
End line: 3714
Method source code: 
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        long long13 = randomDataImpl5.nextLong((long) (short) 1, (long) (short) 100);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl14 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double16 = normalDistributionImpl14.density((java.lang.Double) 100.0d);
        double double17 = normalDistributionImpl14.getMean();
        double double18 = normalDistributionImpl14.getMean();
        double double19 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl14);
        randomDataImpl5.reSeed((long) (byte) 1);
        double double24 = randomDataImpl5.nextUniform(0.2930641738000717d, 812.156551123258d);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl25 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double27 = normalDistributionImpl25.density((java.lang.Double) 100.0d);
        double double29 = normalDistributionImpl25.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl30 = normalDistributionImpl25.randomData;
        double double32 = randomDataImpl30.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl34 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double36 = poissonDistributionImpl34.probability(100);
        double double39 = poissonDistributionImpl34.cumulativeProbability(0.0d, (double) 'a');
        int int40 = randomDataImpl30.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl34);
        double double43 = randomDataImpl30.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl45 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double47 = poissonDistributionImpl45.probability(100);
        double double49 = poissonDistributionImpl45.normalApproximateProbability(2147483647);
        double double52 = poissonDistributionImpl45.cumulativeProbability((int) (short) 10, 2147483647);
        double double54 = poissonDistributionImpl45.normalApproximateProbability((int) (byte) -1);
        int int55 = randomDataImpl30.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl45);
        int int56 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl45);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = randomDataImpl5.nextBeta((-0.622992721130644d), 1.0368842103159936d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.FunctionEvaluationException; message: Cumulative probability function returned NaN for argument 0.208 p = 0.208");
        } catch (org.apache.commons.math.FunctionEvaluationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.09063965524396857d + "'", double10 == 0.09063965524396857d);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 78L + "'", long13 == 78L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.4111823319275892d + "'", double19 == 0.4111823319275892d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 593.6663806134848d + "'", double24 == 593.6663806134848d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.24197072451914337d + "'", double29 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl30);
// flaky:         org.junit.Assert.assertTrue("'" + double32 + "' != '" + 575.3552849815876d + "'", double32 == 575.3552849815876d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 3.941866060050443E-159d + "'", double36 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
// flaky:         org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.005042670110168954d + "'", double43 == 0.005042670110168954d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 3.941866060050443E-159d + "'", double47 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.1142547828857374E-7d + "'", double52 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.06680720126885803d + "'", double54 == 0.06680720126885803d);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #708
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: ldc2_w        #546
101: invokevirtual #123
104: lstore        14
106: new           #107
109: dup
110: invokespecial #108
113: astore        16
115: aload         16
117: ldc2_w        #10
120: invokestatic  #109
123: invokevirtual #110
126: dstore        17
128: aload         16
130: invokevirtual #392
133: dstore        19
135: aload         16
137: invokevirtual #392
140: dstore        21
142: aload         6
144: aload         16
146: invokevirtual #393
149: dstore        23
151: aload         6
153: lconst_1
154: invokevirtual #548
157: aload         6
159: ldc2_w        #198
162: ldc2_w        #549
165: invokevirtual #351
168: dstore        25
170: new           #107
173: dup
174: invokespecial #108
177: astore        27
179: aload         27
181: ldc2_w        #10
184: invokestatic  #109
187: invokevirtual #110
190: dstore        28
192: aload         27
194: dconst_1
195: invokevirtual #111
198: dstore        30
200: aload         27
202: getfield      #112
205: astore        32
207: aload         32
209: ldc2_w        #113
212: invokevirtual #115
215: dstore        33
217: new           #8
220: dup
221: dconst_1
222: invokespecial #9
225: astore        35
227: aload         35
229: bipush        100
231: invokevirtual #54
234: dstore        36
236: aload         35
238: dconst_0
239: ldc2_w        #55
242: invokevirtual #12
245: dstore        38
247: aload         32
249: aload         35
251: invokevirtual #116
254: istore        40
256: aload         32
258: ldc2_w        #198
261: ldc2_w        #127
264: invokevirtual #200
267: dstore        41
269: new           #8
272: dup
273: dconst_1
274: invokespecial #9
277: astore        43
279: aload         43
281: bipush        100
283: invokevirtual #54
286: dstore        44
288: aload         43
290: ldc           #41
292: invokevirtual #63
295: dstore        46
297: aload         43
299: bipush        10
301: ldc           #41
303: invokevirtual #64
306: dstore        48
308: aload         43
310: iconst_m1
311: invokevirtual #63
314: dstore        50
316: aload         32
318: aload         43
320: invokevirtual #116
323: istore        52
325: aload         6
327: aload         43
329: invokevirtual #116
332: istore        53
334: aload         6
336: ldc2_w        #709
339: ldc2_w        #711
342: invokevirtual #713
345: dstore        54
347: ldc_w         #714
350: invokestatic  #17
353: goto          358
356: astore        54
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: dload_2
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: dconst_0
380: invokevirtual #28
383: ldc           #27
385: invokevirtual #24
388: invokevirtual #26
391: dload_2
392: dconst_0
393: dcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #32
405: new           #21
408: dup
409: invokespecial #22
412: ldc           #27
414: invokevirtual #24
417: dload         4
419: invokevirtual #28
422: ldc           #29
424: invokevirtual #24
427: ldc2_w        #118
430: invokevirtual #28
433: ldc           #27
435: invokevirtual #24
438: invokevirtual #26
441: dload         4
443: ldc2_w        #118
446: dcmpl
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #32
458: aload         6
460: invokestatic  #77
463: new           #21
466: dup
467: invokespecial #22
470: ldc           #27
472: invokevirtual #24
475: dload         8
477: invokevirtual #28
480: ldc           #29
482: invokevirtual #24
485: dconst_0
486: invokevirtual #28
489: ldc           #27
491: invokevirtual #24
494: invokevirtual #26
497: dload         8
499: dconst_0
500: dcmpl
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #32
512: new           #21
515: dup
516: invokespecial #22
519: ldc           #27
521: invokevirtual #24
524: dload         10
526: invokevirtual #28
529: ldc           #29
531: invokevirtual #24
534: dconst_0
535: invokevirtual #28
538: ldc           #27
540: invokevirtual #24
543: invokevirtual #26
546: dload         10
548: dconst_0
549: dcmpl
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #32
561: new           #21
564: dup
565: invokespecial #22
568: ldc           #27
570: invokevirtual #24
573: dload         17
575: invokevirtual #28
578: ldc           #29
580: invokevirtual #24
583: dconst_0
584: invokevirtual #28
587: ldc           #27
589: invokevirtual #24
592: invokevirtual #26
595: dload         17
597: dconst_0
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #32
610: new           #21
613: dup
614: invokespecial #22
617: ldc           #27
619: invokevirtual #24
622: dload         19
624: invokevirtual #28
627: ldc           #29
629: invokevirtual #24
632: dconst_0
633: invokevirtual #28
636: ldc           #27
638: invokevirtual #24
641: invokevirtual #26
644: dload         19
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #32
659: new           #21
662: dup
663: invokespecial #22
666: ldc           #27
668: invokevirtual #24
671: dload         21
673: invokevirtual #28
676: ldc           #29
678: invokevirtual #24
681: dconst_0
682: invokevirtual #28
685: ldc           #27
687: invokevirtual #24
690: invokevirtual #26
693: dload         21
695: dconst_0
696: dcmpl
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #32
708: new           #21
711: dup
712: invokespecial #22
715: ldc           #27
717: invokevirtual #24
720: dload         25
722: invokevirtual #28
725: ldc           #29
727: invokevirtual #24
730: ldc2_w        #552
733: invokevirtual #28
736: ldc           #27
738: invokevirtual #24
741: invokevirtual #26
744: dload         25
746: ldc2_w        #552
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #32
761: new           #21
764: dup
765: invokespecial #22
768: ldc           #27
770: invokevirtual #24
773: dload         28
775: invokevirtual #28
778: ldc           #29
780: invokevirtual #24
783: dconst_0
784: invokevirtual #28
787: ldc           #27
789: invokevirtual #24
792: invokevirtual #26
795: dload         28
797: dconst_0
798: dcmpl
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #32
810: new           #21
813: dup
814: invokespecial #22
817: ldc           #27
819: invokevirtual #24
822: dload         30
824: invokevirtual #28
827: ldc           #29
829: invokevirtual #24
832: ldc2_w        #118
835: invokevirtual #28
838: ldc           #27
840: invokevirtual #24
843: invokevirtual #26
846: dload         30
848: ldc2_w        #118
851: dcmpl
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #32
863: aload         32
865: invokestatic  #77
868: new           #21
871: dup
872: invokespecial #22
875: ldc           #27
877: invokevirtual #24
880: dload         36
882: invokevirtual #28
885: ldc           #29
887: invokevirtual #24
890: ldc2_w        #47
893: invokevirtual #28
896: ldc           #27
898: invokevirtual #24
901: invokevirtual #26
904: dload         36
906: ldc2_w        #47
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #32
921: new           #21
924: dup
925: invokespecial #22
928: ldc           #27
930: invokevirtual #24
933: dload         38
935: invokevirtual #28
938: ldc           #29
940: invokevirtual #24
943: dconst_1
944: invokevirtual #28
947: ldc           #27
949: invokevirtual #24
952: invokevirtual #26
955: dload         38
957: dconst_1
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #32
970: new           #21
973: dup
974: invokespecial #22
977: ldc           #27
979: invokevirtual #24
982: dload         44
984: invokevirtual #28
987: ldc           #29
989: invokevirtual #24
992: ldc2_w        #47
995: invokevirtual #28
998: ldc           #27
1000: invokevirtual #24
1003: invokevirtual #26
1006: dload         44
1008: ldc2_w        #47
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #32
1023: new           #21
1026: dup
1027: invokespecial #22
1030: ldc           #27
1032: invokevirtual #24
1035: dload         46
1037: invokevirtual #28
1040: ldc           #29
1042: invokevirtual #24
1045: dconst_1
1046: invokevirtual #28
1049: ldc           #27
1051: invokevirtual #24
1054: invokevirtual #26
1057: dload         46
1059: dconst_1
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #32
1072: new           #21
1075: dup
1076: invokespecial #22
1079: ldc           #27
1081: invokevirtual #24
1084: dload         48
1086: invokevirtual #28
1089: ldc           #29
1091: invokevirtual #24
1094: ldc2_w        #69
1097: invokevirtual #28
1100: ldc           #27
1102: invokevirtual #24
1105: invokevirtual #26
1108: dload         48
1110: ldc2_w        #69
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #32
1125: new           #21
1128: dup
1129: invokespecial #22
1132: ldc           #27
1134: invokevirtual #24
1137: dload         50
1139: invokevirtual #28
1142: ldc           #29
1144: invokevirtual #24
1147: ldc2_w        #87
1150: invokevirtual #28
1153: ldc           #27
1155: invokevirtual #24
1158: invokevirtual #26
1161: dload         50
1163: ldc2_w        #87
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #32
1178: new           #21
1181: dup
1182: invokespecial #22
1185: ldc           #27
1187: invokevirtual #24
1190: iload         53
1192: invokevirtual #40
1195: ldc           #29
1197: invokevirtual #24
1200: iconst_1
1201: invokevirtual #40
1204: ldc           #27
1206: invokevirtual #24
1209: invokevirtual #26
1212: iload         53
1214: iconst_1
1215: if_icmpne     1222
1218: iconst_1
1219: goto          1223
1222: iconst_0
1223: invokestatic  #32
1226: return
Exception table:
from    to  target type
334   353   356   Class org/apache/commons/math/FunctionEvaluationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test189
Start line: 3717
End line: 3725
Method source code: 
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d);
        double double4 = poissonDistributionImpl1.cumulativeProbability(0, 100);
        double double6 = poissonDistributionImpl1.probability(0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.6065306597126334d + "'", double6 == 0.6065306597126334d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #715
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: invokespecial #9
35: astore_1
36: aload_1
37: iconst_0
38: bipush        100
40: invokevirtual #64
43: dstore_2
44: aload_1
45: dconst_0
46: invokevirtual #44
49: dstore        4
51: new           #21
54: dup
55: invokespecial #22
58: ldc           #27
60: invokevirtual #24
63: dload_2
64: invokevirtual #28
67: ldc           #29
69: invokevirtual #24
72: dconst_1
73: invokevirtual #28
76: ldc           #27
78: invokevirtual #24
81: invokevirtual #26
84: dload_2
85: dconst_1
86: dcmpl
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #32
98: new           #21
101: dup
102: invokespecial #22
105: ldc           #27
107: invokevirtual #24
110: dload         4
112: invokevirtual #28
115: ldc           #29
117: invokevirtual #24
120: ldc2_w        #716
123: invokevirtual #28
126: ldc           #27
128: invokevirtual #24
131: invokevirtual #26
134: dload         4
136: ldc2_w        #716
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #32
151: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test190
Start line: 3728
End line: 3736
Method source code: 
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        int int3 = poissonDistributionImpl2.sample();
        double double5 = poissonDistributionImpl2.cumulativeProbability(1.9233181644854171d);
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 48 + "'", int3 == 48);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.3834479069238827E-21d + "'", double5 == 1.3834479069238827E-21d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #718
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: invokevirtual #61
42: istore_2
43: aload_1
44: ldc2_w        #719
47: invokevirtual #141
50: dstore_3
51: new           #21
54: dup
55: invokespecial #22
58: ldc           #27
60: invokevirtual #24
63: dload_3
64: invokevirtual #28
67: ldc           #29
69: invokevirtual #24
72: ldc2_w        #586
75: invokevirtual #28
78: ldc           #27
80: invokevirtual #24
83: invokevirtual #26
86: dload_3
87: ldc2_w        #586
90: dcmpl
91: ifne          98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #32
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test191
Start line: 3739
End line: 3745
Method source code: 
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(99.22495072257823d, 0.24712452682051894d);
        int int4 = poissonDistributionImpl2.getDomainLowerBound((-0.9501789451592945d));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #721
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #722
32: ldc2_w        #724
35: invokespecial #255
38: astore_1
39: aload_1
40: ldc2_w        #216
43: invokevirtual #139
46: istore_2
47: new           #21
50: dup
51: invokespecial #22
54: ldc           #27
56: invokevirtual #24
59: iload_2
60: invokevirtual #40
63: ldc           #29
65: invokevirtual #24
68: iconst_0
69: invokevirtual #40
72: ldc           #27
74: invokevirtual #24
77: invokevirtual #26
80: iload_2
81: ifne          88
84: iconst_1
85: goto          89
88: iconst_0
89: invokestatic  #32
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test192
Start line: 3748
End line: 3772
Method source code: 
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        randomDataImpl1.reSeed();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.1701409760865529d + "'", double5 == 1.1701409760865529d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #726
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: aload_2
122: invokevirtual #398
125: new           #21
128: dup
129: invokespecial #22
132: ldc           #27
134: invokevirtual #24
137: dload         4
139: invokevirtual #28
142: ldc           #29
144: invokevirtual #24
147: dconst_1
148: invokevirtual #28
151: ldc           #27
153: invokevirtual #24
156: invokevirtual #26
159: dload         4
161: dconst_1
162: dcmpl
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #32
174: new           #21
177: dup
178: invokespecial #22
181: ldc           #27
183: invokevirtual #24
186: dload         9
188: invokevirtual #28
191: ldc           #29
193: invokevirtual #24
196: ldc2_w        #30
199: invokevirtual #28
202: ldc           #27
204: invokevirtual #24
207: invokevirtual #26
210: dload         9
212: ldc2_w        #30
215: dcmpl
216: ifne          223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #32
227: new           #21
230: dup
231: invokespecial #22
234: ldc           #27
236: invokevirtual #24
239: dload         11
241: invokevirtual #28
244: ldc           #29
246: invokevirtual #24
249: ldc2_w        #45
252: invokevirtual #28
255: ldc           #27
257: invokevirtual #24
260: invokevirtual #26
263: dload         11
265: ldc2_w        #45
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #32
280: new           #21
283: dup
284: invokespecial #22
287: ldc           #27
289: invokevirtual #24
292: dload         13
294: invokevirtual #28
297: ldc           #29
299: invokevirtual #24
302: ldc2_w        #87
305: invokevirtual #28
308: ldc           #27
310: invokevirtual #24
313: invokevirtual #26
316: dload         13
318: ldc2_w        #87
321: dcmpl
322: ifne          329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #32
333: new           #21
336: dup
337: invokespecial #22
340: ldc           #27
342: invokevirtual #24
345: dload         15
347: invokevirtual #28
350: ldc           #29
352: invokevirtual #24
355: dconst_1
356: invokevirtual #28
359: ldc           #27
361: invokevirtual #24
364: invokevirtual #26
367: dload         15
369: dconst_1
370: dcmpl
371: ifne          378
374: iconst_1
375: goto          379
378: iconst_0
379: invokestatic  #32
382: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test193
Start line: 3775
End line: 3787
Method source code: 
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        int int9 = poissonDistributionImpl1.getDomainLowerBound((double) 65L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #727
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: dconst_0
51: invokevirtual #15
54: istore        6
56: aload_1
57: ldc2_w        #728
60: invokevirtual #139
63: istore        7
65: new           #21
68: dup
69: invokespecial #22
72: ldc           #27
74: invokevirtual #24
77: dload_2
78: invokevirtual #28
81: ldc           #29
83: invokevirtual #24
86: ldc2_w        #47
89: invokevirtual #28
92: ldc           #27
94: invokevirtual #24
97: invokevirtual #26
100: dload_2
101: ldc2_w        #47
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #32
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #27
125: invokevirtual #24
128: dload         4
130: invokevirtual #28
133: ldc           #29
135: invokevirtual #24
138: dconst_1
139: invokevirtual #28
142: ldc           #27
144: invokevirtual #24
147: invokevirtual #26
150: dload         4
152: dconst_1
153: dcmpl
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #32
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: iload         6
179: invokevirtual #40
182: ldc           #29
184: invokevirtual #24
187: iconst_m1
188: invokevirtual #40
191: ldc           #27
193: invokevirtual #24
196: invokevirtual #26
199: iload         6
201: iconst_m1
202: if_icmpne     209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: new           #21
216: dup
217: invokespecial #22
220: ldc           #27
222: invokevirtual #24
225: iload         7
227: invokevirtual #40
230: ldc           #29
232: invokevirtual #24
235: iconst_0
236: invokevirtual #40
239: ldc           #27
241: invokevirtual #24
244: invokevirtual #26
247: iload         7
249: ifne          256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #32
260: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test194
Start line: 3790
End line: 3819
Method source code: 
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double14 = poissonDistributionImpl1.cumulativeProbability(2147483647);
        double double16 = poissonDistributionImpl1.cumulativeProbability(2);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = randomDataImpl17.nextHypergeometric(0, 74, 81);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.919698602928607d + "'", double16 == 0.919698602928607d);
        org.junit.Assert.assertNotNull(randomDataImpl17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #730
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: ldc           #41
78: invokevirtual #43
81: dstore        10
83: aload_1
84: iconst_2
85: invokevirtual #43
88: dstore        12
90: aload_1
91: getfield      #72
94: astore        14
96: aload         14
98: iconst_0
99: bipush        74
101: bipush        81
103: invokevirtual #76
106: istore        15
108: ldc           #16
110: invokestatic  #17
113: goto          158
116: astore        15
118: aload         15
120: invokevirtual #19
123: invokevirtual #20
126: ifne          158
129: new           #21
132: dup
133: invokespecial #22
136: ldc           #23
138: invokevirtual #24
141: aload         15
143: invokevirtual #19
146: invokevirtual #25
149: invokevirtual #24
152: invokevirtual #26
155: invokestatic  #17
158: new           #21
161: dup
162: invokespecial #22
165: ldc           #27
167: invokevirtual #24
170: dload_2
171: invokevirtual #28
174: ldc           #29
176: invokevirtual #24
179: ldc2_w        #47
182: invokevirtual #28
185: ldc           #27
187: invokevirtual #24
190: invokevirtual #26
193: dload_2
194: ldc2_w        #47
197: dcmpl
198: ifne          205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #32
209: new           #21
212: dup
213: invokespecial #22
216: ldc           #27
218: invokevirtual #24
221: dload         4
223: invokevirtual #28
226: ldc           #29
228: invokevirtual #24
231: dconst_1
232: invokevirtual #28
235: ldc           #27
237: invokevirtual #24
240: invokevirtual #26
243: dload         4
245: dconst_1
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: dload         6
272: invokevirtual #28
275: ldc           #29
277: invokevirtual #24
280: ldc2_w        #69
283: invokevirtual #28
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: dload         6
296: ldc2_w        #69
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: dload         8
325: invokevirtual #28
328: ldc           #29
330: invokevirtual #24
333: dconst_0
334: invokevirtual #28
337: ldc           #27
339: invokevirtual #24
342: invokevirtual #26
345: dload         8
347: dconst_0
348: dcmpl
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #32
360: new           #21
363: dup
364: invokespecial #22
367: ldc           #27
369: invokevirtual #24
372: dload         10
374: invokevirtual #28
377: ldc           #29
379: invokevirtual #24
382: dconst_1
383: invokevirtual #28
386: ldc           #27
388: invokevirtual #24
391: invokevirtual #26
394: dload         10
396: dconst_1
397: dcmpl
398: ifne          405
401: iconst_1
402: goto          406
405: iconst_0
406: invokestatic  #32
409: new           #21
412: dup
413: invokespecial #22
416: ldc           #27
418: invokevirtual #24
421: dload         12
423: invokevirtual #28
426: ldc           #29
428: invokevirtual #24
431: ldc2_w        #731
434: invokevirtual #28
437: ldc           #27
439: invokevirtual #24
442: invokevirtual #26
445: dload         12
447: ldc2_w        #731
450: dcmpl
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #32
462: aload         14
464: invokestatic  #77
467: return
Exception table:
from    to  target type
96   113   116   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test195
Start line: 3822
End line: 3826
Method source code: 
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(1.1343550212608544d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #733
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #734
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test196
Start line: 3829
End line: 3858
Method source code: 
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double14 = poissonDistributionImpl1.cumulativeProbability(2147483647);
        double double16 = poissonDistributionImpl1.cumulativeProbability(2);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = randomDataImpl17.nextWeibull(6.321723590696283E-7d, (double) (-1L));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.919698602928607d + "'", double16 == 0.919698602928607d);
        org.junit.Assert.assertNotNull(randomDataImpl17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #736
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: ldc           #41
78: invokevirtual #43
81: dstore        10
83: aload_1
84: iconst_2
85: invokevirtual #43
88: dstore        12
90: aload_1
91: getfield      #72
94: astore        14
96: aload         14
98: ldc2_w        #737
101: ldc2_w        #142
104: invokevirtual #200
107: dstore        15
109: ldc           #16
111: invokestatic  #17
114: goto          159
117: astore        15
119: aload         15
121: invokevirtual #19
124: invokevirtual #20
127: ifne          159
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #23
139: invokevirtual #24
142: aload         15
144: invokevirtual #19
147: invokevirtual #25
150: invokevirtual #24
153: invokevirtual #26
156: invokestatic  #17
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload_2
172: invokevirtual #28
175: ldc           #29
177: invokevirtual #24
180: ldc2_w        #47
183: invokevirtual #28
186: ldc           #27
188: invokevirtual #24
191: invokevirtual #26
194: dload_2
195: ldc2_w        #47
198: dcmpl
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #32
210: new           #21
213: dup
214: invokespecial #22
217: ldc           #27
219: invokevirtual #24
222: dload         4
224: invokevirtual #28
227: ldc           #29
229: invokevirtual #24
232: dconst_1
233: invokevirtual #28
236: ldc           #27
238: invokevirtual #24
241: invokevirtual #26
244: dload         4
246: dconst_1
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #32
259: new           #21
262: dup
263: invokespecial #22
266: ldc           #27
268: invokevirtual #24
271: dload         6
273: invokevirtual #28
276: ldc           #29
278: invokevirtual #24
281: ldc2_w        #69
284: invokevirtual #28
287: ldc           #27
289: invokevirtual #24
292: invokevirtual #26
295: dload         6
297: ldc2_w        #69
300: dcmpl
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #32
312: new           #21
315: dup
316: invokespecial #22
319: ldc           #27
321: invokevirtual #24
324: dload         8
326: invokevirtual #28
329: ldc           #29
331: invokevirtual #24
334: dconst_0
335: invokevirtual #28
338: ldc           #27
340: invokevirtual #24
343: invokevirtual #26
346: dload         8
348: dconst_0
349: dcmpl
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: new           #21
364: dup
365: invokespecial #22
368: ldc           #27
370: invokevirtual #24
373: dload         10
375: invokevirtual #28
378: ldc           #29
380: invokevirtual #24
383: dconst_1
384: invokevirtual #28
387: ldc           #27
389: invokevirtual #24
392: invokevirtual #26
395: dload         10
397: dconst_1
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #32
410: new           #21
413: dup
414: invokespecial #22
417: ldc           #27
419: invokevirtual #24
422: dload         12
424: invokevirtual #28
427: ldc           #29
429: invokevirtual #24
432: ldc2_w        #731
435: invokevirtual #28
438: ldc           #27
440: invokevirtual #24
443: invokevirtual #26
446: dload         12
448: ldc2_w        #731
451: dcmpl
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #32
463: aload         14
465: invokestatic  #77
468: return
Exception table:
from    to  target type
96   114   117   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test197
Start line: 3861
End line: 3882
Method source code: 
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl14 = poissonDistributionImpl1.randomData;
        double double16 = poissonDistributionImpl1.cumulativeProbability((int) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) 81);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertNotNull(randomDataImpl14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #739
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: getfield      #72
85: astore        11
87: aload_1
88: iconst_m1
89: invokevirtual #43
92: dstore        12
94: aload_1
95: ldc2_w        #740
98: invokevirtual #157
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_2
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: ldc2_w        #47
125: invokevirtual #28
128: ldc           #27
130: invokevirtual #24
133: invokevirtual #26
136: dload_2
137: ldc2_w        #47
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: new           #21
155: dup
156: invokespecial #22
159: ldc           #27
161: invokevirtual #24
164: dload         4
166: invokevirtual #28
169: ldc           #29
171: invokevirtual #24
174: dconst_1
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload         4
188: dconst_1
189: dcmpl
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #32
201: new           #21
204: dup
205: invokespecial #22
208: ldc           #27
210: invokevirtual #24
213: iload         6
215: invokevirtual #40
218: ldc           #29
220: invokevirtual #24
223: ldc           #41
225: invokevirtual #40
228: ldc           #27
230: invokevirtual #24
233: invokevirtual #26
236: iload         6
238: ldc           #41
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #32
251: new           #21
254: dup
255: invokespecial #22
258: ldc           #27
260: invokevirtual #24
263: iload         7
265: invokevirtual #40
268: ldc           #29
270: invokevirtual #24
273: iconst_0
274: invokevirtual #40
277: ldc           #27
279: invokevirtual #24
282: invokevirtual #26
285: iload         7
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #32
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: dload         9
312: invokevirtual #28
315: ldc           #29
317: invokevirtual #24
320: ldc2_w        #45
323: invokevirtual #28
326: ldc           #27
328: invokevirtual #24
331: invokevirtual #26
334: dload         9
336: ldc2_w        #45
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #32
351: aload         11
353: invokestatic  #77
356: new           #21
359: dup
360: invokespecial #22
363: ldc           #27
365: invokevirtual #24
368: dload         12
370: invokevirtual #28
373: ldc           #29
375: invokevirtual #24
378: dconst_0
379: invokevirtual #28
382: ldc           #27
384: invokevirtual #24
387: invokevirtual #26
390: dload         12
392: dconst_0
393: dcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #32
405: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test198
Start line: 3885
End line: 3901
Method source code: 
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double3 = poissonDistributionImpl2.getMean();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = poissonDistributionImpl2.cumulativeProbability(107.249318068326d, 0.0d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #742
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: aload_1
43: ldc2_w        #743
46: dconst_0
47: invokevirtual #12
50: dstore        4
52: ldc           #16
54: invokestatic  #17
57: goto          102
60: astore        4
62: aload         4
64: invokevirtual #19
67: invokevirtual #20
70: ifne          102
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #23
82: invokevirtual #24
85: aload         4
87: invokevirtual #19
90: invokevirtual #25
93: invokevirtual #24
96: invokevirtual #26
99: invokestatic  #17
102: new           #21
105: dup
106: invokespecial #22
109: ldc           #27
111: invokevirtual #24
114: dload_2
115: invokevirtual #28
118: ldc           #29
120: invokevirtual #24
123: ldc2_w        #10
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload_2
138: ldc2_w        #10
141: dcmpl
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #32
153: return
Exception table:
from    to  target type
42    57    60   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test199
Start line: 3904
End line: 3928
Method source code: 
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        double double4 = randomDataImpl1.nextUniform((-0.7853981633974483d), 0.962217362072003d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl6 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double8 = poissonDistributionImpl6.probability(100);
        double double10 = poissonDistributionImpl6.normalApproximateProbability(2147483647);
        double double13 = poissonDistributionImpl6.cumulativeProbability((int) (short) 10, 2147483647);
        double double15 = poissonDistributionImpl6.probability((-1.207854600801523d));
        double double17 = poissonDistributionImpl6.probability(100);
        int int19 = poissonDistributionImpl6.inverseCumulativeProbability(0.06680720126885803d);
        int int20 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl6);
        java.lang.String str22 = randomDataImpl1.nextHexString(60);
// flaky:         org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.304945844683425d + "'", double4 == 0.304945844683425d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.941866060050443E-159d + "'", double8 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.1142547828857374E-7d + "'", double13 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.941866060050443E-159d + "'", double17 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "edcc087fba7ce254500c685d0d6128c1de237e29229f468b84c308ef97df" + "'", str22, "edcc087fba7ce254500c685d0d6128c1de237e29229f468b84c308ef97df");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #745
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: aload_2
37: ldc2_w        #130
40: ldc2_w        #746
43: invokevirtual #351
46: dstore_3
47: new           #8
50: dup
51: dconst_1
52: invokespecial #9
55: astore        5
57: aload         5
59: bipush        100
61: invokevirtual #54
64: dstore        6
66: aload         5
68: ldc           #41
70: invokevirtual #63
73: dstore        8
75: aload         5
77: bipush        10
79: ldc           #41
81: invokevirtual #64
84: dstore        10
86: aload         5
88: ldc2_w        #65
91: invokevirtual #44
94: dstore        12
96: aload         5
98: bipush        100
100: invokevirtual #54
103: dstore        14
105: aload         5
107: ldc2_w        #87
110: invokevirtual #15
113: istore        16
115: aload_2
116: aload         5
118: invokevirtual #116
121: istore        17
123: aload_2
124: bipush        60
126: invokevirtual #328
129: astore        18
131: new           #21
134: dup
135: invokespecial #22
138: ldc           #27
140: invokevirtual #24
143: dload         6
145: invokevirtual #28
148: ldc           #29
150: invokevirtual #24
153: ldc2_w        #47
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload         6
169: ldc2_w        #47
172: dcmpl
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #32
184: new           #21
187: dup
188: invokespecial #22
191: ldc           #27
193: invokevirtual #24
196: dload         8
198: invokevirtual #28
201: ldc           #29
203: invokevirtual #24
206: dconst_1
207: invokevirtual #28
210: ldc           #27
212: invokevirtual #24
215: invokevirtual #26
218: dload         8
220: dconst_1
221: dcmpl
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #32
233: new           #21
236: dup
237: invokespecial #22
240: ldc           #27
242: invokevirtual #24
245: dload         10
247: invokevirtual #28
250: ldc           #29
252: invokevirtual #24
255: ldc2_w        #69
258: invokevirtual #28
261: ldc           #27
263: invokevirtual #24
266: invokevirtual #26
269: dload         10
271: ldc2_w        #69
274: dcmpl
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #32
286: new           #21
289: dup
290: invokespecial #22
293: ldc           #27
295: invokevirtual #24
298: dload         12
300: invokevirtual #28
303: ldc           #29
305: invokevirtual #24
308: dconst_0
309: invokevirtual #28
312: ldc           #27
314: invokevirtual #24
317: invokevirtual #26
320: dload         12
322: dconst_0
323: dcmpl
324: ifne          331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #32
335: new           #21
338: dup
339: invokespecial #22
342: ldc           #27
344: invokevirtual #24
347: dload         14
349: invokevirtual #28
352: ldc           #29
354: invokevirtual #24
357: ldc2_w        #47
360: invokevirtual #28
363: ldc           #27
365: invokevirtual #24
368: invokevirtual #26
371: dload         14
373: ldc2_w        #47
376: dcmpl
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #32
388: new           #21
391: dup
392: invokespecial #22
395: ldc           #27
397: invokevirtual #24
400: iload         16
402: invokevirtual #40
405: ldc           #29
407: invokevirtual #24
410: iconst_m1
411: invokevirtual #40
414: ldc           #27
416: invokevirtual #24
419: invokevirtual #26
422: iload         16
424: iconst_m1
425: if_icmpne     432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #32
436: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test200
Start line: 3931
End line: 3949
Method source code: 
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        double double14 = poissonDistributionImpl1.normalApproximateProbability(49);
        int int16 = poissonDistributionImpl1.getDomainLowerBound((-1.5574077246549023d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #748
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: bipush        49
76: invokevirtual #63
79: dstore        11
81: aload_1
82: ldc2_w        #38
85: invokevirtual #139
88: istore        13
90: new           #21
93: dup
94: invokespecial #22
97: ldc           #27
99: invokevirtual #24
102: dload_2
103: invokevirtual #28
106: ldc           #29
108: invokevirtual #24
111: ldc2_w        #30
114: invokevirtual #28
117: ldc           #27
119: invokevirtual #24
122: invokevirtual #26
125: dload_2
126: ldc2_w        #30
129: dcmpl
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #32
141: new           #21
144: dup
145: invokespecial #22
148: ldc           #27
150: invokevirtual #24
153: dload         4
155: invokevirtual #28
158: ldc           #29
160: invokevirtual #24
163: ldc2_w        #45
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: ldc2_w        #45
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         6
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #87
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         6
232: ldc2_w        #87
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: new           #21
250: dup
251: invokespecial #22
254: ldc           #27
256: invokevirtual #24
259: dload         8
261: invokevirtual #28
264: ldc           #29
266: invokevirtual #24
269: ldc2_w        #45
272: invokevirtual #28
275: ldc           #27
277: invokevirtual #24
280: invokevirtual #26
283: dload         8
285: ldc2_w        #45
288: dcmpl
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #32
300: new           #21
303: dup
304: invokespecial #22
307: ldc           #27
309: invokevirtual #24
312: iload         10
314: invokevirtual #40
317: ldc           #29
319: invokevirtual #24
322: iconst_0
323: invokevirtual #40
326: ldc           #27
328: invokevirtual #24
331: invokevirtual #26
334: iload         10
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         11
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: dconst_1
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         11
383: dconst_1
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: new           #21
399: dup
400: invokespecial #22
403: ldc           #27
405: invokevirtual #24
408: iload         13
410: invokevirtual #40
413: ldc           #29
415: invokevirtual #24
418: iconst_0
419: invokevirtual #40
422: ldc           #27
424: invokevirtual #24
427: invokevirtual #26
430: iload         13
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #32
443: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test201
Start line: 3952
End line: 3970
Method source code: 
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = poissonDistributionImpl1.inverseCumulativeProbability((-1.2901906460575272d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #749
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: ldc2_w        #750
54: invokevirtual #15
57: istore        6
59: ldc           #16
61: invokestatic  #17
64: goto          109
67: astore        6
69: aload         6
71: invokevirtual #19
74: invokevirtual #20
77: ifne          109
80: new           #21
83: dup
84: invokespecial #22
87: ldc           #23
89: invokevirtual #24
92: aload         6
94: invokevirtual #19
97: invokevirtual #25
100: invokevirtual #24
103: invokevirtual #26
106: invokestatic  #17
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload_2
122: invokevirtual #28
125: ldc           #29
127: invokevirtual #24
130: ldc2_w        #30
133: invokevirtual #28
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: dload_2
145: ldc2_w        #30
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: new           #21
163: dup
164: invokespecial #22
167: ldc           #27
169: invokevirtual #24
172: dload         4
174: invokevirtual #28
177: ldc           #29
179: invokevirtual #24
182: ldc2_w        #45
185: invokevirtual #28
188: ldc           #27
190: invokevirtual #24
193: invokevirtual #26
196: dload         4
198: ldc2_w        #45
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: return
Exception table:
from    to  target type
50    64    67   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test202
Start line: 3973
End line: 3987
Method source code: 
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.probability(1.131024151762108d);
        double double12 = poissonDistributionImpl1.normalApproximateProbability(2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9331927987311419d + "'", double12 == 0.9331927987311419d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #752
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: ldc2_w        #753
61: invokevirtual #44
64: dstore        8
66: aload_1
67: iconst_2
68: invokevirtual #63
71: dstore        10
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #27
82: invokevirtual #24
85: dload_2
86: invokevirtual #28
89: ldc           #29
91: invokevirtual #24
94: ldc2_w        #30
97: invokevirtual #28
100: ldc           #27
102: invokevirtual #24
105: invokevirtual #26
108: dload_2
109: ldc2_w        #30
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #45
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #45
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: ldc2_w        #87
202: invokevirtual #28
205: ldc           #27
207: invokevirtual #24
210: invokevirtual #26
213: dload         6
215: ldc2_w        #87
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: dload         8
244: invokevirtual #28
247: ldc           #29
249: invokevirtual #24
252: dconst_0
253: invokevirtual #28
256: ldc           #27
258: invokevirtual #24
261: invokevirtual #26
264: dload         8
266: dconst_0
267: dcmpl
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: dload         10
293: invokevirtual #28
296: ldc           #29
298: invokevirtual #24
301: ldc2_w        #755
304: invokevirtual #28
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: dload         10
317: ldc2_w        #755
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test203
Start line: 3990
End line: 4000
Method source code: 
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-0.19521837093832897d), (double) 89);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.195 is smaller than, or equal to, the minimum (0): mean (-0.195)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #757
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #758
32: ldc2_w        #760
35: invokespecial #255
38: astore_1
39: ldc_w         #762
42: invokestatic  #17
45: goto          49
48: astore_1
49: return
Exception table:
from    to  target type
25    45    48   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test204
Start line: 4003
End line: 4022
Method source code: 
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGamma(2.6593984616112802d, 0.9937903346742238d);
        // The following exception was thrown during execution in test generation
        try {
            long long12 = randomDataImpl4.nextSecureLong(97L, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 97 is larger than, or equal to, the maximum (1): lower bound (97) must be strictly less than upper bound (1)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.857347287701908d + "'", double9 == 4.857347287701908d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #763
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #315
62: ldc2_w        #317
65: invokevirtual #192
68: dstore        7
70: aload         4
72: ldc2_w        #82
75: lconst_1
76: invokevirtual #84
79: lstore        9
81: ldc_w         #764
84: invokestatic  #17
87: goto          92
90: astore        9
92: new           #21
95: dup
96: invokespecial #22
99: ldc           #27
101: invokevirtual #24
104: dload_2
105: invokevirtual #28
108: ldc           #29
110: invokevirtual #24
113: ldc2_w        #47
116: invokevirtual #28
119: ldc           #27
121: invokevirtual #24
124: invokevirtual #26
127: dload_2
128: ldc2_w        #47
131: dcmpl
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #32
143: aload         4
145: invokestatic  #77
148: return
Exception table:
from    to  target type
70    87    90   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test205
Start line: 4025
End line: 4039
Method source code: 
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.2367216168375328d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #765
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #766
68: invokevirtual #34
71: istore        10
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #27
82: invokevirtual #24
85: dload_2
86: invokevirtual #28
89: ldc           #29
91: invokevirtual #24
94: ldc2_w        #30
97: invokevirtual #28
100: ldc           #27
102: invokevirtual #24
105: invokevirtual #26
108: dload_2
109: ldc2_w        #30
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #45
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #45
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: ldc2_w        #87
202: invokevirtual #28
205: ldc           #27
207: invokevirtual #24
210: invokevirtual #26
213: dload         6
215: ldc2_w        #87
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: dload         8
244: invokevirtual #28
247: ldc           #29
249: invokevirtual #24
252: ldc2_w        #45
255: invokevirtual #28
258: ldc           #27
260: invokevirtual #24
263: invokevirtual #26
266: dload         8
268: ldc2_w        #45
271: dcmpl
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #32
283: new           #21
286: dup
287: invokespecial #22
290: ldc           #27
292: invokevirtual #24
295: iload         10
297: invokevirtual #40
300: ldc           #29
302: invokevirtual #24
305: ldc           #41
307: invokevirtual #40
310: ldc           #27
312: invokevirtual #24
315: invokevirtual #26
318: iload         10
320: ldc           #41
322: if_icmpne     329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #32
333: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test206
Start line: 4042
End line: 4077
Method source code: 
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        randomDataImpl5.reSeedSecure((long) (byte) 1);
        long long15 = randomDataImpl5.nextLong((long) 1, (long) ' ');
        double double18 = randomDataImpl5.nextUniform(1.0623120756348339d, (double) 86L);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl20 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double22 = poissonDistributionImpl20.probability(100);
        double double24 = poissonDistributionImpl20.normalApproximateProbability(2147483647);
        int int26 = poissonDistributionImpl20.getDomainUpperBound((double) 10L);
        int int28 = poissonDistributionImpl20.getDomainLowerBound(3.141592653589793d);
        int int29 = poissonDistributionImpl20.sample();
        int int30 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl20);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5794689508393163d + "'", double10 == 0.5794689508393163d);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 5L + "'", long15 == 5L);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 61.6248131378894d + "'", double18 == 61.6248131378894d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.941866060050443E-159d + "'", double22 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #768
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: invokevirtual #394
101: aload         6
103: lconst_1
104: ldc2_w        #769
107: invokevirtual #123
110: lstore        14
112: aload         6
114: ldc2_w        #771
117: ldc2_w        #773
120: invokevirtual #351
123: dstore        16
125: new           #8
128: dup
129: dconst_1
130: invokespecial #9
133: astore        18
135: aload         18
137: bipush        100
139: invokevirtual #54
142: dstore        19
144: aload         18
146: ldc           #41
148: invokevirtual #63
151: dstore        21
153: aload         18
155: ldc2_w        #13
158: invokevirtual #34
161: istore        23
163: aload         18
165: ldc2_w        #166
168: invokevirtual #139
171: istore        24
173: aload         18
175: invokevirtual #61
178: istore        25
180: aload         6
182: aload         18
184: invokevirtual #116
187: istore        26
189: new           #21
192: dup
193: invokespecial #22
196: ldc           #27
198: invokevirtual #24
201: dload_2
202: invokevirtual #28
205: ldc           #29
207: invokevirtual #24
210: dconst_0
211: invokevirtual #28
214: ldc           #27
216: invokevirtual #24
219: invokevirtual #26
222: dload_2
223: dconst_0
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #32
236: new           #21
239: dup
240: invokespecial #22
243: ldc           #27
245: invokevirtual #24
248: dload         4
250: invokevirtual #28
253: ldc           #29
255: invokevirtual #24
258: ldc2_w        #118
261: invokevirtual #28
264: ldc           #27
266: invokevirtual #24
269: invokevirtual #26
272: dload         4
274: ldc2_w        #118
277: dcmpl
278: ifne          285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #32
289: aload         6
291: invokestatic  #77
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         8
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: dconst_0
317: invokevirtual #28
320: ldc           #27
322: invokevirtual #24
325: invokevirtual #26
328: dload         8
330: dconst_0
331: dcmpl
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #32
343: new           #21
346: dup
347: invokespecial #22
350: ldc           #27
352: invokevirtual #24
355: dload         10
357: invokevirtual #28
360: ldc           #29
362: invokevirtual #24
365: dconst_0
366: invokevirtual #28
369: ldc           #27
371: invokevirtual #24
374: invokevirtual #26
377: dload         10
379: dconst_0
380: dcmpl
381: ifne          388
384: iconst_1
385: goto          389
388: iconst_0
389: invokestatic  #32
392: new           #21
395: dup
396: invokespecial #22
399: ldc           #27
401: invokevirtual #24
404: dload         19
406: invokevirtual #28
409: ldc           #29
411: invokevirtual #24
414: ldc2_w        #47
417: invokevirtual #28
420: ldc           #27
422: invokevirtual #24
425: invokevirtual #26
428: dload         19
430: ldc2_w        #47
433: dcmpl
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #32
445: new           #21
448: dup
449: invokespecial #22
452: ldc           #27
454: invokevirtual #24
457: dload         21
459: invokevirtual #28
462: ldc           #29
464: invokevirtual #24
467: dconst_1
468: invokevirtual #28
471: ldc           #27
473: invokevirtual #24
476: invokevirtual #26
479: dload         21
481: dconst_1
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #32
494: new           #21
497: dup
498: invokespecial #22
501: ldc           #27
503: invokevirtual #24
506: iload         23
508: invokevirtual #40
511: ldc           #29
513: invokevirtual #24
516: ldc           #41
518: invokevirtual #40
521: ldc           #27
523: invokevirtual #24
526: invokevirtual #26
529: iload         23
531: ldc           #41
533: if_icmpne     540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #32
544: new           #21
547: dup
548: invokespecial #22
551: ldc           #27
553: invokevirtual #24
556: iload         24
558: invokevirtual #40
561: ldc           #29
563: invokevirtual #24
566: iconst_0
567: invokevirtual #40
570: ldc           #27
572: invokevirtual #24
575: invokevirtual #26
578: iload         24
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #32
591: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test207
Start line: 4080
End line: 4098
Method source code: 
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        double double14 = poissonDistributionImpl1.probability(100);
        double double16 = poissonDistributionImpl1.cumulativeProbability(3.1911890201610937d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.941866060050443E-159d + "'", double14 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9810118431238473d + "'", double16 == 0.9810118431238473d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #775
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #100
72: invokevirtual #34
75: istore        10
77: aload_1
78: bipush        100
80: invokevirtual #54
83: dstore        11
85: aload_1
86: ldc2_w        #776
89: invokevirtual #141
92: dstore        13
94: new           #21
97: dup
98: invokespecial #22
101: ldc           #27
103: invokevirtual #24
106: dload_2
107: invokevirtual #28
110: ldc           #29
112: invokevirtual #24
115: ldc2_w        #47
118: invokevirtual #28
121: ldc           #27
123: invokevirtual #24
126: invokevirtual #26
129: dload_2
130: ldc2_w        #47
133: dcmpl
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #32
145: new           #21
148: dup
149: invokespecial #22
152: ldc           #27
154: invokevirtual #24
157: dload         4
159: invokevirtual #28
162: ldc           #29
164: invokevirtual #24
167: dconst_1
168: invokevirtual #28
171: ldc           #27
173: invokevirtual #24
176: invokevirtual #26
179: dload         4
181: dconst_1
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         6
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #69
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         6
232: ldc2_w        #69
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: new           #21
250: dup
251: invokespecial #22
254: ldc           #27
256: invokevirtual #24
259: dload         8
261: invokevirtual #28
264: ldc           #29
266: invokevirtual #24
269: dconst_0
270: invokevirtual #28
273: ldc           #27
275: invokevirtual #24
278: invokevirtual #26
281: dload         8
283: dconst_0
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: iload         10
310: invokevirtual #40
313: ldc           #29
315: invokevirtual #24
318: ldc           #41
320: invokevirtual #40
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: iload         10
333: ldc           #41
335: if_icmpne     342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: new           #21
349: dup
350: invokespecial #22
353: ldc           #27
355: invokevirtual #24
358: dload         11
360: invokevirtual #28
363: ldc           #29
365: invokevirtual #24
368: ldc2_w        #47
371: invokevirtual #28
374: ldc           #27
376: invokevirtual #24
379: invokevirtual #26
382: dload         11
384: ldc2_w        #47
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: new           #21
402: dup
403: invokespecial #22
406: ldc           #27
408: invokevirtual #24
411: dload         13
413: invokevirtual #28
416: ldc           #29
418: invokevirtual #24
421: ldc2_w        #778
424: invokevirtual #28
427: ldc           #27
429: invokevirtual #24
432: invokevirtual #26
435: dload         13
437: ldc2_w        #778
440: dcmpl
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #32
452: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test208
Start line: 4101
End line: 4107
Method source code: 
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.015611499573953436d, 5.699573249784173d);
        double double5 = poissonDistributionImpl2.cumulativeProbability(0.8354297910850215d, 81.41619663227057d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.015369673202604406d + "'", double5 == 0.015369673202604406d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #780
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #670
32: ldc2_w        #672
35: invokespecial #255
38: astore_1
39: aload_1
40: ldc2_w        #781
43: ldc2_w        #783
46: invokevirtual #12
49: dstore_2
50: new           #21
53: dup
54: invokespecial #22
57: ldc           #27
59: invokevirtual #24
62: dload_2
63: invokevirtual #28
66: ldc           #29
68: invokevirtual #24
71: ldc2_w        #785
74: invokevirtual #28
77: ldc           #27
79: invokevirtual #24
82: invokevirtual #26
85: dload_2
86: ldc2_w        #785
89: dcmpl
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #32
101: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test209
Start line: 4110
End line: 4129
Method source code: 
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGamma(2.6593984616112802d, 0.9937903346742238d);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = randomDataImpl4.nextHexString(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): length (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.2461781985639466d + "'", double9 == 3.2461781985639466d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #787
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #315
62: ldc2_w        #317
65: invokevirtual #192
68: dstore        7
70: aload         4
72: iconst_0
73: invokevirtual #328
76: astore        9
78: ldc_w         #329
81: invokestatic  #17
84: goto          89
87: astore        9
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #27
98: invokevirtual #24
101: dload_2
102: invokevirtual #28
105: ldc           #29
107: invokevirtual #24
110: ldc2_w        #47
113: invokevirtual #28
116: ldc           #27
118: invokevirtual #24
121: invokevirtual #26
124: dload_2
125: ldc2_w        #47
128: dcmpl
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #32
140: aload         4
142: invokestatic  #77
145: return
Exception table:
from    to  target type
70    84    87   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test210
Start line: 4132
End line: 4160
Method source code: 
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double18 = randomDataImpl5.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = randomDataImpl5.nextSecureHexString((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -1 is smaller than, or equal to, the minimum (0): length (-1)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 547.1449662227392d + "'", double7 == 547.1449662227392d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.16060735835651d + "'", double18 == 3.16060735835651d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #788
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #198
111: ldc2_w        #127
114: invokevirtual #200
117: dstore        15
119: aload         6
121: iconst_m1
122: invokevirtual #704
125: astore        17
127: ldc_w         #789
130: invokestatic  #17
133: goto          138
136: astore        17
138: new           #21
141: dup
142: invokespecial #22
145: ldc           #27
147: invokevirtual #24
150: dload_2
151: invokevirtual #28
154: ldc           #29
156: invokevirtual #24
159: dconst_0
160: invokevirtual #28
163: ldc           #27
165: invokevirtual #24
168: invokevirtual #26
171: dload_2
172: dconst_0
173: dcmpl
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #32
185: new           #21
188: dup
189: invokespecial #22
192: ldc           #27
194: invokevirtual #24
197: dload         4
199: invokevirtual #28
202: ldc           #29
204: invokevirtual #24
207: ldc2_w        #118
210: invokevirtual #28
213: ldc           #27
215: invokevirtual #24
218: invokevirtual #26
221: dload         4
223: ldc2_w        #118
226: dcmpl
227: ifne          234
230: iconst_1
231: goto          235
234: iconst_0
235: invokestatic  #32
238: aload         6
240: invokestatic  #77
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: dload         10
257: invokevirtual #28
260: ldc           #29
262: invokevirtual #24
265: ldc2_w        #47
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         10
281: ldc2_w        #47
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: dload         12
310: invokevirtual #28
313: ldc           #29
315: invokevirtual #24
318: dconst_1
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         12
332: dconst_1
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: return
Exception table:
from    to  target type
119   133   136   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test211
Start line: 4163
End line: 4173
Method source code: 
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.probability(100);
        java.lang.Class<?> wildcardClass7 = poissonDistributionImpl1.getClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.941866060050443E-159d + "'", double6 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #790
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: bipush        100
46: invokevirtual #54
49: dstore        4
51: aload_1
52: invokevirtual #19
55: astore        6
57: new           #21
60: dup
61: invokespecial #22
64: ldc           #27
66: invokevirtual #24
69: dload_2
70: invokevirtual #28
73: ldc           #29
75: invokevirtual #24
78: ldc2_w        #30
81: invokevirtual #28
84: ldc           #27
86: invokevirtual #24
89: invokevirtual #26
92: dload_2
93: ldc2_w        #30
96: dcmpl
97: ifne          104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #32
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload         4
122: invokevirtual #28
125: ldc           #29
127: invokevirtual #24
130: ldc2_w        #47
133: invokevirtual #28
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: dload         4
146: ldc2_w        #47
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: aload         6
163: invokestatic  #77
166: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test212
Start line: 4176
End line: 4196
Method source code: 
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = poissonDistributionImpl1.cumulativeProbability(36.941458435411754d, 1.4210854715202004E-14d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #791
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: ldc2_w        #792
58: ldc2_w        #794
61: invokevirtual #12
64: dstore        6
66: ldc           #16
68: invokestatic  #17
71: goto          116
74: astore        6
76: aload         6
78: invokevirtual #19
81: invokevirtual #20
84: ifne          116
87: new           #21
90: dup
91: invokespecial #22
94: ldc           #23
96: invokevirtual #24
99: aload         6
101: invokevirtual #19
104: invokevirtual #25
107: invokevirtual #24
110: invokevirtual #26
113: invokestatic  #17
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #27
125: invokevirtual #24
128: dload_2
129: invokevirtual #28
132: ldc           #29
134: invokevirtual #24
137: ldc2_w        #47
140: invokevirtual #28
143: ldc           #27
145: invokevirtual #24
148: invokevirtual #26
151: dload_2
152: ldc2_w        #47
155: dcmpl
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #32
167: aload         4
169: invokestatic  #77
172: new           #21
175: dup
176: invokespecial #22
179: ldc           #27
181: invokevirtual #24
184: iload         5
186: invokevirtual #40
189: ldc           #29
191: invokevirtual #24
194: iconst_m1
195: invokevirtual #40
198: ldc           #27
200: invokevirtual #24
203: invokevirtual #26
206: iload         5
208: iconst_m1
209: if_icmpne     216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #32
220: return
Exception table:
from    to  target type
54    71    74   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test213
Start line: 4199
End line: 4210
Method source code: 
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double6 = poissonDistributionImpl1.getMean();
        poissonDistributionImpl1.reseedRandomGenerator(1564722L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #796
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: invokevirtual #102
53: dstore        6
55: aload_1
56: ldc2_w        #797
59: invokevirtual #157
62: new           #21
65: dup
66: invokespecial #22
69: ldc           #27
71: invokevirtual #24
74: dload_2
75: invokevirtual #28
78: ldc           #29
80: invokevirtual #24
83: ldc2_w        #47
86: invokevirtual #28
89: ldc           #27
91: invokevirtual #24
94: invokevirtual #26
97: dload_2
98: ldc2_w        #47
101: dcmpl
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #32
113: new           #21
116: dup
117: invokespecial #22
120: ldc           #27
122: invokevirtual #24
125: dload         4
127: invokevirtual #28
130: ldc           #29
132: invokevirtual #24
135: ldc2_w        #178
138: invokevirtual #28
141: ldc           #27
143: invokevirtual #24
146: invokevirtual #26
149: dload         4
151: ldc2_w        #178
154: dcmpl
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: dload         6
180: invokevirtual #28
183: ldc           #29
185: invokevirtual #24
188: dconst_1
189: invokevirtual #28
192: ldc           #27
194: invokevirtual #24
197: invokevirtual #26
200: dload         6
202: dconst_1
203: dcmpl
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #32
215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test214
Start line: 4213
End line: 4224
Method source code: 
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) '4', (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl2.cumulativeProbability(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 52");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #799
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #43
42: dstore_2
43: ldc_w         #800
46: invokestatic  #17
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
37    49    52   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test215
Start line: 4227
End line: 4242
Method source code: 
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        int int13 = poissonDistributionImpl1.getDomainUpperBound(1.2597284809259754d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #801
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: ldc2_w        #802
76: invokevirtual #34
79: istore        8
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #27
90: invokevirtual #24
93: dload_2
94: invokevirtual #28
97: ldc           #29
99: invokevirtual #24
102: ldc2_w        #30
105: invokevirtual #28
108: ldc           #27
110: invokevirtual #24
113: invokevirtual #26
116: dload_2
117: ldc2_w        #30
120: dcmpl
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #32
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: dload         4
146: invokevirtual #28
149: ldc           #29
151: invokevirtual #24
154: ldc2_w        #45
157: invokevirtual #28
160: ldc           #27
162: invokevirtual #24
165: invokevirtual #26
168: dload         4
170: ldc2_w        #45
173: dcmpl
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #32
185: new           #21
188: dup
189: invokespecial #22
192: ldc           #27
194: invokevirtual #24
197: iload         7
199: invokevirtual #40
202: ldc           #29
204: invokevirtual #24
207: ldc           #41
209: invokevirtual #40
212: ldc           #27
214: invokevirtual #24
217: invokevirtual #26
220: iload         7
222: ldc           #41
224: if_icmpne     231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #32
235: new           #21
238: dup
239: invokespecial #22
242: ldc           #27
244: invokevirtual #24
247: iload         8
249: invokevirtual #40
252: ldc           #29
254: invokevirtual #24
257: ldc           #41
259: invokevirtual #40
262: ldc           #27
264: invokevirtual #24
267: invokevirtual #26
270: iload         8
272: ldc           #41
274: if_icmpne     281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #32
285: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test216
Start line: 4245
End line: 4281
Method source code: 
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        long long18 = randomDataImpl5.nextLong(52L, 60L);
        double double21 = randomDataImpl5.nextCauchy(0.18116021952662198d, (double) 1);
        int[] intArray24 = randomDataImpl5.nextPermutation(57, 49);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = randomDataImpl5.nextWeibull((-1.1087359948888835d), 5.345891027618216d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 531.2027739589392d + "'", double7 == 531.2027739589392d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 56L + "'", long18 == 56L);
// flaky:         org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.288548195170122d + "'", double21 == 0.288548195170122d);
        org.junit.Assert.assertNotNull(intArray24);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[35, 23, 55, 6, 41, 34, 46, 19, 43, 48, 47, 15, 37, 12, 27, 21, 9, 30, 40, 56, 8, 3, 4, 36, 39, 2, 18, 17, 22, 52, 31, 20, 29, 26, 53, 11, 33, 49, 13, 51, 42, 44, 14, 10, 28, 16, 24, 45, 38]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #804
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #646
111: ldc2_w        #648
114: invokevirtual #123
117: lstore        15
119: aload         6
121: ldc2_w        #650
124: dconst_1
125: invokevirtual #652
128: dstore        17
130: aload         6
132: bipush        57
134: bipush        49
136: invokevirtual #205
139: astore        19
141: aload         6
143: ldc2_w        #805
146: ldc2_w        #682
149: invokevirtual #200
152: dstore        20
154: ldc           #16
156: invokestatic  #17
159: goto          204
162: astore        20
164: aload         20
166: invokevirtual #19
169: invokevirtual #20
172: ifne          204
175: new           #21
178: dup
179: invokespecial #22
182: ldc           #23
184: invokevirtual #24
187: aload         20
189: invokevirtual #19
192: invokevirtual #25
195: invokevirtual #24
198: invokevirtual #26
201: invokestatic  #17
204: new           #21
207: dup
208: invokespecial #22
211: ldc           #27
213: invokevirtual #24
216: dload_2
217: invokevirtual #28
220: ldc           #29
222: invokevirtual #24
225: dconst_0
226: invokevirtual #28
229: ldc           #27
231: invokevirtual #24
234: invokevirtual #26
237: dload_2
238: dconst_0
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #32
251: new           #21
254: dup
255: invokespecial #22
258: ldc           #27
260: invokevirtual #24
263: dload         4
265: invokevirtual #28
268: ldc           #29
270: invokevirtual #24
273: ldc2_w        #118
276: invokevirtual #28
279: ldc           #27
281: invokevirtual #24
284: invokevirtual #26
287: dload         4
289: ldc2_w        #118
292: dcmpl
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #32
304: aload         6
306: invokestatic  #77
309: new           #21
312: dup
313: invokespecial #22
316: ldc           #27
318: invokevirtual #24
321: dload         10
323: invokevirtual #28
326: ldc           #29
328: invokevirtual #24
331: ldc2_w        #47
334: invokevirtual #28
337: ldc           #27
339: invokevirtual #24
342: invokevirtual #26
345: dload         10
347: ldc2_w        #47
350: dcmpl
351: ifne          358
354: iconst_1
355: goto          359
358: iconst_0
359: invokestatic  #32
362: new           #21
365: dup
366: invokespecial #22
369: ldc           #27
371: invokevirtual #24
374: dload         12
376: invokevirtual #28
379: ldc           #29
381: invokevirtual #24
384: dconst_1
385: invokevirtual #28
388: ldc           #27
390: invokevirtual #24
393: invokevirtual #26
396: dload         12
398: dconst_1
399: dcmpl
400: ifne          407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #32
411: aload         19
413: invokestatic  #77
416: return
Exception table:
from    to  target type
141   159   162   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test217
Start line: 4284
End line: 4298
Method source code: 
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        int int10 = randomDataImpl7.nextInt(0, (int) ' ');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #807
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: iconst_0
63: bipush        32
65: invokevirtual #808
68: istore        7
70: new           #21
73: dup
74: invokespecial #22
77: ldc           #27
79: invokevirtual #24
82: dload_2
83: invokevirtual #28
86: ldc           #29
88: invokevirtual #24
91: ldc2_w        #47
94: invokevirtual #28
97: ldc           #27
99: invokevirtual #24
102: invokevirtual #26
105: dload_2
106: ldc2_w        #47
109: dcmpl
110: ifne          117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #32
121: aload         4
123: invokestatic  #77
126: new           #21
129: dup
130: invokespecial #22
133: ldc           #27
135: invokevirtual #24
138: iload         5
140: invokevirtual #40
143: ldc           #29
145: invokevirtual #24
148: iconst_m1
149: invokevirtual #40
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: iload         5
162: iconst_m1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #32
174: aload         6
176: invokestatic  #77
179: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test218
Start line: 4301
End line: 4323
Method source code: 
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        int int13 = poissonDistributionImpl1.getDomainUpperBound((-1.7540630599962477d));
        double double16 = poissonDistributionImpl1.cumulativeProbability((int) (byte) -1, 108);
        int int18 = poissonDistributionImpl1.getDomainLowerBound(0.5403023058681399d);
        double double20 = poissonDistributionImpl1.probability(48);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.963444035277866E-62d + "'", double20 == 2.963444035277866E-62d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #809
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #284
80: invokevirtual #34
83: istore        10
85: aload_1
86: iconst_m1
87: bipush        108
89: invokevirtual #64
92: dstore        11
94: aload_1
95: ldc2_w        #537
98: invokevirtual #139
101: istore        13
103: aload_1
104: bipush        48
106: invokevirtual #54
109: dstore        14
111: new           #21
114: dup
115: invokespecial #22
118: ldc           #27
120: invokevirtual #24
123: dload_2
124: invokevirtual #28
127: ldc           #29
129: invokevirtual #24
132: ldc2_w        #47
135: invokevirtual #28
138: ldc           #27
140: invokevirtual #24
143: invokevirtual #26
146: dload_2
147: ldc2_w        #47
150: dcmpl
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #32
162: new           #21
165: dup
166: invokespecial #22
169: ldc           #27
171: invokevirtual #24
174: dload         4
176: invokevirtual #28
179: ldc           #29
181: invokevirtual #24
184: dconst_1
185: invokevirtual #28
188: ldc           #27
190: invokevirtual #24
193: invokevirtual #26
196: dload         4
198: dconst_1
199: dcmpl
200: ifne          207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #32
211: new           #21
214: dup
215: invokespecial #22
218: ldc           #27
220: invokevirtual #24
223: iload         6
225: invokevirtual #40
228: ldc           #29
230: invokevirtual #24
233: ldc           #41
235: invokevirtual #40
238: ldc           #27
240: invokevirtual #24
243: invokevirtual #26
246: iload         6
248: ldc           #41
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #32
261: new           #21
264: dup
265: invokespecial #22
268: ldc           #27
270: invokevirtual #24
273: iload         7
275: invokevirtual #40
278: ldc           #29
280: invokevirtual #24
283: iconst_1
284: invokevirtual #40
287: ldc           #27
289: invokevirtual #24
292: invokevirtual #26
295: iload         7
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #32
309: new           #21
312: dup
313: invokespecial #22
316: ldc           #27
318: invokevirtual #24
321: dload         8
323: invokevirtual #28
326: ldc           #29
328: invokevirtual #24
331: dconst_0
332: invokevirtual #28
335: ldc           #27
337: invokevirtual #24
340: invokevirtual #26
343: dload         8
345: dconst_0
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: iload         10
372: invokevirtual #40
375: ldc           #29
377: invokevirtual #24
380: ldc           #41
382: invokevirtual #40
385: ldc           #27
387: invokevirtual #24
390: invokevirtual #26
393: iload         10
395: ldc           #41
397: if_icmpne     404
400: iconst_1
401: goto          405
404: iconst_0
405: invokestatic  #32
408: new           #21
411: dup
412: invokespecial #22
415: ldc           #27
417: invokevirtual #24
420: dload         11
422: invokevirtual #28
425: ldc           #29
427: invokevirtual #24
430: dconst_1
431: invokevirtual #28
434: ldc           #27
436: invokevirtual #24
439: invokevirtual #26
442: dload         11
444: dconst_1
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #32
457: new           #21
460: dup
461: invokespecial #22
464: ldc           #27
466: invokevirtual #24
469: iload         13
471: invokevirtual #40
474: ldc           #29
476: invokevirtual #24
479: iconst_0
480: invokevirtual #40
483: ldc           #27
485: invokevirtual #24
488: invokevirtual #26
491: iload         13
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #32
504: new           #21
507: dup
508: invokespecial #22
511: ldc           #27
513: invokevirtual #24
516: dload         14
518: invokevirtual #28
521: ldc           #29
523: invokevirtual #24
526: ldc2_w        #810
529: invokevirtual #28
532: ldc           #27
534: invokevirtual #24
537: invokevirtual #26
540: dload         14
542: ldc2_w        #810
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #32
557: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test219
Start line: 4326
End line: 4340
Method source code: 
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        double double11 = poissonDistributionImpl1.cumulativeProbability(61);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #812
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: bipush        61
68: invokevirtual #43
71: dstore        8
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #27
82: invokevirtual #24
85: dload_2
86: invokevirtual #28
89: ldc           #29
91: invokevirtual #24
94: ldc2_w        #30
97: invokevirtual #28
100: ldc           #27
102: invokevirtual #24
105: invokevirtual #26
108: dload_2
109: ldc2_w        #30
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #45
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #45
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: iload         7
191: invokevirtual #40
194: ldc           #29
196: invokevirtual #24
199: ldc           #41
201: invokevirtual #40
204: ldc           #27
206: invokevirtual #24
209: invokevirtual #26
212: iload         7
214: ldc           #41
216: if_icmpne     223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #32
227: new           #21
230: dup
231: invokespecial #22
234: ldc           #27
236: invokevirtual #24
239: dload         8
241: invokevirtual #28
244: ldc           #29
246: invokevirtual #24
249: dconst_1
250: invokevirtual #28
253: ldc           #27
255: invokevirtual #24
258: invokevirtual #26
261: dload         8
263: dconst_1
264: dcmpl
265: ifne          272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #32
276: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test220
Start line: 4343
End line: 4347
Method source code: 
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6240474076765692d, (double) 9223372036854775807L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #813
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #600
32: ldc2_w        #495
35: invokespecial #255
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test221
Start line: 4350
End line: 4379
Method source code: 
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        double double4 = randomDataImpl1.nextUniform((-0.7853981633974483d), 0.962217362072003d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl6 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double8 = poissonDistributionImpl6.probability(100);
        double double10 = poissonDistributionImpl6.normalApproximateProbability(2147483647);
        double double13 = poissonDistributionImpl6.cumulativeProbability((int) (short) 10, 2147483647);
        double double15 = poissonDistributionImpl6.probability((-1.207854600801523d));
        double double17 = poissonDistributionImpl6.probability(100);
        int int19 = poissonDistributionImpl6.inverseCumulativeProbability(0.06680720126885803d);
        int int20 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = randomDataImpl1.nextSecureHexString((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -1 is smaller than, or equal to, the minimum (0): length (-1)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.20307102058404058d) + "'", double4 == (-0.20307102058404058d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.941866060050443E-159d + "'", double8 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.1142547828857374E-7d + "'", double13 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.941866060050443E-159d + "'", double17 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #814
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: aload_2
37: ldc2_w        #130
40: ldc2_w        #746
43: invokevirtual #351
46: dstore_3
47: new           #8
50: dup
51: dconst_1
52: invokespecial #9
55: astore        5
57: aload         5
59: bipush        100
61: invokevirtual #54
64: dstore        6
66: aload         5
68: ldc           #41
70: invokevirtual #63
73: dstore        8
75: aload         5
77: bipush        10
79: ldc           #41
81: invokevirtual #64
84: dstore        10
86: aload         5
88: ldc2_w        #65
91: invokevirtual #44
94: dstore        12
96: aload         5
98: bipush        100
100: invokevirtual #54
103: dstore        14
105: aload         5
107: ldc2_w        #87
110: invokevirtual #15
113: istore        16
115: aload_2
116: aload         5
118: invokevirtual #116
121: istore        17
123: aload_2
124: iconst_m1
125: invokevirtual #704
128: astore        18
130: ldc_w         #789
133: invokestatic  #17
136: goto          141
139: astore        18
141: new           #21
144: dup
145: invokespecial #22
148: ldc           #27
150: invokevirtual #24
153: dload         6
155: invokevirtual #28
158: ldc           #29
160: invokevirtual #24
163: ldc2_w        #47
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         6
179: ldc2_w        #47
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         8
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: dconst_1
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         8
230: dconst_1
231: dcmpl
232: ifne          239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: dload         10
257: invokevirtual #28
260: ldc           #29
262: invokevirtual #24
265: ldc2_w        #69
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         10
281: ldc2_w        #69
284: dcmpl
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #32
296: new           #21
299: dup
300: invokespecial #22
303: ldc           #27
305: invokevirtual #24
308: dload         12
310: invokevirtual #28
313: ldc           #29
315: invokevirtual #24
318: dconst_0
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         12
332: dconst_0
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: new           #21
348: dup
349: invokespecial #22
352: ldc           #27
354: invokevirtual #24
357: dload         14
359: invokevirtual #28
362: ldc           #29
364: invokevirtual #24
367: ldc2_w        #47
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         14
383: ldc2_w        #47
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #32
398: new           #21
401: dup
402: invokespecial #22
405: ldc           #27
407: invokevirtual #24
410: iload         16
412: invokevirtual #40
415: ldc           #29
417: invokevirtual #24
420: iconst_m1
421: invokevirtual #40
424: ldc           #27
426: invokevirtual #24
429: invokevirtual #26
432: iload         16
434: iconst_m1
435: if_icmpne     442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #32
446: return
Exception table:
from    to  target type
123   136   139   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test222
Start line: 4382
End line: 4396
Method source code: 
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(Double.POSITIVE_INFINITY, 0.0d);
        poissonDistributionImpl2.reseedRandomGenerator((long) (-1));
        double double5 = poissonDistributionImpl2.getMean();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl2.cumulativeProbability(98.57286612709936d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.ConvergenceException; message: Continued fraction diverged to NaN for value ?");
        } catch (org.apache.commons.math.ConvergenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + Double.POSITIVE_INFINITY + "'", double5 == Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #815
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #253
32: dconst_0
33: invokespecial #255
36: astore_1
37: aload_1
38: ldc2_w        #121
41: invokevirtual #157
44: aload_1
45: invokevirtual #102
48: dstore_2
49: aload_1
50: ldc2_w        #816
53: invokevirtual #141
56: dstore        4
58: ldc_w         #818
61: invokestatic  #17
64: goto          69
67: astore        4
69: new           #21
72: dup
73: invokespecial #22
76: ldc           #27
78: invokevirtual #24
81: dload_2
82: invokevirtual #28
85: ldc           #29
87: invokevirtual #24
90: ldc2_w        #253
93: invokevirtual #28
96: ldc           #27
98: invokevirtual #24
101: invokevirtual #26
104: dload_2
105: ldc2_w        #253
108: dcmpl
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #32
120: return
Exception table:
from    to  target type
49    64    67   Class org/apache/commons/math/ConvergenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test223
Start line: 4399
End line: 4419
Method source code: 
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound((-0.7531344911940551d));
        double double14 = poissonDistributionImpl1.probability((-0.9501789451592945d));
        int int16 = poissonDistributionImpl1.getDomainUpperBound((double) 2.0f);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #820
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #402
77: invokevirtual #139
80: istore        9
82: aload_1
83: ldc2_w        #216
86: invokevirtual #44
89: dstore        10
91: aload_1
92: ldc2_w        #821
95: invokevirtual #34
98: istore        12
100: new           #21
103: dup
104: invokespecial #22
107: ldc           #27
109: invokevirtual #24
112: dload_2
113: invokevirtual #28
116: ldc           #29
118: invokevirtual #24
121: ldc2_w        #47
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload_2
136: ldc2_w        #47
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #32
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload         4
165: invokevirtual #28
168: ldc           #29
170: invokevirtual #24
173: dconst_1
174: invokevirtual #28
177: ldc           #27
179: invokevirtual #24
182: invokevirtual #26
185: dload         4
187: dconst_1
188: dcmpl
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #32
200: new           #21
203: dup
204: invokespecial #22
207: ldc           #27
209: invokevirtual #24
212: iload         6
214: invokevirtual #40
217: ldc           #29
219: invokevirtual #24
222: ldc           #41
224: invokevirtual #40
227: ldc           #27
229: invokevirtual #24
232: invokevirtual #26
235: iload         6
237: ldc           #41
239: if_icmpne     246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #32
250: new           #21
253: dup
254: invokespecial #22
257: ldc           #27
259: invokevirtual #24
262: iload         7
264: invokevirtual #40
267: ldc           #29
269: invokevirtual #24
272: iconst_0
273: invokevirtual #40
276: ldc           #27
278: invokevirtual #24
281: invokevirtual #26
284: iload         7
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: iload         9
311: invokevirtual #40
314: ldc           #29
316: invokevirtual #24
319: iconst_0
320: invokevirtual #40
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: iload         9
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #32
344: new           #21
347: dup
348: invokespecial #22
351: ldc           #27
353: invokevirtual #24
356: dload         10
358: invokevirtual #28
361: ldc           #29
363: invokevirtual #24
366: dconst_0
367: invokevirtual #28
370: ldc           #27
372: invokevirtual #24
375: invokevirtual #26
378: dload         10
380: dconst_0
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #32
393: new           #21
396: dup
397: invokespecial #22
400: ldc           #27
402: invokevirtual #24
405: iload         12
407: invokevirtual #40
410: ldc           #29
412: invokevirtual #24
415: ldc           #41
417: invokevirtual #40
420: ldc           #27
422: invokevirtual #24
425: invokevirtual #26
428: iload         12
430: ldc           #41
432: if_icmpne     439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #32
443: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test224
Start line: 4422
End line: 4428
Method source code: 
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(99.22495072257823d, 0.24712452682051894d);
        double double4 = poissonDistributionImpl2.cumulativeProbability(0.00900404914276215d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 8.07516553960908E-44d + "'", double4 == 8.07516553960908E-44d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #823
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #722
32: ldc2_w        #724
35: invokespecial #255
38: astore_1
39: aload_1
40: ldc2_w        #824
43: invokevirtual #141
46: dstore_2
47: new           #21
50: dup
51: invokespecial #22
54: ldc           #27
56: invokevirtual #24
59: dload_2
60: invokevirtual #28
63: ldc           #29
65: invokevirtual #24
68: ldc2_w        #826
71: invokevirtual #28
74: ldc           #27
76: invokevirtual #24
79: invokevirtual #26
82: dload_2
83: ldc2_w        #826
86: dcmpl
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #32
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test225
Start line: 4431
End line: 4449
Method source code: 
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        int int6 = poissonDistributionImpl2.getDomainLowerBound((-0.17739400468773303d));
        double double8 = poissonDistributionImpl2.cumulativeProbability(1.1643428520428265d);
        int int10 = poissonDistributionImpl2.getDomainUpperBound((double) 128L);
        int int11 = poissonDistributionImpl2.sample();
        double double13 = poissonDistributionImpl2.probability(0.0d);
        int int14 = poissonDistributionImpl2.sample();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.3834479069238827E-21d + "'", double8 == 1.3834479069238827E-21d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 56 + "'", int11 == 56);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.6102790696677047E-23d + "'", double13 == 2.6102790696677047E-23d);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 49 + "'", int14 == 49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #828
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: ldc2_w        #580
48: invokevirtual #139
51: istore        4
53: aload_1
54: ldc2_w        #582
57: invokevirtual #141
60: dstore        5
62: aload_1
63: ldc2_w        #584
66: invokevirtual #34
69: istore        7
71: aload_1
72: invokevirtual #61
75: istore        8
77: aload_1
78: dconst_0
79: invokevirtual #44
82: dstore        9
84: aload_1
85: invokevirtual #61
88: istore        11
90: new           #21
93: dup
94: invokespecial #22
97: ldc           #27
99: invokevirtual #24
102: dload_2
103: invokevirtual #28
106: ldc           #29
108: invokevirtual #24
111: dconst_0
112: invokevirtual #28
115: ldc           #27
117: invokevirtual #24
120: invokevirtual #26
123: dload_2
124: dconst_0
125: dcmpl
126: ifne          133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #32
137: new           #21
140: dup
141: invokespecial #22
144: ldc           #27
146: invokevirtual #24
149: iload         4
151: invokevirtual #40
154: ldc           #29
156: invokevirtual #24
159: iconst_0
160: invokevirtual #40
163: ldc           #27
165: invokevirtual #24
168: invokevirtual #26
171: iload         4
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #32
184: new           #21
187: dup
188: invokespecial #22
191: ldc           #27
193: invokevirtual #24
196: dload         5
198: invokevirtual #28
201: ldc           #29
203: invokevirtual #24
206: ldc2_w        #586
209: invokevirtual #28
212: ldc           #27
214: invokevirtual #24
217: invokevirtual #26
220: dload         5
222: ldc2_w        #586
225: dcmpl
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #32
237: new           #21
240: dup
241: invokespecial #22
244: ldc           #27
246: invokevirtual #24
249: iload         7
251: invokevirtual #40
254: ldc           #29
256: invokevirtual #24
259: ldc           #41
261: invokevirtual #40
264: ldc           #27
266: invokevirtual #24
269: invokevirtual #26
272: iload         7
274: ldc           #41
276: if_icmpne     283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #32
287: new           #21
290: dup
291: invokespecial #22
294: ldc           #27
296: invokevirtual #24
299: dload         9
301: invokevirtual #28
304: ldc           #29
306: invokevirtual #24
309: ldc2_w        #829
312: invokevirtual #28
315: ldc           #27
317: invokevirtual #24
320: invokevirtual #26
323: dload         9
325: ldc2_w        #829
328: dcmpl
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #32
340: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test226
Start line: 4452
End line: 4464
Method source code: 
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(Double.POSITIVE_INFINITY, 0.0d);
        poissonDistributionImpl2.reseedRandomGenerator((long) (-1));
        // The following exception was thrown during execution in test generation
        try {
            double double6 = poissonDistributionImpl2.cumulativeProbability(8265245);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.ConvergenceException; message: Continued fraction diverged to NaN for value ?");
        } catch (org.apache.commons.math.ConvergenceException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #831
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #253
32: dconst_0
33: invokespecial #255
36: astore_1
37: aload_1
38: ldc2_w        #121
41: invokevirtual #157
44: aload_1
45: ldc_w         #832
48: invokevirtual #43
51: dstore_2
52: ldc_w         #818
55: invokestatic  #17
58: goto          62
61: astore_2
62: return
Exception table:
from    to  target type
44    58    61   Class org/apache/commons/math/ConvergenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test227
Start line: 4467
End line: 4487
Method source code: 
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        double double14 = poissonDistributionImpl1.getMean();
        double double15 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #833
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload_1
81: invokevirtual #102
84: dstore        13
86: aload_1
87: invokevirtual #102
90: dstore        15
92: new           #21
95: dup
96: invokespecial #22
99: ldc           #27
101: invokevirtual #24
104: dload_2
105: invokevirtual #28
108: ldc           #29
110: invokevirtual #24
113: ldc2_w        #30
116: invokevirtual #28
119: ldc           #27
121: invokevirtual #24
124: invokevirtual #26
127: dload_2
128: ldc2_w        #30
131: dcmpl
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #32
143: new           #21
146: dup
147: invokespecial #22
150: ldc           #27
152: invokevirtual #24
155: dload         4
157: invokevirtual #28
160: ldc           #29
162: invokevirtual #24
165: ldc2_w        #45
168: invokevirtual #28
171: ldc           #27
173: invokevirtual #24
176: invokevirtual #26
179: dload         4
181: ldc2_w        #45
184: dcmpl
185: ifne          192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #32
196: new           #21
199: dup
200: invokespecial #22
203: ldc           #27
205: invokevirtual #24
208: dload         6
210: invokevirtual #28
213: ldc           #29
215: invokevirtual #24
218: ldc2_w        #87
221: invokevirtual #28
224: ldc           #27
226: invokevirtual #24
229: invokevirtual #26
232: dload         6
234: ldc2_w        #87
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #32
249: new           #21
252: dup
253: invokespecial #22
256: ldc           #27
258: invokevirtual #24
261: dload         8
263: invokevirtual #28
266: ldc           #29
268: invokevirtual #24
271: dconst_1
272: invokevirtual #28
275: ldc           #27
277: invokevirtual #24
280: invokevirtual #26
283: dload         8
285: dconst_1
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #32
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: dload         10
312: invokevirtual #28
315: ldc           #29
317: invokevirtual #24
320: ldc2_w        #47
323: invokevirtual #28
326: ldc           #27
328: invokevirtual #24
331: invokevirtual #26
334: dload         10
336: ldc2_w        #47
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #32
351: aload         12
353: invokestatic  #77
356: new           #21
359: dup
360: invokespecial #22
363: ldc           #27
365: invokevirtual #24
368: dload         13
370: invokevirtual #28
373: ldc           #29
375: invokevirtual #24
378: dconst_1
379: invokevirtual #28
382: ldc           #27
384: invokevirtual #24
387: invokevirtual #26
390: dload         13
392: dconst_1
393: dcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #32
405: new           #21
408: dup
409: invokespecial #22
412: ldc           #27
414: invokevirtual #24
417: dload         15
419: invokevirtual #28
422: ldc           #29
424: invokevirtual #24
427: dconst_1
428: invokevirtual #28
431: ldc           #27
433: invokevirtual #24
436: invokevirtual #26
439: dload         15
441: dconst_1
442: dcmpl
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #32
454: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test228
Start line: 4490
End line: 4512
Method source code: 
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double8 = poissonDistributionImpl1.probability(0.3899356327042469d);
        int int10 = poissonDistributionImpl1.getDomainUpperBound((-0.7880014968389955d));
        // The following exception was thrown during execution in test generation
        try {
            double double13 = poissonDistributionImpl1.cumulativeProbability((double) 81, 1.154454295666692d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #834
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #325
55: invokevirtual #44
58: dstore        6
60: aload_1
61: ldc2_w        #286
64: invokevirtual #34
67: istore        8
69: aload_1
70: ldc2_w        #835
73: ldc2_w        #837
76: invokevirtual #12
79: dstore        9
81: ldc           #16
83: invokestatic  #17
86: goto          131
89: astore        9
91: aload         9
93: invokevirtual #19
96: invokevirtual #20
99: ifne          131
102: new           #21
105: dup
106: invokespecial #22
109: ldc           #23
111: invokevirtual #24
114: aload         9
116: invokevirtual #19
119: invokevirtual #25
122: invokevirtual #24
125: invokevirtual #26
128: invokestatic  #17
131: new           #21
134: dup
135: invokespecial #22
138: ldc           #27
140: invokevirtual #24
143: dload_2
144: invokevirtual #28
147: ldc           #29
149: invokevirtual #24
152: ldc2_w        #47
155: invokevirtual #28
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: dload_2
167: ldc2_w        #47
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: dload         4
196: invokevirtual #28
199: ldc           #29
201: invokevirtual #24
204: dconst_1
205: invokevirtual #28
208: ldc           #27
210: invokevirtual #24
213: invokevirtual #26
216: dload         4
218: dconst_1
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #32
231: new           #21
234: dup
235: invokespecial #22
238: ldc           #27
240: invokevirtual #24
243: dload         6
245: invokevirtual #28
248: ldc           #29
250: invokevirtual #24
253: dconst_0
254: invokevirtual #28
257: ldc           #27
259: invokevirtual #24
262: invokevirtual #26
265: dload         6
267: dconst_0
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #32
280: new           #21
283: dup
284: invokespecial #22
287: ldc           #27
289: invokevirtual #24
292: iload         8
294: invokevirtual #40
297: ldc           #29
299: invokevirtual #24
302: ldc           #41
304: invokevirtual #40
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: iload         8
317: ldc           #41
319: if_icmpne     326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #32
330: return
Exception table:
from    to  target type
69    86    89   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test229
Start line: 4515
End line: 4529
Method source code: 
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGamma(2.6593984616112802d, 0.9937903346742238d);
        int int12 = randomDataImpl4.nextInt((int) (short) -1, 100);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.9237535658542833d + "'", double9 == 1.9237535658542833d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 85 + "'", int12 == 85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #839
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #315
62: ldc2_w        #317
65: invokevirtual #192
68: dstore        7
70: aload         4
72: iconst_m1
73: bipush        100
75: invokevirtual #808
78: istore        9
80: new           #21
83: dup
84: invokespecial #22
87: ldc           #27
89: invokevirtual #24
92: dload_2
93: invokevirtual #28
96: ldc           #29
98: invokevirtual #24
101: ldc2_w        #47
104: invokevirtual #28
107: ldc           #27
109: invokevirtual #24
112: invokevirtual #26
115: dload_2
116: ldc2_w        #47
119: dcmpl
120: ifne          127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #32
131: aload         4
133: invokestatic  #77
136: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test230
Start line: 4532
End line: 4552
Method source code: 
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound((-0.7531344911940551d));
        double double14 = poissonDistributionImpl1.cumulativeProbability((-0.07691157771994986d));
        int int16 = poissonDistributionImpl1.inverseCumulativeProbability(0.9862458459105484d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #840
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #402
77: invokevirtual #139
80: istore        9
82: aload_1
83: ldc2_w        #841
86: invokevirtual #141
89: dstore        10
91: aload_1
92: ldc2_w        #843
95: invokevirtual #15
98: istore        12
100: new           #21
103: dup
104: invokespecial #22
107: ldc           #27
109: invokevirtual #24
112: dload_2
113: invokevirtual #28
116: ldc           #29
118: invokevirtual #24
121: ldc2_w        #47
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload_2
136: ldc2_w        #47
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #32
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload         4
165: invokevirtual #28
168: ldc           #29
170: invokevirtual #24
173: dconst_1
174: invokevirtual #28
177: ldc           #27
179: invokevirtual #24
182: invokevirtual #26
185: dload         4
187: dconst_1
188: dcmpl
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #32
200: new           #21
203: dup
204: invokespecial #22
207: ldc           #27
209: invokevirtual #24
212: iload         6
214: invokevirtual #40
217: ldc           #29
219: invokevirtual #24
222: ldc           #41
224: invokevirtual #40
227: ldc           #27
229: invokevirtual #24
232: invokevirtual #26
235: iload         6
237: ldc           #41
239: if_icmpne     246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #32
250: new           #21
253: dup
254: invokespecial #22
257: ldc           #27
259: invokevirtual #24
262: iload         7
264: invokevirtual #40
267: ldc           #29
269: invokevirtual #24
272: iconst_0
273: invokevirtual #40
276: ldc           #27
278: invokevirtual #24
281: invokevirtual #26
284: iload         7
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: iload         9
311: invokevirtual #40
314: ldc           #29
316: invokevirtual #24
319: iconst_0
320: invokevirtual #40
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: iload         9
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #32
344: new           #21
347: dup
348: invokespecial #22
351: ldc           #27
353: invokevirtual #24
356: dload         10
358: invokevirtual #28
361: ldc           #29
363: invokevirtual #24
366: dconst_0
367: invokevirtual #28
370: ldc           #27
372: invokevirtual #24
375: invokevirtual #26
378: dload         10
380: dconst_0
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #32
393: new           #21
396: dup
397: invokespecial #22
400: ldc           #27
402: invokevirtual #24
405: iload         12
407: invokevirtual #40
410: ldc           #29
412: invokevirtual #24
415: iconst_3
416: invokevirtual #40
419: ldc           #27
421: invokevirtual #24
424: invokevirtual #26
427: iload         12
429: iconst_3
430: if_icmpne     437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #32
441: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test231
Start line: 4555
End line: 4580
Method source code: 
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double19 = poissonDistributionImpl9.normalApproximateProbability((-1));
        double double22 = poissonDistributionImpl9.cumulativeProbability((int) (byte) 1, 2);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 618.0955454446142d + "'", double7 == 618.0955454446142d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.06680720126885803d + "'", double19 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5518191617571463d + "'", double22 == 0.5518191617571463d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #845
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: iconst_m1
118: invokevirtual #63
121: dstore        17
123: aload         9
125: iconst_1
126: iconst_2
127: invokevirtual #64
130: dstore        19
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: dload_2
145: invokevirtual #28
148: ldc           #29
150: invokevirtual #24
153: dconst_0
154: invokevirtual #28
157: ldc           #27
159: invokevirtual #24
162: invokevirtual #26
165: dload_2
166: dconst_0
167: dcmpl
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #32
179: new           #21
182: dup
183: invokespecial #22
186: ldc           #27
188: invokevirtual #24
191: dload         4
193: invokevirtual #28
196: ldc           #29
198: invokevirtual #24
201: ldc2_w        #118
204: invokevirtual #28
207: ldc           #27
209: invokevirtual #24
212: invokevirtual #26
215: dload         4
217: ldc2_w        #118
220: dcmpl
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #32
232: aload         6
234: invokestatic  #77
237: new           #21
240: dup
241: invokespecial #22
244: ldc           #27
246: invokevirtual #24
249: dload         10
251: invokevirtual #28
254: ldc           #29
256: invokevirtual #24
259: ldc2_w        #47
262: invokevirtual #28
265: ldc           #27
267: invokevirtual #24
270: invokevirtual #26
273: dload         10
275: ldc2_w        #47
278: dcmpl
279: ifne          286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #32
290: new           #21
293: dup
294: invokespecial #22
297: ldc           #27
299: invokevirtual #24
302: dload         12
304: invokevirtual #28
307: ldc           #29
309: invokevirtual #24
312: dconst_1
313: invokevirtual #28
316: ldc           #27
318: invokevirtual #24
321: invokevirtual #26
324: dload         12
326: dconst_1
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #32
339: new           #21
342: dup
343: invokespecial #22
346: ldc           #27
348: invokevirtual #24
351: dload         15
353: invokevirtual #28
356: ldc           #29
358: invokevirtual #24
361: dconst_1
362: invokevirtual #28
365: ldc           #27
367: invokevirtual #24
370: invokevirtual #26
373: dload         15
375: dconst_1
376: dcmpl
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #32
388: new           #21
391: dup
392: invokespecial #22
395: ldc           #27
397: invokevirtual #24
400: dload         17
402: invokevirtual #28
405: ldc           #29
407: invokevirtual #24
410: ldc2_w        #87
413: invokevirtual #28
416: ldc           #27
418: invokevirtual #24
421: invokevirtual #26
424: dload         17
426: ldc2_w        #87
429: dcmpl
430: ifne          437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #32
441: new           #21
444: dup
445: invokespecial #22
448: ldc           #27
450: invokevirtual #24
453: dload         19
455: invokevirtual #28
458: ldc           #29
460: invokevirtual #24
463: ldc2_w        #846
466: invokevirtual #28
469: ldc           #27
471: invokevirtual #24
474: invokevirtual #26
477: dload         19
479: ldc2_w        #846
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #32
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test232
Start line: 4583
End line: 4591
Method source code: 
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.9999999999999999d, 129);
        double double4 = poissonDistributionImpl2.cumulativeProbability(3258243);
        double double7 = poissonDistributionImpl2.cumulativeProbability((int) (short) 10, 105);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.1142547828857374E-7d + "'", double7 == 1.1142547828857374E-7d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #848
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #849
32: sipush        129
35: invokespecial #50
38: astore_1
39: aload_1
40: ldc_w         #851
43: invokevirtual #43
46: dstore_2
47: aload_1
48: bipush        10
50: bipush        105
52: invokevirtual #64
55: dstore        4
57: new           #21
60: dup
61: invokespecial #22
64: ldc           #27
66: invokevirtual #24
69: dload_2
70: invokevirtual #28
73: ldc           #29
75: invokevirtual #24
78: dconst_1
79: invokevirtual #28
82: ldc           #27
84: invokevirtual #24
87: invokevirtual #26
90: dload_2
91: dconst_1
92: dcmpl
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #32
104: new           #21
107: dup
108: invokespecial #22
111: ldc           #27
113: invokevirtual #24
116: dload         4
118: invokevirtual #28
121: ldc           #29
123: invokevirtual #24
126: ldc2_w        #69
129: invokevirtual #28
132: ldc           #27
134: invokevirtual #24
137: invokevirtual #26
140: dload         4
142: ldc2_w        #69
145: dcmpl
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #32
157: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test233
Start line: 4594
End line: 4602
Method source code: 
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d, 0.10400365104880639d, (int) (short) 1);
        double double5 = poissonDistributionImpl3.probability((double) 844785L);
        double double6 = poissonDistributionImpl3.getMean();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #852
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: ldc2_w        #271
35: iconst_1
36: invokespecial #97
39: astore_1
40: aload_1
41: ldc2_w        #276
44: invokevirtual #44
47: dstore_2
48: aload_1
49: invokevirtual #102
52: dstore        4
54: new           #21
57: dup
58: invokespecial #22
61: ldc           #27
63: invokevirtual #24
66: dload_2
67: invokevirtual #28
70: ldc           #29
72: invokevirtual #24
75: dconst_0
76: invokevirtual #28
79: ldc           #27
81: invokevirtual #24
84: invokevirtual #26
87: dload_2
88: dconst_0
89: dcmpl
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #32
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload         4
115: invokevirtual #28
118: ldc           #29
120: invokevirtual #24
123: ldc2_w        #269
126: invokevirtual #28
129: ldc           #27
131: invokevirtual #24
134: invokevirtual #26
137: dload         4
139: ldc2_w        #269
142: dcmpl
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #32
154: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test234
Start line: 4605
End line: 4613
Method source code: 
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) '4', (int) (short) 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(129);
        double double6 = poissonDistributionImpl2.probability(0.36842577779469854d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #853
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: sipush        129
41: invokevirtual #63
44: dstore_2
45: aload_1
46: ldc2_w        #854
49: invokevirtual #44
52: dstore        4
54: new           #21
57: dup
58: invokespecial #22
61: ldc           #27
63: invokevirtual #24
66: dload_2
67: invokevirtual #28
70: ldc           #29
72: invokevirtual #24
75: dconst_1
76: invokevirtual #28
79: ldc           #27
81: invokevirtual #24
84: invokevirtual #26
87: dload_2
88: dconst_1
89: dcmpl
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #32
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload         4
115: invokevirtual #28
118: ldc           #29
120: invokevirtual #24
123: dconst_0
124: invokevirtual #28
127: ldc           #27
129: invokevirtual #24
132: invokevirtual #26
135: dload         4
137: dconst_0
138: dcmpl
139: ifne          146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #32
150: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test235
Start line: 4616
End line: 4631
Method source code: 
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double14 = poissonDistributionImpl1.normalApproximateProbability((int) '#');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #856
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: bipush        35
78: invokevirtual #63
81: dstore        10
83: new           #21
86: dup
87: invokespecial #22
90: ldc           #27
92: invokevirtual #24
95: dload_2
96: invokevirtual #28
99: ldc           #29
101: invokevirtual #24
104: ldc2_w        #47
107: invokevirtual #28
110: ldc           #27
112: invokevirtual #24
115: invokevirtual #26
118: dload_2
119: ldc2_w        #47
122: dcmpl
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #32
134: new           #21
137: dup
138: invokespecial #22
141: ldc           #27
143: invokevirtual #24
146: dload         4
148: invokevirtual #28
151: ldc           #29
153: invokevirtual #24
156: dconst_1
157: invokevirtual #28
160: ldc           #27
162: invokevirtual #24
165: invokevirtual #26
168: dload         4
170: dconst_1
171: dcmpl
172: ifne          179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #32
183: new           #21
186: dup
187: invokespecial #22
190: ldc           #27
192: invokevirtual #24
195: dload         6
197: invokevirtual #28
200: ldc           #29
202: invokevirtual #24
205: ldc2_w        #69
208: invokevirtual #28
211: ldc           #27
213: invokevirtual #24
216: invokevirtual #26
219: dload         6
221: ldc2_w        #69
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #32
236: new           #21
239: dup
240: invokespecial #22
243: ldc           #27
245: invokevirtual #24
248: dload         8
250: invokevirtual #28
253: ldc           #29
255: invokevirtual #24
258: dconst_0
259: invokevirtual #28
262: ldc           #27
264: invokevirtual #24
267: invokevirtual #26
270: dload         8
272: dconst_0
273: dcmpl
274: ifne          281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #32
285: new           #21
288: dup
289: invokespecial #22
292: ldc           #27
294: invokevirtual #24
297: dload         10
299: invokevirtual #28
302: ldc           #29
304: invokevirtual #24
307: dconst_1
308: invokevirtual #28
311: ldc           #27
313: invokevirtual #24
316: invokevirtual #26
319: dload         10
321: dconst_1
322: dcmpl
323: ifne          330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #32
334: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test236
Start line: 4634
End line: 4648
Method source code: 
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.getDomainLowerBound((-0.1617659083592266d));
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) 'a');
        double double11 = poissonDistributionImpl1.cumulativeProbability(98, 2147483647);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #857
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: ldc2_w        #462
51: invokevirtual #139
54: istore        5
56: aload_1
57: bipush        97
59: invokevirtual #63
62: dstore        6
64: aload_1
65: bipush        98
67: ldc           #41
69: invokevirtual #64
72: dstore        8
74: new           #21
77: dup
78: invokespecial #22
81: ldc           #27
83: invokevirtual #24
86: dload_2
87: invokevirtual #28
90: ldc           #29
92: invokevirtual #24
95: ldc2_w        #47
98: invokevirtual #28
101: ldc           #27
103: invokevirtual #24
106: invokevirtual #26
109: dload_2
110: ldc2_w        #47
113: dcmpl
114: ifne          121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #32
125: aload         4
127: invokestatic  #77
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #27
139: invokevirtual #24
142: iload         5
144: invokevirtual #40
147: ldc           #29
149: invokevirtual #24
152: iconst_0
153: invokevirtual #40
156: ldc           #27
158: invokevirtual #24
161: invokevirtual #26
164: iload         5
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: dconst_1
200: invokevirtual #28
203: ldc           #27
205: invokevirtual #24
208: invokevirtual #26
211: dload         6
213: dconst_1
214: dcmpl
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #32
226: new           #21
229: dup
230: invokespecial #22
233: ldc           #27
235: invokevirtual #24
238: dload         8
240: invokevirtual #28
243: ldc           #29
245: invokevirtual #24
248: dconst_0
249: invokevirtual #28
252: ldc           #27
254: invokevirtual #24
257: invokevirtual #26
260: dload         8
262: dconst_0
263: dcmpl
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #32
275: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test237
Start line: 4651
End line: 4655
Method source code: 
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(3.8243984514608465E-153d, 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #858
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #472
32: iconst_0
33: invokespecial #50
36: astore_1
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test238
Start line: 4658
End line: 4676
Method source code: 
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        double double15 = poissonDistributionImpl1.cumulativeProbability((-1), 1);
        double double17 = poissonDistributionImpl1.cumulativeProbability(86);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7357588823428858d + "'", double15 == 0.7357588823428858d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #859
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #100
72: invokevirtual #34
75: istore        10
77: aload_1
78: iconst_m1
79: iconst_1
80: invokevirtual #64
83: dstore        11
85: aload_1
86: bipush        86
88: invokevirtual #43
91: dstore        13
93: new           #21
96: dup
97: invokespecial #22
100: ldc           #27
102: invokevirtual #24
105: dload_2
106: invokevirtual #28
109: ldc           #29
111: invokevirtual #24
114: ldc2_w        #47
117: invokevirtual #28
120: ldc           #27
122: invokevirtual #24
125: invokevirtual #26
128: dload_2
129: ldc2_w        #47
132: dcmpl
133: ifne          140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #32
144: new           #21
147: dup
148: invokespecial #22
151: ldc           #27
153: invokevirtual #24
156: dload         4
158: invokevirtual #28
161: ldc           #29
163: invokevirtual #24
166: dconst_1
167: invokevirtual #28
170: ldc           #27
172: invokevirtual #24
175: invokevirtual #26
178: dload         4
180: dconst_1
181: dcmpl
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #32
193: new           #21
196: dup
197: invokespecial #22
200: ldc           #27
202: invokevirtual #24
205: dload         6
207: invokevirtual #28
210: ldc           #29
212: invokevirtual #24
215: ldc2_w        #69
218: invokevirtual #28
221: ldc           #27
223: invokevirtual #24
226: invokevirtual #26
229: dload         6
231: ldc2_w        #69
234: dcmpl
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #32
246: new           #21
249: dup
250: invokespecial #22
253: ldc           #27
255: invokevirtual #24
258: dload         8
260: invokevirtual #28
263: ldc           #29
265: invokevirtual #24
268: dconst_0
269: invokevirtual #28
272: ldc           #27
274: invokevirtual #24
277: invokevirtual #26
280: dload         8
282: dconst_0
283: dcmpl
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #32
295: new           #21
298: dup
299: invokespecial #22
302: ldc           #27
304: invokevirtual #24
307: iload         10
309: invokevirtual #40
312: ldc           #29
314: invokevirtual #24
317: ldc           #41
319: invokevirtual #40
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: iload         10
332: ldc           #41
334: if_icmpne     341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: new           #21
348: dup
349: invokespecial #22
352: ldc           #27
354: invokevirtual #24
357: dload         11
359: invokevirtual #28
362: ldc           #29
364: invokevirtual #24
367: ldc2_w        #187
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         11
383: ldc2_w        #187
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #32
398: new           #21
401: dup
402: invokespecial #22
405: ldc           #27
407: invokevirtual #24
410: dload         13
412: invokevirtual #28
415: ldc           #29
417: invokevirtual #24
420: dconst_1
421: invokevirtual #28
424: ldc           #27
426: invokevirtual #24
429: invokevirtual #26
432: dload         13
434: dconst_1
435: dcmpl
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #32
447: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test239
Start line: 4679
End line: 4691
Method source code: 
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double8 = poissonDistributionImpl1.probability(0.3899356327042469d);
        int int10 = poissonDistributionImpl1.getDomainLowerBound((-0.9815160292328889d));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #860
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #325
55: invokevirtual #44
58: dstore        6
60: aload_1
61: ldc2_w        #861
64: invokevirtual #139
67: istore        8
69: new           #21
72: dup
73: invokespecial #22
76: ldc           #27
78: invokevirtual #24
81: dload_2
82: invokevirtual #28
85: ldc           #29
87: invokevirtual #24
90: ldc2_w        #47
93: invokevirtual #28
96: ldc           #27
98: invokevirtual #24
101: invokevirtual #26
104: dload_2
105: ldc2_w        #47
108: dcmpl
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #32
120: new           #21
123: dup
124: invokespecial #22
127: ldc           #27
129: invokevirtual #24
132: dload         4
134: invokevirtual #28
137: ldc           #29
139: invokevirtual #24
142: dconst_1
143: invokevirtual #28
146: ldc           #27
148: invokevirtual #24
151: invokevirtual #26
154: dload         4
156: dconst_1
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #32
169: new           #21
172: dup
173: invokespecial #22
176: ldc           #27
178: invokevirtual #24
181: dload         6
183: invokevirtual #28
186: ldc           #29
188: invokevirtual #24
191: dconst_0
192: invokevirtual #28
195: ldc           #27
197: invokevirtual #24
200: invokevirtual #26
203: dload         6
205: dconst_0
206: dcmpl
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #32
218: new           #21
221: dup
222: invokespecial #22
225: ldc           #27
227: invokevirtual #24
230: iload         8
232: invokevirtual #40
235: ldc           #29
237: invokevirtual #24
240: iconst_0
241: invokevirtual #40
244: ldc           #27
246: invokevirtual #24
249: invokevirtual #26
252: iload         8
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #32
265: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test240
Start line: 4694
End line: 4698
Method source code: 
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(3.141592653589793d, 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #863
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #166
32: dconst_0
33: invokespecial #255
36: astore_1
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test241
Start line: 4701
End line: 4723
Method source code: 
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        double double15 = poissonDistributionImpl1.probability(0.0017385910778376639d);
        double double17 = poissonDistributionImpl1.normalApproximateProbability((int) (short) 10);
        int int19 = poissonDistributionImpl1.inverseCumulativeProbability(0.8354297910850215d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #864
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: ldc2_w        #865
85: invokevirtual #44
88: dstore        11
90: aload_1
91: bipush        10
93: invokevirtual #63
96: dstore        13
98: aload_1
99: ldc2_w        #781
102: invokevirtual #15
105: istore        15
107: new           #21
110: dup
111: invokespecial #22
114: ldc           #27
116: invokevirtual #24
119: dload_2
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: ldc2_w        #47
131: invokevirtual #28
134: ldc           #27
136: invokevirtual #24
139: invokevirtual #26
142: dload_2
143: ldc2_w        #47
146: dcmpl
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #32
158: new           #21
161: dup
162: invokespecial #22
165: ldc           #27
167: invokevirtual #24
170: dload         4
172: invokevirtual #28
175: ldc           #29
177: invokevirtual #24
180: dconst_1
181: invokevirtual #28
184: ldc           #27
186: invokevirtual #24
189: invokevirtual #26
192: dload         4
194: dconst_1
195: dcmpl
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #32
207: new           #21
210: dup
211: invokespecial #22
214: ldc           #27
216: invokevirtual #24
219: iload         6
221: invokevirtual #40
224: ldc           #29
226: invokevirtual #24
229: ldc           #41
231: invokevirtual #40
234: ldc           #27
236: invokevirtual #24
239: invokevirtual #26
242: iload         6
244: ldc           #41
246: if_icmpne     253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #32
257: new           #21
260: dup
261: invokespecial #22
264: ldc           #27
266: invokevirtual #24
269: iload         7
271: invokevirtual #40
274: ldc           #29
276: invokevirtual #24
279: iconst_0
280: invokevirtual #40
283: ldc           #27
285: invokevirtual #24
288: invokevirtual #26
291: iload         7
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #32
304: new           #21
307: dup
308: invokespecial #22
311: ldc           #27
313: invokevirtual #24
316: dload         9
318: invokevirtual #28
321: ldc           #29
323: invokevirtual #24
326: ldc2_w        #45
329: invokevirtual #28
332: ldc           #27
334: invokevirtual #24
337: invokevirtual #26
340: dload         9
342: ldc2_w        #45
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #32
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: dload         11
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: dconst_0
380: invokevirtual #28
383: ldc           #27
385: invokevirtual #24
388: invokevirtual #26
391: dload         11
393: dconst_0
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #32
406: new           #21
409: dup
410: invokespecial #22
413: ldc           #27
415: invokevirtual #24
418: dload         13
420: invokevirtual #28
423: ldc           #29
425: invokevirtual #24
428: dconst_1
429: invokevirtual #28
432: ldc           #27
434: invokevirtual #24
437: invokevirtual #26
440: dload         13
442: dconst_1
443: dcmpl
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #32
455: new           #21
458: dup
459: invokespecial #22
462: ldc           #27
464: invokevirtual #24
467: iload         15
469: invokevirtual #40
472: ldc           #29
474: invokevirtual #24
477: iconst_1
478: invokevirtual #40
481: ldc           #27
483: invokevirtual #24
486: invokevirtual #26
489: iload         15
491: iconst_1
492: if_icmpne     499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #32
503: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test242
Start line: 4726
End line: 4735
Method source code: 
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        int int4 = poissonDistributionImpl1.sample();
        poissonDistributionImpl1.reseedRandomGenerator(9223372036854775807L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #867
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: invokevirtual #61
45: istore        4
47: aload_1
48: ldc2_w        #868
51: invokevirtual #157
54: new           #21
57: dup
58: invokespecial #22
61: ldc           #27
63: invokevirtual #24
66: dload_2
67: invokevirtual #28
70: ldc           #29
72: invokevirtual #24
75: ldc2_w        #47
78: invokevirtual #28
81: ldc           #27
83: invokevirtual #24
86: invokevirtual #26
89: dload_2
90: ldc2_w        #47
93: dcmpl
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #32
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test243
Start line: 4738
End line: 4754
Method source code: 
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        long long13 = randomDataImpl7.nextLong((long) 4, 1564722L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.0878348688641313d + "'", double10 == 2.0878348688641313d);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1152492L + "'", long13 == 1152492L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #870
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: ldc2_w        #871
78: ldc2_w        #797
81: invokevirtual #123
84: lstore        9
86: new           #21
89: dup
90: invokespecial #22
93: ldc           #27
95: invokevirtual #24
98: dload_2
99: invokevirtual #28
102: ldc           #29
104: invokevirtual #24
107: ldc2_w        #47
110: invokevirtual #28
113: ldc           #27
115: invokevirtual #24
118: invokevirtual #26
121: dload_2
122: ldc2_w        #47
125: dcmpl
126: ifne          133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #32
137: aload         4
139: invokestatic  #77
142: new           #21
145: dup
146: invokespecial #22
149: ldc           #27
151: invokevirtual #24
154: iload         5
156: invokevirtual #40
159: ldc           #29
161: invokevirtual #24
164: iconst_m1
165: invokevirtual #40
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: iload         5
178: iconst_m1
179: if_icmpne     186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #32
190: aload         6
192: invokestatic  #77
195: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test244
Start line: 4757
End line: 4775
Method source code: 
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        double double12 = poissonDistributionImpl1.probability(100);
        int int14 = poissonDistributionImpl1.inverseCumulativeProbability(0.06680720126885803d);
        double double15 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #873
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: bipush        100
71: invokevirtual #54
74: dstore        10
76: aload_1
77: ldc2_w        #87
80: invokevirtual #15
83: istore        12
85: aload_1
86: invokevirtual #102
89: dstore        13
91: new           #21
94: dup
95: invokespecial #22
98: ldc           #27
100: invokevirtual #24
103: dload_2
104: invokevirtual #28
107: ldc           #29
109: invokevirtual #24
112: ldc2_w        #47
115: invokevirtual #28
118: ldc           #27
120: invokevirtual #24
123: invokevirtual #26
126: dload_2
127: ldc2_w        #47
130: dcmpl
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #32
142: new           #21
145: dup
146: invokespecial #22
149: ldc           #27
151: invokevirtual #24
154: dload         4
156: invokevirtual #28
159: ldc           #29
161: invokevirtual #24
164: dconst_1
165: invokevirtual #28
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: dload         4
178: dconst_1
179: dcmpl
180: ifne          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #32
191: new           #21
194: dup
195: invokespecial #22
198: ldc           #27
200: invokevirtual #24
203: dload         6
205: invokevirtual #28
208: ldc           #29
210: invokevirtual #24
213: ldc2_w        #69
216: invokevirtual #28
219: ldc           #27
221: invokevirtual #24
224: invokevirtual #26
227: dload         6
229: ldc2_w        #69
232: dcmpl
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #32
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: dload         8
258: invokevirtual #28
261: ldc           #29
263: invokevirtual #24
266: dconst_0
267: invokevirtual #28
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: dload         8
280: dconst_0
281: dcmpl
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #32
293: new           #21
296: dup
297: invokespecial #22
300: ldc           #27
302: invokevirtual #24
305: dload         10
307: invokevirtual #28
310: ldc           #29
312: invokevirtual #24
315: ldc2_w        #47
318: invokevirtual #28
321: ldc           #27
323: invokevirtual #24
326: invokevirtual #26
329: dload         10
331: ldc2_w        #47
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: new           #21
349: dup
350: invokespecial #22
353: ldc           #27
355: invokevirtual #24
358: iload         12
360: invokevirtual #40
363: ldc           #29
365: invokevirtual #24
368: iconst_m1
369: invokevirtual #40
372: ldc           #27
374: invokevirtual #24
377: invokevirtual #26
380: iload         12
382: iconst_m1
383: if_icmpne     390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #32
394: new           #21
397: dup
398: invokespecial #22
401: ldc           #27
403: invokevirtual #24
406: dload         13
408: invokevirtual #28
411: ldc           #29
413: invokevirtual #24
416: dconst_1
417: invokevirtual #28
420: ldc           #27
422: invokevirtual #24
425: invokevirtual #26
428: dload         13
430: dconst_1
431: dcmpl
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #32
443: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test245
Start line: 4778
End line: 4795
Method source code: 
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double3 = poissonDistributionImpl2.getMean();
        double double5 = poissonDistributionImpl2.probability(1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl6 = poissonDistributionImpl2.randomData;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray9 = randomDataImpl6.nextPermutation(31, 56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: 56 is larger than the maximum (31): permutation size (56) exceeds permuation domain (31)");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.720075976020796E-42d + "'", double5 == 3.720075976020796E-42d);
        org.junit.Assert.assertNotNull(randomDataImpl6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #874
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: aload_1
43: iconst_1
44: invokevirtual #54
47: dstore        4
49: aload_1
50: getfield      #72
53: astore        6
55: aload         6
57: bipush        31
59: bipush        56
61: invokevirtual #205
64: astore        7
66: ldc_w         #875
69: invokestatic  #17
72: goto          77
75: astore        7
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_2
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: ldc2_w        #10
101: invokevirtual #28
104: ldc           #27
106: invokevirtual #24
109: invokevirtual #26
112: dload_2
113: ldc2_w        #10
116: dcmpl
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #32
128: new           #21
131: dup
132: invokespecial #22
135: ldc           #27
137: invokevirtual #24
140: dload         4
142: invokevirtual #28
145: ldc           #29
147: invokevirtual #24
150: ldc2_w        #220
153: invokevirtual #28
156: ldc           #27
158: invokevirtual #24
161: invokevirtual #26
164: dload         4
166: ldc2_w        #220
169: dcmpl
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: aload         6
183: invokestatic  #77
186: return
Exception table:
from    to  target type
55    72    75   Class org/apache/commons/math/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test246
Start line: 4798
End line: 4812
Method source code: 
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(31.836346239513436d);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl1.cumulativeProbability(10000000, 100);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #876
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #877
32: invokespecial #9
35: astore_1
36: aload_1
37: ldc           #225
39: bipush        100
41: invokevirtual #64
44: dstore_2
45: ldc           #16
47: invokestatic  #17
50: goto          92
53: astore_2
54: aload_2
55: invokevirtual #19
58: invokevirtual #20
61: ifne          92
64: new           #21
67: dup
68: invokespecial #22
71: ldc           #23
73: invokevirtual #24
76: aload_2
77: invokevirtual #19
80: invokevirtual #25
83: invokevirtual #24
86: invokevirtual #26
89: invokestatic  #17
92: return
Exception table:
from    to  target type
36    50    53   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test247
Start line: 4815
End line: 4821
Method source code: 
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.normalApproximateProbability(81);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #879
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        81
37: invokevirtual #63
40: dstore_2
41: new           #21
44: dup
45: invokespecial #22
48: ldc           #27
50: invokevirtual #24
53: dload_2
54: invokevirtual #28
57: ldc           #29
59: invokevirtual #24
62: dconst_1
63: invokevirtual #28
66: ldc           #27
68: invokevirtual #24
71: invokevirtual #26
74: dload_2
75: dconst_1
76: dcmpl
77: ifne          84
80: iconst_1
81: goto          85
84: iconst_0
85: invokestatic  #32
88: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test248
Start line: 4824
End line: 4840
Method source code: 
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        int int12 = poissonDistributionImpl1.getDomainUpperBound((double) (-1.0f));
        int int13 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.06680720126885803d + "'", double10 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #880
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: iconst_m1
61: invokevirtual #63
64: dstore        8
66: aload_1
67: ldc2_w        #142
70: invokevirtual #34
73: istore        10
75: aload_1
76: invokevirtual #61
79: istore        11
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #27
90: invokevirtual #24
93: dload_2
94: invokevirtual #28
97: ldc           #29
99: invokevirtual #24
102: ldc2_w        #47
105: invokevirtual #28
108: ldc           #27
110: invokevirtual #24
113: invokevirtual #26
116: dload_2
117: ldc2_w        #47
120: dcmpl
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #32
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: dload         4
146: invokevirtual #28
149: ldc           #29
151: invokevirtual #24
154: dconst_1
155: invokevirtual #28
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: dload         4
168: dconst_1
169: dcmpl
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: new           #21
184: dup
185: invokespecial #22
188: ldc           #27
190: invokevirtual #24
193: dload         6
195: invokevirtual #28
198: ldc           #29
200: invokevirtual #24
203: ldc2_w        #69
206: invokevirtual #28
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: dload         6
219: ldc2_w        #69
222: dcmpl
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #32
234: new           #21
237: dup
238: invokespecial #22
241: ldc           #27
243: invokevirtual #24
246: dload         8
248: invokevirtual #28
251: ldc           #29
253: invokevirtual #24
256: ldc2_w        #87
259: invokevirtual #28
262: ldc           #27
264: invokevirtual #24
267: invokevirtual #26
270: dload         8
272: ldc2_w        #87
275: dcmpl
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #32
287: new           #21
290: dup
291: invokespecial #22
294: ldc           #27
296: invokevirtual #24
299: iload         10
301: invokevirtual #40
304: ldc           #29
306: invokevirtual #24
309: ldc           #41
311: invokevirtual #40
314: ldc           #27
316: invokevirtual #24
319: invokevirtual #26
322: iload         10
324: ldc           #41
326: if_icmpne     333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #32
337: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test249
Start line: 4843
End line: 4892
Method source code: 
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        randomDataImpl5.reSeedSecure((long) (byte) 1);
        int int15 = randomDataImpl5.nextZipf(3, 0.4849214332324801d);
        long long18 = randomDataImpl5.nextSecureLong((long) (short) 0, (long) 1);
        randomDataImpl5.reSeed();
        long long22 = randomDataImpl5.nextLong((long) (-1), 2L);
        int int25 = randomDataImpl5.nextPascal((int) (short) 10, 0.08904502638040439d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl27 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double29 = poissonDistributionImpl27.probability(100);
        double double31 = poissonDistributionImpl27.normalApproximateProbability(2147483647);
        int int33 = poissonDistributionImpl27.getDomainUpperBound((double) 10L);
        int int35 = poissonDistributionImpl27.getDomainLowerBound(3.141592653589793d);
        int int36 = poissonDistributionImpl27.sample();
        int int37 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl27);
        randomDataImpl5.reSeedSecure((long) 108);
        org.apache.commons.math.distribution.ContinuousDistribution continuousDistribution40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = randomDataImpl5.nextInversionDeviate(continuousDistribution40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.20320943170865266d + "'", double10 == 0.20320943170865266d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 116 + "'", int25 == 116);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 3.941866060050443E-159d + "'", double29 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #881
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: invokevirtual #394
101: aload         6
103: iconst_3
104: ldc2_w        #395
107: invokevirtual #397
110: istore        14
112: aload         6
114: lconst_0
115: lconst_1
116: invokevirtual #84
119: lstore        15
121: aload         6
123: invokevirtual #398
126: aload         6
128: ldc2_w        #121
131: ldc2_w        #399
134: invokevirtual #123
137: lstore        17
139: aload         6
141: bipush        10
143: ldc2_w        #696
146: invokevirtual #698
149: istore        19
151: new           #8
154: dup
155: dconst_1
156: invokespecial #9
159: astore        20
161: aload         20
163: bipush        100
165: invokevirtual #54
168: dstore        21
170: aload         20
172: ldc           #41
174: invokevirtual #63
177: dstore        23
179: aload         20
181: ldc2_w        #13
184: invokevirtual #34
187: istore        25
189: aload         20
191: ldc2_w        #166
194: invokevirtual #139
197: istore        26
199: aload         20
201: invokevirtual #61
204: istore        27
206: aload         6
208: aload         20
210: invokevirtual #116
213: istore        28
215: aload         6
217: ldc2_w        #234
220: invokevirtual #394
223: aconst_null
224: astore        29
226: aload         6
228: aload         29
230: invokevirtual #393
233: dstore        30
235: ldc_w         #882
238: invokestatic  #17
241: goto          246
244: astore        30
246: new           #21
249: dup
250: invokespecial #22
253: ldc           #27
255: invokevirtual #24
258: dload_2
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: dconst_0
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload_2
280: dconst_0
281: dcmpl
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #32
293: new           #21
296: dup
297: invokespecial #22
300: ldc           #27
302: invokevirtual #24
305: dload         4
307: invokevirtual #28
310: ldc           #29
312: invokevirtual #24
315: ldc2_w        #118
318: invokevirtual #28
321: ldc           #27
323: invokevirtual #24
326: invokevirtual #26
329: dload         4
331: ldc2_w        #118
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: aload         6
348: invokestatic  #77
351: new           #21
354: dup
355: invokespecial #22
358: ldc           #27
360: invokevirtual #24
363: dload         8
365: invokevirtual #28
368: ldc           #29
370: invokevirtual #24
373: dconst_0
374: invokevirtual #28
377: ldc           #27
379: invokevirtual #24
382: invokevirtual #26
385: dload         8
387: dconst_0
388: dcmpl
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #32
400: new           #21
403: dup
404: invokespecial #22
407: ldc           #27
409: invokevirtual #24
412: dload         10
414: invokevirtual #28
417: ldc           #29
419: invokevirtual #24
422: dconst_0
423: invokevirtual #28
426: ldc           #27
428: invokevirtual #24
431: invokevirtual #26
434: dload         10
436: dconst_0
437: dcmpl
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #32
449: new           #21
452: dup
453: invokespecial #22
456: ldc           #27
458: invokevirtual #24
461: dload         21
463: invokevirtual #28
466: ldc           #29
468: invokevirtual #24
471: ldc2_w        #47
474: invokevirtual #28
477: ldc           #27
479: invokevirtual #24
482: invokevirtual #26
485: dload         21
487: ldc2_w        #47
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #32
502: new           #21
505: dup
506: invokespecial #22
509: ldc           #27
511: invokevirtual #24
514: dload         23
516: invokevirtual #28
519: ldc           #29
521: invokevirtual #24
524: dconst_1
525: invokevirtual #28
528: ldc           #27
530: invokevirtual #24
533: invokevirtual #26
536: dload         23
538: dconst_1
539: dcmpl
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #32
551: new           #21
554: dup
555: invokespecial #22
558: ldc           #27
560: invokevirtual #24
563: iload         25
565: invokevirtual #40
568: ldc           #29
570: invokevirtual #24
573: ldc           #41
575: invokevirtual #40
578: ldc           #27
580: invokevirtual #24
583: invokevirtual #26
586: iload         25
588: ldc           #41
590: if_icmpne     597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #32
601: new           #21
604: dup
605: invokespecial #22
608: ldc           #27
610: invokevirtual #24
613: iload         26
615: invokevirtual #40
618: ldc           #29
620: invokevirtual #24
623: iconst_0
624: invokevirtual #40
627: ldc           #27
629: invokevirtual #24
632: invokevirtual #26
635: iload         26
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #32
648: return
Exception table:
from    to  target type
226   241   244   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test250
Start line: 4895
End line: 4917
Method source code: 
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        double double16 = poissonDistributionImpl1.cumulativeProbability(0);
        int[] intArray18 = poissonDistributionImpl1.sample(0);
        double double20 = poissonDistributionImpl1.probability(0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.36787944117144233d + "'", double20 == 0.36787944117144233d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #884
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: iconst_0
82: invokevirtual #43
85: dstore        11
87: aload_1
88: iconst_0
89: invokevirtual #184
92: astore        13
94: aload_1
95: iconst_0
96: invokevirtual #54
99: dstore        14
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_2
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: ldc2_w        #30
125: invokevirtual #28
128: ldc           #27
130: invokevirtual #24
133: invokevirtual #26
136: dload_2
137: ldc2_w        #30
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: new           #21
155: dup
156: invokespecial #22
159: ldc           #27
161: invokevirtual #24
164: dload         4
166: invokevirtual #28
169: ldc           #29
171: invokevirtual #24
174: ldc2_w        #45
177: invokevirtual #28
180: ldc           #27
182: invokevirtual #24
185: invokevirtual #26
188: dload         4
190: ldc2_w        #45
193: dcmpl
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #32
205: new           #21
208: dup
209: invokespecial #22
212: ldc           #27
214: invokevirtual #24
217: dload         6
219: invokevirtual #28
222: ldc           #29
224: invokevirtual #24
227: ldc2_w        #87
230: invokevirtual #28
233: ldc           #27
235: invokevirtual #24
238: invokevirtual #26
241: dload         6
243: ldc2_w        #87
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: dload         8
272: invokevirtual #28
275: ldc           #29
277: invokevirtual #24
280: ldc2_w        #45
283: invokevirtual #28
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: dload         8
296: ldc2_w        #45
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: iload         10
325: invokevirtual #40
328: ldc           #29
330: invokevirtual #24
333: iconst_0
334: invokevirtual #40
337: ldc           #27
339: invokevirtual #24
342: invokevirtual #26
345: iload         10
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: dload         11
372: invokevirtual #28
375: ldc           #29
377: invokevirtual #24
380: ldc2_w        #45
383: invokevirtual #28
386: ldc           #27
388: invokevirtual #24
391: invokevirtual #26
394: dload         11
396: ldc2_w        #45
399: dcmpl
400: ifne          407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #32
411: aload         13
413: invokestatic  #77
416: aload         13
418: invokestatic  #362
421: ldc_w         #363
424: invokestatic  #364
427: new           #21
430: dup
431: invokespecial #22
434: ldc           #27
436: invokevirtual #24
439: dload         14
441: invokevirtual #28
444: ldc           #29
446: invokevirtual #24
449: ldc2_w        #168
452: invokevirtual #28
455: ldc           #27
457: invokevirtual #24
460: invokevirtual #26
463: dload         14
465: ldc2_w        #168
468: dcmpl
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #32
480: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test251
Start line: 4920
End line: 4949
Method source code: 
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double19 = poissonDistributionImpl9.normalApproximateProbability((-1));
        int int21 = poissonDistributionImpl9.getDomainUpperBound(0.0d);
        double double23 = poissonDistributionImpl9.probability(0.47712125471966244d);
        int int25 = poissonDistributionImpl9.getDomainLowerBound(0.9213503964748575d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 573.4071804825626d + "'", double7 == 573.4071804825626d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.06680720126885803d + "'", double19 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #885
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: iconst_m1
118: invokevirtual #63
121: dstore        17
123: aload         9
125: dconst_0
126: invokevirtual #34
129: istore        19
131: aload         9
133: ldc2_w        #241
136: invokevirtual #44
139: dstore        20
141: aload         9
143: ldc2_w        #273
146: invokevirtual #139
149: istore        22
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload_2
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: dconst_0
173: invokevirtual #28
176: ldc           #27
178: invokevirtual #24
181: invokevirtual #26
184: dload_2
185: dconst_0
186: dcmpl
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #32
198: new           #21
201: dup
202: invokespecial #22
205: ldc           #27
207: invokevirtual #24
210: dload         4
212: invokevirtual #28
215: ldc           #29
217: invokevirtual #24
220: ldc2_w        #118
223: invokevirtual #28
226: ldc           #27
228: invokevirtual #24
231: invokevirtual #26
234: dload         4
236: ldc2_w        #118
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #32
251: aload         6
253: invokestatic  #77
256: new           #21
259: dup
260: invokespecial #22
263: ldc           #27
265: invokevirtual #24
268: dload         10
270: invokevirtual #28
273: ldc           #29
275: invokevirtual #24
278: ldc2_w        #47
281: invokevirtual #28
284: ldc           #27
286: invokevirtual #24
289: invokevirtual #26
292: dload         10
294: ldc2_w        #47
297: dcmpl
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #32
309: new           #21
312: dup
313: invokespecial #22
316: ldc           #27
318: invokevirtual #24
321: dload         12
323: invokevirtual #28
326: ldc           #29
328: invokevirtual #24
331: dconst_1
332: invokevirtual #28
335: ldc           #27
337: invokevirtual #24
340: invokevirtual #26
343: dload         12
345: dconst_1
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: dload         15
372: invokevirtual #28
375: ldc           #29
377: invokevirtual #24
380: dconst_1
381: invokevirtual #28
384: ldc           #27
386: invokevirtual #24
389: invokevirtual #26
392: dload         15
394: dconst_1
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #32
407: new           #21
410: dup
411: invokespecial #22
414: ldc           #27
416: invokevirtual #24
419: dload         17
421: invokevirtual #28
424: ldc           #29
426: invokevirtual #24
429: ldc2_w        #87
432: invokevirtual #28
435: ldc           #27
437: invokevirtual #24
440: invokevirtual #26
443: dload         17
445: ldc2_w        #87
448: dcmpl
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #32
460: new           #21
463: dup
464: invokespecial #22
467: ldc           #27
469: invokevirtual #24
472: iload         19
474: invokevirtual #40
477: ldc           #29
479: invokevirtual #24
482: ldc           #41
484: invokevirtual #40
487: ldc           #27
489: invokevirtual #24
492: invokevirtual #26
495: iload         19
497: ldc           #41
499: if_icmpne     506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #32
510: new           #21
513: dup
514: invokespecial #22
517: ldc           #27
519: invokevirtual #24
522: dload         20
524: invokevirtual #28
527: ldc           #29
529: invokevirtual #24
532: dconst_0
533: invokevirtual #28
536: ldc           #27
538: invokevirtual #24
541: invokevirtual #26
544: dload         20
546: dconst_0
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #32
559: new           #21
562: dup
563: invokespecial #22
566: ldc           #27
568: invokevirtual #24
571: iload         22
573: invokevirtual #40
576: ldc           #29
578: invokevirtual #24
581: iconst_0
582: invokevirtual #40
585: ldc           #27
587: invokevirtual #24
590: invokevirtual #26
593: iload         22
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #32
606: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test252
Start line: 4952
End line: 4973
Method source code: 
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        double double13 = poissonDistributionImpl1.probability(36.941458435411754d);
        int int15 = poissonDistributionImpl1.getDomainUpperBound(99.13154645400108d);
        int int17 = poissonDistributionImpl1.inverseCumulativeProbability(0.2609616519766456d);
        int int19 = poissonDistributionImpl1.inverseCumulativeProbability(0.03192048122541507d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #886
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: ldc2_w        #792
76: invokevirtual #44
79: dstore        8
81: aload_1
82: ldc2_w        #543
85: invokevirtual #34
88: istore        10
90: aload_1
91: ldc2_w        #887
94: invokevirtual #15
97: istore        11
99: aload_1
100: ldc2_w        #889
103: invokevirtual #15
106: istore        12
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload_2
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #30
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload_2
144: ldc2_w        #30
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload         4
173: invokevirtual #28
176: ldc           #29
178: invokevirtual #24
181: ldc2_w        #45
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         4
197: ldc2_w        #45
200: dcmpl
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #32
212: new           #21
215: dup
216: invokespecial #22
219: ldc           #27
221: invokevirtual #24
224: iload         7
226: invokevirtual #40
229: ldc           #29
231: invokevirtual #24
234: ldc           #41
236: invokevirtual #40
239: ldc           #27
241: invokevirtual #24
244: invokevirtual #26
247: iload         7
249: ldc           #41
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #32
262: new           #21
265: dup
266: invokespecial #22
269: ldc           #27
271: invokevirtual #24
274: dload         8
276: invokevirtual #28
279: ldc           #29
281: invokevirtual #24
284: dconst_0
285: invokevirtual #28
288: ldc           #27
290: invokevirtual #24
293: invokevirtual #26
296: dload         8
298: dconst_0
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: iload         10
325: invokevirtual #40
328: ldc           #29
330: invokevirtual #24
333: ldc           #41
335: invokevirtual #40
338: ldc           #27
340: invokevirtual #24
343: invokevirtual #26
346: iload         10
348: ldc           #41
350: if_icmpne     357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: new           #21
364: dup
365: invokespecial #22
368: ldc           #27
370: invokevirtual #24
373: iload         11
375: invokevirtual #40
378: ldc           #29
380: invokevirtual #24
383: iconst_m1
384: invokevirtual #40
387: ldc           #27
389: invokevirtual #24
392: invokevirtual #26
395: iload         11
397: iconst_m1
398: if_icmpne     405
401: iconst_1
402: goto          406
405: iconst_0
406: invokestatic  #32
409: new           #21
412: dup
413: invokespecial #22
416: ldc           #27
418: invokevirtual #24
421: iload         12
423: invokevirtual #40
426: ldc           #29
428: invokevirtual #24
431: iconst_m1
432: invokevirtual #40
435: ldc           #27
437: invokevirtual #24
440: invokevirtual #26
443: iload         12
445: iconst_m1
446: if_icmpne     453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #32
457: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test253
Start line: 4976
End line: 4986
Method source code: 
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(0);
        double double6 = poissonDistributionImpl2.cumulativeProbability((-1.5883572333189264d));
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl2.randomData;
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(randomDataImpl7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #891
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #63
42: dstore_2
43: aload_1
44: ldc2_w        #892
47: invokevirtual #141
50: dstore        4
52: aload_1
53: getfield      #72
56: astore        6
58: new           #21
61: dup
62: invokespecial #22
65: ldc           #27
67: invokevirtual #24
70: dload_2
71: invokevirtual #28
74: ldc           #29
76: invokevirtual #24
79: dconst_0
80: invokevirtual #28
83: ldc           #27
85: invokevirtual #24
88: invokevirtual #26
91: dload_2
92: dconst_0
93: dcmpl
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #32
105: new           #21
108: dup
109: invokespecial #22
112: ldc           #27
114: invokevirtual #24
117: dload         4
119: invokevirtual #28
122: ldc           #29
124: invokevirtual #24
127: dconst_0
128: invokevirtual #28
131: ldc           #27
133: invokevirtual #24
136: invokevirtual #26
139: dload         4
141: dconst_0
142: dcmpl
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #32
154: aload         6
156: invokestatic  #77
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test254
Start line: 4989
End line: 4999
Method source code: 
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(0.0d);
        double double5 = poissonDistributionImpl1.cumulativeProbability(6862160);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((-1.4422552891800533d));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.36787944117144233d + "'", double3 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #894
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #44
39: dstore_2
40: aload_1
41: ldc_w         #464
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #895
53: invokevirtual #34
56: istore        6
58: new           #21
61: dup
62: invokespecial #22
65: ldc           #27
67: invokevirtual #24
70: dload_2
71: invokevirtual #28
74: ldc           #29
76: invokevirtual #24
79: ldc2_w        #168
82: invokevirtual #28
85: ldc           #27
87: invokevirtual #24
90: invokevirtual #26
93: dload_2
94: ldc2_w        #168
97: dcmpl
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #32
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload         4
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: dconst_1
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload         4
145: dconst_1
146: dcmpl
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #32
158: new           #21
161: dup
162: invokespecial #22
165: ldc           #27
167: invokevirtual #24
170: iload         6
172: invokevirtual #40
175: ldc           #29
177: invokevirtual #24
180: ldc           #41
182: invokevirtual #40
185: ldc           #27
187: invokevirtual #24
190: invokevirtual #26
193: iload         6
195: ldc           #41
197: if_icmpne     204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #32
208: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test255
Start line: 5002
End line: 5018
Method source code: 
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double8 = poissonDistributionImpl1.cumulativeProbability((-1.0870302912451684d), 0.47712125471966244d);
        double double9 = poissonDistributionImpl1.getMean();
        int int11 = poissonDistributionImpl1.getDomainUpperBound((-1.7942705279814837d));
        int int13 = poissonDistributionImpl1.getDomainUpperBound(7.579902847457086d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.36787944117146065d + "'", double8 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #897
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: ldc2_w        #339
53: ldc2_w        #241
56: invokevirtual #12
59: dstore        6
61: aload_1
62: invokevirtual #102
65: dstore        8
67: aload_1
68: ldc2_w        #613
71: invokevirtual #34
74: istore        10
76: aload_1
77: ldc2_w        #898
80: invokevirtual #34
83: istore        11
85: new           #21
88: dup
89: invokespecial #22
92: ldc           #27
94: invokevirtual #24
97: dload_2
98: invokevirtual #28
101: ldc           #29
103: invokevirtual #24
106: ldc2_w        #47
109: invokevirtual #28
112: ldc           #27
114: invokevirtual #24
117: invokevirtual #26
120: dload_2
121: ldc2_w        #47
124: dcmpl
125: ifne          132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #32
136: new           #21
139: dup
140: invokespecial #22
143: ldc           #27
145: invokevirtual #24
148: dload         4
150: invokevirtual #28
153: ldc           #29
155: invokevirtual #24
158: ldc2_w        #178
161: invokevirtual #28
164: ldc           #27
166: invokevirtual #24
169: invokevirtual #26
172: dload         4
174: ldc2_w        #178
177: dcmpl
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #32
189: new           #21
192: dup
193: invokespecial #22
196: ldc           #27
198: invokevirtual #24
201: dload         6
203: invokevirtual #28
206: ldc           #29
208: invokevirtual #24
211: ldc2_w        #45
214: invokevirtual #28
217: ldc           #27
219: invokevirtual #24
222: invokevirtual #26
225: dload         6
227: ldc2_w        #45
230: dcmpl
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #32
242: new           #21
245: dup
246: invokespecial #22
249: ldc           #27
251: invokevirtual #24
254: dload         8
256: invokevirtual #28
259: ldc           #29
261: invokevirtual #24
264: dconst_1
265: invokevirtual #28
268: ldc           #27
270: invokevirtual #24
273: invokevirtual #26
276: dload         8
278: dconst_1
279: dcmpl
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #32
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: iload         10
305: invokevirtual #40
308: ldc           #29
310: invokevirtual #24
313: ldc           #41
315: invokevirtual #40
318: ldc           #27
320: invokevirtual #24
323: invokevirtual #26
326: iload         10
328: ldc           #41
330: if_icmpne     337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #32
341: new           #21
344: dup
345: invokespecial #22
348: ldc           #27
350: invokevirtual #24
353: iload         11
355: invokevirtual #40
358: ldc           #29
360: invokevirtual #24
363: ldc           #41
365: invokevirtual #40
368: ldc           #27
370: invokevirtual #24
373: invokevirtual #26
376: iload         11
378: ldc           #41
380: if_icmpne     387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #32
391: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test256
Start line: 5021
End line: 5039
Method source code: 
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = poissonDistributionImpl1.cumulativeProbability(0.85822264930882d, 0.0d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #900
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: ldc2_w        #237
54: dconst_0
55: invokevirtual #12
58: dstore        6
60: ldc           #16
62: invokestatic  #17
65: goto          110
68: astore        6
70: aload         6
72: invokevirtual #19
75: invokevirtual #20
78: ifne          110
81: new           #21
84: dup
85: invokespecial #22
88: ldc           #23
90: invokevirtual #24
93: aload         6
95: invokevirtual #19
98: invokevirtual #25
101: invokevirtual #24
104: invokevirtual #26
107: invokestatic  #17
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #27
119: invokevirtual #24
122: dload_2
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #30
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload_2
146: ldc2_w        #30
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: new           #21
164: dup
165: invokespecial #22
168: ldc           #27
170: invokevirtual #24
173: dload         4
175: invokevirtual #28
178: ldc           #29
180: invokevirtual #24
183: ldc2_w        #45
186: invokevirtual #28
189: ldc           #27
191: invokevirtual #24
194: invokevirtual #26
197: dload         4
199: ldc2_w        #45
202: dcmpl
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #32
214: return
Exception table:
from    to  target type
50    65    68   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test257
Start line: 5042
End line: 5062
Method source code: 
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int12 = poissonDistributionImpl1.getDomainUpperBound((-0.5063656411097588d));
        double double15 = poissonDistributionImpl1.cumulativeProbability((-1), 1);
        double double17 = poissonDistributionImpl1.probability(3.994326923844116d);
        double double19 = poissonDistributionImpl1.normalApproximateProbability((-1));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7357588823428858d + "'", double15 == 0.7357588823428858d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.06680720126885803d + "'", double19 == 0.06680720126885803d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #901
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #100
72: invokevirtual #34
75: istore        10
77: aload_1
78: iconst_m1
79: iconst_1
80: invokevirtual #64
83: dstore        11
85: aload_1
86: ldc2_w        #902
89: invokevirtual #44
92: dstore        13
94: aload_1
95: iconst_m1
96: invokevirtual #63
99: dstore        15
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_2
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: ldc2_w        #47
125: invokevirtual #28
128: ldc           #27
130: invokevirtual #24
133: invokevirtual #26
136: dload_2
137: ldc2_w        #47
140: dcmpl
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #32
152: new           #21
155: dup
156: invokespecial #22
159: ldc           #27
161: invokevirtual #24
164: dload         4
166: invokevirtual #28
169: ldc           #29
171: invokevirtual #24
174: dconst_1
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload         4
188: dconst_1
189: dcmpl
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #32
201: new           #21
204: dup
205: invokespecial #22
208: ldc           #27
210: invokevirtual #24
213: dload         6
215: invokevirtual #28
218: ldc           #29
220: invokevirtual #24
223: ldc2_w        #69
226: invokevirtual #28
229: ldc           #27
231: invokevirtual #24
234: invokevirtual #26
237: dload         6
239: ldc2_w        #69
242: dcmpl
243: ifne          250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #32
254: new           #21
257: dup
258: invokespecial #22
261: ldc           #27
263: invokevirtual #24
266: dload         8
268: invokevirtual #28
271: ldc           #29
273: invokevirtual #24
276: dconst_0
277: invokevirtual #28
280: ldc           #27
282: invokevirtual #24
285: invokevirtual #26
288: dload         8
290: dconst_0
291: dcmpl
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #32
303: new           #21
306: dup
307: invokespecial #22
310: ldc           #27
312: invokevirtual #24
315: iload         10
317: invokevirtual #40
320: ldc           #29
322: invokevirtual #24
325: ldc           #41
327: invokevirtual #40
330: ldc           #27
332: invokevirtual #24
335: invokevirtual #26
338: iload         10
340: ldc           #41
342: if_icmpne     349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #32
353: new           #21
356: dup
357: invokespecial #22
360: ldc           #27
362: invokevirtual #24
365: dload         11
367: invokevirtual #28
370: ldc           #29
372: invokevirtual #24
375: ldc2_w        #187
378: invokevirtual #28
381: ldc           #27
383: invokevirtual #24
386: invokevirtual #26
389: dload         11
391: ldc2_w        #187
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #32
406: new           #21
409: dup
410: invokespecial #22
413: ldc           #27
415: invokevirtual #24
418: dload         13
420: invokevirtual #28
423: ldc           #29
425: invokevirtual #24
428: dconst_0
429: invokevirtual #28
432: ldc           #27
434: invokevirtual #24
437: invokevirtual #26
440: dload         13
442: dconst_0
443: dcmpl
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #32
455: new           #21
458: dup
459: invokespecial #22
462: ldc           #27
464: invokevirtual #24
467: dload         15
469: invokevirtual #28
472: ldc           #29
474: invokevirtual #24
477: ldc2_w        #87
480: invokevirtual #28
483: ldc           #27
485: invokevirtual #24
488: invokevirtual #26
491: dload         15
493: ldc2_w        #87
496: dcmpl
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #32
508: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test258
Start line: 5065
End line: 5093
Method source code: 
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        int int16 = randomDataImpl13.nextSecureInt(19, 108);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = randomDataImpl13.nextT((-0.23805215957741346d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 42 + "'", int16 == 42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #904
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload         12
82: bipush        19
84: bipush        108
86: invokevirtual #653
89: istore        13
91: aload         12
93: ldc2_w        #905
96: invokevirtual #75
99: dstore        14
101: ldc           #16
103: invokestatic  #17
106: goto          151
109: astore        14
111: aload         14
113: invokevirtual #19
116: invokevirtual #20
119: ifne          151
122: new           #21
125: dup
126: invokespecial #22
129: ldc           #23
131: invokevirtual #24
134: aload         14
136: invokevirtual #19
139: invokevirtual #25
142: invokevirtual #24
145: invokevirtual #26
148: invokestatic  #17
151: new           #21
154: dup
155: invokespecial #22
158: ldc           #27
160: invokevirtual #24
163: dload_2
164: invokevirtual #28
167: ldc           #29
169: invokevirtual #24
172: ldc2_w        #30
175: invokevirtual #28
178: ldc           #27
180: invokevirtual #24
183: invokevirtual #26
186: dload_2
187: ldc2_w        #30
190: dcmpl
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #32
202: new           #21
205: dup
206: invokespecial #22
209: ldc           #27
211: invokevirtual #24
214: dload         4
216: invokevirtual #28
219: ldc           #29
221: invokevirtual #24
224: ldc2_w        #45
227: invokevirtual #28
230: ldc           #27
232: invokevirtual #24
235: invokevirtual #26
238: dload         4
240: ldc2_w        #45
243: dcmpl
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #32
255: new           #21
258: dup
259: invokespecial #22
262: ldc           #27
264: invokevirtual #24
267: dload         6
269: invokevirtual #28
272: ldc           #29
274: invokevirtual #24
277: ldc2_w        #87
280: invokevirtual #28
283: ldc           #27
285: invokevirtual #24
288: invokevirtual #26
291: dload         6
293: ldc2_w        #87
296: dcmpl
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #32
308: new           #21
311: dup
312: invokespecial #22
315: ldc           #27
317: invokevirtual #24
320: dload         8
322: invokevirtual #28
325: ldc           #29
327: invokevirtual #24
330: dconst_1
331: invokevirtual #28
334: ldc           #27
336: invokevirtual #24
339: invokevirtual #26
342: dload         8
344: dconst_1
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #32
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: dload         10
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: ldc2_w        #47
382: invokevirtual #28
385: ldc           #27
387: invokevirtual #24
390: invokevirtual #26
393: dload         10
395: ldc2_w        #47
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #32
410: aload         12
412: invokestatic  #77
415: return
Exception table:
from    to  target type
91   106   109   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test259
Start line: 5096
End line: 5110
Method source code: 
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double8 = poissonDistributionImpl1.probability(0.3899356327042469d);
        int int10 = poissonDistributionImpl1.getDomainUpperBound((-0.7880014968389955d));
        double double12 = poissonDistributionImpl1.cumulativeProbability(108);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #907
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #325
55: invokevirtual #44
58: dstore        6
60: aload_1
61: ldc2_w        #286
64: invokevirtual #34
67: istore        8
69: aload_1
70: bipush        108
72: invokevirtual #43
75: dstore        9
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_2
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: ldc2_w        #47
101: invokevirtual #28
104: ldc           #27
106: invokevirtual #24
109: invokevirtual #26
112: dload_2
113: ldc2_w        #47
116: dcmpl
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #32
128: new           #21
131: dup
132: invokespecial #22
135: ldc           #27
137: invokevirtual #24
140: dload         4
142: invokevirtual #28
145: ldc           #29
147: invokevirtual #24
150: dconst_1
151: invokevirtual #28
154: ldc           #27
156: invokevirtual #24
159: invokevirtual #26
162: dload         4
164: dconst_1
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: dconst_0
200: invokevirtual #28
203: ldc           #27
205: invokevirtual #24
208: invokevirtual #26
211: dload         6
213: dconst_0
214: dcmpl
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #32
226: new           #21
229: dup
230: invokespecial #22
233: ldc           #27
235: invokevirtual #24
238: iload         8
240: invokevirtual #40
243: ldc           #29
245: invokevirtual #24
248: ldc           #41
250: invokevirtual #40
253: ldc           #27
255: invokevirtual #24
258: invokevirtual #26
261: iload         8
263: ldc           #41
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #32
276: new           #21
279: dup
280: invokespecial #22
283: ldc           #27
285: invokevirtual #24
288: dload         9
290: invokevirtual #28
293: ldc           #29
295: invokevirtual #24
298: dconst_1
299: invokevirtual #28
302: ldc           #27
304: invokevirtual #24
307: invokevirtual #26
310: dload         9
312: dconst_1
313: dcmpl
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #32
325: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test260
Start line: 5113
End line: 5155
Method source code: 
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl6 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double8 = normalDistributionImpl6.density((java.lang.Double) 100.0d);
        double double9 = normalDistributionImpl6.getMean();
        double double10 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl6);
        randomDataImpl5.reSeedSecure((long) (byte) 1);
        int int15 = randomDataImpl5.nextZipf(3, 0.4849214332324801d);
        long long18 = randomDataImpl5.nextSecureLong((long) (short) 0, (long) 1);
        randomDataImpl5.reSeed();
        long long22 = randomDataImpl5.nextLong((long) (-1), 2L);
        int int25 = randomDataImpl5.nextPascal((int) (short) 10, 0.08904502638040439d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl27 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double29 = poissonDistributionImpl27.probability(100);
        double double31 = poissonDistributionImpl27.normalApproximateProbability(2147483647);
        int int33 = poissonDistributionImpl27.getDomainUpperBound((double) 10L);
        int int35 = poissonDistributionImpl27.getDomainLowerBound(3.141592653589793d);
        int int36 = poissonDistributionImpl27.sample();
        int int37 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl27);
        double double39 = randomDataImpl5.nextExponential((double) 33L);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.5232524567176216d + "'", double10 == 1.5232524567176216d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 109 + "'", int25 == 109);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 3.941866060050443E-159d + "'", double29 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.51214536343131d + "'", double39 == 52.51214536343131d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #908
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: new           #107
60: dup
61: invokespecial #108
64: astore        7
66: aload         7
68: ldc2_w        #10
71: invokestatic  #109
74: invokevirtual #110
77: dstore        8
79: aload         7
81: invokevirtual #392
84: dstore        10
86: aload         6
88: aload         7
90: invokevirtual #393
93: dstore        12
95: aload         6
97: lconst_1
98: invokevirtual #394
101: aload         6
103: iconst_3
104: ldc2_w        #395
107: invokevirtual #397
110: istore        14
112: aload         6
114: lconst_0
115: lconst_1
116: invokevirtual #84
119: lstore        15
121: aload         6
123: invokevirtual #398
126: aload         6
128: ldc2_w        #121
131: ldc2_w        #399
134: invokevirtual #123
137: lstore        17
139: aload         6
141: bipush        10
143: ldc2_w        #696
146: invokevirtual #698
149: istore        19
151: new           #8
154: dup
155: dconst_1
156: invokespecial #9
159: astore        20
161: aload         20
163: bipush        100
165: invokevirtual #54
168: dstore        21
170: aload         20
172: ldc           #41
174: invokevirtual #63
177: dstore        23
179: aload         20
181: ldc2_w        #13
184: invokevirtual #34
187: istore        25
189: aload         20
191: ldc2_w        #166
194: invokevirtual #139
197: istore        26
199: aload         20
201: invokevirtual #61
204: istore        27
206: aload         6
208: aload         20
210: invokevirtual #116
213: istore        28
215: aload         6
217: ldc2_w        #909
220: invokevirtual #203
223: dstore        29
225: new           #21
228: dup
229: invokespecial #22
232: ldc           #27
234: invokevirtual #24
237: dload_2
238: invokevirtual #28
241: ldc           #29
243: invokevirtual #24
246: dconst_0
247: invokevirtual #28
250: ldc           #27
252: invokevirtual #24
255: invokevirtual #26
258: dload_2
259: dconst_0
260: dcmpl
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: new           #21
275: dup
276: invokespecial #22
279: ldc           #27
281: invokevirtual #24
284: dload         4
286: invokevirtual #28
289: ldc           #29
291: invokevirtual #24
294: ldc2_w        #118
297: invokevirtual #28
300: ldc           #27
302: invokevirtual #24
305: invokevirtual #26
308: dload         4
310: ldc2_w        #118
313: dcmpl
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #32
325: aload         6
327: invokestatic  #77
330: new           #21
333: dup
334: invokespecial #22
337: ldc           #27
339: invokevirtual #24
342: dload         8
344: invokevirtual #28
347: ldc           #29
349: invokevirtual #24
352: dconst_0
353: invokevirtual #28
356: ldc           #27
358: invokevirtual #24
361: invokevirtual #26
364: dload         8
366: dconst_0
367: dcmpl
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #32
379: new           #21
382: dup
383: invokespecial #22
386: ldc           #27
388: invokevirtual #24
391: dload         10
393: invokevirtual #28
396: ldc           #29
398: invokevirtual #24
401: dconst_0
402: invokevirtual #28
405: ldc           #27
407: invokevirtual #24
410: invokevirtual #26
413: dload         10
415: dconst_0
416: dcmpl
417: ifne          424
420: iconst_1
421: goto          425
424: iconst_0
425: invokestatic  #32
428: new           #21
431: dup
432: invokespecial #22
435: ldc           #27
437: invokevirtual #24
440: dload         21
442: invokevirtual #28
445: ldc           #29
447: invokevirtual #24
450: ldc2_w        #47
453: invokevirtual #28
456: ldc           #27
458: invokevirtual #24
461: invokevirtual #26
464: dload         21
466: ldc2_w        #47
469: dcmpl
470: ifne          477
473: iconst_1
474: goto          478
477: iconst_0
478: invokestatic  #32
481: new           #21
484: dup
485: invokespecial #22
488: ldc           #27
490: invokevirtual #24
493: dload         23
495: invokevirtual #28
498: ldc           #29
500: invokevirtual #24
503: dconst_1
504: invokevirtual #28
507: ldc           #27
509: invokevirtual #24
512: invokevirtual #26
515: dload         23
517: dconst_1
518: dcmpl
519: ifne          526
522: iconst_1
523: goto          527
526: iconst_0
527: invokestatic  #32
530: new           #21
533: dup
534: invokespecial #22
537: ldc           #27
539: invokevirtual #24
542: iload         25
544: invokevirtual #40
547: ldc           #29
549: invokevirtual #24
552: ldc           #41
554: invokevirtual #40
557: ldc           #27
559: invokevirtual #24
562: invokevirtual #26
565: iload         25
567: ldc           #41
569: if_icmpne     576
572: iconst_1
573: goto          577
576: iconst_0
577: invokestatic  #32
580: new           #21
583: dup
584: invokespecial #22
587: ldc           #27
589: invokevirtual #24
592: iload         26
594: invokevirtual #40
597: ldc           #29
599: invokevirtual #24
602: iconst_0
603: invokevirtual #40
606: ldc           #27
608: invokevirtual #24
611: invokevirtual #26
614: iload         26
616: ifne          623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #32
627: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test261
Start line: 5158
End line: 5172
Method source code: 
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double8 = poissonDistributionImpl1.probability(0.3899356327042469d);
        int int10 = poissonDistributionImpl1.getDomainUpperBound((-0.7880014968389955d));
        double double13 = poissonDistributionImpl1.cumulativeProbability(1, 85);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.6321205588285393d + "'", double13 == 0.6321205588285393d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #911
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #325
55: invokevirtual #44
58: dstore        6
60: aload_1
61: ldc2_w        #286
64: invokevirtual #34
67: istore        8
69: aload_1
70: iconst_1
71: bipush        85
73: invokevirtual #64
76: dstore        9
78: new           #21
81: dup
82: invokespecial #22
85: ldc           #27
87: invokevirtual #24
90: dload_2
91: invokevirtual #28
94: ldc           #29
96: invokevirtual #24
99: ldc2_w        #47
102: invokevirtual #28
105: ldc           #27
107: invokevirtual #24
110: invokevirtual #26
113: dload_2
114: ldc2_w        #47
117: dcmpl
118: ifne          125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #32
129: new           #21
132: dup
133: invokespecial #22
136: ldc           #27
138: invokevirtual #24
141: dload         4
143: invokevirtual #28
146: ldc           #29
148: invokevirtual #24
151: dconst_1
152: invokevirtual #28
155: ldc           #27
157: invokevirtual #24
160: invokevirtual #26
163: dload         4
165: dconst_1
166: dcmpl
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #32
178: new           #21
181: dup
182: invokespecial #22
185: ldc           #27
187: invokevirtual #24
190: dload         6
192: invokevirtual #28
195: ldc           #29
197: invokevirtual #24
200: dconst_0
201: invokevirtual #28
204: ldc           #27
206: invokevirtual #24
209: invokevirtual #26
212: dload         6
214: dconst_0
215: dcmpl
216: ifne          223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #32
227: new           #21
230: dup
231: invokespecial #22
234: ldc           #27
236: invokevirtual #24
239: iload         8
241: invokevirtual #40
244: ldc           #29
246: invokevirtual #24
249: ldc           #41
251: invokevirtual #40
254: ldc           #27
256: invokevirtual #24
259: invokevirtual #26
262: iload         8
264: ldc           #41
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #32
277: new           #21
280: dup
281: invokespecial #22
284: ldc           #27
286: invokevirtual #24
289: dload         9
291: invokevirtual #28
294: ldc           #29
296: invokevirtual #24
299: ldc2_w        #30
302: invokevirtual #28
305: ldc           #27
307: invokevirtual #24
310: invokevirtual #26
313: dload         9
315: ldc2_w        #30
318: dcmpl
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #32
330: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test262
Start line: 5175
End line: 5200
Method source code: 
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        double double4 = randomDataImpl1.nextUniform((-0.7853981633974483d), 0.962217362072003d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl6 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double8 = poissonDistributionImpl6.probability(100);
        double double10 = poissonDistributionImpl6.normalApproximateProbability(2147483647);
        double double13 = poissonDistributionImpl6.cumulativeProbability((int) (short) 10, 2147483647);
        double double15 = poissonDistributionImpl6.probability((-1.207854600801523d));
        double double17 = poissonDistributionImpl6.probability(100);
        int int19 = poissonDistributionImpl6.inverseCumulativeProbability(0.06680720126885803d);
        int int20 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl6);
        poissonDistributionImpl6.reseedRandomGenerator(129L);
        double double24 = poissonDistributionImpl6.cumulativeProbability(54);
// flaky:         org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.8448435030004939d + "'", double4 == 0.8448435030004939d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.941866060050443E-159d + "'", double8 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.1142547828857374E-7d + "'", double13 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.941866060050443E-159d + "'", double17 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #912
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: aload_2
37: ldc2_w        #130
40: ldc2_w        #746
43: invokevirtual #351
46: dstore_3
47: new           #8
50: dup
51: dconst_1
52: invokespecial #9
55: astore        5
57: aload         5
59: bipush        100
61: invokevirtual #54
64: dstore        6
66: aload         5
68: ldc           #41
70: invokevirtual #63
73: dstore        8
75: aload         5
77: bipush        10
79: ldc           #41
81: invokevirtual #64
84: dstore        10
86: aload         5
88: ldc2_w        #65
91: invokevirtual #44
94: dstore        12
96: aload         5
98: bipush        100
100: invokevirtual #54
103: dstore        14
105: aload         5
107: ldc2_w        #87
110: invokevirtual #15
113: istore        16
115: aload_2
116: aload         5
118: invokevirtual #116
121: istore        17
123: aload         5
125: ldc2_w        #913
128: invokevirtual #157
131: aload         5
133: bipush        54
135: invokevirtual #43
138: dstore        18
140: new           #21
143: dup
144: invokespecial #22
147: ldc           #27
149: invokevirtual #24
152: dload         6
154: invokevirtual #28
157: ldc           #29
159: invokevirtual #24
162: ldc2_w        #47
165: invokevirtual #28
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: dload         6
178: ldc2_w        #47
181: dcmpl
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #32
193: new           #21
196: dup
197: invokespecial #22
200: ldc           #27
202: invokevirtual #24
205: dload         8
207: invokevirtual #28
210: ldc           #29
212: invokevirtual #24
215: dconst_1
216: invokevirtual #28
219: ldc           #27
221: invokevirtual #24
224: invokevirtual #26
227: dload         8
229: dconst_1
230: dcmpl
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #32
242: new           #21
245: dup
246: invokespecial #22
249: ldc           #27
251: invokevirtual #24
254: dload         10
256: invokevirtual #28
259: ldc           #29
261: invokevirtual #24
264: ldc2_w        #69
267: invokevirtual #28
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: dload         10
280: ldc2_w        #69
283: dcmpl
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #32
295: new           #21
298: dup
299: invokespecial #22
302: ldc           #27
304: invokevirtual #24
307: dload         12
309: invokevirtual #28
312: ldc           #29
314: invokevirtual #24
317: dconst_0
318: invokevirtual #28
321: ldc           #27
323: invokevirtual #24
326: invokevirtual #26
329: dload         12
331: dconst_0
332: dcmpl
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #32
344: new           #21
347: dup
348: invokespecial #22
351: ldc           #27
353: invokevirtual #24
356: dload         14
358: invokevirtual #28
361: ldc           #29
363: invokevirtual #24
366: ldc2_w        #47
369: invokevirtual #28
372: ldc           #27
374: invokevirtual #24
377: invokevirtual #26
380: dload         14
382: ldc2_w        #47
385: dcmpl
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #32
397: new           #21
400: dup
401: invokespecial #22
404: ldc           #27
406: invokevirtual #24
409: iload         16
411: invokevirtual #40
414: ldc           #29
416: invokevirtual #24
419: iconst_m1
420: invokevirtual #40
423: ldc           #27
425: invokevirtual #24
428: invokevirtual #26
431: iload         16
433: iconst_m1
434: if_icmpne     441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #32
445: new           #21
448: dup
449: invokespecial #22
452: ldc           #27
454: invokevirtual #24
457: dload         18
459: invokevirtual #28
462: ldc           #29
464: invokevirtual #24
467: dconst_1
468: invokevirtual #28
471: ldc           #27
473: invokevirtual #24
476: invokevirtual #26
479: dload         18
481: dconst_1
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #32
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test263
Start line: 5203
End line: 5211
Method source code: 
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int3 = poissonDistributionImpl1.getDomainUpperBound((double) (short) 0);
        int int5 = poissonDistributionImpl1.getDomainUpperBound((-1.0224059380017507d));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #915
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #34
39: istore_2
40: aload_1
41: ldc2_w        #916
44: invokevirtual #34
47: istore_3
48: new           #21
51: dup
52: invokespecial #22
55: ldc           #27
57: invokevirtual #24
60: iload_2
61: invokevirtual #40
64: ldc           #29
66: invokevirtual #24
69: ldc           #41
71: invokevirtual #40
74: ldc           #27
76: invokevirtual #24
79: invokevirtual #26
82: iload_2
83: ldc           #41
85: if_icmpne     92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #32
96: new           #21
99: dup
100: invokespecial #22
103: ldc           #27
105: invokevirtual #24
108: iload_3
109: invokevirtual #40
112: ldc           #29
114: invokevirtual #24
117: ldc           #41
119: invokevirtual #40
122: ldc           #27
124: invokevirtual #24
127: invokevirtual #26
130: iload_3
131: ldc           #41
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #32
144: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test264
Start line: 5214
End line: 5225
Method source code: 
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) '4', (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = poissonDistributionImpl2.cumulativeProbability(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 52");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #918
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #43
42: dstore_2
43: ldc_w         #800
46: invokestatic  #17
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
37    49    52   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test265
Start line: 5228
End line: 5232
Method source code: 
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(12.995175231370865d, (-1.8574114166194975d), 89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #919
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #920
32: ldc2_w        #922
35: bipush        89
37: invokespecial #97
40: astore_1
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test266
Start line: 5235
End line: 5257
Method source code: 
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        double double13 = poissonDistributionImpl1.probability(0.31738700241670326d);
        double double15 = poissonDistributionImpl1.cumulativeProbability((int) (short) 100);
        double double16 = poissonDistributionImpl1.getMean();
        double double19 = poissonDistributionImpl1.cumulativeProbability(108, 186864);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #924
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #336
80: invokevirtual #44
83: dstore        10
85: aload_1
86: bipush        100
88: invokevirtual #43
91: dstore        12
93: aload_1
94: invokevirtual #102
97: dstore        14
99: aload_1
100: bipush        108
102: ldc_w         #523
105: invokevirtual #64
108: dstore        16
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #27
119: invokevirtual #24
122: dload_2
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: ldc2_w        #47
134: invokevirtual #28
137: ldc           #27
139: invokevirtual #24
142: invokevirtual #26
145: dload_2
146: ldc2_w        #47
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: new           #21
164: dup
165: invokespecial #22
168: ldc           #27
170: invokevirtual #24
173: dload         4
175: invokevirtual #28
178: ldc           #29
180: invokevirtual #24
183: dconst_1
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         4
197: dconst_1
198: dcmpl
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #32
210: new           #21
213: dup
214: invokespecial #22
217: ldc           #27
219: invokevirtual #24
222: iload         6
224: invokevirtual #40
227: ldc           #29
229: invokevirtual #24
232: ldc           #41
234: invokevirtual #40
237: ldc           #27
239: invokevirtual #24
242: invokevirtual #26
245: iload         6
247: ldc           #41
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #32
260: new           #21
263: dup
264: invokespecial #22
267: ldc           #27
269: invokevirtual #24
272: iload         7
274: invokevirtual #40
277: ldc           #29
279: invokevirtual #24
282: iconst_1
283: invokevirtual #40
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: iload         7
296: iconst_1
297: if_icmpne     304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #32
308: new           #21
311: dup
312: invokespecial #22
315: ldc           #27
317: invokevirtual #24
320: dload         8
322: invokevirtual #28
325: ldc           #29
327: invokevirtual #24
330: dconst_0
331: invokevirtual #28
334: ldc           #27
336: invokevirtual #24
339: invokevirtual #26
342: dload         8
344: dconst_0
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #32
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: dload         10
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: dconst_0
380: invokevirtual #28
383: ldc           #27
385: invokevirtual #24
388: invokevirtual #26
391: dload         10
393: dconst_0
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #32
406: new           #21
409: dup
410: invokespecial #22
413: ldc           #27
415: invokevirtual #24
418: dload         12
420: invokevirtual #28
423: ldc           #29
425: invokevirtual #24
428: dconst_1
429: invokevirtual #28
432: ldc           #27
434: invokevirtual #24
437: invokevirtual #26
440: dload         12
442: dconst_1
443: dcmpl
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #32
455: new           #21
458: dup
459: invokespecial #22
462: ldc           #27
464: invokevirtual #24
467: dload         14
469: invokevirtual #28
472: ldc           #29
474: invokevirtual #24
477: dconst_1
478: invokevirtual #28
481: ldc           #27
483: invokevirtual #24
486: invokevirtual #26
489: dload         14
491: dconst_1
492: dcmpl
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #32
504: new           #21
507: dup
508: invokespecial #22
511: ldc           #27
513: invokevirtual #24
516: dload         16
518: invokevirtual #28
521: ldc           #29
523: invokevirtual #24
526: dconst_0
527: invokevirtual #28
530: ldc           #27
532: invokevirtual #24
535: invokevirtual #26
538: dload         16
540: dconst_0
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #32
553: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test267
Start line: 5260
End line: 5264
Method source code: 
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.28543422477289365d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #925
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #926
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test268
Start line: 5267
End line: 5277
Method source code: 
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.probability(100);
        double double9 = poissonDistributionImpl1.cumulativeProbability(0.08563392409367526d, (double) 94L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.941866060050443E-159d + "'", double6 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.6321205588285393d + "'", double9 == 0.6321205588285393d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #928
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: bipush        100
46: invokevirtual #54
49: dstore        4
51: aload_1
52: ldc2_w        #929
55: ldc2_w        #931
58: invokevirtual #12
61: dstore        6
63: new           #21
66: dup
67: invokespecial #22
70: ldc           #27
72: invokevirtual #24
75: dload_2
76: invokevirtual #28
79: ldc           #29
81: invokevirtual #24
84: ldc2_w        #30
87: invokevirtual #28
90: ldc           #27
92: invokevirtual #24
95: invokevirtual #26
98: dload_2
99: ldc2_w        #30
102: dcmpl
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #32
114: new           #21
117: dup
118: invokespecial #22
121: ldc           #27
123: invokevirtual #24
126: dload         4
128: invokevirtual #28
131: ldc           #29
133: invokevirtual #24
136: ldc2_w        #47
139: invokevirtual #28
142: ldc           #27
144: invokevirtual #24
147: invokevirtual #26
150: dload         4
152: ldc2_w        #47
155: dcmpl
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #32
167: new           #21
170: dup
171: invokespecial #22
174: ldc           #27
176: invokevirtual #24
179: dload         6
181: invokevirtual #28
184: ldc           #29
186: invokevirtual #24
189: ldc2_w        #30
192: invokevirtual #28
195: ldc           #27
197: invokevirtual #24
200: invokevirtual #26
203: dload         6
205: ldc2_w        #30
208: dcmpl
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #32
220: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test269
Start line: 5280
End line: 5314
Method source code: 
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double8 = randomDataImpl5.nextCauchy(0.5403023058681398d, 2.718281828459045d);
        double double11 = randomDataImpl5.nextGaussian((double) (byte) 100, 0.8354297910850215d);
        double double14 = randomDataImpl5.nextF(1.332659372694601d, 0.9088519918096143d);
        randomDataImpl5.reSeedSecure(32L);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl18 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double20 = poissonDistributionImpl18.probability(100);
        double double22 = poissonDistributionImpl18.cumulativeProbability(10);
        int int23 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl18);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = randomDataImpl5.nextZipf(115, 0.0d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.140418345532116d + "'", double8 == 3.140418345532116d);
// flaky:         org.junit.Assert.assertTrue("'" + double11 + "' != '" + 99.72335738104775d + "'", double11 == 99.72335738104775d);
// flaky:         org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.5005168796131754d + "'", double14 == 2.5005168796131754d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.941866060050443E-159d + "'", double20 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9999999899522336d + "'", double22 == 0.9999999899522336d);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #933
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #469
62: ldc2_w        #934
65: invokevirtual #652
68: dstore        7
70: aload         6
72: ldc2_w        #10
75: ldc2_w        #781
78: invokevirtual #288
81: dstore        9
83: aload         6
85: ldc2_w        #936
88: ldc2_w        #938
91: invokevirtual #940
94: dstore        11
96: aload         6
98: ldc2_w        #769
101: invokevirtual #394
104: new           #8
107: dup
108: dconst_1
109: invokespecial #9
112: astore        13
114: aload         13
116: bipush        100
118: invokevirtual #54
121: dstore        14
123: aload         13
125: bipush        10
127: invokevirtual #43
130: dstore        16
132: aload         6
134: aload         13
136: invokevirtual #116
139: istore        18
141: aload         6
143: bipush        115
145: dconst_0
146: invokevirtual #397
149: istore        19
151: ldc           #16
153: invokestatic  #17
156: goto          201
159: astore        19
161: aload         19
163: invokevirtual #19
166: invokevirtual #20
169: ifne          201
172: new           #21
175: dup
176: invokespecial #22
179: ldc           #23
181: invokevirtual #24
184: aload         19
186: invokevirtual #19
189: invokevirtual #25
192: invokevirtual #24
195: invokevirtual #26
198: invokestatic  #17
201: new           #21
204: dup
205: invokespecial #22
208: ldc           #27
210: invokevirtual #24
213: dload_2
214: invokevirtual #28
217: ldc           #29
219: invokevirtual #24
222: dconst_0
223: invokevirtual #28
226: ldc           #27
228: invokevirtual #24
231: invokevirtual #26
234: dload_2
235: dconst_0
236: dcmpl
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #32
248: new           #21
251: dup
252: invokespecial #22
255: ldc           #27
257: invokevirtual #24
260: dload         4
262: invokevirtual #28
265: ldc           #29
267: invokevirtual #24
270: ldc2_w        #118
273: invokevirtual #28
276: ldc           #27
278: invokevirtual #24
281: invokevirtual #26
284: dload         4
286: ldc2_w        #118
289: dcmpl
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #32
301: aload         6
303: invokestatic  #77
306: new           #21
309: dup
310: invokespecial #22
313: ldc           #27
315: invokevirtual #24
318: dload         14
320: invokevirtual #28
323: ldc           #29
325: invokevirtual #24
328: ldc2_w        #47
331: invokevirtual #28
334: ldc           #27
336: invokevirtual #24
339: invokevirtual #26
342: dload         14
344: ldc2_w        #47
347: dcmpl
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #32
359: new           #21
362: dup
363: invokespecial #22
366: ldc           #27
368: invokevirtual #24
371: dload         16
373: invokevirtual #28
376: ldc           #29
378: invokevirtual #24
381: ldc2_w        #178
384: invokevirtual #28
387: ldc           #27
389: invokevirtual #24
392: invokevirtual #26
395: dload         16
397: ldc2_w        #178
400: dcmpl
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #32
412: return
Exception table:
from    to  target type
141   156   159   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test270
Start line: 5317
End line: 5321
Method source code: 
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5999899069173406d, 1.0822740835725053d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #941
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #942
32: ldc2_w        #944
35: invokespecial #255
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test271
Start line: 5324
End line: 5346
Method source code: 
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        double double14 = poissonDistributionImpl1.cumulativeProbability((double) (-1));
        double double16 = poissonDistributionImpl1.probability((double) (byte) 0);
        double double19 = poissonDistributionImpl1.cumulativeProbability((int) (byte) 100, 2147483647);
        double double21 = poissonDistributionImpl1.probability(99.67903295823915d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117144233d + "'", double16 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #946
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: ldc2_w        #142
78: invokevirtual #141
81: dstore        12
83: aload_1
84: dconst_0
85: invokevirtual #44
88: dstore        14
90: aload_1
91: bipush        100
93: ldc           #41
95: invokevirtual #64
98: dstore        16
100: aload_1
101: ldc2_w        #947
104: invokevirtual #44
107: dstore        18
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload_2
122: invokevirtual #28
125: ldc           #29
127: invokevirtual #24
130: ldc2_w        #30
133: invokevirtual #28
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: dload_2
145: ldc2_w        #30
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: new           #21
163: dup
164: invokespecial #22
167: ldc           #27
169: invokevirtual #24
172: dload         4
174: invokevirtual #28
177: ldc           #29
179: invokevirtual #24
182: ldc2_w        #45
185: invokevirtual #28
188: ldc           #27
190: invokevirtual #24
193: invokevirtual #26
196: dload         4
198: ldc2_w        #45
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: new           #21
216: dup
217: invokespecial #22
220: ldc           #27
222: invokevirtual #24
225: dload         6
227: invokevirtual #28
230: ldc           #29
232: invokevirtual #24
235: ldc2_w        #87
238: invokevirtual #28
241: ldc           #27
243: invokevirtual #24
246: invokevirtual #26
249: dload         6
251: ldc2_w        #87
254: dcmpl
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #32
266: new           #21
269: dup
270: invokespecial #22
273: ldc           #27
275: invokevirtual #24
278: dload         8
280: invokevirtual #28
283: ldc           #29
285: invokevirtual #24
288: dconst_1
289: invokevirtual #28
292: ldc           #27
294: invokevirtual #24
297: invokevirtual #26
300: dload         8
302: dconst_1
303: dcmpl
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #32
315: new           #21
318: dup
319: invokespecial #22
322: ldc           #27
324: invokevirtual #24
327: dload         10
329: invokevirtual #28
332: ldc           #29
334: invokevirtual #24
337: ldc2_w        #47
340: invokevirtual #28
343: ldc           #27
345: invokevirtual #24
348: invokevirtual #26
351: dload         10
353: ldc2_w        #47
356: dcmpl
357: ifne          364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #32
368: new           #21
371: dup
372: invokespecial #22
375: ldc           #27
377: invokevirtual #24
380: dload         12
382: invokevirtual #28
385: ldc           #29
387: invokevirtual #24
390: dconst_0
391: invokevirtual #28
394: ldc           #27
396: invokevirtual #24
399: invokevirtual #26
402: dload         12
404: dconst_0
405: dcmpl
406: ifne          413
409: iconst_1
410: goto          414
413: iconst_0
414: invokestatic  #32
417: new           #21
420: dup
421: invokespecial #22
424: ldc           #27
426: invokevirtual #24
429: dload         14
431: invokevirtual #28
434: ldc           #29
436: invokevirtual #24
439: ldc2_w        #168
442: invokevirtual #28
445: ldc           #27
447: invokevirtual #24
450: invokevirtual #26
453: dload         14
455: ldc2_w        #168
458: dcmpl
459: ifne          466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #32
470: new           #21
473: dup
474: invokespecial #22
477: ldc           #27
479: invokevirtual #24
482: dload         16
484: invokevirtual #28
487: ldc           #29
489: invokevirtual #24
492: dconst_0
493: invokevirtual #28
496: ldc           #27
498: invokevirtual #24
501: invokevirtual #26
504: dload         16
506: dconst_0
507: dcmpl
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #32
519: new           #21
522: dup
523: invokespecial #22
526: ldc           #27
528: invokevirtual #24
531: dload         18
533: invokevirtual #28
536: ldc           #29
538: invokevirtual #24
541: dconst_0
542: invokevirtual #28
545: ldc           #27
547: invokevirtual #24
550: invokevirtual #26
553: dload         18
555: dconst_0
556: dcmpl
557: ifne          564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #32
568: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test272
Start line: 5349
End line: 5355
Method source code: 
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6240474076765692d, 0);
        double double3 = poissonDistributionImpl2.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.6240474076765692d + "'", double3 == 0.6240474076765692d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #949
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #600
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: invokevirtual #102
41: dstore_2
42: new           #21
45: dup
46: invokespecial #22
49: ldc           #27
51: invokevirtual #24
54: dload_2
55: invokevirtual #28
58: ldc           #29
60: invokevirtual #24
63: ldc2_w        #600
66: invokevirtual #28
69: ldc           #27
71: invokevirtual #24
74: invokevirtual #26
77: dload_2
78: ldc2_w        #600
81: dcmpl
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #32
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test273
Start line: 5358
End line: 5385
Method source code: 
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        double double20 = poissonDistributionImpl7.normalApproximateProbability((int) (short) 10);
        double double22 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5558951896457232d + "'", double5 == 0.5558951896457232d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #950
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: aload         8
123: bipush        10
125: invokevirtual #63
128: dstore        19
130: aload         8
132: bipush        10
134: invokevirtual #63
137: dstore        21
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload         4
153: invokevirtual #28
156: ldc           #29
158: invokevirtual #24
161: dconst_1
162: invokevirtual #28
165: ldc           #27
167: invokevirtual #24
170: invokevirtual #26
173: dload         4
175: dconst_1
176: dcmpl
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #32
188: new           #21
191: dup
192: invokespecial #22
195: ldc           #27
197: invokevirtual #24
200: dload         9
202: invokevirtual #28
205: ldc           #29
207: invokevirtual #24
210: ldc2_w        #30
213: invokevirtual #28
216: ldc           #27
218: invokevirtual #24
221: invokevirtual #26
224: dload         9
226: ldc2_w        #30
229: dcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #32
241: new           #21
244: dup
245: invokespecial #22
248: ldc           #27
250: invokevirtual #24
253: dload         11
255: invokevirtual #28
258: ldc           #29
260: invokevirtual #24
263: ldc2_w        #45
266: invokevirtual #28
269: ldc           #27
271: invokevirtual #24
274: invokevirtual #26
277: dload         11
279: ldc2_w        #45
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         13
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: ldc2_w        #87
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         13
332: ldc2_w        #87
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         15
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: dconst_1
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         15
383: dconst_1
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: new           #21
399: dup
400: invokespecial #22
403: ldc           #27
405: invokevirtual #24
408: dload         19
410: invokevirtual #28
413: ldc           #29
415: invokevirtual #24
418: dconst_1
419: invokevirtual #28
422: ldc           #27
424: invokevirtual #24
427: invokevirtual #26
430: dload         19
432: dconst_1
433: dcmpl
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #32
445: new           #21
448: dup
449: invokespecial #22
452: ldc           #27
454: invokevirtual #24
457: dload         21
459: invokevirtual #28
462: ldc           #29
464: invokevirtual #24
467: dconst_1
468: invokevirtual #28
471: ldc           #27
473: invokevirtual #24
476: invokevirtual #26
479: dload         21
481: dconst_1
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #32
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test274
Start line: 5388
End line: 5406
Method source code: 
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        double double14 = poissonDistributionImpl1.normalApproximateProbability(49);
        int int16 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #951
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: bipush        49
76: invokevirtual #63
79: dstore        11
81: aload_1
82: dconst_0
83: invokevirtual #15
86: istore        13
88: new           #21
91: dup
92: invokespecial #22
95: ldc           #27
97: invokevirtual #24
100: dload_2
101: invokevirtual #28
104: ldc           #29
106: invokevirtual #24
109: ldc2_w        #30
112: invokevirtual #28
115: ldc           #27
117: invokevirtual #24
120: invokevirtual #26
123: dload_2
124: ldc2_w        #30
127: dcmpl
128: ifne          135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #32
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload         4
153: invokevirtual #28
156: ldc           #29
158: invokevirtual #24
161: ldc2_w        #45
164: invokevirtual #28
167: ldc           #27
169: invokevirtual #24
172: invokevirtual #26
175: dload         4
177: ldc2_w        #45
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload         6
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: ldc2_w        #87
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         6
230: ldc2_w        #87
233: dcmpl
234: ifne          241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #32
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: dload         8
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: ldc2_w        #45
270: invokevirtual #28
273: ldc           #27
275: invokevirtual #24
278: invokevirtual #26
281: dload         8
283: ldc2_w        #45
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #32
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: iload         10
312: invokevirtual #40
315: ldc           #29
317: invokevirtual #24
320: iconst_0
321: invokevirtual #40
324: ldc           #27
326: invokevirtual #24
329: invokevirtual #26
332: iload         10
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: new           #21
348: dup
349: invokespecial #22
352: ldc           #27
354: invokevirtual #24
357: dload         11
359: invokevirtual #28
362: ldc           #29
364: invokevirtual #24
367: dconst_1
368: invokevirtual #28
371: ldc           #27
373: invokevirtual #24
376: invokevirtual #26
379: dload         11
381: dconst_1
382: dcmpl
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #32
394: new           #21
397: dup
398: invokespecial #22
401: ldc           #27
403: invokevirtual #24
406: iload         13
408: invokevirtual #40
411: ldc           #29
413: invokevirtual #24
416: iconst_m1
417: invokevirtual #40
420: ldc           #27
422: invokevirtual #24
425: invokevirtual #26
428: iload         13
430: iconst_m1
431: if_icmpne     438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #32
442: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test275
Start line: 5409
End line: 5429
Method source code: 
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        double double14 = poissonDistributionImpl1.getMean();
        double double16 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #952
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload_1
81: invokevirtual #102
84: dstore        13
86: aload_1
87: dconst_0
88: invokevirtual #141
91: dstore        15
93: new           #21
96: dup
97: invokespecial #22
100: ldc           #27
102: invokevirtual #24
105: dload_2
106: invokevirtual #28
109: ldc           #29
111: invokevirtual #24
114: ldc2_w        #30
117: invokevirtual #28
120: ldc           #27
122: invokevirtual #24
125: invokevirtual #26
128: dload_2
129: ldc2_w        #30
132: dcmpl
133: ifne          140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #32
144: new           #21
147: dup
148: invokespecial #22
151: ldc           #27
153: invokevirtual #24
156: dload         4
158: invokevirtual #28
161: ldc           #29
163: invokevirtual #24
166: ldc2_w        #45
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload         4
182: ldc2_w        #45
185: dcmpl
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #32
197: new           #21
200: dup
201: invokespecial #22
204: ldc           #27
206: invokevirtual #24
209: dload         6
211: invokevirtual #28
214: ldc           #29
216: invokevirtual #24
219: ldc2_w        #87
222: invokevirtual #28
225: ldc           #27
227: invokevirtual #24
230: invokevirtual #26
233: dload         6
235: ldc2_w        #87
238: dcmpl
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #32
250: new           #21
253: dup
254: invokespecial #22
257: ldc           #27
259: invokevirtual #24
262: dload         8
264: invokevirtual #28
267: ldc           #29
269: invokevirtual #24
272: dconst_1
273: invokevirtual #28
276: ldc           #27
278: invokevirtual #24
281: invokevirtual #26
284: dload         8
286: dconst_1
287: dcmpl
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #32
299: new           #21
302: dup
303: invokespecial #22
306: ldc           #27
308: invokevirtual #24
311: dload         10
313: invokevirtual #28
316: ldc           #29
318: invokevirtual #24
321: ldc2_w        #47
324: invokevirtual #28
327: ldc           #27
329: invokevirtual #24
332: invokevirtual #26
335: dload         10
337: ldc2_w        #47
340: dcmpl
341: ifne          348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #32
352: aload         12
354: invokestatic  #77
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: dload         13
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: dconst_1
380: invokevirtual #28
383: ldc           #27
385: invokevirtual #24
388: invokevirtual #26
391: dload         13
393: dconst_1
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #32
406: new           #21
409: dup
410: invokespecial #22
413: ldc           #27
415: invokevirtual #24
418: dload         15
420: invokevirtual #28
423: ldc           #29
425: invokevirtual #24
428: ldc2_w        #45
431: invokevirtual #28
434: ldc           #27
436: invokevirtual #24
439: invokevirtual #26
442: dload         15
444: ldc2_w        #45
447: dcmpl
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #32
459: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test276
Start line: 5432
End line: 5450
Method source code: 
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        int int13 = poissonDistributionImpl1.getDomainUpperBound((-1.7540630599962477d));
        double double15 = poissonDistributionImpl1.probability(60);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.4211033641445156E-83d + "'", double15 == 4.4211033641445156E-83d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #953
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #284
80: invokevirtual #34
83: istore        10
85: aload_1
86: bipush        60
88: invokevirtual #54
91: dstore        11
93: new           #21
96: dup
97: invokespecial #22
100: ldc           #27
102: invokevirtual #24
105: dload_2
106: invokevirtual #28
109: ldc           #29
111: invokevirtual #24
114: ldc2_w        #47
117: invokevirtual #28
120: ldc           #27
122: invokevirtual #24
125: invokevirtual #26
128: dload_2
129: ldc2_w        #47
132: dcmpl
133: ifne          140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #32
144: new           #21
147: dup
148: invokespecial #22
151: ldc           #27
153: invokevirtual #24
156: dload         4
158: invokevirtual #28
161: ldc           #29
163: invokevirtual #24
166: dconst_1
167: invokevirtual #28
170: ldc           #27
172: invokevirtual #24
175: invokevirtual #26
178: dload         4
180: dconst_1
181: dcmpl
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #32
193: new           #21
196: dup
197: invokespecial #22
200: ldc           #27
202: invokevirtual #24
205: iload         6
207: invokevirtual #40
210: ldc           #29
212: invokevirtual #24
215: ldc           #41
217: invokevirtual #40
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: iload         6
230: ldc           #41
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: iload         7
257: invokevirtual #40
260: ldc           #29
262: invokevirtual #24
265: iconst_1
266: invokevirtual #40
269: ldc           #27
271: invokevirtual #24
274: invokevirtual #26
277: iload         7
279: iconst_1
280: if_icmpne     287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #32
291: new           #21
294: dup
295: invokespecial #22
298: ldc           #27
300: invokevirtual #24
303: dload         8
305: invokevirtual #28
308: ldc           #29
310: invokevirtual #24
313: dconst_0
314: invokevirtual #28
317: ldc           #27
319: invokevirtual #24
322: invokevirtual #26
325: dload         8
327: dconst_0
328: dcmpl
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #32
340: new           #21
343: dup
344: invokespecial #22
347: ldc           #27
349: invokevirtual #24
352: iload         10
354: invokevirtual #40
357: ldc           #29
359: invokevirtual #24
362: ldc           #41
364: invokevirtual #40
367: ldc           #27
369: invokevirtual #24
372: invokevirtual #26
375: iload         10
377: ldc           #41
379: if_icmpne     386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #32
390: new           #21
393: dup
394: invokespecial #22
397: ldc           #27
399: invokevirtual #24
402: dload         11
404: invokevirtual #28
407: ldc           #29
409: invokevirtual #24
412: ldc2_w        #954
415: invokevirtual #28
418: ldc           #27
420: invokevirtual #24
423: invokevirtual #26
426: dload         11
428: ldc2_w        #954
431: dcmpl
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #32
443: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test277
Start line: 5453
End line: 5465
Method source code: 
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        int int8 = poissonDistributionImpl1.getDomainLowerBound((-0.9501789451592945d));
        double double9 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #956
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #216
55: invokevirtual #139
58: istore        6
60: aload_1
61: invokevirtual #102
64: dstore        7
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #47
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #47
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: dconst_1
140: invokevirtual #28
143: ldc           #27
145: invokevirtual #24
148: invokevirtual #26
151: dload         4
153: dconst_1
154: dcmpl
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: iload         6
180: invokevirtual #40
183: ldc           #29
185: invokevirtual #24
188: iconst_0
189: invokevirtual #40
192: ldc           #27
194: invokevirtual #24
197: invokevirtual #26
200: iload         6
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: new           #21
216: dup
217: invokespecial #22
220: ldc           #27
222: invokevirtual #24
225: dload         7
227: invokevirtual #28
230: ldc           #29
232: invokevirtual #24
235: dconst_1
236: invokevirtual #28
239: ldc           #27
241: invokevirtual #24
244: invokevirtual #26
247: dload         7
249: dconst_1
250: dcmpl
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #32
262: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test278
Start line: 5468
End line: 5486
Method source code: 
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(534.2951592545095d);
        int int3 = poissonDistributionImpl1.getDomainLowerBound((-1.264199519017718d));
        double double5 = poissonDistributionImpl1.probability(0.10479227212063016d);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = poissonDistributionImpl1.inverseCumulativeProbability((-0.28727288807984297d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #957
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #958
32: invokespecial #9
35: astore_1
36: aload_1
37: ldc2_w        #960
40: invokevirtual #139
43: istore_2
44: aload_1
45: ldc2_w        #962
48: invokevirtual #44
51: dstore_3
52: aload_1
53: ldc2_w        #458
56: invokevirtual #15
59: istore        5
61: ldc           #16
63: invokestatic  #17
66: goto          111
69: astore        5
71: aload         5
73: invokevirtual #19
76: invokevirtual #20
79: ifne          111
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #23
91: invokevirtual #24
94: aload         5
96: invokevirtual #19
99: invokevirtual #25
102: invokevirtual #24
105: invokevirtual #26
108: invokestatic  #17
111: new           #21
114: dup
115: invokespecial #22
118: ldc           #27
120: invokevirtual #24
123: iload_2
124: invokevirtual #40
127: ldc           #29
129: invokevirtual #24
132: iconst_0
133: invokevirtual #40
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: iload_2
145: ifne          152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #32
156: new           #21
159: dup
160: invokespecial #22
163: ldc           #27
165: invokevirtual #24
168: dload_3
169: invokevirtual #28
172: ldc           #29
174: invokevirtual #24
177: dconst_0
178: invokevirtual #28
181: ldc           #27
183: invokevirtual #24
186: invokevirtual #26
189: dload_3
190: dconst_0
191: dcmpl
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #32
203: return
Exception table:
from    to  target type
52    66    69   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test279
Start line: 5489
End line: 5509
Method source code: 
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = poissonDistributionImpl1.inverseCumulativeProbability((-0.23966948306718705d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #964
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: ldc2_w        #965
58: invokevirtual #15
61: istore        6
63: ldc           #16
65: invokestatic  #17
68: goto          113
71: astore        6
73: aload         6
75: invokevirtual #19
78: invokevirtual #20
81: ifne          113
84: new           #21
87: dup
88: invokespecial #22
91: ldc           #23
93: invokevirtual #24
96: aload         6
98: invokevirtual #19
101: invokevirtual #25
104: invokevirtual #24
107: invokevirtual #26
110: invokestatic  #17
113: new           #21
116: dup
117: invokespecial #22
120: ldc           #27
122: invokevirtual #24
125: dload_2
126: invokevirtual #28
129: ldc           #29
131: invokevirtual #24
134: ldc2_w        #47
137: invokevirtual #28
140: ldc           #27
142: invokevirtual #24
145: invokevirtual #26
148: dload_2
149: ldc2_w        #47
152: dcmpl
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #32
164: aload         4
166: invokestatic  #77
169: new           #21
172: dup
173: invokespecial #22
176: ldc           #27
178: invokevirtual #24
181: iload         5
183: invokevirtual #40
186: ldc           #29
188: invokevirtual #24
191: iconst_m1
192: invokevirtual #40
195: ldc           #27
197: invokevirtual #24
200: invokevirtual #26
203: iload         5
205: iconst_m1
206: if_icmpne     213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #32
217: return
Exception table:
from    to  target type
54    68    71   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test280
Start line: 5512
End line: 5516
Method source code: 
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.6381480754000609d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #967
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #968
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test281
Start line: 5519
End line: 5525
Method source code: 
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int2 = poissonDistributionImpl1.sample();
// flaky:         org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #970
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: invokevirtual #61
38: istore_2
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test282
Start line: 5528
End line: 5555
Method source code: 
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        randomDataImpl17.reSeedSecure();
        // The following exception was thrown during execution in test generation
        try {
            double double20 = randomDataImpl17.nextExponential(0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): mean (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #971
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload         12
97: invokevirtual #972
100: aload         12
102: dconst_0
103: invokevirtual #203
106: dstore        13
108: ldc           #51
110: invokestatic  #17
113: goto          118
116: astore        13
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload_2
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #30
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload_2
154: ldc2_w        #30
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #32
169: new           #21
172: dup
173: invokespecial #22
176: ldc           #27
178: invokevirtual #24
181: dload         4
183: invokevirtual #28
186: ldc           #29
188: invokevirtual #24
191: ldc2_w        #45
194: invokevirtual #28
197: ldc           #27
199: invokevirtual #24
202: invokevirtual #26
205: dload         4
207: ldc2_w        #45
210: dcmpl
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #32
222: new           #21
225: dup
226: invokespecial #22
229: ldc           #27
231: invokevirtual #24
234: dload         6
236: invokevirtual #28
239: ldc           #29
241: invokevirtual #24
244: ldc2_w        #87
247: invokevirtual #28
250: ldc           #27
252: invokevirtual #24
255: invokevirtual #26
258: dload         6
260: ldc2_w        #87
263: dcmpl
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #32
275: new           #21
278: dup
279: invokespecial #22
282: ldc           #27
284: invokevirtual #24
287: dload         8
289: invokevirtual #28
292: ldc           #29
294: invokevirtual #24
297: ldc2_w        #45
300: invokevirtual #28
303: ldc           #27
305: invokevirtual #24
308: invokevirtual #26
311: dload         8
313: ldc2_w        #45
316: dcmpl
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #32
328: new           #21
331: dup
332: invokespecial #22
335: ldc           #27
337: invokevirtual #24
340: iload         10
342: invokevirtual #40
345: ldc           #29
347: invokevirtual #24
350: iconst_0
351: invokevirtual #40
354: ldc           #27
356: invokevirtual #24
359: invokevirtual #26
362: iload         10
364: ifne          371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #32
375: new           #21
378: dup
379: invokespecial #22
382: ldc           #27
384: invokevirtual #24
387: iload         11
389: invokevirtual #40
392: ldc           #29
394: invokevirtual #24
397: iconst_0
398: invokevirtual #40
401: ldc           #27
403: invokevirtual #24
406: invokevirtual #26
409: iload         11
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #32
422: aload         12
424: invokestatic  #77
427: return
Exception table:
from    to  target type
100   113   116   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test283
Start line: 5558
End line: 5571
Method source code: 
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(5.1682037937235705d, 0.0d, (int) (short) 1);
        double double4 = poissonDistributionImpl3.getMean();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl3.cumulativeProbability((-1.0113603355998957d), 0.8184513581243977d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 5.168");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 5.1682037937235705d + "'", double4 == 5.1682037937235705d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #973
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #974
32: dconst_0
33: iconst_1
34: invokespecial #97
37: astore_1
38: aload_1
39: invokevirtual #102
42: dstore_2
43: aload_1
44: ldc2_w        #976
47: ldc2_w        #978
50: invokevirtual #12
53: dstore        4
55: ldc_w         #980
58: invokestatic  #17
61: goto          66
64: astore        4
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #974
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #974
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: return
Exception table:
from    to  target type
43    61    64   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test284
Start line: 5574
End line: 5596
Method source code: 
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double14 = poissonDistributionImpl1.cumulativeProbability(2147483647);
        double double16 = poissonDistributionImpl1.cumulativeProbability(2);
        int[] intArray18 = poissonDistributionImpl1.sample(24);
        double double20 = poissonDistributionImpl1.probability(96);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.919698602928607d + "'", double16 == 0.919698602928607d);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 3]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.709666497917257E-151d + "'", double20 == 3.709666497917257E-151d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #981
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: ldc           #41
78: invokevirtual #43
81: dstore        10
83: aload_1
84: iconst_2
85: invokevirtual #43
88: dstore        12
90: aload_1
91: bipush        24
93: invokevirtual #184
96: astore        14
98: aload_1
99: bipush        96
101: invokevirtual #54
104: dstore        15
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: dload_2
119: invokevirtual #28
122: ldc           #29
124: invokevirtual #24
127: ldc2_w        #47
130: invokevirtual #28
133: ldc           #27
135: invokevirtual #24
138: invokevirtual #26
141: dload_2
142: ldc2_w        #47
145: dcmpl
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #32
157: new           #21
160: dup
161: invokespecial #22
164: ldc           #27
166: invokevirtual #24
169: dload         4
171: invokevirtual #28
174: ldc           #29
176: invokevirtual #24
179: dconst_1
180: invokevirtual #28
183: ldc           #27
185: invokevirtual #24
188: invokevirtual #26
191: dload         4
193: dconst_1
194: dcmpl
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #32
206: new           #21
209: dup
210: invokespecial #22
213: ldc           #27
215: invokevirtual #24
218: dload         6
220: invokevirtual #28
223: ldc           #29
225: invokevirtual #24
228: ldc2_w        #69
231: invokevirtual #28
234: ldc           #27
236: invokevirtual #24
239: invokevirtual #26
242: dload         6
244: ldc2_w        #69
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #32
259: new           #21
262: dup
263: invokespecial #22
266: ldc           #27
268: invokevirtual #24
271: dload         8
273: invokevirtual #28
276: ldc           #29
278: invokevirtual #24
281: dconst_0
282: invokevirtual #28
285: ldc           #27
287: invokevirtual #24
290: invokevirtual #26
293: dload         8
295: dconst_0
296: dcmpl
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #32
308: new           #21
311: dup
312: invokespecial #22
315: ldc           #27
317: invokevirtual #24
320: dload         10
322: invokevirtual #28
325: ldc           #29
327: invokevirtual #24
330: dconst_1
331: invokevirtual #28
334: ldc           #27
336: invokevirtual #24
339: invokevirtual #26
342: dload         10
344: dconst_1
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #32
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: dload         12
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: ldc2_w        #731
382: invokevirtual #28
385: ldc           #27
387: invokevirtual #24
390: invokevirtual #26
393: dload         12
395: ldc2_w        #731
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #32
410: aload         14
412: invokestatic  #77
415: aload         14
417: invokestatic  #362
420: ldc_w         #982
423: invokestatic  #364
426: new           #21
429: dup
430: invokespecial #22
433: ldc           #27
435: invokevirtual #24
438: dload         15
440: invokevirtual #28
443: ldc           #29
445: invokevirtual #24
448: ldc2_w        #983
451: invokevirtual #28
454: ldc           #27
456: invokevirtual #24
459: invokevirtual #26
462: dload         15
464: ldc2_w        #983
467: dcmpl
468: ifne          475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #32
479: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test285
Start line: 5599
End line: 5617
Method source code: 
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        double double12 = poissonDistributionImpl1.probability(100);
        double double15 = poissonDistributionImpl1.cumulativeProbability((-1), 3258243);
        double double16 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #985
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: bipush        100
71: invokevirtual #54
74: dstore        10
76: aload_1
77: iconst_m1
78: ldc_w         #851
81: invokevirtual #64
84: dstore        12
86: aload_1
87: invokevirtual #102
90: dstore        14
92: new           #21
95: dup
96: invokespecial #22
99: ldc           #27
101: invokevirtual #24
104: dload_2
105: invokevirtual #28
108: ldc           #29
110: invokevirtual #24
113: ldc2_w        #47
116: invokevirtual #28
119: ldc           #27
121: invokevirtual #24
124: invokevirtual #26
127: dload_2
128: ldc2_w        #47
131: dcmpl
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #32
143: new           #21
146: dup
147: invokespecial #22
150: ldc           #27
152: invokevirtual #24
155: dload         4
157: invokevirtual #28
160: ldc           #29
162: invokevirtual #24
165: dconst_1
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: dconst_1
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload         6
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: ldc2_w        #69
217: invokevirtual #28
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: dload         6
230: ldc2_w        #69
233: dcmpl
234: ifne          241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #32
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: dload         8
259: invokevirtual #28
262: ldc           #29
264: invokevirtual #24
267: dconst_0
268: invokevirtual #28
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: dload         8
281: dconst_0
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         10
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: ldc2_w        #47
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         10
332: ldc2_w        #47
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         12
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: dconst_1
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         12
383: dconst_1
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: new           #21
399: dup
400: invokespecial #22
403: ldc           #27
405: invokevirtual #24
408: dload         14
410: invokevirtual #28
413: ldc           #29
415: invokevirtual #24
418: dconst_1
419: invokevirtual #28
422: ldc           #27
424: invokevirtual #24
427: invokevirtual #26
430: dload         14
432: dconst_1
433: dcmpl
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #32
445: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test286
Start line: 5620
End line: 5632
Method source code: 
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        int int6 = poissonDistributionImpl2.getDomainLowerBound((-0.17739400468773303d));
        double double8 = poissonDistributionImpl2.cumulativeProbability(1.1643428520428265d);
        int int10 = poissonDistributionImpl2.getDomainLowerBound((-0.7544489644994905d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.3834479069238827E-21d + "'", double8 == 1.3834479069238827E-21d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #986
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: ldc2_w        #580
48: invokevirtual #139
51: istore        4
53: aload_1
54: ldc2_w        #582
57: invokevirtual #141
60: dstore        5
62: aload_1
63: ldc2_w        #987
66: invokevirtual #139
69: istore        7
71: new           #21
74: dup
75: invokespecial #22
78: ldc           #27
80: invokevirtual #24
83: dload_2
84: invokevirtual #28
87: ldc           #29
89: invokevirtual #24
92: dconst_0
93: invokevirtual #28
96: ldc           #27
98: invokevirtual #24
101: invokevirtual #26
104: dload_2
105: dconst_0
106: dcmpl
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #32
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: iload         4
132: invokevirtual #40
135: ldc           #29
137: invokevirtual #24
140: iconst_0
141: invokevirtual #40
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: iload         4
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #32
165: new           #21
168: dup
169: invokespecial #22
172: ldc           #27
174: invokevirtual #24
177: dload         5
179: invokevirtual #28
182: ldc           #29
184: invokevirtual #24
187: ldc2_w        #586
190: invokevirtual #28
193: ldc           #27
195: invokevirtual #24
198: invokevirtual #26
201: dload         5
203: ldc2_w        #586
206: dcmpl
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #32
218: new           #21
221: dup
222: invokespecial #22
225: ldc           #27
227: invokevirtual #24
230: iload         7
232: invokevirtual #40
235: ldc           #29
237: invokevirtual #24
240: iconst_0
241: invokevirtual #40
244: ldc           #27
246: invokevirtual #24
249: invokevirtual #26
252: iload         7
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #32
265: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test287
Start line: 5635
End line: 5647
Method source code: 
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        int int8 = poissonDistributionImpl1.getDomainLowerBound((-0.9501789451592945d));
        int int9 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #989
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #216
55: invokevirtual #139
58: istore        6
60: aload_1
61: invokevirtual #61
64: istore        7
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #47
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #47
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: dconst_1
140: invokevirtual #28
143: ldc           #27
145: invokevirtual #24
148: invokevirtual #26
151: dload         4
153: dconst_1
154: dcmpl
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: iload         6
180: invokevirtual #40
183: ldc           #29
185: invokevirtual #24
188: iconst_0
189: invokevirtual #40
192: ldc           #27
194: invokevirtual #24
197: invokevirtual #26
200: iload         6
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test288
Start line: 5650
End line: 5666
Method source code: 
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        double double13 = randomDataImpl7.nextWeibull((double) 49, 0.708228680388187d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.0878348688850714d + "'", double10 == 2.0878348688850714d);
// flaky:         org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.6995007389818411d + "'", double13 == 0.6995007389818411d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #990
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: ldc2_w        #991
78: ldc2_w        #993
81: invokevirtual #200
84: dstore        9
86: new           #21
89: dup
90: invokespecial #22
93: ldc           #27
95: invokevirtual #24
98: dload_2
99: invokevirtual #28
102: ldc           #29
104: invokevirtual #24
107: ldc2_w        #47
110: invokevirtual #28
113: ldc           #27
115: invokevirtual #24
118: invokevirtual #26
121: dload_2
122: ldc2_w        #47
125: dcmpl
126: ifne          133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #32
137: aload         4
139: invokestatic  #77
142: new           #21
145: dup
146: invokespecial #22
149: ldc           #27
151: invokevirtual #24
154: iload         5
156: invokevirtual #40
159: ldc           #29
161: invokevirtual #24
164: iconst_m1
165: invokevirtual #40
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: iload         5
178: iconst_m1
179: if_icmpne     186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #32
190: aload         6
192: invokestatic  #77
195: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test289
Start line: 5669
End line: 5680
Method source code: 
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        int int3 = poissonDistributionImpl1.getDomainUpperBound((double) (short) 0);
        double double4 = poissonDistributionImpl1.getMean();
        int[] intArray6 = poissonDistributionImpl1.sample(52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(intArray6);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 2, 1, 1, 0, 3, 0, 0, 0, 0, 0, 1, 2, 0, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 0, 0, 1, 5, 0, 0, 0, 2, 3, 0, 1, 2, 1, 2, 1, 0, 2, 1, 2, 2, 0, 0, 1, 0, 0, 0, 1, 2]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #995
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #34
39: istore_2
40: aload_1
41: invokevirtual #102
44: dstore_3
45: aload_1
46: bipush        52
48: invokevirtual #184
51: astore        5
53: new           #21
56: dup
57: invokespecial #22
60: ldc           #27
62: invokevirtual #24
65: iload_2
66: invokevirtual #40
69: ldc           #29
71: invokevirtual #24
74: ldc           #41
76: invokevirtual #40
79: ldc           #27
81: invokevirtual #24
84: invokevirtual #26
87: iload_2
88: ldc           #41
90: if_icmpne     97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #32
101: new           #21
104: dup
105: invokespecial #22
108: ldc           #27
110: invokevirtual #24
113: dload_3
114: invokevirtual #28
117: ldc           #29
119: invokevirtual #24
122: dconst_1
123: invokevirtual #28
126: ldc           #27
128: invokevirtual #24
131: invokevirtual #26
134: dload_3
135: dconst_1
136: dcmpl
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #32
148: aload         5
150: invokestatic  #77
153: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test290
Start line: 5683
End line: 5712
Method source code: 
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double17 = poissonDistributionImpl9.cumulativeProbability(10000000);
        double double19 = poissonDistributionImpl9.normalApproximateProbability((-1));
        int int21 = poissonDistributionImpl9.getDomainUpperBound(0.0d);
        double double23 = poissonDistributionImpl9.cumulativeProbability(7);
        int int24 = poissonDistributionImpl9.sample();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 537.6537736743788d + "'", double7 == 537.6537736743788d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.06680720126885803d + "'", double19 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9999897508033253d + "'", double23 == 0.9999897508033253d);
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #996
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         9
108: ldc           #225
110: invokevirtual #43
113: dstore        15
115: aload         9
117: iconst_m1
118: invokevirtual #63
121: dstore        17
123: aload         9
125: dconst_0
126: invokevirtual #34
129: istore        19
131: aload         9
133: bipush        7
135: invokevirtual #43
138: dstore        20
140: aload         9
142: invokevirtual #61
145: istore        22
147: new           #21
150: dup
151: invokespecial #22
154: ldc           #27
156: invokevirtual #24
159: dload_2
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: dconst_0
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload_2
181: dconst_0
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         4
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #118
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         4
232: ldc2_w        #118
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: aload         6
249: invokestatic  #77
252: new           #21
255: dup
256: invokespecial #22
259: ldc           #27
261: invokevirtual #24
264: dload         10
266: invokevirtual #28
269: ldc           #29
271: invokevirtual #24
274: ldc2_w        #47
277: invokevirtual #28
280: ldc           #27
282: invokevirtual #24
285: invokevirtual #26
288: dload         10
290: ldc2_w        #47
293: dcmpl
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: dload         12
319: invokevirtual #28
322: ldc           #29
324: invokevirtual #24
327: dconst_1
328: invokevirtual #28
331: ldc           #27
333: invokevirtual #24
336: invokevirtual #26
339: dload         12
341: dconst_1
342: dcmpl
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #32
354: new           #21
357: dup
358: invokespecial #22
361: ldc           #27
363: invokevirtual #24
366: dload         15
368: invokevirtual #28
371: ldc           #29
373: invokevirtual #24
376: dconst_1
377: invokevirtual #28
380: ldc           #27
382: invokevirtual #24
385: invokevirtual #26
388: dload         15
390: dconst_1
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #32
403: new           #21
406: dup
407: invokespecial #22
410: ldc           #27
412: invokevirtual #24
415: dload         17
417: invokevirtual #28
420: ldc           #29
422: invokevirtual #24
425: ldc2_w        #87
428: invokevirtual #28
431: ldc           #27
433: invokevirtual #24
436: invokevirtual #26
439: dload         17
441: ldc2_w        #87
444: dcmpl
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #32
456: new           #21
459: dup
460: invokespecial #22
463: ldc           #27
465: invokevirtual #24
468: iload         19
470: invokevirtual #40
473: ldc           #29
475: invokevirtual #24
478: ldc           #41
480: invokevirtual #40
483: ldc           #27
485: invokevirtual #24
488: invokevirtual #26
491: iload         19
493: ldc           #41
495: if_icmpne     502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #32
506: new           #21
509: dup
510: invokespecial #22
513: ldc           #27
515: invokevirtual #24
518: dload         20
520: invokevirtual #28
523: ldc           #29
525: invokevirtual #24
528: ldc2_w        #483
531: invokevirtual #28
534: ldc           #27
536: invokevirtual #24
539: invokevirtual #26
542: dload         20
544: ldc2_w        #483
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #32
559: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test291
Start line: 5715
End line: 5719
Method source code: 
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(1.3325218072717584d, 0.0d, (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #997
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #998
32: dconst_0
33: iconst_m1
34: invokespecial #97
37: astore_1
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test292
Start line: 5722
End line: 5734
Method source code: 
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) 1);
        int int10 = poissonDistributionImpl1.getDomainUpperBound((double) 10);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.691462461274013d + "'", double8 == 0.691462461274013d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1000
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: ldc2_w        #13
61: invokevirtual #34
64: istore        8
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: ldc2_w        #30
90: invokevirtual #28
93: ldc           #27
95: invokevirtual #24
98: invokevirtual #26
101: dload_2
102: ldc2_w        #30
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #45
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload         4
155: ldc2_w        #45
158: dcmpl
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #32
170: new           #21
173: dup
174: invokespecial #22
177: ldc           #27
179: invokevirtual #24
182: dload         6
184: invokevirtual #28
187: ldc           #29
189: invokevirtual #24
192: ldc2_w        #1001
195: invokevirtual #28
198: ldc           #27
200: invokevirtual #24
203: invokevirtual #26
206: dload         6
208: ldc2_w        #1001
211: dcmpl
212: ifne          219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #32
223: new           #21
226: dup
227: invokespecial #22
230: ldc           #27
232: invokevirtual #24
235: iload         8
237: invokevirtual #40
240: ldc           #29
242: invokevirtual #24
245: ldc           #41
247: invokevirtual #40
250: ldc           #27
252: invokevirtual #24
255: invokevirtual #26
258: iload         8
260: ldc           #41
262: if_icmpne     269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #32
273: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test293
Start line: 5737
End line: 5753
Method source code: 
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.cumulativeProbability(10);
        double double6 = poissonDistributionImpl1.getMean();
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainLowerBound(0.0d);
        double double11 = poissonDistributionImpl1.normalApproximateProbability(1565197);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9999999899522336d + "'", double5 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1003
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: bipush        10
44: invokevirtual #43
47: dstore        4
49: aload_1
50: invokevirtual #102
53: dstore        6
55: aload_1
56: invokevirtual #61
59: istore        8
61: aload_1
62: dconst_0
63: invokevirtual #139
66: istore        9
68: aload_1
69: ldc_w         #420
72: invokevirtual #63
75: dstore        10
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_2
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: ldc2_w        #47
101: invokevirtual #28
104: ldc           #27
106: invokevirtual #24
109: invokevirtual #26
112: dload_2
113: ldc2_w        #47
116: dcmpl
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #32
128: new           #21
131: dup
132: invokespecial #22
135: ldc           #27
137: invokevirtual #24
140: dload         4
142: invokevirtual #28
145: ldc           #29
147: invokevirtual #24
150: ldc2_w        #178
153: invokevirtual #28
156: ldc           #27
158: invokevirtual #24
161: invokevirtual #26
164: dload         4
166: ldc2_w        #178
169: dcmpl
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #32
181: new           #21
184: dup
185: invokespecial #22
188: ldc           #27
190: invokevirtual #24
193: dload         6
195: invokevirtual #28
198: ldc           #29
200: invokevirtual #24
203: dconst_1
204: invokevirtual #28
207: ldc           #27
209: invokevirtual #24
212: invokevirtual #26
215: dload         6
217: dconst_1
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: iload         9
244: invokevirtual #40
247: ldc           #29
249: invokevirtual #24
252: iconst_0
253: invokevirtual #40
256: ldc           #27
258: invokevirtual #24
261: invokevirtual #26
264: iload         9
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #32
277: new           #21
280: dup
281: invokespecial #22
284: ldc           #27
286: invokevirtual #24
289: dload         10
291: invokevirtual #28
294: ldc           #29
296: invokevirtual #24
299: dconst_1
300: invokevirtual #28
303: ldc           #27
305: invokevirtual #24
308: invokevirtual #26
311: dload         10
313: dconst_1
314: dcmpl
315: ifne          322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #32
326: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test294
Start line: 5756
End line: 5772
Method source code: 
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5d, 0.10400365104880639d, (int) (short) 1);
        int[] intArray5 = poissonDistributionImpl3.sample(100);
        double double7 = poissonDistributionImpl3.probability((-0.00810260350101137d));
        // The following exception was thrown during execution in test generation
        try {
            double double9 = poissonDistributionImpl3.cumulativeProbability(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (1) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 2, 1, 1, 1, 1, 0, 0, 1, 2, 1, 1, 1, 0, 1, 1, 3, 3, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2, 0, 1, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 2, 1, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1004
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #269
32: ldc2_w        #271
35: iconst_1
36: invokespecial #97
39: astore_1
40: aload_1
41: bipush        100
43: invokevirtual #184
46: astore_2
47: aload_1
48: ldc2_w        #1005
51: invokevirtual #44
54: dstore_3
55: aload_1
56: iconst_0
57: invokevirtual #43
60: dstore        5
62: ldc_w         #460
65: invokestatic  #17
68: goto          73
71: astore        5
73: aload_2
74: invokestatic  #77
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_3
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: dconst_0
99: invokevirtual #28
102: ldc           #27
104: invokevirtual #24
107: invokevirtual #26
110: dload_3
111: dconst_0
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: return
Exception table:
from    to  target type
55    68    71   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test295
Start line: 5775
End line: 5789
Method source code: 
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.probability(1.131024151762108d);
        double double12 = poissonDistributionImpl1.cumulativeProbability((int) (short) 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.7357588823428858d + "'", double12 == 0.7357588823428858d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1007
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: ldc2_w        #753
61: invokevirtual #44
64: dstore        8
66: aload_1
67: iconst_1
68: invokevirtual #43
71: dstore        10
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #27
82: invokevirtual #24
85: dload_2
86: invokevirtual #28
89: ldc           #29
91: invokevirtual #24
94: ldc2_w        #30
97: invokevirtual #28
100: ldc           #27
102: invokevirtual #24
105: invokevirtual #26
108: dload_2
109: ldc2_w        #30
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #45
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #45
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: ldc2_w        #87
202: invokevirtual #28
205: ldc           #27
207: invokevirtual #24
210: invokevirtual #26
213: dload         6
215: ldc2_w        #87
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: dload         8
244: invokevirtual #28
247: ldc           #29
249: invokevirtual #24
252: dconst_0
253: invokevirtual #28
256: ldc           #27
258: invokevirtual #24
261: invokevirtual #26
264: dload         8
266: dconst_0
267: dcmpl
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: dload         10
293: invokevirtual #28
296: ldc           #29
298: invokevirtual #24
301: ldc2_w        #187
304: invokevirtual #28
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: dload         10
317: ldc2_w        #187
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test296
Start line: 5792
End line: 5824
Method source code: 
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        double double4 = randomDataImpl1.nextUniform((-0.7853981633974483d), 0.962217362072003d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl6 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double8 = poissonDistributionImpl6.probability(100);
        double double10 = poissonDistributionImpl6.normalApproximateProbability(2147483647);
        double double13 = poissonDistributionImpl6.cumulativeProbability((int) (short) 10, 2147483647);
        double double15 = poissonDistributionImpl6.probability((-1.207854600801523d));
        double double17 = poissonDistributionImpl6.probability(100);
        int int19 = poissonDistributionImpl6.inverseCumulativeProbability(0.06680720126885803d);
        int int20 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl6);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = poissonDistributionImpl6.inverseCumulativeProbability((-1.7942705279814837d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
// flaky:         org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.35215382870601053d) + "'", double4 == (-0.35215382870601053d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.941866060050443E-159d + "'", double8 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.1142547828857374E-7d + "'", double13 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.941866060050443E-159d + "'", double17 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1008
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: aload_2
37: ldc2_w        #130
40: ldc2_w        #746
43: invokevirtual #351
46: dstore_3
47: new           #8
50: dup
51: dconst_1
52: invokespecial #9
55: astore        5
57: aload         5
59: bipush        100
61: invokevirtual #54
64: dstore        6
66: aload         5
68: ldc           #41
70: invokevirtual #63
73: dstore        8
75: aload         5
77: bipush        10
79: ldc           #41
81: invokevirtual #64
84: dstore        10
86: aload         5
88: ldc2_w        #65
91: invokevirtual #44
94: dstore        12
96: aload         5
98: bipush        100
100: invokevirtual #54
103: dstore        14
105: aload         5
107: ldc2_w        #87
110: invokevirtual #15
113: istore        16
115: aload_2
116: aload         5
118: invokevirtual #116
121: istore        17
123: aload         5
125: ldc2_w        #613
128: invokevirtual #15
131: istore        18
133: ldc           #16
135: invokestatic  #17
138: goto          183
141: astore        18
143: aload         18
145: invokevirtual #19
148: invokevirtual #20
151: ifne          183
154: new           #21
157: dup
158: invokespecial #22
161: ldc           #23
163: invokevirtual #24
166: aload         18
168: invokevirtual #19
171: invokevirtual #25
174: invokevirtual #24
177: invokevirtual #26
180: invokestatic  #17
183: new           #21
186: dup
187: invokespecial #22
190: ldc           #27
192: invokevirtual #24
195: dload         6
197: invokevirtual #28
200: ldc           #29
202: invokevirtual #24
205: ldc2_w        #47
208: invokevirtual #28
211: ldc           #27
213: invokevirtual #24
216: invokevirtual #26
219: dload         6
221: ldc2_w        #47
224: dcmpl
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #32
236: new           #21
239: dup
240: invokespecial #22
243: ldc           #27
245: invokevirtual #24
248: dload         8
250: invokevirtual #28
253: ldc           #29
255: invokevirtual #24
258: dconst_1
259: invokevirtual #28
262: ldc           #27
264: invokevirtual #24
267: invokevirtual #26
270: dload         8
272: dconst_1
273: dcmpl
274: ifne          281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #32
285: new           #21
288: dup
289: invokespecial #22
292: ldc           #27
294: invokevirtual #24
297: dload         10
299: invokevirtual #28
302: ldc           #29
304: invokevirtual #24
307: ldc2_w        #69
310: invokevirtual #28
313: ldc           #27
315: invokevirtual #24
318: invokevirtual #26
321: dload         10
323: ldc2_w        #69
326: dcmpl
327: ifne          334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #32
338: new           #21
341: dup
342: invokespecial #22
345: ldc           #27
347: invokevirtual #24
350: dload         12
352: invokevirtual #28
355: ldc           #29
357: invokevirtual #24
360: dconst_0
361: invokevirtual #28
364: ldc           #27
366: invokevirtual #24
369: invokevirtual #26
372: dload         12
374: dconst_0
375: dcmpl
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #32
387: new           #21
390: dup
391: invokespecial #22
394: ldc           #27
396: invokevirtual #24
399: dload         14
401: invokevirtual #28
404: ldc           #29
406: invokevirtual #24
409: ldc2_w        #47
412: invokevirtual #28
415: ldc           #27
417: invokevirtual #24
420: invokevirtual #26
423: dload         14
425: ldc2_w        #47
428: dcmpl
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #32
440: new           #21
443: dup
444: invokespecial #22
447: ldc           #27
449: invokevirtual #24
452: iload         16
454: invokevirtual #40
457: ldc           #29
459: invokevirtual #24
462: iconst_m1
463: invokevirtual #40
466: ldc           #27
468: invokevirtual #24
471: invokevirtual #26
474: iload         16
476: iconst_m1
477: if_icmpne     484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #32
488: return
Exception table:
from    to  target type
123   138   141   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test297
Start line: 5827
End line: 5847
Method source code: 
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl14 = poissonDistributionImpl1.randomData;
        double double16 = poissonDistributionImpl1.probability(56);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertNotNull(randomDataImpl14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 5.174123373539009E-76d + "'", double16 == 5.174123373539009E-76d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1009
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: getfield      #72
85: astore        11
87: aload_1
88: bipush        56
90: invokevirtual #54
93: dstore        12
95: new           #21
98: dup
99: invokespecial #22
102: ldc           #27
104: invokevirtual #24
107: dload_2
108: invokevirtual #28
111: ldc           #29
113: invokevirtual #24
116: ldc2_w        #47
119: invokevirtual #28
122: ldc           #27
124: invokevirtual #24
127: invokevirtual #26
130: dload_2
131: ldc2_w        #47
134: dcmpl
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #32
146: new           #21
149: dup
150: invokespecial #22
153: ldc           #27
155: invokevirtual #24
158: dload         4
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: dconst_1
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload         4
182: dconst_1
183: dcmpl
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #32
195: new           #21
198: dup
199: invokespecial #22
202: ldc           #27
204: invokevirtual #24
207: iload         6
209: invokevirtual #40
212: ldc           #29
214: invokevirtual #24
217: ldc           #41
219: invokevirtual #40
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: iload         6
232: ldc           #41
234: if_icmpne     241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #32
245: new           #21
248: dup
249: invokespecial #22
252: ldc           #27
254: invokevirtual #24
257: iload         7
259: invokevirtual #40
262: ldc           #29
264: invokevirtual #24
267: iconst_0
268: invokevirtual #40
271: ldc           #27
273: invokevirtual #24
276: invokevirtual #26
279: iload         7
281: ifne          288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #32
292: new           #21
295: dup
296: invokespecial #22
299: ldc           #27
301: invokevirtual #24
304: dload         9
306: invokevirtual #28
309: ldc           #29
311: invokevirtual #24
314: ldc2_w        #45
317: invokevirtual #28
320: ldc           #27
322: invokevirtual #24
325: invokevirtual #26
328: dload         9
330: ldc2_w        #45
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #32
345: aload         11
347: invokestatic  #77
350: new           #21
353: dup
354: invokespecial #22
357: ldc           #27
359: invokevirtual #24
362: dload         12
364: invokevirtual #28
367: ldc           #29
369: invokevirtual #24
372: ldc2_w        #1010
375: invokevirtual #28
378: ldc           #27
380: invokevirtual #24
383: invokevirtual #26
386: dload         12
388: ldc2_w        #1010
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #32
403: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test298
Start line: 5850
End line: 5864
Method source code: 
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        double double5 = poissonDistributionImpl2.getMean();
        double double7 = poissonDistributionImpl2.cumulativeProbability(31);
        double double9 = poissonDistributionImpl2.probability(1108008);
        double double12 = poissonDistributionImpl2.cumulativeProbability(35, 37);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 52.0d + "'", double5 == 52.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0011662327595916614d + "'", double7 == 0.0011662327595916614d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.012981155574234595d + "'", double12 == 0.012981155574234595d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1012
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: invokevirtual #102
48: dstore        4
50: aload_1
51: bipush        31
53: invokevirtual #43
56: dstore        6
58: aload_1
59: ldc_w         #1013
62: invokevirtual #54
65: dstore        8
67: aload_1
68: bipush        35
70: bipush        37
72: invokevirtual #64
75: dstore        10
77: new           #21
80: dup
81: invokespecial #22
84: ldc           #27
86: invokevirtual #24
89: dload_2
90: invokevirtual #28
93: ldc           #29
95: invokevirtual #24
98: dconst_0
99: invokevirtual #28
102: ldc           #27
104: invokevirtual #24
107: invokevirtual #26
110: dload_2
111: dconst_0
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #223
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #223
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: new           #21
180: dup
181: invokespecial #22
184: ldc           #27
186: invokevirtual #24
189: dload         6
191: invokevirtual #28
194: ldc           #29
196: invokevirtual #24
199: ldc2_w        #1014
202: invokevirtual #28
205: ldc           #27
207: invokevirtual #24
210: invokevirtual #26
213: dload         6
215: ldc2_w        #1014
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: new           #21
233: dup
234: invokespecial #22
237: ldc           #27
239: invokevirtual #24
242: dload         8
244: invokevirtual #28
247: ldc           #29
249: invokevirtual #24
252: dconst_0
253: invokevirtual #28
256: ldc           #27
258: invokevirtual #24
261: invokevirtual #26
264: dload         8
266: dconst_0
267: dcmpl
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: dload         10
293: invokevirtual #28
296: ldc           #29
298: invokevirtual #24
301: ldc2_w        #1016
304: invokevirtual #28
307: ldc           #27
309: invokevirtual #24
312: invokevirtual #26
315: dload         10
317: ldc2_w        #1016
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #32
332: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test299
Start line: 5867
End line: 5895
Method source code: 
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        double double14 = poissonDistributionImpl1.getMean();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = poissonDistributionImpl1.inverseCumulativeProbability(79.87449132856135d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1018
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload_1
81: invokevirtual #102
84: dstore        13
86: aload_1
87: ldc2_w        #1019
90: invokevirtual #15
93: istore        15
95: ldc           #16
97: invokestatic  #17
100: goto          145
103: astore        15
105: aload         15
107: invokevirtual #19
110: invokevirtual #20
113: ifne          145
116: new           #21
119: dup
120: invokespecial #22
123: ldc           #23
125: invokevirtual #24
128: aload         15
130: invokevirtual #19
133: invokevirtual #25
136: invokevirtual #24
139: invokevirtual #26
142: invokestatic  #17
145: new           #21
148: dup
149: invokespecial #22
152: ldc           #27
154: invokevirtual #24
157: dload_2
158: invokevirtual #28
161: ldc           #29
163: invokevirtual #24
166: ldc2_w        #30
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload_2
181: ldc2_w        #30
184: dcmpl
185: ifne          192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #32
196: new           #21
199: dup
200: invokespecial #22
203: ldc           #27
205: invokevirtual #24
208: dload         4
210: invokevirtual #28
213: ldc           #29
215: invokevirtual #24
218: ldc2_w        #45
221: invokevirtual #28
224: ldc           #27
226: invokevirtual #24
229: invokevirtual #26
232: dload         4
234: ldc2_w        #45
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #32
249: new           #21
252: dup
253: invokespecial #22
256: ldc           #27
258: invokevirtual #24
261: dload         6
263: invokevirtual #28
266: ldc           #29
268: invokevirtual #24
271: ldc2_w        #87
274: invokevirtual #28
277: ldc           #27
279: invokevirtual #24
282: invokevirtual #26
285: dload         6
287: ldc2_w        #87
290: dcmpl
291: ifne          298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #32
302: new           #21
305: dup
306: invokespecial #22
309: ldc           #27
311: invokevirtual #24
314: dload         8
316: invokevirtual #28
319: ldc           #29
321: invokevirtual #24
324: dconst_1
325: invokevirtual #28
328: ldc           #27
330: invokevirtual #24
333: invokevirtual #26
336: dload         8
338: dconst_1
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #32
351: new           #21
354: dup
355: invokespecial #22
358: ldc           #27
360: invokevirtual #24
363: dload         10
365: invokevirtual #28
368: ldc           #29
370: invokevirtual #24
373: ldc2_w        #47
376: invokevirtual #28
379: ldc           #27
381: invokevirtual #24
384: invokevirtual #26
387: dload         10
389: ldc2_w        #47
392: dcmpl
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #32
404: aload         12
406: invokestatic  #77
409: new           #21
412: dup
413: invokespecial #22
416: ldc           #27
418: invokevirtual #24
421: dload         13
423: invokevirtual #28
426: ldc           #29
428: invokevirtual #24
431: dconst_1
432: invokevirtual #28
435: ldc           #27
437: invokevirtual #24
440: invokevirtual #26
443: dload         13
445: dconst_1
446: dcmpl
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #32
458: return
Exception table:
from    to  target type
86   100   103   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test300
Start line: 5898
End line: 5916
Method source code: 
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.inverseCumulativeProbability(0.85822264930882d);
        double double11 = poissonDistributionImpl1.probability(4.762613918721343d);
        int int13 = poissonDistributionImpl1.getDomainUpperBound((-1.7540630599962477d));
        double double15 = poissonDistributionImpl1.probability(0.36744813563931333d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1021
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #237
62: invokevirtual #15
65: istore        7
67: aload_1
68: ldc2_w        #239
71: invokevirtual #44
74: dstore        8
76: aload_1
77: ldc2_w        #284
80: invokevirtual #34
83: istore        10
85: aload_1
86: ldc2_w        #1022
89: invokevirtual #44
92: dstore        11
94: new           #21
97: dup
98: invokespecial #22
101: ldc           #27
103: invokevirtual #24
106: dload_2
107: invokevirtual #28
110: ldc           #29
112: invokevirtual #24
115: ldc2_w        #47
118: invokevirtual #28
121: ldc           #27
123: invokevirtual #24
126: invokevirtual #26
129: dload_2
130: ldc2_w        #47
133: dcmpl
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #32
145: new           #21
148: dup
149: invokespecial #22
152: ldc           #27
154: invokevirtual #24
157: dload         4
159: invokevirtual #28
162: ldc           #29
164: invokevirtual #24
167: dconst_1
168: invokevirtual #28
171: ldc           #27
173: invokevirtual #24
176: invokevirtual #26
179: dload         4
181: dconst_1
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: iload         6
208: invokevirtual #40
211: ldc           #29
213: invokevirtual #24
216: ldc           #41
218: invokevirtual #40
221: ldc           #27
223: invokevirtual #24
226: invokevirtual #26
229: iload         6
231: ldc           #41
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #32
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: iload         7
258: invokevirtual #40
261: ldc           #29
263: invokevirtual #24
266: iconst_1
267: invokevirtual #40
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: iload         7
280: iconst_1
281: if_icmpne     288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #32
292: new           #21
295: dup
296: invokespecial #22
299: ldc           #27
301: invokevirtual #24
304: dload         8
306: invokevirtual #28
309: ldc           #29
311: invokevirtual #24
314: dconst_0
315: invokevirtual #28
318: ldc           #27
320: invokevirtual #24
323: invokevirtual #26
326: dload         8
328: dconst_0
329: dcmpl
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #32
341: new           #21
344: dup
345: invokespecial #22
348: ldc           #27
350: invokevirtual #24
353: iload         10
355: invokevirtual #40
358: ldc           #29
360: invokevirtual #24
363: ldc           #41
365: invokevirtual #40
368: ldc           #27
370: invokevirtual #24
373: invokevirtual #26
376: iload         10
378: ldc           #41
380: if_icmpne     387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #32
391: new           #21
394: dup
395: invokespecial #22
398: ldc           #27
400: invokevirtual #24
403: dload         11
405: invokevirtual #28
408: ldc           #29
410: invokevirtual #24
413: dconst_0
414: invokevirtual #28
417: ldc           #27
419: invokevirtual #24
422: invokevirtual #26
425: dload         11
427: dconst_0
428: dcmpl
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #32
440: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test301
Start line: 5919
End line: 5923
Method source code: 
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl(2.7885009818368958d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1024
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #1025
32: invokespecial #9
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test302
Start line: 5926
End line: 5948
Method source code: 
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        int int9 = poissonDistributionImpl1.getDomainLowerBound((-0.6775270122929458d));
        // The following exception was thrown during execution in test generation
        try {
            int int11 = poissonDistributionImpl1.inverseCumulativeProbability((-0.39922507356677917d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1027
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: dconst_0
51: invokevirtual #15
54: istore        6
56: aload_1
57: ldc2_w        #1028
60: invokevirtual #139
63: istore        7
65: aload_1
66: ldc2_w        #1030
69: invokevirtual #15
72: istore        8
74: ldc           #16
76: invokestatic  #17
79: goto          124
82: astore        8
84: aload         8
86: invokevirtual #19
89: invokevirtual #20
92: ifne          124
95: new           #21
98: dup
99: invokespecial #22
102: ldc           #23
104: invokevirtual #24
107: aload         8
109: invokevirtual #19
112: invokevirtual #25
115: invokevirtual #24
118: invokevirtual #26
121: invokestatic  #17
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload_2
137: invokevirtual #28
140: ldc           #29
142: invokevirtual #24
145: ldc2_w        #47
148: invokevirtual #28
151: ldc           #27
153: invokevirtual #24
156: invokevirtual #26
159: dload_2
160: ldc2_w        #47
163: dcmpl
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #32
175: new           #21
178: dup
179: invokespecial #22
182: ldc           #27
184: invokevirtual #24
187: dload         4
189: invokevirtual #28
192: ldc           #29
194: invokevirtual #24
197: dconst_1
198: invokevirtual #28
201: ldc           #27
203: invokevirtual #24
206: invokevirtual #26
209: dload         4
211: dconst_1
212: dcmpl
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #32
224: new           #21
227: dup
228: invokespecial #22
231: ldc           #27
233: invokevirtual #24
236: iload         6
238: invokevirtual #40
241: ldc           #29
243: invokevirtual #24
246: iconst_m1
247: invokevirtual #40
250: ldc           #27
252: invokevirtual #24
255: invokevirtual #26
258: iload         6
260: iconst_m1
261: if_icmpne     268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: new           #21
275: dup
276: invokespecial #22
279: ldc           #27
281: invokevirtual #24
284: iload         7
286: invokevirtual #40
289: ldc           #29
291: invokevirtual #24
294: iconst_0
295: invokevirtual #40
298: ldc           #27
300: invokevirtual #24
303: invokevirtual #26
306: iload         7
308: ifne          315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #32
319: return
Exception table:
from    to  target type
65    79    82   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test303
Start line: 5951
End line: 5961
Method source code: 
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100);
        double double3 = poissonDistributionImpl1.probability(0.9999999899522336d);
        double double5 = poissonDistributionImpl1.cumulativeProbability(1.523643349404959d);
        double double7 = poissonDistributionImpl1.probability(10000000);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.75727673578106E-42d + "'", double5 == 3.75727673578106E-42d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1032
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: invokespecial #9
35: astore_1
36: aload_1
37: ldc2_w        #178
40: invokevirtual #44
43: dstore_2
44: aload_1
45: ldc2_w        #1033
48: invokevirtual #141
51: dstore        4
53: aload_1
54: ldc           #225
56: invokevirtual #54
59: dstore        6
61: new           #21
64: dup
65: invokespecial #22
68: ldc           #27
70: invokevirtual #24
73: dload_2
74: invokevirtual #28
77: ldc           #29
79: invokevirtual #24
82: dconst_0
83: invokevirtual #28
86: ldc           #27
88: invokevirtual #24
91: invokevirtual #26
94: dload_2
95: dconst_0
96: dcmpl
97: ifne          104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #32
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload         4
122: invokevirtual #28
125: ldc           #29
127: invokevirtual #24
130: ldc2_w        #1035
133: invokevirtual #28
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: dload         4
146: ldc2_w        #1035
149: dcmpl
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #32
161: new           #21
164: dup
165: invokespecial #22
168: ldc           #27
170: invokevirtual #24
173: dload         6
175: invokevirtual #28
178: ldc           #29
180: invokevirtual #24
183: dconst_0
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         6
197: dconst_0
198: dcmpl
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #32
210: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test304
Start line: 5964
End line: 5976
Method source code: 
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        double double8 = poissonDistributionImpl1.cumulativeProbability(74);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1037
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: bipush        74
57: invokevirtual #43
60: dstore        6
62: new           #21
65: dup
66: invokespecial #22
69: ldc           #27
71: invokevirtual #24
74: dload_2
75: invokevirtual #28
78: ldc           #29
80: invokevirtual #24
83: ldc2_w        #47
86: invokevirtual #28
89: ldc           #27
91: invokevirtual #24
94: invokevirtual #26
97: dload_2
98: ldc2_w        #47
101: dcmpl
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #32
113: aload         4
115: invokestatic  #77
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: iload         5
132: invokevirtual #40
135: ldc           #29
137: invokevirtual #24
140: iconst_m1
141: invokevirtual #40
144: ldc           #27
146: invokevirtual #24
149: invokevirtual #26
152: iload         5
154: iconst_m1
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: dload         6
180: invokevirtual #28
183: ldc           #29
185: invokevirtual #24
188: dconst_1
189: invokevirtual #28
192: ldc           #27
194: invokevirtual #24
197: invokevirtual #26
200: dload         6
202: dconst_1
203: dcmpl
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #32
215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test305
Start line: 5979
End line: 5999
Method source code: 
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        double double14 = poissonDistributionImpl1.cumulativeProbability((double) (-1));
        double double16 = poissonDistributionImpl1.probability((double) (byte) 0);
        double double18 = poissonDistributionImpl1.cumulativeProbability((int) 'a');
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117144233d + "'", double16 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1038
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: ldc2_w        #142
78: invokevirtual #141
81: dstore        12
83: aload_1
84: dconst_0
85: invokevirtual #44
88: dstore        14
90: aload_1
91: bipush        97
93: invokevirtual #43
96: dstore        16
98: new           #21
101: dup
102: invokespecial #22
105: ldc           #27
107: invokevirtual #24
110: dload_2
111: invokevirtual #28
114: ldc           #29
116: invokevirtual #24
119: ldc2_w        #30
122: invokevirtual #28
125: ldc           #27
127: invokevirtual #24
130: invokevirtual #26
133: dload_2
134: ldc2_w        #30
137: dcmpl
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #32
149: new           #21
152: dup
153: invokespecial #22
156: ldc           #27
158: invokevirtual #24
161: dload         4
163: invokevirtual #28
166: ldc           #29
168: invokevirtual #24
171: ldc2_w        #45
174: invokevirtual #28
177: ldc           #27
179: invokevirtual #24
182: invokevirtual #26
185: dload         4
187: ldc2_w        #45
190: dcmpl
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #32
202: new           #21
205: dup
206: invokespecial #22
209: ldc           #27
211: invokevirtual #24
214: dload         6
216: invokevirtual #28
219: ldc           #29
221: invokevirtual #24
224: ldc2_w        #87
227: invokevirtual #28
230: ldc           #27
232: invokevirtual #24
235: invokevirtual #26
238: dload         6
240: ldc2_w        #87
243: dcmpl
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #32
255: new           #21
258: dup
259: invokespecial #22
262: ldc           #27
264: invokevirtual #24
267: dload         8
269: invokevirtual #28
272: ldc           #29
274: invokevirtual #24
277: dconst_1
278: invokevirtual #28
281: ldc           #27
283: invokevirtual #24
286: invokevirtual #26
289: dload         8
291: dconst_1
292: dcmpl
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #32
304: new           #21
307: dup
308: invokespecial #22
311: ldc           #27
313: invokevirtual #24
316: dload         10
318: invokevirtual #28
321: ldc           #29
323: invokevirtual #24
326: ldc2_w        #47
329: invokevirtual #28
332: ldc           #27
334: invokevirtual #24
337: invokevirtual #26
340: dload         10
342: ldc2_w        #47
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #32
357: new           #21
360: dup
361: invokespecial #22
364: ldc           #27
366: invokevirtual #24
369: dload         12
371: invokevirtual #28
374: ldc           #29
376: invokevirtual #24
379: dconst_0
380: invokevirtual #28
383: ldc           #27
385: invokevirtual #24
388: invokevirtual #26
391: dload         12
393: dconst_0
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #32
406: new           #21
409: dup
410: invokespecial #22
413: ldc           #27
415: invokevirtual #24
418: dload         14
420: invokevirtual #28
423: ldc           #29
425: invokevirtual #24
428: ldc2_w        #168
431: invokevirtual #28
434: ldc           #27
436: invokevirtual #24
439: invokevirtual #26
442: dload         14
444: ldc2_w        #168
447: dcmpl
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #32
459: new           #21
462: dup
463: invokespecial #22
466: ldc           #27
468: invokevirtual #24
471: dload         16
473: invokevirtual #28
476: ldc           #29
478: invokevirtual #24
481: dconst_1
482: invokevirtual #28
485: ldc           #27
487: invokevirtual #24
490: invokevirtual #26
493: dload         16
495: dconst_1
496: dcmpl
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #32
508: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test306
Start line: 6002
End line: 6016
Method source code: 
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(Double.POSITIVE_INFINITY, 0.0d);
        poissonDistributionImpl2.reseedRandomGenerator((long) (-1));
        double double5 = poissonDistributionImpl2.getMean();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = poissonDistributionImpl2.cumulativeProbability((int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.ConvergenceException; message: Continued fraction diverged to NaN for value ?");
        } catch (org.apache.commons.math.ConvergenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + Double.POSITIVE_INFINITY + "'", double5 == Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1039
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #253
32: dconst_0
33: invokespecial #255
36: astore_1
37: aload_1
38: ldc2_w        #121
41: invokevirtual #157
44: aload_1
45: invokevirtual #102
48: dstore_2
49: aload_1
50: bipush        97
52: invokevirtual #43
55: dstore        4
57: ldc_w         #818
60: invokestatic  #17
63: goto          68
66: astore        4
68: new           #21
71: dup
72: invokespecial #22
75: ldc           #27
77: invokevirtual #24
80: dload_2
81: invokevirtual #28
84: ldc           #29
86: invokevirtual #24
89: ldc2_w        #253
92: invokevirtual #28
95: ldc           #27
97: invokevirtual #24
100: invokevirtual #26
103: dload_2
104: ldc2_w        #253
107: dcmpl
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #32
119: return
Exception table:
from    to  target type
49    63    66   Class org/apache/commons/math/ConvergenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test307
Start line: 6019
End line: 6037
Method source code: 
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        double double14 = poissonDistributionImpl1.normalApproximateProbability(49);
        int int16 = poissonDistributionImpl1.getDomainLowerBound(520.8046917041861d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1040
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: bipush        49
76: invokevirtual #63
79: dstore        11
81: aload_1
82: ldc2_w        #1041
85: invokevirtual #139
88: istore        13
90: new           #21
93: dup
94: invokespecial #22
97: ldc           #27
99: invokevirtual #24
102: dload_2
103: invokevirtual #28
106: ldc           #29
108: invokevirtual #24
111: ldc2_w        #30
114: invokevirtual #28
117: ldc           #27
119: invokevirtual #24
122: invokevirtual #26
125: dload_2
126: ldc2_w        #30
129: dcmpl
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #32
141: new           #21
144: dup
145: invokespecial #22
148: ldc           #27
150: invokevirtual #24
153: dload         4
155: invokevirtual #28
158: ldc           #29
160: invokevirtual #24
163: ldc2_w        #45
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: ldc2_w        #45
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: dload         6
208: invokevirtual #28
211: ldc           #29
213: invokevirtual #24
216: ldc2_w        #87
219: invokevirtual #28
222: ldc           #27
224: invokevirtual #24
227: invokevirtual #26
230: dload         6
232: ldc2_w        #87
235: dcmpl
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #32
247: new           #21
250: dup
251: invokespecial #22
254: ldc           #27
256: invokevirtual #24
259: dload         8
261: invokevirtual #28
264: ldc           #29
266: invokevirtual #24
269: ldc2_w        #45
272: invokevirtual #28
275: ldc           #27
277: invokevirtual #24
280: invokevirtual #26
283: dload         8
285: ldc2_w        #45
288: dcmpl
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #32
300: new           #21
303: dup
304: invokespecial #22
307: ldc           #27
309: invokevirtual #24
312: iload         10
314: invokevirtual #40
317: ldc           #29
319: invokevirtual #24
322: iconst_0
323: invokevirtual #40
326: ldc           #27
328: invokevirtual #24
331: invokevirtual #26
334: iload         10
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         11
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: dconst_1
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         11
383: dconst_1
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: new           #21
399: dup
400: invokespecial #22
403: ldc           #27
405: invokevirtual #24
408: iload         13
410: invokevirtual #40
413: ldc           #29
415: invokevirtual #24
418: iconst_0
419: invokevirtual #40
422: ldc           #27
424: invokevirtual #24
427: invokevirtual #26
430: iload         13
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #32
443: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test308
Start line: 6040
End line: 6056
Method source code: 
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        int int12 = poissonDistributionImpl1.getDomainLowerBound(99.01124665425166d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1043
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: ldc2_w        #1044
77: invokevirtual #139
80: istore        9
82: new           #21
85: dup
86: invokespecial #22
89: ldc           #27
91: invokevirtual #24
94: dload_2
95: invokevirtual #28
98: ldc           #29
100: invokevirtual #24
103: ldc2_w        #47
106: invokevirtual #28
109: ldc           #27
111: invokevirtual #24
114: invokevirtual #26
117: dload_2
118: ldc2_w        #47
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #32
133: new           #21
136: dup
137: invokespecial #22
140: ldc           #27
142: invokevirtual #24
145: dload         4
147: invokevirtual #28
150: ldc           #29
152: invokevirtual #24
155: dconst_1
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload         4
169: dconst_1
170: dcmpl
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #32
182: new           #21
185: dup
186: invokespecial #22
189: ldc           #27
191: invokevirtual #24
194: iload         6
196: invokevirtual #40
199: ldc           #29
201: invokevirtual #24
204: ldc           #41
206: invokevirtual #40
209: ldc           #27
211: invokevirtual #24
214: invokevirtual #26
217: iload         6
219: ldc           #41
221: if_icmpne     228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #32
232: new           #21
235: dup
236: invokespecial #22
239: ldc           #27
241: invokevirtual #24
244: iload         7
246: invokevirtual #40
249: ldc           #29
251: invokevirtual #24
254: iconst_0
255: invokevirtual #40
258: ldc           #27
260: invokevirtual #24
263: invokevirtual #26
266: iload         7
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #32
279: new           #21
282: dup
283: invokespecial #22
286: ldc           #27
288: invokevirtual #24
291: iload         9
293: invokevirtual #40
296: ldc           #29
298: invokevirtual #24
301: iconst_0
302: invokevirtual #40
305: ldc           #27
307: invokevirtual #24
310: invokevirtual #26
313: iload         9
315: ifne          322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #32
326: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test309
Start line: 6059
End line: 6071
Method source code: 
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        double double5 = poissonDistributionImpl2.getMean();
        double double8 = poissonDistributionImpl2.cumulativeProbability((int) (short) 0, 31);
        double double10 = poissonDistributionImpl2.cumulativeProbability(0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 52.0d + "'", double5 == 52.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0011662327595916614d + "'", double8 == 0.0011662327595916614d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.6102790696677136E-23d + "'", double10 == 2.6102790696677136E-23d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1046
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: invokevirtual #102
48: dstore        4
50: aload_1
51: iconst_0
52: bipush        31
54: invokevirtual #64
57: dstore        6
59: aload_1
60: iconst_0
61: invokevirtual #43
64: dstore        8
66: new           #21
69: dup
70: invokespecial #22
73: ldc           #27
75: invokevirtual #24
78: dload_2
79: invokevirtual #28
82: ldc           #29
84: invokevirtual #24
87: dconst_0
88: invokevirtual #28
91: ldc           #27
93: invokevirtual #24
96: invokevirtual #26
99: dload_2
100: dconst_0
101: dcmpl
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #32
113: new           #21
116: dup
117: invokespecial #22
120: ldc           #27
122: invokevirtual #24
125: dload         4
127: invokevirtual #28
130: ldc           #29
132: invokevirtual #24
135: ldc2_w        #223
138: invokevirtual #28
141: ldc           #27
143: invokevirtual #24
146: invokevirtual #26
149: dload         4
151: ldc2_w        #223
154: dcmpl
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: dload         6
180: invokevirtual #28
183: ldc           #29
185: invokevirtual #24
188: ldc2_w        #1014
191: invokevirtual #28
194: ldc           #27
196: invokevirtual #24
199: invokevirtual #26
202: dload         6
204: ldc2_w        #1014
207: dcmpl
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #32
219: new           #21
222: dup
223: invokespecial #22
226: ldc           #27
228: invokevirtual #24
231: dload         8
233: invokevirtual #28
236: ldc           #29
238: invokevirtual #24
241: ldc2_w        #1047
244: invokevirtual #28
247: ldc           #27
249: invokevirtual #24
252: invokevirtual #26
255: dload         8
257: ldc2_w        #1047
260: dcmpl
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test310
Start line: 6074
End line: 6078
Method source code: 
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(2.6593984616112802d, 0.6770898493360052d, 24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1049
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #315
32: ldc2_w        #1050
35: bipush        24
37: invokespecial #97
40: astore_1
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test311
Start line: 6081
End line: 6102
Method source code: 
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        double double13 = poissonDistributionImpl1.probability(36.941458435411754d);
        int int15 = poissonDistributionImpl1.getDomainUpperBound(99.13154645400108d);
        int int17 = poissonDistributionImpl1.inverseCumulativeProbability(0.2609616519766456d);
        int int19 = poissonDistributionImpl1.getDomainUpperBound(0.015823175900687235d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1052
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: ldc2_w        #792
76: invokevirtual #44
79: dstore        8
81: aload_1
82: ldc2_w        #543
85: invokevirtual #34
88: istore        10
90: aload_1
91: ldc2_w        #887
94: invokevirtual #15
97: istore        11
99: aload_1
100: ldc2_w        #1053
103: invokevirtual #34
106: istore        12
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload_2
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #30
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload_2
144: ldc2_w        #30
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload         4
173: invokevirtual #28
176: ldc           #29
178: invokevirtual #24
181: ldc2_w        #45
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         4
197: ldc2_w        #45
200: dcmpl
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #32
212: new           #21
215: dup
216: invokespecial #22
219: ldc           #27
221: invokevirtual #24
224: iload         7
226: invokevirtual #40
229: ldc           #29
231: invokevirtual #24
234: ldc           #41
236: invokevirtual #40
239: ldc           #27
241: invokevirtual #24
244: invokevirtual #26
247: iload         7
249: ldc           #41
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #32
262: new           #21
265: dup
266: invokespecial #22
269: ldc           #27
271: invokevirtual #24
274: dload         8
276: invokevirtual #28
279: ldc           #29
281: invokevirtual #24
284: dconst_0
285: invokevirtual #28
288: ldc           #27
290: invokevirtual #24
293: invokevirtual #26
296: dload         8
298: dconst_0
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: iload         10
325: invokevirtual #40
328: ldc           #29
330: invokevirtual #24
333: ldc           #41
335: invokevirtual #40
338: ldc           #27
340: invokevirtual #24
343: invokevirtual #26
346: iload         10
348: ldc           #41
350: if_icmpne     357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: new           #21
364: dup
365: invokespecial #22
368: ldc           #27
370: invokevirtual #24
373: iload         11
375: invokevirtual #40
378: ldc           #29
380: invokevirtual #24
383: iconst_m1
384: invokevirtual #40
387: ldc           #27
389: invokevirtual #24
392: invokevirtual #26
395: iload         11
397: iconst_m1
398: if_icmpne     405
401: iconst_1
402: goto          406
405: iconst_0
406: invokestatic  #32
409: new           #21
412: dup
413: invokespecial #22
416: ldc           #27
418: invokevirtual #24
421: iload         12
423: invokevirtual #40
426: ldc           #29
428: invokevirtual #24
431: ldc           #41
433: invokevirtual #40
436: ldc           #27
438: invokevirtual #24
441: invokevirtual #26
444: iload         12
446: ldc           #41
448: if_icmpne     455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #32
459: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test312
Start line: 6105
End line: 6122
Method source code: 
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        int int13 = poissonDistributionImpl1.getDomainUpperBound((-1.4198831539577308d));
        double double15 = poissonDistributionImpl1.cumulativeProbability(37);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1055
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: ldc2_w        #1056
76: invokevirtual #34
79: istore        8
81: aload_1
82: bipush        37
84: invokevirtual #43
87: dstore        9
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #27
98: invokevirtual #24
101: dload_2
102: invokevirtual #28
105: ldc           #29
107: invokevirtual #24
110: ldc2_w        #30
113: invokevirtual #28
116: ldc           #27
118: invokevirtual #24
121: invokevirtual #26
124: dload_2
125: ldc2_w        #30
128: dcmpl
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #32
140: new           #21
143: dup
144: invokespecial #22
147: ldc           #27
149: invokevirtual #24
152: dload         4
154: invokevirtual #28
157: ldc           #29
159: invokevirtual #24
162: ldc2_w        #45
165: invokevirtual #28
168: ldc           #27
170: invokevirtual #24
173: invokevirtual #26
176: dload         4
178: ldc2_w        #45
181: dcmpl
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #32
193: new           #21
196: dup
197: invokespecial #22
200: ldc           #27
202: invokevirtual #24
205: iload         7
207: invokevirtual #40
210: ldc           #29
212: invokevirtual #24
215: ldc           #41
217: invokevirtual #40
220: ldc           #27
222: invokevirtual #24
225: invokevirtual #26
228: iload         7
230: ldc           #41
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #32
243: new           #21
246: dup
247: invokespecial #22
250: ldc           #27
252: invokevirtual #24
255: iload         8
257: invokevirtual #40
260: ldc           #29
262: invokevirtual #24
265: ldc           #41
267: invokevirtual #40
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: iload         8
280: ldc           #41
282: if_icmpne     289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #32
293: new           #21
296: dup
297: invokespecial #22
300: ldc           #27
302: invokevirtual #24
305: dload         9
307: invokevirtual #28
310: ldc           #29
312: invokevirtual #24
315: dconst_1
316: invokevirtual #28
319: ldc           #27
321: invokevirtual #24
324: invokevirtual #26
327: dload         9
329: dconst_1
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #32
342: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test313
Start line: 6125
End line: 6139
Method source code: 
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.0d, (double) 'a');
        double double8 = poissonDistributionImpl1.probability(0.3899356327042469d);
        int int10 = poissonDistributionImpl1.getDomainUpperBound((-0.7880014968389955d));
        double double12 = poissonDistributionImpl1.cumulativeProbability(378706);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1058
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: dconst_0
43: ldc2_w        #55
46: invokevirtual #12
49: dstore        4
51: aload_1
52: ldc2_w        #325
55: invokevirtual #44
58: dstore        6
60: aload_1
61: ldc2_w        #286
64: invokevirtual #34
67: istore        8
69: aload_1
70: ldc_w         #1059
73: invokevirtual #43
76: dstore        9
78: new           #21
81: dup
82: invokespecial #22
85: ldc           #27
87: invokevirtual #24
90: dload_2
91: invokevirtual #28
94: ldc           #29
96: invokevirtual #24
99: ldc2_w        #47
102: invokevirtual #28
105: ldc           #27
107: invokevirtual #24
110: invokevirtual #26
113: dload_2
114: ldc2_w        #47
117: dcmpl
118: ifne          125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #32
129: new           #21
132: dup
133: invokespecial #22
136: ldc           #27
138: invokevirtual #24
141: dload         4
143: invokevirtual #28
146: ldc           #29
148: invokevirtual #24
151: dconst_1
152: invokevirtual #28
155: ldc           #27
157: invokevirtual #24
160: invokevirtual #26
163: dload         4
165: dconst_1
166: dcmpl
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #32
178: new           #21
181: dup
182: invokespecial #22
185: ldc           #27
187: invokevirtual #24
190: dload         6
192: invokevirtual #28
195: ldc           #29
197: invokevirtual #24
200: dconst_0
201: invokevirtual #28
204: ldc           #27
206: invokevirtual #24
209: invokevirtual #26
212: dload         6
214: dconst_0
215: dcmpl
216: ifne          223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #32
227: new           #21
230: dup
231: invokespecial #22
234: ldc           #27
236: invokevirtual #24
239: iload         8
241: invokevirtual #40
244: ldc           #29
246: invokevirtual #24
249: ldc           #41
251: invokevirtual #40
254: ldc           #27
256: invokevirtual #24
259: invokevirtual #26
262: iload         8
264: ldc           #41
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #32
277: new           #21
280: dup
281: invokespecial #22
284: ldc           #27
286: invokevirtual #24
289: dload         9
291: invokevirtual #28
294: ldc           #29
296: invokevirtual #24
299: dconst_1
300: invokevirtual #28
303: ldc           #27
305: invokevirtual #24
308: invokevirtual #26
311: dload         9
313: dconst_1
314: dcmpl
315: ifne          322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #32
326: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test314
Start line: 6142
End line: 6160
Method source code: 
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        double double11 = poissonDistributionImpl1.probability(0.0d);
        int int13 = poissonDistributionImpl1.getDomainLowerBound(0.248672111195961d);
        int int14 = poissonDistributionImpl1.sample();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.36787944117144233d + "'", double11 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1060
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: dconst_0
69: invokevirtual #44
72: dstore        8
74: aload_1
75: ldc2_w        #608
78: invokevirtual #139
81: istore        10
83: aload_1
84: invokevirtual #61
87: istore        11
89: new           #21
92: dup
93: invokespecial #22
96: ldc           #27
98: invokevirtual #24
101: dload_2
102: invokevirtual #28
105: ldc           #29
107: invokevirtual #24
110: ldc2_w        #47
113: invokevirtual #28
116: ldc           #27
118: invokevirtual #24
121: invokevirtual #26
124: dload_2
125: ldc2_w        #47
128: dcmpl
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #32
140: new           #21
143: dup
144: invokespecial #22
147: ldc           #27
149: invokevirtual #24
152: dload         4
154: invokevirtual #28
157: ldc           #29
159: invokevirtual #24
162: dconst_1
163: invokevirtual #28
166: ldc           #27
168: invokevirtual #24
171: invokevirtual #26
174: dload         4
176: dconst_1
177: dcmpl
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #32
189: new           #21
192: dup
193: invokespecial #22
196: ldc           #27
198: invokevirtual #24
201: iload         6
203: invokevirtual #40
206: ldc           #29
208: invokevirtual #24
211: ldc           #41
213: invokevirtual #40
216: ldc           #27
218: invokevirtual #24
221: invokevirtual #26
224: iload         6
226: ldc           #41
228: if_icmpne     235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #32
239: new           #21
242: dup
243: invokespecial #22
246: ldc           #27
248: invokevirtual #24
251: iload         7
253: invokevirtual #40
256: ldc           #29
258: invokevirtual #24
261: iconst_0
262: invokevirtual #40
265: ldc           #27
267: invokevirtual #24
270: invokevirtual #26
273: iload         7
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #32
286: new           #21
289: dup
290: invokespecial #22
293: ldc           #27
295: invokevirtual #24
298: dload         8
300: invokevirtual #28
303: ldc           #29
305: invokevirtual #24
308: ldc2_w        #168
311: invokevirtual #28
314: ldc           #27
316: invokevirtual #24
319: invokevirtual #26
322: dload         8
324: ldc2_w        #168
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #32
339: new           #21
342: dup
343: invokespecial #22
346: ldc           #27
348: invokevirtual #24
351: iload         10
353: invokevirtual #40
356: ldc           #29
358: invokevirtual #24
361: iconst_0
362: invokevirtual #40
365: ldc           #27
367: invokevirtual #24
370: invokevirtual #26
373: iload         10
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #32
386: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test315
Start line: 6163
End line: 6169
Method source code: 
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 74L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-0.17378263862829857d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1061
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #621
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: ldc2_w        #1062
42: invokevirtual #141
45: dstore_2
46: new           #21
49: dup
50: invokespecial #22
53: ldc           #27
55: invokevirtual #24
58: dload_2
59: invokevirtual #28
62: ldc           #29
64: invokevirtual #24
67: dconst_0
68: invokevirtual #28
71: ldc           #27
73: invokevirtual #24
76: invokevirtual #26
79: dload_2
80: dconst_0
81: dcmpl
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #32
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test316
Start line: 6172
End line: 6182
Method source code: 
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        int int3 = poissonDistributionImpl2.sample();
        double double5 = poissonDistributionImpl2.cumulativeProbability(3);
        double double6 = poissonDistributionImpl2.getMean();
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 56 + "'", int3 == 56);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 6.483846199752252E-19d + "'", double5 == 6.483846199752252E-19d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1064
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: invokevirtual #61
42: istore_2
43: aload_1
44: iconst_3
45: invokevirtual #43
48: dstore_3
49: aload_1
50: invokevirtual #102
53: dstore        5
55: new           #21
58: dup
59: invokespecial #22
62: ldc           #27
64: invokevirtual #24
67: dload_3
68: invokevirtual #28
71: ldc           #29
73: invokevirtual #24
76: ldc2_w        #1065
79: invokevirtual #28
82: ldc           #27
84: invokevirtual #24
87: invokevirtual #26
90: dload_3
91: ldc2_w        #1065
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: dload         5
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: ldc2_w        #223
131: invokevirtual #28
134: ldc           #27
136: invokevirtual #24
139: invokevirtual #26
142: dload         5
144: ldc2_w        #223
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test317
Start line: 6185
End line: 6202
Method source code: 
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double15 = poissonDistributionImpl1.cumulativeProbability(51, 844785);
        double double17 = poissonDistributionImpl1.probability((double) 56);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.174123373539009E-76d + "'", double17 == 5.174123373539009E-76d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1067
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: bipush        51
78: ldc_w         #486
81: invokevirtual #64
84: dstore        10
86: aload_1
87: ldc2_w        #1068
90: invokevirtual #44
93: dstore        12
95: new           #21
98: dup
99: invokespecial #22
102: ldc           #27
104: invokevirtual #24
107: dload_2
108: invokevirtual #28
111: ldc           #29
113: invokevirtual #24
116: ldc2_w        #47
119: invokevirtual #28
122: ldc           #27
124: invokevirtual #24
127: invokevirtual #26
130: dload_2
131: ldc2_w        #47
134: dcmpl
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #32
146: new           #21
149: dup
150: invokespecial #22
153: ldc           #27
155: invokevirtual #24
158: dload         4
160: invokevirtual #28
163: ldc           #29
165: invokevirtual #24
168: dconst_1
169: invokevirtual #28
172: ldc           #27
174: invokevirtual #24
177: invokevirtual #26
180: dload         4
182: dconst_1
183: dcmpl
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #32
195: new           #21
198: dup
199: invokespecial #22
202: ldc           #27
204: invokevirtual #24
207: dload         6
209: invokevirtual #28
212: ldc           #29
214: invokevirtual #24
217: ldc2_w        #69
220: invokevirtual #28
223: ldc           #27
225: invokevirtual #24
228: invokevirtual #26
231: dload         6
233: ldc2_w        #69
236: dcmpl
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #32
248: new           #21
251: dup
252: invokespecial #22
255: ldc           #27
257: invokevirtual #24
260: dload         8
262: invokevirtual #28
265: ldc           #29
267: invokevirtual #24
270: dconst_0
271: invokevirtual #28
274: ldc           #27
276: invokevirtual #24
279: invokevirtual #26
282: dload         8
284: dconst_0
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #32
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: dload         10
311: invokevirtual #28
314: ldc           #29
316: invokevirtual #24
319: dconst_0
320: invokevirtual #28
323: ldc           #27
325: invokevirtual #24
328: invokevirtual #26
331: dload         10
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #32
346: new           #21
349: dup
350: invokespecial #22
353: ldc           #27
355: invokevirtual #24
358: dload         12
360: invokevirtual #28
363: ldc           #29
365: invokevirtual #24
368: ldc2_w        #1010
371: invokevirtual #28
374: ldc           #27
376: invokevirtual #24
379: invokevirtual #26
382: dload         12
384: ldc2_w        #1010
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test318
Start line: 6205
End line: 6227
Method source code: 
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        int int10 = poissonDistributionImpl1.sample();
        double double13 = poissonDistributionImpl1.cumulativeProbability((int) (short) 0, 0);
        double double16 = poissonDistributionImpl1.cumulativeProbability(1, (int) (short) 100);
        double double18 = poissonDistributionImpl1.cumulativeProbability(9703232);
        int int20 = poissonDistributionImpl1.getDomainUpperBound(244.53628995917484d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.36787944117146065d + "'", double13 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.6321205588285393d + "'", double16 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1070
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: invokevirtual #61
71: istore        8
73: aload_1
74: iconst_0
75: iconst_0
76: invokevirtual #64
79: dstore        9
81: aload_1
82: iconst_1
83: bipush        100
85: invokevirtual #64
88: dstore        11
90: aload_1
91: ldc_w         #551
94: invokevirtual #43
97: dstore        13
99: aload_1
100: ldc2_w        #1071
103: invokevirtual #34
106: istore        15
108: new           #21
111: dup
112: invokespecial #22
115: ldc           #27
117: invokevirtual #24
120: dload_2
121: invokevirtual #28
124: ldc           #29
126: invokevirtual #24
129: ldc2_w        #47
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload_2
144: ldc2_w        #47
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload         4
173: invokevirtual #28
176: ldc           #29
178: invokevirtual #24
181: dconst_1
182: invokevirtual #28
185: ldc           #27
187: invokevirtual #24
190: invokevirtual #26
193: dload         4
195: dconst_1
196: dcmpl
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #32
208: new           #21
211: dup
212: invokespecial #22
215: ldc           #27
217: invokevirtual #24
220: iload         6
222: invokevirtual #40
225: ldc           #29
227: invokevirtual #24
230: ldc           #41
232: invokevirtual #40
235: ldc           #27
237: invokevirtual #24
240: invokevirtual #26
243: iload         6
245: ldc           #41
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: iload         7
272: invokevirtual #40
275: ldc           #29
277: invokevirtual #24
280: iconst_0
281: invokevirtual #40
284: ldc           #27
286: invokevirtual #24
289: invokevirtual #26
292: iload         7
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #32
305: new           #21
308: dup
309: invokespecial #22
312: ldc           #27
314: invokevirtual #24
317: dload         9
319: invokevirtual #28
322: ldc           #29
324: invokevirtual #24
327: ldc2_w        #45
330: invokevirtual #28
333: ldc           #27
335: invokevirtual #24
338: invokevirtual #26
341: dload         9
343: ldc2_w        #45
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #32
358: new           #21
361: dup
362: invokespecial #22
365: ldc           #27
367: invokevirtual #24
370: dload         11
372: invokevirtual #28
375: ldc           #29
377: invokevirtual #24
380: ldc2_w        #30
383: invokevirtual #28
386: ldc           #27
388: invokevirtual #24
391: invokevirtual #26
394: dload         11
396: ldc2_w        #30
399: dcmpl
400: ifne          407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #32
411: new           #21
414: dup
415: invokespecial #22
418: ldc           #27
420: invokevirtual #24
423: dload         13
425: invokevirtual #28
428: ldc           #29
430: invokevirtual #24
433: dconst_1
434: invokevirtual #28
437: ldc           #27
439: invokevirtual #24
442: invokevirtual #26
445: dload         13
447: dconst_1
448: dcmpl
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #32
460: new           #21
463: dup
464: invokespecial #22
467: ldc           #27
469: invokevirtual #24
472: iload         15
474: invokevirtual #40
477: ldc           #29
479: invokevirtual #24
482: ldc           #41
484: invokevirtual #40
487: ldc           #27
489: invokevirtual #24
492: invokevirtual #26
495: iload         15
497: ldc           #41
499: if_icmpne     506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #32
510: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test319
Start line: 6230
End line: 6241
Method source code: 
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) (short) 1, 0.24712452682051894d, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            double double5 = poissonDistributionImpl3.cumulativeProbability((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (-1) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1073
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: ldc2_w        #724
33: iconst_m1
34: invokespecial #97
37: astore_1
38: aload_1
39: bipush        100
41: invokevirtual #43
44: dstore_2
45: ldc_w         #684
48: invokestatic  #17
51: goto          55
54: astore_2
55: return
Exception table:
from    to  target type
38    51    54   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test320
Start line: 6244
End line: 6258
Method source code: 
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0.9999999958776927d);
        double double8 = poissonDistributionImpl1.normalApproximateProbability(3);
        double double10 = poissonDistributionImpl1.probability(60);
        int int12 = poissonDistributionImpl1.getDomainLowerBound(618.0141627415699d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9937903346742238d + "'", double8 == 0.9937903346742238d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.4211033641445156E-83d + "'", double10 == 4.4211033641445156E-83d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1074
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: ldc2_w        #445
47: invokevirtual #141
50: dstore        4
52: aload_1
53: iconst_3
54: invokevirtual #63
57: dstore        6
59: aload_1
60: bipush        60
62: invokevirtual #54
65: dstore        8
67: aload_1
68: ldc2_w        #1075
71: invokevirtual #139
74: istore        10
76: new           #21
79: dup
80: invokespecial #22
83: ldc           #27
85: invokevirtual #24
88: dload_2
89: invokevirtual #28
92: ldc           #29
94: invokevirtual #24
97: ldc2_w        #30
100: invokevirtual #28
103: ldc           #27
105: invokevirtual #24
108: invokevirtual #26
111: dload_2
112: ldc2_w        #30
115: dcmpl
116: ifne          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #32
127: new           #21
130: dup
131: invokespecial #22
134: ldc           #27
136: invokevirtual #24
139: dload         4
141: invokevirtual #28
144: ldc           #29
146: invokevirtual #24
149: ldc2_w        #45
152: invokevirtual #28
155: ldc           #27
157: invokevirtual #24
160: invokevirtual #26
163: dload         4
165: ldc2_w        #45
168: dcmpl
169: ifne          176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #32
180: new           #21
183: dup
184: invokespecial #22
187: ldc           #27
189: invokevirtual #24
192: dload         6
194: invokevirtual #28
197: ldc           #29
199: invokevirtual #24
202: ldc2_w        #317
205: invokevirtual #28
208: ldc           #27
210: invokevirtual #24
213: invokevirtual #26
216: dload         6
218: ldc2_w        #317
221: dcmpl
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #32
233: new           #21
236: dup
237: invokespecial #22
240: ldc           #27
242: invokevirtual #24
245: dload         8
247: invokevirtual #28
250: ldc           #29
252: invokevirtual #24
255: ldc2_w        #954
258: invokevirtual #28
261: ldc           #27
263: invokevirtual #24
266: invokevirtual #26
269: dload         8
271: ldc2_w        #954
274: dcmpl
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #32
286: new           #21
289: dup
290: invokespecial #22
293: ldc           #27
295: invokevirtual #24
298: iload         10
300: invokevirtual #40
303: ldc           #29
305: invokevirtual #24
308: iconst_0
309: invokevirtual #40
312: ldc           #27
314: invokevirtual #24
317: invokevirtual #26
320: iload         10
322: ifne          329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #32
333: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test321
Start line: 6261
End line: 6265
Method source code: 
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.142948745358914d, 85.44181650291267d, 1564722);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1077
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #616
32: ldc2_w        #1078
35: ldc_w         #1080
38: invokespecial #97
41: astore_1
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test322
Start line: 6268
End line: 6274
Method source code: 
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(812.156551123258d, 0.7770704382110356d);
        int int4 = poissonDistributionImpl2.getDomainUpperBound((-0.30787808039301257d));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1081
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #549
32: ldc2_w        #1082
35: invokespecial #255
38: astore_1
39: aload_1
40: ldc2_w        #1084
43: invokevirtual #34
46: istore_2
47: new           #21
50: dup
51: invokespecial #22
54: ldc           #27
56: invokevirtual #24
59: iload_2
60: invokevirtual #40
63: ldc           #29
65: invokevirtual #24
68: ldc           #41
70: invokevirtual #40
73: ldc           #27
75: invokevirtual #24
78: invokevirtual #26
81: iload_2
82: ldc           #41
84: if_icmpne     91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #32
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test323
Start line: 6277
End line: 6302
Method source code: 
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        double double4 = randomDataImpl1.nextUniform((-0.7853981633974483d), 0.962217362072003d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl6 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double8 = poissonDistributionImpl6.probability(100);
        double double10 = poissonDistributionImpl6.normalApproximateProbability(2147483647);
        double double13 = poissonDistributionImpl6.cumulativeProbability((int) (short) 10, 2147483647);
        double double15 = poissonDistributionImpl6.probability((-1.207854600801523d));
        double double17 = poissonDistributionImpl6.probability(100);
        int int19 = poissonDistributionImpl6.inverseCumulativeProbability(0.06680720126885803d);
        int int20 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl6);
        poissonDistributionImpl6.reseedRandomGenerator(129L);
        double double24 = poissonDistributionImpl6.probability(0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.8903569957937654d + "'", double4 == 0.8903569957937654d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.941866060050443E-159d + "'", double8 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.1142547828857374E-7d + "'", double13 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.941866060050443E-159d + "'", double17 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.36787944117144233d + "'", double24 == 0.36787944117144233d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1086
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: aload_2
37: ldc2_w        #130
40: ldc2_w        #746
43: invokevirtual #351
46: dstore_3
47: new           #8
50: dup
51: dconst_1
52: invokespecial #9
55: astore        5
57: aload         5
59: bipush        100
61: invokevirtual #54
64: dstore        6
66: aload         5
68: ldc           #41
70: invokevirtual #63
73: dstore        8
75: aload         5
77: bipush        10
79: ldc           #41
81: invokevirtual #64
84: dstore        10
86: aload         5
88: ldc2_w        #65
91: invokevirtual #44
94: dstore        12
96: aload         5
98: bipush        100
100: invokevirtual #54
103: dstore        14
105: aload         5
107: ldc2_w        #87
110: invokevirtual #15
113: istore        16
115: aload_2
116: aload         5
118: invokevirtual #116
121: istore        17
123: aload         5
125: ldc2_w        #913
128: invokevirtual #157
131: aload         5
133: dconst_0
134: invokevirtual #44
137: dstore        18
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload         6
153: invokevirtual #28
156: ldc           #29
158: invokevirtual #24
161: ldc2_w        #47
164: invokevirtual #28
167: ldc           #27
169: invokevirtual #24
172: invokevirtual #26
175: dload         6
177: ldc2_w        #47
180: dcmpl
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #32
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload         8
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: dconst_1
215: invokevirtual #28
218: ldc           #27
220: invokevirtual #24
223: invokevirtual #26
226: dload         8
228: dconst_1
229: dcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #32
241: new           #21
244: dup
245: invokespecial #22
248: ldc           #27
250: invokevirtual #24
253: dload         10
255: invokevirtual #28
258: ldc           #29
260: invokevirtual #24
263: ldc2_w        #69
266: invokevirtual #28
269: ldc           #27
271: invokevirtual #24
274: invokevirtual #26
277: dload         10
279: ldc2_w        #69
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         12
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: dconst_0
317: invokevirtual #28
320: ldc           #27
322: invokevirtual #24
325: invokevirtual #26
328: dload         12
330: dconst_0
331: dcmpl
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #32
343: new           #21
346: dup
347: invokespecial #22
350: ldc           #27
352: invokevirtual #24
355: dload         14
357: invokevirtual #28
360: ldc           #29
362: invokevirtual #24
365: ldc2_w        #47
368: invokevirtual #28
371: ldc           #27
373: invokevirtual #24
376: invokevirtual #26
379: dload         14
381: ldc2_w        #47
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: new           #21
399: dup
400: invokespecial #22
403: ldc           #27
405: invokevirtual #24
408: iload         16
410: invokevirtual #40
413: ldc           #29
415: invokevirtual #24
418: iconst_m1
419: invokevirtual #40
422: ldc           #27
424: invokevirtual #24
427: invokevirtual #26
430: iload         16
432: iconst_m1
433: if_icmpne     440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #32
444: new           #21
447: dup
448: invokespecial #22
451: ldc           #27
453: invokevirtual #24
456: dload         18
458: invokevirtual #28
461: ldc           #29
463: invokevirtual #24
466: ldc2_w        #168
469: invokevirtual #28
472: ldc           #27
474: invokevirtual #24
477: invokevirtual #26
480: dload         18
482: ldc2_w        #168
485: dcmpl
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #32
497: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test324
Start line: 6305
End line: 6315
Method source code: 
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-0.12308411467852295d), 593.9053572049485d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.123 is smaller than, or equal to, the minimum (0): mean (-0.123)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1087
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #1088
32: ldc2_w        #331
35: invokespecial #255
38: astore_1
39: ldc           #251
41: invokestatic  #17
44: goto          48
47: astore_1
48: return
Exception table:
from    to  target type
25    44    47   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test325
Start line: 6318
End line: 6330
Method source code: 
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 52L, 10000000);
        double double4 = poissonDistributionImpl2.cumulativeProbability((-1));
        int int6 = poissonDistributionImpl2.getDomainLowerBound((-0.17739400468773303d));
        double double8 = poissonDistributionImpl2.cumulativeProbability(1.1643428520428265d);
        double double11 = poissonDistributionImpl2.cumulativeProbability(0, 2161860);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.3834479069238827E-21d + "'", double8 == 1.3834479069238827E-21d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1090
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #223
32: ldc           #225
34: invokespecial #50
37: astore_1
38: aload_1
39: iconst_m1
40: invokevirtual #43
43: dstore_2
44: aload_1
45: ldc2_w        #580
48: invokevirtual #139
51: istore        4
53: aload_1
54: ldc2_w        #582
57: invokevirtual #141
60: dstore        5
62: aload_1
63: iconst_0
64: ldc_w         #1091
67: invokevirtual #64
70: dstore        7
72: new           #21
75: dup
76: invokespecial #22
79: ldc           #27
81: invokevirtual #24
84: dload_2
85: invokevirtual #28
88: ldc           #29
90: invokevirtual #24
93: dconst_0
94: invokevirtual #28
97: ldc           #27
99: invokevirtual #24
102: invokevirtual #26
105: dload_2
106: dconst_0
107: dcmpl
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #32
119: new           #21
122: dup
123: invokespecial #22
126: ldc           #27
128: invokevirtual #24
131: iload         4
133: invokevirtual #40
136: ldc           #29
138: invokevirtual #24
141: iconst_0
142: invokevirtual #40
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: iload         4
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: dload         5
180: invokevirtual #28
183: ldc           #29
185: invokevirtual #24
188: ldc2_w        #586
191: invokevirtual #28
194: ldc           #27
196: invokevirtual #24
199: invokevirtual #26
202: dload         5
204: ldc2_w        #586
207: dcmpl
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #32
219: new           #21
222: dup
223: invokespecial #22
226: ldc           #27
228: invokevirtual #24
231: dload         7
233: invokevirtual #28
236: ldc           #29
238: invokevirtual #24
241: dconst_1
242: invokevirtual #28
245: ldc           #27
247: invokevirtual #24
250: invokevirtual #26
253: dload         7
255: dconst_1
256: dcmpl
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #32
268: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test326
Start line: 6333
End line: 6343
Method source code: 
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.06929810837522998d, 8265245);
        int int4 = poissonDistributionImpl2.inverseCumulativeProbability(1.0E-9d);
        double double6 = poissonDistributionImpl2.cumulativeProbability((double) 2147483647L);
        double double8 = poissonDistributionImpl2.probability(0.012980426470139595d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1092
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #245
32: ldc_w         #832
35: invokespecial #50
38: astore_1
39: aload_1
40: ldc2_w        #1093
43: invokevirtual #15
46: istore_2
47: aload_1
48: ldc2_w        #211
51: invokevirtual #141
54: dstore_3
55: aload_1
56: ldc2_w        #1095
59: invokevirtual #44
62: dstore        5
64: new           #21
67: dup
68: invokespecial #22
71: ldc           #27
73: invokevirtual #24
76: iload_2
77: invokevirtual #40
80: ldc           #29
82: invokevirtual #24
85: iconst_m1
86: invokevirtual #40
89: ldc           #27
91: invokevirtual #24
94: invokevirtual #26
97: iload_2
98: iconst_m1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #32
110: new           #21
113: dup
114: invokespecial #22
117: ldc           #27
119: invokevirtual #24
122: dload_3
123: invokevirtual #28
126: ldc           #29
128: invokevirtual #24
131: dconst_1
132: invokevirtual #28
135: ldc           #27
137: invokevirtual #24
140: invokevirtual #26
143: dload_3
144: dconst_1
145: dcmpl
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #32
157: new           #21
160: dup
161: invokespecial #22
164: ldc           #27
166: invokevirtual #24
169: dload         5
171: invokevirtual #28
174: ldc           #29
176: invokevirtual #24
179: dconst_0
180: invokevirtual #28
183: ldc           #27
185: invokevirtual #24
188: invokevirtual #26
191: dload         5
193: dconst_0
194: dcmpl
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #32
206: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test327
Start line: 6346
End line: 6371
Method source code: 
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        double double13 = randomDataImpl7.nextBeta(0.6248471711437631d, 2.993222846126381d);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl14 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double15 = normalDistributionImpl14.sample();
        normalDistributionImpl14.setMean(0.0d);
        double double18 = normalDistributionImpl14.sample();
        double double19 = randomDataImpl7.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl14);
        randomDataImpl7.reSeed(39L);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.0878348688442405d + "'", double10 == 2.0878348688442405d);
// flaky:         org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.41131103424051685d + "'", double13 == 0.41131103424051685d);
// flaky:         org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.27464441665952044d) + "'", double15 == (-0.27464441665952044d));
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.3878417230723639d + "'", double18 == 0.3878417230723639d);
// flaky:         org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.4460868626696481d) + "'", double19 == (-1.4460868626696481d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1097
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: ldc2_w        #1098
78: ldc2_w        #1100
81: invokevirtual #713
84: dstore        9
86: new           #107
89: dup
90: invokespecial #108
93: astore        11
95: aload         11
97: invokevirtual #1102
100: dstore        12
102: aload         11
104: dconst_0
105: invokevirtual #1103
108: aload         11
110: invokevirtual #1102
113: dstore        14
115: aload         6
117: aload         11
119: invokevirtual #393
122: dstore        16
124: aload         6
126: ldc2_w        #1104
129: invokevirtual #548
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: dload_2
145: invokevirtual #28
148: ldc           #29
150: invokevirtual #24
153: ldc2_w        #47
156: invokevirtual #28
159: ldc           #27
161: invokevirtual #24
164: invokevirtual #26
167: dload_2
168: ldc2_w        #47
171: dcmpl
172: ifne          179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #32
183: aload         4
185: invokestatic  #77
188: new           #21
191: dup
192: invokespecial #22
195: ldc           #27
197: invokevirtual #24
200: iload         5
202: invokevirtual #40
205: ldc           #29
207: invokevirtual #24
210: iconst_m1
211: invokevirtual #40
214: ldc           #27
216: invokevirtual #24
219: invokevirtual #26
222: iload         5
224: iconst_m1
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #32
236: aload         6
238: invokestatic  #77
241: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test328
Start line: 6374
End line: 6389
Method source code: 
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100.0f, 0);
        double double4 = poissonDistributionImpl2.normalApproximateProbability(0);
        double double6 = poissonDistributionImpl2.cumulativeProbability((-1.5883572333189264d));
        // The following exception was thrown during execution in test generation
        try {
            double double8 = poissonDistributionImpl2.cumulativeProbability(46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: Continued fraction convergents failed to converge for value 100");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1106
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: iconst_0
33: invokespecial #50
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #63
42: dstore_2
43: aload_1
44: ldc2_w        #892
47: invokevirtual #141
50: dstore        4
52: aload_1
53: bipush        46
55: invokevirtual #43
58: dstore        6
60: ldc           #58
62: invokestatic  #17
65: goto          70
68: astore        6
70: new           #21
73: dup
74: invokespecial #22
77: ldc           #27
79: invokevirtual #24
82: dload_2
83: invokevirtual #28
86: ldc           #29
88: invokevirtual #24
91: dconst_0
92: invokevirtual #28
95: ldc           #27
97: invokevirtual #24
100: invokevirtual #26
103: dload_2
104: dconst_0
105: dcmpl
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #32
117: new           #21
120: dup
121: invokespecial #22
124: ldc           #27
126: invokevirtual #24
129: dload         4
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: dconst_0
140: invokevirtual #28
143: ldc           #27
145: invokevirtual #24
148: invokevirtual #26
151: dload         4
153: dconst_0
154: dcmpl
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: return
Exception table:
from    to  target type
52    65    68   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test329
Start line: 6392
End line: 6409
Method source code: 
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        int int7 = poissonDistributionImpl1.sample();
        int int9 = poissonDistributionImpl1.getDomainUpperBound((double) 2147483647L);
        poissonDistributionImpl1.reseedRandomGenerator(66L);
        double double14 = poissonDistributionImpl1.cumulativeProbability(0, 96);
        double double16 = poissonDistributionImpl1.probability((-0.9214141973347212d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1107
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: invokevirtual #61
54: istore        6
56: aload_1
57: ldc2_w        #211
60: invokevirtual #34
63: istore        7
65: aload_1
66: ldc2_w        #489
69: invokevirtual #157
72: aload_1
73: iconst_0
74: bipush        96
76: invokevirtual #64
79: dstore        8
81: aload_1
82: ldc2_w        #1108
85: invokevirtual #44
88: dstore        10
90: new           #21
93: dup
94: invokespecial #22
97: ldc           #27
99: invokevirtual #24
102: dload_2
103: invokevirtual #28
106: ldc           #29
108: invokevirtual #24
111: ldc2_w        #30
114: invokevirtual #28
117: ldc           #27
119: invokevirtual #24
122: invokevirtual #26
125: dload_2
126: ldc2_w        #30
129: dcmpl
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #32
141: new           #21
144: dup
145: invokespecial #22
148: ldc           #27
150: invokevirtual #24
153: dload         4
155: invokevirtual #28
158: ldc           #29
160: invokevirtual #24
163: ldc2_w        #45
166: invokevirtual #28
169: ldc           #27
171: invokevirtual #24
174: invokevirtual #26
177: dload         4
179: ldc2_w        #45
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #32
194: new           #21
197: dup
198: invokespecial #22
201: ldc           #27
203: invokevirtual #24
206: iload         7
208: invokevirtual #40
211: ldc           #29
213: invokevirtual #24
216: ldc           #41
218: invokevirtual #40
221: ldc           #27
223: invokevirtual #24
226: invokevirtual #26
229: iload         7
231: ldc           #41
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #32
244: new           #21
247: dup
248: invokespecial #22
251: ldc           #27
253: invokevirtual #24
256: dload         8
258: invokevirtual #28
261: ldc           #29
263: invokevirtual #24
266: dconst_1
267: invokevirtual #28
270: ldc           #27
272: invokevirtual #24
275: invokevirtual #26
278: dload         8
280: dconst_1
281: dcmpl
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #32
293: new           #21
296: dup
297: invokespecial #22
300: ldc           #27
302: invokevirtual #24
305: dload         10
307: invokevirtual #28
310: ldc           #29
312: invokevirtual #24
315: dconst_0
316: invokevirtual #28
319: ldc           #27
321: invokevirtual #24
324: invokevirtual #26
327: dload         10
329: dconst_0
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #32
342: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test330
Start line: 6412
End line: 6418
Method source code: 
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.08567997748997765d, 108.27360999027786d, 34);
        double double5 = poissonDistributionImpl3.cumulativeProbability(2147483647);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1110
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #1111
32: ldc2_w        #1113
35: bipush        34
37: invokespecial #97
40: astore_1
41: aload_1
42: ldc           #41
44: invokevirtual #43
47: dstore_2
48: new           #21
51: dup
52: invokespecial #22
55: ldc           #27
57: invokevirtual #24
60: dload_2
61: invokevirtual #28
64: ldc           #29
66: invokevirtual #24
69: dconst_1
70: invokevirtual #28
73: ldc           #27
75: invokevirtual #24
78: invokevirtual #26
81: dload_2
82: dconst_1
83: dcmpl
84: ifne          91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #32
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test331
Start line: 6421
End line: 6454
Method source code: 
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double18 = randomDataImpl5.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        int int21 = randomDataImpl5.nextInt(35, 86);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = randomDataImpl5.nextBinomial((int) (byte) 100, 2.5729148168449405d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 534.2061137806802d + "'", double7 == 534.2061137806802d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2.101279959074828d + "'", double18 == 2.101279959074828d);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 69 + "'", int21 == 69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1115
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #198
111: ldc2_w        #127
114: invokevirtual #200
117: dstore        15
119: aload         6
121: bipush        35
123: bipush        86
125: invokevirtual #808
128: istore        17
130: aload         6
132: bipush        100
134: ldc2_w        #427
137: invokevirtual #117
140: istore        18
142: ldc           #16
144: invokestatic  #17
147: goto          192
150: astore        18
152: aload         18
154: invokevirtual #19
157: invokevirtual #20
160: ifne          192
163: new           #21
166: dup
167: invokespecial #22
170: ldc           #23
172: invokevirtual #24
175: aload         18
177: invokevirtual #19
180: invokevirtual #25
183: invokevirtual #24
186: invokevirtual #26
189: invokestatic  #17
192: new           #21
195: dup
196: invokespecial #22
199: ldc           #27
201: invokevirtual #24
204: dload_2
205: invokevirtual #28
208: ldc           #29
210: invokevirtual #24
213: dconst_0
214: invokevirtual #28
217: ldc           #27
219: invokevirtual #24
222: invokevirtual #26
225: dload_2
226: dconst_0
227: dcmpl
228: ifne          235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #32
239: new           #21
242: dup
243: invokespecial #22
246: ldc           #27
248: invokevirtual #24
251: dload         4
253: invokevirtual #28
256: ldc           #29
258: invokevirtual #24
261: ldc2_w        #118
264: invokevirtual #28
267: ldc           #27
269: invokevirtual #24
272: invokevirtual #26
275: dload         4
277: ldc2_w        #118
280: dcmpl
281: ifne          288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #32
292: aload         6
294: invokestatic  #77
297: new           #21
300: dup
301: invokespecial #22
304: ldc           #27
306: invokevirtual #24
309: dload         10
311: invokevirtual #28
314: ldc           #29
316: invokevirtual #24
319: ldc2_w        #47
322: invokevirtual #28
325: ldc           #27
327: invokevirtual #24
330: invokevirtual #26
333: dload         10
335: ldc2_w        #47
338: dcmpl
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #32
350: new           #21
353: dup
354: invokespecial #22
357: ldc           #27
359: invokevirtual #24
362: dload         12
364: invokevirtual #28
367: ldc           #29
369: invokevirtual #24
372: dconst_1
373: invokevirtual #28
376: ldc           #27
378: invokevirtual #24
381: invokevirtual #26
384: dload         12
386: dconst_1
387: dcmpl
388: ifne          395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #32
399: return
Exception table:
from    to  target type
130   147   150   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test332
Start line: 6457
End line: 6473
Method source code: 
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double9 = poissonDistributionImpl1.cumulativeProbability(10);
        double double11 = poissonDistributionImpl1.cumulativeProbability(49);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9999999899522336d + "'", double9 == 0.9999999899522336d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1116
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload_1
61: bipush        10
63: invokevirtual #43
66: dstore        7
68: aload_1
69: bipush        49
71: invokevirtual #43
74: dstore        9
76: new           #21
79: dup
80: invokespecial #22
83: ldc           #27
85: invokevirtual #24
88: dload_2
89: invokevirtual #28
92: ldc           #29
94: invokevirtual #24
97: ldc2_w        #47
100: invokevirtual #28
103: ldc           #27
105: invokevirtual #24
108: invokevirtual #26
111: dload_2
112: ldc2_w        #47
115: dcmpl
116: ifne          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #32
127: aload         4
129: invokestatic  #77
132: new           #21
135: dup
136: invokespecial #22
139: ldc           #27
141: invokevirtual #24
144: iload         5
146: invokevirtual #40
149: ldc           #29
151: invokevirtual #24
154: iconst_m1
155: invokevirtual #40
158: ldc           #27
160: invokevirtual #24
163: invokevirtual #26
166: iload         5
168: iconst_m1
169: if_icmpne     176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #32
180: aload         6
182: invokestatic  #77
185: new           #21
188: dup
189: invokespecial #22
192: ldc           #27
194: invokevirtual #24
197: dload         7
199: invokevirtual #28
202: ldc           #29
204: invokevirtual #24
207: ldc2_w        #178
210: invokevirtual #28
213: ldc           #27
215: invokevirtual #24
218: invokevirtual #26
221: dload         7
223: ldc2_w        #178
226: dcmpl
227: ifne          234
230: iconst_1
231: goto          235
234: iconst_0
235: invokestatic  #32
238: new           #21
241: dup
242: invokespecial #22
245: ldc           #27
247: invokevirtual #24
250: dload         9
252: invokevirtual #28
255: ldc           #29
257: invokevirtual #24
260: dconst_1
261: invokevirtual #28
264: ldc           #27
266: invokevirtual #24
269: invokevirtual #26
272: dload         9
274: dconst_1
275: dcmpl
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #32
287: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test333
Start line: 6476
End line: 6517
Method source code: 
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl19 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double20 = normalDistributionImpl19.sample();
        double double23 = normalDistributionImpl19.cumulativeProbability(1.0E-9d, (double) (short) 100);
        normalDistributionImpl19.setStandardDeviation(0.6321205588285393d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl26 = normalDistributionImpl19.randomData;
        double double28 = normalDistributionImpl19.getDomainUpperBound(1.523643349404959d);
        double double30 = normalDistributionImpl19.getDomainUpperBound((double) 80L);
        double double32 = normalDistributionImpl19.cumulativeProbability(0.24197072451914337d);
        double double34 = normalDistributionImpl19.density((java.lang.Double) 1.447011879960675d);
        double double35 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl19);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.502631588140206d + "'", double5 == 1.502631588140206d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.15176971308459736d + "'", double20 == 0.15176971308459736d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4999999996010577d + "'", double23 == 0.4999999996010577d);
        org.junit.Assert.assertNotNull(randomDataImpl26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.7976931348623157E308d + "'", double28 == 1.7976931348623157E308d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.7976931348623157E308d + "'", double30 == 1.7976931348623157E308d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.649063021701693d + "'", double32 == 0.649063021701693d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.04594352880004537d + "'", double34 == 0.04594352880004537d);
// flaky:         org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.2055763802231654d) + "'", double35 == (-1.2055763802231654d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1117
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: new           #107
124: dup
125: invokespecial #108
128: astore        19
130: aload         19
132: invokevirtual #1102
135: dstore        20
137: aload         19
139: ldc2_w        #1093
142: ldc2_w        #10
145: invokevirtual #1118
148: dstore        22
150: aload         19
152: ldc2_w        #30
155: invokevirtual #1119
158: aload         19
160: getfield      #112
163: astore        24
165: aload         19
167: ldc2_w        #1033
170: invokevirtual #1120
173: dstore        25
175: aload         19
177: ldc2_w        #1121
180: invokevirtual #1120
183: dstore        27
185: aload         19
187: ldc2_w        #118
190: invokevirtual #506
193: dstore        29
195: aload         19
197: ldc2_w        #1123
200: invokestatic  #109
203: invokevirtual #110
206: dstore        31
208: aload_2
209: aload         19
211: invokevirtual #393
214: dstore        33
216: new           #21
219: dup
220: invokespecial #22
223: ldc           #27
225: invokevirtual #24
228: dload         4
230: invokevirtual #28
233: ldc           #29
235: invokevirtual #24
238: dconst_1
239: invokevirtual #28
242: ldc           #27
244: invokevirtual #24
247: invokevirtual #26
250: dload         4
252: dconst_1
253: dcmpl
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #32
265: new           #21
268: dup
269: invokespecial #22
272: ldc           #27
274: invokevirtual #24
277: dload         9
279: invokevirtual #28
282: ldc           #29
284: invokevirtual #24
287: ldc2_w        #30
290: invokevirtual #28
293: ldc           #27
295: invokevirtual #24
298: invokevirtual #26
301: dload         9
303: ldc2_w        #30
306: dcmpl
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #32
318: new           #21
321: dup
322: invokespecial #22
325: ldc           #27
327: invokevirtual #24
330: dload         11
332: invokevirtual #28
335: ldc           #29
337: invokevirtual #24
340: ldc2_w        #45
343: invokevirtual #28
346: ldc           #27
348: invokevirtual #24
351: invokevirtual #26
354: dload         11
356: ldc2_w        #45
359: dcmpl
360: ifne          367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #32
371: new           #21
374: dup
375: invokespecial #22
378: ldc           #27
380: invokevirtual #24
383: dload         13
385: invokevirtual #28
388: ldc           #29
390: invokevirtual #24
393: ldc2_w        #87
396: invokevirtual #28
399: ldc           #27
401: invokevirtual #24
404: invokevirtual #26
407: dload         13
409: ldc2_w        #87
412: dcmpl
413: ifne          420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #32
424: new           #21
427: dup
428: invokespecial #22
431: ldc           #27
433: invokevirtual #24
436: dload         15
438: invokevirtual #28
441: ldc           #29
443: invokevirtual #24
446: dconst_1
447: invokevirtual #28
450: ldc           #27
452: invokevirtual #24
455: invokevirtual #26
458: dload         15
460: dconst_1
461: dcmpl
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #32
473: new           #21
476: dup
477: invokespecial #22
480: ldc           #27
482: invokevirtual #24
485: dload         22
487: invokevirtual #28
490: ldc           #29
492: invokevirtual #24
495: ldc2_w        #1125
498: invokevirtual #28
501: ldc           #27
503: invokevirtual #24
506: invokevirtual #26
509: dload         22
511: ldc2_w        #1125
514: dcmpl
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #32
526: aload         24
528: invokestatic  #77
531: new           #21
534: dup
535: invokespecial #22
538: ldc           #27
540: invokevirtual #24
543: dload         25
545: invokevirtual #28
548: ldc           #29
550: invokevirtual #24
553: ldc2_w        #144
556: invokevirtual #28
559: ldc           #27
561: invokevirtual #24
564: invokevirtual #26
567: dload         25
569: ldc2_w        #144
572: dcmpl
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #32
584: new           #21
587: dup
588: invokespecial #22
591: ldc           #27
593: invokevirtual #24
596: dload         27
598: invokevirtual #28
601: ldc           #29
603: invokevirtual #24
606: ldc2_w        #144
609: invokevirtual #28
612: ldc           #27
614: invokevirtual #24
617: invokevirtual #26
620: dload         27
622: ldc2_w        #144
625: dcmpl
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #32
637: new           #21
640: dup
641: invokespecial #22
644: ldc           #27
646: invokevirtual #24
649: dload         29
651: invokevirtual #28
654: ldc           #29
656: invokevirtual #24
659: ldc2_w        #1127
662: invokevirtual #28
665: ldc           #27
667: invokevirtual #24
670: invokevirtual #26
673: dload         29
675: ldc2_w        #1127
678: dcmpl
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #32
690: new           #21
693: dup
694: invokespecial #22
697: ldc           #27
699: invokevirtual #24
702: dload         31
704: invokevirtual #28
707: ldc           #29
709: invokevirtual #24
712: ldc2_w        #1129
715: invokevirtual #28
718: ldc           #27
720: invokevirtual #24
723: invokevirtual #26
726: dload         31
728: ldc2_w        #1129
731: dcmpl
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #32
743: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test334
Start line: 6520
End line: 6535
Method source code: 
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(5.1682037937235705d, 0.0d, (int) (short) 1);
        double double5 = poissonDistributionImpl3.probability(1);
        double double7 = poissonDistributionImpl3.normalApproximateProbability(7);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = poissonDistributionImpl3.cumulativeProbability(24, 81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.MaxIterationsExceededException; message: maximal number of iterations (1) exceeded");
        } catch (org.apache.commons.math.MaxIterationsExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.029431828321553385d + "'", double5 == 0.029431828321553385d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.8474837270121409d + "'", double7 == 0.8474837270121409d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1131
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #974
32: dconst_0
33: iconst_1
34: invokespecial #97
37: astore_1
38: aload_1
39: iconst_1
40: invokevirtual #54
43: dstore_2
44: aload_1
45: bipush        7
47: invokevirtual #63
50: dstore        4
52: aload_1
53: bipush        24
55: bipush        81
57: invokevirtual #64
60: dstore        6
62: ldc_w         #460
65: invokestatic  #17
68: goto          73
71: astore        6
73: new           #21
76: dup
77: invokespecial #22
80: ldc           #27
82: invokevirtual #24
85: dload_2
86: invokevirtual #28
89: ldc           #29
91: invokevirtual #24
94: ldc2_w        #1132
97: invokevirtual #28
100: ldc           #27
102: invokevirtual #24
105: invokevirtual #26
108: dload_2
109: ldc2_w        #1132
112: dcmpl
113: ifne          120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #32
124: new           #21
127: dup
128: invokespecial #22
131: ldc           #27
133: invokevirtual #24
136: dload         4
138: invokevirtual #28
141: ldc           #29
143: invokevirtual #24
146: ldc2_w        #1134
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: ldc2_w        #1134
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #32
177: return
Exception table:
from    to  target type
52    68    71   Class org/apache/commons/math/MaxIterationsExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test335
Start line: 6538
End line: 6560
Method source code: 
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl13 = poissonDistributionImpl1.randomData;
        int int16 = randomDataImpl13.nextSecureInt(97, (int) (short) 100);
        java.lang.String str18 = randomDataImpl13.nextHexString(94);
        java.lang.String str20 = randomDataImpl13.nextHexString(19);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl13);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1d8113a1713af1b328bb3140b9fcee7349ae3f733e3698d2ddf3956fe40d28583168d3bea5999dbac5c04bc5e350e6" + "'", str18, "1d8113a1713af1b328bb3140b9fcee7349ae3f733e3698d2ddf3956fe40d28583168d3bea5999dbac5c04bc5e350e6");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "f88404504f82b155d35" + "'", str20, "f88404504f82b155d35");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1136
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: getfield      #72
78: astore        12
80: aload         12
82: bipush        97
84: bipush        100
86: invokevirtual #653
89: istore        13
91: aload         12
93: bipush        94
95: invokevirtual #328
98: astore        14
100: aload         12
102: bipush        19
104: invokevirtual #328
107: astore        15
109: new           #21
112: dup
113: invokespecial #22
116: ldc           #27
118: invokevirtual #24
121: dload_2
122: invokevirtual #28
125: ldc           #29
127: invokevirtual #24
130: ldc2_w        #30
133: invokevirtual #28
136: ldc           #27
138: invokevirtual #24
141: invokevirtual #26
144: dload_2
145: ldc2_w        #30
148: dcmpl
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #32
160: new           #21
163: dup
164: invokespecial #22
167: ldc           #27
169: invokevirtual #24
172: dload         4
174: invokevirtual #28
177: ldc           #29
179: invokevirtual #24
182: ldc2_w        #45
185: invokevirtual #28
188: ldc           #27
190: invokevirtual #24
193: invokevirtual #26
196: dload         4
198: ldc2_w        #45
201: dcmpl
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #32
213: new           #21
216: dup
217: invokespecial #22
220: ldc           #27
222: invokevirtual #24
225: dload         6
227: invokevirtual #28
230: ldc           #29
232: invokevirtual #24
235: ldc2_w        #87
238: invokevirtual #28
241: ldc           #27
243: invokevirtual #24
246: invokevirtual #26
249: dload         6
251: ldc2_w        #87
254: dcmpl
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #32
266: new           #21
269: dup
270: invokespecial #22
273: ldc           #27
275: invokevirtual #24
278: dload         8
280: invokevirtual #28
283: ldc           #29
285: invokevirtual #24
288: dconst_1
289: invokevirtual #28
292: ldc           #27
294: invokevirtual #24
297: invokevirtual #26
300: dload         8
302: dconst_1
303: dcmpl
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #32
315: new           #21
318: dup
319: invokespecial #22
322: ldc           #27
324: invokevirtual #24
327: dload         10
329: invokevirtual #28
332: ldc           #29
334: invokevirtual #24
337: ldc2_w        #47
340: invokevirtual #28
343: ldc           #27
345: invokevirtual #24
348: invokevirtual #26
351: dload         10
353: ldc2_w        #47
356: dcmpl
357: ifne          364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #32
368: aload         12
370: invokestatic  #77
373: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test336
Start line: 6563
End line: 6573
Method source code: 
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 100);
        double double3 = poissonDistributionImpl1.probability(0.9999999899522336d);
        double double5 = poissonDistributionImpl1.cumulativeProbability(1.523643349404959d);
        double double6 = poissonDistributionImpl1.getMean();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.75727673578106E-42d + "'", double5 == 3.75727673578106E-42d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1137
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #10
32: invokespecial #9
35: astore_1
36: aload_1
37: ldc2_w        #178
40: invokevirtual #44
43: dstore_2
44: aload_1
45: ldc2_w        #1033
48: invokevirtual #141
51: dstore        4
53: aload_1
54: invokevirtual #102
57: dstore        6
59: new           #21
62: dup
63: invokespecial #22
66: ldc           #27
68: invokevirtual #24
71: dload_2
72: invokevirtual #28
75: ldc           #29
77: invokevirtual #24
80: dconst_0
81: invokevirtual #28
84: ldc           #27
86: invokevirtual #24
89: invokevirtual #26
92: dload_2
93: dconst_0
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #32
106: new           #21
109: dup
110: invokespecial #22
113: ldc           #27
115: invokevirtual #24
118: dload         4
120: invokevirtual #28
123: ldc           #29
125: invokevirtual #24
128: ldc2_w        #1035
131: invokevirtual #28
134: ldc           #27
136: invokevirtual #24
139: invokevirtual #26
142: dload         4
144: ldc2_w        #1035
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #32
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload         6
173: invokevirtual #28
176: ldc           #29
178: invokevirtual #24
181: ldc2_w        #10
184: invokevirtual #28
187: ldc           #27
189: invokevirtual #24
192: invokevirtual #26
195: dload         6
197: ldc2_w        #10
200: dcmpl
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #32
212: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test337
Start line: 6576
End line: 6596
Method source code: 
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        int int11 = poissonDistributionImpl1.sample();
        double double12 = poissonDistributionImpl1.getMean();
        int int14 = poissonDistributionImpl1.getDomainUpperBound(0.32947338752667243d);
        double double16 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117146065d + "'", double16 == 0.36787944117146065d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1138
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: invokevirtual #61
72: istore        10
74: aload_1
75: invokevirtual #102
78: dstore        11
80: aload_1
81: ldc2_w        #1139
84: invokevirtual #34
87: istore        13
89: aload_1
90: dconst_0
91: invokevirtual #141
94: dstore        14
96: new           #21
99: dup
100: invokespecial #22
103: ldc           #27
105: invokevirtual #24
108: dload_2
109: invokevirtual #28
112: ldc           #29
114: invokevirtual #24
117: ldc2_w        #47
120: invokevirtual #28
123: ldc           #27
125: invokevirtual #24
128: invokevirtual #26
131: dload_2
132: ldc2_w        #47
135: dcmpl
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #32
147: new           #21
150: dup
151: invokespecial #22
154: ldc           #27
156: invokevirtual #24
159: dload         4
161: invokevirtual #28
164: ldc           #29
166: invokevirtual #24
169: dconst_1
170: invokevirtual #28
173: ldc           #27
175: invokevirtual #24
178: invokevirtual #26
181: dload         4
183: dconst_1
184: dcmpl
185: ifne          192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #32
196: new           #21
199: dup
200: invokespecial #22
203: ldc           #27
205: invokevirtual #24
208: dload         6
210: invokevirtual #28
213: ldc           #29
215: invokevirtual #24
218: ldc2_w        #69
221: invokevirtual #28
224: ldc           #27
226: invokevirtual #24
229: invokevirtual #26
232: dload         6
234: ldc2_w        #69
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #32
249: new           #21
252: dup
253: invokespecial #22
256: ldc           #27
258: invokevirtual #24
261: dload         8
263: invokevirtual #28
266: ldc           #29
268: invokevirtual #24
271: dconst_0
272: invokevirtual #28
275: ldc           #27
277: invokevirtual #24
280: invokevirtual #26
283: dload         8
285: dconst_0
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #32
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: dload         11
312: invokevirtual #28
315: ldc           #29
317: invokevirtual #24
320: dconst_1
321: invokevirtual #28
324: ldc           #27
326: invokevirtual #24
329: invokevirtual #26
332: dload         11
334: dconst_1
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: iload         13
361: invokevirtual #40
364: ldc           #29
366: invokevirtual #24
369: ldc           #41
371: invokevirtual #40
374: ldc           #27
376: invokevirtual #24
379: invokevirtual #26
382: iload         13
384: ldc           #41
386: if_icmpne     393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #32
397: new           #21
400: dup
401: invokespecial #22
404: ldc           #27
406: invokevirtual #24
409: dload         14
411: invokevirtual #28
414: ldc           #29
416: invokevirtual #24
419: ldc2_w        #45
422: invokevirtual #28
425: ldc           #27
427: invokevirtual #24
430: invokevirtual #26
433: dload         14
435: ldc2_w        #45
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #32
450: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test338
Start line: 6599
End line: 6613
Method source code: 
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        int int7 = poissonDistributionImpl1.getDomainUpperBound((double) 10L);
        int int9 = poissonDistributionImpl1.getDomainLowerBound(3.141592653589793d);
        double double11 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1141
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: ldc2_w        #13
53: invokevirtual #34
56: istore        6
58: aload_1
59: ldc2_w        #166
62: invokevirtual #139
65: istore        7
67: aload_1
68: bipush        100
70: invokevirtual #63
73: dstore        8
75: new           #21
78: dup
79: invokespecial #22
82: ldc           #27
84: invokevirtual #24
87: dload_2
88: invokevirtual #28
91: ldc           #29
93: invokevirtual #24
96: ldc2_w        #47
99: invokevirtual #28
102: ldc           #27
104: invokevirtual #24
107: invokevirtual #26
110: dload_2
111: ldc2_w        #47
114: dcmpl
115: ifne          122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #32
126: new           #21
129: dup
130: invokespecial #22
133: ldc           #27
135: invokevirtual #24
138: dload         4
140: invokevirtual #28
143: ldc           #29
145: invokevirtual #24
148: dconst_1
149: invokevirtual #28
152: ldc           #27
154: invokevirtual #24
157: invokevirtual #26
160: dload         4
162: dconst_1
163: dcmpl
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #32
175: new           #21
178: dup
179: invokespecial #22
182: ldc           #27
184: invokevirtual #24
187: iload         6
189: invokevirtual #40
192: ldc           #29
194: invokevirtual #24
197: ldc           #41
199: invokevirtual #40
202: ldc           #27
204: invokevirtual #24
207: invokevirtual #26
210: iload         6
212: ldc           #41
214: if_icmpne     221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #32
225: new           #21
228: dup
229: invokespecial #22
232: ldc           #27
234: invokevirtual #24
237: iload         7
239: invokevirtual #40
242: ldc           #29
244: invokevirtual #24
247: iconst_0
248: invokevirtual #40
251: ldc           #27
253: invokevirtual #24
256: invokevirtual #26
259: iload         7
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: new           #21
275: dup
276: invokespecial #22
279: ldc           #27
281: invokevirtual #24
284: dload         8
286: invokevirtual #28
289: ldc           #29
291: invokevirtual #24
294: dconst_1
295: invokevirtual #28
298: ldc           #27
300: invokevirtual #24
303: invokevirtual #26
306: dload         8
308: dconst_1
309: dcmpl
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #32
321: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test339
Start line: 6616
End line: 6620
Method source code: 
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(179.01587019732065d, 138.17068981461057d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1142
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #1143
32: ldc2_w        #1145
35: invokespecial #255
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test340
Start line: 6623
End line: 6646
Method source code: 
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability(0.0d);
        int int12 = poissonDistributionImpl1.getDomainLowerBound((double) (short) -1);
        poissonDistributionImpl1.reseedRandomGenerator((long) '#');
        int int16 = poissonDistributionImpl1.getDomainLowerBound((double) ' ');
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        double double19 = randomDataImpl17.nextT((double) 56L);
        double double21 = randomDataImpl17.nextExponential(0.9705816396797255d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.36787944117146065d + "'", double10 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(randomDataImpl17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.6110810748069344d + "'", double19 == 0.6110810748069344d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.6797445605133504d + "'", double21 == 0.6797445605133504d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1147
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: dconst_0
59: invokevirtual #141
62: dstore        8
64: aload_1
65: ldc2_w        #142
68: invokevirtual #139
71: istore        10
73: aload_1
74: ldc2_w        #296
77: invokevirtual #157
80: aload_1
81: ldc2_w        #201
84: invokevirtual #139
87: istore        11
89: aload_1
90: getfield      #72
93: astore        12
95: aload         12
97: ldc2_w        #1068
100: invokevirtual #75
103: dstore        13
105: aload         12
107: ldc2_w        #1148
110: invokevirtual #203
113: dstore        15
115: new           #21
118: dup
119: invokespecial #22
122: ldc           #27
124: invokevirtual #24
127: dload_2
128: invokevirtual #28
131: ldc           #29
133: invokevirtual #24
136: ldc2_w        #30
139: invokevirtual #28
142: ldc           #27
144: invokevirtual #24
147: invokevirtual #26
150: dload_2
151: ldc2_w        #30
154: dcmpl
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #32
166: new           #21
169: dup
170: invokespecial #22
173: ldc           #27
175: invokevirtual #24
178: dload         4
180: invokevirtual #28
183: ldc           #29
185: invokevirtual #24
188: ldc2_w        #45
191: invokevirtual #28
194: ldc           #27
196: invokevirtual #24
199: invokevirtual #26
202: dload         4
204: ldc2_w        #45
207: dcmpl
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #32
219: new           #21
222: dup
223: invokespecial #22
226: ldc           #27
228: invokevirtual #24
231: dload         6
233: invokevirtual #28
236: ldc           #29
238: invokevirtual #24
241: ldc2_w        #87
244: invokevirtual #28
247: ldc           #27
249: invokevirtual #24
252: invokevirtual #26
255: dload         6
257: ldc2_w        #87
260: dcmpl
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: new           #21
275: dup
276: invokespecial #22
279: ldc           #27
281: invokevirtual #24
284: dload         8
286: invokevirtual #28
289: ldc           #29
291: invokevirtual #24
294: ldc2_w        #45
297: invokevirtual #28
300: ldc           #27
302: invokevirtual #24
305: invokevirtual #26
308: dload         8
310: ldc2_w        #45
313: dcmpl
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #32
325: new           #21
328: dup
329: invokespecial #22
332: ldc           #27
334: invokevirtual #24
337: iload         10
339: invokevirtual #40
342: ldc           #29
344: invokevirtual #24
347: iconst_0
348: invokevirtual #40
351: ldc           #27
353: invokevirtual #24
356: invokevirtual #26
359: iload         10
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #32
372: new           #21
375: dup
376: invokespecial #22
379: ldc           #27
381: invokevirtual #24
384: iload         11
386: invokevirtual #40
389: ldc           #29
391: invokevirtual #24
394: iconst_0
395: invokevirtual #40
398: ldc           #27
400: invokevirtual #24
403: invokevirtual #26
406: iload         11
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #32
419: aload         12
421: invokestatic  #77
424: new           #21
427: dup
428: invokespecial #22
431: ldc           #27
433: invokevirtual #24
436: dload         13
438: invokevirtual #28
441: ldc           #29
443: invokevirtual #24
446: ldc2_w        #1150
449: invokevirtual #28
452: ldc           #27
454: invokevirtual #24
457: invokevirtual #26
460: dload         13
462: ldc2_w        #1150
465: dcmpl
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #32
477: new           #21
480: dup
481: invokespecial #22
484: ldc           #27
486: invokevirtual #24
489: dload         15
491: invokevirtual #28
494: ldc           #29
496: invokevirtual #24
499: ldc2_w        #1152
502: invokevirtual #28
505: ldc           #27
507: invokevirtual #24
510: invokevirtual #26
513: dload         15
515: ldc2_w        #1152
518: dcmpl
519: ifne          526
522: iconst_1
523: goto          527
526: iconst_0
527: invokestatic  #32
530: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test341
Start line: 6649
End line: 6679
Method source code: 
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = randomDataImpl1.nextHexString(0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0): length (0)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.07315397437939825d) + "'", double5 == (-0.07315397437939825d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1154
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: aload_2
122: iconst_0
123: invokevirtual #328
126: astore        19
128: ldc_w         #329
131: invokestatic  #17
134: goto          139
137: astore        19
139: new           #21
142: dup
143: invokespecial #22
146: ldc           #27
148: invokevirtual #24
151: dload         4
153: invokevirtual #28
156: ldc           #29
158: invokevirtual #24
161: dconst_1
162: invokevirtual #28
165: ldc           #27
167: invokevirtual #24
170: invokevirtual #26
173: dload         4
175: dconst_1
176: dcmpl
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #32
188: new           #21
191: dup
192: invokespecial #22
195: ldc           #27
197: invokevirtual #24
200: dload         9
202: invokevirtual #28
205: ldc           #29
207: invokevirtual #24
210: ldc2_w        #30
213: invokevirtual #28
216: ldc           #27
218: invokevirtual #24
221: invokevirtual #26
224: dload         9
226: ldc2_w        #30
229: dcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #32
241: new           #21
244: dup
245: invokespecial #22
248: ldc           #27
250: invokevirtual #24
253: dload         11
255: invokevirtual #28
258: ldc           #29
260: invokevirtual #24
263: ldc2_w        #45
266: invokevirtual #28
269: ldc           #27
271: invokevirtual #24
274: invokevirtual #26
277: dload         11
279: ldc2_w        #45
282: dcmpl
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #32
294: new           #21
297: dup
298: invokespecial #22
301: ldc           #27
303: invokevirtual #24
306: dload         13
308: invokevirtual #28
311: ldc           #29
313: invokevirtual #24
316: ldc2_w        #87
319: invokevirtual #28
322: ldc           #27
324: invokevirtual #24
327: invokevirtual #26
330: dload         13
332: ldc2_w        #87
335: dcmpl
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #32
347: new           #21
350: dup
351: invokespecial #22
354: ldc           #27
356: invokevirtual #24
359: dload         15
361: invokevirtual #28
364: ldc           #29
366: invokevirtual #24
369: dconst_1
370: invokevirtual #28
373: ldc           #27
375: invokevirtual #24
378: invokevirtual #26
381: dload         15
383: dconst_1
384: dcmpl
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #32
396: return
Exception table:
from    to  target type
121   134   137   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test342
Start line: 6682
End line: 6694
Method source code: 
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.getDomainUpperBound((double) 9223372036854775807L);
        double double8 = poissonDistributionImpl1.probability(7.579902847457086d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1155
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: ldc2_w        #495
51: invokevirtual #34
54: istore        5
56: aload_1
57: ldc2_w        #898
60: invokevirtual #44
63: dstore        6
65: new           #21
68: dup
69: invokespecial #22
72: ldc           #27
74: invokevirtual #24
77: dload_2
78: invokevirtual #28
81: ldc           #29
83: invokevirtual #24
86: ldc2_w        #47
89: invokevirtual #28
92: ldc           #27
94: invokevirtual #24
97: invokevirtual #26
100: dload_2
101: ldc2_w        #47
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #32
116: aload         4
118: invokestatic  #77
121: new           #21
124: dup
125: invokespecial #22
128: ldc           #27
130: invokevirtual #24
133: iload         5
135: invokevirtual #40
138: ldc           #29
140: invokevirtual #24
143: ldc           #41
145: invokevirtual #40
148: ldc           #27
150: invokevirtual #24
153: invokevirtual #26
156: iload         5
158: ldc           #41
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #32
171: new           #21
174: dup
175: invokespecial #22
178: ldc           #27
180: invokevirtual #24
183: dload         6
185: invokevirtual #28
188: ldc           #29
190: invokevirtual #24
193: dconst_0
194: invokevirtual #28
197: ldc           #27
199: invokevirtual #24
202: invokevirtual #26
205: dload         6
207: dconst_0
208: dcmpl
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #32
220: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test343
Start line: 6697
End line: 6732
Method source code: 
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl0 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double2 = normalDistributionImpl0.density((java.lang.Double) 100.0d);
        double double4 = normalDistributionImpl0.density((double) 1);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl5 = normalDistributionImpl0.randomData;
        double double7 = randomDataImpl5.nextChiSquare(572.9577951308232d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl9 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double11 = poissonDistributionImpl9.probability(100);
        double double14 = poissonDistributionImpl9.cumulativeProbability(0.0d, (double) 'a');
        int int15 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl9);
        double double18 = randomDataImpl5.nextWeibull(0.2930641738000717d, 0.4925042174359671d);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl20 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double22 = poissonDistributionImpl20.probability(100);
        double double24 = poissonDistributionImpl20.normalApproximateProbability(2147483647);
        double double27 = poissonDistributionImpl20.cumulativeProbability((int) (short) 10, 2147483647);
        double double29 = poissonDistributionImpl20.normalApproximateProbability((int) (byte) -1);
        int int30 = randomDataImpl5.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl20);
        poissonDistributionImpl20.reseedRandomGenerator(79L);
        double double34 = poissonDistributionImpl20.cumulativeProbability(445.3636771583326d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.24197072451914337d + "'", double4 == 0.24197072451914337d);
        org.junit.Assert.assertNotNull(randomDataImpl5);
// flaky:         org.junit.Assert.assertTrue("'" + double7 + "' != '" + 550.4619732919217d + "'", double7 == 550.4619732919217d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3.941866060050443E-159d + "'", double11 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0027067824583939964d + "'", double18 == 0.0027067824583939964d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.941866060050443E-159d + "'", double22 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.1142547828857374E-7d + "'", double27 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.06680720126885803d + "'", double29 == 0.06680720126885803d);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1156
20: aastore
21: invokevirtual #7
24: pop
25: new           #107
28: dup
29: invokespecial #108
32: astore_1
33: aload_1
34: ldc2_w        #10
37: invokestatic  #109
40: invokevirtual #110
43: dstore_2
44: aload_1
45: dconst_1
46: invokevirtual #111
49: dstore        4
51: aload_1
52: getfield      #112
55: astore        6
57: aload         6
59: ldc2_w        #113
62: invokevirtual #115
65: dstore        7
67: new           #8
70: dup
71: dconst_1
72: invokespecial #9
75: astore        9
77: aload         9
79: bipush        100
81: invokevirtual #54
84: dstore        10
86: aload         9
88: dconst_0
89: ldc2_w        #55
92: invokevirtual #12
95: dstore        12
97: aload         6
99: aload         9
101: invokevirtual #116
104: istore        14
106: aload         6
108: ldc2_w        #198
111: ldc2_w        #127
114: invokevirtual #200
117: dstore        15
119: new           #8
122: dup
123: dconst_1
124: invokespecial #9
127: astore        17
129: aload         17
131: bipush        100
133: invokevirtual #54
136: dstore        18
138: aload         17
140: ldc           #41
142: invokevirtual #63
145: dstore        20
147: aload         17
149: bipush        10
151: ldc           #41
153: invokevirtual #64
156: dstore        22
158: aload         17
160: iconst_m1
161: invokevirtual #63
164: dstore        24
166: aload         6
168: aload         17
170: invokevirtual #116
173: istore        26
175: aload         17
177: ldc2_w        #1157
180: invokevirtual #157
183: aload         17
185: ldc2_w        #1159
188: invokevirtual #141
191: dstore        27
193: new           #21
196: dup
197: invokespecial #22
200: ldc           #27
202: invokevirtual #24
205: dload_2
206: invokevirtual #28
209: ldc           #29
211: invokevirtual #24
214: dconst_0
215: invokevirtual #28
218: ldc           #27
220: invokevirtual #24
223: invokevirtual #26
226: dload_2
227: dconst_0
228: dcmpl
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #32
240: new           #21
243: dup
244: invokespecial #22
247: ldc           #27
249: invokevirtual #24
252: dload         4
254: invokevirtual #28
257: ldc           #29
259: invokevirtual #24
262: ldc2_w        #118
265: invokevirtual #28
268: ldc           #27
270: invokevirtual #24
273: invokevirtual #26
276: dload         4
278: ldc2_w        #118
281: dcmpl
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #32
293: aload         6
295: invokestatic  #77
298: new           #21
301: dup
302: invokespecial #22
305: ldc           #27
307: invokevirtual #24
310: dload         10
312: invokevirtual #28
315: ldc           #29
317: invokevirtual #24
320: ldc2_w        #47
323: invokevirtual #28
326: ldc           #27
328: invokevirtual #24
331: invokevirtual #26
334: dload         10
336: ldc2_w        #47
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #32
351: new           #21
354: dup
355: invokespecial #22
358: ldc           #27
360: invokevirtual #24
363: dload         12
365: invokevirtual #28
368: ldc           #29
370: invokevirtual #24
373: dconst_1
374: invokevirtual #28
377: ldc           #27
379: invokevirtual #24
382: invokevirtual #26
385: dload         12
387: dconst_1
388: dcmpl
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #32
400: new           #21
403: dup
404: invokespecial #22
407: ldc           #27
409: invokevirtual #24
412: dload         18
414: invokevirtual #28
417: ldc           #29
419: invokevirtual #24
422: ldc2_w        #47
425: invokevirtual #28
428: ldc           #27
430: invokevirtual #24
433: invokevirtual #26
436: dload         18
438: ldc2_w        #47
441: dcmpl
442: ifne          449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #32
453: new           #21
456: dup
457: invokespecial #22
460: ldc           #27
462: invokevirtual #24
465: dload         20
467: invokevirtual #28
470: ldc           #29
472: invokevirtual #24
475: dconst_1
476: invokevirtual #28
479: ldc           #27
481: invokevirtual #24
484: invokevirtual #26
487: dload         20
489: dconst_1
490: dcmpl
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #32
502: new           #21
505: dup
506: invokespecial #22
509: ldc           #27
511: invokevirtual #24
514: dload         22
516: invokevirtual #28
519: ldc           #29
521: invokevirtual #24
524: ldc2_w        #69
527: invokevirtual #28
530: ldc           #27
532: invokevirtual #24
535: invokevirtual #26
538: dload         22
540: ldc2_w        #69
543: dcmpl
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #32
555: new           #21
558: dup
559: invokespecial #22
562: ldc           #27
564: invokevirtual #24
567: dload         24
569: invokevirtual #28
572: ldc           #29
574: invokevirtual #24
577: ldc2_w        #87
580: invokevirtual #28
583: ldc           #27
585: invokevirtual #24
588: invokevirtual #26
591: dload         24
593: ldc2_w        #87
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #32
608: new           #21
611: dup
612: invokespecial #22
615: ldc           #27
617: invokevirtual #24
620: dload         27
622: invokevirtual #28
625: ldc           #29
627: invokevirtual #24
630: dconst_1
631: invokevirtual #28
634: ldc           #27
636: invokevirtual #24
639: invokevirtual #26
642: dload         27
644: dconst_1
645: dcmpl
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #32
657: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test344
Start line: 6735
End line: 6746
Method source code: 
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        randomDataImpl4.reSeed();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1161
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: invokevirtual #398
62: new           #21
65: dup
66: invokespecial #22
69: ldc           #27
71: invokevirtual #24
74: dload_2
75: invokevirtual #28
78: ldc           #29
80: invokevirtual #24
83: ldc2_w        #47
86: invokevirtual #28
89: ldc           #27
91: invokevirtual #24
94: invokevirtual #26
97: dload_2
98: ldc2_w        #47
101: dcmpl
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #32
113: aload         4
115: invokestatic  #77
118: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test345
Start line: 6749
End line: 6753
Method source code: 
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl2 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.016059405789945882d, 5.3344115463038834E241d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1162
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #1163
32: ldc2_w        #1165
35: invokespecial #255
38: astore_1
39: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test346
Start line: 6756
End line: 6786
Method source code: 
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double4 = poissonDistributionImpl1.cumulativeProbability((double) 1L, (double) 100L);
        double double6 = poissonDistributionImpl1.cumulativeProbability(0);
        double double8 = poissonDistributionImpl1.normalApproximateProbability((int) (byte) -1);
        double double10 = poissonDistributionImpl1.cumulativeProbability((int) '4');
        double double12 = poissonDistributionImpl1.probability((double) 100L);
        double double14 = poissonDistributionImpl1.cumulativeProbability((double) (-1));
        double double16 = poissonDistributionImpl1.probability((double) (byte) 0);
        double double17 = poissonDistributionImpl1.getMean();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = poissonDistributionImpl1.inverseCumulativeProbability((double) 33);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.6321205588285393d + "'", double4 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36787944117146065d + "'", double6 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.06680720126885803d + "'", double8 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.941866060050443E-159d + "'", double12 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.36787944117144233d + "'", double16 == 0.36787944117144233d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1167
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_1
36: ldc2_w        #10
39: invokevirtual #12
42: dstore_2
43: aload_1
44: iconst_0
45: invokevirtual #43
48: dstore        4
50: aload_1
51: iconst_m1
52: invokevirtual #63
55: dstore        6
57: aload_1
58: bipush        52
60: invokevirtual #43
63: dstore        8
65: aload_1
66: ldc2_w        #10
69: invokevirtual #44
72: dstore        10
74: aload_1
75: ldc2_w        #142
78: invokevirtual #141
81: dstore        12
83: aload_1
84: dconst_0
85: invokevirtual #44
88: dstore        14
90: aload_1
91: invokevirtual #102
94: dstore        16
96: aload_1
97: ldc2_w        #909
100: invokevirtual #15
103: istore        18
105: ldc           #16
107: invokestatic  #17
110: goto          155
113: astore        18
115: aload         18
117: invokevirtual #19
120: invokevirtual #20
123: ifne          155
126: new           #21
129: dup
130: invokespecial #22
133: ldc           #23
135: invokevirtual #24
138: aload         18
140: invokevirtual #19
143: invokevirtual #25
146: invokevirtual #24
149: invokevirtual #26
152: invokestatic  #17
155: new           #21
158: dup
159: invokespecial #22
162: ldc           #27
164: invokevirtual #24
167: dload_2
168: invokevirtual #28
171: ldc           #29
173: invokevirtual #24
176: ldc2_w        #30
179: invokevirtual #28
182: ldc           #27
184: invokevirtual #24
187: invokevirtual #26
190: dload_2
191: ldc2_w        #30
194: dcmpl
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #32
206: new           #21
209: dup
210: invokespecial #22
213: ldc           #27
215: invokevirtual #24
218: dload         4
220: invokevirtual #28
223: ldc           #29
225: invokevirtual #24
228: ldc2_w        #45
231: invokevirtual #28
234: ldc           #27
236: invokevirtual #24
239: invokevirtual #26
242: dload         4
244: ldc2_w        #45
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #32
259: new           #21
262: dup
263: invokespecial #22
266: ldc           #27
268: invokevirtual #24
271: dload         6
273: invokevirtual #28
276: ldc           #29
278: invokevirtual #24
281: ldc2_w        #87
284: invokevirtual #28
287: ldc           #27
289: invokevirtual #24
292: invokevirtual #26
295: dload         6
297: ldc2_w        #87
300: dcmpl
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #32
312: new           #21
315: dup
316: invokespecial #22
319: ldc           #27
321: invokevirtual #24
324: dload         8
326: invokevirtual #28
329: ldc           #29
331: invokevirtual #24
334: dconst_1
335: invokevirtual #28
338: ldc           #27
340: invokevirtual #24
343: invokevirtual #26
346: dload         8
348: dconst_1
349: dcmpl
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: new           #21
364: dup
365: invokespecial #22
368: ldc           #27
370: invokevirtual #24
373: dload         10
375: invokevirtual #28
378: ldc           #29
380: invokevirtual #24
383: ldc2_w        #47
386: invokevirtual #28
389: ldc           #27
391: invokevirtual #24
394: invokevirtual #26
397: dload         10
399: ldc2_w        #47
402: dcmpl
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #32
414: new           #21
417: dup
418: invokespecial #22
421: ldc           #27
423: invokevirtual #24
426: dload         12
428: invokevirtual #28
431: ldc           #29
433: invokevirtual #24
436: dconst_0
437: invokevirtual #28
440: ldc           #27
442: invokevirtual #24
445: invokevirtual #26
448: dload         12
450: dconst_0
451: dcmpl
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #32
463: new           #21
466: dup
467: invokespecial #22
470: ldc           #27
472: invokevirtual #24
475: dload         14
477: invokevirtual #28
480: ldc           #29
482: invokevirtual #24
485: ldc2_w        #168
488: invokevirtual #28
491: ldc           #27
493: invokevirtual #24
496: invokevirtual #26
499: dload         14
501: ldc2_w        #168
504: dcmpl
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #32
516: new           #21
519: dup
520: invokespecial #22
523: ldc           #27
525: invokevirtual #24
528: dload         16
530: invokevirtual #28
533: ldc           #29
535: invokevirtual #24
538: dconst_1
539: invokevirtual #28
542: ldc           #27
544: invokevirtual #24
547: invokevirtual #26
550: dload         16
552: dconst_1
553: dcmpl
554: ifne          561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #32
565: return
Exception table:
from    to  target type
96   110   113   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test347
Start line: 6789
End line: 6821
Method source code: 
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        int int6 = poissonDistributionImpl1.inverseCumulativeProbability(0.0d);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl7 = poissonDistributionImpl1.randomData;
        double double10 = randomDataImpl7.nextWeibull(3.430736374087032E10d, 2.0878348689268407d);
        double double13 = randomDataImpl7.nextBeta(0.6248471711437631d, 2.993222846126381d);
        long long15 = randomDataImpl7.nextPoisson(1.3834479069238827E-21d);
        long long17 = randomDataImpl7.nextPoisson(96.99999999999999d);
        int int20 = randomDataImpl7.nextPascal(1565197, 0.8882749906690643d);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = randomDataImpl7.nextChiSquare((-11.437118065595987d));
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(randomDataImpl7);
// flaky:         org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.087834868835298d + "'", double10 == 2.087834868835298d);
// flaky:         org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.1231525799225962d + "'", double13 == 0.1231525799225962d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 99L + "'", long17 == 99L);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 196318 + "'", int20 == 196318);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1168
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload_1
48: dconst_0
49: invokevirtual #15
52: istore        5
54: aload_1
55: getfield      #72
58: astore        6
60: aload         6
62: ldc2_w        #375
65: ldc2_w        #377
68: invokevirtual #200
71: dstore        7
73: aload         6
75: ldc2_w        #1098
78: ldc2_w        #1100
81: invokevirtual #713
84: dstore        9
86: aload         6
88: ldc2_w        #586
91: invokevirtual #92
94: lstore        11
96: aload         6
98: ldc2_w        #1169
101: invokevirtual #92
104: lstore        13
106: aload         6
108: ldc_w         #420
111: ldc2_w        #1171
114: invokevirtual #698
117: istore        15
119: aload         6
121: ldc2_w        #1173
124: invokevirtual #115
127: dstore        16
129: ldc           #16
131: invokestatic  #17
134: goto          179
137: astore        16
139: aload         16
141: invokevirtual #19
144: invokevirtual #20
147: ifne          179
150: new           #21
153: dup
154: invokespecial #22
157: ldc           #23
159: invokevirtual #24
162: aload         16
164: invokevirtual #19
167: invokevirtual #25
170: invokevirtual #24
173: invokevirtual #26
176: invokestatic  #17
179: new           #21
182: dup
183: invokespecial #22
186: ldc           #27
188: invokevirtual #24
191: dload_2
192: invokevirtual #28
195: ldc           #29
197: invokevirtual #24
200: ldc2_w        #47
203: invokevirtual #28
206: ldc           #27
208: invokevirtual #24
211: invokevirtual #26
214: dload_2
215: ldc2_w        #47
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #32
230: aload         4
232: invokestatic  #77
235: new           #21
238: dup
239: invokespecial #22
242: ldc           #27
244: invokevirtual #24
247: iload         5
249: invokevirtual #40
252: ldc           #29
254: invokevirtual #24
257: iconst_m1
258: invokevirtual #40
261: ldc           #27
263: invokevirtual #24
266: invokevirtual #26
269: iload         5
271: iconst_m1
272: if_icmpne     279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #32
283: aload         6
285: invokestatic  #77
288: new           #21
291: dup
292: invokespecial #22
295: ldc           #27
297: invokevirtual #24
300: lload         11
302: invokevirtual #173
305: ldc           #29
307: invokevirtual #24
310: lconst_0
311: invokevirtual #173
314: ldc           #27
316: invokevirtual #24
319: invokevirtual #26
322: lload         11
324: lconst_0
325: lcmp
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #32
337: return
Exception table:
from    to  target type
119   134   137   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test348
Start line: 6824
End line: 6845
Method source code: 
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl4 = poissonDistributionImpl1.randomData;
        long long6 = randomDataImpl4.nextPoisson(0.4194139451537116d);
        double double9 = randomDataImpl4.nextGamma(2.6593984616112802d, 0.9937903346742238d);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl10 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double12 = normalDistributionImpl10.density((java.lang.Double) 100.0d);
        double double13 = normalDistributionImpl10.getMean();
        double double14 = randomDataImpl4.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl10);
        double double16 = normalDistributionImpl10.getDomainLowerBound(89.58769685352438d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertNotNull(randomDataImpl4);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.9129958934566975d + "'", double9 == 3.9129958934566975d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.3201876528117676d) + "'", double14 == (-0.3201876528117676d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1175
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: getfield      #72
45: astore        4
47: aload         4
49: ldc2_w        #282
52: invokevirtual #92
55: lstore        5
57: aload         4
59: ldc2_w        #315
62: ldc2_w        #317
65: invokevirtual #192
68: dstore        7
70: new           #107
73: dup
74: invokespecial #108
77: astore        9
79: aload         9
81: ldc2_w        #10
84: invokestatic  #109
87: invokevirtual #110
90: dstore        10
92: aload         9
94: invokevirtual #392
97: dstore        12
99: aload         4
101: aload         9
103: invokevirtual #393
106: dstore        14
108: aload         9
110: ldc2_w        #1176
113: invokevirtual #1178
116: dstore        16
118: new           #21
121: dup
122: invokespecial #22
125: ldc           #27
127: invokevirtual #24
130: dload_2
131: invokevirtual #28
134: ldc           #29
136: invokevirtual #24
139: ldc2_w        #47
142: invokevirtual #28
145: ldc           #27
147: invokevirtual #24
150: invokevirtual #26
153: dload_2
154: ldc2_w        #47
157: dcmpl
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #32
169: aload         4
171: invokestatic  #77
174: new           #21
177: dup
178: invokespecial #22
181: ldc           #27
183: invokevirtual #24
186: dload         10
188: invokevirtual #28
191: ldc           #29
193: invokevirtual #24
196: dconst_0
197: invokevirtual #28
200: ldc           #27
202: invokevirtual #24
205: invokevirtual #26
208: dload         10
210: dconst_0
211: dcmpl
212: ifne          219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #32
223: new           #21
226: dup
227: invokespecial #22
230: ldc           #27
232: invokevirtual #24
235: dload         12
237: invokevirtual #28
240: ldc           #29
242: invokevirtual #24
245: dconst_0
246: invokevirtual #28
249: ldc           #27
251: invokevirtual #24
254: invokevirtual #26
257: dload         12
259: dconst_0
260: dcmpl
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #32
272: new           #21
275: dup
276: invokespecial #22
279: ldc           #27
281: invokevirtual #24
284: dload         16
286: invokevirtual #28
289: ldc           #29
291: invokevirtual #24
294: dconst_0
295: invokevirtual #28
298: ldc           #27
300: invokevirtual #24
303: invokevirtual #26
306: dload         16
308: dconst_0
309: dcmpl
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #32
321: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test349
Start line: 6848
End line: 6854
Method source code: 
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl3 = new org.apache.commons.math.distribution.PoissonDistributionImpl(0.5789527014473835d, (-0.8594252029393532d), (int) (short) 10);
        double double5 = poissonDistributionImpl3.normalApproximateProbability(31);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1179
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #570
32: ldc2_w        #1180
35: bipush        10
37: invokespecial #97
40: astore_1
41: aload_1
42: bipush        31
44: invokevirtual #63
47: dstore_2
48: new           #21
51: dup
52: invokespecial #22
55: ldc           #27
57: invokevirtual #24
60: dload_2
61: invokevirtual #28
64: ldc           #29
66: invokevirtual #24
69: dconst_1
70: invokevirtual #28
73: ldc           #27
75: invokevirtual #24
78: invokevirtual #26
81: dload_2
82: dconst_1
83: dcmpl
84: ifne          91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #32
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test350
Start line: 6857
End line: 6889
Method source code: 
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        org.apache.commons.math.random.RandomGenerator randomGenerator0 = null;
        org.apache.commons.math.random.RandomDataImpl randomDataImpl1 = new org.apache.commons.math.random.RandomDataImpl(randomGenerator0);
        org.apache.commons.math.distribution.NormalDistributionImpl normalDistributionImpl2 = new org.apache.commons.math.distribution.NormalDistributionImpl();
        double double4 = normalDistributionImpl2.cumulativeProbability((double) (byte) 10);
        double double5 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.ContinuousDistribution) normalDistributionImpl2);
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl7 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double10 = poissonDistributionImpl7.cumulativeProbability((double) 1L, (double) 100L);
        double double12 = poissonDistributionImpl7.cumulativeProbability(0);
        double double14 = poissonDistributionImpl7.normalApproximateProbability((int) (byte) -1);
        double double16 = poissonDistributionImpl7.cumulativeProbability((int) '4');
        int int17 = poissonDistributionImpl7.sample();
        int int18 = randomDataImpl1.nextInversionDeviate((org.apache.commons.math.distribution.IntegerDistribution) poissonDistributionImpl7);
        double double21 = randomDataImpl1.nextGaussian((-0.47093222618459063d), 8.706621142874209d);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = randomDataImpl1.nextGaussian((-5.322572625293256d), (-0.9152523592151947d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -0.915 is smaller than, or equal to, the minimum (0): standard deviation (-0.915)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.3619857304262746d + "'", double5 == 0.3619857304262746d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6321205588285393d + "'", double10 == 0.6321205588285393d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.36787944117146065d + "'", double12 == 0.36787944117146065d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.06680720126885803d + "'", double14 == 0.06680720126885803d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-17.376141944320242d) + "'", double21 == (-17.376141944320242d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1182
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #347
30: dup
31: aload_1
32: invokespecial #348
35: astore_2
36: new           #107
39: dup
40: invokespecial #108
43: astore_3
44: aload_3
45: ldc2_w        #13
48: invokevirtual #506
51: dstore        4
53: aload_2
54: aload_3
55: invokevirtual #393
58: dstore        6
60: new           #8
63: dup
64: dconst_1
65: invokespecial #9
68: astore        8
70: aload         8
72: dconst_1
73: ldc2_w        #10
76: invokevirtual #12
79: dstore        9
81: aload         8
83: iconst_0
84: invokevirtual #43
87: dstore        11
89: aload         8
91: iconst_m1
92: invokevirtual #63
95: dstore        13
97: aload         8
99: bipush        52
101: invokevirtual #43
104: dstore        15
106: aload         8
108: invokevirtual #61
111: istore        17
113: aload_2
114: aload         8
116: invokevirtual #116
119: istore        18
121: aload_2
122: ldc2_w        #507
125: ldc2_w        #509
128: invokevirtual #288
131: dstore        19
133: aload_2
134: ldc2_w        #1183
137: ldc2_w        #1185
140: invokevirtual #288
143: dstore        21
145: ldc_w         #1187
148: invokestatic  #17
151: goto          156
154: astore        21
156: new           #21
159: dup
160: invokespecial #22
163: ldc           #27
165: invokevirtual #24
168: dload         4
170: invokevirtual #28
173: ldc           #29
175: invokevirtual #24
178: dconst_1
179: invokevirtual #28
182: ldc           #27
184: invokevirtual #24
187: invokevirtual #26
190: dload         4
192: dconst_1
193: dcmpl
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #32
205: new           #21
208: dup
209: invokespecial #22
212: ldc           #27
214: invokevirtual #24
217: dload         9
219: invokevirtual #28
222: ldc           #29
224: invokevirtual #24
227: ldc2_w        #30
230: invokevirtual #28
233: ldc           #27
235: invokevirtual #24
238: invokevirtual #26
241: dload         9
243: ldc2_w        #30
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #32
258: new           #21
261: dup
262: invokespecial #22
265: ldc           #27
267: invokevirtual #24
270: dload         11
272: invokevirtual #28
275: ldc           #29
277: invokevirtual #24
280: ldc2_w        #45
283: invokevirtual #28
286: ldc           #27
288: invokevirtual #24
291: invokevirtual #26
294: dload         11
296: ldc2_w        #45
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #32
311: new           #21
314: dup
315: invokespecial #22
318: ldc           #27
320: invokevirtual #24
323: dload         13
325: invokevirtual #28
328: ldc           #29
330: invokevirtual #24
333: ldc2_w        #87
336: invokevirtual #28
339: ldc           #27
341: invokevirtual #24
344: invokevirtual #26
347: dload         13
349: ldc2_w        #87
352: dcmpl
353: ifne          360
356: iconst_1
357: goto          361
360: iconst_0
361: invokestatic  #32
364: new           #21
367: dup
368: invokespecial #22
371: ldc           #27
373: invokevirtual #24
376: dload         15
378: invokevirtual #28
381: ldc           #29
383: invokevirtual #24
386: dconst_1
387: invokevirtual #28
390: ldc           #27
392: invokevirtual #24
395: invokevirtual #26
398: dload         15
400: dconst_1
401: dcmpl
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #32
413: return
Exception table:
from    to  target type
133   151   154   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test351
Start line: 6892
End line: 6902
Method source code: 
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((-1.6013111273282565d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: -1.601 is smaller than, or equal to, the minimum (0): mean (-1.601)");
        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1188
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #1189
32: invokespecial #9
35: astore_1
36: ldc_w         #1191
39: invokestatic  #17
42: goto          46
45: astore_1
46: return
Exception table:
from    to  target type
25    42    45   Class org/apache/commons/math/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/RegressionTest0.class
Class name: RegressionTest0
Method name: test352
Start line: 6905
End line: 6934
Method source code: 
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        org.apache.commons.math.distribution.PoissonDistributionImpl poissonDistributionImpl1 = new org.apache.commons.math.distribution.PoissonDistributionImpl((double) 1L);
        double double3 = poissonDistributionImpl1.probability(100);
        double double5 = poissonDistributionImpl1.normalApproximateProbability(2147483647);
        double double8 = poissonDistributionImpl1.cumulativeProbability((int) (short) 10, 2147483647);
        double double10 = poissonDistributionImpl1.probability((-1.207854600801523d));
        poissonDistributionImpl1.reseedRandomGenerator((long) 108);
        double double14 = poissonDistributionImpl1.cumulativeProbability(2147483647);
        double double16 = poissonDistributionImpl1.cumulativeProbability(2);
        org.apache.commons.math.random.RandomDataImpl randomDataImpl17 = poissonDistributionImpl1.randomData;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = randomDataImpl17.nextBinomial(806467, 2.694607689281334d);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.941866060050443E-159d + "'", double3 == 3.941866060050443E-159d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1142547828857374E-7d + "'", double8 == 1.1142547828857374E-7d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.919698602928607d + "'", double16 == 0.919698602928607d);
        org.junit.Assert.assertNotNull(randomDataImpl17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1192
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_1
30: invokespecial #9
33: astore_1
34: aload_1
35: bipush        100
37: invokevirtual #54
40: dstore_2
41: aload_1
42: ldc           #41
44: invokevirtual #63
47: dstore        4
49: aload_1
50: bipush        10
52: ldc           #41
54: invokevirtual #64
57: dstore        6
59: aload_1
60: ldc2_w        #65
63: invokevirtual #44
66: dstore        8
68: aload_1
69: ldc2_w        #234
72: invokevirtual #157
75: aload_1
76: ldc           #41
78: invokevirtual #43
81: dstore        10
83: aload_1
84: iconst_2
85: invokevirtual #43
88: dstore        12
90: aload_1
91: getfield      #72
94: astore        14
96: aload         14
98: ldc_w         #1193
101: ldc2_w        #1194
104: invokevirtual #117
107: istore        15
109: ldc           #16
111: invokestatic  #17
114: goto          159
117: astore        15
119: aload         15
121: invokevirtual #19
124: invokevirtual #20
127: ifne          159
130: new           #21
133: dup
134: invokespecial #22
137: ldc           #23
139: invokevirtual #24
142: aload         15
144: invokevirtual #19
147: invokevirtual #25
150: invokevirtual #24
153: invokevirtual #26
156: invokestatic  #17
159: new           #21
162: dup
163: invokespecial #22
166: ldc           #27
168: invokevirtual #24
171: dload_2
172: invokevirtual #28
175: ldc           #29
177: invokevirtual #24
180: ldc2_w        #47
183: invokevirtual #28
186: ldc           #27
188: invokevirtual #24
191: invokevirtual #26
194: dload_2
195: ldc2_w        #47
198: dcmpl
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #32
210: new           #21
213: dup
214: invokespecial #22
217: ldc           #27
219: invokevirtual #24
222: dload         4
224: invokevirtual #28
227: ldc           #29
229: invokevirtual #24
232: dconst_1
233: invokevirtual #28
236: ldc           #27
238: invokevirtual #24
241: invokevirtual #26
244: dload         4
246: dconst_1
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #32
259: new           #21
262: dup
263: invokespecial #22
266: ldc           #27
268: invokevirtual #24
271: dload         6
273: invokevirtual #28
276: ldc           #29
278: invokevirtual #24
281: ldc2_w        #69
284: invokevirtual #28
287: ldc           #27
289: invokevirtual #24
292: invokevirtual #26
295: dload         6
297: ldc2_w        #69
300: dcmpl
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #32
312: new           #21
315: dup
316: invokespecial #22
319: ldc           #27
321: invokevirtual #24
324: dload         8
326: invokevirtual #28
329: ldc           #29
331: invokevirtual #24
334: dconst_0
335: invokevirtual #28
338: ldc           #27
340: invokevirtual #24
343: invokevirtual #26
346: dload         8
348: dconst_0
349: dcmpl
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #32
361: new           #21
364: dup
365: invokespecial #22
368: ldc           #27
370: invokevirtual #24
373: dload         10
375: invokevirtual #28
378: ldc           #29
380: invokevirtual #24
383: dconst_1
384: invokevirtual #28
387: ldc           #27
389: invokevirtual #24
392: invokevirtual #26
395: dload         10
397: dconst_1
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #32
410: new           #21
413: dup
414: invokespecial #22
417: ldc           #27
419: invokevirtual #24
422: dload         12
424: invokevirtual #28
427: ldc           #29
429: invokevirtual #24
432: ldc2_w        #731
435: invokevirtual #28
438: ldc           #27
440: invokevirtual #24
443: invokevirtual #26
446: dload         12
448: ldc2_w        #731
451: dcmpl
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #32
463: aload         14
465: invokestatic  #77
468: return
Exception table:
from    to  target type
96   114   117   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test0
Start line: 17
End line: 20
Method source code: 
  public void test0()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472);
      poissonDistributionImpl0.inverseCumulativeProbability(0.07490822288864472);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: invokespecial #5
10: astore_1
11: aload_1
12: ldc2_w        #3
15: invokevirtual #6
18: pop
19: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test1
Start line: 23
End line: 27
Method source code: 
  public void test1()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472, 0.07490822288864472);
      double double0 = poissonDistributionImpl0.getMean();
      assertEquals(0.07490822288864472, double0, 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: ldc2_w        #3
10: invokespecial #7
13: astore_1
14: aload_1
15: invokevirtual #8
18: dstore_2
19: ldc2_w        #3
22: dload_2
23: ldc2_w        #9
26: invokestatic  #11
29: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test2
Start line: 30
End line: 35
Method source code: 
  public void test2()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472);
      int int0 = poissonDistributionImpl0.sample();
      assertEquals(0, int0);
      assertEquals(0.07490822288864472, poissonDistributionImpl0.getMean(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: invokespecial #5
10: astore_1
11: aload_1
12: invokevirtual #12
15: istore_2
16: lconst_0
17: iload_2
18: i2l
19: invokestatic  #13
22: ldc2_w        #3
25: aload_1
26: invokevirtual #8
29: ldc2_w        #9
32: invokestatic  #11
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test3
Start line: 38
End line: 42
Method source code: 
  public void test3()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(2925.312765687821, 1707);
      double double0 = poissonDistributionImpl0.probability(1457);
      assertEquals(2.4632418364250662E-199, double0, 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #14
7: sipush        1707
10: invokespecial #16
13: astore_1
14: aload_1
15: sipush        1457
18: invokevirtual #17
21: dstore_2
22: ldc2_w        #18
25: dload_2
26: ldc2_w        #9
29: invokestatic  #11
32: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test4
Start line: 45
End line: 50
Method source code: 
  public void test4()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472);
      double double0 = poissonDistributionImpl0.normalApproximateProbability(0);
      assertEquals(0.9398082942215191, double0, 0.01);
      assertEquals(0.07490822288864472, poissonDistributionImpl0.getMean(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: invokespecial #5
10: astore_1
11: aload_1
12: iconst_0
13: invokevirtual #20
16: dstore_2
17: ldc2_w        #21
20: dload_2
21: ldc2_w        #9
24: invokestatic  #11
27: ldc2_w        #3
30: aload_1
31: invokevirtual #8
34: ldc2_w        #9
37: invokestatic  #11
40: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test5
Start line: 53
End line: 65
Method source code: 
  public void test5()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = null;
      try {
        poissonDistributionImpl0 = new PoissonDistributionImpl(-0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -0 is smaller than, or equal to, the minimum (0): mean (-0)
         //
         verifyException("org.apache.commons.math.distribution.PoissonDistributionImpl", e);
      }
  }
Method byte code: 
0: aconst_null
1: astore_1
2: new           #2
5: dup
6: ldc2_w        #23
9: dconst_0
10: invokespecial #7
13: astore_1
14: ldc           #25
16: invokestatic  #26
19: goto          29
22: astore_2
23: ldc           #28
25: aload_2
26: invokestatic  #29
29: return
Exception table:
from    to  target type
2    19    22   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test6
Start line: 68
End line: 73
Method source code: 
  public void test6()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472);
      double double0 = poissonDistributionImpl0.probability((-1));
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.07490822288864472, poissonDistributionImpl0.getMean(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: invokespecial #5
10: astore_1
11: aload_1
12: iconst_m1
13: invokevirtual #17
16: dstore_2
17: dconst_0
18: dload_2
19: ldc2_w        #9
22: invokestatic  #11
25: ldc2_w        #3
28: aload_1
29: invokevirtual #8
32: ldc2_w        #9
35: invokestatic  #11
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test7
Start line: 76
End line: 80
Method source code: 
  public void test7()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472);
      double double0 = poissonDistributionImpl0.probability(0);
      assertEquals(0.9278286358531357, double0, 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: invokespecial #5
10: astore_1
11: aload_1
12: iconst_0
13: invokevirtual #17
16: dstore_2
17: ldc2_w        #30
20: dload_2
21: ldc2_w        #9
24: invokestatic  #11
27: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test8
Start line: 83
End line: 88
Method source code: 
  public void test8()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1374.35, 1374.35, 2653);
      double double0 = poissonDistributionImpl0.probability(Integer.MAX_VALUE);
      assertEquals(1374.35, poissonDistributionImpl0.getMean(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #32
7: ldc2_w        #32
10: sipush        2653
13: invokespecial #34
16: astore_1
17: aload_1
18: ldc           #36
20: invokevirtual #17
23: dstore_2
24: ldc2_w        #32
27: aload_1
28: invokevirtual #8
31: ldc2_w        #9
34: invokestatic  #11
37: dconst_0
38: dload_2
39: ldc2_w        #9
42: invokestatic  #11
45: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/src/test/java/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/61/target/test-classes/org/apache/commons/math/distribution/PoissonDistributionImpl_ESTest.class
Class name: PoissonDistributionImpl_ESTest
Method name: test9
Start line: 91
End line: 96
Method source code: 
  public void test9()  throws Throwable  {
      PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.07490822288864472, 0.07490822288864472);
      double double0 = poissonDistributionImpl0.cumulativeProbability((-1), Integer.MAX_VALUE);
      assertEquals(0.07490822288864472, poissonDistributionImpl0.getMean(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: ldc2_w        #3
10: invokespecial #7
13: astore_1
14: aload_1
15: iconst_m1
16: ldc           #36
18: invokevirtual #37
21: dstore_2
22: ldc2_w        #3
25: aload_1
26: invokevirtual #8
29: ldc2_w        #9
32: invokestatic  #11
35: dconst_1
36: dload_2
37: ldc2_w        #9
40: invokestatic  #11
43: return
}
