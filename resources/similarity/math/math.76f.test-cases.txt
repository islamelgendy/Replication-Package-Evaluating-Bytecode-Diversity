Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test01
Start line: 12
End line: 69
Method source code: 
    public void test01() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test01");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.DecompositionSolver decompositionSolver42 = singularValueDecompositionImpl41.getSolver();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #25
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test02
Start line: 72
End line: 132
Method source code: 
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test02");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getS();
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #41
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #42
269: astore        31
271: ldc           #43
273: invokestatic  #27
276: goto          321
279: astore        31
281: aload         31
283: invokevirtual #45
286: invokevirtual #46
289: ifne          321
292: new           #30
295: dup
296: invokespecial #31
299: ldc           #47
301: invokevirtual #33
304: aload         31
306: invokevirtual #45
309: invokevirtual #48
312: invokevirtual #33
315: invokevirtual #36
318: invokestatic  #27
321: aload_2
322: invokestatic  #29
325: aload         5
327: invokestatic  #29
330: new           #30
333: dup
334: invokespecial #31
337: ldc           #32
339: invokevirtual #33
342: dload         6
344: invokevirtual #34
347: ldc           #35
349: invokevirtual #33
352: dconst_0
353: invokevirtual #34
356: ldc           #32
358: invokevirtual #33
361: invokevirtual #36
364: dload         6
366: dconst_0
367: dcmpl
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #37
379: aload         8
381: invokestatic  #29
384: aload         9
386: invokestatic  #29
389: aload         12
391: invokestatic  #29
394: new           #30
397: dup
398: invokespecial #31
401: ldc           #32
403: invokevirtual #33
406: dload         13
408: invokevirtual #34
411: ldc           #35
413: invokevirtual #33
416: dconst_0
417: invokevirtual #34
420: ldc           #32
422: invokevirtual #33
425: invokevirtual #36
428: dload         13
430: dconst_0
431: dcmpl
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #37
443: aload         15
445: invokestatic  #29
448: new           #30
451: dup
452: invokespecial #31
455: ldc           #32
457: invokevirtual #33
460: dload         16
462: invokevirtual #34
465: ldc           #35
467: invokevirtual #33
470: dconst_0
471: invokevirtual #34
474: ldc           #32
476: invokevirtual #33
479: invokevirtual #36
482: dload         16
484: dconst_0
485: dcmpl
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #37
497: aload         18
499: invokestatic  #29
502: aload         20
504: invokestatic  #29
507: aload         22
509: invokestatic  #29
512: aload         23
514: invokestatic  #29
517: aload         25
519: invokestatic  #29
522: aload         26
524: invokestatic  #29
527: aload         27
529: invokestatic  #29
532: aload         28
534: invokestatic  #29
537: aload         28
539: invokestatic  #38
542: ldc           #39
544: invokestatic  #40
547: aload         29
549: invokestatic  #29
552: return
Exception table:
from    to  target type
264   276   279   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test03
Start line: 135
End line: 192
Method source code: 
    public void test03() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test03");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getV();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #49
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #50
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test04
Start line: 195
End line: 252
Method source code: 
    public void test04() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test04");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            double double42 = singularValueDecompositionImpl41.getNorm();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #52
269: dstore        31
271: ldc           #53
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test05
Start line: 255
End line: 315
Method source code: 
    public void test05() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test05");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        double[] doubleArray42 = singularValueDecompositionImpl41.getSingularValues();
        // The following exception was thrown during execution in test generation
        try {
            int int43 = singularValueDecompositionImpl41.getRank();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #55
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #56
269: astore        31
271: aload         30
273: invokevirtual #57
276: istore        32
278: ldc           #53
280: invokestatic  #27
283: goto          288
286: astore        32
288: aload_2
289: invokestatic  #29
292: aload         5
294: invokestatic  #29
297: new           #30
300: dup
301: invokespecial #31
304: ldc           #32
306: invokevirtual #33
309: dload         6
311: invokevirtual #34
314: ldc           #35
316: invokevirtual #33
319: dconst_0
320: invokevirtual #34
323: ldc           #32
325: invokevirtual #33
328: invokevirtual #36
331: dload         6
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #37
346: aload         8
348: invokestatic  #29
351: aload         9
353: invokestatic  #29
356: aload         12
358: invokestatic  #29
361: new           #30
364: dup
365: invokespecial #31
368: ldc           #32
370: invokevirtual #33
373: dload         13
375: invokevirtual #34
378: ldc           #35
380: invokevirtual #33
383: dconst_0
384: invokevirtual #34
387: ldc           #32
389: invokevirtual #33
392: invokevirtual #36
395: dload         13
397: dconst_0
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #37
410: aload         15
412: invokestatic  #29
415: new           #30
418: dup
419: invokespecial #31
422: ldc           #32
424: invokevirtual #33
427: dload         16
429: invokevirtual #34
432: ldc           #35
434: invokevirtual #33
437: dconst_0
438: invokevirtual #34
441: ldc           #32
443: invokevirtual #33
446: invokevirtual #36
449: dload         16
451: dconst_0
452: dcmpl
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #37
464: aload         18
466: invokestatic  #29
469: aload         20
471: invokestatic  #29
474: aload         22
476: invokestatic  #29
479: aload         23
481: invokestatic  #29
484: aload         25
486: invokestatic  #29
489: aload         26
491: invokestatic  #29
494: aload         27
496: invokestatic  #29
499: aload         28
501: invokestatic  #29
504: aload         28
506: invokestatic  #38
509: ldc           #39
511: invokestatic  #40
514: aload         29
516: invokestatic  #29
519: aload         31
521: invokestatic  #29
524: aload         31
526: invokestatic  #38
529: ldc           #58
531: invokestatic  #40
534: return
Exception table:
from    to  target type
271   283   286   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test06
Start line: 318
End line: 375
Method source code: 
    public void test06() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test06");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getUT();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #59
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #60
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test07
Start line: 378
End line: 435
Method source code: 
    public void test07() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test07");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getUT();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #61
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #60
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test08
Start line: 438
End line: 495
Method source code: 
    public void test08() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test08");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getU();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #62
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #63
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test09
Start line: 498
End line: 561
Method source code: 
    public void test09() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test09");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        double[] doubleArray42 = singularValueDecompositionImpl41.getSingularValues();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42, false);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #64
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #56
269: astore        31
271: new           #8
274: dup
275: aload         31
277: iconst_0
278: invokespecial #65
281: astore        32
283: ldc           #43
285: invokestatic  #27
288: goto          333
291: astore        32
293: aload         32
295: invokevirtual #45
298: invokevirtual #46
301: ifne          333
304: new           #30
307: dup
308: invokespecial #31
311: ldc           #47
313: invokevirtual #33
316: aload         32
318: invokevirtual #45
321: invokevirtual #48
324: invokevirtual #33
327: invokevirtual #36
330: invokestatic  #27
333: aload_2
334: invokestatic  #29
337: aload         5
339: invokestatic  #29
342: new           #30
345: dup
346: invokespecial #31
349: ldc           #32
351: invokevirtual #33
354: dload         6
356: invokevirtual #34
359: ldc           #35
361: invokevirtual #33
364: dconst_0
365: invokevirtual #34
368: ldc           #32
370: invokevirtual #33
373: invokevirtual #36
376: dload         6
378: dconst_0
379: dcmpl
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #37
391: aload         8
393: invokestatic  #29
396: aload         9
398: invokestatic  #29
401: aload         12
403: invokestatic  #29
406: new           #30
409: dup
410: invokespecial #31
413: ldc           #32
415: invokevirtual #33
418: dload         13
420: invokevirtual #34
423: ldc           #35
425: invokevirtual #33
428: dconst_0
429: invokevirtual #34
432: ldc           #32
434: invokevirtual #33
437: invokevirtual #36
440: dload         13
442: dconst_0
443: dcmpl
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #37
455: aload         15
457: invokestatic  #29
460: new           #30
463: dup
464: invokespecial #31
467: ldc           #32
469: invokevirtual #33
472: dload         16
474: invokevirtual #34
477: ldc           #35
479: invokevirtual #33
482: dconst_0
483: invokevirtual #34
486: ldc           #32
488: invokevirtual #33
491: invokevirtual #36
494: dload         16
496: dconst_0
497: dcmpl
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #37
509: aload         18
511: invokestatic  #29
514: aload         20
516: invokestatic  #29
519: aload         22
521: invokestatic  #29
524: aload         23
526: invokestatic  #29
529: aload         25
531: invokestatic  #29
534: aload         26
536: invokestatic  #29
539: aload         27
541: invokestatic  #29
544: aload         28
546: invokestatic  #29
549: aload         28
551: invokestatic  #38
554: ldc           #39
556: invokestatic  #40
559: aload         29
561: invokestatic  #29
564: aload         31
566: invokestatic  #29
569: aload         31
571: invokestatic  #38
574: ldc           #58
576: invokestatic  #40
579: return
Exception table:
from    to  target type
271   288   291   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test10
Start line: 564
End line: 624
Method source code: 
    public void test10() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test10");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        double[] doubleArray42 = singularValueDecompositionImpl41.getSingularValues();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix43 = singularValueDecompositionImpl41.getUT();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #66
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #56
269: astore        31
271: aload         30
273: invokevirtual #60
276: astore        32
278: ldc           #26
280: invokestatic  #27
283: goto          288
286: astore        32
288: aload_2
289: invokestatic  #29
292: aload         5
294: invokestatic  #29
297: new           #30
300: dup
301: invokespecial #31
304: ldc           #32
306: invokevirtual #33
309: dload         6
311: invokevirtual #34
314: ldc           #35
316: invokevirtual #33
319: dconst_0
320: invokevirtual #34
323: ldc           #32
325: invokevirtual #33
328: invokevirtual #36
331: dload         6
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #37
346: aload         8
348: invokestatic  #29
351: aload         9
353: invokestatic  #29
356: aload         12
358: invokestatic  #29
361: new           #30
364: dup
365: invokespecial #31
368: ldc           #32
370: invokevirtual #33
373: dload         13
375: invokevirtual #34
378: ldc           #35
380: invokevirtual #33
383: dconst_0
384: invokevirtual #34
387: ldc           #32
389: invokevirtual #33
392: invokevirtual #36
395: dload         13
397: dconst_0
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #37
410: aload         15
412: invokestatic  #29
415: new           #30
418: dup
419: invokespecial #31
422: ldc           #32
424: invokevirtual #33
427: dload         16
429: invokevirtual #34
432: ldc           #35
434: invokevirtual #33
437: dconst_0
438: invokevirtual #34
441: ldc           #32
443: invokevirtual #33
446: invokevirtual #36
449: dload         16
451: dconst_0
452: dcmpl
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #37
464: aload         18
466: invokestatic  #29
469: aload         20
471: invokestatic  #29
474: aload         22
476: invokestatic  #29
479: aload         23
481: invokestatic  #29
484: aload         25
486: invokestatic  #29
489: aload         26
491: invokestatic  #29
494: aload         27
496: invokestatic  #29
499: aload         28
501: invokestatic  #29
504: aload         28
506: invokestatic  #38
509: ldc           #39
511: invokestatic  #40
514: aload         29
516: invokestatic  #29
519: aload         31
521: invokestatic  #29
524: aload         31
526: invokestatic  #38
529: ldc           #58
531: invokestatic  #40
534: return
Exception table:
from    to  target type
271   283   286   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test11
Start line: 627
End line: 684
Method source code: 
    public void test11() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test11");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getV();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #67
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #50
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test12
Start line: 687
End line: 744
Method source code: 
    public void test12() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test12");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            double double42 = singularValueDecompositionImpl41.getConditionNumber();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #68
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #69
269: dstore        31
271: ldc           #53
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test13
Start line: 747
End line: 804
Method source code: 
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test13");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix43 = singularValueDecompositionImpl41.getCovariance((-0.999999999999993d));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: ldc2_w        #71
269: invokevirtual #73
272: astore        31
274: ldc           #53
276: invokestatic  #27
279: goto          284
282: astore        31
284: aload_2
285: invokestatic  #29
288: aload         5
290: invokestatic  #29
293: new           #30
296: dup
297: invokespecial #31
300: ldc           #32
302: invokevirtual #33
305: dload         6
307: invokevirtual #34
310: ldc           #35
312: invokevirtual #33
315: dconst_0
316: invokevirtual #34
319: ldc           #32
321: invokevirtual #33
324: invokevirtual #36
327: dload         6
329: dconst_0
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #37
342: aload         8
344: invokestatic  #29
347: aload         9
349: invokestatic  #29
352: aload         12
354: invokestatic  #29
357: new           #30
360: dup
361: invokespecial #31
364: ldc           #32
366: invokevirtual #33
369: dload         13
371: invokevirtual #34
374: ldc           #35
376: invokevirtual #33
379: dconst_0
380: invokevirtual #34
383: ldc           #32
385: invokevirtual #33
388: invokevirtual #36
391: dload         13
393: dconst_0
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #37
406: aload         15
408: invokestatic  #29
411: new           #30
414: dup
415: invokespecial #31
418: ldc           #32
420: invokevirtual #33
423: dload         16
425: invokevirtual #34
428: ldc           #35
430: invokevirtual #33
433: dconst_0
434: invokevirtual #34
437: ldc           #32
439: invokevirtual #33
442: invokevirtual #36
445: dload         16
447: dconst_0
448: dcmpl
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #37
460: aload         18
462: invokestatic  #29
465: aload         20
467: invokestatic  #29
470: aload         22
472: invokestatic  #29
475: aload         23
477: invokestatic  #29
480: aload         25
482: invokestatic  #29
485: aload         26
487: invokestatic  #29
490: aload         27
492: invokestatic  #29
495: aload         28
497: invokestatic  #29
500: aload         28
502: invokestatic  #38
505: ldc           #39
507: invokestatic  #40
510: aload         29
512: invokestatic  #29
515: return
Exception table:
from    to  target type
264   279   282   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test14
Start line: 807
End line: 901
Method source code: 
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test14");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector57 = arrayRealVector55.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector59.mapPowToSelf((double) 0);
        arrayRealVector55.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector59);
        org.apache.commons.math.linear.RealVector realVector63 = arrayRealVector59.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector66 = arrayRealVector65.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector68 = arrayRealVector65.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector69 = arrayRealVector59.add(arrayRealVector65);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector73 = arrayRealVector71.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector74 = arrayRealVector71.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector75 = arrayRealVector71.mapExp();
        org.apache.commons.math.linear.RealMatrix realMatrix76 = arrayRealVector59.outerProduct((org.apache.commons.math.linear.RealVector) arrayRealVector71);
        org.apache.commons.math.linear.BiDiagonalTransformer biDiagonalTransformer77 = new org.apache.commons.math.linear.BiDiagonalTransformer(realMatrix76);
        org.apache.commons.math.linear.RealMatrix realMatrix78 = biDiagonalTransformer77.getU();
        org.apache.commons.math.linear.RealMatrix realMatrix79 = biDiagonalTransformer77.getV();
        org.apache.commons.math.linear.EigenDecompositionImpl eigenDecompositionImpl81 = new org.apache.commons.math.linear.EigenDecompositionImpl(realMatrix79, (double) 0);
        double double82 = eigenDecompositionImpl81.getDeterminant();
        double double83 = eigenDecompositionImpl81.getDeterminant();
        double[] doubleArray84 = eigenDecompositionImpl81.getRealEigenvalues();
        org.apache.commons.math.linear.RealMatrix realMatrix85 = eigenDecompositionImpl81.getV();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible((org.apache.commons.math.linear.AnyMatrix) realMatrix51, (org.apache.commons.math.linear.AnyMatrix) realMatrix85);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertNotNull(realVector68);
        org.junit.Assert.assertNotNull(arrayRealVector69);
        org.junit.Assert.assertNotNull(realVector73);
        org.junit.Assert.assertNotNull(realVector74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertNotNull(realMatrix76);
        org.junit.Assert.assertNotNull(realMatrix78);
        org.junit.Assert.assertNotNull(realMatrix79);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.999999999999993d) + "'", double82 == (-0.999999999999993d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.999999999999993d) + "'", double83 == (-0.999999999999993d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0000000000000173, 1.0000000000000029, 1.0000000000000027, 1.0000000000000022, 1.0000000000000018, 1.0000000000000018, 1.0000000000000016, 1.0000000000000016, 1.0000000000000016, 1.0000000000000016, 1.0000000000000016, 1.000000000000001, 1.0000000000000009, 1.0000000000000009, 1.0000000000000009, 1.0000000000000009, 1.0000000000000009, 1.0000000000000009, 1.0000000000000007, 1.0000000000000007, 1.0000000000000007, 1.0000000000000007, 1.0000000000000004, 1.0000000000000004, 1.0000000000000004, 1.0000000000000004, 1.0000000000000004, 1.0000000000000004, 1.0000000000000004, 1.0000000000000002, 1.0000000000000002, 1.0000000000000002, 1.0000000000000002, 1.0000000000000002, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 0.9999999999999998, 0.9999999999999998, 0.9999999999999998, 0.9999999999999998, 0.9999999999999998, 0.9999999999999998, 0.9999999999999997, 0.9999999999999997, 0.9999999999999997, 0.9999999999999996, 0.9999999999999996, 0.9999999999999996, 0.9999999999999996, 0.9999999999999994, 0.9999999999999994, 0.9999999999999994, 0.9999999999999994, 0.9999999999999994, 0.9999999999999993, 0.9999999999999993, 0.9999999999999992, 0.9999999999999992, 0.9999999999999992, 0.9999999999999992, 0.9999999999999991, 0.9999999999999991, 0.9999999999999991, 0.999999999999999, 0.999999999999999, 0.999999999999999, 0.9999999999999989, 0.9999999999999988, 0.9999999999999988, 0.9999999999999987, 0.9999999999999986, 0.9999999999999986, 0.9999999999999986, 0.9999999999999984, 0.9999999999999983, 0.9999999999999983, 0.9999999999999983, 0.9999999999999981, 0.999999999999998, 0.9999999999999977, 0.9999999999999976, 0.9999999999999968, 0.9999999999999967, 0.9999999999999919, -1.000000000000003]");
        org.junit.Assert.assertNotNull(realMatrix85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #74
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: new           #8
365: dup
366: bipush        100
368: invokespecial #9
371: astore        18
373: aload         18
375: dconst_0
376: invokevirtual #10
379: astore        19
381: new           #8
384: dup
385: bipush        100
387: invokespecial #9
390: astore        20
392: aload         20
394: dconst_0
395: invokevirtual #10
398: astore        21
400: aload         18
402: aload         20
404: invokevirtual #17
407: aload         20
409: invokevirtual #18
412: astore        22
414: new           #8
417: dup
418: bipush        100
420: invokespecial #9
423: astore        23
425: aload         23
427: invokevirtual #11
430: astore        24
432: aload         23
434: dconst_1
435: invokevirtual #19
438: astore        25
440: aload         20
442: aload         23
444: invokevirtual #20
447: astore        26
449: new           #8
452: dup
453: bipush        100
455: invokespecial #9
458: astore        27
460: aload         27
462: dconst_0
463: invokevirtual #10
466: astore        28
468: aload         27
470: invokevirtual #87
473: astore        29
475: aload         27
477: invokevirtual #88
480: astore        30
482: aload         20
484: aload         27
486: invokevirtual #89
489: astore        31
491: new           #90
494: dup
495: aload         31
497: invokespecial #91
500: astore        32
502: aload         32
504: invokevirtual #92
507: astore        33
509: aload         32
511: invokevirtual #93
514: astore        34
516: new           #94
519: dup
520: aload         34
522: dconst_0
523: invokespecial #95
526: astore        35
528: aload         35
530: invokevirtual #96
533: dstore        36
535: aload         35
537: invokevirtual #96
540: dstore        38
542: aload         35
544: invokevirtual #97
547: astore        40
549: aload         35
551: invokevirtual #98
554: astore        41
556: aload         16
558: aload         41
560: invokestatic  #99
563: ldc           #43
565: invokestatic  #27
568: goto          613
571: astore        42
573: aload         42
575: invokevirtual #45
578: invokevirtual #46
581: ifne          613
584: new           #30
587: dup
588: invokespecial #31
591: ldc           #47
593: invokevirtual #33
596: aload         42
598: invokevirtual #45
601: invokevirtual #48
604: invokevirtual #33
607: invokevirtual #36
610: invokestatic  #27
613: aload_2
614: invokestatic  #29
617: aload_2
618: invokestatic  #38
621: ldc           #100
623: invokestatic  #40
626: aload_3
627: invokestatic  #29
630: aload_3
631: invokestatic  #38
634: ldc           #100
636: invokestatic  #40
639: aload         4
641: invokestatic  #29
644: aload         4
646: invokestatic  #38
649: ldc           #100
651: invokestatic  #40
654: aload         5
656: invokestatic  #29
659: aload         5
661: invokestatic  #38
664: ldc           #100
666: invokestatic  #40
669: aload         6
671: invokestatic  #29
674: aload         8
676: invokestatic  #29
679: aload         8
681: invokestatic  #38
684: ldc           #100
686: invokestatic  #40
689: aload         9
691: invokestatic  #29
694: aload         9
696: invokestatic  #38
699: ldc           #100
701: invokestatic  #40
704: aload         10
706: invokestatic  #29
709: aload         10
711: invokestatic  #38
714: ldc           #100
716: invokestatic  #40
719: aload         11
721: invokestatic  #29
724: aload         11
726: invokestatic  #38
729: ldc           #100
731: invokestatic  #40
734: aload         12
736: invokestatic  #29
739: new           #30
742: dup
743: invokespecial #31
746: ldc           #32
748: invokevirtual #33
751: iload         13
753: invokevirtual #101
756: ldc           #35
758: invokevirtual #33
761: iconst_1
762: invokevirtual #101
765: ldc           #32
767: invokevirtual #33
770: invokevirtual #36
773: iload         13
775: iconst_1
776: if_icmpne     783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #37
787: aload         14
789: invokestatic  #29
792: aload         15
794: invokestatic  #29
797: aload         16
799: invokestatic  #29
802: aload         19
804: invokestatic  #29
807: aload         21
809: invokestatic  #29
812: aload         22
814: invokestatic  #29
817: aload         24
819: invokestatic  #29
822: aload         25
824: invokestatic  #29
827: aload         26
829: invokestatic  #29
832: aload         28
834: invokestatic  #29
837: aload         29
839: invokestatic  #29
842: aload         30
844: invokestatic  #29
847: aload         31
849: invokestatic  #29
852: aload         33
854: invokestatic  #29
857: aload         34
859: invokestatic  #29
862: new           #30
865: dup
866: invokespecial #31
869: ldc           #32
871: invokevirtual #33
874: dload         36
876: invokevirtual #34
879: ldc           #35
881: invokevirtual #33
884: ldc2_w        #71
887: invokevirtual #34
890: ldc           #32
892: invokevirtual #33
895: invokevirtual #36
898: dload         36
900: ldc2_w        #71
903: dcmpl
904: ifne          911
907: iconst_1
908: goto          912
911: iconst_0
912: invokestatic  #37
915: new           #30
918: dup
919: invokespecial #31
922: ldc           #32
924: invokevirtual #33
927: dload         38
929: invokevirtual #34
932: ldc           #35
934: invokevirtual #33
937: ldc2_w        #71
940: invokevirtual #34
943: ldc           #32
945: invokevirtual #33
948: invokevirtual #36
951: dload         38
953: ldc2_w        #71
956: dcmpl
957: ifne          964
960: iconst_1
961: goto          965
964: iconst_0
965: invokestatic  #37
968: aload         40
970: invokestatic  #29
973: aload         40
975: invokestatic  #38
978: ldc           #102
980: invokestatic  #40
983: aload         41
985: invokestatic  #29
988: return
Exception table:
from    to  target type
556   568   571   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test15
Start line: 904
End line: 961
Method source code: 
    public void test15() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test15");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix42 = singularValueDecompositionImpl41.getVT();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixIndexException; message: column index -1 out of allowed range [0, 99]");
        } catch (org.apache.commons.math.linear.MatrixIndexException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #103
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #104
269: astore        31
271: ldc           #26
273: invokestatic  #27
276: goto          281
279: astore        31
281: aload_2
282: invokestatic  #29
285: aload         5
287: invokestatic  #29
290: new           #30
293: dup
294: invokespecial #31
297: ldc           #32
299: invokevirtual #33
302: dload         6
304: invokevirtual #34
307: ldc           #35
309: invokevirtual #33
312: dconst_0
313: invokevirtual #34
316: ldc           #32
318: invokevirtual #33
321: invokevirtual #36
324: dload         6
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #37
339: aload         8
341: invokestatic  #29
344: aload         9
346: invokestatic  #29
349: aload         12
351: invokestatic  #29
354: new           #30
357: dup
358: invokespecial #31
361: ldc           #32
363: invokevirtual #33
366: dload         13
368: invokevirtual #34
371: ldc           #35
373: invokevirtual #33
376: dconst_0
377: invokevirtual #34
380: ldc           #32
382: invokevirtual #33
385: invokevirtual #36
388: dload         13
390: dconst_0
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #37
403: aload         15
405: invokestatic  #29
408: new           #30
411: dup
412: invokespecial #31
415: ldc           #32
417: invokevirtual #33
420: dload         16
422: invokevirtual #34
425: ldc           #35
427: invokevirtual #33
430: dconst_0
431: invokevirtual #34
434: ldc           #32
436: invokevirtual #33
439: invokevirtual #36
442: dload         16
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #37
457: aload         18
459: invokestatic  #29
462: aload         20
464: invokestatic  #29
467: aload         22
469: invokestatic  #29
472: aload         23
474: invokestatic  #29
477: aload         25
479: invokestatic  #29
482: aload         26
484: invokestatic  #29
487: aload         27
489: invokestatic  #29
492: aload         28
494: invokestatic  #29
497: aload         28
499: invokestatic  #38
502: ldc           #39
504: invokestatic  #40
507: aload         29
509: invokestatic  #29
512: return
Exception table:
from    to  target type
264   276   279   Class org/apache/commons/math/linear/MatrixIndexException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test16
Start line: 964
End line: 1018
Method source code: 
    public void test16() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test16");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getV();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = singularValueDecompositionImpl53.getUT();
        int int58 = singularValueDecompositionImpl53.getRank();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertNotNull(realMatrix57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #105
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #42
374: astore        20
376: aload         17
378: invokevirtual #50
381: astore        21
383: aload         17
385: invokevirtual #60
388: astore        22
390: aload         17
392: invokevirtual #57
395: istore        23
397: aload_2
398: invokestatic  #29
401: aload_2
402: invokestatic  #38
405: ldc           #100
407: invokestatic  #40
410: aload_3
411: invokestatic  #29
414: aload_3
415: invokestatic  #38
418: ldc           #100
420: invokestatic  #40
423: aload         4
425: invokestatic  #29
428: aload         4
430: invokestatic  #38
433: ldc           #100
435: invokestatic  #40
438: aload         5
440: invokestatic  #29
443: aload         5
445: invokestatic  #38
448: ldc           #100
450: invokestatic  #40
453: aload         6
455: invokestatic  #29
458: aload         8
460: invokestatic  #29
463: aload         8
465: invokestatic  #38
468: ldc           #100
470: invokestatic  #40
473: aload         9
475: invokestatic  #29
478: aload         9
480: invokestatic  #38
483: ldc           #100
485: invokestatic  #40
488: aload         10
490: invokestatic  #29
493: aload         10
495: invokestatic  #38
498: ldc           #100
500: invokestatic  #40
503: aload         11
505: invokestatic  #29
508: aload         11
510: invokestatic  #38
513: ldc           #100
515: invokestatic  #40
518: aload         12
520: invokestatic  #29
523: new           #30
526: dup
527: invokespecial #31
530: ldc           #32
532: invokevirtual #33
535: iload         13
537: invokevirtual #101
540: ldc           #35
542: invokevirtual #33
545: iconst_1
546: invokevirtual #101
549: ldc           #32
551: invokevirtual #33
554: invokevirtual #36
557: iload         13
559: iconst_1
560: if_icmpne     567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #37
571: aload         14
573: invokestatic  #29
576: aload         15
578: invokestatic  #29
581: aload         16
583: invokestatic  #29
586: new           #30
589: dup
590: invokespecial #31
593: ldc           #32
595: invokevirtual #33
598: dload         18
600: invokevirtual #34
603: ldc           #35
605: invokevirtual #33
608: ldc2_w        #106
611: invokevirtual #34
614: ldc           #32
616: invokevirtual #33
619: invokevirtual #36
622: dload         18
624: ldc2_w        #106
627: dcmpl
628: ifne          635
631: iconst_1
632: goto          636
635: iconst_0
636: invokestatic  #37
639: aload         20
641: invokestatic  #29
644: aload         21
646: invokestatic  #29
649: aload         22
651: invokestatic  #29
654: new           #30
657: dup
658: invokespecial #31
661: ldc           #32
663: invokevirtual #33
666: iload         23
668: invokevirtual #108
671: ldc           #35
673: invokevirtual #33
676: iconst_1
677: invokevirtual #108
680: ldc           #32
682: invokevirtual #33
685: invokevirtual #36
688: iload         23
690: iconst_1
691: if_icmpne     698
694: iconst_1
695: goto          699
698: iconst_0
699: invokestatic  #37
702: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test17
Start line: 1021
End line: 1097
Method source code: 
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test17");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.DecompositionSolver decompositionSolver55 = singularValueDecompositionImpl53.getSolver();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector57.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector61 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector63 = arrayRealVector61.mapPowToSelf((double) 0);
        arrayRealVector57.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector61);
        org.apache.commons.math.linear.RealVector realVector65 = arrayRealVector61.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector68 = arrayRealVector67.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector67.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = arrayRealVector61.add(arrayRealVector67);
        org.apache.commons.math.linear.RealVector realVector72 = arrayRealVector67.mapCos();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector73 = decompositionSolver55.solve(realVector72);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(decompositionSolver55);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector68);
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(arrayRealVector71);
        org.junit.Assert.assertNotNull(realVector72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #109
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #25
374: astore        20
376: new           #8
379: dup
380: bipush        100
382: invokespecial #9
385: astore        21
387: aload         21
389: dconst_0
390: invokevirtual #10
393: astore        22
395: new           #8
398: dup
399: bipush        100
401: invokespecial #9
404: astore        23
406: aload         23
408: dconst_0
409: invokevirtual #10
412: astore        24
414: aload         21
416: aload         23
418: invokevirtual #17
421: aload         23
423: invokevirtual #18
426: astore        25
428: new           #8
431: dup
432: bipush        100
434: invokespecial #9
437: astore        26
439: aload         26
441: invokevirtual #11
444: astore        27
446: aload         26
448: dconst_1
449: invokevirtual #19
452: astore        28
454: aload         23
456: aload         26
458: invokevirtual #20
461: astore        29
463: aload         26
465: invokevirtual #110
468: astore        30
470: aload         20
472: aload         30
474: invokeinterface #111,  2
479: astore        31
481: ldc           #43
483: invokestatic  #27
486: goto          531
489: astore        31
491: aload         31
493: invokevirtual #45
496: invokevirtual #46
499: ifne          531
502: new           #30
505: dup
506: invokespecial #31
509: ldc           #47
511: invokevirtual #33
514: aload         31
516: invokevirtual #45
519: invokevirtual #48
522: invokevirtual #33
525: invokevirtual #36
528: invokestatic  #27
531: aload_2
532: invokestatic  #29
535: aload_2
536: invokestatic  #38
539: ldc           #100
541: invokestatic  #40
544: aload_3
545: invokestatic  #29
548: aload_3
549: invokestatic  #38
552: ldc           #100
554: invokestatic  #40
557: aload         4
559: invokestatic  #29
562: aload         4
564: invokestatic  #38
567: ldc           #100
569: invokestatic  #40
572: aload         5
574: invokestatic  #29
577: aload         5
579: invokestatic  #38
582: ldc           #100
584: invokestatic  #40
587: aload         6
589: invokestatic  #29
592: aload         8
594: invokestatic  #29
597: aload         8
599: invokestatic  #38
602: ldc           #100
604: invokestatic  #40
607: aload         9
609: invokestatic  #29
612: aload         9
614: invokestatic  #38
617: ldc           #100
619: invokestatic  #40
622: aload         10
624: invokestatic  #29
627: aload         10
629: invokestatic  #38
632: ldc           #100
634: invokestatic  #40
637: aload         11
639: invokestatic  #29
642: aload         11
644: invokestatic  #38
647: ldc           #100
649: invokestatic  #40
652: aload         12
654: invokestatic  #29
657: new           #30
660: dup
661: invokespecial #31
664: ldc           #32
666: invokevirtual #33
669: iload         13
671: invokevirtual #101
674: ldc           #35
676: invokevirtual #33
679: iconst_1
680: invokevirtual #101
683: ldc           #32
685: invokevirtual #33
688: invokevirtual #36
691: iload         13
693: iconst_1
694: if_icmpne     701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #37
705: aload         14
707: invokestatic  #29
710: aload         15
712: invokestatic  #29
715: aload         16
717: invokestatic  #29
720: new           #30
723: dup
724: invokespecial #31
727: ldc           #32
729: invokevirtual #33
732: dload         18
734: invokevirtual #34
737: ldc           #35
739: invokevirtual #33
742: ldc2_w        #106
745: invokevirtual #34
748: ldc           #32
750: invokevirtual #33
753: invokevirtual #36
756: dload         18
758: ldc2_w        #106
761: dcmpl
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #37
773: aload         20
775: invokestatic  #29
778: aload         22
780: invokestatic  #29
783: aload         24
785: invokestatic  #29
788: aload         25
790: invokestatic  #29
793: aload         27
795: invokestatic  #29
798: aload         28
800: invokestatic  #29
803: aload         29
805: invokestatic  #29
808: aload         30
810: invokestatic  #29
813: return
Exception table:
from    to  target type
470   486   489   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test18
Start line: 1100
End line: 1157
Method source code: 
    public void test18() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test18");
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat0 = new org.apache.commons.math.linear.RealVectorFormat();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix1 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray6 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray11 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray16 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray21 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray22 = new double[][] { doubleArray6, doubleArray11, doubleArray16, doubleArray21 };
        array2DRowRealMatrix1.data = doubleArray22;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix24 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray29 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray34 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray39 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray44 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray45 = new double[][] { doubleArray29, doubleArray34, doubleArray39, doubleArray44 };
        array2DRowRealMatrix24.data = doubleArray45;
        boolean boolean47 = array2DRowRealMatrix24.isSingular();
        org.apache.commons.math.linear.RealVector realVector49 = array2DRowRealMatrix24.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix50 = array2DRowRealMatrix1.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix24);
        org.apache.commons.math.linear.RealMatrix realMatrix52 = array2DRowRealMatrix24.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl54 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix52, 52);
        java.lang.StringBuffer stringBuffer55 = null;
        java.text.FieldPosition fieldPosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer57 = realVectorFormat0.format((java.lang.Object) 52, stringBuffer55, fieldPosition56);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(realMatrix52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #112
19: aastore
20: invokevirtual #7
23: pop
24: new           #113
27: dup
28: invokespecial #114
31: astore_1
32: new           #75
35: dup
36: invokespecial #76
39: astore_2
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #77
52: dastore
53: dup
54: iconst_2
55: ldc2_w        #77
58: dastore
59: dup
60: iconst_3
61: ldc2_w        #79
64: dastore
65: astore_3
66: iconst_4
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: ldc2_w        #77
78: dastore
79: dup
80: iconst_2
81: ldc2_w        #77
84: dastore
85: dup
86: iconst_3
87: ldc2_w        #79
90: dastore
91: astore        4
93: iconst_4
94: newarray       double
96: dup
97: iconst_0
98: dconst_1
99: dastore
100: dup
101: iconst_1
102: ldc2_w        #77
105: dastore
106: dup
107: iconst_2
108: ldc2_w        #77
111: dastore
112: dup
113: iconst_3
114: ldc2_w        #79
117: dastore
118: astore        5
120: iconst_4
121: newarray       double
123: dup
124: iconst_0
125: dconst_1
126: dastore
127: dup
128: iconst_1
129: ldc2_w        #77
132: dastore
133: dup
134: iconst_2
135: ldc2_w        #77
138: dastore
139: dup
140: iconst_3
141: ldc2_w        #79
144: dastore
145: astore        6
147: iconst_4
148: anewarray     #81
151: dup
152: iconst_0
153: aload_3
154: aastore
155: dup
156: iconst_1
157: aload         4
159: aastore
160: dup
161: iconst_2
162: aload         5
164: aastore
165: dup
166: iconst_3
167: aload         6
169: aastore
170: astore        7
172: aload_2
173: aload         7
175: putfield      #82
178: new           #75
181: dup
182: invokespecial #76
185: astore        8
187: iconst_4
188: newarray       double
190: dup
191: iconst_0
192: dconst_1
193: dastore
194: dup
195: iconst_1
196: ldc2_w        #77
199: dastore
200: dup
201: iconst_2
202: ldc2_w        #77
205: dastore
206: dup
207: iconst_3
208: ldc2_w        #79
211: dastore
212: astore        9
214: iconst_4
215: newarray       double
217: dup
218: iconst_0
219: dconst_1
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #77
226: dastore
227: dup
228: iconst_2
229: ldc2_w        #77
232: dastore
233: dup
234: iconst_3
235: ldc2_w        #79
238: dastore
239: astore        10
241: iconst_4
242: newarray       double
244: dup
245: iconst_0
246: dconst_1
247: dastore
248: dup
249: iconst_1
250: ldc2_w        #77
253: dastore
254: dup
255: iconst_2
256: ldc2_w        #77
259: dastore
260: dup
261: iconst_3
262: ldc2_w        #79
265: dastore
266: astore        11
268: iconst_4
269: newarray       double
271: dup
272: iconst_0
273: dconst_1
274: dastore
275: dup
276: iconst_1
277: ldc2_w        #77
280: dastore
281: dup
282: iconst_2
283: ldc2_w        #77
286: dastore
287: dup
288: iconst_3
289: ldc2_w        #79
292: dastore
293: astore        12
295: iconst_4
296: anewarray     #81
299: dup
300: iconst_0
301: aload         9
303: aastore
304: dup
305: iconst_1
306: aload         10
308: aastore
309: dup
310: iconst_2
311: aload         11
313: aastore
314: dup
315: iconst_3
316: aload         12
318: aastore
319: astore        13
321: aload         8
323: aload         13
325: putfield      #82
328: aload         8
330: invokevirtual #83
333: istore        14
335: aload         8
337: iconst_0
338: invokevirtual #84
341: astore        15
343: aload_2
344: aload         8
346: invokevirtual #85
349: astore        16
351: aload         8
353: dconst_0
354: invokevirtual #86
357: astore        17
359: new           #23
362: dup
363: aload         17
365: bipush        52
367: invokespecial #24
370: astore        18
372: aconst_null
373: astore        19
375: aconst_null
376: astore        20
378: aload_1
379: bipush        52
381: invokestatic  #115
384: aload         19
386: aload         20
388: invokevirtual #116
391: astore        21
393: ldc           #43
395: invokestatic  #27
398: goto          443
401: astore        21
403: aload         21
405: invokevirtual #45
408: invokevirtual #46
411: ifne          443
414: new           #30
417: dup
418: invokespecial #31
421: ldc           #47
423: invokevirtual #33
426: aload         21
428: invokevirtual #45
431: invokevirtual #48
434: invokevirtual #33
437: invokevirtual #36
440: invokestatic  #27
443: aload_3
444: invokestatic  #29
447: aload_3
448: invokestatic  #38
451: ldc           #100
453: invokestatic  #40
456: aload         4
458: invokestatic  #29
461: aload         4
463: invokestatic  #38
466: ldc           #100
468: invokestatic  #40
471: aload         5
473: invokestatic  #29
476: aload         5
478: invokestatic  #38
481: ldc           #100
483: invokestatic  #40
486: aload         6
488: invokestatic  #29
491: aload         6
493: invokestatic  #38
496: ldc           #100
498: invokestatic  #40
501: aload         7
503: invokestatic  #29
506: aload         9
508: invokestatic  #29
511: aload         9
513: invokestatic  #38
516: ldc           #100
518: invokestatic  #40
521: aload         10
523: invokestatic  #29
526: aload         10
528: invokestatic  #38
531: ldc           #100
533: invokestatic  #40
536: aload         11
538: invokestatic  #29
541: aload         11
543: invokestatic  #38
546: ldc           #100
548: invokestatic  #40
551: aload         12
553: invokestatic  #29
556: aload         12
558: invokestatic  #38
561: ldc           #100
563: invokestatic  #40
566: aload         13
568: invokestatic  #29
571: new           #30
574: dup
575: invokespecial #31
578: ldc           #32
580: invokevirtual #33
583: iload         14
585: invokevirtual #101
588: ldc           #35
590: invokevirtual #33
593: iconst_1
594: invokevirtual #101
597: ldc           #32
599: invokevirtual #33
602: invokevirtual #36
605: iload         14
607: iconst_1
608: if_icmpne     615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #37
619: aload         15
621: invokestatic  #29
624: aload         16
626: invokestatic  #29
629: aload         17
631: invokestatic  #29
634: return
Exception table:
from    to  target type
378   398   401   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test19
Start line: 1160
End line: 1226
Method source code: 
    public void test19() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test19");
        org.apache.commons.math.linear.NonSquareMatrixException nonSquareMatrixException2 = new org.apache.commons.math.linear.NonSquareMatrixException((int) '4', 100);
        java.lang.Object[] objArray3 = nonSquareMatrixException2.getArguments();
        java.lang.Object[] objArray4 = nonSquareMatrixException2.getArguments();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector6 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector6.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector13 = arrayRealVector12.mapSignumToSelf();
        double double14 = arrayRealVector10.dotProduct(realVector13);
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector10.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector10.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector21.mapSignumToSelf();
        double double23 = arrayRealVector19.dotProduct(realVector22);
        org.apache.commons.math.linear.RealVector realVector24 = arrayRealVector19.mapSinhToSelf();
        double double25 = arrayRealVector10.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector19);
        org.apache.commons.math.linear.RealVector realVector26 = arrayRealVector6.projection((org.apache.commons.math.linear.RealVector) arrayRealVector10);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector30 = arrayRealVector28.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector32.mapPowToSelf((double) 0);
        arrayRealVector28.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector32);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector32.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector39 = arrayRealVector38.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector41 = arrayRealVector38.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = arrayRealVector32.add(arrayRealVector38);
        double[] doubleArray43 = arrayRealVector32.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix44 = arrayRealVector10.outerProduct(doubleArray43);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl46 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix44, (int) '4');
        double[] doubleArray47 = singularValueDecompositionImpl46.getSingularValues();
        double[] doubleArray48 = singularValueDecompositionImpl46.getSingularValues();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) nonSquareMatrixException2, doubleArray48);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[52, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[52, 100]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[52, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[52, 100]");
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(arrayRealVector42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #117
19: aastore
20: invokevirtual #7
23: pop
24: new           #118
27: dup
28: bipush        52
30: bipush        100
32: invokespecial #119
35: astore_1
36: aload_1
37: invokevirtual #120
40: astore_2
41: aload_1
42: invokevirtual #120
45: astore_3
46: new           #8
49: dup
50: bipush        100
52: invokespecial #9
55: astore        4
57: aload         4
59: dconst_0
60: invokevirtual #10
63: astore        5
65: new           #8
68: dup
69: bipush        100
71: invokespecial #9
74: astore        6
76: new           #8
79: dup
80: bipush        100
82: invokespecial #9
85: astore        7
87: aload         7
89: invokevirtual #11
92: astore        8
94: aload         6
96: aload         8
98: invokevirtual #12
101: dstore        9
103: aload         6
105: invokevirtual #13
108: astore        11
110: aload         6
112: dconst_0
113: invokevirtual #14
116: astore        12
118: new           #8
121: dup
122: bipush        100
124: invokespecial #9
127: astore        13
129: new           #8
132: dup
133: bipush        100
135: invokespecial #9
138: astore        14
140: aload         14
142: invokevirtual #11
145: astore        15
147: aload         13
149: aload         15
151: invokevirtual #12
154: dstore        16
156: aload         13
158: invokevirtual #15
161: astore        18
163: aload         6
165: aload         13
167: invokevirtual #12
170: dstore        19
172: aload         4
174: aload         6
176: invokevirtual #16
179: astore        21
181: new           #8
184: dup
185: bipush        100
187: invokespecial #9
190: astore        22
192: aload         22
194: dconst_0
195: invokevirtual #10
198: astore        23
200: new           #8
203: dup
204: bipush        100
206: invokespecial #9
209: astore        24
211: aload         24
213: dconst_0
214: invokevirtual #10
217: astore        25
219: aload         22
221: aload         24
223: invokevirtual #17
226: aload         24
228: invokevirtual #18
231: astore        26
233: new           #8
236: dup
237: bipush        100
239: invokespecial #9
242: astore        27
244: aload         27
246: invokevirtual #11
249: astore        28
251: aload         27
253: dconst_1
254: invokevirtual #19
257: astore        29
259: aload         24
261: aload         27
263: invokevirtual #20
266: astore        30
268: aload         24
270: invokevirtual #21
273: astore        31
275: aload         6
277: aload         31
279: invokevirtual #22
282: astore        32
284: new           #23
287: dup
288: aload         32
290: bipush        52
292: invokespecial #24
295: astore        33
297: aload         33
299: invokevirtual #56
302: astore        34
304: aload         33
306: invokevirtual #56
309: astore        35
311: new           #121
314: dup
315: aload_1
316: aload         35
318: invokespecial #122
321: astore        36
323: aload_2
324: invokestatic  #29
327: aload_2
328: invokestatic  #123
331: ldc           #124
333: invokestatic  #40
336: aload_2
337: invokestatic  #125
340: ldc           #124
342: invokestatic  #40
345: aload_3
346: invokestatic  #29
349: aload_3
350: invokestatic  #123
353: ldc           #124
355: invokestatic  #40
358: aload_3
359: invokestatic  #125
362: ldc           #124
364: invokestatic  #40
367: aload         5
369: invokestatic  #29
372: aload         8
374: invokestatic  #29
377: new           #30
380: dup
381: invokespecial #31
384: ldc           #32
386: invokevirtual #33
389: dload         9
391: invokevirtual #34
394: ldc           #35
396: invokevirtual #33
399: dconst_0
400: invokevirtual #34
403: ldc           #32
405: invokevirtual #33
408: invokevirtual #36
411: dload         9
413: dconst_0
414: dcmpl
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #37
426: aload         11
428: invokestatic  #29
431: aload         12
433: invokestatic  #29
436: aload         15
438: invokestatic  #29
441: new           #30
444: dup
445: invokespecial #31
448: ldc           #32
450: invokevirtual #33
453: dload         16
455: invokevirtual #34
458: ldc           #35
460: invokevirtual #33
463: dconst_0
464: invokevirtual #34
467: ldc           #32
469: invokevirtual #33
472: invokevirtual #36
475: dload         16
477: dconst_0
478: dcmpl
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #37
490: aload         18
492: invokestatic  #29
495: new           #30
498: dup
499: invokespecial #31
502: ldc           #32
504: invokevirtual #33
507: dload         19
509: invokevirtual #34
512: ldc           #35
514: invokevirtual #33
517: dconst_0
518: invokevirtual #34
521: ldc           #32
523: invokevirtual #33
526: invokevirtual #36
529: dload         19
531: dconst_0
532: dcmpl
533: ifne          540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #37
544: aload         21
546: invokestatic  #29
549: aload         23
551: invokestatic  #29
554: aload         25
556: invokestatic  #29
559: aload         26
561: invokestatic  #29
564: aload         28
566: invokestatic  #29
569: aload         29
571: invokestatic  #29
574: aload         30
576: invokestatic  #29
579: aload         31
581: invokestatic  #29
584: aload         31
586: invokestatic  #38
589: ldc           #39
591: invokestatic  #40
594: aload         32
596: invokestatic  #29
599: aload         34
601: invokestatic  #29
604: aload         34
606: invokestatic  #38
609: ldc           #58
611: invokestatic  #40
614: aload         35
616: invokestatic  #29
619: aload         35
621: invokestatic  #38
624: ldc           #58
626: invokestatic  #40
629: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test20
Start line: 1229
End line: 1286
Method source code: 
    public void test20() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test20");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getV();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = singularValueDecompositionImpl53.getUT();
        double[] doubleArray58 = singularValueDecompositionImpl53.getSingularValues();
        double double59 = singularValueDecompositionImpl53.getNorm();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertNotNull(realMatrix57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[20.29778313018444]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 20.29778313018444d + "'", double59 == 20.29778313018444d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #42
374: astore        20
376: aload         17
378: invokevirtual #50
381: astore        21
383: aload         17
385: invokevirtual #60
388: astore        22
390: aload         17
392: invokevirtual #56
395: astore        23
397: aload         17
399: invokevirtual #52
402: dstore        24
404: aload_2
405: invokestatic  #29
408: aload_2
409: invokestatic  #38
412: ldc           #100
414: invokestatic  #40
417: aload_3
418: invokestatic  #29
421: aload_3
422: invokestatic  #38
425: ldc           #100
427: invokestatic  #40
430: aload         4
432: invokestatic  #29
435: aload         4
437: invokestatic  #38
440: ldc           #100
442: invokestatic  #40
445: aload         5
447: invokestatic  #29
450: aload         5
452: invokestatic  #38
455: ldc           #100
457: invokestatic  #40
460: aload         6
462: invokestatic  #29
465: aload         8
467: invokestatic  #29
470: aload         8
472: invokestatic  #38
475: ldc           #100
477: invokestatic  #40
480: aload         9
482: invokestatic  #29
485: aload         9
487: invokestatic  #38
490: ldc           #100
492: invokestatic  #40
495: aload         10
497: invokestatic  #29
500: aload         10
502: invokestatic  #38
505: ldc           #100
507: invokestatic  #40
510: aload         11
512: invokestatic  #29
515: aload         11
517: invokestatic  #38
520: ldc           #100
522: invokestatic  #40
525: aload         12
527: invokestatic  #29
530: new           #30
533: dup
534: invokespecial #31
537: ldc           #32
539: invokevirtual #33
542: iload         13
544: invokevirtual #101
547: ldc           #35
549: invokevirtual #33
552: iconst_1
553: invokevirtual #101
556: ldc           #32
558: invokevirtual #33
561: invokevirtual #36
564: iload         13
566: iconst_1
567: if_icmpne     574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #37
578: aload         14
580: invokestatic  #29
583: aload         15
585: invokestatic  #29
588: aload         16
590: invokestatic  #29
593: new           #30
596: dup
597: invokespecial #31
600: ldc           #32
602: invokevirtual #33
605: dload         18
607: invokevirtual #34
610: ldc           #35
612: invokevirtual #33
615: ldc2_w        #106
618: invokevirtual #34
621: ldc           #32
623: invokevirtual #33
626: invokevirtual #36
629: dload         18
631: ldc2_w        #106
634: dcmpl
635: ifne          642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #37
646: aload         20
648: invokestatic  #29
651: aload         21
653: invokestatic  #29
656: aload         22
658: invokestatic  #29
661: aload         23
663: invokestatic  #29
666: aload         23
668: invokestatic  #38
671: ldc           #127
673: invokestatic  #40
676: new           #30
679: dup
680: invokespecial #31
683: ldc           #32
685: invokevirtual #33
688: dload         24
690: invokevirtual #34
693: ldc           #35
695: invokevirtual #33
698: ldc2_w        #106
701: invokevirtual #34
704: ldc           #32
706: invokevirtual #33
709: invokevirtual #36
712: dload         24
714: ldc2_w        #106
717: dcmpl
718: ifne          725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #37
729: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test21
Start line: 1289
End line: 1347
Method source code: 
    public void test21() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test21");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getV();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.AnyMatrix anyMatrix57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible((org.apache.commons.math.linear.AnyMatrix) realMatrix56, anyMatrix57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #128
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #50
374: astore        20
376: aload         17
378: invokevirtual #42
381: astore        21
383: aconst_null
384: astore        22
386: aload         21
388: aload         22
390: invokestatic  #129
393: ldc           #130
395: invokestatic  #27
398: goto          403
401: astore        23
403: aload_2
404: invokestatic  #29
407: aload_2
408: invokestatic  #38
411: ldc           #100
413: invokestatic  #40
416: aload_3
417: invokestatic  #29
420: aload_3
421: invokestatic  #38
424: ldc           #100
426: invokestatic  #40
429: aload         4
431: invokestatic  #29
434: aload         4
436: invokestatic  #38
439: ldc           #100
441: invokestatic  #40
444: aload         5
446: invokestatic  #29
449: aload         5
451: invokestatic  #38
454: ldc           #100
456: invokestatic  #40
459: aload         6
461: invokestatic  #29
464: aload         8
466: invokestatic  #29
469: aload         8
471: invokestatic  #38
474: ldc           #100
476: invokestatic  #40
479: aload         9
481: invokestatic  #29
484: aload         9
486: invokestatic  #38
489: ldc           #100
491: invokestatic  #40
494: aload         10
496: invokestatic  #29
499: aload         10
501: invokestatic  #38
504: ldc           #100
506: invokestatic  #40
509: aload         11
511: invokestatic  #29
514: aload         11
516: invokestatic  #38
519: ldc           #100
521: invokestatic  #40
524: aload         12
526: invokestatic  #29
529: new           #30
532: dup
533: invokespecial #31
536: ldc           #32
538: invokevirtual #33
541: iload         13
543: invokevirtual #101
546: ldc           #35
548: invokevirtual #33
551: iconst_1
552: invokevirtual #101
555: ldc           #32
557: invokevirtual #33
560: invokevirtual #36
563: iload         13
565: iconst_1
566: if_icmpne     573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #37
577: aload         14
579: invokestatic  #29
582: aload         15
584: invokestatic  #29
587: aload         16
589: invokestatic  #29
592: new           #30
595: dup
596: invokespecial #31
599: ldc           #32
601: invokevirtual #33
604: dload         18
606: invokevirtual #34
609: ldc           #35
611: invokevirtual #33
614: ldc2_w        #106
617: invokevirtual #34
620: ldc           #32
622: invokevirtual #33
625: invokevirtual #36
628: dload         18
630: ldc2_w        #106
633: dcmpl
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #37
645: aload         20
647: invokestatic  #29
650: aload         21
652: invokestatic  #29
655: return
Exception table:
from    to  target type
386   398   401   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test22
Start line: 1350
End line: 1402
Method source code: 
    public void test22() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test22");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getV();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = singularValueDecompositionImpl53.getVT();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertNotNull(realMatrix57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #50
374: astore        20
376: aload         17
378: invokevirtual #42
381: astore        21
383: aload         17
385: invokevirtual #104
388: astore        22
390: aload_2
391: invokestatic  #29
394: aload_2
395: invokestatic  #38
398: ldc           #100
400: invokestatic  #40
403: aload_3
404: invokestatic  #29
407: aload_3
408: invokestatic  #38
411: ldc           #100
413: invokestatic  #40
416: aload         4
418: invokestatic  #29
421: aload         4
423: invokestatic  #38
426: ldc           #100
428: invokestatic  #40
431: aload         5
433: invokestatic  #29
436: aload         5
438: invokestatic  #38
441: ldc           #100
443: invokestatic  #40
446: aload         6
448: invokestatic  #29
451: aload         8
453: invokestatic  #29
456: aload         8
458: invokestatic  #38
461: ldc           #100
463: invokestatic  #40
466: aload         9
468: invokestatic  #29
471: aload         9
473: invokestatic  #38
476: ldc           #100
478: invokestatic  #40
481: aload         10
483: invokestatic  #29
486: aload         10
488: invokestatic  #38
491: ldc           #100
493: invokestatic  #40
496: aload         11
498: invokestatic  #29
501: aload         11
503: invokestatic  #38
506: ldc           #100
508: invokestatic  #40
511: aload         12
513: invokestatic  #29
516: new           #30
519: dup
520: invokespecial #31
523: ldc           #32
525: invokevirtual #33
528: iload         13
530: invokevirtual #101
533: ldc           #35
535: invokevirtual #33
538: iconst_1
539: invokevirtual #101
542: ldc           #32
544: invokevirtual #33
547: invokevirtual #36
550: iload         13
552: iconst_1
553: if_icmpne     560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #37
564: aload         14
566: invokestatic  #29
569: aload         15
571: invokestatic  #29
574: aload         16
576: invokestatic  #29
579: new           #30
582: dup
583: invokespecial #31
586: ldc           #32
588: invokevirtual #33
591: dload         18
593: invokevirtual #34
596: ldc           #35
598: invokevirtual #33
601: ldc2_w        #106
604: invokevirtual #34
607: ldc           #32
609: invokevirtual #33
612: invokevirtual #36
615: dload         18
617: ldc2_w        #106
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #37
632: aload         20
634: invokestatic  #29
637: aload         21
639: invokestatic  #29
642: aload         22
644: invokestatic  #29
647: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test23
Start line: 1405
End line: 1465
Method source code: 
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test23");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        double[] doubleArray42 = singularValueDecompositionImpl41.getSingularValues();
        // The following exception was thrown during execution in test generation
        try {
            double double43 = singularValueDecompositionImpl41.getNorm();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #133
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #56
269: astore        31
271: aload         30
273: invokevirtual #52
276: dstore        32
278: ldc           #53
280: invokestatic  #27
283: goto          288
286: astore        32
288: aload_2
289: invokestatic  #29
292: aload         5
294: invokestatic  #29
297: new           #30
300: dup
301: invokespecial #31
304: ldc           #32
306: invokevirtual #33
309: dload         6
311: invokevirtual #34
314: ldc           #35
316: invokevirtual #33
319: dconst_0
320: invokevirtual #34
323: ldc           #32
325: invokevirtual #33
328: invokevirtual #36
331: dload         6
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #37
346: aload         8
348: invokestatic  #29
351: aload         9
353: invokestatic  #29
356: aload         12
358: invokestatic  #29
361: new           #30
364: dup
365: invokespecial #31
368: ldc           #32
370: invokevirtual #33
373: dload         13
375: invokevirtual #34
378: ldc           #35
380: invokevirtual #33
383: dconst_0
384: invokevirtual #34
387: ldc           #32
389: invokevirtual #33
392: invokevirtual #36
395: dload         13
397: dconst_0
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #37
410: aload         15
412: invokestatic  #29
415: new           #30
418: dup
419: invokespecial #31
422: ldc           #32
424: invokevirtual #33
427: dload         16
429: invokevirtual #34
432: ldc           #35
434: invokevirtual #33
437: dconst_0
438: invokevirtual #34
441: ldc           #32
443: invokevirtual #33
446: invokevirtual #36
449: dload         16
451: dconst_0
452: dcmpl
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #37
464: aload         18
466: invokestatic  #29
469: aload         20
471: invokestatic  #29
474: aload         22
476: invokestatic  #29
479: aload         23
481: invokestatic  #29
484: aload         25
486: invokestatic  #29
489: aload         26
491: invokestatic  #29
494: aload         27
496: invokestatic  #29
499: aload         28
501: invokestatic  #29
504: aload         28
506: invokestatic  #38
509: ldc           #39
511: invokestatic  #40
514: aload         29
516: invokestatic  #29
519: aload         31
521: invokestatic  #29
524: aload         31
526: invokestatic  #38
529: ldc           #58
531: invokestatic  #40
534: return
Exception table:
from    to  target type
271   283   286   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test24
Start line: 1468
End line: 1531
Method source code: 
    public void test24() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test24");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        double[] doubleArray42 = singularValueDecompositionImpl41.getSingularValues();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix43 = singularValueDecompositionImpl41.getS();
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #134
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #56
269: astore        31
271: aload         30
273: invokevirtual #42
276: astore        32
278: ldc           #43
280: invokestatic  #27
283: goto          328
286: astore        32
288: aload         32
290: invokevirtual #45
293: invokevirtual #46
296: ifne          328
299: new           #30
302: dup
303: invokespecial #31
306: ldc           #47
308: invokevirtual #33
311: aload         32
313: invokevirtual #45
316: invokevirtual #48
319: invokevirtual #33
322: invokevirtual #36
325: invokestatic  #27
328: aload_2
329: invokestatic  #29
332: aload         5
334: invokestatic  #29
337: new           #30
340: dup
341: invokespecial #31
344: ldc           #32
346: invokevirtual #33
349: dload         6
351: invokevirtual #34
354: ldc           #35
356: invokevirtual #33
359: dconst_0
360: invokevirtual #34
363: ldc           #32
365: invokevirtual #33
368: invokevirtual #36
371: dload         6
373: dconst_0
374: dcmpl
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #37
386: aload         8
388: invokestatic  #29
391: aload         9
393: invokestatic  #29
396: aload         12
398: invokestatic  #29
401: new           #30
404: dup
405: invokespecial #31
408: ldc           #32
410: invokevirtual #33
413: dload         13
415: invokevirtual #34
418: ldc           #35
420: invokevirtual #33
423: dconst_0
424: invokevirtual #34
427: ldc           #32
429: invokevirtual #33
432: invokevirtual #36
435: dload         13
437: dconst_0
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #37
450: aload         15
452: invokestatic  #29
455: new           #30
458: dup
459: invokespecial #31
462: ldc           #32
464: invokevirtual #33
467: dload         16
469: invokevirtual #34
472: ldc           #35
474: invokevirtual #33
477: dconst_0
478: invokevirtual #34
481: ldc           #32
483: invokevirtual #33
486: invokevirtual #36
489: dload         16
491: dconst_0
492: dcmpl
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #37
504: aload         18
506: invokestatic  #29
509: aload         20
511: invokestatic  #29
514: aload         22
516: invokestatic  #29
519: aload         23
521: invokestatic  #29
524: aload         25
526: invokestatic  #29
529: aload         26
531: invokestatic  #29
534: aload         27
536: invokestatic  #29
539: aload         28
541: invokestatic  #29
544: aload         28
546: invokestatic  #38
549: ldc           #39
551: invokestatic  #40
554: aload         29
556: invokestatic  #29
559: aload         31
561: invokestatic  #29
564: aload         31
566: invokestatic  #38
569: ldc           #58
571: invokestatic  #40
574: return
Exception table:
from    to  target type
271   283   286   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test25
Start line: 1534
End line: 1592
Method source code: 
    public void test25() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test25");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        boolean boolean23 = array2DRowRealMatrix0.isSingular();
        org.apache.commons.math.linear.RealVector realVector25 = array2DRowRealMatrix0.getColumnVector(0);
        double[] doubleArray27 = array2DRowRealMatrix0.getRow(2);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix28 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray48 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray49 = new double[][] { doubleArray33, doubleArray38, doubleArray43, doubleArray48 };
        array2DRowRealMatrix28.data = doubleArray49;
        boolean boolean51 = array2DRowRealMatrix28.isSingular();
        org.apache.commons.math.linear.RealVector realVector53 = array2DRowRealMatrix28.getColumnVector(0);
        double[] doubleArray55 = array2DRowRealMatrix28.getRow(2);
        double[] doubleArray56 = array2DRowRealMatrix0.operate(doubleArray55);
        org.apache.commons.math.linear.RealMatrix realMatrix57 = array2DRowRealMatrix0.copy();
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl59 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix57, 0);
        double[] doubleArray60 = singularValueDecompositionImpl59.getSingularValues();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[103.0, 103.0, 103.0, 103.0]");
        org.junit.Assert.assertNotNull(realMatrix57);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #135
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: aload_1
169: invokevirtual #83
172: istore        7
174: aload_1
175: iconst_0
176: invokevirtual #84
179: astore        8
181: aload_1
182: iconst_2
183: invokevirtual #136
186: astore        9
188: new           #75
191: dup
192: invokespecial #76
195: astore        10
197: iconst_4
198: newarray       double
200: dup
201: iconst_0
202: dconst_1
203: dastore
204: dup
205: iconst_1
206: ldc2_w        #77
209: dastore
210: dup
211: iconst_2
212: ldc2_w        #77
215: dastore
216: dup
217: iconst_3
218: ldc2_w        #79
221: dastore
222: astore        11
224: iconst_4
225: newarray       double
227: dup
228: iconst_0
229: dconst_1
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #77
236: dastore
237: dup
238: iconst_2
239: ldc2_w        #77
242: dastore
243: dup
244: iconst_3
245: ldc2_w        #79
248: dastore
249: astore        12
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: dconst_1
257: dastore
258: dup
259: iconst_1
260: ldc2_w        #77
263: dastore
264: dup
265: iconst_2
266: ldc2_w        #77
269: dastore
270: dup
271: iconst_3
272: ldc2_w        #79
275: dastore
276: astore        13
278: iconst_4
279: newarray       double
281: dup
282: iconst_0
283: dconst_1
284: dastore
285: dup
286: iconst_1
287: ldc2_w        #77
290: dastore
291: dup
292: iconst_2
293: ldc2_w        #77
296: dastore
297: dup
298: iconst_3
299: ldc2_w        #79
302: dastore
303: astore        14
305: iconst_4
306: anewarray     #81
309: dup
310: iconst_0
311: aload         11
313: aastore
314: dup
315: iconst_1
316: aload         12
318: aastore
319: dup
320: iconst_2
321: aload         13
323: aastore
324: dup
325: iconst_3
326: aload         14
328: aastore
329: astore        15
331: aload         10
333: aload         15
335: putfield      #82
338: aload         10
340: invokevirtual #83
343: istore        16
345: aload         10
347: iconst_0
348: invokevirtual #84
351: astore        17
353: aload         10
355: iconst_2
356: invokevirtual #136
359: astore        18
361: aload_1
362: aload         18
364: invokevirtual #137
367: astore        19
369: aload_1
370: invokevirtual #138
373: astore        20
375: new           #23
378: dup
379: aload         20
381: iconst_0
382: invokespecial #24
385: astore        21
387: aload         21
389: invokevirtual #56
392: astore        22
394: aload_2
395: invokestatic  #29
398: aload_2
399: invokestatic  #38
402: ldc           #100
404: invokestatic  #40
407: aload_3
408: invokestatic  #29
411: aload_3
412: invokestatic  #38
415: ldc           #100
417: invokestatic  #40
420: aload         4
422: invokestatic  #29
425: aload         4
427: invokestatic  #38
430: ldc           #100
432: invokestatic  #40
435: aload         5
437: invokestatic  #29
440: aload         5
442: invokestatic  #38
445: ldc           #100
447: invokestatic  #40
450: aload         6
452: invokestatic  #29
455: new           #30
458: dup
459: invokespecial #31
462: ldc           #32
464: invokevirtual #33
467: iload         7
469: invokevirtual #101
472: ldc           #35
474: invokevirtual #33
477: iconst_1
478: invokevirtual #101
481: ldc           #32
483: invokevirtual #33
486: invokevirtual #36
489: iload         7
491: iconst_1
492: if_icmpne     499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #37
503: aload         8
505: invokestatic  #29
508: aload         9
510: invokestatic  #29
513: aload         9
515: invokestatic  #38
518: ldc           #100
520: invokestatic  #40
523: aload         11
525: invokestatic  #29
528: aload         11
530: invokestatic  #38
533: ldc           #100
535: invokestatic  #40
538: aload         12
540: invokestatic  #29
543: aload         12
545: invokestatic  #38
548: ldc           #100
550: invokestatic  #40
553: aload         13
555: invokestatic  #29
558: aload         13
560: invokestatic  #38
563: ldc           #100
565: invokestatic  #40
568: aload         14
570: invokestatic  #29
573: aload         14
575: invokestatic  #38
578: ldc           #100
580: invokestatic  #40
583: aload         15
585: invokestatic  #29
588: new           #30
591: dup
592: invokespecial #31
595: ldc           #32
597: invokevirtual #33
600: iload         16
602: invokevirtual #101
605: ldc           #35
607: invokevirtual #33
610: iconst_1
611: invokevirtual #101
614: ldc           #32
616: invokevirtual #33
619: invokevirtual #36
622: iload         16
624: iconst_1
625: if_icmpne     632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #37
636: aload         17
638: invokestatic  #29
641: aload         18
643: invokestatic  #29
646: aload         18
648: invokestatic  #38
651: ldc           #100
653: invokestatic  #40
656: aload         19
658: invokestatic  #29
661: aload         19
663: invokestatic  #38
666: ldc           #139
668: invokestatic  #40
671: aload         20
673: invokestatic  #29
676: aload         22
678: invokestatic  #29
681: aload         22
683: invokestatic  #38
686: ldc           #58
688: invokestatic  #40
691: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test26
Start line: 1595
End line: 1645
Method source code: 
    public void test26() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test26");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getCovariance((double) (short) 1);
        double double56 = singularValueDecompositionImpl53.getConditionNumber();
        double double57 = singularValueDecompositionImpl53.getConditionNumber();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: dconst_1
365: invokevirtual #73
368: astore        18
370: aload         17
372: invokevirtual #69
375: dstore        19
377: aload         17
379: invokevirtual #69
382: dstore        21
384: aload_2
385: invokestatic  #29
388: aload_2
389: invokestatic  #38
392: ldc           #100
394: invokestatic  #40
397: aload_3
398: invokestatic  #29
401: aload_3
402: invokestatic  #38
405: ldc           #100
407: invokestatic  #40
410: aload         4
412: invokestatic  #29
415: aload         4
417: invokestatic  #38
420: ldc           #100
422: invokestatic  #40
425: aload         5
427: invokestatic  #29
430: aload         5
432: invokestatic  #38
435: ldc           #100
437: invokestatic  #40
440: aload         6
442: invokestatic  #29
445: aload         8
447: invokestatic  #29
450: aload         8
452: invokestatic  #38
455: ldc           #100
457: invokestatic  #40
460: aload         9
462: invokestatic  #29
465: aload         9
467: invokestatic  #38
470: ldc           #100
472: invokestatic  #40
475: aload         10
477: invokestatic  #29
480: aload         10
482: invokestatic  #38
485: ldc           #100
487: invokestatic  #40
490: aload         11
492: invokestatic  #29
495: aload         11
497: invokestatic  #38
500: ldc           #100
502: invokestatic  #40
505: aload         12
507: invokestatic  #29
510: new           #30
513: dup
514: invokespecial #31
517: ldc           #32
519: invokevirtual #33
522: iload         13
524: invokevirtual #101
527: ldc           #35
529: invokevirtual #33
532: iconst_1
533: invokevirtual #101
536: ldc           #32
538: invokevirtual #33
541: invokevirtual #36
544: iload         13
546: iconst_1
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #37
558: aload         14
560: invokestatic  #29
563: aload         15
565: invokestatic  #29
568: aload         16
570: invokestatic  #29
573: aload         18
575: invokestatic  #29
578: new           #30
581: dup
582: invokespecial #31
585: ldc           #32
587: invokevirtual #33
590: dload         19
592: invokevirtual #34
595: ldc           #35
597: invokevirtual #33
600: dconst_1
601: invokevirtual #34
604: ldc           #32
606: invokevirtual #33
609: invokevirtual #36
612: dload         19
614: dconst_1
615: dcmpl
616: ifne          623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #37
627: new           #30
630: dup
631: invokespecial #31
634: ldc           #32
636: invokevirtual #33
639: dload         21
641: invokevirtual #34
644: ldc           #35
646: invokevirtual #33
649: dconst_1
650: invokevirtual #34
653: ldc           #32
655: invokevirtual #33
658: invokevirtual #36
661: dload         21
663: dconst_1
664: dcmpl
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #37
676: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test27
Start line: 1648
End line: 1699
Method source code: 
    public void test27() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test27");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.DecompositionSolver decompositionSolver55 = singularValueDecompositionImpl53.getSolver();
        double[] doubleArray56 = singularValueDecompositionImpl53.getSingularValues();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(decompositionSolver55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[20.29778313018444]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #141
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #25
374: astore        20
376: aload         17
378: invokevirtual #56
381: astore        21
383: aload_2
384: invokestatic  #29
387: aload_2
388: invokestatic  #38
391: ldc           #100
393: invokestatic  #40
396: aload_3
397: invokestatic  #29
400: aload_3
401: invokestatic  #38
404: ldc           #100
406: invokestatic  #40
409: aload         4
411: invokestatic  #29
414: aload         4
416: invokestatic  #38
419: ldc           #100
421: invokestatic  #40
424: aload         5
426: invokestatic  #29
429: aload         5
431: invokestatic  #38
434: ldc           #100
436: invokestatic  #40
439: aload         6
441: invokestatic  #29
444: aload         8
446: invokestatic  #29
449: aload         8
451: invokestatic  #38
454: ldc           #100
456: invokestatic  #40
459: aload         9
461: invokestatic  #29
464: aload         9
466: invokestatic  #38
469: ldc           #100
471: invokestatic  #40
474: aload         10
476: invokestatic  #29
479: aload         10
481: invokestatic  #38
484: ldc           #100
486: invokestatic  #40
489: aload         11
491: invokestatic  #29
494: aload         11
496: invokestatic  #38
499: ldc           #100
501: invokestatic  #40
504: aload         12
506: invokestatic  #29
509: new           #30
512: dup
513: invokespecial #31
516: ldc           #32
518: invokevirtual #33
521: iload         13
523: invokevirtual #101
526: ldc           #35
528: invokevirtual #33
531: iconst_1
532: invokevirtual #101
535: ldc           #32
537: invokevirtual #33
540: invokevirtual #36
543: iload         13
545: iconst_1
546: if_icmpne     553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #37
557: aload         14
559: invokestatic  #29
562: aload         15
564: invokestatic  #29
567: aload         16
569: invokestatic  #29
572: new           #30
575: dup
576: invokespecial #31
579: ldc           #32
581: invokevirtual #33
584: dload         18
586: invokevirtual #34
589: ldc           #35
591: invokevirtual #33
594: ldc2_w        #106
597: invokevirtual #34
600: ldc           #32
602: invokevirtual #33
605: invokevirtual #36
608: dload         18
610: ldc2_w        #106
613: dcmpl
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #37
625: aload         20
627: invokestatic  #29
630: aload         21
632: invokestatic  #29
635: aload         21
637: invokestatic  #38
640: ldc           #127
642: invokestatic  #40
645: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test28
Start line: 1702
End line: 1807
Method source code: 
    public void test28() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test28");
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math.linear.BlockRealMatrix((int) (short) 100, (int) 'a');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector11 = arrayRealVector9.mapPowToSelf((double) 0);
        arrayRealVector5.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector9);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector14.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapExp();
        java.util.Iterator<org.apache.commons.math.linear.RealVector.Entry> entryItor19 = arrayRealVector14.iterator();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector23 = arrayRealVector21.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector24 = arrayRealVector21.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector21.mapExp();
        double[] doubleArray26 = arrayRealVector21.getData();
        org.apache.commons.math.linear.RealVector realVector27 = arrayRealVector14.projection(doubleArray26);
        double double28 = arrayRealVector9.getDistance(doubleArray26);
        blockRealMatrix2.setColumn((int) '4', doubleArray26);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix30 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray35 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray40 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray45 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray50 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray51 = new double[][] { doubleArray35, doubleArray40, doubleArray45, doubleArray50 };
        array2DRowRealMatrix30.data = doubleArray51;
        boolean boolean53 = array2DRowRealMatrix30.isSingular();
        double double54 = array2DRowRealMatrix30.getFrobeniusNorm();
        boolean boolean55 = blockRealMatrix2.equals((java.lang.Object) array2DRowRealMatrix30);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix56 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray61 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray66 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray71 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray76 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray77 = new double[][] { doubleArray61, doubleArray66, doubleArray71, doubleArray76 };
        array2DRowRealMatrix56.data = doubleArray77;
        org.apache.commons.math.linear.RealMatrix realMatrix79 = array2DRowRealMatrix56.transpose();
        int int80 = array2DRowRealMatrix56.getColumnDimension();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector84 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector86 = arrayRealVector84.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector87 = arrayRealVector84.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector88 = arrayRealVector84.mapExp();
        double[] doubleArray89 = arrayRealVector84.getData();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector90 = arrayRealVector82.append(arrayRealVector84);
        double[] doubleArray91 = arrayRealVector84.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix92 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray91);
        org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor93 = new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor();
        double double94 = realMatrix92.walkInColumnOrder((org.apache.commons.math.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor93);
        double double95 = array2DRowRealMatrix56.walkInRowOrder((org.apache.commons.math.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor93);
        double double96 = array2DRowRealMatrix30.walkInColumnOrder((org.apache.commons.math.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor93);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl97 = new org.apache.commons.math.linear.SingularValueDecompositionImpl((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix30);
        org.apache.commons.math.linear.RealMatrix realMatrix98 = singularValueDecompositionImpl97.getVT();
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(entryItor19);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(realMatrix79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
        org.junit.Assert.assertNotNull(realVector86);
        org.junit.Assert.assertNotNull(realVector87);
        org.junit.Assert.assertNotNull(realVector88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(arrayRealVector90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #142
19: aastore
20: invokevirtual #7
23: pop
24: new           #143
27: dup
28: bipush        100
30: bipush        97
32: invokespecial #144
35: astore_1
36: new           #8
39: dup
40: bipush        100
42: invokespecial #9
45: astore_2
46: aload_2
47: dconst_0
48: invokevirtual #10
51: astore_3
52: new           #8
55: dup
56: bipush        100
58: invokespecial #9
61: astore        4
63: aload         4
65: dconst_0
66: invokevirtual #10
69: astore        5
71: aload_2
72: aload         4
74: invokevirtual #17
77: new           #8
80: dup
81: bipush        100
83: invokespecial #9
86: astore        6
88: aload         6
90: dconst_0
91: invokevirtual #10
94: astore        7
96: aload         6
98: invokevirtual #87
101: astore        8
103: aload         6
105: invokevirtual #88
108: astore        9
110: aload         6
112: invokevirtual #145
115: astore        10
117: new           #8
120: dup
121: bipush        100
123: invokespecial #9
126: astore        11
128: aload         11
130: dconst_0
131: invokevirtual #10
134: astore        12
136: aload         11
138: invokevirtual #87
141: astore        13
143: aload         11
145: invokevirtual #88
148: astore        14
150: aload         11
152: invokevirtual #21
155: astore        15
157: aload         6
159: aload         15
161: invokevirtual #146
164: astore        16
166: aload         4
168: aload         15
170: invokevirtual #147
173: dstore        17
175: aload_1
176: bipush        52
178: aload         15
180: invokevirtual #148
183: new           #75
186: dup
187: invokespecial #76
190: astore        19
192: iconst_4
193: newarray       double
195: dup
196: iconst_0
197: dconst_1
198: dastore
199: dup
200: iconst_1
201: ldc2_w        #77
204: dastore
205: dup
206: iconst_2
207: ldc2_w        #77
210: dastore
211: dup
212: iconst_3
213: ldc2_w        #79
216: dastore
217: astore        20
219: iconst_4
220: newarray       double
222: dup
223: iconst_0
224: dconst_1
225: dastore
226: dup
227: iconst_1
228: ldc2_w        #77
231: dastore
232: dup
233: iconst_2
234: ldc2_w        #77
237: dastore
238: dup
239: iconst_3
240: ldc2_w        #79
243: dastore
244: astore        21
246: iconst_4
247: newarray       double
249: dup
250: iconst_0
251: dconst_1
252: dastore
253: dup
254: iconst_1
255: ldc2_w        #77
258: dastore
259: dup
260: iconst_2
261: ldc2_w        #77
264: dastore
265: dup
266: iconst_3
267: ldc2_w        #79
270: dastore
271: astore        22
273: iconst_4
274: newarray       double
276: dup
277: iconst_0
278: dconst_1
279: dastore
280: dup
281: iconst_1
282: ldc2_w        #77
285: dastore
286: dup
287: iconst_2
288: ldc2_w        #77
291: dastore
292: dup
293: iconst_3
294: ldc2_w        #79
297: dastore
298: astore        23
300: iconst_4
301: anewarray     #81
304: dup
305: iconst_0
306: aload         20
308: aastore
309: dup
310: iconst_1
311: aload         21
313: aastore
314: dup
315: iconst_2
316: aload         22
318: aastore
319: dup
320: iconst_3
321: aload         23
323: aastore
324: astore        24
326: aload         19
328: aload         24
330: putfield      #82
333: aload         19
335: invokevirtual #83
338: istore        25
340: aload         19
342: invokevirtual #149
345: dstore        26
347: aload_1
348: aload         19
350: invokevirtual #150
353: istore        28
355: new           #75
358: dup
359: invokespecial #76
362: astore        29
364: iconst_4
365: newarray       double
367: dup
368: iconst_0
369: dconst_1
370: dastore
371: dup
372: iconst_1
373: ldc2_w        #77
376: dastore
377: dup
378: iconst_2
379: ldc2_w        #77
382: dastore
383: dup
384: iconst_3
385: ldc2_w        #79
388: dastore
389: astore        30
391: iconst_4
392: newarray       double
394: dup
395: iconst_0
396: dconst_1
397: dastore
398: dup
399: iconst_1
400: ldc2_w        #77
403: dastore
404: dup
405: iconst_2
406: ldc2_w        #77
409: dastore
410: dup
411: iconst_3
412: ldc2_w        #79
415: dastore
416: astore        31
418: iconst_4
419: newarray       double
421: dup
422: iconst_0
423: dconst_1
424: dastore
425: dup
426: iconst_1
427: ldc2_w        #77
430: dastore
431: dup
432: iconst_2
433: ldc2_w        #77
436: dastore
437: dup
438: iconst_3
439: ldc2_w        #79
442: dastore
443: astore        32
445: iconst_4
446: newarray       double
448: dup
449: iconst_0
450: dconst_1
451: dastore
452: dup
453: iconst_1
454: ldc2_w        #77
457: dastore
458: dup
459: iconst_2
460: ldc2_w        #77
463: dastore
464: dup
465: iconst_3
466: ldc2_w        #79
469: dastore
470: astore        33
472: iconst_4
473: anewarray     #81
476: dup
477: iconst_0
478: aload         30
480: aastore
481: dup
482: iconst_1
483: aload         31
485: aastore
486: dup
487: iconst_2
488: aload         32
490: aastore
491: dup
492: iconst_3
493: aload         33
495: aastore
496: astore        34
498: aload         29
500: aload         34
502: putfield      #82
505: aload         29
507: invokevirtual #151
510: astore        35
512: aload         29
514: invokevirtual #152
517: istore        36
519: new           #8
522: dup
523: bipush        100
525: invokespecial #9
528: astore        37
530: new           #8
533: dup
534: bipush        100
536: invokespecial #9
539: astore        38
541: aload         38
543: dconst_0
544: invokevirtual #10
547: astore        39
549: aload         38
551: invokevirtual #87
554: astore        40
556: aload         38
558: invokevirtual #88
561: astore        41
563: aload         38
565: invokevirtual #21
568: astore        42
570: aload         37
572: aload         38
574: invokevirtual #153
577: astore        43
579: aload         38
581: invokevirtual #21
584: astore        44
586: aload         44
588: invokestatic  #154
591: astore        45
593: new           #155
596: dup
597: invokespecial #156
600: astore        46
602: aload         45
604: aload         46
606: invokeinterface #157,  2
611: dstore        47
613: aload         29
615: aload         46
617: invokevirtual #158
620: dstore        49
622: aload         19
624: aload         46
626: invokevirtual #159
629: dstore        51
631: new           #23
634: dup
635: aload         19
637: invokespecial #160
640: astore        53
642: aload         53
644: invokevirtual #104
647: astore        54
649: aload_3
650: invokestatic  #29
653: aload         5
655: invokestatic  #29
658: aload         7
660: invokestatic  #29
663: aload         8
665: invokestatic  #29
668: aload         9
670: invokestatic  #29
673: aload         10
675: invokestatic  #29
678: aload         12
680: invokestatic  #29
683: aload         13
685: invokestatic  #29
688: aload         14
690: invokestatic  #29
693: aload         15
695: invokestatic  #29
698: aload         15
700: invokestatic  #38
703: ldc           #39
705: invokestatic  #40
708: aload         16
710: invokestatic  #29
713: new           #30
716: dup
717: invokespecial #31
720: ldc           #32
722: invokevirtual #33
725: dload         17
727: invokevirtual #34
730: ldc           #35
732: invokevirtual #33
735: dconst_0
736: invokevirtual #34
739: ldc           #32
741: invokevirtual #33
744: invokevirtual #36
747: dload         17
749: dconst_0
750: dcmpl
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #37
762: aload         20
764: invokestatic  #29
767: aload         20
769: invokestatic  #38
772: ldc           #100
774: invokestatic  #40
777: aload         21
779: invokestatic  #29
782: aload         21
784: invokestatic  #38
787: ldc           #100
789: invokestatic  #40
792: aload         22
794: invokestatic  #29
797: aload         22
799: invokestatic  #38
802: ldc           #100
804: invokestatic  #40
807: aload         23
809: invokestatic  #29
812: aload         23
814: invokestatic  #38
817: ldc           #100
819: invokestatic  #40
822: aload         24
824: invokestatic  #29
827: new           #30
830: dup
831: invokespecial #31
834: ldc           #32
836: invokevirtual #33
839: iload         25
841: invokevirtual #101
844: ldc           #35
846: invokevirtual #33
849: iconst_1
850: invokevirtual #101
853: ldc           #32
855: invokevirtual #33
858: invokevirtual #36
861: iload         25
863: iconst_1
864: if_icmpne     871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #37
875: new           #30
878: dup
879: invokespecial #31
882: ldc           #32
884: invokevirtual #33
887: dload         26
889: invokevirtual #34
892: ldc           #35
894: invokevirtual #33
897: ldc2_w        #106
900: invokevirtual #34
903: ldc           #32
905: invokevirtual #33
908: invokevirtual #36
911: dload         26
913: ldc2_w        #106
916: dcmpl
917: ifne          924
920: iconst_1
921: goto          925
924: iconst_0
925: invokestatic  #37
928: new           #30
931: dup
932: invokespecial #31
935: ldc           #32
937: invokevirtual #33
940: iload         28
942: invokevirtual #101
945: ldc           #35
947: invokevirtual #33
950: iconst_0
951: invokevirtual #101
954: ldc           #32
956: invokevirtual #33
959: invokevirtual #36
962: iload         28
964: ifne          971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #37
975: aload         30
977: invokestatic  #29
980: aload         30
982: invokestatic  #38
985: ldc           #100
987: invokestatic  #40
990: aload         31
992: invokestatic  #29
995: aload         31
997: invokestatic  #38
1000: ldc           #100
1002: invokestatic  #40
1005: aload         32
1007: invokestatic  #29
1010: aload         32
1012: invokestatic  #38
1015: ldc           #100
1017: invokestatic  #40
1020: aload         33
1022: invokestatic  #29
1025: aload         33
1027: invokestatic  #38
1030: ldc           #100
1032: invokestatic  #40
1035: aload         34
1037: invokestatic  #29
1040: aload         35
1042: invokestatic  #29
1045: new           #30
1048: dup
1049: invokespecial #31
1052: ldc           #32
1054: invokevirtual #33
1057: iload         36
1059: invokevirtual #108
1062: ldc           #35
1064: invokevirtual #33
1067: iconst_4
1068: invokevirtual #108
1071: ldc           #32
1073: invokevirtual #33
1076: invokevirtual #36
1079: iload         36
1081: iconst_4
1082: if_icmpne     1089
1085: iconst_1
1086: goto          1090
1089: iconst_0
1090: invokestatic  #37
1093: aload         39
1095: invokestatic  #29
1098: aload         40
1100: invokestatic  #29
1103: aload         41
1105: invokestatic  #29
1108: aload         42
1110: invokestatic  #29
1113: aload         42
1115: invokestatic  #38
1118: ldc           #39
1120: invokestatic  #40
1123: aload         43
1125: invokestatic  #29
1128: aload         44
1130: invokestatic  #29
1133: aload         44
1135: invokestatic  #38
1138: ldc           #39
1140: invokestatic  #40
1143: aload         45
1145: invokestatic  #29
1148: new           #30
1151: dup
1152: invokespecial #31
1155: ldc           #32
1157: invokevirtual #33
1160: dload         47
1162: invokevirtual #34
1165: ldc           #35
1167: invokevirtual #33
1170: dconst_0
1171: invokevirtual #34
1174: ldc           #32
1176: invokevirtual #33
1179: invokevirtual #36
1182: dload         47
1184: dconst_0
1185: dcmpl
1186: ifne          1193
1189: iconst_1
1190: goto          1194
1193: iconst_0
1194: invokestatic  #37
1197: new           #30
1200: dup
1201: invokespecial #31
1204: ldc           #32
1206: invokevirtual #33
1209: dload         49
1211: invokevirtual #34
1214: ldc           #35
1216: invokevirtual #33
1219: dconst_0
1220: invokevirtual #34
1223: ldc           #32
1225: invokevirtual #33
1228: invokevirtual #36
1231: dload         49
1233: dconst_0
1234: dcmpl
1235: ifne          1242
1238: iconst_1
1239: goto          1243
1242: iconst_0
1243: invokestatic  #37
1246: new           #30
1249: dup
1250: invokespecial #31
1253: ldc           #32
1255: invokevirtual #33
1258: dload         51
1260: invokevirtual #34
1263: ldc           #35
1265: invokevirtual #33
1268: dconst_0
1269: invokevirtual #34
1272: ldc           #32
1274: invokevirtual #33
1277: invokevirtual #36
1280: dload         51
1282: dconst_0
1283: dcmpl
1284: ifne          1291
1287: iconst_1
1288: goto          1292
1291: iconst_0
1292: invokestatic  #37
1295: aload         54
1297: invokestatic  #29
1300: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test29
Start line: 1810
End line: 1875
Method source code: 
    public void test29() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test29");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        boolean boolean23 = array2DRowRealMatrix0.isSingular();
        org.apache.commons.math.linear.RealVector realVector25 = array2DRowRealMatrix0.getColumnVector(0);
        double[] doubleArray27 = array2DRowRealMatrix0.getRow(2);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix28 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray48 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray49 = new double[][] { doubleArray33, doubleArray38, doubleArray43, doubleArray48 };
        array2DRowRealMatrix28.data = doubleArray49;
        boolean boolean51 = array2DRowRealMatrix28.isSingular();
        org.apache.commons.math.linear.RealVector realVector53 = array2DRowRealMatrix28.getColumnVector(0);
        double[] doubleArray55 = array2DRowRealMatrix28.getRow(2);
        double[] doubleArray56 = array2DRowRealMatrix0.operate(doubleArray55);
        org.apache.commons.math.linear.RealMatrix realMatrix57 = array2DRowRealMatrix0.copy();
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl59 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix57, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix60 = singularValueDecompositionImpl59.getS();
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[103.0, 103.0, 103.0, 103.0]");
        org.junit.Assert.assertNotNull(realMatrix57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: aload_1
169: invokevirtual #83
172: istore        7
174: aload_1
175: iconst_0
176: invokevirtual #84
179: astore        8
181: aload_1
182: iconst_2
183: invokevirtual #136
186: astore        9
188: new           #75
191: dup
192: invokespecial #76
195: astore        10
197: iconst_4
198: newarray       double
200: dup
201: iconst_0
202: dconst_1
203: dastore
204: dup
205: iconst_1
206: ldc2_w        #77
209: dastore
210: dup
211: iconst_2
212: ldc2_w        #77
215: dastore
216: dup
217: iconst_3
218: ldc2_w        #79
221: dastore
222: astore        11
224: iconst_4
225: newarray       double
227: dup
228: iconst_0
229: dconst_1
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #77
236: dastore
237: dup
238: iconst_2
239: ldc2_w        #77
242: dastore
243: dup
244: iconst_3
245: ldc2_w        #79
248: dastore
249: astore        12
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: dconst_1
257: dastore
258: dup
259: iconst_1
260: ldc2_w        #77
263: dastore
264: dup
265: iconst_2
266: ldc2_w        #77
269: dastore
270: dup
271: iconst_3
272: ldc2_w        #79
275: dastore
276: astore        13
278: iconst_4
279: newarray       double
281: dup
282: iconst_0
283: dconst_1
284: dastore
285: dup
286: iconst_1
287: ldc2_w        #77
290: dastore
291: dup
292: iconst_2
293: ldc2_w        #77
296: dastore
297: dup
298: iconst_3
299: ldc2_w        #79
302: dastore
303: astore        14
305: iconst_4
306: anewarray     #81
309: dup
310: iconst_0
311: aload         11
313: aastore
314: dup
315: iconst_1
316: aload         12
318: aastore
319: dup
320: iconst_2
321: aload         13
323: aastore
324: dup
325: iconst_3
326: aload         14
328: aastore
329: astore        15
331: aload         10
333: aload         15
335: putfield      #82
338: aload         10
340: invokevirtual #83
343: istore        16
345: aload         10
347: iconst_0
348: invokevirtual #84
351: astore        17
353: aload         10
355: iconst_2
356: invokevirtual #136
359: astore        18
361: aload_1
362: aload         18
364: invokevirtual #137
367: astore        19
369: aload_1
370: invokevirtual #138
373: astore        20
375: new           #23
378: dup
379: aload         20
381: iconst_0
382: invokespecial #24
385: astore        21
387: aload         21
389: invokevirtual #42
392: astore        22
394: ldc           #43
396: invokestatic  #27
399: goto          444
402: astore        22
404: aload         22
406: invokevirtual #45
409: invokevirtual #46
412: ifne          444
415: new           #30
418: dup
419: invokespecial #31
422: ldc           #47
424: invokevirtual #33
427: aload         22
429: invokevirtual #45
432: invokevirtual #48
435: invokevirtual #33
438: invokevirtual #36
441: invokestatic  #27
444: aload_2
445: invokestatic  #29
448: aload_2
449: invokestatic  #38
452: ldc           #100
454: invokestatic  #40
457: aload_3
458: invokestatic  #29
461: aload_3
462: invokestatic  #38
465: ldc           #100
467: invokestatic  #40
470: aload         4
472: invokestatic  #29
475: aload         4
477: invokestatic  #38
480: ldc           #100
482: invokestatic  #40
485: aload         5
487: invokestatic  #29
490: aload         5
492: invokestatic  #38
495: ldc           #100
497: invokestatic  #40
500: aload         6
502: invokestatic  #29
505: new           #30
508: dup
509: invokespecial #31
512: ldc           #32
514: invokevirtual #33
517: iload         7
519: invokevirtual #101
522: ldc           #35
524: invokevirtual #33
527: iconst_1
528: invokevirtual #101
531: ldc           #32
533: invokevirtual #33
536: invokevirtual #36
539: iload         7
541: iconst_1
542: if_icmpne     549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #37
553: aload         8
555: invokestatic  #29
558: aload         9
560: invokestatic  #29
563: aload         9
565: invokestatic  #38
568: ldc           #100
570: invokestatic  #40
573: aload         11
575: invokestatic  #29
578: aload         11
580: invokestatic  #38
583: ldc           #100
585: invokestatic  #40
588: aload         12
590: invokestatic  #29
593: aload         12
595: invokestatic  #38
598: ldc           #100
600: invokestatic  #40
603: aload         13
605: invokestatic  #29
608: aload         13
610: invokestatic  #38
613: ldc           #100
615: invokestatic  #40
618: aload         14
620: invokestatic  #29
623: aload         14
625: invokestatic  #38
628: ldc           #100
630: invokestatic  #40
633: aload         15
635: invokestatic  #29
638: new           #30
641: dup
642: invokespecial #31
645: ldc           #32
647: invokevirtual #33
650: iload         16
652: invokevirtual #101
655: ldc           #35
657: invokevirtual #33
660: iconst_1
661: invokevirtual #101
664: ldc           #32
666: invokevirtual #33
669: invokevirtual #36
672: iload         16
674: iconst_1
675: if_icmpne     682
678: iconst_1
679: goto          683
682: iconst_0
683: invokestatic  #37
686: aload         17
688: invokestatic  #29
691: aload         18
693: invokestatic  #29
696: aload         18
698: invokestatic  #38
701: ldc           #100
703: invokestatic  #40
706: aload         19
708: invokestatic  #29
711: aload         19
713: invokestatic  #38
716: ldc           #139
718: invokestatic  #40
721: aload         20
723: invokestatic  #29
726: return
Exception table:
from    to  target type
387   399   402   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test30
Start line: 1878
End line: 1932
Method source code: 
    public void test30() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test30");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.DecompositionSolver decompositionSolver55 = singularValueDecompositionImpl53.getSolver();
        double double56 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix58 = singularValueDecompositionImpl53.getCovariance((double) 1L);
        org.apache.commons.math.linear.RealMatrix realMatrix59 = singularValueDecompositionImpl53.getS();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(decompositionSolver55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 20.29778313018444d + "'", double56 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix58);
        org.junit.Assert.assertNotNull(realMatrix59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #162
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #25
374: astore        20
376: aload         17
378: invokevirtual #52
381: dstore        21
383: aload         17
385: dconst_1
386: invokevirtual #73
389: astore        23
391: aload         17
393: invokevirtual #42
396: astore        24
398: aload_2
399: invokestatic  #29
402: aload_2
403: invokestatic  #38
406: ldc           #100
408: invokestatic  #40
411: aload_3
412: invokestatic  #29
415: aload_3
416: invokestatic  #38
419: ldc           #100
421: invokestatic  #40
424: aload         4
426: invokestatic  #29
429: aload         4
431: invokestatic  #38
434: ldc           #100
436: invokestatic  #40
439: aload         5
441: invokestatic  #29
444: aload         5
446: invokestatic  #38
449: ldc           #100
451: invokestatic  #40
454: aload         6
456: invokestatic  #29
459: aload         8
461: invokestatic  #29
464: aload         8
466: invokestatic  #38
469: ldc           #100
471: invokestatic  #40
474: aload         9
476: invokestatic  #29
479: aload         9
481: invokestatic  #38
484: ldc           #100
486: invokestatic  #40
489: aload         10
491: invokestatic  #29
494: aload         10
496: invokestatic  #38
499: ldc           #100
501: invokestatic  #40
504: aload         11
506: invokestatic  #29
509: aload         11
511: invokestatic  #38
514: ldc           #100
516: invokestatic  #40
519: aload         12
521: invokestatic  #29
524: new           #30
527: dup
528: invokespecial #31
531: ldc           #32
533: invokevirtual #33
536: iload         13
538: invokevirtual #101
541: ldc           #35
543: invokevirtual #33
546: iconst_1
547: invokevirtual #101
550: ldc           #32
552: invokevirtual #33
555: invokevirtual #36
558: iload         13
560: iconst_1
561: if_icmpne     568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #37
572: aload         14
574: invokestatic  #29
577: aload         15
579: invokestatic  #29
582: aload         16
584: invokestatic  #29
587: new           #30
590: dup
591: invokespecial #31
594: ldc           #32
596: invokevirtual #33
599: dload         18
601: invokevirtual #34
604: ldc           #35
606: invokevirtual #33
609: ldc2_w        #106
612: invokevirtual #34
615: ldc           #32
617: invokevirtual #33
620: invokevirtual #36
623: dload         18
625: ldc2_w        #106
628: dcmpl
629: ifne          636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #37
640: aload         20
642: invokestatic  #29
645: new           #30
648: dup
649: invokespecial #31
652: ldc           #32
654: invokevirtual #33
657: dload         21
659: invokevirtual #34
662: ldc           #35
664: invokevirtual #33
667: ldc2_w        #106
670: invokevirtual #34
673: ldc           #32
675: invokevirtual #33
678: invokevirtual #36
681: dload         21
683: ldc2_w        #106
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #37
698: aload         23
700: invokestatic  #29
703: aload         24
705: invokestatic  #29
708: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test31
Start line: 1935
End line: 1987
Method source code: 
    public void test31() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test31");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getUT();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = singularValueDecompositionImpl53.getUT();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertNotNull(realMatrix57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #163
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #42
374: astore        20
376: aload         17
378: invokevirtual #60
381: astore        21
383: aload         17
385: invokevirtual #60
388: astore        22
390: aload_2
391: invokestatic  #29
394: aload_2
395: invokestatic  #38
398: ldc           #100
400: invokestatic  #40
403: aload_3
404: invokestatic  #29
407: aload_3
408: invokestatic  #38
411: ldc           #100
413: invokestatic  #40
416: aload         4
418: invokestatic  #29
421: aload         4
423: invokestatic  #38
426: ldc           #100
428: invokestatic  #40
431: aload         5
433: invokestatic  #29
436: aload         5
438: invokestatic  #38
441: ldc           #100
443: invokestatic  #40
446: aload         6
448: invokestatic  #29
451: aload         8
453: invokestatic  #29
456: aload         8
458: invokestatic  #38
461: ldc           #100
463: invokestatic  #40
466: aload         9
468: invokestatic  #29
471: aload         9
473: invokestatic  #38
476: ldc           #100
478: invokestatic  #40
481: aload         10
483: invokestatic  #29
486: aload         10
488: invokestatic  #38
491: ldc           #100
493: invokestatic  #40
496: aload         11
498: invokestatic  #29
501: aload         11
503: invokestatic  #38
506: ldc           #100
508: invokestatic  #40
511: aload         12
513: invokestatic  #29
516: new           #30
519: dup
520: invokespecial #31
523: ldc           #32
525: invokevirtual #33
528: iload         13
530: invokevirtual #101
533: ldc           #35
535: invokevirtual #33
538: iconst_1
539: invokevirtual #101
542: ldc           #32
544: invokevirtual #33
547: invokevirtual #36
550: iload         13
552: iconst_1
553: if_icmpne     560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #37
564: aload         14
566: invokestatic  #29
569: aload         15
571: invokestatic  #29
574: aload         16
576: invokestatic  #29
579: new           #30
582: dup
583: invokespecial #31
586: ldc           #32
588: invokevirtual #33
591: dload         18
593: invokevirtual #34
596: ldc           #35
598: invokevirtual #33
601: ldc2_w        #106
604: invokevirtual #34
607: ldc           #32
609: invokevirtual #33
612: invokevirtual #36
615: dload         18
617: ldc2_w        #106
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #37
632: aload         20
634: invokestatic  #29
637: aload         21
639: invokestatic  #29
642: aload         22
644: invokestatic  #29
647: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test32
Start line: 1990
End line: 2053
Method source code: 
    public void test32() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test32");
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector3 = arrayRealVector1.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector7.mapSignumToSelf();
        double double9 = arrayRealVector5.dotProduct(realVector8);
        org.apache.commons.math.linear.RealVector realVector10 = arrayRealVector5.mapAsinToSelf();
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector5.append(0.0d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector16.mapSignumToSelf();
        double double18 = arrayRealVector14.dotProduct(realVector17);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector14.mapSinhToSelf();
        double double20 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector1.projection((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapPowToSelf((double) 0);
        arrayRealVector23.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapAbs();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector33.mapSignumToSelf();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector33.mapPow((double) 1);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector27.add(arrayRealVector33);
        double[] doubleArray38 = arrayRealVector27.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix39 = arrayRealVector5.outerProduct(doubleArray38);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl41 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix39, (int) '4');
        double[] doubleArray42 = singularValueDecompositionImpl41.getSingularValues();
        double[] doubleArray43 = singularValueDecompositionImpl41.getSingularValues();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix45 = singularValueDecompositionImpl41.getCovariance(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #164
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        100
30: invokespecial #9
33: astore_1
34: aload_1
35: dconst_0
36: invokevirtual #10
39: astore_2
40: new           #8
43: dup
44: bipush        100
46: invokespecial #9
49: astore_3
50: new           #8
53: dup
54: bipush        100
56: invokespecial #9
59: astore        4
61: aload         4
63: invokevirtual #11
66: astore        5
68: aload_3
69: aload         5
71: invokevirtual #12
74: dstore        6
76: aload_3
77: invokevirtual #13
80: astore        8
82: aload_3
83: dconst_0
84: invokevirtual #14
87: astore        9
89: new           #8
92: dup
93: bipush        100
95: invokespecial #9
98: astore        10
100: new           #8
103: dup
104: bipush        100
106: invokespecial #9
109: astore        11
111: aload         11
113: invokevirtual #11
116: astore        12
118: aload         10
120: aload         12
122: invokevirtual #12
125: dstore        13
127: aload         10
129: invokevirtual #15
132: astore        15
134: aload_3
135: aload         10
137: invokevirtual #12
140: dstore        16
142: aload_1
143: aload_3
144: invokevirtual #16
147: astore        18
149: new           #8
152: dup
153: bipush        100
155: invokespecial #9
158: astore        19
160: aload         19
162: dconst_0
163: invokevirtual #10
166: astore        20
168: new           #8
171: dup
172: bipush        100
174: invokespecial #9
177: astore        21
179: aload         21
181: dconst_0
182: invokevirtual #10
185: astore        22
187: aload         19
189: aload         21
191: invokevirtual #17
194: aload         21
196: invokevirtual #18
199: astore        23
201: new           #8
204: dup
205: bipush        100
207: invokespecial #9
210: astore        24
212: aload         24
214: invokevirtual #11
217: astore        25
219: aload         24
221: dconst_1
222: invokevirtual #19
225: astore        26
227: aload         21
229: aload         24
231: invokevirtual #20
234: astore        27
236: aload         21
238: invokevirtual #21
241: astore        28
243: aload_3
244: aload         28
246: invokevirtual #22
249: astore        29
251: new           #23
254: dup
255: aload         29
257: bipush        52
259: invokespecial #24
262: astore        30
264: aload         30
266: invokevirtual #56
269: astore        31
271: aload         30
273: invokevirtual #56
276: astore        32
278: aload         30
280: dconst_0
281: invokevirtual #73
284: astore        33
286: ldc           #53
288: invokestatic  #27
291: goto          296
294: astore        33
296: aload_2
297: invokestatic  #29
300: aload         5
302: invokestatic  #29
305: new           #30
308: dup
309: invokespecial #31
312: ldc           #32
314: invokevirtual #33
317: dload         6
319: invokevirtual #34
322: ldc           #35
324: invokevirtual #33
327: dconst_0
328: invokevirtual #34
331: ldc           #32
333: invokevirtual #33
336: invokevirtual #36
339: dload         6
341: dconst_0
342: dcmpl
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #37
354: aload         8
356: invokestatic  #29
359: aload         9
361: invokestatic  #29
364: aload         12
366: invokestatic  #29
369: new           #30
372: dup
373: invokespecial #31
376: ldc           #32
378: invokevirtual #33
381: dload         13
383: invokevirtual #34
386: ldc           #35
388: invokevirtual #33
391: dconst_0
392: invokevirtual #34
395: ldc           #32
397: invokevirtual #33
400: invokevirtual #36
403: dload         13
405: dconst_0
406: dcmpl
407: ifne          414
410: iconst_1
411: goto          415
414: iconst_0
415: invokestatic  #37
418: aload         15
420: invokestatic  #29
423: new           #30
426: dup
427: invokespecial #31
430: ldc           #32
432: invokevirtual #33
435: dload         16
437: invokevirtual #34
440: ldc           #35
442: invokevirtual #33
445: dconst_0
446: invokevirtual #34
449: ldc           #32
451: invokevirtual #33
454: invokevirtual #36
457: dload         16
459: dconst_0
460: dcmpl
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #37
472: aload         18
474: invokestatic  #29
477: aload         20
479: invokestatic  #29
482: aload         22
484: invokestatic  #29
487: aload         23
489: invokestatic  #29
492: aload         25
494: invokestatic  #29
497: aload         26
499: invokestatic  #29
502: aload         27
504: invokestatic  #29
507: aload         28
509: invokestatic  #29
512: aload         28
514: invokestatic  #38
517: ldc           #39
519: invokestatic  #40
522: aload         29
524: invokestatic  #29
527: aload         31
529: invokestatic  #29
532: aload         31
534: invokestatic  #38
537: ldc           #58
539: invokestatic  #40
542: aload         32
544: invokestatic  #29
547: aload         32
549: invokestatic  #38
552: ldc           #58
554: invokestatic  #40
557: return
Exception table:
from    to  target type
278   291   294   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test33
Start line: 2056
End line: 2104
Method source code: 
    public void test33() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test33");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        org.apache.commons.math.linear.RealMatrix realMatrix54 = singularValueDecompositionImpl53.getVT();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getCovariance(0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertNotNull(realMatrix54);
        org.junit.Assert.assertNotNull(realMatrix56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #165
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #104
367: astore        18
369: aload         17
371: dconst_0
372: invokevirtual #73
375: astore        19
377: aload_2
378: invokestatic  #29
381: aload_2
382: invokestatic  #38
385: ldc           #100
387: invokestatic  #40
390: aload_3
391: invokestatic  #29
394: aload_3
395: invokestatic  #38
398: ldc           #100
400: invokestatic  #40
403: aload         4
405: invokestatic  #29
408: aload         4
410: invokestatic  #38
413: ldc           #100
415: invokestatic  #40
418: aload         5
420: invokestatic  #29
423: aload         5
425: invokestatic  #38
428: ldc           #100
430: invokestatic  #40
433: aload         6
435: invokestatic  #29
438: aload         8
440: invokestatic  #29
443: aload         8
445: invokestatic  #38
448: ldc           #100
450: invokestatic  #40
453: aload         9
455: invokestatic  #29
458: aload         9
460: invokestatic  #38
463: ldc           #100
465: invokestatic  #40
468: aload         10
470: invokestatic  #29
473: aload         10
475: invokestatic  #38
478: ldc           #100
480: invokestatic  #40
483: aload         11
485: invokestatic  #29
488: aload         11
490: invokestatic  #38
493: ldc           #100
495: invokestatic  #40
498: aload         12
500: invokestatic  #29
503: new           #30
506: dup
507: invokespecial #31
510: ldc           #32
512: invokevirtual #33
515: iload         13
517: invokevirtual #101
520: ldc           #35
522: invokevirtual #33
525: iconst_1
526: invokevirtual #101
529: ldc           #32
531: invokevirtual #33
534: invokevirtual #36
537: iload         13
539: iconst_1
540: if_icmpne     547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #37
551: aload         14
553: invokestatic  #29
556: aload         15
558: invokestatic  #29
561: aload         16
563: invokestatic  #29
566: aload         18
568: invokestatic  #29
571: aload         19
573: invokestatic  #29
576: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test34
Start line: 2107
End line: 2157
Method source code: 
    public void test34() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test34");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getConditionNumber();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getVT();
        org.apache.commons.math.linear.DecompositionSolver decompositionSolver56 = singularValueDecompositionImpl53.getSolver();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(decompositionSolver56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #166
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #69
367: dstore        18
369: aload         17
371: invokevirtual #104
374: astore        20
376: aload         17
378: invokevirtual #25
381: astore        21
383: aload_2
384: invokestatic  #29
387: aload_2
388: invokestatic  #38
391: ldc           #100
393: invokestatic  #40
396: aload_3
397: invokestatic  #29
400: aload_3
401: invokestatic  #38
404: ldc           #100
406: invokestatic  #40
409: aload         4
411: invokestatic  #29
414: aload         4
416: invokestatic  #38
419: ldc           #100
421: invokestatic  #40
424: aload         5
426: invokestatic  #29
429: aload         5
431: invokestatic  #38
434: ldc           #100
436: invokestatic  #40
439: aload         6
441: invokestatic  #29
444: aload         8
446: invokestatic  #29
449: aload         8
451: invokestatic  #38
454: ldc           #100
456: invokestatic  #40
459: aload         9
461: invokestatic  #29
464: aload         9
466: invokestatic  #38
469: ldc           #100
471: invokestatic  #40
474: aload         10
476: invokestatic  #29
479: aload         10
481: invokestatic  #38
484: ldc           #100
486: invokestatic  #40
489: aload         11
491: invokestatic  #29
494: aload         11
496: invokestatic  #38
499: ldc           #100
501: invokestatic  #40
504: aload         12
506: invokestatic  #29
509: new           #30
512: dup
513: invokespecial #31
516: ldc           #32
518: invokevirtual #33
521: iload         13
523: invokevirtual #101
526: ldc           #35
528: invokevirtual #33
531: iconst_1
532: invokevirtual #101
535: ldc           #32
537: invokevirtual #33
540: invokevirtual #36
543: iload         13
545: iconst_1
546: if_icmpne     553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #37
557: aload         14
559: invokestatic  #29
562: aload         15
564: invokestatic  #29
567: aload         16
569: invokestatic  #29
572: new           #30
575: dup
576: invokespecial #31
579: ldc           #32
581: invokevirtual #33
584: dload         18
586: invokevirtual #34
589: ldc           #35
591: invokevirtual #33
594: dconst_1
595: invokevirtual #34
598: ldc           #32
600: invokevirtual #33
603: invokevirtual #36
606: dload         18
608: dconst_1
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #37
621: aload         20
623: invokestatic  #29
626: aload         21
628: invokestatic  #29
631: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test35
Start line: 2160
End line: 2215
Method source code: 
    public void test35() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test35");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        boolean boolean23 = array2DRowRealMatrix0.isSingular();
        org.apache.commons.math.linear.RealVector realVector25 = array2DRowRealMatrix0.getColumnVector(0);
        double[] doubleArray27 = array2DRowRealMatrix0.getRow(2);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix28 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray48 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray49 = new double[][] { doubleArray33, doubleArray38, doubleArray43, doubleArray48 };
        array2DRowRealMatrix28.data = doubleArray49;
        int int51 = array2DRowRealMatrix28.getColumnDimension();
        org.apache.commons.math.linear.RealMatrix realMatrix52 = array2DRowRealMatrix0.preMultiply((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix28);
        boolean boolean53 = array2DRowRealMatrix0.isSquare();
        double[][] doubleArray54 = array2DRowRealMatrix0.getData();
        int int55 = array2DRowRealMatrix0.getRowDimension();
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl56 = new org.apache.commons.math.linear.SingularValueDecompositionImpl((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix0);
        int int57 = array2DRowRealMatrix0.getColumnDimension();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertNotNull(realMatrix52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #167
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: aload_1
169: invokevirtual #83
172: istore        7
174: aload_1
175: iconst_0
176: invokevirtual #84
179: astore        8
181: aload_1
182: iconst_2
183: invokevirtual #136
186: astore        9
188: new           #75
191: dup
192: invokespecial #76
195: astore        10
197: iconst_4
198: newarray       double
200: dup
201: iconst_0
202: dconst_1
203: dastore
204: dup
205: iconst_1
206: ldc2_w        #77
209: dastore
210: dup
211: iconst_2
212: ldc2_w        #77
215: dastore
216: dup
217: iconst_3
218: ldc2_w        #79
221: dastore
222: astore        11
224: iconst_4
225: newarray       double
227: dup
228: iconst_0
229: dconst_1
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #77
236: dastore
237: dup
238: iconst_2
239: ldc2_w        #77
242: dastore
243: dup
244: iconst_3
245: ldc2_w        #79
248: dastore
249: astore        12
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: dconst_1
257: dastore
258: dup
259: iconst_1
260: ldc2_w        #77
263: dastore
264: dup
265: iconst_2
266: ldc2_w        #77
269: dastore
270: dup
271: iconst_3
272: ldc2_w        #79
275: dastore
276: astore        13
278: iconst_4
279: newarray       double
281: dup
282: iconst_0
283: dconst_1
284: dastore
285: dup
286: iconst_1
287: ldc2_w        #77
290: dastore
291: dup
292: iconst_2
293: ldc2_w        #77
296: dastore
297: dup
298: iconst_3
299: ldc2_w        #79
302: dastore
303: astore        14
305: iconst_4
306: anewarray     #81
309: dup
310: iconst_0
311: aload         11
313: aastore
314: dup
315: iconst_1
316: aload         12
318: aastore
319: dup
320: iconst_2
321: aload         13
323: aastore
324: dup
325: iconst_3
326: aload         14
328: aastore
329: astore        15
331: aload         10
333: aload         15
335: putfield      #82
338: aload         10
340: invokevirtual #152
343: istore        16
345: aload_1
346: aload         10
348: invokevirtual #168
351: astore        17
353: aload_1
354: invokevirtual #169
357: istore        18
359: aload_1
360: invokevirtual #170
363: astore        19
365: aload_1
366: invokevirtual #171
369: istore        20
371: new           #23
374: dup
375: aload_1
376: invokespecial #160
379: astore        21
381: aload_1
382: invokevirtual #152
385: istore        22
387: aload_2
388: invokestatic  #29
391: aload_2
392: invokestatic  #38
395: ldc           #100
397: invokestatic  #40
400: aload_3
401: invokestatic  #29
404: aload_3
405: invokestatic  #38
408: ldc           #100
410: invokestatic  #40
413: aload         4
415: invokestatic  #29
418: aload         4
420: invokestatic  #38
423: ldc           #100
425: invokestatic  #40
428: aload         5
430: invokestatic  #29
433: aload         5
435: invokestatic  #38
438: ldc           #100
440: invokestatic  #40
443: aload         6
445: invokestatic  #29
448: new           #30
451: dup
452: invokespecial #31
455: ldc           #32
457: invokevirtual #33
460: iload         7
462: invokevirtual #101
465: ldc           #35
467: invokevirtual #33
470: iconst_1
471: invokevirtual #101
474: ldc           #32
476: invokevirtual #33
479: invokevirtual #36
482: iload         7
484: iconst_1
485: if_icmpne     492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #37
496: aload         8
498: invokestatic  #29
501: aload         9
503: invokestatic  #29
506: aload         9
508: invokestatic  #38
511: ldc           #100
513: invokestatic  #40
516: aload         11
518: invokestatic  #29
521: aload         11
523: invokestatic  #38
526: ldc           #100
528: invokestatic  #40
531: aload         12
533: invokestatic  #29
536: aload         12
538: invokestatic  #38
541: ldc           #100
543: invokestatic  #40
546: aload         13
548: invokestatic  #29
551: aload         13
553: invokestatic  #38
556: ldc           #100
558: invokestatic  #40
561: aload         14
563: invokestatic  #29
566: aload         14
568: invokestatic  #38
571: ldc           #100
573: invokestatic  #40
576: aload         15
578: invokestatic  #29
581: new           #30
584: dup
585: invokespecial #31
588: ldc           #32
590: invokevirtual #33
593: iload         16
595: invokevirtual #108
598: ldc           #35
600: invokevirtual #33
603: iconst_4
604: invokevirtual #108
607: ldc           #32
609: invokevirtual #33
612: invokevirtual #36
615: iload         16
617: iconst_4
618: if_icmpne     625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #37
629: aload         17
631: invokestatic  #29
634: new           #30
637: dup
638: invokespecial #31
641: ldc           #32
643: invokevirtual #33
646: iload         18
648: invokevirtual #101
651: ldc           #35
653: invokevirtual #33
656: iconst_1
657: invokevirtual #101
660: ldc           #32
662: invokevirtual #33
665: invokevirtual #36
668: iload         18
670: iconst_1
671: if_icmpne     678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #37
682: aload         19
684: invokestatic  #29
687: new           #30
690: dup
691: invokespecial #31
694: ldc           #32
696: invokevirtual #33
699: iload         20
701: invokevirtual #108
704: ldc           #35
706: invokevirtual #33
709: iconst_4
710: invokevirtual #108
713: ldc           #32
715: invokevirtual #33
718: invokevirtual #36
721: iload         20
723: iconst_4
724: if_icmpne     731
727: iconst_1
728: goto          732
731: iconst_0
732: invokestatic  #37
735: new           #30
738: dup
739: invokespecial #31
742: ldc           #32
744: invokevirtual #33
747: iload         22
749: invokevirtual #108
752: ldc           #35
754: invokevirtual #33
757: iconst_4
758: invokevirtual #108
761: ldc           #32
763: invokevirtual #33
766: invokevirtual #36
769: iload         22
771: iconst_4
772: if_icmpne     779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #37
783: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test36
Start line: 2218
End line: 2268
Method source code: 
    public void test36() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test36");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getConditionNumber();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getVT();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = singularValueDecompositionImpl53.getCovariance(1.1752011936438014d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #69
367: dstore        18
369: aload         17
371: invokevirtual #104
374: astore        20
376: aload         17
378: ldc2_w        #173
381: invokevirtual #73
384: astore        21
386: aload_2
387: invokestatic  #29
390: aload_2
391: invokestatic  #38
394: ldc           #100
396: invokestatic  #40
399: aload_3
400: invokestatic  #29
403: aload_3
404: invokestatic  #38
407: ldc           #100
409: invokestatic  #40
412: aload         4
414: invokestatic  #29
417: aload         4
419: invokestatic  #38
422: ldc           #100
424: invokestatic  #40
427: aload         5
429: invokestatic  #29
432: aload         5
434: invokestatic  #38
437: ldc           #100
439: invokestatic  #40
442: aload         6
444: invokestatic  #29
447: aload         8
449: invokestatic  #29
452: aload         8
454: invokestatic  #38
457: ldc           #100
459: invokestatic  #40
462: aload         9
464: invokestatic  #29
467: aload         9
469: invokestatic  #38
472: ldc           #100
474: invokestatic  #40
477: aload         10
479: invokestatic  #29
482: aload         10
484: invokestatic  #38
487: ldc           #100
489: invokestatic  #40
492: aload         11
494: invokestatic  #29
497: aload         11
499: invokestatic  #38
502: ldc           #100
504: invokestatic  #40
507: aload         12
509: invokestatic  #29
512: new           #30
515: dup
516: invokespecial #31
519: ldc           #32
521: invokevirtual #33
524: iload         13
526: invokevirtual #101
529: ldc           #35
531: invokevirtual #33
534: iconst_1
535: invokevirtual #101
538: ldc           #32
540: invokevirtual #33
543: invokevirtual #36
546: iload         13
548: iconst_1
549: if_icmpne     556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #37
560: aload         14
562: invokestatic  #29
565: aload         15
567: invokestatic  #29
570: aload         16
572: invokestatic  #29
575: new           #30
578: dup
579: invokespecial #31
582: ldc           #32
584: invokevirtual #33
587: dload         18
589: invokevirtual #34
592: ldc           #35
594: invokevirtual #33
597: dconst_1
598: invokevirtual #34
601: ldc           #32
603: invokevirtual #33
606: invokevirtual #36
609: dload         18
611: dconst_1
612: dcmpl
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #37
624: aload         20
626: invokestatic  #29
629: aload         21
631: invokestatic  #29
634: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test37
Start line: 2271
End line: 2378
Method source code: 
    public void test37() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test37");
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math.linear.BlockRealMatrix((int) (short) 100, (int) 'a');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector11 = arrayRealVector9.mapPowToSelf((double) 0);
        arrayRealVector5.checkVectorDimensions((org.apache.commons.math.linear.RealVector) arrayRealVector9);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector14.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapExp();
        java.util.Iterator<org.apache.commons.math.linear.RealVector.Entry> entryItor19 = arrayRealVector14.iterator();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector23 = arrayRealVector21.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector24 = arrayRealVector21.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector21.mapExp();
        double[] doubleArray26 = arrayRealVector21.getData();
        org.apache.commons.math.linear.RealVector realVector27 = arrayRealVector14.projection(doubleArray26);
        double double28 = arrayRealVector9.getDistance(doubleArray26);
        blockRealMatrix2.setColumn((int) '4', doubleArray26);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix30 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray35 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray40 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray45 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray50 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray51 = new double[][] { doubleArray35, doubleArray40, doubleArray45, doubleArray50 };
        array2DRowRealMatrix30.data = doubleArray51;
        boolean boolean53 = array2DRowRealMatrix30.isSingular();
        double double54 = array2DRowRealMatrix30.getFrobeniusNorm();
        boolean boolean55 = blockRealMatrix2.equals((java.lang.Object) array2DRowRealMatrix30);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix56 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray61 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray66 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray71 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray76 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray77 = new double[][] { doubleArray61, doubleArray66, doubleArray71, doubleArray76 };
        array2DRowRealMatrix56.data = doubleArray77;
        org.apache.commons.math.linear.RealMatrix realMatrix79 = array2DRowRealMatrix56.transpose();
        int int80 = array2DRowRealMatrix56.getColumnDimension();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector84 = new org.apache.commons.math.linear.ArrayRealVector((int) (short) 100);
        org.apache.commons.math.linear.RealVector realVector86 = arrayRealVector84.mapPowToSelf((double) 0);
        org.apache.commons.math.linear.RealVector realVector87 = arrayRealVector84.mapCeilToSelf();
        org.apache.commons.math.linear.RealVector realVector88 = arrayRealVector84.mapExp();
        double[] doubleArray89 = arrayRealVector84.getData();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector90 = arrayRealVector82.append(arrayRealVector84);
        double[] doubleArray91 = arrayRealVector84.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix92 = org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(doubleArray91);
        org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor93 = new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor();
        double double94 = realMatrix92.walkInColumnOrder((org.apache.commons.math.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor93);
        double double95 = array2DRowRealMatrix56.walkInRowOrder((org.apache.commons.math.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor93);
        double double96 = array2DRowRealMatrix30.walkInColumnOrder((org.apache.commons.math.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor93);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl97 = new org.apache.commons.math.linear.SingularValueDecompositionImpl((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix30);
        org.apache.commons.math.linear.RealMatrix realMatrix98 = array2DRowRealMatrix30.copy();
        double double99 = realMatrix98.getNorm();
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(entryItor19);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(realMatrix79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
        org.junit.Assert.assertNotNull(realVector86);
        org.junit.Assert.assertNotNull(realVector87);
        org.junit.Assert.assertNotNull(realVector88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(arrayRealVector90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 40.0d + "'", double99 == 40.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: new           #143
27: dup
28: bipush        100
30: bipush        97
32: invokespecial #144
35: astore_1
36: new           #8
39: dup
40: bipush        100
42: invokespecial #9
45: astore_2
46: aload_2
47: dconst_0
48: invokevirtual #10
51: astore_3
52: new           #8
55: dup
56: bipush        100
58: invokespecial #9
61: astore        4
63: aload         4
65: dconst_0
66: invokevirtual #10
69: astore        5
71: aload_2
72: aload         4
74: invokevirtual #17
77: new           #8
80: dup
81: bipush        100
83: invokespecial #9
86: astore        6
88: aload         6
90: dconst_0
91: invokevirtual #10
94: astore        7
96: aload         6
98: invokevirtual #87
101: astore        8
103: aload         6
105: invokevirtual #88
108: astore        9
110: aload         6
112: invokevirtual #145
115: astore        10
117: new           #8
120: dup
121: bipush        100
123: invokespecial #9
126: astore        11
128: aload         11
130: dconst_0
131: invokevirtual #10
134: astore        12
136: aload         11
138: invokevirtual #87
141: astore        13
143: aload         11
145: invokevirtual #88
148: astore        14
150: aload         11
152: invokevirtual #21
155: astore        15
157: aload         6
159: aload         15
161: invokevirtual #146
164: astore        16
166: aload         4
168: aload         15
170: invokevirtual #147
173: dstore        17
175: aload_1
176: bipush        52
178: aload         15
180: invokevirtual #148
183: new           #75
186: dup
187: invokespecial #76
190: astore        19
192: iconst_4
193: newarray       double
195: dup
196: iconst_0
197: dconst_1
198: dastore
199: dup
200: iconst_1
201: ldc2_w        #77
204: dastore
205: dup
206: iconst_2
207: ldc2_w        #77
210: dastore
211: dup
212: iconst_3
213: ldc2_w        #79
216: dastore
217: astore        20
219: iconst_4
220: newarray       double
222: dup
223: iconst_0
224: dconst_1
225: dastore
226: dup
227: iconst_1
228: ldc2_w        #77
231: dastore
232: dup
233: iconst_2
234: ldc2_w        #77
237: dastore
238: dup
239: iconst_3
240: ldc2_w        #79
243: dastore
244: astore        21
246: iconst_4
247: newarray       double
249: dup
250: iconst_0
251: dconst_1
252: dastore
253: dup
254: iconst_1
255: ldc2_w        #77
258: dastore
259: dup
260: iconst_2
261: ldc2_w        #77
264: dastore
265: dup
266: iconst_3
267: ldc2_w        #79
270: dastore
271: astore        22
273: iconst_4
274: newarray       double
276: dup
277: iconst_0
278: dconst_1
279: dastore
280: dup
281: iconst_1
282: ldc2_w        #77
285: dastore
286: dup
287: iconst_2
288: ldc2_w        #77
291: dastore
292: dup
293: iconst_3
294: ldc2_w        #79
297: dastore
298: astore        23
300: iconst_4
301: anewarray     #81
304: dup
305: iconst_0
306: aload         20
308: aastore
309: dup
310: iconst_1
311: aload         21
313: aastore
314: dup
315: iconst_2
316: aload         22
318: aastore
319: dup
320: iconst_3
321: aload         23
323: aastore
324: astore        24
326: aload         19
328: aload         24
330: putfield      #82
333: aload         19
335: invokevirtual #83
338: istore        25
340: aload         19
342: invokevirtual #149
345: dstore        26
347: aload_1
348: aload         19
350: invokevirtual #150
353: istore        28
355: new           #75
358: dup
359: invokespecial #76
362: astore        29
364: iconst_4
365: newarray       double
367: dup
368: iconst_0
369: dconst_1
370: dastore
371: dup
372: iconst_1
373: ldc2_w        #77
376: dastore
377: dup
378: iconst_2
379: ldc2_w        #77
382: dastore
383: dup
384: iconst_3
385: ldc2_w        #79
388: dastore
389: astore        30
391: iconst_4
392: newarray       double
394: dup
395: iconst_0
396: dconst_1
397: dastore
398: dup
399: iconst_1
400: ldc2_w        #77
403: dastore
404: dup
405: iconst_2
406: ldc2_w        #77
409: dastore
410: dup
411: iconst_3
412: ldc2_w        #79
415: dastore
416: astore        31
418: iconst_4
419: newarray       double
421: dup
422: iconst_0
423: dconst_1
424: dastore
425: dup
426: iconst_1
427: ldc2_w        #77
430: dastore
431: dup
432: iconst_2
433: ldc2_w        #77
436: dastore
437: dup
438: iconst_3
439: ldc2_w        #79
442: dastore
443: astore        32
445: iconst_4
446: newarray       double
448: dup
449: iconst_0
450: dconst_1
451: dastore
452: dup
453: iconst_1
454: ldc2_w        #77
457: dastore
458: dup
459: iconst_2
460: ldc2_w        #77
463: dastore
464: dup
465: iconst_3
466: ldc2_w        #79
469: dastore
470: astore        33
472: iconst_4
473: anewarray     #81
476: dup
477: iconst_0
478: aload         30
480: aastore
481: dup
482: iconst_1
483: aload         31
485: aastore
486: dup
487: iconst_2
488: aload         32
490: aastore
491: dup
492: iconst_3
493: aload         33
495: aastore
496: astore        34
498: aload         29
500: aload         34
502: putfield      #82
505: aload         29
507: invokevirtual #151
510: astore        35
512: aload         29
514: invokevirtual #152
517: istore        36
519: new           #8
522: dup
523: bipush        100
525: invokespecial #9
528: astore        37
530: new           #8
533: dup
534: bipush        100
536: invokespecial #9
539: astore        38
541: aload         38
543: dconst_0
544: invokevirtual #10
547: astore        39
549: aload         38
551: invokevirtual #87
554: astore        40
556: aload         38
558: invokevirtual #88
561: astore        41
563: aload         38
565: invokevirtual #21
568: astore        42
570: aload         37
572: aload         38
574: invokevirtual #153
577: astore        43
579: aload         38
581: invokevirtual #21
584: astore        44
586: aload         44
588: invokestatic  #154
591: astore        45
593: new           #155
596: dup
597: invokespecial #156
600: astore        46
602: aload         45
604: aload         46
606: invokeinterface #157,  2
611: dstore        47
613: aload         29
615: aload         46
617: invokevirtual #158
620: dstore        49
622: aload         19
624: aload         46
626: invokevirtual #159
629: dstore        51
631: new           #23
634: dup
635: aload         19
637: invokespecial #160
640: astore        53
642: aload         19
644: invokevirtual #138
647: astore        54
649: aload         54
651: invokeinterface #176,  1
656: dstore        55
658: aload_3
659: invokestatic  #29
662: aload         5
664: invokestatic  #29
667: aload         7
669: invokestatic  #29
672: aload         8
674: invokestatic  #29
677: aload         9
679: invokestatic  #29
682: aload         10
684: invokestatic  #29
687: aload         12
689: invokestatic  #29
692: aload         13
694: invokestatic  #29
697: aload         14
699: invokestatic  #29
702: aload         15
704: invokestatic  #29
707: aload         15
709: invokestatic  #38
712: ldc           #39
714: invokestatic  #40
717: aload         16
719: invokestatic  #29
722: new           #30
725: dup
726: invokespecial #31
729: ldc           #32
731: invokevirtual #33
734: dload         17
736: invokevirtual #34
739: ldc           #35
741: invokevirtual #33
744: dconst_0
745: invokevirtual #34
748: ldc           #32
750: invokevirtual #33
753: invokevirtual #36
756: dload         17
758: dconst_0
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #37
771: aload         20
773: invokestatic  #29
776: aload         20
778: invokestatic  #38
781: ldc           #100
783: invokestatic  #40
786: aload         21
788: invokestatic  #29
791: aload         21
793: invokestatic  #38
796: ldc           #100
798: invokestatic  #40
801: aload         22
803: invokestatic  #29
806: aload         22
808: invokestatic  #38
811: ldc           #100
813: invokestatic  #40
816: aload         23
818: invokestatic  #29
821: aload         23
823: invokestatic  #38
826: ldc           #100
828: invokestatic  #40
831: aload         24
833: invokestatic  #29
836: new           #30
839: dup
840: invokespecial #31
843: ldc           #32
845: invokevirtual #33
848: iload         25
850: invokevirtual #101
853: ldc           #35
855: invokevirtual #33
858: iconst_1
859: invokevirtual #101
862: ldc           #32
864: invokevirtual #33
867: invokevirtual #36
870: iload         25
872: iconst_1
873: if_icmpne     880
876: iconst_1
877: goto          881
880: iconst_0
881: invokestatic  #37
884: new           #30
887: dup
888: invokespecial #31
891: ldc           #32
893: invokevirtual #33
896: dload         26
898: invokevirtual #34
901: ldc           #35
903: invokevirtual #33
906: ldc2_w        #106
909: invokevirtual #34
912: ldc           #32
914: invokevirtual #33
917: invokevirtual #36
920: dload         26
922: ldc2_w        #106
925: dcmpl
926: ifne          933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #37
937: new           #30
940: dup
941: invokespecial #31
944: ldc           #32
946: invokevirtual #33
949: iload         28
951: invokevirtual #101
954: ldc           #35
956: invokevirtual #33
959: iconst_0
960: invokevirtual #101
963: ldc           #32
965: invokevirtual #33
968: invokevirtual #36
971: iload         28
973: ifne          980
976: iconst_1
977: goto          981
980: iconst_0
981: invokestatic  #37
984: aload         30
986: invokestatic  #29
989: aload         30
991: invokestatic  #38
994: ldc           #100
996: invokestatic  #40
999: aload         31
1001: invokestatic  #29
1004: aload         31
1006: invokestatic  #38
1009: ldc           #100
1011: invokestatic  #40
1014: aload         32
1016: invokestatic  #29
1019: aload         32
1021: invokestatic  #38
1024: ldc           #100
1026: invokestatic  #40
1029: aload         33
1031: invokestatic  #29
1034: aload         33
1036: invokestatic  #38
1039: ldc           #100
1041: invokestatic  #40
1044: aload         34
1046: invokestatic  #29
1049: aload         35
1051: invokestatic  #29
1054: new           #30
1057: dup
1058: invokespecial #31
1061: ldc           #32
1063: invokevirtual #33
1066: iload         36
1068: invokevirtual #108
1071: ldc           #35
1073: invokevirtual #33
1076: iconst_4
1077: invokevirtual #108
1080: ldc           #32
1082: invokevirtual #33
1085: invokevirtual #36
1088: iload         36
1090: iconst_4
1091: if_icmpne     1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #37
1102: aload         39
1104: invokestatic  #29
1107: aload         40
1109: invokestatic  #29
1112: aload         41
1114: invokestatic  #29
1117: aload         42
1119: invokestatic  #29
1122: aload         42
1124: invokestatic  #38
1127: ldc           #39
1129: invokestatic  #40
1132: aload         43
1134: invokestatic  #29
1137: aload         44
1139: invokestatic  #29
1142: aload         44
1144: invokestatic  #38
1147: ldc           #39
1149: invokestatic  #40
1152: aload         45
1154: invokestatic  #29
1157: new           #30
1160: dup
1161: invokespecial #31
1164: ldc           #32
1166: invokevirtual #33
1169: dload         47
1171: invokevirtual #34
1174: ldc           #35
1176: invokevirtual #33
1179: dconst_0
1180: invokevirtual #34
1183: ldc           #32
1185: invokevirtual #33
1188: invokevirtual #36
1191: dload         47
1193: dconst_0
1194: dcmpl
1195: ifne          1202
1198: iconst_1
1199: goto          1203
1202: iconst_0
1203: invokestatic  #37
1206: new           #30
1209: dup
1210: invokespecial #31
1213: ldc           #32
1215: invokevirtual #33
1218: dload         49
1220: invokevirtual #34
1223: ldc           #35
1225: invokevirtual #33
1228: dconst_0
1229: invokevirtual #34
1232: ldc           #32
1234: invokevirtual #33
1237: invokevirtual #36
1240: dload         49
1242: dconst_0
1243: dcmpl
1244: ifne          1251
1247: iconst_1
1248: goto          1252
1251: iconst_0
1252: invokestatic  #37
1255: new           #30
1258: dup
1259: invokespecial #31
1262: ldc           #32
1264: invokevirtual #33
1267: dload         51
1269: invokevirtual #34
1272: ldc           #35
1274: invokevirtual #33
1277: dconst_0
1278: invokevirtual #34
1281: ldc           #32
1283: invokevirtual #33
1286: invokevirtual #36
1289: dload         51
1291: dconst_0
1292: dcmpl
1293: ifne          1300
1296: iconst_1
1297: goto          1301
1300: iconst_0
1301: invokestatic  #37
1304: aload         54
1306: invokestatic  #29
1309: new           #30
1312: dup
1313: invokespecial #31
1316: ldc           #32
1318: invokevirtual #33
1321: dload         55
1323: invokevirtual #34
1326: ldc           #35
1328: invokevirtual #33
1331: ldc2_w        #177
1334: invokevirtual #34
1337: ldc           #32
1339: invokevirtual #33
1342: invokevirtual #36
1345: dload         55
1347: ldc2_w        #177
1350: dcmpl
1351: ifne          1358
1354: iconst_1
1355: goto          1359
1358: iconst_0
1359: invokestatic  #37
1362: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test38
Start line: 2381
End line: 2440
Method source code: 
    public void test38() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test38");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix23 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray28 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray33 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray44 = new double[][] { doubleArray28, doubleArray33, doubleArray38, doubleArray43 };
        array2DRowRealMatrix23.data = doubleArray44;
        boolean boolean46 = array2DRowRealMatrix23.isSingular();
        org.apache.commons.math.linear.RealVector realVector48 = array2DRowRealMatrix23.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix49 = array2DRowRealMatrix0.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix23);
        org.apache.commons.math.linear.RealMatrix realMatrix51 = array2DRowRealMatrix23.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl53 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix51, 52);
        double double54 = singularValueDecompositionImpl53.getNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix55 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.RealMatrix realMatrix56 = singularValueDecompositionImpl53.getS();
        org.apache.commons.math.linear.RealMatrix realMatrix57 = singularValueDecompositionImpl53.getV();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.EigenDecompositionImpl eigenDecompositionImpl59 = new org.apache.commons.math.linear.EigenDecompositionImpl(realMatrix57, 15.430806348152418d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.NonSquareMatrixException; message: a 4x1 matrix was provided instead of a square matrix");
        } catch (org.apache.commons.math.linear.NonSquareMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realMatrix49);
        org.junit.Assert.assertNotNull(realMatrix51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 20.29778313018444d + "'", double54 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(realMatrix55);
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertNotNull(realMatrix57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: new           #75
171: dup
172: invokespecial #76
175: astore        7
177: iconst_4
178: newarray       double
180: dup
181: iconst_0
182: dconst_1
183: dastore
184: dup
185: iconst_1
186: ldc2_w        #77
189: dastore
190: dup
191: iconst_2
192: ldc2_w        #77
195: dastore
196: dup
197: iconst_3
198: ldc2_w        #79
201: dastore
202: astore        8
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_1
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #77
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #77
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #79
228: dastore
229: astore        9
231: iconst_4
232: newarray       double
234: dup
235: iconst_0
236: dconst_1
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #77
243: dastore
244: dup
245: iconst_2
246: ldc2_w        #77
249: dastore
250: dup
251: iconst_3
252: ldc2_w        #79
255: dastore
256: astore        10
258: iconst_4
259: newarray       double
261: dup
262: iconst_0
263: dconst_1
264: dastore
265: dup
266: iconst_1
267: ldc2_w        #77
270: dastore
271: dup
272: iconst_2
273: ldc2_w        #77
276: dastore
277: dup
278: iconst_3
279: ldc2_w        #79
282: dastore
283: astore        11
285: iconst_4
286: anewarray     #81
289: dup
290: iconst_0
291: aload         8
293: aastore
294: dup
295: iconst_1
296: aload         9
298: aastore
299: dup
300: iconst_2
301: aload         10
303: aastore
304: dup
305: iconst_3
306: aload         11
308: aastore
309: astore        12
311: aload         7
313: aload         12
315: putfield      #82
318: aload         7
320: invokevirtual #83
323: istore        13
325: aload         7
327: iconst_0
328: invokevirtual #84
331: astore        14
333: aload_1
334: aload         7
336: invokevirtual #85
339: astore        15
341: aload         7
343: dconst_0
344: invokevirtual #86
347: astore        16
349: new           #23
352: dup
353: aload         16
355: bipush        52
357: invokespecial #24
360: astore        17
362: aload         17
364: invokevirtual #52
367: dstore        18
369: aload         17
371: invokevirtual #42
374: astore        20
376: aload         17
378: invokevirtual #42
381: astore        21
383: aload         17
385: invokevirtual #50
388: astore        22
390: new           #94
393: dup
394: aload         22
396: ldc2_w        #180
399: invokespecial #95
402: astore        23
404: ldc           #182
406: invokestatic  #27
409: goto          414
412: astore        23
414: aload_2
415: invokestatic  #29
418: aload_2
419: invokestatic  #38
422: ldc           #100
424: invokestatic  #40
427: aload_3
428: invokestatic  #29
431: aload_3
432: invokestatic  #38
435: ldc           #100
437: invokestatic  #40
440: aload         4
442: invokestatic  #29
445: aload         4
447: invokestatic  #38
450: ldc           #100
452: invokestatic  #40
455: aload         5
457: invokestatic  #29
460: aload         5
462: invokestatic  #38
465: ldc           #100
467: invokestatic  #40
470: aload         6
472: invokestatic  #29
475: aload         8
477: invokestatic  #29
480: aload         8
482: invokestatic  #38
485: ldc           #100
487: invokestatic  #40
490: aload         9
492: invokestatic  #29
495: aload         9
497: invokestatic  #38
500: ldc           #100
502: invokestatic  #40
505: aload         10
507: invokestatic  #29
510: aload         10
512: invokestatic  #38
515: ldc           #100
517: invokestatic  #40
520: aload         11
522: invokestatic  #29
525: aload         11
527: invokestatic  #38
530: ldc           #100
532: invokestatic  #40
535: aload         12
537: invokestatic  #29
540: new           #30
543: dup
544: invokespecial #31
547: ldc           #32
549: invokevirtual #33
552: iload         13
554: invokevirtual #101
557: ldc           #35
559: invokevirtual #33
562: iconst_1
563: invokevirtual #101
566: ldc           #32
568: invokevirtual #33
571: invokevirtual #36
574: iload         13
576: iconst_1
577: if_icmpne     584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #37
588: aload         14
590: invokestatic  #29
593: aload         15
595: invokestatic  #29
598: aload         16
600: invokestatic  #29
603: new           #30
606: dup
607: invokespecial #31
610: ldc           #32
612: invokevirtual #33
615: dload         18
617: invokevirtual #34
620: ldc           #35
622: invokevirtual #33
625: ldc2_w        #106
628: invokevirtual #34
631: ldc           #32
633: invokevirtual #33
636: invokevirtual #36
639: dload         18
641: ldc2_w        #106
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #37
656: aload         20
658: invokestatic  #29
661: aload         21
663: invokestatic  #29
666: aload         22
668: invokestatic  #29
671: return
Exception table:
from    to  target type
390   409   412   Class org/apache/commons/math/linear/NonSquareMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test39
Start line: 2443
End line: 2532
Method source code: 
    public void test39() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test39");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray5 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray10 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray15 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray20 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray21 = new double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        array2DRowRealMatrix0.data = doubleArray21;
        boolean boolean23 = array2DRowRealMatrix0.isSingular();
        org.apache.commons.math.linear.RealVector realVector25 = array2DRowRealMatrix0.getColumnVector(0);
        double[] doubleArray27 = array2DRowRealMatrix0.getRow(2);
        org.apache.commons.math.linear.RealMatrix realMatrix29 = array2DRowRealMatrix0.scalarMultiply(3.594375391998704E-41d);
        java.lang.String str30 = array2DRowRealMatrix0.toString();
        double double31 = array2DRowRealMatrix0.getDeterminant();
        double double32 = array2DRowRealMatrix0.getFrobeniusNorm();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix33 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray38 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray43 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray48 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray53 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray54 = new double[][] { doubleArray38, doubleArray43, doubleArray48, doubleArray53 };
        array2DRowRealMatrix33.data = doubleArray54;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix56 = new org.apache.commons.math.linear.Array2DRowRealMatrix();
        double[] doubleArray61 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray66 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray71 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[] doubleArray76 = new double[] { 1, (-1.0d), (-1.0f), (short) 10 };
        double[][] doubleArray77 = new double[][] { doubleArray61, doubleArray66, doubleArray71, doubleArray76 };
        array2DRowRealMatrix56.data = doubleArray77;
        boolean boolean79 = array2DRowRealMatrix56.isSingular();
        org.apache.commons.math.linear.RealVector realVector81 = array2DRowRealMatrix56.getColumnVector(0);
        org.apache.commons.math.linear.RealMatrix realMatrix82 = array2DRowRealMatrix33.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix56);
        org.apache.commons.math.linear.RealMatrix realMatrix84 = array2DRowRealMatrix56.scalarAdd(0.0d);
        org.apache.commons.math.linear.SingularValueDecompositionImpl singularValueDecompositionImpl86 = new org.apache.commons.math.linear.SingularValueDecompositionImpl(realMatrix84, 52);
        double double87 = singularValueDecompositionImpl86.getConditionNumber();
        org.apache.commons.math.linear.RealMatrix realMatrix88 = singularValueDecompositionImpl86.getVT();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix89 = array2DRowRealMatrix0.multiply(realMatrix88);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Array2DRowRealMatrix{{1.0,-1.0,-1.0,10.0},{1.0,-1.0,-1.0,10.0},{1.0,-1.0,-1.0,10.0},{1.0,-1.0,-1.0,10.0}}" + "'", str30, "Array2DRowRealMatrix{{1.0,-1.0,-1.0,10.0},{1.0,-1.0,-1.0,10.0},{1.0,-1.0,-1.0,10.0},{1.0,-1.0,-1.0,10.0}}");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 20.29778313018444d + "'", double32 == 20.29778313018444d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(realMatrix82);
        org.junit.Assert.assertNotNull(realMatrix84);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(realMatrix88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #75
27: dup
28: invokespecial #76
31: astore_1
32: iconst_4
33: newarray       double
35: dup
36: iconst_0
37: dconst_1
38: dastore
39: dup
40: iconst_1
41: ldc2_w        #77
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #77
50: dastore
51: dup
52: iconst_3
53: ldc2_w        #79
56: dastore
57: astore_2
58: iconst_4
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #77
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #77
76: dastore
77: dup
78: iconst_3
79: ldc2_w        #79
82: dastore
83: astore_3
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #77
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #77
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #79
108: dastore
109: astore        4
111: iconst_4
112: newarray       double
114: dup
115: iconst_0
116: dconst_1
117: dastore
118: dup
119: iconst_1
120: ldc2_w        #77
123: dastore
124: dup
125: iconst_2
126: ldc2_w        #77
129: dastore
130: dup
131: iconst_3
132: ldc2_w        #79
135: dastore
136: astore        5
138: iconst_4
139: anewarray     #81
142: dup
143: iconst_0
144: aload_2
145: aastore
146: dup
147: iconst_1
148: aload_3
149: aastore
150: dup
151: iconst_2
152: aload         4
154: aastore
155: dup
156: iconst_3
157: aload         5
159: aastore
160: astore        6
162: aload_1
163: aload         6
165: putfield      #82
168: aload_1
169: invokevirtual #83
172: istore        7
174: aload_1
175: iconst_0
176: invokevirtual #84
179: astore        8
181: aload_1
182: iconst_2
183: invokevirtual #136
186: astore        9
188: aload_1
189: ldc2_w        #184
192: invokevirtual #186
195: astore        10
197: aload_1
198: invokevirtual #187
201: astore        11
203: aload_1
204: invokevirtual #188
207: dstore        12
209: aload_1
210: invokevirtual #149
213: dstore        14
215: new           #75
218: dup
219: invokespecial #76
222: astore        16
224: iconst_4
225: newarray       double
227: dup
228: iconst_0
229: dconst_1
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #77
236: dastore
237: dup
238: iconst_2
239: ldc2_w        #77
242: dastore
243: dup
244: iconst_3
245: ldc2_w        #79
248: dastore
249: astore        17
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: dconst_1
257: dastore
258: dup
259: iconst_1
260: ldc2_w        #77
263: dastore
264: dup
265: iconst_2
266: ldc2_w        #77
269: dastore
270: dup
271: iconst_3
272: ldc2_w        #79
275: dastore
276: astore        18
278: iconst_4
279: newarray       double
281: dup
282: iconst_0
283: dconst_1
284: dastore
285: dup
286: iconst_1
287: ldc2_w        #77
290: dastore
291: dup
292: iconst_2
293: ldc2_w        #77
296: dastore
297: dup
298: iconst_3
299: ldc2_w        #79
302: dastore
303: astore        19
305: iconst_4
306: newarray       double
308: dup
309: iconst_0
310: dconst_1
311: dastore
312: dup
313: iconst_1
314: ldc2_w        #77
317: dastore
318: dup
319: iconst_2
320: ldc2_w        #77
323: dastore
324: dup
325: iconst_3
326: ldc2_w        #79
329: dastore
330: astore        20
332: iconst_4
333: anewarray     #81
336: dup
337: iconst_0
338: aload         17
340: aastore
341: dup
342: iconst_1
343: aload         18
345: aastore
346: dup
347: iconst_2
348: aload         19
350: aastore
351: dup
352: iconst_3
353: aload         20
355: aastore
356: astore        21
358: aload         16
360: aload         21
362: putfield      #82
365: new           #75
368: dup
369: invokespecial #76
372: astore        22
374: iconst_4
375: newarray       double
377: dup
378: iconst_0
379: dconst_1
380: dastore
381: dup
382: iconst_1
383: ldc2_w        #77
386: dastore
387: dup
388: iconst_2
389: ldc2_w        #77
392: dastore
393: dup
394: iconst_3
395: ldc2_w        #79
398: dastore
399: astore        23
401: iconst_4
402: newarray       double
404: dup
405: iconst_0
406: dconst_1
407: dastore
408: dup
409: iconst_1
410: ldc2_w        #77
413: dastore
414: dup
415: iconst_2
416: ldc2_w        #77
419: dastore
420: dup
421: iconst_3
422: ldc2_w        #79
425: dastore
426: astore        24
428: iconst_4
429: newarray       double
431: dup
432: iconst_0
433: dconst_1
434: dastore
435: dup
436: iconst_1
437: ldc2_w        #77
440: dastore
441: dup
442: iconst_2
443: ldc2_w        #77
446: dastore
447: dup
448: iconst_3
449: ldc2_w        #79
452: dastore
453: astore        25
455: iconst_4
456: newarray       double
458: dup
459: iconst_0
460: dconst_1
461: dastore
462: dup
463: iconst_1
464: ldc2_w        #77
467: dastore
468: dup
469: iconst_2
470: ldc2_w        #77
473: dastore
474: dup
475: iconst_3
476: ldc2_w        #79
479: dastore
480: astore        26
482: iconst_4
483: anewarray     #81
486: dup
487: iconst_0
488: aload         23
490: aastore
491: dup
492: iconst_1
493: aload         24
495: aastore
496: dup
497: iconst_2
498: aload         25
500: aastore
501: dup
502: iconst_3
503: aload         26
505: aastore
506: astore        27
508: aload         22
510: aload         27
512: putfield      #82
515: aload         22
517: invokevirtual #83
520: istore        28
522: aload         22
524: iconst_0
525: invokevirtual #84
528: astore        29
530: aload         16
532: aload         22
534: invokevirtual #85
537: astore        30
539: aload         22
541: dconst_0
542: invokevirtual #86
545: astore        31
547: new           #23
550: dup
551: aload         31
553: bipush        52
555: invokespecial #24
558: astore        32
560: aload         32
562: invokevirtual #69
565: dstore        33
567: aload         32
569: invokevirtual #104
572: astore        35
574: aload_1
575: aload         35
577: invokevirtual #189
580: astore        36
582: ldc           #43
584: invokestatic  #27
587: goto          632
590: astore        36
592: aload         36
594: invokevirtual #45
597: invokevirtual #46
600: ifne          632
603: new           #30
606: dup
607: invokespecial #31
610: ldc           #47
612: invokevirtual #33
615: aload         36
617: invokevirtual #45
620: invokevirtual #48
623: invokevirtual #33
626: invokevirtual #36
629: invokestatic  #27
632: aload_2
633: invokestatic  #29
636: aload_2
637: invokestatic  #38
640: ldc           #100
642: invokestatic  #40
645: aload_3
646: invokestatic  #29
649: aload_3
650: invokestatic  #38
653: ldc           #100
655: invokestatic  #40
658: aload         4
660: invokestatic  #29
663: aload         4
665: invokestatic  #38
668: ldc           #100
670: invokestatic  #40
673: aload         5
675: invokestatic  #29
678: aload         5
680: invokestatic  #38
683: ldc           #100
685: invokestatic  #40
688: aload         6
690: invokestatic  #29
693: new           #30
696: dup
697: invokespecial #31
700: ldc           #32
702: invokevirtual #33
705: iload         7
707: invokevirtual #101
710: ldc           #35
712: invokevirtual #33
715: iconst_1
716: invokevirtual #101
719: ldc           #32
721: invokevirtual #33
724: invokevirtual #36
727: iload         7
729: iconst_1
730: if_icmpne     737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #37
741: aload         8
743: invokestatic  #29
746: aload         9
748: invokestatic  #29
751: aload         9
753: invokestatic  #38
756: ldc           #100
758: invokestatic  #40
761: aload         10
763: invokestatic  #29
766: new           #30
769: dup
770: invokespecial #31
773: ldc           #32
775: invokevirtual #33
778: aload         11
780: invokevirtual #33
783: ldc           #190
785: invokevirtual #33
788: invokevirtual #36
791: aload         11
793: ldc           #191
795: invokestatic  #192
798: new           #30
801: dup
802: invokespecial #31
805: ldc           #32
807: invokevirtual #33
810: dload         12
812: invokevirtual #34
815: ldc           #35
817: invokevirtual #33
820: dconst_0
821: invokevirtual #34
824: ldc           #32
826: invokevirtual #33
829: invokevirtual #36
832: dload         12
834: dconst_0
835: dcmpl
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #37
847: new           #30
850: dup
851: invokespecial #31
854: ldc           #32
856: invokevirtual #33
859: dload         14
861: invokevirtual #34
864: ldc           #35
866: invokevirtual #33
869: ldc2_w        #106
872: invokevirtual #34
875: ldc           #32
877: invokevirtual #33
880: invokevirtual #36
883: dload         14
885: ldc2_w        #106
888: dcmpl
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #37
900: aload         17
902: invokestatic  #29
905: aload         17
907: invokestatic  #38
910: ldc           #100
912: invokestatic  #40
915: aload         18
917: invokestatic  #29
920: aload         18
922: invokestatic  #38
925: ldc           #100
927: invokestatic  #40
930: aload         19
932: invokestatic  #29
935: aload         19
937: invokestatic  #38
940: ldc           #100
942: invokestatic  #40
945: aload         20
947: invokestatic  #29
950: aload         20
952: invokestatic  #38
955: ldc           #100
957: invokestatic  #40
960: aload         21
962: invokestatic  #29
965: aload         23
967: invokestatic  #29
970: aload         23
972: invokestatic  #38
975: ldc           #100
977: invokestatic  #40
980: aload         24
982: invokestatic  #29
985: aload         24
987: invokestatic  #38
990: ldc           #100
992: invokestatic  #40
995: aload         25
997: invokestatic  #29
1000: aload         25
1002: invokestatic  #38
1005: ldc           #100
1007: invokestatic  #40
1010: aload         26
1012: invokestatic  #29
1015: aload         26
1017: invokestatic  #38
1020: ldc           #100
1022: invokestatic  #40
1025: aload         27
1027: invokestatic  #29
1030: new           #30
1033: dup
1034: invokespecial #31
1037: ldc           #32
1039: invokevirtual #33
1042: iload         28
1044: invokevirtual #101
1047: ldc           #35
1049: invokevirtual #33
1052: iconst_1
1053: invokevirtual #101
1056: ldc           #32
1058: invokevirtual #33
1061: invokevirtual #36
1064: iload         28
1066: iconst_1
1067: if_icmpne     1074
1070: iconst_1
1071: goto          1075
1074: iconst_0
1075: invokestatic  #37
1078: aload         29
1080: invokestatic  #29
1083: aload         30
1085: invokestatic  #29
1088: aload         31
1090: invokestatic  #29
1093: new           #30
1096: dup
1097: invokespecial #31
1100: ldc           #32
1102: invokevirtual #33
1105: dload         33
1107: invokevirtual #34
1110: ldc           #35
1112: invokevirtual #33
1115: dconst_1
1116: invokevirtual #34
1119: ldc           #32
1121: invokevirtual #33
1124: invokevirtual #36
1127: dload         33
1129: dconst_1
1130: dcmpl
1131: ifne          1138
1134: iconst_1
1135: goto          1139
1138: iconst_0
1139: invokestatic  #37
1142: aload         35
1144: invokestatic  #29
1147: return
Exception table:
from    to  target type
574   587   590   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test00
Start line: 23
End line: 39
Method source code: 
  public void test00()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double[][] doubleArray0 = new double[5][3];
      array2DRowRealMatrix0.data = doubleArray0;
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(array2DRowRealMatrix0);
      // Undeclared exception!
      try { 
        singularValueDecompositionImpl0.getConditionNumber();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.linear.SingularValueDecompositionImpl", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_5
9: iconst_3
10: multianewarray #4,  2
14: astore_2
15: aload_1
16: aload_2
17: putfield      #5
20: new           #6
23: dup
24: aload_1
25: invokespecial #7
28: astore_3
29: aload_3
30: invokevirtual #8
33: pop2
34: ldc           #9
36: invokestatic  #10
39: goto          51
42: astore        4
44: ldc           #12
46: aload         4
48: invokestatic  #13
51: return
Exception table:
from    to  target type
29    39    42   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test01
Start line: 42
End line: 48
Method source code: 
  public void test01()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(31, 31);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      double[] doubleArray0 = singularValueDecompositionImpl0.getSingularValues();
      assertEquals(0, doubleArray0.length);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: bipush        31
11: bipush        31
13: invokevirtual #14
16: astore_2
17: new           #6
20: dup
21: aload_2
22: invokespecial #7
25: astore_3
26: aload_3
27: invokevirtual #15
30: astore        4
32: lconst_0
33: aload         4
35: arraylength
36: i2l
37: invokestatic  #16
40: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test02
Start line: 51
End line: 60
Method source code: 
  public void test02()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = Double.valueOf((-1.0));
      doubleArray0[0] = double0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      double double1 = singularValueDecompositionImpl0.getNorm();
      assertEquals(1.0, double1, 0.01);
  }
Method byte code: 
0: iconst_1
1: anewarray     #17
4: astore_1
5: ldc2_w        #18
8: invokestatic  #20
11: astore_2
12: aload_1
13: iconst_0
14: aload_2
15: aastore
16: new           #21
19: dup
20: aload_1
21: ldc2_w        #18
24: invokespecial #22
27: astore_3
28: aload_3
29: aload_3
30: invokevirtual #23
33: astore        4
35: new           #6
38: dup
39: aload         4
41: invokespecial #7
44: astore        5
46: aload         5
48: invokevirtual #24
51: dstore        6
53: dconst_1
54: dload         6
56: ldc2_w        #25
59: invokestatic  #27
62: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test03
Start line: 63
End line: 75
Method source code: 
  public void test03()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(2, 2);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) arrayRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      RealMatrix realMatrix1 = singularValueDecompositionImpl0.getU();
      assertNotNull(realMatrix1);
      
      DecompositionSolver decompositionSolver0 = singularValueDecompositionImpl0.getSolver();
      assertEquals(1, singularValueDecompositionImpl0.getRank());
      assertFalse(decompositionSolver0.isNonSingular());
      assertEquals(8.0, singularValueDecompositionImpl0.getNorm(), 0.01);
  }
Method byte code: 
0: new           #28
3: dup
4: iconst_2
5: ldc2_w        #29
8: invokespecial #31
11: astore_1
12: new           #21
15: dup
16: aload_1
17: invokespecial #32
20: astore_2
21: aload_2
22: aload_1
23: invokevirtual #23
26: astore_3
27: new           #6
30: dup
31: aload_3
32: invokespecial #7
35: astore        4
37: aload         4
39: invokevirtual #33
42: astore        5
44: aload         5
46: invokestatic  #34
49: aload         4
51: invokevirtual #35
54: astore        6
56: lconst_1
57: aload         4
59: invokevirtual #36
62: i2l
63: invokestatic  #16
66: aload         6
68: invokeinterface #37,  1
73: invokestatic  #38
76: ldc2_w        #39
79: aload         4
81: invokevirtual #24
84: ldc2_w        #25
87: invokestatic  #27
90: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test04
Start line: 78
End line: 87
Method source code: 
  public void test04()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(2, 2);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) arrayRealVector1);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      singularValueDecompositionImpl0.getSolver();
      assertEquals(1, singularValueDecompositionImpl0.getRank());
      assertEquals(11.313708498984761, singularValueDecompositionImpl0.getNorm(), 0.01);
  }
Method byte code: 
0: new           #28
3: dup
4: iconst_2
5: ldc2_w        #29
8: invokespecial #31
11: astore_1
12: new           #28
15: dup
16: aload_1
17: aload_1
18: invokespecial #41
21: astore_2
22: new           #21
25: dup
26: aload_1
27: invokespecial #32
30: astore_3
31: aload_3
32: aload_2
33: invokevirtual #23
36: astore        4
38: new           #6
41: dup
42: aload         4
44: invokespecial #7
47: astore        5
49: aload         5
51: invokevirtual #35
54: pop
55: lconst_1
56: aload         5
58: invokevirtual #36
61: i2l
62: invokestatic  #16
65: ldc2_w        #42
68: aload         5
70: invokevirtual #24
73: ldc2_w        #25
76: invokestatic  #27
79: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test05
Start line: 90
End line: 99
Method source code: 
  public void test05()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = Double.valueOf((-1.0));
      doubleArray0[0] = double0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      DecompositionSolver decompositionSolver0 = singularValueDecompositionImpl0.getSolver();
      assertTrue(decompositionSolver0.isNonSingular());
  }
Method byte code: 
0: iconst_1
1: anewarray     #17
4: astore_1
5: ldc2_w        #18
8: invokestatic  #20
11: astore_2
12: aload_1
13: iconst_0
14: aload_2
15: aastore
16: new           #21
19: dup
20: aload_1
21: ldc2_w        #18
24: invokespecial #22
27: astore_3
28: aload_3
29: aload_3
30: invokevirtual #23
33: astore        4
35: new           #6
38: dup
39: aload         4
41: invokespecial #7
44: astore        5
46: aload         5
48: invokevirtual #35
51: astore        6
53: aload         6
55: invokeinterface #37,  1
60: invokestatic  #44
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test06
Start line: 102
End line: 111
Method source code: 
  public void test06()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(2, 2);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) arrayRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      singularValueDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver0 = singularValueDecompositionImpl0.getSolver();
      assertFalse(decompositionSolver0.isNonSingular());
      assertEquals(1, singularValueDecompositionImpl0.getRank());
  }
Method byte code: 
0: new           #28
3: dup
4: iconst_2
5: ldc2_w        #29
8: invokespecial #31
11: astore_1
12: new           #21
15: dup
16: aload_1
17: invokespecial #32
20: astore_2
21: aload_2
22: aload_1
23: invokevirtual #23
26: astore_3
27: new           #6
30: dup
31: aload_3
32: invokespecial #7
35: astore        4
37: aload         4
39: invokevirtual #35
42: pop
43: aload         4
45: invokevirtual #35
48: astore        5
50: aload         5
52: invokeinterface #37,  1
57: invokestatic  #38
60: lconst_1
61: aload         4
63: invokevirtual #36
66: i2l
67: invokestatic  #16
70: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test07
Start line: 114
End line: 127
Method source code: 
  public void test07()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double[][] doubleArray0 = new double[12][3];
      double[] doubleArray1 = new double[5];
      doubleArray1[2] = 3952.07306294;
      doubleArray0[0] = doubleArray1;
      array2DRowRealMatrix0.data = doubleArray0;
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(array2DRowRealMatrix0);
      singularValueDecompositionImpl0.getS();
      RealMatrix realMatrix0 = singularValueDecompositionImpl0.getS();
      assertNotNull(realMatrix0);
      assertEquals(3952.07306294, singularValueDecompositionImpl0.getNorm(), 0.01);
      assertEquals(1, realMatrix0.getColumnDimension());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: bipush        12
10: iconst_3
11: multianewarray #4,  2
15: astore_2
16: iconst_5
17: newarray       double
19: astore_3
20: aload_3
21: iconst_2
22: ldc2_w        #45
25: dastore
26: aload_2
27: iconst_0
28: aload_3
29: aastore
30: aload_1
31: aload_2
32: putfield      #5
35: new           #6
38: dup
39: aload_1
40: invokespecial #7
43: astore        4
45: aload         4
47: invokevirtual #47
50: pop
51: aload         4
53: invokevirtual #47
56: astore        5
58: aload         5
60: invokestatic  #34
63: ldc2_w        #45
66: aload         4
68: invokevirtual #24
71: ldc2_w        #25
74: invokestatic  #27
77: lconst_1
78: aload         5
80: invokeinterface #48,  1
85: i2l
86: invokestatic  #16
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test08
Start line: 130
End line: 141
Method source code: 
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 2;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) arrayRealVector1);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      DecompositionSolver decompositionSolver0 = singularValueDecompositionImpl0.getSolver();
      assertFalse(decompositionSolver0.isNonSingular());
      assertEquals(1, singularValueDecompositionImpl0.getRank());
  }
Method byte code: 
0: iconst_1
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #29
9: dastore
10: new           #28
13: dup
14: aload_1
15: invokespecial #49
18: astore_2
19: new           #28
22: dup
23: aload_2
24: aload_2
25: invokespecial #41
28: astore_3
29: new           #21
32: dup
33: aload_2
34: invokespecial #32
37: astore        4
39: aload         4
41: aload_3
42: invokevirtual #23
45: astore        5
47: new           #6
50: dup
51: aload         5
53: invokespecial #7
56: astore        6
58: aload         6
60: invokevirtual #35
63: astore        7
65: aload         7
67: invokeinterface #37,  1
72: invokestatic  #38
75: lconst_1
76: aload         6
78: invokevirtual #36
81: i2l
82: invokestatic  #16
85: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test09
Start line: 144
End line: 154
Method source code: 
  public void test09()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = Double.valueOf((-1.0));
      doubleArray0[0] = double0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      RealMatrix realMatrix1 = singularValueDecompositionImpl0.getCovariance((-1.0));
      RealMatrix realMatrix2 = singularValueDecompositionImpl0.getCovariance((-1.0));
      assertNotSame(realMatrix2, realMatrix1);
  }
Method byte code: 
0: iconst_1
1: anewarray     #17
4: astore_1
5: ldc2_w        #18
8: invokestatic  #20
11: astore_2
12: aload_1
13: iconst_0
14: aload_2
15: aastore
16: new           #21
19: dup
20: aload_1
21: ldc2_w        #18
24: invokespecial #22
27: astore_3
28: aload_3
29: aload_3
30: invokevirtual #23
33: astore        4
35: new           #6
38: dup
39: aload         4
41: invokespecial #7
44: astore        5
46: aload         5
48: ldc2_w        #18
51: invokevirtual #50
54: astore        6
56: aload         5
58: ldc2_w        #18
61: invokevirtual #50
64: astore        7
66: aload         7
68: aload         6
70: invokestatic  #51
73: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test10
Start line: 157
End line: 175
Method source code: 
  public void test10()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = Double.valueOf(0.8773652529637308);
      doubleArray0[0] = double0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.8773652529637308);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      // Undeclared exception!
      try { 
        singularValueDecompositionImpl0.getCovariance((double) doubleArray0[0]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cutoff singular value is 0.877, should be at most 0.77
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: iconst_1
1: anewarray     #17
4: astore_1
5: ldc2_w        #52
8: invokestatic  #20
11: astore_2
12: aload_1
13: iconst_0
14: aload_2
15: aastore
16: new           #21
19: dup
20: aload_1
21: ldc2_w        #52
24: invokespecial #22
27: astore_3
28: aload_3
29: aload_3
30: invokevirtual #23
33: astore        4
35: new           #6
38: dup
39: aload         4
41: invokespecial #7
44: astore        5
46: aload         5
48: aload_1
49: iconst_0
50: aaload
51: invokevirtual #54
54: invokevirtual #50
57: pop
58: ldc           #55
60: invokestatic  #10
63: goto          75
66: astore        6
68: ldc           #57
70: aload         6
72: invokestatic  #13
75: return
Exception table:
from    to  target type
46    63    66   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImpl_ESTest.class
Class name: SingularValueDecompositionImpl_ESTest
Method name: test11
Start line: 178
End line: 188
Method source code: 
  public void test11()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = Double.valueOf((-1.0));
      doubleArray0[0] = double0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
      openMapRealVector0.mapLogToSelf();
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
      SingularValueDecompositionImpl singularValueDecompositionImpl0 = new SingularValueDecompositionImpl(realMatrix0);
      DecompositionSolver decompositionSolver0 = singularValueDecompositionImpl0.getSolver();
      assertFalse(decompositionSolver0.isNonSingular());
  }
Method byte code: 
0: iconst_1
1: anewarray     #17
4: astore_1
5: ldc2_w        #18
8: invokestatic  #20
11: astore_2
12: aload_1
13: iconst_0
14: aload_2
15: aastore
16: new           #21
19: dup
20: aload_1
21: ldc2_w        #18
24: invokespecial #22
27: astore_3
28: aload_3
29: invokevirtual #58
32: pop
33: aload_3
34: aload_3
35: invokevirtual #23
38: astore        4
40: new           #6
43: dup
44: aload         4
46: invokespecial #7
49: astore        5
51: aload         5
53: invokevirtual #35
56: astore        6
58: aload         6
60: invokeinterface #37,  1
65: invokestatic  #38
68: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testSolveDimensionErrors
Start line: 33
End line: 61
Method source code: 
    public void testSolveDimensionErrors() {
        DecompositionSolver solver =
            new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare)).getSolver();
        RealMatrix b = MatrixUtils.createRealMatrix(new double[3][2]);
        try {
            solver.solve(b);
            Assert.fail("an exception should have been thrown");
        } catch (IllegalArgumentException iae) {
            // expected behavior
        } catch (Exception e) {
            Assert.fail("wrong exception caught");
        }
        try {
            solver.solve(b.getColumn(0));
            Assert.fail("an exception should have been thrown");
        } catch (IllegalArgumentException iae) {
            // expected behavior
        } catch (Exception e) {
            Assert.fail("wrong exception caught");
        }
        try {
            solver.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));
            Assert.fail("an exception should have been thrown");
        } catch (IllegalArgumentException iae) {
            // expected behavior
        } catch (Exception e) {
            Assert.fail("wrong exception caught");
        }
    }
Method byte code: 
0: new           #10
3: dup
4: aload_0
5: getfield      #9
8: invokestatic  #11
11: invokespecial #12
14: invokevirtual #13
17: astore_1
18: iconst_3
19: iconst_2
20: multianewarray #14,  2
24: invokestatic  #11
27: astore_2
28: aload_1
29: aload_2
30: invokeinterface #15,  2
35: pop
36: ldc           #16
38: invokestatic  #17
41: goto          54
44: astore_3
45: goto          54
48: astore_3
49: ldc           #20
51: invokestatic  #17
54: aload_1
55: aload_2
56: iconst_0
57: invokeinterface #21,  2
62: invokeinterface #22,  2
67: pop
68: ldc           #16
70: invokestatic  #17
73: goto          86
76: astore_3
77: goto          86
80: astore_3
81: ldc           #20
83: invokestatic  #17
86: aload_1
87: new           #23
90: dup
91: aload_2
92: iconst_0
93: invokeinterface #21,  2
98: invokespecial #24
101: invokeinterface #25,  2
106: pop
107: ldc           #16
109: invokestatic  #17
112: goto          125
115: astore_3
116: goto          125
119: astore_3
120: ldc           #20
122: invokestatic  #17
125: return
Exception table:
from    to  target type
28    41    44   Class java/lang/IllegalArgumentException
28    41    48   Class java/lang/Exception
54    73    76   Class java/lang/IllegalArgumentException
54    73    80   Class java/lang/Exception
86   112   115   Class java/lang/IllegalArgumentException
86   112   119   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testLeastSquareSolve
Start line: 65
End line: 89
Method source code: 
    public void testLeastSquareSolve() {
        RealMatrix m =
            MatrixUtils.createRealMatrix(new double[][] {
                                   { 1.0, 0.0 },
                                   { 0.0, 0.0 }
                               });
        DecompositionSolver solver = new SingularValueDecompositionImpl(m).getSolver();
        RealMatrix b = MatrixUtils.createRealMatrix(new double[][] {
            { 11, 12 }, { 21, 22 } 
        });
        RealMatrix xMatrix = solver.solve(b);
        Assert.assertEquals(11, xMatrix.getEntry(0, 0), 1.0e-15);
        Assert.assertEquals(12, xMatrix.getEntry(0, 1), 1.0e-15);
        Assert.assertEquals(0, xMatrix.getEntry(1, 0), 1.0e-15);
        Assert.assertEquals(0, xMatrix.getEntry(1, 1), 1.0e-15);
        double[] xCol = solver.solve(b.getColumn(0));
        Assert.assertEquals(11, xCol[0], 1.0e-15);
        Assert.assertEquals(0, xCol[1], 1.0e-15);
        RealVector xColVec = solver.solve(b.getColumnVector(0));
        Assert.assertEquals(11, xColVec.getEntry(0), 1.0e-15);
        Assert.assertEquals(0, xColVec.getEntry(1), 1.0e-15);
        RealVector xColOtherVec = solver.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));
        Assert.assertEquals(11, xColOtherVec.getEntry(0), 1.0e-15);
        Assert.assertEquals(0, xColOtherVec.getEntry(1), 1.0e-15);
    }
Method byte code: 
0: iconst_2
1: anewarray     #2
4: dup
5: iconst_0
6: iconst_2
7: newarray       double
9: dup
10: iconst_0
11: dconst_1
12: dastore
13: dup
14: iconst_1
15: dconst_0
16: dastore
17: aastore
18: dup
19: iconst_1
20: iconst_2
21: newarray       double
23: dup
24: iconst_0
25: dconst_0
26: dastore
27: dup
28: iconst_1
29: dconst_0
30: dastore
31: aastore
32: invokestatic  #11
35: astore_1
36: new           #10
39: dup
40: aload_1
41: invokespecial #12
44: invokevirtual #13
47: astore_2
48: iconst_2
49: anewarray     #2
52: dup
53: iconst_0
54: iconst_2
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #26
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #28
68: dastore
69: aastore
70: dup
71: iconst_1
72: iconst_2
73: newarray       double
75: dup
76: iconst_0
77: ldc2_w        #30
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #32
86: dastore
87: aastore
88: invokestatic  #11
91: astore_3
92: aload_2
93: aload_3
94: invokeinterface #15,  2
99: astore        4
101: ldc2_w        #26
104: aload         4
106: iconst_0
107: iconst_0
108: invokeinterface #34,  3
113: ldc2_w        #35
116: invokestatic  #37
119: ldc2_w        #28
122: aload         4
124: iconst_0
125: iconst_1
126: invokeinterface #34,  3
131: ldc2_w        #35
134: invokestatic  #37
137: dconst_0
138: aload         4
140: iconst_1
141: iconst_0
142: invokeinterface #34,  3
147: ldc2_w        #35
150: invokestatic  #37
153: dconst_0
154: aload         4
156: iconst_1
157: iconst_1
158: invokeinterface #34,  3
163: ldc2_w        #35
166: invokestatic  #37
169: aload_2
170: aload_3
171: iconst_0
172: invokeinterface #21,  2
177: invokeinterface #22,  2
182: astore        5
184: ldc2_w        #26
187: aload         5
189: iconst_0
190: daload
191: ldc2_w        #35
194: invokestatic  #37
197: dconst_0
198: aload         5
200: iconst_1
201: daload
202: ldc2_w        #35
205: invokestatic  #37
208: aload_2
209: aload_3
210: iconst_0
211: invokeinterface #38,  2
216: invokeinterface #25,  2
221: astore        6
223: ldc2_w        #26
226: aload         6
228: iconst_0
229: invokeinterface #39,  2
234: ldc2_w        #35
237: invokestatic  #37
240: dconst_0
241: aload         6
243: iconst_1
244: invokeinterface #39,  2
249: ldc2_w        #35
252: invokestatic  #37
255: aload_2
256: new           #23
259: dup
260: aload_3
261: iconst_0
262: invokeinterface #21,  2
267: invokespecial #24
270: invokeinterface #25,  2
275: astore        7
277: ldc2_w        #26
280: aload         7
282: iconst_0
283: invokeinterface #39,  2
288: ldc2_w        #35
291: invokestatic  #37
294: dconst_0
295: aload         7
297: iconst_1
298: invokeinterface #39,  2
303: ldc2_w        #35
306: invokestatic  #37
309: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testSolve
Start line: 93
End line: 130
Method source code: 
    public void testSolve() {
        DecompositionSolver solver =
            new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare)).getSolver();
        RealMatrix b = MatrixUtils.createRealMatrix(new double[][] {
                { 1, 2, 3 }, { 0, -5, 1 }
        });
        RealMatrix xRef = MatrixUtils.createRealMatrix(new double[][] {
                { -8.0 / 25.0, -263.0 / 75.0, -29.0 / 75.0 },
                { 19.0 / 25.0,   78.0 / 25.0,  49.0 / 25.0 }
        });

        // using RealMatrix
        Assert.assertEquals(0, solver.solve(b).subtract(xRef).getNorm(), normTolerance);

        // using double[]
        for (int i = 0; i < b.getColumnDimension(); ++i) {
            Assert.assertEquals(0,
                         new ArrayRealVector(solver.solve(b.getColumn(i))).subtract(xRef.getColumnVector(i)).getNorm(),
                         1.0e-13);
        }

        // using Array2DRowRealMatrix
        for (int i = 0; i < b.getColumnDimension(); ++i) {
            Assert.assertEquals(0,
                         solver.solve(b.getColumnVector(i)).subtract(xRef.getColumnVector(i)).getNorm(),
                         1.0e-13);
        }

        // using RealMatrix with an alternate implementation
        for (int i = 0; i < b.getColumnDimension(); ++i) {
            ArrayRealVectorTest.RealVectorTestImpl v =
                new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(i));
            Assert.assertEquals(0,
                         solver.solve(v).subtract(xRef.getColumnVector(i)).getNorm(),
                         1.0e-13);
        }

    }
Method byte code: 
0: new           #10
3: dup
4: aload_0
5: getfield      #9
8: invokestatic  #11
11: invokespecial #12
14: invokevirtual #13
17: astore_1
18: iconst_3
19: iconst_2
20: multianewarray #14,  2
24: invokestatic  #11
27: astore_2
28: aload_1
29: aload_2
30: invokeinterface #15,  2
35: pop
36: ldc           #16
38: invokestatic  #17
41: goto          54
44: astore_3
45: goto          54
48: astore_3
49: ldc           #20
51: invokestatic  #17
54: aload_1
55: aload_2
56: iconst_0
57: invokeinterface #21,  2
62: invokeinterface #22,  2
67: pop
68: ldc           #16
70: invokestatic  #17
73: goto          86
76: astore_3
77: goto          86
80: astore_3
81: ldc           #20
83: invokestatic  #17
86: aload_1
87: new           #23
90: dup
91: aload_2
92: iconst_0
93: invokeinterface #21,  2
98: invokespecial #24
101: invokeinterface #25,  2
106: pop
107: ldc           #16
109: invokestatic  #17
112: goto          125
115: astore_3
116: goto          125
119: astore_3
120: ldc           #20
122: invokestatic  #17
125: return
Exception table:
from    to  target type
28    41    44   Class java/lang/IllegalArgumentException
28    41    48   Class java/lang/Exception
54    73    76   Class java/lang/IllegalArgumentException
54    73    80   Class java/lang/Exception
86   112   115   Class java/lang/IllegalArgumentException
86   112   119   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testConditionNumber
Start line: 134
End line: 138
Method source code: 
    public void testConditionNumber() {
        SingularValueDecompositionImpl svd =
            new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare));
        Assert.assertEquals(3.0, svd.getConditionNumber(), 1.0e-15);
    }
Method byte code: 
0: new           #10
3: dup
4: aload_0
5: getfield      #9
8: invokestatic  #11
11: invokespecial #12
14: astore_1
15: ldc2_w        #42
18: aload_1
19: invokevirtual #69
22: ldc2_w        #35
25: invokestatic  #37
28: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testTruncated
Start line: 141
End line: 164
Method source code: 
    public void testTruncated() {

        RealMatrix rm = new Array2DRowRealMatrix(new double[][] {
            { 1.0, 2.0, 3.0 }, { 2.0, 3.0, 4.0 }, { 3.0, 5.0, 7.0 }
        });
        double s439  = Math.sqrt(439.0);
        double[] reference = new double[] {
            Math.sqrt(3.0 * (21.0 + s439))
        };
        SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(rm, 1);

        // check we get the expected theoretical singular values
        double[] singularValues = svd.getSingularValues();
        Assert.assertEquals(reference.length, singularValues.length);
        for (int i = 0; i < reference.length; ++i) {
            Assert.assertEquals(reference[i], singularValues[i], 4.0e-13);
        }

        // check the truncated decomposition DON'T allows to recover the original matrix
        RealMatrix recomposed = svd.getU().multiply(svd.getS()).multiply(svd.getVT());
        Assert.assertTrue(recomposed.subtract(rm).getNorm() > 1.4);

    }
Method byte code: 
0: new           #70
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #40
22: dastore
23: dup
24: iconst_2
25: ldc2_w        #42
28: dastore
29: aastore
30: dup
31: iconst_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #40
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #42
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #71
52: dastore
53: aastore
54: dup
55: iconst_2
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: ldc2_w        #42
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #73
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #75
76: dastore
77: aastore
78: invokespecial #77
81: astore_1
82: ldc2_w        #78
85: invokestatic  #80
88: dstore_2
89: iconst_1
90: newarray       double
92: dup
93: iconst_0
94: ldc2_w        #42
97: ldc2_w        #30
100: dload_2
101: dadd
102: dmul
103: invokestatic  #80
106: dastore
107: astore        4
109: new           #10
112: dup
113: aload_1
114: iconst_1
115: invokespecial #81
118: astore        5
120: aload         5
122: invokeinterface #82,  1
127: astore        6
129: aload         4
131: arraylength
132: i2l
133: aload         6
135: arraylength
136: i2l
137: invokestatic  #83
140: iconst_0
141: istore        7
143: iload         7
145: aload         4
147: arraylength
148: if_icmpge     173
151: aload         4
153: iload         7
155: daload
156: aload         6
158: iload         7
160: daload
161: ldc2_w        #84
164: invokestatic  #37
167: iinc          7, 1
170: goto          143
173: aload         5
175: invokeinterface #86,  1
180: aload         5
182: invokeinterface #87,  1
187: invokeinterface #88,  2
192: aload         5
194: invokeinterface #89,  1
199: invokeinterface #88,  2
204: astore        7
206: aload         7
208: aload_1
209: invokeinterface #58,  2
214: invokeinterface #59,  1
219: ldc2_w        #90
222: dcmpl
223: ifle          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #92
234: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testMath320A
Start line: 167
End line: 208
Method source code: 
    public void testMath320A() {
        RealMatrix rm = new Array2DRowRealMatrix(new double[][] {
            { 1.0, 2.0, 3.0 }, { 2.0, 3.0, 4.0 }, { 3.0, 5.0, 7.0 }
        });
        double s439  = Math.sqrt(439.0);
        double[] reference = new double[] {
            Math.sqrt(3.0 * (21.0 + s439)), Math.sqrt(3.0 * (21.0 - s439))
        };
        SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(rm);

        // check we get the expected theoretical singular values
        double[] singularValues = svd.getSingularValues();
        Assert.assertEquals(reference.length, singularValues.length);
        for (int i = 0; i < reference.length; ++i) {
            Assert.assertEquals(reference[i], singularValues[i], 4.0e-13);
        }

        // check the decomposition allows to recover the original matrix
        RealMatrix recomposed = svd.getU().multiply(svd.getS()).multiply(svd.getVT());
        Assert.assertEquals(0.0, recomposed.subtract(rm).getNorm(), 5.0e-13);

        // check we can solve a singular system
        double[] b = new double[] { 5.0, 6.0, 7.0 };
        double[] resSVD = svd.getSolver().solve(b);
        Assert.assertEquals(rm.getColumnDimension(), resSVD.length);

        // check the solution really minimizes the residuals
        double svdMinResidual = residual(rm, resSVD, b);
        double epsilon = 2 * Math.ulp(svdMinResidual);
        double h = 0.1;
        int    k = 3;
        for (double d0 = -k * h; d0 <= k * h; d0 += h) {
            for (double d1 = -k * h ; d1 <= k * h; d1 += h) {
                for (double d2 = -k * h; d2 <= k * h; d2 += h) {
                    double[] x = new double[] { resSVD[0] + d0, resSVD[1] + d1, resSVD[2] + d2 };
                    Assert.assertTrue((residual(rm, x, b) - svdMinResidual) > -epsilon);
                }
            }
        }

    }
Method byte code: 
0: new           #70
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #40
22: dastore
23: dup
24: iconst_2
25: ldc2_w        #42
28: dastore
29: aastore
30: dup
31: iconst_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #40
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #42
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #71
52: dastore
53: aastore
54: dup
55: iconst_2
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: ldc2_w        #42
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #73
70: dastore
71: dup
72: iconst_2
73: ldc2_w        #75
76: dastore
77: aastore
78: invokespecial #77
81: astore_1
82: ldc2_w        #78
85: invokestatic  #80
88: dstore_2
89: iconst_2
90: newarray       double
92: dup
93: iconst_0
94: ldc2_w        #42
97: ldc2_w        #30
100: dload_2
101: dadd
102: dmul
103: invokestatic  #80
106: dastore
107: dup
108: iconst_1
109: ldc2_w        #42
112: ldc2_w        #30
115: dload_2
116: dsub
117: dmul
118: invokestatic  #80
121: dastore
122: astore        4
124: new           #10
127: dup
128: aload_1
129: invokespecial #12
132: astore        5
134: aload         5
136: invokeinterface #82,  1
141: astore        6
143: aload         4
145: arraylength
146: i2l
147: aload         6
149: arraylength
150: i2l
151: invokestatic  #83
154: iconst_0
155: istore        7
157: iload         7
159: aload         4
161: arraylength
162: if_icmpge     187
165: aload         4
167: iload         7
169: daload
170: aload         6
172: iload         7
174: daload
175: ldc2_w        #84
178: invokestatic  #37
181: iinc          7, 1
184: goto          157
187: aload         5
189: invokeinterface #86,  1
194: aload         5
196: invokeinterface #87,  1
201: invokeinterface #88,  2
206: aload         5
208: invokeinterface #89,  1
213: invokeinterface #88,  2
218: astore        7
220: dconst_0
221: aload         7
223: aload_1
224: invokeinterface #58,  2
229: invokeinterface #59,  1
234: ldc2_w        #93
237: invokestatic  #37
240: iconst_3
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #73
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #95
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #75
260: dastore
261: astore        8
263: aload         5
265: invokeinterface #97,  1
270: aload         8
272: invokeinterface #22,  2
277: astore        9
279: aload_1
280: invokeinterface #63,  1
285: i2l
286: aload         9
288: arraylength
289: i2l
290: invokestatic  #83
293: aload_0
294: aload_1
295: aload         9
297: aload         8
299: invokespecial #98
302: dstore        10
304: ldc2_w        #40
307: dload         10
309: invokestatic  #99
312: dmul
313: dstore        12
315: ldc2_w        #100
318: dstore        14
320: iconst_3
321: istore        16
323: iload         16
325: ineg
326: i2d
327: dload         14
329: dmul
330: dstore        17
332: dload         17
334: iload         16
336: i2d
337: dload         14
339: dmul
340: dcmpg
341: ifgt          478
344: iload         16
346: ineg
347: i2d
348: dload         14
350: dmul
351: dstore        19
353: dload         19
355: iload         16
357: i2d
358: dload         14
360: dmul
361: dcmpg
362: ifgt          468
365: iload         16
367: ineg
368: i2d
369: dload         14
371: dmul
372: dstore        21
374: dload         21
376: iload         16
378: i2d
379: dload         14
381: dmul
382: dcmpg
383: ifgt          458
386: iconst_3
387: newarray       double
389: dup
390: iconst_0
391: aload         9
393: iconst_0
394: daload
395: dload         17
397: dadd
398: dastore
399: dup
400: iconst_1
401: aload         9
403: iconst_1
404: daload
405: dload         19
407: dadd
408: dastore
409: dup
410: iconst_2
411: aload         9
413: iconst_2
414: daload
415: dload         21
417: dadd
418: dastore
419: astore        23
421: aload_0
422: aload_1
423: aload         23
425: aload         8
427: invokespecial #98
430: dload         10
432: dsub
433: dload         12
435: dneg
436: dcmpl
437: ifle          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #92
448: dload         21
450: dload         14
452: dadd
453: dstore        21
455: goto          374
458: dload         19
460: dload         14
462: dadd
463: dstore        19
465: goto          353
468: dload         17
470: dload         14
472: dadd
473: dstore        17
475: goto          332
478: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueSolverTest.class
Class name: SingularValueSolverTest
Method name: testMath320B
Start line: 211
End line: 219
Method source code: 
    public void testMath320B() {
        RealMatrix rm = new Array2DRowRealMatrix(new double[][] {
            { 1.0, 2.0 }, { 1.0, 2.0 }
        });
        SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(rm);
        RealMatrix recomposed = svd.getU().multiply(svd.getS()).multiply(svd.getVT());
        Assert.assertEquals(0.0, recomposed.subtract(rm).getNorm(), 2.0e-15);
    }
Method byte code: 
0: new           #70
3: dup
4: iconst_2
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #40
22: dastore
23: aastore
24: dup
25: iconst_1
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: dconst_1
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #40
38: dastore
39: aastore
40: invokespecial #77
43: astore_1
44: new           #10
47: dup
48: aload_1
49: invokespecial #12
52: astore_2
53: aload_2
54: invokeinterface #86,  1
59: aload_2
60: invokeinterface #87,  1
65: invokeinterface #88,  2
70: aload_2
71: invokeinterface #89,  1
76: invokeinterface #88,  2
81: astore_3
82: dconst_0
83: aload_3
84: aload_1
85: invokeinterface #58,  2
90: invokeinterface #59,  1
95: ldc2_w        #102
98: invokestatic  #37
101: return
}
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testMoreRows
Start line: 56
End line: 68
Method source code: 
    public void testMoreRows() {
        final double[] singularValues = { 123.456, 2.3, 1.001, 0.999 };
        final int rows    = singularValues.length + 2;
        final int columns = singularValues.length;
        Random r = new Random(15338437322523l);
        SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(createTestMatrix(r, rows, columns, singularValues));
        double[] computedSV = svd.getSingularValues();
        assertEquals(singularValues.length, computedSV.length);
        for (int i = 0; i < singularValues.length; ++i) {
            assertEquals(singularValues[i], computedSV[i], 1.0e-10);
        }
    }
Method byte code: 
0: iconst_4
1: newarray       double
3: dup
4: iconst_0
5: ldc2_w        #40
8: dastore
9: dup
10: iconst_1
11: ldc2_w        #42
14: dastore
15: dup
16: iconst_2
17: ldc2_w        #44
20: dastore
21: dup
22: iconst_3
23: ldc2_w        #46
26: dastore
27: astore_1
28: aload_1
29: arraylength
30: iconst_2
31: iadd
32: istore_2
33: aload_1
34: arraylength
35: istore_3
36: new           #48
39: dup
40: ldc2_w        #49
43: invokespecial #51
46: astore        4
48: new           #52
51: dup
52: aload_0
53: aload         4
55: iload_2
56: iload_3
57: aload_1
58: invokespecial #53
61: invokespecial #54
64: astore        5
66: aload         5
68: invokeinterface #55,  1
73: astore        6
75: aload_1
76: arraylength
77: aload         6
79: arraylength
80: invokestatic  #56
83: iconst_0
84: istore        7
86: iload         7
88: aload_1
89: arraylength
90: if_icmpge     114
93: aload_1
94: iload         7
96: daload
97: aload         6
99: iload         7
101: daload
102: ldc2_w        #57
105: invokestatic  #59
108: iinc          7, 1
111: goto          86
114: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testMoreColumns
Start line: 70
End line: 82
Method source code: 
    public void testMoreColumns() {
        final double[] singularValues = { 123.456, 2.3, 1.001, 0.999 };
        final int rows    = singularValues.length;
        final int columns = singularValues.length + 2;
        Random r = new Random(732763225836210l);
        SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(createTestMatrix(r, rows, columns, singularValues));
        double[] computedSV = svd.getSingularValues();
        assertEquals(singularValues.length, computedSV.length);
        for (int i = 0; i < singularValues.length; ++i) {
            assertEquals(singularValues[i], computedSV[i], 1.0e-10);
        }
    }
Method byte code: 
0: iconst_4
1: newarray       double
3: dup
4: iconst_0
5: ldc2_w        #40
8: dastore
9: dup
10: iconst_1
11: ldc2_w        #42
14: dastore
15: dup
16: iconst_2
17: ldc2_w        #44
20: dastore
21: dup
22: iconst_3
23: ldc2_w        #46
26: dastore
27: astore_1
28: aload_1
29: arraylength
30: istore_2
31: aload_1
32: arraylength
33: iconst_2
34: iadd
35: istore_3
36: new           #48
39: dup
40: ldc2_w        #60
43: invokespecial #51
46: astore        4
48: new           #52
51: dup
52: aload_0
53: aload         4
55: iload_2
56: iload_3
57: aload_1
58: invokespecial #53
61: invokespecial #54
64: astore        5
66: aload         5
68: invokeinterface #55,  1
73: astore        6
75: aload_1
76: arraylength
77: aload         6
79: arraylength
80: invokestatic  #56
83: iconst_0
84: istore        7
86: iload         7
88: aload_1
89: arraylength
90: if_icmpge     114
93: aload_1
94: iload         7
96: daload
97: aload         6
99: iload         7
101: daload
102: ldc2_w        #57
105: invokestatic  #59
108: iinc          7, 1
111: goto          86
114: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testDimensions
Start line: 85
End line: 97
Method source code: 
    public void testDimensions() {
        RealMatrix matrix = MatrixUtils.createRealMatrix(testSquare);
        final int m = matrix.getRowDimension();
        final int n = matrix.getColumnDimension();
        SingularValueDecomposition svd = new SingularValueDecompositionImpl(matrix);
        assertEquals(m, svd.getU().getRowDimension());
        assertEquals(m, svd.getU().getColumnDimension());
        assertEquals(m, svd.getS().getColumnDimension());
        assertEquals(n, svd.getS().getColumnDimension());
        assertEquals(n, svd.getV().getRowDimension());
        assertEquals(n, svd.getV().getColumnDimension());

    }
Method byte code: 
0: aload_0
1: getfield      #9
4: invokestatic  #62
7: astore_1
8: aload_1
9: invokeinterface #63,  1
14: istore_2
15: aload_1
16: invokeinterface #64,  1
21: istore_3
22: new           #52
25: dup
26: aload_1
27: invokespecial #54
30: astore        4
32: iload_2
33: aload         4
35: invokeinterface #65,  1
40: invokeinterface #63,  1
45: invokestatic  #56
48: iload_2
49: aload         4
51: invokeinterface #65,  1
56: invokeinterface #64,  1
61: invokestatic  #56
64: iload_2
65: aload         4
67: invokeinterface #66,  1
72: invokeinterface #64,  1
77: invokestatic  #56
80: iload_3
81: aload         4
83: invokeinterface #66,  1
88: invokeinterface #64,  1
93: invokestatic  #56
96: iload_3
97: aload         4
99: invokeinterface #67,  1
104: invokeinterface #63,  1
109: invokestatic  #56
112: iload_3
113: aload         4
115: invokeinterface #67,  1
120: invokeinterface #64,  1
125: invokestatic  #56
128: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testHadamard
Start line: 100
End line: 133
Method source code: 
    public void testHadamard() {
        RealMatrix matrix = new Array2DRowRealMatrix(new double[][] {
                {15.0 / 2.0,  5.0 / 2.0,  9.0 / 2.0,  3.0 / 2.0 },
                { 5.0 / 2.0, 15.0 / 2.0,  3.0 / 2.0,  9.0 / 2.0 },
                { 9.0 / 2.0,  3.0 / 2.0, 15.0 / 2.0,  5.0 / 2.0 },
                { 3.0 / 2.0,  9.0 / 2.0,  5.0 / 2.0, 15.0 / 2.0 }
        }, false);
        SingularValueDecomposition svd = new SingularValueDecompositionImpl(matrix);
        assertEquals(16.0, svd.getSingularValues()[0], 1.0e-14);
        assertEquals( 8.0, svd.getSingularValues()[1], 1.0e-14);
        assertEquals( 4.0, svd.getSingularValues()[2], 1.0e-14);
        assertEquals( 2.0, svd.getSingularValues()[3], 1.0e-14);

        RealMatrix fullCovariance = new Array2DRowRealMatrix(new double[][] {
                {  85.0 / 1024, -51.0 / 1024, -75.0 / 1024,  45.0 / 1024 },
                { -51.0 / 1024,  85.0 / 1024,  45.0 / 1024, -75.0 / 1024 },
                { -75.0 / 1024,  45.0 / 1024,  85.0 / 1024, -51.0 / 1024 },
                {  45.0 / 1024, -75.0 / 1024, -51.0 / 1024,  85.0 / 1024 }
        }, false);
        assertEquals(0.0,
                     fullCovariance.subtract(svd.getCovariance(0.0)).getNorm(),
                     1.0e-14);

        RealMatrix halfCovariance = new Array2DRowRealMatrix(new double[][] {
                {   5.0 / 1024,  -3.0 / 1024,   5.0 / 1024,  -3.0 / 1024 },
                {  -3.0 / 1024,   5.0 / 1024,  -3.0 / 1024,   5.0 / 1024 },
                {   5.0 / 1024,  -3.0 / 1024,   5.0 / 1024,  -3.0 / 1024 },
                {  -3.0 / 1024,   5.0 / 1024,  -3.0 / 1024,   5.0 / 1024 }
        }, false);
        assertEquals(0.0,
                     halfCovariance.subtract(svd.getCovariance(6.0)).getNorm(),
                     1.0e-14);

    }
Method byte code: 
0: new           #68
3: dup
4: iconst_4
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #69
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #71
24: dastore
25: dup
26: iconst_2
27: ldc2_w        #73
30: dastore
31: dup
32: iconst_3
33: ldc2_w        #75
36: dastore
37: aastore
38: dup
39: iconst_1
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #71
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #69
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #75
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #73
66: dastore
67: aastore
68: dup
69: iconst_2
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #73
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #75
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #69
90: dastore
91: dup
92: iconst_3
93: ldc2_w        #71
96: dastore
97: aastore
98: dup
99: iconst_3
100: iconst_4
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #75
108: dastore
109: dup
110: iconst_1
111: ldc2_w        #73
114: dastore
115: dup
116: iconst_2
117: ldc2_w        #71
120: dastore
121: dup
122: iconst_3
123: ldc2_w        #69
126: dastore
127: aastore
128: iconst_0
129: invokespecial #77
132: astore_1
133: new           #52
136: dup
137: aload_1
138: invokespecial #54
141: astore_2
142: ldc2_w        #78
145: aload_2
146: invokeinterface #55,  1
151: iconst_0
152: daload
153: ldc2_w        #80
156: invokestatic  #59
159: ldc2_w        #82
162: aload_2
163: invokeinterface #55,  1
168: iconst_1
169: daload
170: ldc2_w        #80
173: invokestatic  #59
176: ldc2_w        #84
179: aload_2
180: invokeinterface #55,  1
185: iconst_2
186: daload
187: ldc2_w        #80
190: invokestatic  #59
193: ldc2_w        #86
196: aload_2
197: invokeinterface #55,  1
202: iconst_3
203: daload
204: ldc2_w        #80
207: invokestatic  #59
210: new           #68
213: dup
214: iconst_4
215: anewarray     #2
218: dup
219: iconst_0
220: iconst_4
221: newarray       double
223: dup
224: iconst_0
225: ldc2_w        #88
228: dastore
229: dup
230: iconst_1
231: ldc2_w        #90
234: dastore
235: dup
236: iconst_2
237: ldc2_w        #92
240: dastore
241: dup
242: iconst_3
243: ldc2_w        #94
246: dastore
247: aastore
248: dup
249: iconst_1
250: iconst_4
251: newarray       double
253: dup
254: iconst_0
255: ldc2_w        #90
258: dastore
259: dup
260: iconst_1
261: ldc2_w        #88
264: dastore
265: dup
266: iconst_2
267: ldc2_w        #94
270: dastore
271: dup
272: iconst_3
273: ldc2_w        #92
276: dastore
277: aastore
278: dup
279: iconst_2
280: iconst_4
281: newarray       double
283: dup
284: iconst_0
285: ldc2_w        #92
288: dastore
289: dup
290: iconst_1
291: ldc2_w        #94
294: dastore
295: dup
296: iconst_2
297: ldc2_w        #88
300: dastore
301: dup
302: iconst_3
303: ldc2_w        #90
306: dastore
307: aastore
308: dup
309: iconst_3
310: iconst_4
311: newarray       double
313: dup
314: iconst_0
315: ldc2_w        #94
318: dastore
319: dup
320: iconst_1
321: ldc2_w        #92
324: dastore
325: dup
326: iconst_2
327: ldc2_w        #90
330: dastore
331: dup
332: iconst_3
333: ldc2_w        #88
336: dastore
337: aastore
338: iconst_0
339: invokespecial #77
342: astore_3
343: dconst_0
344: aload_3
345: aload_2
346: dconst_0
347: invokeinterface #96,  3
352: invokeinterface #97,  2
357: invokeinterface #98,  1
362: ldc2_w        #80
365: invokestatic  #59
368: new           #68
371: dup
372: iconst_4
373: anewarray     #2
376: dup
377: iconst_0
378: iconst_4
379: newarray       double
381: dup
382: iconst_0
383: ldc2_w        #99
386: dastore
387: dup
388: iconst_1
389: ldc2_w        #101
392: dastore
393: dup
394: iconst_2
395: ldc2_w        #99
398: dastore
399: dup
400: iconst_3
401: ldc2_w        #101
404: dastore
405: aastore
406: dup
407: iconst_1
408: iconst_4
409: newarray       double
411: dup
412: iconst_0
413: ldc2_w        #101
416: dastore
417: dup
418: iconst_1
419: ldc2_w        #99
422: dastore
423: dup
424: iconst_2
425: ldc2_w        #101
428: dastore
429: dup
430: iconst_3
431: ldc2_w        #99
434: dastore
435: aastore
436: dup
437: iconst_2
438: iconst_4
439: newarray       double
441: dup
442: iconst_0
443: ldc2_w        #99
446: dastore
447: dup
448: iconst_1
449: ldc2_w        #101
452: dastore
453: dup
454: iconst_2
455: ldc2_w        #99
458: dastore
459: dup
460: iconst_3
461: ldc2_w        #101
464: dastore
465: aastore
466: dup
467: iconst_3
468: iconst_4
469: newarray       double
471: dup
472: iconst_0
473: ldc2_w        #101
476: dastore
477: dup
478: iconst_1
479: ldc2_w        #99
482: dastore
483: dup
484: iconst_2
485: ldc2_w        #101
488: dastore
489: dup
490: iconst_3
491: ldc2_w        #99
494: dastore
495: aastore
496: iconst_0
497: invokespecial #77
500: astore        4
502: dconst_0
503: aload         4
505: aload_2
506: ldc2_w        #103
509: invokeinterface #96,  3
514: invokeinterface #97,  2
519: invokeinterface #98,  1
524: ldc2_w        #80
527: invokestatic  #59
530: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testAEqualUSVt
Start line: 136
End line: 140
Method source code: 
    public void testAEqualUSVt() {
        checkAEqualUSVt(MatrixUtils.createRealMatrix(testSquare));
        checkAEqualUSVt(MatrixUtils.createRealMatrix(testNonSquare));
        checkAEqualUSVt(MatrixUtils.createRealMatrix(testNonSquare).transpose());
    }
Method byte code: 
0: aload_0
1: aload_0
2: getfield      #9
5: invokestatic  #62
8: invokevirtual #105
11: aload_0
12: aload_0
13: getfield      #34
16: invokestatic  #62
19: invokevirtual #105
22: aload_0
23: aload_0
24: getfield      #34
27: invokestatic  #62
30: invokeinterface #106,  1
35: invokevirtual #105
38: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testUOrthogonal
Start line: 153
End line: 157
Method source code: 
    public void testUOrthogonal() {
        checkOrthogonal(new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare)).getU());
        checkOrthogonal(new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testNonSquare)).getU());
        checkOrthogonal(new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testNonSquare).transpose()).getU());
    }
Method byte code: 
0: aload_0
1: new           #52
4: dup
5: aload_0
6: getfield      #9
9: invokestatic  #62
12: invokespecial #54
15: invokevirtual #110
18: invokevirtual #111
21: aload_0
22: new           #52
25: dup
26: aload_0
27: getfield      #34
30: invokestatic  #62
33: invokespecial #54
36: invokevirtual #110
39: invokevirtual #111
42: aload_0
43: new           #52
46: dup
47: aload_0
48: getfield      #34
51: invokestatic  #62
54: invokeinterface #106,  1
59: invokespecial #54
62: invokevirtual #110
65: invokevirtual #111
68: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testVOrthogonal
Start line: 160
End line: 164
Method source code: 
    public void testVOrthogonal() {
        checkOrthogonal(new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare)).getV());
        checkOrthogonal(new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testNonSquare)).getV());
        checkOrthogonal(new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testNonSquare).transpose()).getV());
    }
Method byte code: 
0: aload_0
1: new           #52
4: dup
5: aload_0
6: getfield      #9
9: invokestatic  #62
12: invokespecial #54
15: invokevirtual #112
18: invokevirtual #111
21: aload_0
22: new           #52
25: dup
26: aload_0
27: getfield      #34
30: invokestatic  #62
33: invokespecial #54
36: invokevirtual #112
39: invokevirtual #111
42: aload_0
43: new           #52
46: dup
47: aload_0
48: getfield      #34
51: invokestatic  #62
54: invokeinterface #106,  1
59: invokespecial #54
62: invokevirtual #112
65: invokevirtual #111
68: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testMatricesValues1
Start line: 173
End line: 202
Method source code: 
    public void testMatricesValues1() {
       SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare));
        RealMatrix uRef = MatrixUtils.createRealMatrix(new double[][] {
                { 3.0 / 5.0, -4.0 / 5.0 },
                { 4.0 / 5.0,  3.0 / 5.0 }
        });
        RealMatrix sRef = MatrixUtils.createRealMatrix(new double[][] {
                { 3.0, 0.0 },
                { 0.0, 1.0 }
        });
        RealMatrix vRef = MatrixUtils.createRealMatrix(new double[][] {
                { 4.0 / 5.0,  3.0 / 5.0 },
                { 3.0 / 5.0, -4.0 / 5.0 }
        });

        // check values against known references
        RealMatrix u = svd.getU();
        assertEquals(0, u.subtract(uRef).getNorm(), normTolerance);
        RealMatrix s = svd.getS();
        assertEquals(0, s.subtract(sRef).getNorm(), normTolerance);
        RealMatrix v = svd.getV();
        assertEquals(0, v.subtract(vRef).getNorm(), normTolerance);

        // check the same cached instance is returned the second time
        assertTrue(u == svd.getU());
        assertTrue(s == svd.getS());
        assertTrue(v == svd.getV());

    }
Method byte code: 
0: new           #52
3: dup
4: aload_0
5: getfield      #9
8: invokestatic  #62
11: invokespecial #54
14: astore_1
15: iconst_2
16: anewarray     #2
19: dup
20: iconst_0
21: iconst_2
22: newarray       double
24: dup
25: iconst_0
26: ldc2_w        #114
29: dastore
30: dup
31: iconst_1
32: ldc2_w        #116
35: dastore
36: aastore
37: dup
38: iconst_1
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: ldc2_w        #118
47: dastore
48: dup
49: iconst_1
50: ldc2_w        #114
53: dastore
54: aastore
55: invokestatic  #62
58: astore_2
59: iconst_2
60: anewarray     #2
63: dup
64: iconst_0
65: iconst_2
66: newarray       double
68: dup
69: iconst_0
70: ldc2_w        #120
73: dastore
74: dup
75: iconst_1
76: dconst_0
77: dastore
78: aastore
79: dup
80: iconst_1
81: iconst_2
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: dup
89: iconst_1
90: dconst_1
91: dastore
92: aastore
93: invokestatic  #62
96: astore_3
97: iconst_2
98: anewarray     #2
101: dup
102: iconst_0
103: iconst_2
104: newarray       double
106: dup
107: iconst_0
108: ldc2_w        #118
111: dastore
112: dup
113: iconst_1
114: ldc2_w        #114
117: dastore
118: aastore
119: dup
120: iconst_1
121: iconst_2
122: newarray       double
124: dup
125: iconst_0
126: ldc2_w        #114
129: dastore
130: dup
131: iconst_1
132: ldc2_w        #116
135: dastore
136: aastore
137: invokestatic  #62
140: astore        4
142: aload_1
143: invokeinterface #65,  1
148: astore        5
150: dconst_0
151: aload         5
153: aload_2
154: invokeinterface #97,  2
159: invokeinterface #98,  1
164: ldc2_w        #108
167: invokestatic  #59
170: aload_1
171: invokeinterface #66,  1
176: astore        6
178: dconst_0
179: aload         6
181: aload_3
182: invokeinterface #97,  2
187: invokeinterface #98,  1
192: ldc2_w        #108
195: invokestatic  #59
198: aload_1
199: invokeinterface #67,  1
204: astore        7
206: dconst_0
207: aload         7
209: aload         4
211: invokeinterface #97,  2
216: invokeinterface #98,  1
221: ldc2_w        #108
224: invokestatic  #59
227: aload         5
229: aload_1
230: invokeinterface #65,  1
235: if_acmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #122
246: aload         6
248: aload_1
249: invokeinterface #66,  1
254: if_acmpne     261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #122
265: aload         7
267: aload_1
268: invokeinterface #67,  1
273: if_acmpne     280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #122
284: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testMatricesValues2
Start line: 205
End line: 239
Method source code: 
    public void testMatricesValues2() {

        RealMatrix uRef = MatrixUtils.createRealMatrix(new double[][] {
            {  0.0 / 5.0,  3.0 / 5.0,  0.0 / 5.0 },
            { -4.0 / 5.0,  0.0 / 5.0, -3.0 / 5.0 },
            {  0.0 / 5.0,  4.0 / 5.0,  0.0 / 5.0 },
            { -3.0 / 5.0,  0.0 / 5.0,  4.0 / 5.0 }
        });
        RealMatrix sRef = MatrixUtils.createRealMatrix(new double[][] {
            { 4.0, 0.0, 0.0 },
            { 0.0, 3.0, 0.0 },
            { 0.0, 0.0, 2.0 }
        });
        RealMatrix vRef = MatrixUtils.createRealMatrix(new double[][] {
            {  80.0 / 125.0,  -60.0 / 125.0, 75.0 / 125.0 },
            {  24.0 / 125.0,  107.0 / 125.0, 60.0 / 125.0 },
            { -93.0 / 125.0,  -24.0 / 125.0, 80.0 / 125.0 }
        });

        // check values against known references
        SingularValueDecomposition svd =
            new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testNonSquare));
        RealMatrix u = svd.getU();
        assertEquals(0, u.subtract(uRef).getNorm(), normTolerance);
        RealMatrix s = svd.getS();
        assertEquals(0, s.subtract(sRef).getNorm(), normTolerance);
        RealMatrix v = svd.getV();
        assertEquals(0, v.subtract(vRef).getNorm(), normTolerance);

        // check the same cached instance is returned the second time
        assertTrue(u == svd.getU());
        assertTrue(s == svd.getS());
        assertTrue(v == svd.getV());

    }
Method byte code: 
0: iconst_4
1: anewarray     #2
4: dup
5: iconst_0
6: iconst_3
7: newarray       double
9: dup
10: iconst_0
11: dconst_0
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #114
18: dastore
19: dup
20: iconst_2
21: dconst_0
22: dastore
23: aastore
24: dup
25: iconst_1
26: iconst_3
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #116
34: dastore
35: dup
36: iconst_1
37: dconst_0
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #123
44: dastore
45: aastore
46: dup
47: iconst_2
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #118
60: dastore
61: dup
62: iconst_2
63: dconst_0
64: dastore
65: aastore
66: dup
67: iconst_3
68: iconst_3
69: newarray       double
71: dup
72: iconst_0
73: ldc2_w        #123
76: dastore
77: dup
78: iconst_1
79: dconst_0
80: dastore
81: dup
82: iconst_2
83: ldc2_w        #118
86: dastore
87: aastore
88: invokestatic  #62
91: astore_1
92: iconst_3
93: anewarray     #2
96: dup
97: iconst_0
98: iconst_3
99: newarray       double
101: dup
102: iconst_0
103: ldc2_w        #84
106: dastore
107: dup
108: iconst_1
109: dconst_0
110: dastore
111: dup
112: iconst_2
113: dconst_0
114: dastore
115: aastore
116: dup
117: iconst_1
118: iconst_3
119: newarray       double
121: dup
122: iconst_0
123: dconst_0
124: dastore
125: dup
126: iconst_1
127: ldc2_w        #120
130: dastore
131: dup
132: iconst_2
133: dconst_0
134: dastore
135: aastore
136: dup
137: iconst_2
138: iconst_3
139: newarray       double
141: dup
142: iconst_0
143: dconst_0
144: dastore
145: dup
146: iconst_1
147: dconst_0
148: dastore
149: dup
150: iconst_2
151: ldc2_w        #86
154: dastore
155: aastore
156: invokestatic  #62
159: astore_2
160: iconst_3
161: anewarray     #2
164: dup
165: iconst_0
166: iconst_3
167: newarray       double
169: dup
170: iconst_0
171: ldc2_w        #125
174: dastore
175: dup
176: iconst_1
177: ldc2_w        #127
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #114
186: dastore
187: aastore
188: dup
189: iconst_1
190: iconst_3
191: newarray       double
193: dup
194: iconst_0
195: ldc2_w        #129
198: dastore
199: dup
200: iconst_1
201: ldc2_w        #131
204: dastore
205: dup
206: iconst_2
207: ldc2_w        #133
210: dastore
211: aastore
212: dup
213: iconst_2
214: iconst_3
215: newarray       double
217: dup
218: iconst_0
219: ldc2_w        #135
222: dastore
223: dup
224: iconst_1
225: ldc2_w        #137
228: dastore
229: dup
230: iconst_2
231: ldc2_w        #125
234: dastore
235: aastore
236: invokestatic  #62
239: astore_3
240: new           #52
243: dup
244: aload_0
245: getfield      #34
248: invokestatic  #62
251: invokespecial #54
254: astore        4
256: aload         4
258: invokeinterface #65,  1
263: astore        5
265: dconst_0
266: aload         5
268: aload_1
269: invokeinterface #97,  2
274: invokeinterface #98,  1
279: ldc2_w        #108
282: invokestatic  #59
285: aload         4
287: invokeinterface #66,  1
292: astore        6
294: dconst_0
295: aload         6
297: aload_2
298: invokeinterface #97,  2
303: invokeinterface #98,  1
308: ldc2_w        #108
311: invokestatic  #59
314: aload         4
316: invokeinterface #67,  1
321: astore        7
323: dconst_0
324: aload         7
326: aload_3
327: invokeinterface #97,  2
332: invokeinterface #98,  1
337: ldc2_w        #108
340: invokestatic  #59
343: aload         5
345: aload         4
347: invokeinterface #65,  1
352: if_acmpne     359
355: iconst_1
356: goto          360
359: iconst_0
360: invokestatic  #122
363: aload         6
365: aload         4
367: invokeinterface #66,  1
372: if_acmpne     379
375: iconst_1
376: goto          380
379: iconst_0
380: invokestatic  #122
383: aload         7
385: aload         4
387: invokeinterface #67,  1
392: if_acmpne     399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #122
403: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/76/target/test-classes/org/apache/commons/math/linear/SingularValueDecompositionImplTest.class
Class name: SingularValueDecompositionImplTest
Method name: testConditionNumber
Start line: 242
End line: 246
Method source code: 
    public void testConditionNumber() {
        SingularValueDecompositionImpl svd =
            new SingularValueDecompositionImpl(MatrixUtils.createRealMatrix(testSquare));
        assertEquals(3.0, svd.getConditionNumber(), 1.0e-15);
    }
Method byte code: 
0: new           #52
3: dup
4: aload_0
5: getfield      #9
8: invokestatic  #62
11: invokespecial #54
14: astore_1
15: ldc2_w        #120
18: aload_1
19: invokevirtual #139
22: ldc2_w        #140
25: invokestatic  #59
28: return
}
