Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 26
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = levenbergMarquardtOptimizer1.getTarget();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #10
39: astore_3
40: aload_2
41: invokevirtual #11
44: astore        4
46: ldc           #12
48: invokestatic  #13
51: goto          56
54: astore        4
56: aload_3
57: invokestatic  #15
60: return
Exception table:
from    to  target type
40    51    54   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 29
End line: 44
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        double[] doubleArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray5 = levenbergMarquardtOptimizer1.computeSigma(doubleArray3, 1.5707963267948966d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #16
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #10
39: astore_3
40: aconst_null
41: astore        4
43: aload_2
44: aload         4
46: ldc2_w        #17
49: invokevirtual #19
52: astore        5
54: ldc           #12
56: invokestatic  #13
59: goto          64
62: astore        5
64: aload_3
65: invokestatic  #15
68: return
Exception table:
from    to  target type
43    59    62   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 47
End line: 81
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20);
        double[][] doubleArray23 = diagonalMatrix22.getData();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight24 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix27 = diagonalMatrix22.createMatrix(52, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 52 != -1");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #20
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #21
36: dastore
37: dup
38: iconst_2
39: dconst_1
40: dastore
41: astore_1
42: new           #23
45: dup
46: aload_1
47: iconst_1
48: invokespecial #24
51: astore_2
52: aload_2
53: iconst_0
54: invokevirtual #25
57: astore_3
58: iconst_3
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #21
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: astore        4
77: new           #23
80: dup
81: aload         4
83: iconst_1
84: invokespecial #24
87: astore        5
89: iconst_3
90: newarray       double
92: dup
93: iconst_0
94: dconst_1
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #21
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: astore        6
108: new           #23
111: dup
112: aload         6
114: iconst_1
115: invokespecial #24
118: astore        7
120: aload         5
122: aload         6
124: invokevirtual #26
127: astore        8
129: aload_2
130: aload         8
132: invokevirtual #27
135: astore        9
137: new           #23
140: dup
141: aload         8
143: invokespecial #28
146: astore        10
148: aload         10
150: invokevirtual #29
153: astore        11
155: new           #30
158: dup
159: aload         10
161: invokespecial #31
164: astore        12
166: aload         10
168: bipush        52
170: iconst_m1
171: invokevirtual #32
174: astore        13
176: ldc           #33
178: invokestatic  #13
181: goto          186
184: astore        13
186: aload_1
187: invokestatic  #35
190: aload_1
191: invokestatic  #36
194: ldc           #37
196: invokestatic  #38
199: aload_3
200: invokestatic  #35
203: aload         4
205: invokestatic  #35
208: aload         4
210: invokestatic  #36
213: ldc           #37
215: invokestatic  #38
218: aload         6
220: invokestatic  #35
223: aload         6
225: invokestatic  #36
228: ldc           #37
230: invokestatic  #38
233: aload         8
235: invokestatic  #35
238: aload         8
240: invokestatic  #36
243: ldc           #39
245: invokestatic  #38
248: aload         9
250: invokestatic  #35
253: aload         9
255: invokestatic  #36
258: ldc           #40
260: invokestatic  #38
263: aload         11
265: invokestatic  #35
268: return
Exception table:
from    to  target type
166   181   184   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 84
End line: 98
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix3 = levenbergMarquardtOptimizer1.getWeight();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #41
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #10
39: astore_3
40: aload_2
41: invokevirtual #42
44: astore        4
46: ldc           #12
48: invokestatic  #13
51: goto          56
54: astore        4
56: aload_3
57: invokestatic  #15
60: return
Exception table:
from    to  target type
40    51    54   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 101
End line: 128
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        double[] doubleArray7 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray4, doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray12 = levenbergMarquardtOptimizer1.computeSigma(doubleArray4, (double) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(realMatrix10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #43
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #44
39: istore_3
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore        4
51: aload         4
53: invokestatic  #47
56: astore        5
58: iconst_1
59: newarray       double
61: dup
62: iconst_0
63: ldc2_w        #45
66: dastore
67: astore        6
69: aload         6
71: invokestatic  #47
74: astore        7
76: new           #48
79: dup
80: aload         4
82: aload         6
84: invokespecial #49
87: astore        8
89: aload         4
91: invokestatic  #47
94: astore        9
96: aload_2
97: aload         4
99: ldc2_w        #50
102: invokevirtual #19
105: astore        10
107: ldc           #12
109: invokestatic  #13
112: goto          117
115: astore        10
117: new           #52
120: dup
121: invokespecial #53
124: ldc           #54
126: invokevirtual #55
129: iload_3
130: invokevirtual #56
133: ldc           #57
135: invokevirtual #55
138: iconst_0
139: invokevirtual #56
142: ldc           #54
144: invokevirtual #55
147: invokevirtual #58
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #59
162: aload         4
164: invokestatic  #35
167: aload         4
169: invokestatic  #36
172: ldc           #60
174: invokestatic  #38
177: aload         5
179: invokestatic  #35
182: aload         6
184: invokestatic  #35
187: aload         6
189: invokestatic  #36
192: ldc           #60
194: invokestatic  #38
197: aload         7
199: invokestatic  #35
202: aload         9
204: invokestatic  #35
207: return
Exception table:
from    to  target type
96   112   115   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 131
End line: 201
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector4 = arrayRealVector2.mapDivideToSelf((double) (byte) -1);
        arrayRealVector2.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector9 = arrayRealVector7.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector10.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector13 = arrayRealVector7.append(realVector12);
        double double14 = arrayRealVector2.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector17 = arrayRealVector15.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector18 = arrayRealVector2.subtract(realVector17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray20 = arrayRealVector19.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector2, doubleArray20);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight22 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray20);
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = weight22.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix24 = weight22.getWeight();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        arrayRealVector25.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector32 = arrayRealVector30.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector30.append(realVector35);
        double double37 = arrayRealVector25.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector40 = arrayRealVector38.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector25.subtract(realVector40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray43 = arrayRealVector42.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector25, doubleArray43);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight45 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray43);
        org.apache.commons.math3.linear.RealMatrix realMatrix46 = weight45.getWeight();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray47 = new org.apache.commons.math3.optim.OptimizationData[] { weight22, weight45 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair48 = gaussNewtonOptimizer1.optimize(optimizationDataArray47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector4);
        org.junit.Assert.assertNotNull(realVector9);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(realMatrix23);
        org.junit.Assert.assertNotNull(realMatrix24);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(realMatrix46);
        org.junit.Assert.assertNotNull(optimizationDataArray47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #61
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: aload_1
31: invokespecial #63
34: astore_2
35: new           #48
38: dup
39: invokespecial #64
42: astore_3
43: aload_3
44: ldc2_w        #65
47: invokevirtual #67
50: astore        4
52: aload_3
53: dconst_1
54: invokevirtual #68
57: new           #48
60: dup
61: invokespecial #64
64: astore        5
66: aload         5
68: ldc2_w        #65
71: invokevirtual #67
74: astore        6
76: new           #48
79: dup
80: invokespecial #64
83: astore        7
85: aload         7
87: ldc2_w        #65
90: invokevirtual #67
93: astore        8
95: aload         5
97: aload         8
99: invokevirtual #69
102: astore        9
104: aload_3
105: aload         5
107: invokevirtual #70
110: dstore        10
112: new           #48
115: dup
116: invokespecial #64
119: astore        12
121: aload         12
123: ldc2_w        #65
126: invokevirtual #67
129: astore        13
131: aload_3
132: aload         13
134: invokevirtual #71
137: astore        14
139: new           #48
142: dup
143: invokespecial #64
146: astore        15
148: aload         15
150: invokevirtual #72
153: astore        16
155: new           #48
158: dup
159: aload_3
160: aload         16
162: invokespecial #73
165: astore        17
167: new           #30
170: dup
171: aload         16
173: invokespecial #74
176: astore        18
178: aload         18
180: invokevirtual #75
183: astore        19
185: aload         18
187: invokevirtual #75
190: astore        20
192: new           #48
195: dup
196: invokespecial #64
199: astore        21
201: aload         21
203: ldc2_w        #65
206: invokevirtual #67
209: astore        22
211: aload         21
213: dconst_1
214: invokevirtual #68
217: new           #48
220: dup
221: invokespecial #64
224: astore        23
226: aload         23
228: ldc2_w        #65
231: invokevirtual #67
234: astore        24
236: new           #48
239: dup
240: invokespecial #64
243: astore        25
245: aload         25
247: ldc2_w        #65
250: invokevirtual #67
253: astore        26
255: aload         23
257: aload         26
259: invokevirtual #69
262: astore        27
264: aload         21
266: aload         23
268: invokevirtual #70
271: dstore        28
273: new           #48
276: dup
277: invokespecial #64
280: astore        30
282: aload         30
284: ldc2_w        #65
287: invokevirtual #67
290: astore        31
292: aload         21
294: aload         31
296: invokevirtual #71
299: astore        32
301: new           #48
304: dup
305: invokespecial #64
308: astore        33
310: aload         33
312: invokevirtual #72
315: astore        34
317: new           #48
320: dup
321: aload         21
323: aload         34
325: invokespecial #73
328: astore        35
330: new           #30
333: dup
334: aload         34
336: invokespecial #74
339: astore        36
341: aload         36
343: invokevirtual #75
346: astore        37
348: iconst_2
349: anewarray     #76
352: dup
353: iconst_0
354: aload         18
356: aastore
357: dup
358: iconst_1
359: aload         36
361: aastore
362: astore        38
364: aload_2
365: aload         38
367: invokevirtual #77
370: astore        39
372: ldc           #78
374: invokestatic  #13
377: goto          382
380: astore        39
382: aload         4
384: invokestatic  #35
387: aload         6
389: invokestatic  #35
392: aload         8
394: invokestatic  #35
397: aload         9
399: invokestatic  #35
402: new           #52
405: dup
406: invokespecial #53
409: ldc           #54
411: invokevirtual #55
414: dload         10
416: invokevirtual #80
419: ldc           #57
421: invokevirtual #55
424: dconst_0
425: invokevirtual #80
428: ldc           #54
430: invokevirtual #55
433: invokevirtual #58
436: dload         10
438: dconst_0
439: dcmpl
440: ifne          447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #59
451: aload         13
453: invokestatic  #35
456: aload         14
458: invokestatic  #35
461: aload         16
463: invokestatic  #35
466: aload         16
468: invokestatic  #36
471: ldc           #81
473: invokestatic  #38
476: aload         19
478: invokestatic  #35
481: aload         20
483: invokestatic  #35
486: aload         22
488: invokestatic  #35
491: aload         24
493: invokestatic  #35
496: aload         26
498: invokestatic  #35
501: aload         27
503: invokestatic  #35
506: new           #52
509: dup
510: invokespecial #53
513: ldc           #54
515: invokevirtual #55
518: dload         28
520: invokevirtual #80
523: ldc           #57
525: invokevirtual #55
528: dconst_0
529: invokevirtual #80
532: ldc           #54
534: invokevirtual #55
537: invokevirtual #58
540: dload         28
542: dconst_0
543: dcmpl
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #59
555: aload         31
557: invokestatic  #35
560: aload         32
562: invokestatic  #35
565: aload         34
567: invokestatic  #35
570: aload         34
572: invokestatic  #36
575: ldc           #81
577: invokestatic  #38
580: aload         37
582: invokestatic  #35
585: aload         38
587: invokestatic  #35
590: return
Exception table:
from    to  target type
364   377   380   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 204
End line: 240
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        double[] doubleArray7 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix9 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray7, true);
        org.apache.commons.math3.linear.RealVector realVector11 = diagonalMatrix9.getRowVector(0);
        double[] doubleArray15 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix17 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray15, true);
        double[] doubleArray21 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix23 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray21, true);
        double[] doubleArray24 = diagonalMatrix17.operate(doubleArray21);
        double[] doubleArray25 = diagonalMatrix9.preMultiply(doubleArray24);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray27 = levenbergMarquardtOptimizer1.computeCovariances(doubleArray25, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1000000.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #44
39: istore_3
40: aload_2
41: invokevirtual #83
44: astore        4
46: iconst_3
47: newarray       double
49: dup
50: iconst_0
51: dconst_1
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #21
58: dastore
59: dup
60: iconst_2
61: dconst_1
62: dastore
63: astore        5
65: new           #23
68: dup
69: aload         5
71: iconst_1
72: invokespecial #24
75: astore        6
77: aload         6
79: iconst_0
80: invokevirtual #25
83: astore        7
85: iconst_3
86: newarray       double
88: dup
89: iconst_0
90: dconst_1
91: dastore
92: dup
93: iconst_1
94: ldc2_w        #21
97: dastore
98: dup
99: iconst_2
100: dconst_1
101: dastore
102: astore        8
104: new           #23
107: dup
108: aload         8
110: iconst_1
111: invokespecial #24
114: astore        9
116: iconst_3
117: newarray       double
119: dup
120: iconst_0
121: dconst_1
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #21
128: dastore
129: dup
130: iconst_2
131: dconst_1
132: dastore
133: astore        10
135: new           #23
138: dup
139: aload         10
141: iconst_1
142: invokespecial #24
145: astore        11
147: aload         9
149: aload         10
151: invokevirtual #26
154: astore        12
156: aload         6
158: aload         12
160: invokevirtual #27
163: astore        13
165: aload_2
166: aload         13
168: dconst_0
169: invokevirtual #84
172: astore        14
174: ldc           #12
176: invokestatic  #13
179: goto          184
182: astore        14
184: new           #52
187: dup
188: invokespecial #53
191: ldc           #54
193: invokevirtual #55
196: iload_3
197: invokevirtual #56
200: ldc           #57
202: invokevirtual #55
205: iconst_0
206: invokevirtual #56
209: ldc           #54
211: invokevirtual #55
214: invokevirtual #58
217: iload_3
218: ifne          225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #59
229: aload         4
231: invokestatic  #15
234: aload         5
236: invokestatic  #35
239: aload         5
241: invokestatic  #36
244: ldc           #37
246: invokestatic  #38
249: aload         7
251: invokestatic  #35
254: aload         8
256: invokestatic  #35
259: aload         8
261: invokestatic  #36
264: ldc           #37
266: invokestatic  #38
269: aload         10
271: invokestatic  #35
274: aload         10
276: invokestatic  #36
279: ldc           #37
281: invokestatic  #38
284: aload         12
286: invokestatic  #35
289: aload         12
291: invokestatic  #36
294: ldc           #39
296: invokestatic  #38
299: aload         13
301: invokestatic  #35
304: aload         13
306: invokestatic  #36
309: ldc           #40
311: invokestatic  #38
314: return
Exception table:
from    to  target type
165   179   182   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 243
End line: 277
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight20 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray18);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = weight20.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix22 = weight20.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = weight20.getWeight();
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(realMatrix22);
        org.junit.Assert.assertNotNull(realMatrix23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #85
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: invokespecial #64
31: astore_1
32: aload_1
33: ldc2_w        #65
36: invokevirtual #67
39: astore_2
40: aload_1
41: dconst_1
42: invokevirtual #68
45: new           #48
48: dup
49: invokespecial #64
52: astore_3
53: aload_3
54: ldc2_w        #65
57: invokevirtual #67
60: astore        4
62: new           #48
65: dup
66: invokespecial #64
69: astore        5
71: aload         5
73: ldc2_w        #65
76: invokevirtual #67
79: astore        6
81: aload_3
82: aload         6
84: invokevirtual #69
87: astore        7
89: aload_1
90: aload_3
91: invokevirtual #70
94: dstore        8
96: new           #48
99: dup
100: invokespecial #64
103: astore        10
105: aload         10
107: ldc2_w        #65
110: invokevirtual #67
113: astore        11
115: aload_1
116: aload         11
118: invokevirtual #71
121: astore        12
123: new           #48
126: dup
127: invokespecial #64
130: astore        13
132: aload         13
134: invokevirtual #72
137: astore        14
139: new           #48
142: dup
143: aload_1
144: aload         14
146: invokespecial #73
149: astore        15
151: new           #30
154: dup
155: aload         14
157: invokespecial #74
160: astore        16
162: aload         16
164: invokevirtual #75
167: astore        17
169: aload         16
171: invokevirtual #75
174: astore        18
176: aload         16
178: invokevirtual #75
181: astore        19
183: aload_2
184: invokestatic  #35
187: aload         4
189: invokestatic  #35
192: aload         6
194: invokestatic  #35
197: aload         7
199: invokestatic  #35
202: new           #52
205: dup
206: invokespecial #53
209: ldc           #54
211: invokevirtual #55
214: dload         8
216: invokevirtual #80
219: ldc           #57
221: invokevirtual #55
224: dconst_0
225: invokevirtual #80
228: ldc           #54
230: invokevirtual #55
233: invokevirtual #58
236: dload         8
238: dconst_0
239: dcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #59
251: aload         11
253: invokestatic  #35
256: aload         12
258: invokestatic  #35
261: aload         14
263: invokestatic  #35
266: aload         14
268: invokestatic  #36
271: ldc           #81
273: invokestatic  #38
276: aload         17
278: invokestatic  #35
281: aload         18
283: invokestatic  #35
286: aload         19
288: invokestatic  #35
291: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 280
End line: 314
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20);
        double[][] doubleArray23 = diagonalMatrix22.getData();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight24 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealVector realVector26 = diagonalMatrix22.getColumnVector(127);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: column index (127)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #86
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #21
36: dastore
37: dup
38: iconst_2
39: dconst_1
40: dastore
41: astore_1
42: new           #23
45: dup
46: aload_1
47: iconst_1
48: invokespecial #24
51: astore_2
52: aload_2
53: iconst_0
54: invokevirtual #25
57: astore_3
58: iconst_3
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #21
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: astore        4
77: new           #23
80: dup
81: aload         4
83: iconst_1
84: invokespecial #24
87: astore        5
89: iconst_3
90: newarray       double
92: dup
93: iconst_0
94: dconst_1
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #21
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: astore        6
108: new           #23
111: dup
112: aload         6
114: iconst_1
115: invokespecial #24
118: astore        7
120: aload         5
122: aload         6
124: invokevirtual #26
127: astore        8
129: aload_2
130: aload         8
132: invokevirtual #27
135: astore        9
137: new           #23
140: dup
141: aload         8
143: invokespecial #28
146: astore        10
148: aload         10
150: invokevirtual #29
153: astore        11
155: new           #30
158: dup
159: aload         10
161: invokespecial #31
164: astore        12
166: aload         10
168: bipush        127
170: invokevirtual #87
173: astore        13
175: ldc           #88
177: invokestatic  #13
180: goto          185
183: astore        13
185: aload_1
186: invokestatic  #35
189: aload_1
190: invokestatic  #36
193: ldc           #37
195: invokestatic  #38
198: aload_3
199: invokestatic  #35
202: aload         4
204: invokestatic  #35
207: aload         4
209: invokestatic  #36
212: ldc           #37
214: invokestatic  #38
217: aload         6
219: invokestatic  #35
222: aload         6
224: invokestatic  #36
227: ldc           #37
229: invokestatic  #38
232: aload         8
234: invokestatic  #35
237: aload         8
239: invokestatic  #36
242: ldc           #39
244: invokestatic  #38
247: aload         9
249: invokestatic  #35
252: aload         9
254: invokestatic  #36
257: ldc           #40
259: invokestatic  #38
262: aload         11
264: invokestatic  #35
267: return
Exception table:
from    to  target type
166   180   183   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 317
End line: 424
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric4 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray8 = new double[] { 2.5934433098363465d, Double.NEGATIVE_INFINITY };
        double[] doubleArray9 = parametric4.gradient((double) (-1.0f), doubleArray8);
        double[] doubleArray12 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray12);
        double[] doubleArray15 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix16 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray12, doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector18.mapDivideToSelf((double) (byte) -1);
        arrayRealVector18.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector26.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector29 = arrayRealVector23.append(realVector28);
        double double30 = arrayRealVector18.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector18.subtract(realVector33);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray36 = arrayRealVector35.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector18, doubleArray36);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair39 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray12, doubleArray36, true);
        double[] doubleArray40 = pointVectorValuePair39.getValueRef();
        org.apache.commons.math3.linear.RealVector realVector41 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray40);
        double[] doubleArray42 = parametric4.gradient((double) 'a', doubleArray40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector45 = arrayRealVector43.mapDivideToSelf((double) (byte) -1);
        arrayRealVector43.set((double) 1);
        java.lang.Double[] doubleArray48 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray48);
        double double50 = arrayRealVector43.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        java.lang.Double[] doubleArray51 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = arrayRealVector49.append(arrayRealVector52);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector56 = arrayRealVector54.mapDivideToSelf((double) (byte) -1);
        arrayRealVector54.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector61 = arrayRealVector59.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector64 = arrayRealVector62.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector65 = arrayRealVector59.append(realVector64);
        double double66 = arrayRealVector54.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector69 = arrayRealVector67.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector70 = arrayRealVector54.subtract(realVector69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray72 = arrayRealVector71.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector54, doubleArray72);
        double double74 = arrayRealVector49.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector73);
        double[] doubleArray75 = arrayRealVector73.getDataRef();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray76 = parametricUnivariateFunctionCurveFitter2.fit(0, (org.apache.commons.math3.analysis.ParametricUnivariateFunction) parametric4, doubleArray75);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[2.5934433098363465, -Infinity]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertNotNull(realVector56);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(realVector64);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(realVector69);
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #90
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: new           #91
38: dup
39: aload_2
40: invokespecial #92
43: astore_3
44: new           #93
47: dup
48: invokespecial #94
51: astore        4
53: iconst_2
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #95
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #98
67: dastore
68: astore        5
70: aload         4
72: ldc2_w        #65
75: aload         5
77: invokevirtual #100
80: astore        6
82: iconst_1
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #45
90: dastore
91: astore        7
93: aload         7
95: invokestatic  #47
98: astore        8
100: iconst_1
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #45
108: dastore
109: astore        9
111: aload         9
113: invokestatic  #47
116: astore        10
118: new           #48
121: dup
122: aload         7
124: aload         9
126: invokespecial #49
129: astore        11
131: new           #48
134: dup
135: invokespecial #64
138: astore        12
140: aload         12
142: ldc2_w        #65
145: invokevirtual #67
148: astore        13
150: aload         12
152: dconst_1
153: invokevirtual #68
156: new           #48
159: dup
160: invokespecial #64
163: astore        14
165: aload         14
167: ldc2_w        #65
170: invokevirtual #67
173: astore        15
175: new           #48
178: dup
179: invokespecial #64
182: astore        16
184: aload         16
186: ldc2_w        #65
189: invokevirtual #67
192: astore        17
194: aload         14
196: aload         17
198: invokevirtual #69
201: astore        18
203: aload         12
205: aload         14
207: invokevirtual #70
210: dstore        19
212: new           #48
215: dup
216: invokespecial #64
219: astore        21
221: aload         21
223: ldc2_w        #65
226: invokevirtual #67
229: astore        22
231: aload         12
233: aload         22
235: invokevirtual #71
238: astore        23
240: new           #48
243: dup
244: invokespecial #64
247: astore        24
249: aload         24
251: invokevirtual #72
254: astore        25
256: new           #48
259: dup
260: aload         12
262: aload         25
264: invokespecial #73
267: astore        26
269: new           #101
272: dup
273: aload         7
275: aload         25
277: iconst_1
278: invokespecial #102
281: astore        27
283: aload         27
285: invokevirtual #103
288: astore        28
290: aload         28
292: invokestatic  #104
295: astore        29
297: aload         4
299: ldc2_w        #105
302: aload         28
304: invokevirtual #100
307: astore        30
309: new           #48
312: dup
313: invokespecial #64
316: astore        31
318: aload         31
320: ldc2_w        #65
323: invokevirtual #67
326: astore        32
328: aload         31
330: dconst_1
331: invokevirtual #68
334: iconst_0
335: anewarray     #97
338: astore        33
340: new           #48
343: dup
344: aload         33
346: invokespecial #107
349: astore        34
351: aload         31
353: aload         34
355: invokevirtual #70
358: dstore        35
360: iconst_0
361: anewarray     #97
364: astore        37
366: new           #48
369: dup
370: aload         37
372: invokespecial #107
375: astore        38
377: aload         34
379: aload         38
381: invokevirtual #108
384: astore        39
386: new           #48
389: dup
390: invokespecial #64
393: astore        40
395: aload         40
397: ldc2_w        #65
400: invokevirtual #67
403: astore        41
405: aload         40
407: dconst_1
408: invokevirtual #68
411: new           #48
414: dup
415: invokespecial #64
418: astore        42
420: aload         42
422: ldc2_w        #65
425: invokevirtual #67
428: astore        43
430: new           #48
433: dup
434: invokespecial #64
437: astore        44
439: aload         44
441: ldc2_w        #65
444: invokevirtual #67
447: astore        45
449: aload         42
451: aload         45
453: invokevirtual #69
456: astore        46
458: aload         40
460: aload         42
462: invokevirtual #70
465: dstore        47
467: new           #48
470: dup
471: invokespecial #64
474: astore        49
476: aload         49
478: ldc2_w        #65
481: invokevirtual #67
484: astore        50
486: aload         40
488: aload         50
490: invokevirtual #71
493: astore        51
495: new           #48
498: dup
499: invokespecial #64
502: astore        52
504: aload         52
506: invokevirtual #72
509: astore        53
511: new           #48
514: dup
515: aload         40
517: aload         53
519: invokespecial #73
522: astore        54
524: aload         34
526: aload         54
528: invokevirtual #70
531: dstore        55
533: aload         54
535: invokevirtual #72
538: astore        57
540: aload_3
541: iconst_0
542: aload         4
544: aload         57
546: invokevirtual #109
549: astore        58
551: ldc           #78
553: invokestatic  #13
556: goto          561
559: astore        58
561: aload         5
563: invokestatic  #35
566: aload         5
568: invokestatic  #36
571: ldc           #110
573: invokestatic  #38
576: aload         6
578: invokestatic  #35
581: aload         6
583: invokestatic  #36
586: ldc           #111
588: invokestatic  #38
591: aload         7
593: invokestatic  #35
596: aload         7
598: invokestatic  #36
601: ldc           #60
603: invokestatic  #38
606: aload         8
608: invokestatic  #35
611: aload         9
613: invokestatic  #35
616: aload         9
618: invokestatic  #36
621: ldc           #60
623: invokestatic  #38
626: aload         10
628: invokestatic  #35
631: aload         13
633: invokestatic  #35
636: aload         15
638: invokestatic  #35
641: aload         17
643: invokestatic  #35
646: aload         18
648: invokestatic  #35
651: new           #52
654: dup
655: invokespecial #53
658: ldc           #54
660: invokevirtual #55
663: dload         19
665: invokevirtual #80
668: ldc           #57
670: invokevirtual #55
673: dconst_0
674: invokevirtual #80
677: ldc           #54
679: invokevirtual #55
682: invokevirtual #58
685: dload         19
687: dconst_0
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #59
700: aload         22
702: invokestatic  #35
705: aload         23
707: invokestatic  #35
710: aload         25
712: invokestatic  #35
715: aload         25
717: invokestatic  #36
720: ldc           #81
722: invokestatic  #38
725: aload         28
727: invokestatic  #35
730: aload         28
732: invokestatic  #36
735: ldc           #81
737: invokestatic  #38
740: aload         29
742: invokestatic  #35
745: aload         30
747: invokestatic  #35
750: aload         30
752: invokestatic  #36
755: ldc           #81
757: invokestatic  #38
760: aload         32
762: invokestatic  #35
765: aload         33
767: invokestatic  #35
770: new           #52
773: dup
774: invokespecial #53
777: ldc           #54
779: invokevirtual #55
782: dload         35
784: invokevirtual #80
787: ldc           #57
789: invokevirtual #55
792: dconst_0
793: invokevirtual #80
796: ldc           #54
798: invokevirtual #55
801: invokevirtual #58
804: dload         35
806: dconst_0
807: dcmpl
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #59
819: aload         37
821: invokestatic  #35
824: aload         39
826: invokestatic  #35
829: aload         41
831: invokestatic  #35
834: aload         43
836: invokestatic  #35
839: aload         45
841: invokestatic  #35
844: aload         46
846: invokestatic  #35
849: new           #52
852: dup
853: invokespecial #53
856: ldc           #54
858: invokevirtual #55
861: dload         47
863: invokevirtual #80
866: ldc           #57
868: invokevirtual #55
871: dconst_0
872: invokevirtual #80
875: ldc           #54
877: invokevirtual #55
880: invokevirtual #58
883: dload         47
885: dconst_0
886: dcmpl
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #59
898: aload         50
900: invokestatic  #35
903: aload         51
905: invokestatic  #35
908: aload         53
910: invokestatic  #35
913: aload         53
915: invokestatic  #36
918: ldc           #81
920: invokestatic  #38
923: new           #52
926: dup
927: invokespecial #53
930: ldc           #54
932: invokevirtual #55
935: dload         55
937: invokevirtual #80
940: ldc           #57
942: invokevirtual #55
945: dconst_0
946: invokevirtual #80
949: ldc           #54
951: invokevirtual #55
954: invokevirtual #58
957: dload         55
959: dconst_0
960: dcmpl
961: ifne          968
964: iconst_1
965: goto          969
968: iconst_0
969: invokestatic  #59
972: aload         57
974: invokestatic  #35
977: aload         57
979: invokestatic  #36
982: ldc           #81
984: invokestatic  #38
987: return
Exception table:
from    to  target type
540   556   559   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 427
End line: 437
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        double double8 = weightedObservedPoint6.getX();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #112
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: new           #91
38: dup
39: aload_2
40: invokespecial #92
43: astore_3
44: new           #113
47: dup
48: ldc2_w        #21
51: dconst_0
52: ldc2_w        #21
55: invokespecial #114
58: astore        4
60: aload_3
61: aload         4
63: invokevirtual #115
66: aload         4
68: invokevirtual #116
71: dstore        5
73: new           #52
76: dup
77: invokespecial #53
80: ldc           #54
82: invokevirtual #55
85: dload         5
87: invokevirtual #80
90: ldc           #57
92: invokevirtual #55
95: dconst_0
96: invokevirtual #80
99: ldc           #54
101: invokevirtual #55
104: invokevirtual #58
107: dload         5
109: dconst_0
110: dcmpl
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #59
122: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 440
End line: 465
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer multivariateVectorOptimizer0 = null;
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter1 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>(multivariateVectorOptimizer0);
        org.apache.commons.math3.analysis.ParametricUnivariateFunction parametricUnivariateFunction3 = null;
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric4 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray9 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix11 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess14 = new org.apache.commons.math3.optim.InitialGuess(doubleArray9);
        double[] doubleArray15 = initialGuess14.getInitialGuess();
        double double16 = parametric4.value(0.0d, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray17 = parametricUnivariateFunctionCurveFitter1.fit((int) (byte) 100, parametricUnivariateFunction3, doubleArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #117
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #91
29: dup
30: aload_1
31: invokespecial #92
34: astore_2
35: aconst_null
36: astore_3
37: new           #93
40: dup
41: invokespecial #94
44: astore        4
46: iconst_3
47: newarray       double
49: dup
50: iconst_0
51: dconst_1
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #21
58: dastore
59: dup
60: iconst_2
61: dconst_1
62: dastore
63: astore        5
65: new           #23
68: dup
69: aload         5
71: iconst_1
72: invokespecial #24
75: astore        6
77: new           #23
80: dup
81: aload         5
83: iconst_1
84: invokespecial #24
87: astore        7
89: new           #118
92: dup
93: aload         5
95: invokespecial #119
98: astore        8
100: aload         8
102: invokevirtual #120
105: astore        9
107: aload         4
109: dconst_0
110: aload         9
112: invokevirtual #121
115: dstore        10
117: aload_2
118: bipush        100
120: aload_3
121: aload         9
123: invokevirtual #109
126: astore        12
128: ldc           #12
130: invokestatic  #13
133: goto          138
136: astore        12
138: aload         5
140: invokestatic  #35
143: aload         5
145: invokestatic  #36
148: ldc           #37
150: invokestatic  #38
153: aload         9
155: invokestatic  #35
158: aload         9
160: invokestatic  #36
163: ldc           #37
165: invokestatic  #38
168: new           #52
171: dup
172: invokespecial #53
175: ldc           #54
177: invokevirtual #55
180: dload         10
182: invokevirtual #80
185: ldc           #57
187: invokevirtual #55
190: dconst_1
191: invokevirtual #80
194: ldc           #54
196: invokevirtual #55
199: invokevirtual #58
202: dload         10
204: dconst_1
205: dcmpl
206: ifne          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #59
217: return
Exception table:
from    to  target type
117   133   136   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 468
End line: 480
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair2 = gaussNewtonOptimizer1.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #122
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: aload_1
31: invokespecial #63
34: astore_2
35: aload_2
36: invokevirtual #123
39: astore_3
40: ldc           #124
42: invokestatic  #13
45: goto          49
48: astore_3
49: return
Exception table:
from    to  target type
35    45    48   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 483
End line: 533
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxIterations();
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        double[] doubleArray7 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray4, doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector10.mapDivideToSelf((double) (byte) -1);
        arrayRealVector10.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector17 = arrayRealVector15.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector18.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector15.append(realVector20);
        double double22 = arrayRealVector10.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector26 = arrayRealVector10.subtract(realVector25);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray28 = arrayRealVector27.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector10, doubleArray28);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair31 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray4, doubleArray28, true);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray33 = levenbergMarquardtOptimizer1.computeCovariances(doubleArray28, 2655.685949272419d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #127
39: istore_3
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore        4
51: aload         4
53: invokestatic  #47
56: astore        5
58: iconst_1
59: newarray       double
61: dup
62: iconst_0
63: ldc2_w        #45
66: dastore
67: astore        6
69: aload         6
71: invokestatic  #47
74: astore        7
76: new           #48
79: dup
80: aload         4
82: aload         6
84: invokespecial #49
87: astore        8
89: new           #48
92: dup
93: invokespecial #64
96: astore        9
98: aload         9
100: ldc2_w        #65
103: invokevirtual #67
106: astore        10
108: aload         9
110: dconst_1
111: invokevirtual #68
114: new           #48
117: dup
118: invokespecial #64
121: astore        11
123: aload         11
125: ldc2_w        #65
128: invokevirtual #67
131: astore        12
133: new           #48
136: dup
137: invokespecial #64
140: astore        13
142: aload         13
144: ldc2_w        #65
147: invokevirtual #67
150: astore        14
152: aload         11
154: aload         14
156: invokevirtual #69
159: astore        15
161: aload         9
163: aload         11
165: invokevirtual #70
168: dstore        16
170: new           #48
173: dup
174: invokespecial #64
177: astore        18
179: aload         18
181: ldc2_w        #65
184: invokevirtual #67
187: astore        19
189: aload         9
191: aload         19
193: invokevirtual #71
196: astore        20
198: new           #48
201: dup
202: invokespecial #64
205: astore        21
207: aload         21
209: invokevirtual #72
212: astore        22
214: new           #48
217: dup
218: aload         9
220: aload         22
222: invokespecial #73
225: astore        23
227: new           #101
230: dup
231: aload         4
233: aload         22
235: iconst_1
236: invokespecial #102
239: astore        24
241: aload_2
242: aload         22
244: ldc2_w        #128
247: invokevirtual #84
250: astore        25
252: ldc           #12
254: invokestatic  #13
257: goto          262
260: astore        25
262: new           #52
265: dup
266: invokespecial #53
269: ldc           #54
271: invokevirtual #55
274: iload_3
275: invokevirtual #56
278: ldc           #57
280: invokevirtual #55
283: iconst_0
284: invokevirtual #56
287: ldc           #54
289: invokevirtual #55
292: invokevirtual #58
295: iload_3
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #59
307: aload         4
309: invokestatic  #35
312: aload         4
314: invokestatic  #36
317: ldc           #60
319: invokestatic  #38
322: aload         5
324: invokestatic  #35
327: aload         6
329: invokestatic  #35
332: aload         6
334: invokestatic  #36
337: ldc           #60
339: invokestatic  #38
342: aload         7
344: invokestatic  #35
347: aload         10
349: invokestatic  #35
352: aload         12
354: invokestatic  #35
357: aload         14
359: invokestatic  #35
362: aload         15
364: invokestatic  #35
367: new           #52
370: dup
371: invokespecial #53
374: ldc           #54
376: invokevirtual #55
379: dload         16
381: invokevirtual #80
384: ldc           #57
386: invokevirtual #55
389: dconst_0
390: invokevirtual #80
393: ldc           #54
395: invokevirtual #55
398: invokevirtual #58
401: dload         16
403: dconst_0
404: dcmpl
405: ifne          412
408: iconst_1
409: goto          413
412: iconst_0
413: invokestatic  #59
416: aload         19
418: invokestatic  #35
421: aload         20
423: invokestatic  #35
426: aload         22
428: invokestatic  #35
431: aload         22
433: invokestatic  #36
436: ldc           #81
438: invokestatic  #38
441: return
Exception table:
from    to  target type
241   257   260   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 536
End line: 553
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math3.exception.NumberIsTooLargeException numberIsTooLargeException3 = new org.apache.commons.math3.exception.NumberIsTooLargeException((java.lang.Number) (byte) 100, (java.lang.Number) (-1.0f), false);
        org.apache.commons.math3.exception.util.Localizable localizable4 = null;
        org.apache.commons.math3.exception.NotPositiveException notPositiveException6 = new org.apache.commons.math3.exception.NotPositiveException(localizable4, (java.lang.Number) 10.0f);
        numberIsTooLargeException3.addSuppressed((java.lang.Throwable) notPositiveException6);
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker9 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer10 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(false, pointVectorValuePairConvergenceChecker9);
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer> mathIllegalArgumentExceptionPair11 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer>((org.apache.commons.math3.exception.MathIllegalArgumentException) notPositiveException6, gaussNewtonOptimizer10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair12 = gaussNewtonOptimizer10.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #130
19: aastore
20: invokevirtual #7
23: pop
24: new           #131
27: dup
28: bipush        100
30: invokestatic  #132
33: ldc           #133
35: invokestatic  #134
38: iconst_0
39: invokespecial #135
42: astore_1
43: aconst_null
44: astore_2
45: new           #136
48: dup
49: aload_2
50: ldc           #137
52: invokestatic  #134
55: invokespecial #138
58: astore_3
59: aload_1
60: aload_3
61: invokevirtual #139
64: aconst_null
65: astore        4
67: new           #62
70: dup
71: iconst_0
72: aload         4
74: invokespecial #140
77: astore        5
79: new           #141
82: dup
83: aload_3
84: aload         5
86: invokespecial #142
89: astore        6
91: aload         5
93: invokevirtual #123
96: astore        7
98: ldc           #124
100: invokestatic  #13
103: goto          108
106: astore        7
108: return
Exception table:
from    to  target type
91   103   106   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 556
End line: 621
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer2 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(true, pointVectorValuePairConvergenceChecker1);
        double[] doubleArray6 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix8 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray6, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix10 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray6, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess11 = new org.apache.commons.math3.optim.InitialGuess(doubleArray6);
        double[] doubleArray12 = initialGuess11.getInitialGuess();
        org.apache.commons.math3.optim.MaxIter maxIter14 = new org.apache.commons.math3.optim.MaxIter((int) (short) 10);
        double[] doubleArray18 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix20 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray18, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray18, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess23 = new org.apache.commons.math3.optim.InitialGuess(doubleArray18);
        double[] doubleArray24 = initialGuess23.getInitialGuess();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        arrayRealVector25.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector32 = arrayRealVector30.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector30.append(realVector35);
        double double37 = arrayRealVector25.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector40 = arrayRealVector38.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector25.subtract(realVector40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray43 = arrayRealVector42.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector25, doubleArray43);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight45 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray43);
        org.apache.commons.math3.optim.MaxIter maxIter47 = new org.apache.commons.math3.optim.MaxIter((int) (short) 10);
        double[] doubleArray49 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix50 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray49);
        org.apache.commons.math3.optim.nonlinear.vector.Target target51 = new org.apache.commons.math3.optim.nonlinear.vector.Target(doubleArray49);
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray52 = new org.apache.commons.math3.optim.OptimizationData[] { initialGuess11, maxIter14, initialGuess23, weight45, maxIter47, target51 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair53 = gaussNewtonOptimizer2.optimize(optimizationDataArray52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(optimizationDataArray52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #143
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: iconst_1
31: aload_1
32: invokespecial #140
35: astore_2
36: iconst_3
37: newarray       double
39: dup
40: iconst_0
41: dconst_1
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #21
48: dastore
49: dup
50: iconst_2
51: dconst_1
52: dastore
53: astore_3
54: new           #23
57: dup
58: aload_3
59: iconst_1
60: invokespecial #24
63: astore        4
65: new           #23
68: dup
69: aload_3
70: iconst_1
71: invokespecial #24
74: astore        5
76: new           #118
79: dup
80: aload_3
81: invokespecial #119
84: astore        6
86: aload         6
88: invokevirtual #120
91: astore        7
93: new           #144
96: dup
97: bipush        10
99: invokespecial #145
102: astore        8
104: iconst_3
105: newarray       double
107: dup
108: iconst_0
109: dconst_1
110: dastore
111: dup
112: iconst_1
113: ldc2_w        #21
116: dastore
117: dup
118: iconst_2
119: dconst_1
120: dastore
121: astore        9
123: new           #23
126: dup
127: aload         9
129: iconst_1
130: invokespecial #24
133: astore        10
135: new           #23
138: dup
139: aload         9
141: iconst_1
142: invokespecial #24
145: astore        11
147: new           #118
150: dup
151: aload         9
153: invokespecial #119
156: astore        12
158: aload         12
160: invokevirtual #120
163: astore        13
165: new           #48
168: dup
169: invokespecial #64
172: astore        14
174: aload         14
176: ldc2_w        #65
179: invokevirtual #67
182: astore        15
184: aload         14
186: dconst_1
187: invokevirtual #68
190: new           #48
193: dup
194: invokespecial #64
197: astore        16
199: aload         16
201: ldc2_w        #65
204: invokevirtual #67
207: astore        17
209: new           #48
212: dup
213: invokespecial #64
216: astore        18
218: aload         18
220: ldc2_w        #65
223: invokevirtual #67
226: astore        19
228: aload         16
230: aload         19
232: invokevirtual #69
235: astore        20
237: aload         14
239: aload         16
241: invokevirtual #70
244: dstore        21
246: new           #48
249: dup
250: invokespecial #64
253: astore        23
255: aload         23
257: ldc2_w        #65
260: invokevirtual #67
263: astore        24
265: aload         14
267: aload         24
269: invokevirtual #71
272: astore        25
274: new           #48
277: dup
278: invokespecial #64
281: astore        26
283: aload         26
285: invokevirtual #72
288: astore        27
290: new           #48
293: dup
294: aload         14
296: aload         27
298: invokespecial #73
301: astore        28
303: new           #30
306: dup
307: aload         27
309: invokespecial #74
312: astore        29
314: new           #144
317: dup
318: bipush        10
320: invokespecial #145
323: astore        30
325: iconst_1
326: newarray       double
328: dup
329: iconst_0
330: ldc2_w        #45
333: dastore
334: astore        31
336: aload         31
338: invokestatic  #47
341: astore        32
343: new           #146
346: dup
347: aload         31
349: invokespecial #147
352: astore        33
354: bipush        6
356: anewarray     #76
359: dup
360: iconst_0
361: aload         6
363: aastore
364: dup
365: iconst_1
366: aload         8
368: aastore
369: dup
370: iconst_2
371: aload         12
373: aastore
374: dup
375: iconst_3
376: aload         29
378: aastore
379: dup
380: iconst_4
381: aload         30
383: aastore
384: dup
385: iconst_5
386: aload         33
388: aastore
389: astore        34
391: aload_2
392: aload         34
394: invokevirtual #77
397: astore        35
399: ldc           #78
401: invokestatic  #13
404: goto          409
407: astore        35
409: aload_3
410: invokestatic  #35
413: aload_3
414: invokestatic  #36
417: ldc           #37
419: invokestatic  #38
422: aload         7
424: invokestatic  #35
427: aload         7
429: invokestatic  #36
432: ldc           #37
434: invokestatic  #38
437: aload         9
439: invokestatic  #35
442: aload         9
444: invokestatic  #36
447: ldc           #37
449: invokestatic  #38
452: aload         13
454: invokestatic  #35
457: aload         13
459: invokestatic  #36
462: ldc           #37
464: invokestatic  #38
467: aload         15
469: invokestatic  #35
472: aload         17
474: invokestatic  #35
477: aload         19
479: invokestatic  #35
482: aload         20
484: invokestatic  #35
487: new           #52
490: dup
491: invokespecial #53
494: ldc           #54
496: invokevirtual #55
499: dload         21
501: invokevirtual #80
504: ldc           #57
506: invokevirtual #55
509: dconst_0
510: invokevirtual #80
513: ldc           #54
515: invokevirtual #55
518: invokevirtual #58
521: dload         21
523: dconst_0
524: dcmpl
525: ifne          532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #59
536: aload         24
538: invokestatic  #35
541: aload         25
543: invokestatic  #35
546: aload         27
548: invokestatic  #35
551: aload         27
553: invokestatic  #36
556: ldc           #81
558: invokestatic  #38
561: aload         31
563: invokestatic  #35
566: aload         31
568: invokestatic  #36
571: ldc           #60
573: invokestatic  #38
576: aload         32
578: invokestatic  #35
581: aload         34
583: invokestatic  #35
586: return
Exception table:
from    to  target type
391   404   407   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 624
End line: 628
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 8.7501722E8f, 2.5934433098363465d, (double) 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #149
31: ldc2_w        #95
34: ldc2_w        #151
37: invokespecial #153
40: astore_1
41: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 631
End line: 739
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix0 = new org.apache.commons.math3.linear.Array2DRowRealMatrix();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector3 = arrayRealVector1.mapDivideToSelf((double) (byte) -1);
        arrayRealVector1.set((double) 1);
        java.lang.Double[] doubleArray6 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        double double8 = arrayRealVector1.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector7);
        java.lang.Double[] doubleArray9 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray9);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = arrayRealVector7.append(arrayRealVector10);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector14.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = arrayRealVector7.combineToSelf(32.00000000000001d, 0.8813735870195429d, realVector16);
        boolean boolean18 = arrayRealVector17.isInfinite();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector19.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector22.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector19.append(realVector24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector26.mapDivideToSelf((double) (byte) -1);
        arrayRealVector26.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector34.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector37 = arrayRealVector31.append(realVector36);
        double double38 = arrayRealVector26.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector39.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector42 = arrayRealVector26.subtract(realVector41);
        org.apache.commons.math3.linear.RealVector realVector44 = arrayRealVector26.append((double) 1.0f);
        org.apache.commons.math3.linear.RealVector realVector45 = arrayRealVector19.ebeMultiply((org.apache.commons.math3.linear.RealVector) arrayRealVector26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector48 = arrayRealVector46.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector51 = arrayRealVector49.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector52 = arrayRealVector46.append(realVector51);
        double double53 = realVector45.getL1Distance(realVector52);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector17, realVector45);
        double[] doubleArray55 = arrayRealVector54.toArray();
        org.apache.commons.math3.linear.RealVector realVector56 = array2DRowRealMatrix0.operate((org.apache.commons.math3.linear.RealVector) arrayRealVector54);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector59 = arrayRealVector57.mapDivideToSelf((double) (byte) -1);
        arrayRealVector57.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector64 = arrayRealVector62.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector65.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector68 = arrayRealVector62.append(realVector67);
        double double69 = arrayRealVector57.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector62);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector70 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector72 = arrayRealVector70.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector73 = arrayRealVector57.subtract(realVector72);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray75 = arrayRealVector74.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector76 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector57, doubleArray75);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight77 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray75);
        org.apache.commons.math3.linear.RealMatrix realMatrix78 = weight77.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix79 = weight77.getWeight();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix80 = array2DRowRealMatrix0.add(realMatrix79);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(arrayRealVector11);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(realVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertNotNull(realVector56);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(realVector64);
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(realVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(realVector73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertNotNull(realMatrix78);
        org.junit.Assert.assertNotNull(realMatrix79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #154
19: aastore
20: invokevirtual #7
23: pop
24: new           #155
27: dup
28: invokespecial #156
31: astore_1
32: new           #48
35: dup
36: invokespecial #64
39: astore_2
40: aload_2
41: ldc2_w        #65
44: invokevirtual #67
47: astore_3
48: aload_2
49: dconst_1
50: invokevirtual #68
53: iconst_0
54: anewarray     #97
57: astore        4
59: new           #48
62: dup
63: aload         4
65: invokespecial #107
68: astore        5
70: aload_2
71: aload         5
73: invokevirtual #70
76: dstore        6
78: iconst_0
79: anewarray     #97
82: astore        8
84: new           #48
87: dup
88: aload         8
90: invokespecial #107
93: astore        9
95: aload         5
97: aload         9
99: invokevirtual #108
102: astore        10
104: new           #48
107: dup
108: invokespecial #64
111: astore        11
113: aload         11
115: ldc2_w        #65
118: invokevirtual #67
121: astore        12
123: aload         5
125: ldc2_w        #157
128: ldc2_w        #159
131: aload         12
133: invokevirtual #161
136: astore        13
138: aload         13
140: invokevirtual #162
143: istore        14
145: new           #48
148: dup
149: invokespecial #64
152: astore        15
154: aload         15
156: ldc2_w        #65
159: invokevirtual #67
162: astore        16
164: new           #48
167: dup
168: invokespecial #64
171: astore        17
173: aload         17
175: ldc2_w        #65
178: invokevirtual #67
181: astore        18
183: aload         15
185: aload         18
187: invokevirtual #69
190: astore        19
192: new           #48
195: dup
196: invokespecial #64
199: astore        20
201: aload         20
203: ldc2_w        #65
206: invokevirtual #67
209: astore        21
211: aload         20
213: dconst_1
214: invokevirtual #68
217: new           #48
220: dup
221: invokespecial #64
224: astore        22
226: aload         22
228: ldc2_w        #65
231: invokevirtual #67
234: astore        23
236: new           #48
239: dup
240: invokespecial #64
243: astore        24
245: aload         24
247: ldc2_w        #65
250: invokevirtual #67
253: astore        25
255: aload         22
257: aload         25
259: invokevirtual #69
262: astore        26
264: aload         20
266: aload         22
268: invokevirtual #70
271: dstore        27
273: new           #48
276: dup
277: invokespecial #64
280: astore        29
282: aload         29
284: ldc2_w        #65
287: invokevirtual #67
290: astore        30
292: aload         20
294: aload         30
296: invokevirtual #71
299: astore        31
301: aload         20
303: dconst_1
304: invokevirtual #163
307: astore        32
309: aload         15
311: aload         20
313: invokevirtual #164
316: astore        33
318: new           #48
321: dup
322: invokespecial #64
325: astore        34
327: aload         34
329: ldc2_w        #65
332: invokevirtual #67
335: astore        35
337: new           #48
340: dup
341: invokespecial #64
344: astore        36
346: aload         36
348: ldc2_w        #65
351: invokevirtual #67
354: astore        37
356: aload         34
358: aload         37
360: invokevirtual #69
363: astore        38
365: aload         33
367: aload         38
369: invokevirtual #165
372: dstore        39
374: new           #48
377: dup
378: aload         13
380: aload         33
382: invokespecial #166
385: astore        41
387: aload         41
389: invokevirtual #167
392: astore        42
394: aload_1
395: aload         41
397: invokevirtual #168
400: astore        43
402: new           #48
405: dup
406: invokespecial #64
409: astore        44
411: aload         44
413: ldc2_w        #65
416: invokevirtual #67
419: astore        45
421: aload         44
423: dconst_1
424: invokevirtual #68
427: new           #48
430: dup
431: invokespecial #64
434: astore        46
436: aload         46
438: ldc2_w        #65
441: invokevirtual #67
444: astore        47
446: new           #48
449: dup
450: invokespecial #64
453: astore        48
455: aload         48
457: ldc2_w        #65
460: invokevirtual #67
463: astore        49
465: aload         46
467: aload         49
469: invokevirtual #69
472: astore        50
474: aload         44
476: aload         46
478: invokevirtual #70
481: dstore        51
483: new           #48
486: dup
487: invokespecial #64
490: astore        53
492: aload         53
494: ldc2_w        #65
497: invokevirtual #67
500: astore        54
502: aload         44
504: aload         54
506: invokevirtual #71
509: astore        55
511: new           #48
514: dup
515: invokespecial #64
518: astore        56
520: aload         56
522: invokevirtual #72
525: astore        57
527: new           #48
530: dup
531: aload         44
533: aload         57
535: invokespecial #73
538: astore        58
540: new           #30
543: dup
544: aload         57
546: invokespecial #74
549: astore        59
551: aload         59
553: invokevirtual #75
556: astore        60
558: aload         59
560: invokevirtual #75
563: astore        61
565: aload_1
566: aload         61
568: invokevirtual #169
571: astore        62
573: ldc           #78
575: invokestatic  #13
578: goto          583
581: astore        62
583: aload_3
584: invokestatic  #35
587: aload         4
589: invokestatic  #35
592: new           #52
595: dup
596: invokespecial #53
599: ldc           #54
601: invokevirtual #55
604: dload         6
606: invokevirtual #80
609: ldc           #57
611: invokevirtual #55
614: dconst_0
615: invokevirtual #80
618: ldc           #54
620: invokevirtual #55
623: invokevirtual #58
626: dload         6
628: dconst_0
629: dcmpl
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #59
641: aload         8
643: invokestatic  #35
646: aload         10
648: invokestatic  #35
651: aload         12
653: invokestatic  #35
656: aload         13
658: invokestatic  #35
661: new           #52
664: dup
665: invokespecial #53
668: ldc           #54
670: invokevirtual #55
673: iload         14
675: invokevirtual #170
678: ldc           #57
680: invokevirtual #55
683: iconst_0
684: invokevirtual #170
687: ldc           #54
689: invokevirtual #55
692: invokevirtual #58
695: iload         14
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #59
708: aload         16
710: invokestatic  #35
713: aload         18
715: invokestatic  #35
718: aload         19
720: invokestatic  #35
723: aload         21
725: invokestatic  #35
728: aload         23
730: invokestatic  #35
733: aload         25
735: invokestatic  #35
738: aload         26
740: invokestatic  #35
743: new           #52
746: dup
747: invokespecial #53
750: ldc           #54
752: invokevirtual #55
755: dload         27
757: invokevirtual #80
760: ldc           #57
762: invokevirtual #55
765: dconst_0
766: invokevirtual #80
769: ldc           #54
771: invokevirtual #55
774: invokevirtual #58
777: dload         27
779: dconst_0
780: dcmpl
781: ifne          788
784: iconst_1
785: goto          789
788: iconst_0
789: invokestatic  #59
792: aload         30
794: invokestatic  #35
797: aload         31
799: invokestatic  #35
802: aload         32
804: invokestatic  #35
807: aload         33
809: invokestatic  #35
812: aload         35
814: invokestatic  #35
817: aload         37
819: invokestatic  #35
822: aload         38
824: invokestatic  #35
827: new           #52
830: dup
831: invokespecial #53
834: ldc           #54
836: invokevirtual #55
839: dload         39
841: invokevirtual #80
844: ldc           #57
846: invokevirtual #55
849: dconst_0
850: invokevirtual #80
853: ldc           #54
855: invokevirtual #55
858: invokevirtual #58
861: dload         39
863: dconst_0
864: dcmpl
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #59
876: aload         42
878: invokestatic  #35
881: aload         42
883: invokestatic  #36
886: ldc           #81
888: invokestatic  #38
891: aload         43
893: invokestatic  #35
896: aload         45
898: invokestatic  #35
901: aload         47
903: invokestatic  #35
906: aload         49
908: invokestatic  #35
911: aload         50
913: invokestatic  #35
916: new           #52
919: dup
920: invokespecial #53
923: ldc           #54
925: invokevirtual #55
928: dload         51
930: invokevirtual #80
933: ldc           #57
935: invokevirtual #55
938: dconst_0
939: invokevirtual #80
942: ldc           #54
944: invokevirtual #55
947: invokevirtual #58
950: dload         51
952: dconst_0
953: dcmpl
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #59
965: aload         54
967: invokestatic  #35
970: aload         55
972: invokestatic  #35
975: aload         57
977: invokestatic  #35
980: aload         57
982: invokestatic  #36
985: ldc           #81
987: invokestatic  #38
990: aload         60
992: invokestatic  #35
995: aload         61
997: invokestatic  #35
1000: return
Exception table:
from    to  target type
565   578   581   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 742
End line: 767
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        double[] doubleArray7 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray4, doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = levenbergMarquardtOptimizer1.computeCost(doubleArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #171
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #44
39: istore_3
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore        4
51: aload         4
53: invokestatic  #47
56: astore        5
58: iconst_1
59: newarray       double
61: dup
62: iconst_0
63: ldc2_w        #45
66: dastore
67: astore        6
69: aload         6
71: invokestatic  #47
74: astore        7
76: new           #48
79: dup
80: aload         4
82: aload         6
84: invokespecial #49
87: astore        8
89: aload_2
90: aload         4
92: invokevirtual #172
95: dstore        9
97: ldc           #12
99: invokestatic  #13
102: goto          107
105: astore        9
107: new           #52
110: dup
111: invokespecial #53
114: ldc           #54
116: invokevirtual #55
119: iload_3
120: invokevirtual #56
123: ldc           #57
125: invokevirtual #55
128: iconst_0
129: invokevirtual #56
132: ldc           #54
134: invokevirtual #55
137: invokevirtual #58
140: iload_3
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #59
152: aload         4
154: invokestatic  #35
157: aload         4
159: invokestatic  #36
162: ldc           #60
164: invokestatic  #38
167: aload         5
169: invokestatic  #35
172: aload         6
174: invokestatic  #35
177: aload         6
179: invokestatic  #36
182: ldc           #60
184: invokestatic  #38
187: aload         7
189: invokestatic  #35
192: return
Exception table:
from    to  target type
89   102   105   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 770
End line: 867
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20);
        double[][] doubleArray23 = diagonalMatrix22.getData();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight24 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector28.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector31 = arrayRealVector25.append(realVector30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector37 = arrayRealVector35.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector32.append(realVector37);
        double double39 = arrayRealVector25.dotProduct(realVector37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector42 = arrayRealVector40.mapDivideToSelf((double) (byte) -1);
        arrayRealVector40.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector47 = arrayRealVector45.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector50 = arrayRealVector48.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector51 = arrayRealVector45.append(realVector50);
        double double52 = arrayRealVector40.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector45);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector55 = arrayRealVector53.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector56 = arrayRealVector40.subtract(realVector55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector59 = arrayRealVector57.mapDivideToSelf((double) (byte) -1);
        arrayRealVector57.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector64 = arrayRealVector62.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector65.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector68 = arrayRealVector62.append(realVector67);
        double double69 = arrayRealVector57.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector62);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector70 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector72 = arrayRealVector70.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector73 = arrayRealVector57.subtract(realVector72);
        org.apache.commons.math3.linear.RealVector realVector74 = arrayRealVector40.ebeDivide(realVector72);
        double double75 = arrayRealVector25.dotProduct(realVector74);
        double[] doubleArray76 = arrayRealVector25.toArray();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = diagonalMatrix22.preMultiply(doubleArray76);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 3 != 0");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector50);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertNotNull(realVector56);
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(realVector64);
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(realVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(realVector73);
        org.junit.Assert.assertNotNull(realVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #21
36: dastore
37: dup
38: iconst_2
39: dconst_1
40: dastore
41: astore_1
42: new           #23
45: dup
46: aload_1
47: iconst_1
48: invokespecial #24
51: astore_2
52: aload_2
53: iconst_0
54: invokevirtual #25
57: astore_3
58: iconst_3
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #21
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: astore        4
77: new           #23
80: dup
81: aload         4
83: iconst_1
84: invokespecial #24
87: astore        5
89: iconst_3
90: newarray       double
92: dup
93: iconst_0
94: dconst_1
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #21
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: astore        6
108: new           #23
111: dup
112: aload         6
114: iconst_1
115: invokespecial #24
118: astore        7
120: aload         5
122: aload         6
124: invokevirtual #26
127: astore        8
129: aload_2
130: aload         8
132: invokevirtual #27
135: astore        9
137: new           #23
140: dup
141: aload         8
143: invokespecial #28
146: astore        10
148: aload         10
150: invokevirtual #29
153: astore        11
155: new           #30
158: dup
159: aload         10
161: invokespecial #31
164: astore        12
166: new           #48
169: dup
170: invokespecial #64
173: astore        13
175: aload         13
177: ldc2_w        #65
180: invokevirtual #67
183: astore        14
185: new           #48
188: dup
189: invokespecial #64
192: astore        15
194: aload         15
196: ldc2_w        #65
199: invokevirtual #67
202: astore        16
204: aload         13
206: aload         16
208: invokevirtual #69
211: astore        17
213: new           #48
216: dup
217: invokespecial #64
220: astore        18
222: aload         18
224: ldc2_w        #65
227: invokevirtual #67
230: astore        19
232: new           #48
235: dup
236: invokespecial #64
239: astore        20
241: aload         20
243: ldc2_w        #65
246: invokevirtual #67
249: astore        21
251: aload         18
253: aload         21
255: invokevirtual #69
258: astore        22
260: aload         13
262: aload         21
264: invokevirtual #174
267: dstore        23
269: new           #48
272: dup
273: invokespecial #64
276: astore        25
278: aload         25
280: ldc2_w        #65
283: invokevirtual #67
286: astore        26
288: aload         25
290: dconst_1
291: invokevirtual #68
294: new           #48
297: dup
298: invokespecial #64
301: astore        27
303: aload         27
305: ldc2_w        #65
308: invokevirtual #67
311: astore        28
313: new           #48
316: dup
317: invokespecial #64
320: astore        29
322: aload         29
324: ldc2_w        #65
327: invokevirtual #67
330: astore        30
332: aload         27
334: aload         30
336: invokevirtual #69
339: astore        31
341: aload         25
343: aload         27
345: invokevirtual #70
348: dstore        32
350: new           #48
353: dup
354: invokespecial #64
357: astore        34
359: aload         34
361: ldc2_w        #65
364: invokevirtual #67
367: astore        35
369: aload         25
371: aload         35
373: invokevirtual #71
376: astore        36
378: new           #48
381: dup
382: invokespecial #64
385: astore        37
387: aload         37
389: ldc2_w        #65
392: invokevirtual #67
395: astore        38
397: aload         37
399: dconst_1
400: invokevirtual #68
403: new           #48
406: dup
407: invokespecial #64
410: astore        39
412: aload         39
414: ldc2_w        #65
417: invokevirtual #67
420: astore        40
422: new           #48
425: dup
426: invokespecial #64
429: astore        41
431: aload         41
433: ldc2_w        #65
436: invokevirtual #67
439: astore        42
441: aload         39
443: aload         42
445: invokevirtual #69
448: astore        43
450: aload         37
452: aload         39
454: invokevirtual #70
457: dstore        44
459: new           #48
462: dup
463: invokespecial #64
466: astore        46
468: aload         46
470: ldc2_w        #65
473: invokevirtual #67
476: astore        47
478: aload         37
480: aload         47
482: invokevirtual #71
485: astore        48
487: aload         25
489: aload         47
491: invokevirtual #175
494: astore        49
496: aload         13
498: aload         49
500: invokevirtual #174
503: dstore        50
505: aload         13
507: invokevirtual #167
510: astore        52
512: aload         10
514: aload         52
516: invokevirtual #27
519: astore        53
521: ldc           #176
523: invokestatic  #13
526: goto          531
529: astore        53
531: aload_1
532: invokestatic  #35
535: aload_1
536: invokestatic  #36
539: ldc           #37
541: invokestatic  #38
544: aload_3
545: invokestatic  #35
548: aload         4
550: invokestatic  #35
553: aload         4
555: invokestatic  #36
558: ldc           #37
560: invokestatic  #38
563: aload         6
565: invokestatic  #35
568: aload         6
570: invokestatic  #36
573: ldc           #37
575: invokestatic  #38
578: aload         8
580: invokestatic  #35
583: aload         8
585: invokestatic  #36
588: ldc           #39
590: invokestatic  #38
593: aload         9
595: invokestatic  #35
598: aload         9
600: invokestatic  #36
603: ldc           #40
605: invokestatic  #38
608: aload         11
610: invokestatic  #35
613: aload         14
615: invokestatic  #35
618: aload         16
620: invokestatic  #35
623: aload         17
625: invokestatic  #35
628: aload         19
630: invokestatic  #35
633: aload         21
635: invokestatic  #35
638: aload         22
640: invokestatic  #35
643: new           #52
646: dup
647: invokespecial #53
650: ldc           #54
652: invokevirtual #55
655: dload         23
657: invokevirtual #80
660: ldc           #57
662: invokevirtual #55
665: dconst_0
666: invokevirtual #80
669: ldc           #54
671: invokevirtual #55
674: invokevirtual #58
677: dload         23
679: dconst_0
680: dcmpl
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #59
692: aload         26
694: invokestatic  #35
697: aload         28
699: invokestatic  #35
702: aload         30
704: invokestatic  #35
707: aload         31
709: invokestatic  #35
712: new           #52
715: dup
716: invokespecial #53
719: ldc           #54
721: invokevirtual #55
724: dload         32
726: invokevirtual #80
729: ldc           #57
731: invokevirtual #55
734: dconst_0
735: invokevirtual #80
738: ldc           #54
740: invokevirtual #55
743: invokevirtual #58
746: dload         32
748: dconst_0
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #59
761: aload         35
763: invokestatic  #35
766: aload         36
768: invokestatic  #35
771: aload         38
773: invokestatic  #35
776: aload         40
778: invokestatic  #35
781: aload         42
783: invokestatic  #35
786: aload         43
788: invokestatic  #35
791: new           #52
794: dup
795: invokespecial #53
798: ldc           #54
800: invokevirtual #55
803: dload         44
805: invokevirtual #80
808: ldc           #57
810: invokevirtual #55
813: dconst_0
814: invokevirtual #80
817: ldc           #54
819: invokevirtual #55
822: invokevirtual #58
825: dload         44
827: dconst_0
828: dcmpl
829: ifne          836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #59
840: aload         47
842: invokestatic  #35
845: aload         48
847: invokestatic  #35
850: aload         49
852: invokestatic  #35
855: new           #52
858: dup
859: invokespecial #53
862: ldc           #54
864: invokevirtual #55
867: dload         50
869: invokevirtual #80
872: ldc           #57
874: invokevirtual #55
877: dconst_0
878: invokevirtual #80
881: ldc           #54
883: invokevirtual #55
886: invokevirtual #58
889: dload         50
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #59
904: aload         52
906: invokestatic  #35
909: aload         52
911: invokestatic  #36
914: ldc           #81
916: invokestatic  #38
919: return
Exception table:
from    to  target type
512   526   529   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 870
End line: 937
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric4 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray8 = new double[] { 2.5934433098363465d, Double.NEGATIVE_INFINITY };
        double[] doubleArray9 = parametric4.gradient((double) (-1.0f), doubleArray8);
        double[] doubleArray12 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray12);
        double[] doubleArray15 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix16 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray12, doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector18.mapDivideToSelf((double) (byte) -1);
        arrayRealVector18.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector26.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector29 = arrayRealVector23.append(realVector28);
        double double30 = arrayRealVector18.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector18.subtract(realVector33);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray36 = arrayRealVector35.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector18, doubleArray36);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair39 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray12, doubleArray36, true);
        double[] doubleArray40 = pointVectorValuePair39.getValueRef();
        org.apache.commons.math3.linear.RealVector realVector41 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray40);
        double[] doubleArray42 = parametric4.gradient((double) 'a', doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = levenbergMarquardtOptimizer1.computeCost(doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[2.5934433098363465, -Infinity]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #177
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #44
39: istore_3
40: aload_2
41: invokevirtual #83
44: astore        4
46: new           #93
49: dup
50: invokespecial #94
53: astore        5
55: iconst_2
56: newarray       double
58: dup
59: iconst_0
60: ldc2_w        #95
63: dastore
64: dup
65: iconst_1
66: ldc2_w        #98
69: dastore
70: astore        6
72: aload         5
74: ldc2_w        #65
77: aload         6
79: invokevirtual #100
82: astore        7
84: iconst_1
85: newarray       double
87: dup
88: iconst_0
89: ldc2_w        #45
92: dastore
93: astore        8
95: aload         8
97: invokestatic  #47
100: astore        9
102: iconst_1
103: newarray       double
105: dup
106: iconst_0
107: ldc2_w        #45
110: dastore
111: astore        10
113: aload         10
115: invokestatic  #47
118: astore        11
120: new           #48
123: dup
124: aload         8
126: aload         10
128: invokespecial #49
131: astore        12
133: new           #48
136: dup
137: invokespecial #64
140: astore        13
142: aload         13
144: ldc2_w        #65
147: invokevirtual #67
150: astore        14
152: aload         13
154: dconst_1
155: invokevirtual #68
158: new           #48
161: dup
162: invokespecial #64
165: astore        15
167: aload         15
169: ldc2_w        #65
172: invokevirtual #67
175: astore        16
177: new           #48
180: dup
181: invokespecial #64
184: astore        17
186: aload         17
188: ldc2_w        #65
191: invokevirtual #67
194: astore        18
196: aload         15
198: aload         18
200: invokevirtual #69
203: astore        19
205: aload         13
207: aload         15
209: invokevirtual #70
212: dstore        20
214: new           #48
217: dup
218: invokespecial #64
221: astore        22
223: aload         22
225: ldc2_w        #65
228: invokevirtual #67
231: astore        23
233: aload         13
235: aload         23
237: invokevirtual #71
240: astore        24
242: new           #48
245: dup
246: invokespecial #64
249: astore        25
251: aload         25
253: invokevirtual #72
256: astore        26
258: new           #48
261: dup
262: aload         13
264: aload         26
266: invokespecial #73
269: astore        27
271: new           #101
274: dup
275: aload         8
277: aload         26
279: iconst_1
280: invokespecial #102
283: astore        28
285: aload         28
287: invokevirtual #103
290: astore        29
292: aload         29
294: invokestatic  #104
297: astore        30
299: aload         5
301: ldc2_w        #105
304: aload         29
306: invokevirtual #100
309: astore        31
311: aload_2
312: aload         31
314: invokevirtual #172
317: dstore        32
319: ldc           #12
321: invokestatic  #13
324: goto          329
327: astore        32
329: new           #52
332: dup
333: invokespecial #53
336: ldc           #54
338: invokevirtual #55
341: iload_3
342: invokevirtual #56
345: ldc           #57
347: invokevirtual #55
350: iconst_0
351: invokevirtual #56
354: ldc           #54
356: invokevirtual #55
359: invokevirtual #58
362: iload_3
363: ifne          370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #59
374: aload         4
376: invokestatic  #15
379: aload         6
381: invokestatic  #35
384: aload         6
386: invokestatic  #36
389: ldc           #110
391: invokestatic  #38
394: aload         7
396: invokestatic  #35
399: aload         7
401: invokestatic  #36
404: ldc           #111
406: invokestatic  #38
409: aload         8
411: invokestatic  #35
414: aload         8
416: invokestatic  #36
419: ldc           #60
421: invokestatic  #38
424: aload         9
426: invokestatic  #35
429: aload         10
431: invokestatic  #35
434: aload         10
436: invokestatic  #36
439: ldc           #60
441: invokestatic  #38
444: aload         11
446: invokestatic  #35
449: aload         14
451: invokestatic  #35
454: aload         16
456: invokestatic  #35
459: aload         18
461: invokestatic  #35
464: aload         19
466: invokestatic  #35
469: new           #52
472: dup
473: invokespecial #53
476: ldc           #54
478: invokevirtual #55
481: dload         20
483: invokevirtual #80
486: ldc           #57
488: invokevirtual #55
491: dconst_0
492: invokevirtual #80
495: ldc           #54
497: invokevirtual #55
500: invokevirtual #58
503: dload         20
505: dconst_0
506: dcmpl
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #59
518: aload         23
520: invokestatic  #35
523: aload         24
525: invokestatic  #35
528: aload         26
530: invokestatic  #35
533: aload         26
535: invokestatic  #36
538: ldc           #81
540: invokestatic  #38
543: aload         29
545: invokestatic  #35
548: aload         29
550: invokestatic  #36
553: ldc           #81
555: invokestatic  #38
558: aload         30
560: invokestatic  #35
563: aload         31
565: invokestatic  #35
568: aload         31
570: invokestatic  #36
573: ldc           #81
575: invokestatic  #38
578: return
Exception table:
from    to  target type
311   324   327   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 940
End line: 956
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getLowerBound();
        // The following exception was thrown during execution in test generation
        try {
            double double4 = levenbergMarquardtOptimizer1.getRMS();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #178
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #10
39: astore_3
40: aload_2
41: invokevirtual #10
44: astore        4
46: aload_2
47: invokevirtual #179
50: dstore        5
52: ldc           #12
54: invokestatic  #13
57: goto          62
60: astore        5
62: aload_3
63: invokestatic  #15
66: aload         4
68: invokestatic  #15
71: return
Exception table:
from    to  target type
46    57    60   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 959
End line: 965
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        org.junit.Assert.assertNull(doubleArray4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #181
31: ldc2_w        #183
34: ldc2_w        #151
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #10
45: astore_2
46: aload_2
47: invokestatic  #15
50: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 968
End line: 982
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 99.99999f, pointVectorValuePairConvergenceChecker1, 0.0d, 57.29577951308232d, (double) (byte) 1, (double) ' ');
        double double7 = levenbergMarquardtOptimizer6.getChiSquare();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = levenbergMarquardtOptimizer6.getTargetSize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #185
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: ldc2_w        #183
33: aload_1
34: dconst_0
35: ldc2_w        #186
38: dconst_1
39: ldc2_w        #188
42: invokespecial #190
45: astore_2
46: aload_2
47: invokevirtual #191
50: dstore_3
51: aload_2
52: invokevirtual #192
55: istore        5
57: ldc           #12
59: invokestatic  #13
62: goto          67
65: astore        5
67: new           #52
70: dup
71: invokespecial #53
74: ldc           #54
76: invokevirtual #55
79: dload_3
80: invokevirtual #80
83: ldc           #57
85: invokevirtual #55
88: dconst_0
89: invokevirtual #80
92: ldc           #54
94: invokevirtual #55
97: invokevirtual #58
100: dload_3
101: dconst_0
102: dcmpl
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #59
114: return
Exception table:
from    to  target type
51    62    65   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 985
End line: 1042
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        double[] doubleArray5 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix6 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray5);
        double[] doubleArray8 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray5, doubleArray8);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector13 = arrayRealVector11.mapDivideToSelf((double) (byte) -1);
        arrayRealVector11.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector18 = arrayRealVector16.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector19.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector16.append(realVector21);
        double double23 = arrayRealVector11.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector26 = arrayRealVector24.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector11.subtract(realVector26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray29 = arrayRealVector28.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, doubleArray29);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair32 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray5, doubleArray29, true);
        boolean boolean34 = pointVectorValuePair32.equals((java.lang.Object) 3);
        double[] doubleArray35 = pointVectorValuePair32.getValue();
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = levenbergMarquardtOptimizer1.computeCovariances(doubleArray35, 2.5934433098363465d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #44
39: istore_3
40: aload_2
41: invokevirtual #83
44: astore        4
46: iconst_1
47: newarray       double
49: dup
50: iconst_0
51: ldc2_w        #45
54: dastore
55: astore        5
57: aload         5
59: invokestatic  #47
62: astore        6
64: iconst_1
65: newarray       double
67: dup
68: iconst_0
69: ldc2_w        #45
72: dastore
73: astore        7
75: aload         7
77: invokestatic  #47
80: astore        8
82: new           #48
85: dup
86: aload         5
88: aload         7
90: invokespecial #49
93: astore        9
95: new           #48
98: dup
99: invokespecial #64
102: astore        10
104: aload         10
106: ldc2_w        #65
109: invokevirtual #67
112: astore        11
114: aload         10
116: dconst_1
117: invokevirtual #68
120: new           #48
123: dup
124: invokespecial #64
127: astore        12
129: aload         12
131: ldc2_w        #65
134: invokevirtual #67
137: astore        13
139: new           #48
142: dup
143: invokespecial #64
146: astore        14
148: aload         14
150: ldc2_w        #65
153: invokevirtual #67
156: astore        15
158: aload         12
160: aload         15
162: invokevirtual #69
165: astore        16
167: aload         10
169: aload         12
171: invokevirtual #70
174: dstore        17
176: new           #48
179: dup
180: invokespecial #64
183: astore        19
185: aload         19
187: ldc2_w        #65
190: invokevirtual #67
193: astore        20
195: aload         10
197: aload         20
199: invokevirtual #71
202: astore        21
204: new           #48
207: dup
208: invokespecial #64
211: astore        22
213: aload         22
215: invokevirtual #72
218: astore        23
220: new           #48
223: dup
224: aload         10
226: aload         23
228: invokespecial #73
231: astore        24
233: new           #101
236: dup
237: aload         5
239: aload         23
241: iconst_1
242: invokespecial #102
245: astore        25
247: aload         25
249: iconst_3
250: invokestatic  #194
253: invokevirtual #195
256: istore        26
258: aload         25
260: invokevirtual #196
263: astore        27
265: aload_2
266: aload         27
268: ldc2_w        #95
271: invokevirtual #84
274: astore        28
276: ldc           #12
278: invokestatic  #13
281: goto          286
284: astore        28
286: new           #52
289: dup
290: invokespecial #53
293: ldc           #54
295: invokevirtual #55
298: iload_3
299: invokevirtual #56
302: ldc           #57
304: invokevirtual #55
307: iconst_0
308: invokevirtual #56
311: ldc           #54
313: invokevirtual #55
316: invokevirtual #58
319: iload_3
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #59
331: aload         4
333: invokestatic  #15
336: aload         5
338: invokestatic  #35
341: aload         5
343: invokestatic  #36
346: ldc           #60
348: invokestatic  #38
351: aload         6
353: invokestatic  #35
356: aload         7
358: invokestatic  #35
361: aload         7
363: invokestatic  #36
366: ldc           #60
368: invokestatic  #38
371: aload         8
373: invokestatic  #35
376: aload         11
378: invokestatic  #35
381: aload         13
383: invokestatic  #35
386: aload         15
388: invokestatic  #35
391: aload         16
393: invokestatic  #35
396: new           #52
399: dup
400: invokespecial #53
403: ldc           #54
405: invokevirtual #55
408: dload         17
410: invokevirtual #80
413: ldc           #57
415: invokevirtual #55
418: dconst_0
419: invokevirtual #80
422: ldc           #54
424: invokevirtual #55
427: invokevirtual #58
430: dload         17
432: dconst_0
433: dcmpl
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #59
445: aload         20
447: invokestatic  #35
450: aload         21
452: invokestatic  #35
455: aload         23
457: invokestatic  #35
460: aload         23
462: invokestatic  #36
465: ldc           #81
467: invokestatic  #38
470: new           #52
473: dup
474: invokespecial #53
477: ldc           #54
479: invokevirtual #55
482: iload         26
484: invokevirtual #170
487: ldc           #57
489: invokevirtual #55
492: iconst_0
493: invokevirtual #170
496: ldc           #54
498: invokevirtual #55
501: invokevirtual #58
504: iload         26
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #59
517: aload         27
519: invokestatic  #35
522: aload         27
524: invokestatic  #36
527: ldc           #81
529: invokestatic  #38
532: return
Exception table:
from    to  target type
265   281   284   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 1045
End line: 1082
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight20 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray18);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = weight20.getWeight();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix26 = realMatrix21.getSubMatrix(10, (int) (short) 10, (int) (short) -1, 1076101151);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (10)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(realMatrix21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: invokespecial #64
31: astore_1
32: aload_1
33: ldc2_w        #65
36: invokevirtual #67
39: astore_2
40: aload_1
41: dconst_1
42: invokevirtual #68
45: new           #48
48: dup
49: invokespecial #64
52: astore_3
53: aload_3
54: ldc2_w        #65
57: invokevirtual #67
60: astore        4
62: new           #48
65: dup
66: invokespecial #64
69: astore        5
71: aload         5
73: ldc2_w        #65
76: invokevirtual #67
79: astore        6
81: aload_3
82: aload         6
84: invokevirtual #69
87: astore        7
89: aload_1
90: aload_3
91: invokevirtual #70
94: dstore        8
96: new           #48
99: dup
100: invokespecial #64
103: astore        10
105: aload         10
107: ldc2_w        #65
110: invokevirtual #67
113: astore        11
115: aload_1
116: aload         11
118: invokevirtual #71
121: astore        12
123: new           #48
126: dup
127: invokespecial #64
130: astore        13
132: aload         13
134: invokevirtual #72
137: astore        14
139: new           #48
142: dup
143: aload_1
144: aload         14
146: invokespecial #73
149: astore        15
151: new           #30
154: dup
155: aload         14
157: invokespecial #74
160: astore        16
162: aload         16
164: invokevirtual #75
167: astore        17
169: aload         17
171: bipush        10
173: bipush        10
175: iconst_m1
176: ldc           #198
178: invokeinterface #199,  5
183: astore        18
185: ldc           #200
187: invokestatic  #13
190: goto          195
193: astore        18
195: aload_2
196: invokestatic  #35
199: aload         4
201: invokestatic  #35
204: aload         6
206: invokestatic  #35
209: aload         7
211: invokestatic  #35
214: new           #52
217: dup
218: invokespecial #53
221: ldc           #54
223: invokevirtual #55
226: dload         8
228: invokevirtual #80
231: ldc           #57
233: invokevirtual #55
236: dconst_0
237: invokevirtual #80
240: ldc           #54
242: invokevirtual #55
245: invokevirtual #58
248: dload         8
250: dconst_0
251: dcmpl
252: ifne          259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #59
263: aload         11
265: invokestatic  #35
268: aload         12
270: invokestatic  #35
273: aload         14
275: invokestatic  #35
278: aload         14
280: invokestatic  #36
283: ldc           #81
285: invokestatic  #38
288: aload         17
290: invokestatic  #35
293: return
Exception table:
from    to  target type
169   190   193   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1085
End line: 1123
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight20 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray18);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = weight20.getWeight();
        org.apache.commons.math3.linear.RealMatrixPreservingVisitor realMatrixPreservingVisitor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = realMatrix21.walkInColumnOrder(realMatrixPreservingVisitor22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathUnsupportedOperationException; message: unsupported operation");
        } catch (org.apache.commons.math3.exception.MathUnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(realMatrix21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: invokespecial #64
31: astore_1
32: aload_1
33: ldc2_w        #65
36: invokevirtual #67
39: astore_2
40: aload_1
41: dconst_1
42: invokevirtual #68
45: new           #48
48: dup
49: invokespecial #64
52: astore_3
53: aload_3
54: ldc2_w        #65
57: invokevirtual #67
60: astore        4
62: new           #48
65: dup
66: invokespecial #64
69: astore        5
71: aload         5
73: ldc2_w        #65
76: invokevirtual #67
79: astore        6
81: aload_3
82: aload         6
84: invokevirtual #69
87: astore        7
89: aload_1
90: aload_3
91: invokevirtual #70
94: dstore        8
96: new           #48
99: dup
100: invokespecial #64
103: astore        10
105: aload         10
107: ldc2_w        #65
110: invokevirtual #67
113: astore        11
115: aload_1
116: aload         11
118: invokevirtual #71
121: astore        12
123: new           #48
126: dup
127: invokespecial #64
130: astore        13
132: aload         13
134: invokevirtual #72
137: astore        14
139: new           #48
142: dup
143: aload_1
144: aload         14
146: invokespecial #73
149: astore        15
151: new           #30
154: dup
155: aload         14
157: invokespecial #74
160: astore        16
162: aload         16
164: invokevirtual #75
167: astore        17
169: aconst_null
170: astore        18
172: aload         17
174: aload         18
176: invokeinterface #202,  2
181: dstore        19
183: ldc           #203
185: invokestatic  #13
188: goto          193
191: astore        19
193: aload_2
194: invokestatic  #35
197: aload         4
199: invokestatic  #35
202: aload         6
204: invokestatic  #35
207: aload         7
209: invokestatic  #35
212: new           #52
215: dup
216: invokespecial #53
219: ldc           #54
221: invokevirtual #55
224: dload         8
226: invokevirtual #80
229: ldc           #57
231: invokevirtual #55
234: dconst_0
235: invokevirtual #80
238: ldc           #54
240: invokevirtual #55
243: invokevirtual #58
246: dload         8
248: dconst_0
249: dcmpl
250: ifne          257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #59
261: aload         11
263: invokestatic  #35
266: aload         12
268: invokestatic  #35
271: aload         14
273: invokestatic  #35
276: aload         14
278: invokestatic  #36
281: ldc           #81
283: invokestatic  #38
286: aload         17
288: invokestatic  #35
291: return
Exception table:
from    to  target type
172   188   191   Class org/apache/commons/math3/exception/MathUnsupportedOperationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1126
End line: 1136
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getStartPoint();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #205
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #65
31: ldc2_w        #45
34: ldc2_w        #206
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #10
45: astore_2
46: aload_1
47: invokevirtual #208
50: istore_3
51: aload_1
52: invokevirtual #83
55: astore        4
57: aload_2
58: invokestatic  #15
61: new           #52
64: dup
65: invokespecial #53
68: ldc           #54
70: invokevirtual #55
73: iload_3
74: invokevirtual #56
77: ldc           #57
79: invokevirtual #55
82: iconst_0
83: invokevirtual #56
86: ldc           #54
88: invokevirtual #55
91: invokevirtual #58
94: iload_3
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #59
106: aload         4
108: invokestatic  #15
111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1139
End line: 1150
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math3.linear.RealMatrix realMatrix0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.nonlinear.vector.Weight weight1 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(realMatrix0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #209
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #30
29: dup
30: aload_1
31: invokespecial #31
34: astore_2
35: ldc           #12
37: invokestatic  #13
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
26    40    43   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1153
End line: 1165
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer2 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(true, pointVectorValuePairConvergenceChecker1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair3 = gaussNewtonOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #210
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: iconst_1
31: aload_1
32: invokespecial #140
35: astore_2
36: aload_2
37: invokevirtual #123
40: astore_3
41: ldc           #124
43: invokestatic  #13
46: goto          50
49: astore_3
50: return
Exception table:
from    to  target type
36    46    49   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1168
End line: 1248
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getLowerBound();
        int int4 = levenbergMarquardtOptimizer1.getEvaluations();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        arrayRealVector5.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector10.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector10.append(realVector15);
        double double17 = arrayRealVector5.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector10);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector18.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector5.subtract(realVector20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray23 = arrayRealVector22.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector5, doubleArray23);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight25 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector26.mapDivideToSelf((double) (byte) -1);
        arrayRealVector26.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector34.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector37 = arrayRealVector31.append(realVector36);
        double double38 = arrayRealVector26.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector39.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector42 = arrayRealVector26.subtract(realVector41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray44 = arrayRealVector43.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector26, doubleArray44);
        org.apache.commons.math3.optim.InitialGuess initialGuess46 = new org.apache.commons.math3.optim.InitialGuess(doubleArray44);
        double[] doubleArray47 = initialGuess46.getInitialGuess();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction48 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian49 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction48);
        org.apache.commons.math3.analysis.MultivariateVectorFunction multivariateVectorFunction50 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunction modelFunction51 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunction(multivariateVectorFunction50);
        org.apache.commons.math3.analysis.MultivariateVectorFunction multivariateVectorFunction52 = modelFunction51.getModelFunction();
        org.apache.commons.math3.optim.MaxIter maxIter54 = new org.apache.commons.math3.optim.MaxIter((int) (short) 10);
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray55 = new org.apache.commons.math3.optim.OptimizationData[] { weight25, initialGuess46, modelFunctionJacobian49, modelFunction51, maxIter54 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair56 = levenbergMarquardtOptimizer1.optimize(optimizationDataArray55);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNull(multivariateVectorFunction52);
        org.junit.Assert.assertNotNull(optimizationDataArray55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #211
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #10
39: astore_3
40: aload_2
41: invokevirtual #10
44: astore        4
46: aload_2
47: invokevirtual #208
50: istore        5
52: new           #48
55: dup
56: invokespecial #64
59: astore        6
61: aload         6
63: ldc2_w        #65
66: invokevirtual #67
69: astore        7
71: aload         6
73: dconst_1
74: invokevirtual #68
77: new           #48
80: dup
81: invokespecial #64
84: astore        8
86: aload         8
88: ldc2_w        #65
91: invokevirtual #67
94: astore        9
96: new           #48
99: dup
100: invokespecial #64
103: astore        10
105: aload         10
107: ldc2_w        #65
110: invokevirtual #67
113: astore        11
115: aload         8
117: aload         11
119: invokevirtual #69
122: astore        12
124: aload         6
126: aload         8
128: invokevirtual #70
131: dstore        13
133: new           #48
136: dup
137: invokespecial #64
140: astore        15
142: aload         15
144: ldc2_w        #65
147: invokevirtual #67
150: astore        16
152: aload         6
154: aload         16
156: invokevirtual #71
159: astore        17
161: new           #48
164: dup
165: invokespecial #64
168: astore        18
170: aload         18
172: invokevirtual #72
175: astore        19
177: new           #48
180: dup
181: aload         6
183: aload         19
185: invokespecial #73
188: astore        20
190: new           #30
193: dup
194: aload         19
196: invokespecial #74
199: astore        21
201: new           #48
204: dup
205: invokespecial #64
208: astore        22
210: aload         22
212: ldc2_w        #65
215: invokevirtual #67
218: astore        23
220: aload         22
222: dconst_1
223: invokevirtual #68
226: new           #48
229: dup
230: invokespecial #64
233: astore        24
235: aload         24
237: ldc2_w        #65
240: invokevirtual #67
243: astore        25
245: new           #48
248: dup
249: invokespecial #64
252: astore        26
254: aload         26
256: ldc2_w        #65
259: invokevirtual #67
262: astore        27
264: aload         24
266: aload         27
268: invokevirtual #69
271: astore        28
273: aload         22
275: aload         24
277: invokevirtual #70
280: dstore        29
282: new           #48
285: dup
286: invokespecial #64
289: astore        31
291: aload         31
293: ldc2_w        #65
296: invokevirtual #67
299: astore        32
301: aload         22
303: aload         32
305: invokevirtual #71
308: astore        33
310: new           #48
313: dup
314: invokespecial #64
317: astore        34
319: aload         34
321: invokevirtual #72
324: astore        35
326: new           #48
329: dup
330: aload         22
332: aload         35
334: invokespecial #73
337: astore        36
339: new           #118
342: dup
343: aload         35
345: invokespecial #119
348: astore        37
350: aload         37
352: invokevirtual #120
355: astore        38
357: aconst_null
358: astore        39
360: new           #212
363: dup
364: aload         39
366: invokespecial #213
369: astore        40
371: aconst_null
372: astore        41
374: new           #214
377: dup
378: aload         41
380: invokespecial #215
383: astore        42
385: aload         42
387: invokevirtual #216
390: astore        43
392: new           #144
395: dup
396: bipush        10
398: invokespecial #145
401: astore        44
403: iconst_5
404: anewarray     #76
407: dup
408: iconst_0
409: aload         21
411: aastore
412: dup
413: iconst_1
414: aload         37
416: aastore
417: dup
418: iconst_2
419: aload         40
421: aastore
422: dup
423: iconst_3
424: aload         42
426: aastore
427: dup
428: iconst_4
429: aload         44
431: aastore
432: astore        45
434: aload_2
435: aload         45
437: invokevirtual #217
440: astore        46
442: ldc           #78
444: invokestatic  #13
447: goto          452
450: astore        46
452: aload_3
453: invokestatic  #15
456: aload         4
458: invokestatic  #15
461: new           #52
464: dup
465: invokespecial #53
468: ldc           #54
470: invokevirtual #55
473: iload         5
475: invokevirtual #56
478: ldc           #57
480: invokevirtual #55
483: iconst_0
484: invokevirtual #56
487: ldc           #54
489: invokevirtual #55
492: invokevirtual #58
495: iload         5
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #59
508: aload         7
510: invokestatic  #35
513: aload         9
515: invokestatic  #35
518: aload         11
520: invokestatic  #35
523: aload         12
525: invokestatic  #35
528: new           #52
531: dup
532: invokespecial #53
535: ldc           #54
537: invokevirtual #55
540: dload         13
542: invokevirtual #80
545: ldc           #57
547: invokevirtual #55
550: dconst_0
551: invokevirtual #80
554: ldc           #54
556: invokevirtual #55
559: invokevirtual #58
562: dload         13
564: dconst_0
565: dcmpl
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #59
577: aload         16
579: invokestatic  #35
582: aload         17
584: invokestatic  #35
587: aload         19
589: invokestatic  #35
592: aload         19
594: invokestatic  #36
597: ldc           #81
599: invokestatic  #38
602: aload         23
604: invokestatic  #35
607: aload         25
609: invokestatic  #35
612: aload         27
614: invokestatic  #35
617: aload         28
619: invokestatic  #35
622: new           #52
625: dup
626: invokespecial #53
629: ldc           #54
631: invokevirtual #55
634: dload         29
636: invokevirtual #80
639: ldc           #57
641: invokevirtual #55
644: dconst_0
645: invokevirtual #80
648: ldc           #54
650: invokevirtual #55
653: invokevirtual #58
656: dload         29
658: dconst_0
659: dcmpl
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #59
671: aload         32
673: invokestatic  #35
676: aload         33
678: invokestatic  #35
681: aload         35
683: invokestatic  #35
686: aload         35
688: invokestatic  #36
691: ldc           #81
693: invokestatic  #38
696: aload         38
698: invokestatic  #35
701: aload         38
703: invokestatic  #36
706: ldc           #81
708: invokestatic  #38
711: aload         43
713: invokestatic  #15
716: aload         45
718: invokestatic  #35
721: return
Exception table:
from    to  target type
434   447   450   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1251
End line: 1336
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric9 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray14 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix16 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray14, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix18 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray14, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess19 = new org.apache.commons.math3.optim.InitialGuess(doubleArray14);
        double[] doubleArray20 = initialGuess19.getInitialGuess();
        double double21 = parametric9.value(0.0d, doubleArray20);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric22 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray27 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix29 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray27, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix31 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray27, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess32 = new org.apache.commons.math3.optim.InitialGuess(doubleArray27);
        double[] doubleArray33 = initialGuess32.getInitialGuess();
        double double34 = parametric22.value(0.0d, doubleArray33);
        double[] doubleArray39 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix41 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray39, true);
        org.apache.commons.math3.linear.RealVector realVector43 = diagonalMatrix41.getRowVector(0);
        double[] doubleArray47 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix49 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray47, true);
        double[] doubleArray53 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix55 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray53, true);
        double[] doubleArray56 = diagonalMatrix49.operate(doubleArray53);
        double[] doubleArray57 = diagonalMatrix41.preMultiply(doubleArray56);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix58 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray56);
        double[] doubleArray62 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix64 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray62, true);
        org.apache.commons.math3.linear.RealVector realVector66 = diagonalMatrix64.getRowVector(0);
        double[] doubleArray70 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix72 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray70, true);
        double[] doubleArray76 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix78 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray76, true);
        double[] doubleArray79 = diagonalMatrix72.operate(doubleArray76);
        double[] doubleArray80 = diagonalMatrix64.preMultiply(doubleArray79);
        double[] doubleArray81 = diagonalMatrix58.preMultiply(doubleArray80);
        double double82 = parametric22.value(0.0d, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray83 = parametricUnivariateFunctionCurveFitter2.fit((int) (short) 1, (org.apache.commons.math3.analysis.ParametricUnivariateFunction) parametric9, doubleArray81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (1) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0E10, 1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: new           #91
38: dup
39: aload_2
40: invokespecial #92
43: astore_3
44: new           #113
47: dup
48: ldc2_w        #21
51: dconst_0
52: ldc2_w        #21
55: invokespecial #114
58: astore        4
60: aload_3
61: aload         4
63: invokevirtual #115
66: new           #93
69: dup
70: invokespecial #94
73: astore        5
75: iconst_3
76: newarray       double
78: dup
79: iconst_0
80: dconst_1
81: dastore
82: dup
83: iconst_1
84: ldc2_w        #21
87: dastore
88: dup
89: iconst_2
90: dconst_1
91: dastore
92: astore        6
94: new           #23
97: dup
98: aload         6
100: iconst_1
101: invokespecial #24
104: astore        7
106: new           #23
109: dup
110: aload         6
112: iconst_1
113: invokespecial #24
116: astore        8
118: new           #118
121: dup
122: aload         6
124: invokespecial #119
127: astore        9
129: aload         9
131: invokevirtual #120
134: astore        10
136: aload         5
138: dconst_0
139: aload         10
141: invokevirtual #121
144: dstore        11
146: new           #93
149: dup
150: invokespecial #94
153: astore        13
155: iconst_3
156: newarray       double
158: dup
159: iconst_0
160: dconst_1
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #21
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: astore        14
174: new           #23
177: dup
178: aload         14
180: iconst_1
181: invokespecial #24
184: astore        15
186: new           #23
189: dup
190: aload         14
192: iconst_1
193: invokespecial #24
196: astore        16
198: new           #118
201: dup
202: aload         14
204: invokespecial #119
207: astore        17
209: aload         17
211: invokevirtual #120
214: astore        18
216: aload         13
218: dconst_0
219: aload         18
221: invokevirtual #121
224: dstore        19
226: iconst_3
227: newarray       double
229: dup
230: iconst_0
231: dconst_1
232: dastore
233: dup
234: iconst_1
235: ldc2_w        #21
238: dastore
239: dup
240: iconst_2
241: dconst_1
242: dastore
243: astore        21
245: new           #23
248: dup
249: aload         21
251: iconst_1
252: invokespecial #24
255: astore        22
257: aload         22
259: iconst_0
260: invokevirtual #25
263: astore        23
265: iconst_3
266: newarray       double
268: dup
269: iconst_0
270: dconst_1
271: dastore
272: dup
273: iconst_1
274: ldc2_w        #21
277: dastore
278: dup
279: iconst_2
280: dconst_1
281: dastore
282: astore        24
284: new           #23
287: dup
288: aload         24
290: iconst_1
291: invokespecial #24
294: astore        25
296: iconst_3
297: newarray       double
299: dup
300: iconst_0
301: dconst_1
302: dastore
303: dup
304: iconst_1
305: ldc2_w        #21
308: dastore
309: dup
310: iconst_2
311: dconst_1
312: dastore
313: astore        26
315: new           #23
318: dup
319: aload         26
321: iconst_1
322: invokespecial #24
325: astore        27
327: aload         25
329: aload         26
331: invokevirtual #26
334: astore        28
336: aload         22
338: aload         28
340: invokevirtual #27
343: astore        29
345: new           #23
348: dup
349: aload         28
351: invokespecial #28
354: astore        30
356: iconst_3
357: newarray       double
359: dup
360: iconst_0
361: dconst_1
362: dastore
363: dup
364: iconst_1
365: ldc2_w        #21
368: dastore
369: dup
370: iconst_2
371: dconst_1
372: dastore
373: astore        31
375: new           #23
378: dup
379: aload         31
381: iconst_1
382: invokespecial #24
385: astore        32
387: aload         32
389: iconst_0
390: invokevirtual #25
393: astore        33
395: iconst_3
396: newarray       double
398: dup
399: iconst_0
400: dconst_1
401: dastore
402: dup
403: iconst_1
404: ldc2_w        #21
407: dastore
408: dup
409: iconst_2
410: dconst_1
411: dastore
412: astore        34
414: new           #23
417: dup
418: aload         34
420: iconst_1
421: invokespecial #24
424: astore        35
426: iconst_3
427: newarray       double
429: dup
430: iconst_0
431: dconst_1
432: dastore
433: dup
434: iconst_1
435: ldc2_w        #21
438: dastore
439: dup
440: iconst_2
441: dconst_1
442: dastore
443: astore        36
445: new           #23
448: dup
449: aload         36
451: iconst_1
452: invokespecial #24
455: astore        37
457: aload         35
459: aload         36
461: invokevirtual #26
464: astore        38
466: aload         32
468: aload         38
470: invokevirtual #27
473: astore        39
475: aload         30
477: aload         39
479: invokevirtual #27
482: astore        40
484: aload         13
486: dconst_0
487: aload         40
489: invokevirtual #121
492: dstore        41
494: aload_3
495: iconst_1
496: aload         5
498: aload         40
500: invokevirtual #109
503: astore        43
505: ldc           #219
507: invokestatic  #13
510: goto          515
513: astore        43
515: aload         6
517: invokestatic  #35
520: aload         6
522: invokestatic  #36
525: ldc           #37
527: invokestatic  #38
530: aload         10
532: invokestatic  #35
535: aload         10
537: invokestatic  #36
540: ldc           #37
542: invokestatic  #38
545: new           #52
548: dup
549: invokespecial #53
552: ldc           #54
554: invokevirtual #55
557: dload         11
559: invokevirtual #80
562: ldc           #57
564: invokevirtual #55
567: dconst_1
568: invokevirtual #80
571: ldc           #54
573: invokevirtual #55
576: invokevirtual #58
579: dload         11
581: dconst_1
582: dcmpl
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #59
594: aload         14
596: invokestatic  #35
599: aload         14
601: invokestatic  #36
604: ldc           #37
606: invokestatic  #38
609: aload         18
611: invokestatic  #35
614: aload         18
616: invokestatic  #36
619: ldc           #37
621: invokestatic  #38
624: new           #52
627: dup
628: invokespecial #53
631: ldc           #54
633: invokevirtual #55
636: dload         19
638: invokevirtual #80
641: ldc           #57
643: invokevirtual #55
646: dconst_1
647: invokevirtual #80
650: ldc           #54
652: invokevirtual #55
655: invokevirtual #58
658: dload         19
660: dconst_1
661: dcmpl
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #59
673: aload         21
675: invokestatic  #35
678: aload         21
680: invokestatic  #36
683: ldc           #37
685: invokestatic  #38
688: aload         23
690: invokestatic  #35
693: aload         24
695: invokestatic  #35
698: aload         24
700: invokestatic  #36
703: ldc           #37
705: invokestatic  #38
708: aload         26
710: invokestatic  #35
713: aload         26
715: invokestatic  #36
718: ldc           #37
720: invokestatic  #38
723: aload         28
725: invokestatic  #35
728: aload         28
730: invokestatic  #36
733: ldc           #39
735: invokestatic  #38
738: aload         29
740: invokestatic  #35
743: aload         29
745: invokestatic  #36
748: ldc           #40
750: invokestatic  #38
753: aload         31
755: invokestatic  #35
758: aload         31
760: invokestatic  #36
763: ldc           #37
765: invokestatic  #38
768: aload         33
770: invokestatic  #35
773: aload         34
775: invokestatic  #35
778: aload         34
780: invokestatic  #36
783: ldc           #37
785: invokestatic  #38
788: aload         36
790: invokestatic  #35
793: aload         36
795: invokestatic  #36
798: ldc           #37
800: invokestatic  #38
803: aload         38
805: invokestatic  #35
808: aload         38
810: invokestatic  #36
813: ldc           #39
815: invokestatic  #38
818: aload         39
820: invokestatic  #35
823: aload         39
825: invokestatic  #36
828: ldc           #40
830: invokestatic  #38
833: aload         40
835: invokestatic  #35
838: aload         40
840: invokestatic  #36
843: ldc           #221
845: invokestatic  #38
848: new           #52
851: dup
852: invokespecial #53
855: ldc           #54
857: invokevirtual #55
860: dload         41
862: invokevirtual #80
865: ldc           #57
867: invokevirtual #55
870: dconst_1
871: invokevirtual #80
874: ldc           #54
876: invokevirtual #55
879: invokevirtual #58
882: dload         41
884: dconst_1
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #59
897: return
Exception table:
from    to  target type
494   510   513   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1339
End line: 1422
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction21 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = arrayRealVector20.mapToSelf(univariateFunction21);
        double[] doubleArray27 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix29 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray27, true);
        org.apache.commons.math3.linear.RealVector realVector31 = diagonalMatrix29.getRowVector(0);
        double[] doubleArray35 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix37 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray35, true);
        double[] doubleArray41 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix43 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray41, true);
        double[] doubleArray44 = diagonalMatrix37.operate(doubleArray41);
        double[] doubleArray45 = diagonalMatrix29.preMultiply(doubleArray44);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix46 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray44);
        double[] doubleArray50 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix52 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray50, true);
        org.apache.commons.math3.linear.RealVector realVector54 = diagonalMatrix52.getRowVector(0);
        double[] doubleArray58 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix60 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray58, true);
        double[] doubleArray64 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix66 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray64, true);
        double[] doubleArray67 = diagonalMatrix60.operate(doubleArray64);
        double[] doubleArray68 = diagonalMatrix52.preMultiply(doubleArray67);
        double[] doubleArray69 = diagonalMatrix46.preMultiply(doubleArray68);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight70 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector20.setSubVector((int) (short) 1, doubleArray69);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: index (1)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(arrayRealVector22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0E10, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #222
19: aastore
20: invokevirtual #7
23: pop
24: new           #48
27: dup
28: invokespecial #64
31: astore_1
32: aload_1
33: ldc2_w        #65
36: invokevirtual #67
39: astore_2
40: aload_1
41: dconst_1
42: invokevirtual #68
45: new           #48
48: dup
49: invokespecial #64
52: astore_3
53: aload_3
54: ldc2_w        #65
57: invokevirtual #67
60: astore        4
62: new           #48
65: dup
66: invokespecial #64
69: astore        5
71: aload         5
73: ldc2_w        #65
76: invokevirtual #67
79: astore        6
81: aload_3
82: aload         6
84: invokevirtual #69
87: astore        7
89: aload_1
90: aload_3
91: invokevirtual #70
94: dstore        8
96: new           #48
99: dup
100: invokespecial #64
103: astore        10
105: aload         10
107: ldc2_w        #65
110: invokevirtual #67
113: astore        11
115: aload_1
116: aload         11
118: invokevirtual #71
121: astore        12
123: new           #48
126: dup
127: invokespecial #64
130: astore        13
132: aload         13
134: invokevirtual #72
137: astore        14
139: new           #48
142: dup
143: aload_1
144: aload         14
146: invokespecial #73
149: astore        15
151: new           #48
154: dup
155: aload_1
156: invokespecial #223
159: astore        16
161: aconst_null
162: astore        17
164: aload         16
166: aload         17
168: invokevirtual #224
171: astore        18
173: iconst_3
174: newarray       double
176: dup
177: iconst_0
178: dconst_1
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #21
185: dastore
186: dup
187: iconst_2
188: dconst_1
189: dastore
190: astore        19
192: new           #23
195: dup
196: aload         19
198: iconst_1
199: invokespecial #24
202: astore        20
204: aload         20
206: iconst_0
207: invokevirtual #25
210: astore        21
212: iconst_3
213: newarray       double
215: dup
216: iconst_0
217: dconst_1
218: dastore
219: dup
220: iconst_1
221: ldc2_w        #21
224: dastore
225: dup
226: iconst_2
227: dconst_1
228: dastore
229: astore        22
231: new           #23
234: dup
235: aload         22
237: iconst_1
238: invokespecial #24
241: astore        23
243: iconst_3
244: newarray       double
246: dup
247: iconst_0
248: dconst_1
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #21
255: dastore
256: dup
257: iconst_2
258: dconst_1
259: dastore
260: astore        24
262: new           #23
265: dup
266: aload         24
268: iconst_1
269: invokespecial #24
272: astore        25
274: aload         23
276: aload         24
278: invokevirtual #26
281: astore        26
283: aload         20
285: aload         26
287: invokevirtual #27
290: astore        27
292: new           #23
295: dup
296: aload         26
298: invokespecial #28
301: astore        28
303: iconst_3
304: newarray       double
306: dup
307: iconst_0
308: dconst_1
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #21
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: astore        29
322: new           #23
325: dup
326: aload         29
328: iconst_1
329: invokespecial #24
332: astore        30
334: aload         30
336: iconst_0
337: invokevirtual #25
340: astore        31
342: iconst_3
343: newarray       double
345: dup
346: iconst_0
347: dconst_1
348: dastore
349: dup
350: iconst_1
351: ldc2_w        #21
354: dastore
355: dup
356: iconst_2
357: dconst_1
358: dastore
359: astore        32
361: new           #23
364: dup
365: aload         32
367: iconst_1
368: invokespecial #24
371: astore        33
373: iconst_3
374: newarray       double
376: dup
377: iconst_0
378: dconst_1
379: dastore
380: dup
381: iconst_1
382: ldc2_w        #21
385: dastore
386: dup
387: iconst_2
388: dconst_1
389: dastore
390: astore        34
392: new           #23
395: dup
396: aload         34
398: iconst_1
399: invokespecial #24
402: astore        35
404: aload         33
406: aload         34
408: invokevirtual #26
411: astore        36
413: aload         30
415: aload         36
417: invokevirtual #27
420: astore        37
422: aload         28
424: aload         37
426: invokevirtual #27
429: astore        38
431: new           #30
434: dup
435: aload         38
437: invokespecial #74
440: astore        39
442: aload         16
444: iconst_1
445: aload         38
447: invokevirtual #225
450: ldc           #226
452: invokestatic  #13
455: goto          460
458: astore        40
460: aload_2
461: invokestatic  #35
464: aload         4
466: invokestatic  #35
469: aload         6
471: invokestatic  #35
474: aload         7
476: invokestatic  #35
479: new           #52
482: dup
483: invokespecial #53
486: ldc           #54
488: invokevirtual #55
491: dload         8
493: invokevirtual #80
496: ldc           #57
498: invokevirtual #55
501: dconst_0
502: invokevirtual #80
505: ldc           #54
507: invokevirtual #55
510: invokevirtual #58
513: dload         8
515: dconst_0
516: dcmpl
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #59
528: aload         11
530: invokestatic  #35
533: aload         12
535: invokestatic  #35
538: aload         14
540: invokestatic  #35
543: aload         14
545: invokestatic  #36
548: ldc           #81
550: invokestatic  #38
553: aload         18
555: invokestatic  #35
558: aload         19
560: invokestatic  #35
563: aload         19
565: invokestatic  #36
568: ldc           #37
570: invokestatic  #38
573: aload         21
575: invokestatic  #35
578: aload         22
580: invokestatic  #35
583: aload         22
585: invokestatic  #36
588: ldc           #37
590: invokestatic  #38
593: aload         24
595: invokestatic  #35
598: aload         24
600: invokestatic  #36
603: ldc           #37
605: invokestatic  #38
608: aload         26
610: invokestatic  #35
613: aload         26
615: invokestatic  #36
618: ldc           #39
620: invokestatic  #38
623: aload         27
625: invokestatic  #35
628: aload         27
630: invokestatic  #36
633: ldc           #40
635: invokestatic  #38
638: aload         29
640: invokestatic  #35
643: aload         29
645: invokestatic  #36
648: ldc           #37
650: invokestatic  #38
653: aload         31
655: invokestatic  #35
658: aload         32
660: invokestatic  #35
663: aload         32
665: invokestatic  #36
668: ldc           #37
670: invokestatic  #38
673: aload         34
675: invokestatic  #35
678: aload         34
680: invokestatic  #36
683: ldc           #37
685: invokestatic  #38
688: aload         36
690: invokestatic  #35
693: aload         36
695: invokestatic  #36
698: ldc           #39
700: invokestatic  #38
703: aload         37
705: invokestatic  #35
708: aload         37
710: invokestatic  #36
713: ldc           #40
715: invokestatic  #38
718: aload         38
720: invokestatic  #35
723: aload         38
725: invokestatic  #36
728: ldc           #221
730: invokestatic  #38
733: return
Exception table:
from    to  target type
442   455   458   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1425
End line: 1439
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair3 = gaussNewtonOptimizer1.doOptimize();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: aload_1
31: invokespecial #63
34: astore_2
35: aload_2
36: invokevirtual #228
39: istore_3
40: aload_2
41: invokevirtual #123
44: astore        4
46: ldc           #124
48: invokestatic  #13
51: goto          56
54: astore        4
56: new           #52
59: dup
60: invokespecial #53
63: ldc           #54
65: invokevirtual #55
68: iload_3
69: invokevirtual #56
72: ldc           #57
74: invokevirtual #55
77: iconst_0
78: invokevirtual #56
81: ldc           #54
83: invokevirtual #55
86: invokevirtual #58
89: iload_3
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #59
101: return
Exception table:
from    to  target type
40    51    54   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1442
End line: 1497
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getUpperBound();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds8 = org.apache.commons.math3.optim.SimpleBounds.unbounded(97);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivideToSelf((double) (byte) -1);
        arrayRealVector9.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector14.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector14.append(realVector19);
        double double21 = arrayRealVector9.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector14);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector22.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector9.subtract(realVector24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray27 = arrayRealVector26.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray27);
        org.apache.commons.math3.optim.InitialGuess initialGuess29 = new org.apache.commons.math3.optim.InitialGuess(doubleArray27);
        double[] doubleArray30 = initialGuess29.getInitialGuess();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction31 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian32 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction31);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction33 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian34 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction33);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction35 = modelFunctionJacobian34.getModelFunctionJacobian();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray36 = new org.apache.commons.math3.optim.OptimizationData[] { simpleBounds8, initialGuess29, modelFunctionJacobian32, modelFunctionJacobian34 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair37 = levenbergMarquardtOptimizer3.optimize(optimizationDataArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(simpleBounds8);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNull(multivariateMatrixFunction35);
        org.junit.Assert.assertNotNull(optimizationDataArray36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #65
31: ldc2_w        #45
34: ldc2_w        #206
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #10
45: astore_2
46: aload_1
47: invokevirtual #230
50: istore_3
51: aload_1
52: invokevirtual #231
55: astore        4
57: bipush        97
59: invokestatic  #232
62: astore        5
64: new           #48
67: dup
68: invokespecial #64
71: astore        6
73: aload         6
75: ldc2_w        #65
78: invokevirtual #67
81: astore        7
83: aload         6
85: dconst_1
86: invokevirtual #68
89: new           #48
92: dup
93: invokespecial #64
96: astore        8
98: aload         8
100: ldc2_w        #65
103: invokevirtual #67
106: astore        9
108: new           #48
111: dup
112: invokespecial #64
115: astore        10
117: aload         10
119: ldc2_w        #65
122: invokevirtual #67
125: astore        11
127: aload         8
129: aload         11
131: invokevirtual #69
134: astore        12
136: aload         6
138: aload         8
140: invokevirtual #70
143: dstore        13
145: new           #48
148: dup
149: invokespecial #64
152: astore        15
154: aload         15
156: ldc2_w        #65
159: invokevirtual #67
162: astore        16
164: aload         6
166: aload         16
168: invokevirtual #71
171: astore        17
173: new           #48
176: dup
177: invokespecial #64
180: astore        18
182: aload         18
184: invokevirtual #72
187: astore        19
189: new           #48
192: dup
193: aload         6
195: aload         19
197: invokespecial #73
200: astore        20
202: new           #118
205: dup
206: aload         19
208: invokespecial #119
211: astore        21
213: aload         21
215: invokevirtual #120
218: astore        22
220: aconst_null
221: astore        23
223: new           #212
226: dup
227: aload         23
229: invokespecial #213
232: astore        24
234: aconst_null
235: astore        25
237: new           #212
240: dup
241: aload         25
243: invokespecial #213
246: astore        26
248: aload         26
250: invokevirtual #233
253: astore        27
255: iconst_4
256: anewarray     #76
259: dup
260: iconst_0
261: aload         5
263: aastore
264: dup
265: iconst_1
266: aload         21
268: aastore
269: dup
270: iconst_2
271: aload         24
273: aastore
274: dup
275: iconst_3
276: aload         26
278: aastore
279: astore        28
281: aload_1
282: aload         28
284: invokevirtual #217
287: astore        29
289: ldc           #12
291: invokestatic  #13
294: goto          299
297: astore        29
299: aload_2
300: invokestatic  #15
303: new           #52
306: dup
307: invokespecial #53
310: ldc           #54
312: invokevirtual #55
315: iload_3
316: invokevirtual #56
319: ldc           #57
321: invokevirtual #55
324: iconst_0
325: invokevirtual #56
328: ldc           #54
330: invokevirtual #55
333: invokevirtual #58
336: iload_3
337: ifne          344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #59
348: aload         4
350: invokestatic  #15
353: aload         5
355: invokestatic  #35
358: aload         7
360: invokestatic  #35
363: aload         9
365: invokestatic  #35
368: aload         11
370: invokestatic  #35
373: aload         12
375: invokestatic  #35
378: new           #52
381: dup
382: invokespecial #53
385: ldc           #54
387: invokevirtual #55
390: dload         13
392: invokevirtual #80
395: ldc           #57
397: invokevirtual #55
400: dconst_0
401: invokevirtual #80
404: ldc           #54
406: invokevirtual #55
409: invokevirtual #58
412: dload         13
414: dconst_0
415: dcmpl
416: ifne          423
419: iconst_1
420: goto          424
423: iconst_0
424: invokestatic  #59
427: aload         16
429: invokestatic  #35
432: aload         17
434: invokestatic  #35
437: aload         19
439: invokestatic  #35
442: aload         19
444: invokestatic  #36
447: ldc           #81
449: invokestatic  #38
452: aload         22
454: invokestatic  #35
457: aload         22
459: invokestatic  #36
462: ldc           #81
464: invokestatic  #38
467: aload         27
469: invokestatic  #15
472: aload         28
474: invokestatic  #35
477: return
Exception table:
from    to  target type
281   294   297   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1500
End line: 1534
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getEvaluations();
        double[] doubleArray6 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix8 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray6, true);
        org.apache.commons.math3.linear.RealVector realVector10 = diagonalMatrix8.getRowVector(0);
        double[] doubleArray14 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix16 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray14, true);
        double[] doubleArray20 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20, true);
        double[] doubleArray23 = diagonalMatrix16.operate(doubleArray20);
        double[] doubleArray24 = diagonalMatrix8.preMultiply(doubleArray23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix25 = gaussNewtonOptimizer1.computeWeightedJacobian(doubleArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1000000.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: aload_1
31: invokespecial #63
34: astore_2
35: aload_2
36: invokevirtual #235
39: istore_3
40: iconst_3
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #21
52: dastore
53: dup
54: iconst_2
55: dconst_1
56: dastore
57: astore        4
59: new           #23
62: dup
63: aload         4
65: iconst_1
66: invokespecial #24
69: astore        5
71: aload         5
73: iconst_0
74: invokevirtual #25
77: astore        6
79: iconst_3
80: newarray       double
82: dup
83: iconst_0
84: dconst_1
85: dastore
86: dup
87: iconst_1
88: ldc2_w        #21
91: dastore
92: dup
93: iconst_2
94: dconst_1
95: dastore
96: astore        7
98: new           #23
101: dup
102: aload         7
104: iconst_1
105: invokespecial #24
108: astore        8
110: iconst_3
111: newarray       double
113: dup
114: iconst_0
115: dconst_1
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #21
122: dastore
123: dup
124: iconst_2
125: dconst_1
126: dastore
127: astore        9
129: new           #23
132: dup
133: aload         9
135: iconst_1
136: invokespecial #24
139: astore        10
141: aload         8
143: aload         9
145: invokevirtual #26
148: astore        11
150: aload         5
152: aload         11
154: invokevirtual #27
157: astore        12
159: aload_2
160: aload         11
162: invokevirtual #236
165: astore        13
167: ldc           #12
169: invokestatic  #13
172: goto          177
175: astore        13
177: new           #52
180: dup
181: invokespecial #53
184: ldc           #54
186: invokevirtual #55
189: iload_3
190: invokevirtual #56
193: ldc           #57
195: invokevirtual #55
198: iconst_0
199: invokevirtual #56
202: ldc           #54
204: invokevirtual #55
207: invokevirtual #58
210: iload_3
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #59
222: aload         4
224: invokestatic  #35
227: aload         4
229: invokestatic  #36
232: ldc           #37
234: invokestatic  #38
237: aload         6
239: invokestatic  #35
242: aload         7
244: invokestatic  #35
247: aload         7
249: invokestatic  #36
252: ldc           #37
254: invokestatic  #38
257: aload         9
259: invokestatic  #35
262: aload         9
264: invokestatic  #36
267: ldc           #37
269: invokestatic  #38
272: aload         11
274: invokestatic  #35
277: aload         11
279: invokestatic  #36
282: ldc           #39
284: invokestatic  #38
287: aload         12
289: invokestatic  #35
292: aload         12
294: invokestatic  #36
297: ldc           #40
299: invokestatic  #38
302: return
Exception table:
from    to  target type
159   172   175   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1537
End line: 1564
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.analysis.ParametricUnivariateFunction parametricUnivariateFunction4 = null;
        double[] doubleArray6 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix7 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        double[] doubleArray9 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6, doubleArray9);
        int int12 = org.apache.commons.math3.util.MathUtils.hash(doubleArray9);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = parametricUnivariateFunctionCurveFitter2.fit((int) 'a', parametricUnivariateFunction4, doubleArray9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1076101151 + "'", int12 == 1076101151);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: new           #91
38: dup
39: aload_2
40: invokespecial #92
43: astore_3
44: aconst_null
45: astore        4
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: ldc2_w        #45
55: dastore
56: astore        5
58: aload         5
60: invokestatic  #47
63: astore        6
65: iconst_1
66: newarray       double
68: dup
69: iconst_0
70: ldc2_w        #45
73: dastore
74: astore        7
76: aload         7
78: invokestatic  #47
81: astore        8
83: new           #48
86: dup
87: aload         5
89: aload         7
91: invokespecial #49
94: astore        9
96: aload         7
98: invokestatic  #238
101: istore        10
103: aload_3
104: bipush        97
106: aload         4
108: aload         7
110: invokevirtual #109
113: astore        11
115: ldc           #78
117: invokestatic  #13
120: goto          125
123: astore        11
125: aload         5
127: invokestatic  #35
130: aload         5
132: invokestatic  #36
135: ldc           #60
137: invokestatic  #38
140: aload         6
142: invokestatic  #35
145: aload         7
147: invokestatic  #35
150: aload         7
152: invokestatic  #36
155: ldc           #60
157: invokestatic  #38
160: aload         8
162: invokestatic  #35
165: new           #52
168: dup
169: invokespecial #53
172: ldc           #54
174: invokevirtual #55
177: iload         10
179: invokevirtual #56
182: ldc           #57
184: invokevirtual #55
187: ldc           #198
189: invokevirtual #56
192: ldc           #54
194: invokevirtual #55
197: invokevirtual #58
200: iload         10
202: ldc           #198
204: if_icmpne     211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #59
215: return
Exception table:
from    to  target type
103   120   123   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1567
End line: 1581
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getStartPoint();
        double double7 = levenbergMarquardtOptimizer3.getChiSquare();
        int int8 = levenbergMarquardtOptimizer3.getEvaluations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #239
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #65
31: ldc2_w        #45
34: ldc2_w        #206
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #231
45: astore_2
46: aload_1
47: invokevirtual #230
50: istore_3
51: aload_1
52: invokevirtual #83
55: astore        4
57: aload_1
58: invokevirtual #191
61: dstore        5
63: aload_1
64: invokevirtual #208
67: istore        7
69: aload_2
70: invokestatic  #15
73: new           #52
76: dup
77: invokespecial #53
80: ldc           #54
82: invokevirtual #55
85: iload_3
86: invokevirtual #56
89: ldc           #57
91: invokevirtual #55
94: iconst_0
95: invokevirtual #56
98: ldc           #54
100: invokevirtual #55
103: invokevirtual #58
106: iload_3
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #59
118: aload         4
120: invokestatic  #15
123: new           #52
126: dup
127: invokespecial #53
130: ldc           #54
132: invokevirtual #55
135: dload         5
137: invokevirtual #80
140: ldc           #57
142: invokevirtual #55
145: dconst_0
146: invokevirtual #80
149: ldc           #54
151: invokevirtual #55
154: invokevirtual #58
157: dload         5
159: dconst_0
160: dcmpl
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #59
172: new           #52
175: dup
176: invokespecial #53
179: ldc           #54
181: invokevirtual #55
184: iload         7
186: invokevirtual #56
189: ldc           #57
191: invokevirtual #55
194: iconst_0
195: invokevirtual #56
198: ldc           #54
200: invokevirtual #55
203: invokevirtual #58
206: iload         7
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #59
219: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1584
End line: 1596
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        // The following exception was thrown during execution in test generation
        try {
            int int2 = levenbergMarquardtOptimizer1.getTargetSize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #240
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: aload_2
36: invokevirtual #192
39: istore_3
40: ldc           #12
42: invokestatic  #13
45: goto          49
48: astore_3
49: return
Exception table:
from    to  target type
35    45    48   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1599
End line: 1700
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        double[] doubleArray9 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix11 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.linear.RealVector realVector13 = diagonalMatrix11.getRowVector(0);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray23 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix25 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray23, true);
        double[] doubleArray26 = diagonalMatrix19.operate(doubleArray23);
        double[] doubleArray27 = diagonalMatrix11.preMultiply(doubleArray26);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix28 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray26);
        double[][] doubleArray29 = diagonalMatrix28.getData();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight30 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        arrayRealVector31.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector36.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector39.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector42 = arrayRealVector36.append(realVector41);
        double double43 = arrayRealVector31.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector46 = arrayRealVector44.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector47 = arrayRealVector31.subtract(realVector46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray49 = arrayRealVector48.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector31, doubleArray49);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight51 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray49);
        org.apache.commons.math3.linear.RealMatrix realMatrix52 = weight51.getWeight();
        org.apache.commons.math3.analysis.MultivariateVectorFunction multivariateVectorFunction53 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunction modelFunction54 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunction(multivariateVectorFunction53);
        org.apache.commons.math3.analysis.MultivariateVectorFunction multivariateVectorFunction55 = modelFunction54.getModelFunction();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector58 = arrayRealVector56.mapDivideToSelf((double) (byte) -1);
        arrayRealVector56.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector63 = arrayRealVector61.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector64 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector66 = arrayRealVector64.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector61.append(realVector66);
        double double68 = arrayRealVector56.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector61);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector69 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector71 = arrayRealVector69.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector72 = arrayRealVector56.subtract(realVector71);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray74 = arrayRealVector73.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector56, doubleArray74);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight76 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray74);
        org.apache.commons.math3.linear.RealMatrix realMatrix77 = weight76.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix78 = weight76.getWeight();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray79 = new org.apache.commons.math3.optim.OptimizationData[] { weight30, weight51, modelFunction54, weight76 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair80 = levenbergMarquardtOptimizer3.optimize(optimizationDataArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(realMatrix52);
        org.junit.Assert.assertNull(multivariateVectorFunction55);
        org.junit.Assert.assertNotNull(realVector58);
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(realVector71);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertNotNull(realMatrix78);
        org.junit.Assert.assertNotNull(optimizationDataArray79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #241
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #65
31: ldc2_w        #45
34: ldc2_w        #206
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #10
45: astore_2
46: aload_1
47: invokevirtual #208
50: istore_3
51: iconst_3
52: newarray       double
54: dup
55: iconst_0
56: dconst_1
57: dastore
58: dup
59: iconst_1
60: ldc2_w        #21
63: dastore
64: dup
65: iconst_2
66: dconst_1
67: dastore
68: astore        4
70: new           #23
73: dup
74: aload         4
76: iconst_1
77: invokespecial #24
80: astore        5
82: aload         5
84: iconst_0
85: invokevirtual #25
88: astore        6
90: iconst_3
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: ldc2_w        #21
102: dastore
103: dup
104: iconst_2
105: dconst_1
106: dastore
107: astore        7
109: new           #23
112: dup
113: aload         7
115: iconst_1
116: invokespecial #24
119: astore        8
121: iconst_3
122: newarray       double
124: dup
125: iconst_0
126: dconst_1
127: dastore
128: dup
129: iconst_1
130: ldc2_w        #21
133: dastore
134: dup
135: iconst_2
136: dconst_1
137: dastore
138: astore        9
140: new           #23
143: dup
144: aload         9
146: iconst_1
147: invokespecial #24
150: astore        10
152: aload         8
154: aload         9
156: invokevirtual #26
159: astore        11
161: aload         5
163: aload         11
165: invokevirtual #27
168: astore        12
170: new           #23
173: dup
174: aload         11
176: invokespecial #28
179: astore        13
181: aload         13
183: invokevirtual #29
186: astore        14
188: new           #30
191: dup
192: aload         13
194: invokespecial #31
197: astore        15
199: new           #48
202: dup
203: invokespecial #64
206: astore        16
208: aload         16
210: ldc2_w        #65
213: invokevirtual #67
216: astore        17
218: aload         16
220: dconst_1
221: invokevirtual #68
224: new           #48
227: dup
228: invokespecial #64
231: astore        18
233: aload         18
235: ldc2_w        #65
238: invokevirtual #67
241: astore        19
243: new           #48
246: dup
247: invokespecial #64
250: astore        20
252: aload         20
254: ldc2_w        #65
257: invokevirtual #67
260: astore        21
262: aload         18
264: aload         21
266: invokevirtual #69
269: astore        22
271: aload         16
273: aload         18
275: invokevirtual #70
278: dstore        23
280: new           #48
283: dup
284: invokespecial #64
287: astore        25
289: aload         25
291: ldc2_w        #65
294: invokevirtual #67
297: astore        26
299: aload         16
301: aload         26
303: invokevirtual #71
306: astore        27
308: new           #48
311: dup
312: invokespecial #64
315: astore        28
317: aload         28
319: invokevirtual #72
322: astore        29
324: new           #48
327: dup
328: aload         16
330: aload         29
332: invokespecial #73
335: astore        30
337: new           #30
340: dup
341: aload         29
343: invokespecial #74
346: astore        31
348: aload         31
350: invokevirtual #75
353: astore        32
355: aconst_null
356: astore        33
358: new           #214
361: dup
362: aload         33
364: invokespecial #215
367: astore        34
369: aload         34
371: invokevirtual #216
374: astore        35
376: new           #48
379: dup
380: invokespecial #64
383: astore        36
385: aload         36
387: ldc2_w        #65
390: invokevirtual #67
393: astore        37
395: aload         36
397: dconst_1
398: invokevirtual #68
401: new           #48
404: dup
405: invokespecial #64
408: astore        38
410: aload         38
412: ldc2_w        #65
415: invokevirtual #67
418: astore        39
420: new           #48
423: dup
424: invokespecial #64
427: astore        40
429: aload         40
431: ldc2_w        #65
434: invokevirtual #67
437: astore        41
439: aload         38
441: aload         41
443: invokevirtual #69
446: astore        42
448: aload         36
450: aload         38
452: invokevirtual #70
455: dstore        43
457: new           #48
460: dup
461: invokespecial #64
464: astore        45
466: aload         45
468: ldc2_w        #65
471: invokevirtual #67
474: astore        46
476: aload         36
478: aload         46
480: invokevirtual #71
483: astore        47
485: new           #48
488: dup
489: invokespecial #64
492: astore        48
494: aload         48
496: invokevirtual #72
499: astore        49
501: new           #48
504: dup
505: aload         36
507: aload         49
509: invokespecial #73
512: astore        50
514: new           #30
517: dup
518: aload         49
520: invokespecial #74
523: astore        51
525: aload         51
527: invokevirtual #75
530: astore        52
532: aload         51
534: invokevirtual #75
537: astore        53
539: iconst_4
540: anewarray     #76
543: dup
544: iconst_0
545: aload         15
547: aastore
548: dup
549: iconst_1
550: aload         31
552: aastore
553: dup
554: iconst_2
555: aload         34
557: aastore
558: dup
559: iconst_3
560: aload         51
562: aastore
563: astore        54
565: aload_1
566: aload         54
568: invokevirtual #217
571: astore        55
573: ldc           #12
575: invokestatic  #13
578: goto          583
581: astore        55
583: aload_2
584: invokestatic  #15
587: new           #52
590: dup
591: invokespecial #53
594: ldc           #54
596: invokevirtual #55
599: iload_3
600: invokevirtual #56
603: ldc           #57
605: invokevirtual #55
608: iconst_0
609: invokevirtual #56
612: ldc           #54
614: invokevirtual #55
617: invokevirtual #58
620: iload_3
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #59
632: aload         4
634: invokestatic  #35
637: aload         4
639: invokestatic  #36
642: ldc           #37
644: invokestatic  #38
647: aload         6
649: invokestatic  #35
652: aload         7
654: invokestatic  #35
657: aload         7
659: invokestatic  #36
662: ldc           #37
664: invokestatic  #38
667: aload         9
669: invokestatic  #35
672: aload         9
674: invokestatic  #36
677: ldc           #37
679: invokestatic  #38
682: aload         11
684: invokestatic  #35
687: aload         11
689: invokestatic  #36
692: ldc           #39
694: invokestatic  #38
697: aload         12
699: invokestatic  #35
702: aload         12
704: invokestatic  #36
707: ldc           #40
709: invokestatic  #38
712: aload         14
714: invokestatic  #35
717: aload         17
719: invokestatic  #35
722: aload         19
724: invokestatic  #35
727: aload         21
729: invokestatic  #35
732: aload         22
734: invokestatic  #35
737: new           #52
740: dup
741: invokespecial #53
744: ldc           #54
746: invokevirtual #55
749: dload         23
751: invokevirtual #80
754: ldc           #57
756: invokevirtual #55
759: dconst_0
760: invokevirtual #80
763: ldc           #54
765: invokevirtual #55
768: invokevirtual #58
771: dload         23
773: dconst_0
774: dcmpl
775: ifne          782
778: iconst_1
779: goto          783
782: iconst_0
783: invokestatic  #59
786: aload         26
788: invokestatic  #35
791: aload         27
793: invokestatic  #35
796: aload         29
798: invokestatic  #35
801: aload         29
803: invokestatic  #36
806: ldc           #81
808: invokestatic  #38
811: aload         32
813: invokestatic  #35
816: aload         35
818: invokestatic  #15
821: aload         37
823: invokestatic  #35
826: aload         39
828: invokestatic  #35
831: aload         41
833: invokestatic  #35
836: aload         42
838: invokestatic  #35
841: new           #52
844: dup
845: invokespecial #53
848: ldc           #54
850: invokevirtual #55
853: dload         43
855: invokevirtual #80
858: ldc           #57
860: invokevirtual #55
863: dconst_0
864: invokevirtual #80
867: ldc           #54
869: invokevirtual #55
872: invokevirtual #58
875: dload         43
877: dconst_0
878: dcmpl
879: ifne          886
882: iconst_1
883: goto          887
886: iconst_0
887: invokestatic  #59
890: aload         46
892: invokestatic  #35
895: aload         47
897: invokestatic  #35
900: aload         49
902: invokestatic  #35
905: aload         49
907: invokestatic  #36
910: ldc           #81
912: invokestatic  #38
915: aload         52
917: invokestatic  #35
920: aload         53
922: invokestatic  #35
925: aload         54
927: invokestatic  #35
930: return
Exception table:
from    to  target type
565   578   581   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 1703
End line: 1719
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker5 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair7 = levenbergMarquardtOptimizer3.optimize(optimizationDataArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #242
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #65
31: ldc2_w        #45
34: ldc2_w        #206
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #10
45: astore_2
46: aload_1
47: invokevirtual #243
50: astore_3
51: aconst_null
52: astore        4
54: aload_1
55: aload         4
57: invokevirtual #217
60: astore        5
62: ldc           #12
64: invokestatic  #13
67: goto          72
70: astore        5
72: aload_2
73: invokestatic  #15
76: aload_3
77: invokestatic  #15
80: return
Exception table:
from    to  target type
54    67    70   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 1722
End line: 1739
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math3.exception.NumberIsTooLargeException numberIsTooLargeException3 = new org.apache.commons.math3.exception.NumberIsTooLargeException((java.lang.Number) (byte) 100, (java.lang.Number) (-1.0f), false);
        org.apache.commons.math3.exception.util.Localizable localizable4 = null;
        org.apache.commons.math3.exception.NotPositiveException notPositiveException6 = new org.apache.commons.math3.exception.NotPositiveException(localizable4, (java.lang.Number) 10.0f);
        numberIsTooLargeException3.addSuppressed((java.lang.Throwable) notPositiveException6);
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker9 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer10 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(false, pointVectorValuePairConvergenceChecker9);
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer> mathIllegalArgumentExceptionPair11 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer>((org.apache.commons.math3.exception.MathIllegalArgumentException) notPositiveException6, gaussNewtonOptimizer10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix12 = gaussNewtonOptimizer10.getWeightSquareRoot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #131
27: dup
28: bipush        100
30: invokestatic  #132
33: ldc           #133
35: invokestatic  #134
38: iconst_0
39: invokespecial #135
42: astore_1
43: aconst_null
44: astore_2
45: new           #136
48: dup
49: aload_2
50: ldc           #137
52: invokestatic  #134
55: invokespecial #138
58: astore_3
59: aload_1
60: aload_3
61: invokevirtual #139
64: aconst_null
65: astore        4
67: new           #62
70: dup
71: iconst_0
72: aload         4
74: invokespecial #140
77: astore        5
79: new           #141
82: dup
83: aload_3
84: aload         5
86: invokespecial #142
89: astore        6
91: aload         5
93: invokevirtual #245
96: astore        7
98: ldc           #12
100: invokestatic  #13
103: goto          108
106: astore        7
108: return
Exception table:
from    to  target type
91   103   106   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 1742
End line: 1752
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        int int6 = levenbergMarquardtOptimizer3.getEvaluations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #246
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #65
31: ldc2_w        #45
34: ldc2_w        #206
37: invokespecial #153
40: astore_1
41: aload_1
42: invokevirtual #231
45: astore_2
46: aload_1
47: invokevirtual #230
50: istore_3
51: aload_1
52: invokevirtual #208
55: istore        4
57: aload_2
58: invokestatic  #15
61: new           #52
64: dup
65: invokespecial #53
68: ldc           #54
70: invokevirtual #55
73: iload_3
74: invokevirtual #56
77: ldc           #57
79: invokevirtual #55
82: iconst_0
83: invokevirtual #56
86: ldc           #54
88: invokevirtual #55
91: invokevirtual #58
94: iload_3
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #59
106: new           #52
109: dup
110: invokespecial #53
113: ldc           #54
115: invokevirtual #55
118: iload         4
120: invokevirtual #56
123: ldc           #57
125: invokevirtual #55
128: iconst_0
129: invokevirtual #56
132: ldc           #54
134: invokevirtual #55
137: invokevirtual #58
140: iload         4
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #59
153: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 1755
End line: 1766
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getIterations();
        double[] doubleArray3 = gaussNewtonOptimizer1.getStartPoint();
        double double4 = gaussNewtonOptimizer1.getChiSquare();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #247
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #62
29: dup
30: aload_1
31: invokespecial #63
34: astore_2
35: aload_2
36: invokevirtual #228
39: istore_3
40: aload_2
41: invokevirtual #248
44: astore        4
46: aload_2
47: invokevirtual #249
50: dstore        5
52: new           #52
55: dup
56: invokespecial #53
59: ldc           #54
61: invokevirtual #55
64: iload_3
65: invokevirtual #56
68: ldc           #57
70: invokevirtual #55
73: iconst_0
74: invokevirtual #56
77: ldc           #54
79: invokevirtual #55
82: invokevirtual #58
85: iload_3
86: ifne          93
89: iconst_1
90: goto          94
93: iconst_0
94: invokestatic  #59
97: aload         4
99: invokestatic  #15
102: new           #52
105: dup
106: invokespecial #53
109: ldc           #54
111: invokevirtual #55
114: dload         5
116: invokevirtual #80
119: ldc           #57
121: invokevirtual #55
124: dconst_0
125: invokevirtual #80
128: ldc           #54
130: invokevirtual #55
133: invokevirtual #58
136: dload         5
138: dconst_0
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #59
151: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 1769
End line: 1781
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        double double8 = weightedObservedPoint6.getY();
        double double9 = weightedObservedPoint6.getY();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: new           #91
38: dup
39: aload_2
40: invokespecial #92
43: astore_3
44: new           #113
47: dup
48: ldc2_w        #21
51: dconst_0
52: ldc2_w        #21
55: invokespecial #114
58: astore        4
60: aload_3
61: aload         4
63: invokevirtual #115
66: aload         4
68: invokevirtual #251
71: dstore        5
73: aload         4
75: invokevirtual #251
78: dstore        7
80: new           #52
83: dup
84: invokespecial #53
87: ldc           #54
89: invokevirtual #55
92: dload         5
94: invokevirtual #80
97: ldc           #57
99: invokevirtual #55
102: ldc2_w        #21
105: invokevirtual #80
108: ldc           #54
110: invokevirtual #55
113: invokevirtual #58
116: dload         5
118: ldc2_w        #21
121: dcmpl
122: ifne          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #59
133: new           #52
136: dup
137: invokespecial #53
140: ldc           #54
142: invokevirtual #55
145: dload         7
147: invokevirtual #80
150: ldc           #57
152: invokevirtual #55
155: ldc2_w        #21
158: invokevirtual #80
161: ldc           #54
163: invokevirtual #55
166: invokevirtual #58
169: dload         7
171: ldc2_w        #21
174: dcmpl
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #59
186: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 1784
End line: 1794
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray8 = parametricUnivariateFunctionCurveFitter2.getObservations();
        org.junit.Assert.assertNotNull(weightedObservedPointArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: invokespecial #9
34: astore_2
35: new           #91
38: dup
39: aload_2
40: invokespecial #92
43: astore_3
44: new           #113
47: dup
48: ldc2_w        #21
51: dconst_0
52: ldc2_w        #21
55: invokespecial #114
58: astore        4
60: aload_3
61: aload         4
63: invokevirtual #115
66: aload_3
67: invokevirtual #253
70: astore        5
72: aload         5
74: invokestatic  #35
77: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 1797
End line: 1847
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20);
        double[] doubleArray26 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix28 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray26, true);
        org.apache.commons.math3.linear.RealVector realVector30 = diagonalMatrix28.getRowVector(0);
        double[] doubleArray34 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix36 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray34, true);
        double[] doubleArray40 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix42 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray40, true);
        double[] doubleArray43 = diagonalMatrix36.operate(doubleArray40);
        double[] doubleArray44 = diagonalMatrix28.preMultiply(doubleArray43);
        double[] doubleArray45 = diagonalMatrix22.preMultiply(doubleArray44);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight46 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray45);
        org.apache.commons.math3.linear.RealMatrix realMatrix47 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0E10, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #21
36: dastore
37: dup
38: iconst_2
39: dconst_1
40: dastore
41: astore_1
42: new           #23
45: dup
46: aload_1
47: iconst_1
48: invokespecial #24
51: astore_2
52: aload_2
53: iconst_0
54: invokevirtual #25
57: astore_3
58: iconst_3
59: newarray       double
61: dup
62: iconst_0
63: dconst_1
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #21
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: astore        4
77: new           #23
80: dup
81: aload         4
83: iconst_1
84: invokespecial #24
87: astore        5
89: iconst_3
90: newarray       double
92: dup
93: iconst_0
94: dconst_1
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #21
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: astore        6
108: new           #23
111: dup
112: aload         6
114: iconst_1
115: invokespecial #24
118: astore        7
120: aload         5
122: aload         6
124: invokevirtual #26
127: astore        8
129: aload_2
130: aload         8
132: invokevirtual #27
135: astore        9
137: new           #23
140: dup
141: aload         8
143: invokespecial #28
146: astore        10
148: iconst_3
149: newarray       double
151: dup
152: iconst_0
153: dconst_1
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #21
160: dastore
161: dup
162: iconst_2
163: dconst_1
164: dastore
165: astore        11
167: new           #23
170: dup
171: aload         11
173: iconst_1
174: invokespecial #24
177: astore        12
179: aload         12
181: iconst_0
182: invokevirtual #25
185: astore        13
187: iconst_3
188: newarray       double
190: dup
191: iconst_0
192: dconst_1
193: dastore
194: dup
195: iconst_1
196: ldc2_w        #21
199: dastore
200: dup
201: iconst_2
202: dconst_1
203: dastore
204: astore        14
206: new           #23
209: dup
210: aload         14
212: iconst_1
213: invokespecial #24
216: astore        15
218: iconst_3
219: newarray       double
221: dup
222: iconst_0
223: dconst_1
224: dastore
225: dup
226: iconst_1
227: ldc2_w        #21
230: dastore
231: dup
232: iconst_2
233: dconst_1
234: dastore
235: astore        16
237: new           #23
240: dup
241: aload         16
243: iconst_1
244: invokespecial #24
247: astore        17
249: aload         15
251: aload         16
253: invokevirtual #26
256: astore        18
258: aload         12
260: aload         18
262: invokevirtual #27
265: astore        19
267: aload         10
269: aload         19
271: invokevirtual #27
274: astore        20
276: new           #30
279: dup
280: aload         20
282: invokespecial #74
285: astore        21
287: aload         20
289: invokestatic  #255
292: astore        22
294: aload_1
295: invokestatic  #35
298: aload_1
299: invokestatic  #36
302: ldc           #37
304: invokestatic  #38
307: aload_3
308: invokestatic  #35
311: aload         4
313: invokestatic  #35
316: aload         4
318: invokestatic  #36
321: ldc           #37
323: invokestatic  #38
326: aload         6
328: invokestatic  #35
331: aload         6
333: invokestatic  #36
336: ldc           #37
338: invokestatic  #38
341: aload         8
343: invokestatic  #35
346: aload         8
348: invokestatic  #36
351: ldc           #39
353: invokestatic  #38
356: aload         9
358: invokestatic  #35
361: aload         9
363: invokestatic  #36
366: ldc           #40
368: invokestatic  #38
371: aload         11
373: invokestatic  #35
376: aload         11
378: invokestatic  #36
381: ldc           #37
383: invokestatic  #38
386: aload         13
388: invokestatic  #35
391: aload         14
393: invokestatic  #35
396: aload         14
398: invokestatic  #36
401: ldc           #37
403: invokestatic  #38
406: aload         16
408: invokestatic  #35
411: aload         16
413: invokestatic  #36
416: ldc           #37
418: invokestatic  #38
421: aload         18
423: invokestatic  #35
426: aload         18
428: invokestatic  #36
431: ldc           #39
433: invokestatic  #38
436: aload         19
438: invokestatic  #35
441: aload         19
443: invokestatic  #36
446: ldc           #40
448: invokestatic  #38
451: aload         20
453: invokestatic  #35
456: aload         20
458: invokestatic  #36
461: ldc           #221
463: invokestatic  #38
466: aload         22
468: invokestatic  #35
471: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 1850
End line: 1883
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getUpperBound();
        org.apache.commons.math3.optim.MaxIter maxIter8 = new org.apache.commons.math3.optim.MaxIter(35);
        org.apache.commons.math3.optim.MaxEval maxEval9 = org.apache.commons.math3.optim.MaxEval.unlimited();
        org.apache.commons.math3.analysis.MultivariateVectorFunction multivariateVectorFunction10 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunction modelFunction11 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunction(multivariateVectorFunction10);
        double[] doubleArray15 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix17 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray15, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray15, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess20 = new org.apache.commons.math3.optim.InitialGuess(doubleArray15);
        double[] doubleArray21 = initialGuess20.getInitialGuess();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray22 = new org.apache.commons.math3.optim.OptimizationData[] { maxIter8, maxEval9, modelFunction11, initialGuess20 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair23 = levenbergMarquardtOptimizer3.optimize(optimizationDataArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(maxEval9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(optimizationDataArray22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #230
51: istore_3
52: aload_1
53: invokevirtual #231
56: astore        4
58: new           #144
61: dup
62: bipush        35
64: invokespecial #145
67: astore        5
69: invokestatic  #257
72: astore        6
74: aconst_null
75: astore        7
77: new           #214
80: dup
81: aload         7
83: invokespecial #215
86: astore        8
88: iconst_3
89: newarray       double
91: dup
92: iconst_0
93: dconst_1
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #21
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: astore        9
107: new           #23
110: dup
111: aload         9
113: iconst_1
114: invokespecial #24
117: astore        10
119: new           #23
122: dup
123: aload         9
125: iconst_1
126: invokespecial #24
129: astore        11
131: new           #118
134: dup
135: aload         9
137: invokespecial #119
140: astore        12
142: aload         12
144: invokevirtual #120
147: astore        13
149: iconst_4
150: anewarray     #76
153: dup
154: iconst_0
155: aload         5
157: aastore
158: dup
159: iconst_1
160: aload         6
162: aastore
163: dup
164: iconst_2
165: aload         8
167: aastore
168: dup
169: iconst_3
170: aload         12
172: aastore
173: astore        14
175: aload_1
176: aload         14
178: invokevirtual #217
181: astore        15
183: ldc           #12
185: invokestatic  #13
188: goto          193
191: astore        15
193: aload_2
194: invokestatic  #15
197: new           #52
200: dup
201: invokespecial #53
204: ldc           #54
206: invokevirtual #55
209: iload_3
210: invokevirtual #56
213: ldc           #57
215: invokevirtual #55
218: iconst_0
219: invokevirtual #56
222: ldc           #54
224: invokevirtual #55
227: invokevirtual #58
230: iload_3
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #59
242: aload         4
244: invokestatic  #15
247: aload         6
249: invokestatic  #35
252: aload         9
254: invokestatic  #35
257: aload         9
259: invokestatic  #36
262: ldc           #37
264: invokestatic  #38
267: aload         13
269: invokestatic  #35
272: aload         13
274: invokestatic  #36
277: ldc           #37
279: invokestatic  #38
282: aload         14
284: invokestatic  #35
287: return
Exception table:
from    to  target type
175   188   191   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 1886
End line: 1897
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint(1.0038848218538872d, 15611.402687296519d, (double) 35);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: ldc2_w        #264
76: ldc2_w        #266
79: ldc2_w        #268
82: invokevirtual #270
85: aload_2
86: invokestatic  #15
89: new           #52
92: dup
93: invokespecial #53
96: ldc           #54
98: invokevirtual #55
101: iload_3
102: invokevirtual #56
105: ldc           #57
107: invokevirtual #55
110: iconst_0
111: invokevirtual #56
114: ldc           #54
116: invokevirtual #55
119: invokevirtual #58
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #59
134: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 1900
End line: 1972
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getLowerBound();
        int int4 = levenbergMarquardtOptimizer1.getEvaluations();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds6 = org.apache.commons.math3.optim.SimpleBounds.unbounded((int) (byte) 1);
        double[] doubleArray10 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix12 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray10, true);
        org.apache.commons.math3.linear.RealVector realVector14 = diagonalMatrix12.getRowVector(0);
        double[] doubleArray18 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix20 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray18, true);
        double[] doubleArray24 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix26 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray24, true);
        double[] doubleArray27 = diagonalMatrix20.operate(doubleArray24);
        double[] doubleArray28 = diagonalMatrix12.preMultiply(doubleArray27);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix29 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray27);
        double[] doubleArray33 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix35 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray33, true);
        org.apache.commons.math3.linear.RealVector realVector37 = diagonalMatrix35.getRowVector(0);
        double[] doubleArray41 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix43 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray41, true);
        double[] doubleArray47 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix49 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray47, true);
        double[] doubleArray50 = diagonalMatrix43.operate(doubleArray47);
        double[] doubleArray51 = diagonalMatrix35.preMultiply(doubleArray50);
        double[] doubleArray52 = diagonalMatrix29.preMultiply(doubleArray51);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight53 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray52);
        org.apache.commons.math3.optim.SimpleBounds simpleBounds55 = org.apache.commons.math3.optim.SimpleBounds.unbounded(97);
        double[] doubleArray56 = simpleBounds55.getUpper();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray57 = new org.apache.commons.math3.optim.OptimizationData[] { simpleBounds6, weight53, simpleBounds55 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair58 = levenbergMarquardtOptimizer1.optimize(optimizationDataArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(simpleBounds6);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0E10, 1.0]");
        org.junit.Assert.assertNotNull(simpleBounds55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity]");
        org.junit.Assert.assertNotNull(optimizationDataArray57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #271
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #10
40: astore_3
41: aload_2
42: invokevirtual #10
45: astore        4
47: aload_2
48: invokevirtual #208
51: istore        5
53: iconst_1
54: invokestatic  #232
57: astore        6
59: iconst_3
60: newarray       double
62: dup
63: iconst_0
64: dconst_1
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #21
71: dastore
72: dup
73: iconst_2
74: dconst_1
75: dastore
76: astore        7
78: new           #23
81: dup
82: aload         7
84: iconst_1
85: invokespecial #24
88: astore        8
90: aload         8
92: iconst_0
93: invokevirtual #25
96: astore        9
98: iconst_3
99: newarray       double
101: dup
102: iconst_0
103: dconst_1
104: dastore
105: dup
106: iconst_1
107: ldc2_w        #21
110: dastore
111: dup
112: iconst_2
113: dconst_1
114: dastore
115: astore        10
117: new           #23
120: dup
121: aload         10
123: iconst_1
124: invokespecial #24
127: astore        11
129: iconst_3
130: newarray       double
132: dup
133: iconst_0
134: dconst_1
135: dastore
136: dup
137: iconst_1
138: ldc2_w        #21
141: dastore
142: dup
143: iconst_2
144: dconst_1
145: dastore
146: astore        12
148: new           #23
151: dup
152: aload         12
154: iconst_1
155: invokespecial #24
158: astore        13
160: aload         11
162: aload         12
164: invokevirtual #26
167: astore        14
169: aload         8
171: aload         14
173: invokevirtual #27
176: astore        15
178: new           #23
181: dup
182: aload         14
184: invokespecial #28
187: astore        16
189: iconst_3
190: newarray       double
192: dup
193: iconst_0
194: dconst_1
195: dastore
196: dup
197: iconst_1
198: ldc2_w        #21
201: dastore
202: dup
203: iconst_2
204: dconst_1
205: dastore
206: astore        17
208: new           #23
211: dup
212: aload         17
214: iconst_1
215: invokespecial #24
218: astore        18
220: aload         18
222: iconst_0
223: invokevirtual #25
226: astore        19
228: iconst_3
229: newarray       double
231: dup
232: iconst_0
233: dconst_1
234: dastore
235: dup
236: iconst_1
237: ldc2_w        #21
240: dastore
241: dup
242: iconst_2
243: dconst_1
244: dastore
245: astore        20
247: new           #23
250: dup
251: aload         20
253: iconst_1
254: invokespecial #24
257: astore        21
259: iconst_3
260: newarray       double
262: dup
263: iconst_0
264: dconst_1
265: dastore
266: dup
267: iconst_1
268: ldc2_w        #21
271: dastore
272: dup
273: iconst_2
274: dconst_1
275: dastore
276: astore        22
278: new           #23
281: dup
282: aload         22
284: iconst_1
285: invokespecial #24
288: astore        23
290: aload         21
292: aload         22
294: invokevirtual #26
297: astore        24
299: aload         18
301: aload         24
303: invokevirtual #27
306: astore        25
308: aload         16
310: aload         25
312: invokevirtual #27
315: astore        26
317: new           #30
320: dup
321: aload         26
323: invokespecial #74
326: astore        27
328: bipush        97
330: invokestatic  #232
333: astore        28
335: aload         28
337: invokevirtual #272
340: astore        29
342: iconst_3
343: anewarray     #76
346: dup
347: iconst_0
348: aload         6
350: aastore
351: dup
352: iconst_1
353: aload         27
355: aastore
356: dup
357: iconst_2
358: aload         28
360: aastore
361: astore        30
363: aload_2
364: aload         30
366: invokevirtual #217
369: astore        31
371: ldc           #12
373: invokestatic  #13
376: goto          381
379: astore        31
381: aload_3
382: invokestatic  #15
385: aload         4
387: invokestatic  #15
390: new           #52
393: dup
394: invokespecial #53
397: ldc           #54
399: invokevirtual #55
402: iload         5
404: invokevirtual #56
407: ldc           #57
409: invokevirtual #55
412: iconst_0
413: invokevirtual #56
416: ldc           #54
418: invokevirtual #55
421: invokevirtual #58
424: iload         5
426: ifne          433
429: iconst_1
430: goto          434
433: iconst_0
434: invokestatic  #59
437: aload         6
439: invokestatic  #35
442: aload         7
444: invokestatic  #35
447: aload         7
449: invokestatic  #36
452: ldc           #37
454: invokestatic  #38
457: aload         9
459: invokestatic  #35
462: aload         10
464: invokestatic  #35
467: aload         10
469: invokestatic  #36
472: ldc           #37
474: invokestatic  #38
477: aload         12
479: invokestatic  #35
482: aload         12
484: invokestatic  #36
487: ldc           #37
489: invokestatic  #38
492: aload         14
494: invokestatic  #35
497: aload         14
499: invokestatic  #36
502: ldc           #39
504: invokestatic  #38
507: aload         15
509: invokestatic  #35
512: aload         15
514: invokestatic  #36
517: ldc           #40
519: invokestatic  #38
522: aload         17
524: invokestatic  #35
527: aload         17
529: invokestatic  #36
532: ldc           #37
534: invokestatic  #38
537: aload         19
539: invokestatic  #35
542: aload         20
544: invokestatic  #35
547: aload         20
549: invokestatic  #36
552: ldc           #37
554: invokestatic  #38
557: aload         22
559: invokestatic  #35
562: aload         22
564: invokestatic  #36
567: ldc           #37
569: invokestatic  #38
572: aload         24
574: invokestatic  #35
577: aload         24
579: invokestatic  #36
582: ldc           #39
584: invokestatic  #38
587: aload         25
589: invokestatic  #35
592: aload         25
594: invokestatic  #36
597: ldc           #40
599: invokestatic  #38
602: aload         26
604: invokestatic  #35
607: aload         26
609: invokestatic  #36
612: ldc           #221
614: invokestatic  #38
617: aload         28
619: invokestatic  #35
622: aload         29
624: invokestatic  #35
627: aload         29
629: invokestatic  #36
632: ldc_w         #273
635: invokestatic  #38
638: aload         30
640: invokestatic  #35
643: return
Exception table:
from    to  target type
363   376   379   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 1975
End line: 1988
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer multivariateVectorOptimizer0 = null;
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter1 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>(multivariateVectorOptimizer0);
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker2 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker2);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter4 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint8 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(weightedObservedPoint8);
        parametricUnivariateFunctionCurveFitter1.addObservedPoint(weightedObservedPoint8);
        double double11 = weightedObservedPoint8.getWeight();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #274
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #91
30: dup
31: aload_1
32: invokespecial #92
35: astore_2
36: aconst_null
37: astore_3
38: new           #8
41: dup
42: aload_3
43: invokespecial #9
46: astore        4
48: new           #91
51: dup
52: aload         4
54: invokespecial #92
57: astore        5
59: new           #113
62: dup
63: ldc2_w        #21
66: dconst_0
67: ldc2_w        #21
70: invokespecial #114
73: astore        6
75: aload         5
77: aload         6
79: invokevirtual #115
82: aload_2
83: aload         6
85: invokevirtual #115
88: aload         6
90: invokevirtual #275
93: dstore        7
95: new           #52
98: dup
99: invokespecial #53
102: ldc           #54
104: invokevirtual #55
107: dload         7
109: invokevirtual #80
112: ldc           #57
114: invokevirtual #55
117: ldc2_w        #21
120: invokevirtual #80
123: ldc           #54
125: invokevirtual #55
128: invokevirtual #58
131: dload         7
133: ldc2_w        #21
136: dcmpl
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #59
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 1991
End line: 1999
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        int int2 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aload_1
39: invokevirtual #44
42: istore_3
43: aload_2
44: invokestatic  #15
47: new           #52
50: dup
51: invokespecial #53
54: ldc           #54
56: invokevirtual #55
59: iload_3
60: invokevirtual #56
63: ldc           #57
65: invokevirtual #55
68: iconst_0
69: invokevirtual #56
72: ldc           #54
74: invokevirtual #55
77: invokevirtual #58
80: iload_3
81: ifne          88
84: iconst_1
85: goto          89
88: iconst_0
89: invokestatic  #59
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2002
End line: 2018
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getStartPoint();
        double double7 = levenbergMarquardtOptimizer3.getChiSquare();
        int int8 = levenbergMarquardtOptimizer3.getIterations();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker9 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #230
51: istore_3
52: aload_1
53: invokevirtual #83
56: astore        4
58: aload_1
59: invokevirtual #191
62: dstore        5
64: aload_1
65: invokevirtual #230
68: istore        7
70: aload_1
71: invokevirtual #243
74: astore        8
76: aload_2
77: invokestatic  #15
80: new           #52
83: dup
84: invokespecial #53
87: ldc           #54
89: invokevirtual #55
92: iload_3
93: invokevirtual #56
96: ldc           #57
98: invokevirtual #55
101: iconst_0
102: invokevirtual #56
105: ldc           #54
107: invokevirtual #55
110: invokevirtual #58
113: iload_3
114: ifne          121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #59
125: aload         4
127: invokestatic  #15
130: new           #52
133: dup
134: invokespecial #53
137: ldc           #54
139: invokevirtual #55
142: dload         5
144: invokevirtual #80
147: ldc           #57
149: invokevirtual #55
152: dconst_0
153: invokevirtual #80
156: ldc           #54
158: invokevirtual #55
161: invokevirtual #58
164: dload         5
166: dconst_0
167: dcmpl
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #59
179: new           #52
182: dup
183: invokespecial #53
186: ldc           #54
188: invokevirtual #55
191: iload         7
193: invokevirtual #56
196: ldc           #57
198: invokevirtual #55
201: iconst_0
202: invokevirtual #56
205: ldc           #54
207: invokevirtual #55
210: invokevirtual #58
213: iload         7
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #59
226: aload         8
228: invokestatic  #15
231: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2021
End line: 2087
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight20 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray18);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = weight20.getWeight();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        arrayRealVector23.set((double) 1);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double double30 = arrayRealVector23.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector29);
        org.apache.commons.math3.linear.RealVector realVector32 = arrayRealVector29.mapMultiplyToSelf((-1.0d));
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivideToSelf((double) (byte) -1);
        arrayRealVector33.set((double) 1);
        java.lang.Double[] doubleArray38 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double double40 = arrayRealVector33.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector39);
        java.lang.Double[] doubleArray41 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = arrayRealVector39.append(arrayRealVector42);
        double double44 = arrayRealVector39.getMaxValue();
        double double45 = arrayRealVector29.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector39);
        // The following exception was thrown during execution in test generation
        try {
            realMatrix21.setRowVector(875017242, (org.apache.commons.math3.linear.RealVector) arrayRealVector39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (875,017,242)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(arrayRealVector43);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #48
28: dup
29: invokespecial #64
32: astore_1
33: aload_1
34: ldc2_w        #65
37: invokevirtual #67
40: astore_2
41: aload_1
42: dconst_1
43: invokevirtual #68
46: new           #48
49: dup
50: invokespecial #64
53: astore_3
54: aload_3
55: ldc2_w        #65
58: invokevirtual #67
61: astore        4
63: new           #48
66: dup
67: invokespecial #64
70: astore        5
72: aload         5
74: ldc2_w        #65
77: invokevirtual #67
80: astore        6
82: aload_3
83: aload         6
85: invokevirtual #69
88: astore        7
90: aload_1
91: aload_3
92: invokevirtual #70
95: dstore        8
97: new           #48
100: dup
101: invokespecial #64
104: astore        10
106: aload         10
108: ldc2_w        #65
111: invokevirtual #67
114: astore        11
116: aload_1
117: aload         11
119: invokevirtual #71
122: astore        12
124: new           #48
127: dup
128: invokespecial #64
131: astore        13
133: aload         13
135: invokevirtual #72
138: astore        14
140: new           #48
143: dup
144: aload_1
145: aload         14
147: invokespecial #73
150: astore        15
152: new           #30
155: dup
156: aload         14
158: invokespecial #74
161: astore        16
163: aload         16
165: invokevirtual #75
168: astore        17
170: new           #48
173: dup
174: invokespecial #64
177: astore        18
179: aload         18
181: ldc2_w        #65
184: invokevirtual #67
187: astore        19
189: aload         18
191: dconst_1
192: invokevirtual #68
195: iconst_0
196: anewarray     #97
199: astore        20
201: new           #48
204: dup
205: aload         20
207: invokespecial #107
210: astore        21
212: aload         18
214: aload         21
216: invokevirtual #70
219: dstore        22
221: aload         21
223: ldc2_w        #65
226: invokevirtual #280
229: astore        24
231: new           #48
234: dup
235: invokespecial #64
238: astore        25
240: aload         25
242: ldc2_w        #65
245: invokevirtual #67
248: astore        26
250: aload         25
252: dconst_1
253: invokevirtual #68
256: iconst_0
257: anewarray     #97
260: astore        27
262: new           #48
265: dup
266: aload         27
268: invokespecial #107
271: astore        28
273: aload         25
275: aload         28
277: invokevirtual #70
280: dstore        29
282: iconst_0
283: anewarray     #97
286: astore        31
288: new           #48
291: dup
292: aload         31
294: invokespecial #107
297: astore        32
299: aload         28
301: aload         32
303: invokevirtual #108
306: astore        33
308: aload         28
310: invokevirtual #281
313: dstore        34
315: aload         21
317: aload         28
319: invokevirtual #70
322: dstore        36
324: aload         17
326: ldc_w         #282
329: aload         28
331: invokeinterface #283,  3
336: ldc_w         #284
339: invokestatic  #13
342: goto          347
345: astore        38
347: aload_2
348: invokestatic  #35
351: aload         4
353: invokestatic  #35
356: aload         6
358: invokestatic  #35
361: aload         7
363: invokestatic  #35
366: new           #52
369: dup
370: invokespecial #53
373: ldc           #54
375: invokevirtual #55
378: dload         8
380: invokevirtual #80
383: ldc           #57
385: invokevirtual #55
388: dconst_0
389: invokevirtual #80
392: ldc           #54
394: invokevirtual #55
397: invokevirtual #58
400: dload         8
402: dconst_0
403: dcmpl
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #59
415: aload         11
417: invokestatic  #35
420: aload         12
422: invokestatic  #35
425: aload         14
427: invokestatic  #35
430: aload         14
432: invokestatic  #36
435: ldc           #81
437: invokestatic  #38
440: aload         17
442: invokestatic  #35
445: aload         19
447: invokestatic  #35
450: aload         20
452: invokestatic  #35
455: new           #52
458: dup
459: invokespecial #53
462: ldc           #54
464: invokevirtual #55
467: dload         22
469: invokevirtual #80
472: ldc           #57
474: invokevirtual #55
477: dconst_0
478: invokevirtual #80
481: ldc           #54
483: invokevirtual #55
486: invokevirtual #58
489: dload         22
491: dconst_0
492: dcmpl
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #59
504: aload         24
506: invokestatic  #35
509: aload         26
511: invokestatic  #35
514: aload         27
516: invokestatic  #35
519: new           #52
522: dup
523: invokespecial #53
526: ldc           #54
528: invokevirtual #55
531: dload         29
533: invokevirtual #80
536: ldc           #57
538: invokevirtual #55
541: dconst_0
542: invokevirtual #80
545: ldc           #54
547: invokevirtual #55
550: invokevirtual #58
553: dload         29
555: dconst_0
556: dcmpl
557: ifne          564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #59
568: aload         31
570: invokestatic  #35
573: aload         33
575: invokestatic  #35
578: dload         34
580: invokestatic  #285
583: invokestatic  #286
586: new           #52
589: dup
590: invokespecial #53
593: ldc           #54
595: invokevirtual #55
598: dload         36
600: invokevirtual #80
603: ldc           #57
605: invokevirtual #55
608: dconst_0
609: invokevirtual #80
612: ldc           #54
614: invokevirtual #55
617: invokevirtual #58
620: dload         36
622: dconst_0
623: dcmpl
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #59
635: return
Exception table:
from    to  target type
324   342   345   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2090
End line: 2109
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getEvaluations();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds4 = org.apache.commons.math3.optim.SimpleBounds.unbounded(97);
        org.apache.commons.math3.optim.MaxIter maxIter6 = new org.apache.commons.math3.optim.MaxIter((int) (short) 10);
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray7 = new org.apache.commons.math3.optim.OptimizationData[] { simpleBounds4, maxIter6 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair8 = gaussNewtonOptimizer1.optimize(optimizationDataArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(simpleBounds4);
        org.junit.Assert.assertNotNull(optimizationDataArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: aload_1
32: invokespecial #63
35: astore_2
36: aload_2
37: invokevirtual #235
40: istore_3
41: bipush        97
43: invokestatic  #232
46: astore        4
48: new           #144
51: dup
52: bipush        10
54: invokespecial #145
57: astore        5
59: iconst_2
60: anewarray     #76
63: dup
64: iconst_0
65: aload         4
67: aastore
68: dup
69: iconst_1
70: aload         5
72: aastore
73: astore        6
75: aload_2
76: aload         6
78: invokevirtual #77
81: astore        7
83: ldc           #12
85: invokestatic  #13
88: goto          93
91: astore        7
93: new           #52
96: dup
97: invokespecial #53
100: ldc           #54
102: invokevirtual #55
105: iload_3
106: invokevirtual #56
109: ldc           #57
111: invokevirtual #55
114: iconst_0
115: invokevirtual #56
118: ldc           #54
120: invokevirtual #55
123: invokevirtual #58
126: iload_3
127: ifne          134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #59
138: aload         4
140: invokestatic  #35
143: aload         6
145: invokestatic  #35
148: return
Exception table:
from    to  target type
75    88    91   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2112
End line: 2119
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        double double4 = levenbergMarquardtOptimizer3.getChiSquare();
        levenbergMarquardtOptimizer3.setCost(1.2533141373155001d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #181
32: ldc2_w        #183
35: ldc2_w        #151
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #191
46: dstore_2
47: aload_1
48: ldc2_w        #289
51: invokevirtual #291
54: new           #52
57: dup
58: invokespecial #53
61: ldc           #54
63: invokevirtual #55
66: dload_2
67: invokevirtual #80
70: ldc           #57
72: invokevirtual #55
75: dconst_0
76: invokevirtual #80
79: ldc           #54
81: invokevirtual #55
84: invokevirtual #58
87: dload_2
88: dconst_0
89: dcmpl
90: ifne          97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #59
101: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2122
End line: 2136
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray2 = levenbergMarquardtOptimizer1.getLowerBound();
        // The following exception was thrown during execution in test generation
        try {
            double double3 = levenbergMarquardtOptimizer1.getRMS();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #10
40: astore_3
41: aload_2
42: invokevirtual #179
45: dstore        4
47: ldc           #12
49: invokestatic  #13
52: goto          57
55: astore        4
57: aload_3
58: invokestatic  #15
61: return
Exception table:
from    to  target type
41    52    55   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 2139
End line: 2250
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric3 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray8 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix10 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray8, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix12 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray8, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess13 = new org.apache.commons.math3.optim.InitialGuess(doubleArray8);
        double[] doubleArray14 = initialGuess13.getInitialGuess();
        double double15 = parametric3.value(0.0d, doubleArray14);
        double[] doubleArray20 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20, true);
        org.apache.commons.math3.linear.RealVector realVector24 = diagonalMatrix22.getRowVector(0);
        double[] doubleArray28 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix30 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray28, true);
        double[] doubleArray34 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix36 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray34, true);
        double[] doubleArray37 = diagonalMatrix30.operate(doubleArray34);
        double[] doubleArray38 = diagonalMatrix22.preMultiply(doubleArray37);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix39 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray37);
        double[] doubleArray43 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix45 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray43, true);
        org.apache.commons.math3.linear.RealVector realVector47 = diagonalMatrix45.getRowVector(0);
        double[] doubleArray51 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix53 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray51, true);
        double[] doubleArray57 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix59 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray57, true);
        double[] doubleArray60 = diagonalMatrix53.operate(doubleArray57);
        double[] doubleArray61 = diagonalMatrix45.preMultiply(doubleArray60);
        double[] doubleArray62 = diagonalMatrix39.preMultiply(doubleArray61);
        double double63 = parametric3.value(0.0d, doubleArray62);
        double[] doubleArray66 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix67 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray66);
        org.apache.commons.math3.optim.nonlinear.vector.Target target68 = new org.apache.commons.math3.optim.nonlinear.vector.Target(doubleArray66);
        double[] doubleArray69 = target68.getTarget();
        org.apache.commons.math3.linear.RealMatrix realMatrix70 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray69);
        double double71 = parametric3.value((double) (short) 100, doubleArray69);
        double[] doubleArray76 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix78 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray76, true);
        org.apache.commons.math3.linear.RealVector realVector80 = diagonalMatrix78.getRowVector(0);
        double[] doubleArray84 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix86 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray84, true);
        double[] doubleArray90 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix92 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray90, true);
        double[] doubleArray93 = diagonalMatrix86.operate(doubleArray90);
        double[] doubleArray94 = diagonalMatrix78.preMultiply(doubleArray93);
        double[] doubleArray95 = parametric3.gradient(100.0d, doubleArray94);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector97 = new org.apache.commons.math3.linear.ArrayRealVector((int) '4');
        double[] doubleArray98 = arrayRealVector97.getDataRef();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = parametricUnivariateFunctionCurveFitter2.fit((org.apache.commons.math3.analysis.ParametricUnivariateFunction) parametric3, doubleArray98);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0E10, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector80);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[1.0, 100.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: new           #91
39: dup
40: aload_2
41: invokespecial #92
44: astore_3
45: new           #93
48: dup
49: invokespecial #94
52: astore        4
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: dup
62: iconst_1
63: ldc2_w        #21
66: dastore
67: dup
68: iconst_2
69: dconst_1
70: dastore
71: astore        5
73: new           #23
76: dup
77: aload         5
79: iconst_1
80: invokespecial #24
83: astore        6
85: new           #23
88: dup
89: aload         5
91: iconst_1
92: invokespecial #24
95: astore        7
97: new           #118
100: dup
101: aload         5
103: invokespecial #119
106: astore        8
108: aload         8
110: invokevirtual #120
113: astore        9
115: aload         4
117: dconst_0
118: aload         9
120: invokevirtual #121
123: dstore        10
125: iconst_3
126: newarray       double
128: dup
129: iconst_0
130: dconst_1
131: dastore
132: dup
133: iconst_1
134: ldc2_w        #21
137: dastore
138: dup
139: iconst_2
140: dconst_1
141: dastore
142: astore        12
144: new           #23
147: dup
148: aload         12
150: iconst_1
151: invokespecial #24
154: astore        13
156: aload         13
158: iconst_0
159: invokevirtual #25
162: astore        14
164: iconst_3
165: newarray       double
167: dup
168: iconst_0
169: dconst_1
170: dastore
171: dup
172: iconst_1
173: ldc2_w        #21
176: dastore
177: dup
178: iconst_2
179: dconst_1
180: dastore
181: astore        15
183: new           #23
186: dup
187: aload         15
189: iconst_1
190: invokespecial #24
193: astore        16
195: iconst_3
196: newarray       double
198: dup
199: iconst_0
200: dconst_1
201: dastore
202: dup
203: iconst_1
204: ldc2_w        #21
207: dastore
208: dup
209: iconst_2
210: dconst_1
211: dastore
212: astore        17
214: new           #23
217: dup
218: aload         17
220: iconst_1
221: invokespecial #24
224: astore        18
226: aload         16
228: aload         17
230: invokevirtual #26
233: astore        19
235: aload         13
237: aload         19
239: invokevirtual #27
242: astore        20
244: new           #23
247: dup
248: aload         19
250: invokespecial #28
253: astore        21
255: iconst_3
256: newarray       double
258: dup
259: iconst_0
260: dconst_1
261: dastore
262: dup
263: iconst_1
264: ldc2_w        #21
267: dastore
268: dup
269: iconst_2
270: dconst_1
271: dastore
272: astore        22
274: new           #23
277: dup
278: aload         22
280: iconst_1
281: invokespecial #24
284: astore        23
286: aload         23
288: iconst_0
289: invokevirtual #25
292: astore        24
294: iconst_3
295: newarray       double
297: dup
298: iconst_0
299: dconst_1
300: dastore
301: dup
302: iconst_1
303: ldc2_w        #21
306: dastore
307: dup
308: iconst_2
309: dconst_1
310: dastore
311: astore        25
313: new           #23
316: dup
317: aload         25
319: iconst_1
320: invokespecial #24
323: astore        26
325: iconst_3
326: newarray       double
328: dup
329: iconst_0
330: dconst_1
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #21
337: dastore
338: dup
339: iconst_2
340: dconst_1
341: dastore
342: astore        27
344: new           #23
347: dup
348: aload         27
350: iconst_1
351: invokespecial #24
354: astore        28
356: aload         26
358: aload         27
360: invokevirtual #26
363: astore        29
365: aload         23
367: aload         29
369: invokevirtual #27
372: astore        30
374: aload         21
376: aload         30
378: invokevirtual #27
381: astore        31
383: aload         4
385: dconst_0
386: aload         31
388: invokevirtual #121
391: dstore        32
393: iconst_1
394: newarray       double
396: dup
397: iconst_0
398: ldc2_w        #45
401: dastore
402: astore        34
404: aload         34
406: invokestatic  #47
409: astore        35
411: new           #146
414: dup
415: aload         34
417: invokespecial #147
420: astore        36
422: aload         36
424: invokevirtual #294
427: astore        37
429: aload         37
431: invokestatic  #47
434: astore        38
436: aload         4
438: ldc2_w        #21
441: aload         37
443: invokevirtual #121
446: dstore        39
448: iconst_3
449: newarray       double
451: dup
452: iconst_0
453: dconst_1
454: dastore
455: dup
456: iconst_1
457: ldc2_w        #21
460: dastore
461: dup
462: iconst_2
463: dconst_1
464: dastore
465: astore        41
467: new           #23
470: dup
471: aload         41
473: iconst_1
474: invokespecial #24
477: astore        42
479: aload         42
481: iconst_0
482: invokevirtual #25
485: astore        43
487: iconst_3
488: newarray       double
490: dup
491: iconst_0
492: dconst_1
493: dastore
494: dup
495: iconst_1
496: ldc2_w        #21
499: dastore
500: dup
501: iconst_2
502: dconst_1
503: dastore
504: astore        44
506: new           #23
509: dup
510: aload         44
512: iconst_1
513: invokespecial #24
516: astore        45
518: iconst_3
519: newarray       double
521: dup
522: iconst_0
523: dconst_1
524: dastore
525: dup
526: iconst_1
527: ldc2_w        #21
530: dastore
531: dup
532: iconst_2
533: dconst_1
534: dastore
535: astore        46
537: new           #23
540: dup
541: aload         46
543: iconst_1
544: invokespecial #24
547: astore        47
549: aload         45
551: aload         46
553: invokevirtual #26
556: astore        48
558: aload         42
560: aload         48
562: invokevirtual #27
565: astore        49
567: aload         4
569: ldc2_w        #21
572: aload         49
574: invokevirtual #100
577: astore        50
579: new           #48
582: dup
583: bipush        52
585: invokespecial #295
588: astore        51
590: aload         51
592: invokevirtual #72
595: astore        52
597: aload_3
598: aload         4
600: aload         52
602: invokevirtual #296
605: astore        53
607: ldc           #78
609: invokestatic  #13
612: goto          617
615: astore        53
617: aload         5
619: invokestatic  #35
622: aload         5
624: invokestatic  #36
627: ldc           #37
629: invokestatic  #38
632: aload         9
634: invokestatic  #35
637: aload         9
639: invokestatic  #36
642: ldc           #37
644: invokestatic  #38
647: new           #52
650: dup
651: invokespecial #53
654: ldc           #54
656: invokevirtual #55
659: dload         10
661: invokevirtual #80
664: ldc           #57
666: invokevirtual #55
669: dconst_1
670: invokevirtual #80
673: ldc           #54
675: invokevirtual #55
678: invokevirtual #58
681: dload         10
683: dconst_1
684: dcmpl
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #59
696: aload         12
698: invokestatic  #35
701: aload         12
703: invokestatic  #36
706: ldc           #37
708: invokestatic  #38
711: aload         14
713: invokestatic  #35
716: aload         15
718: invokestatic  #35
721: aload         15
723: invokestatic  #36
726: ldc           #37
728: invokestatic  #38
731: aload         17
733: invokestatic  #35
736: aload         17
738: invokestatic  #36
741: ldc           #37
743: invokestatic  #38
746: aload         19
748: invokestatic  #35
751: aload         19
753: invokestatic  #36
756: ldc           #39
758: invokestatic  #38
761: aload         20
763: invokestatic  #35
766: aload         20
768: invokestatic  #36
771: ldc           #40
773: invokestatic  #38
776: aload         22
778: invokestatic  #35
781: aload         22
783: invokestatic  #36
786: ldc           #37
788: invokestatic  #38
791: aload         24
793: invokestatic  #35
796: aload         25
798: invokestatic  #35
801: aload         25
803: invokestatic  #36
806: ldc           #37
808: invokestatic  #38
811: aload         27
813: invokestatic  #35
816: aload         27
818: invokestatic  #36
821: ldc           #37
823: invokestatic  #38
826: aload         29
828: invokestatic  #35
831: aload         29
833: invokestatic  #36
836: ldc           #39
838: invokestatic  #38
841: aload         30
843: invokestatic  #35
846: aload         30
848: invokestatic  #36
851: ldc           #40
853: invokestatic  #38
856: aload         31
858: invokestatic  #35
861: aload         31
863: invokestatic  #36
866: ldc           #221
868: invokestatic  #38
871: new           #52
874: dup
875: invokespecial #53
878: ldc           #54
880: invokevirtual #55
883: dload         32
885: invokevirtual #80
888: ldc           #57
890: invokevirtual #55
893: dconst_1
894: invokevirtual #80
897: ldc           #54
899: invokevirtual #55
902: invokevirtual #58
905: dload         32
907: dconst_1
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #59
920: aload         34
922: invokestatic  #35
925: aload         34
927: invokestatic  #36
930: ldc           #60
932: invokestatic  #38
935: aload         35
937: invokestatic  #35
940: aload         37
942: invokestatic  #35
945: aload         37
947: invokestatic  #36
950: ldc           #60
952: invokestatic  #38
955: aload         38
957: invokestatic  #35
960: new           #52
963: dup
964: invokespecial #53
967: ldc           #54
969: invokevirtual #55
972: dload         39
974: invokevirtual #80
977: ldc           #57
979: invokevirtual #55
982: ldc2_w        #45
985: invokevirtual #80
988: ldc           #54
990: invokevirtual #55
993: invokevirtual #58
996: dload         39
998: ldc2_w        #45
1001: dcmpl
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #59
1013: aload         41
1015: invokestatic  #35
1018: aload         41
1020: invokestatic  #36
1023: ldc           #37
1025: invokestatic  #38
1028: aload         43
1030: invokestatic  #35
1033: aload         44
1035: invokestatic  #35
1038: aload         44
1040: invokestatic  #36
1043: ldc           #37
1045: invokestatic  #38
1048: aload         46
1050: invokestatic  #35
1053: aload         46
1055: invokestatic  #36
1058: ldc           #37
1060: invokestatic  #38
1063: aload         48
1065: invokestatic  #35
1068: aload         48
1070: invokestatic  #36
1073: ldc           #39
1075: invokestatic  #38
1078: aload         49
1080: invokestatic  #35
1083: aload         49
1085: invokestatic  #36
1088: ldc           #40
1090: invokestatic  #38
1093: aload         50
1095: invokestatic  #35
1098: aload         50
1100: invokestatic  #36
1103: ldc_w         #297
1106: invokestatic  #38
1109: aload         52
1111: invokestatic  #35
1114: aload         52
1116: invokestatic  #36
1119: ldc_w         #298
1122: invokestatic  #38
1125: return
Exception table:
from    to  target type
597   612   615   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 2253
End line: 2266
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        int int2 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setCost(32.0d);
        int int5 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int6 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #299
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aload_1
39: invokevirtual #208
42: istore_3
43: aload_1
44: ldc2_w        #188
47: invokevirtual #291
50: aload_1
51: invokevirtual #44
54: istore        4
56: aload_1
57: invokevirtual #230
60: istore        5
62: aload_2
63: invokestatic  #15
66: new           #52
69: dup
70: invokespecial #53
73: ldc           #54
75: invokevirtual #55
78: iload_3
79: invokevirtual #56
82: ldc           #57
84: invokevirtual #55
87: iconst_0
88: invokevirtual #56
91: ldc           #54
93: invokevirtual #55
96: invokevirtual #58
99: iload_3
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #59
111: new           #52
114: dup
115: invokespecial #53
118: ldc           #54
120: invokevirtual #55
123: iload         4
125: invokevirtual #56
128: ldc           #57
130: invokevirtual #55
133: iconst_0
134: invokevirtual #56
137: ldc           #54
139: invokevirtual #55
142: invokevirtual #58
145: iload         4
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #59
158: new           #52
161: dup
162: invokespecial #53
165: ldc           #54
167: invokevirtual #55
170: iload         5
172: invokevirtual #56
175: ldc           #57
177: invokevirtual #55
180: iconst_0
181: invokevirtual #56
184: ldc           #54
186: invokevirtual #55
189: invokevirtual #58
192: iload         5
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #59
205: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 2269
End line: 2321
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        double[] doubleArray8 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        double[] doubleArray11 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix12 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray8, doubleArray11);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix15 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray8, true);
        double[] doubleArray19 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix21 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray19, true);
        org.apache.commons.math3.linear.RealVector realVector23 = diagonalMatrix21.getRowVector(0);
        double[] doubleArray27 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix29 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray27, true);
        double[] doubleArray33 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix35 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray33, true);
        double[] doubleArray36 = diagonalMatrix29.operate(doubleArray33);
        double[] doubleArray37 = diagonalMatrix21.preMultiply(doubleArray36);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix38 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray36);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair40 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray8, doubleArray36, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix41 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray42 = polynomialFitter6.fit(doubleArray36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(realMatrix41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #300
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: iconst_1
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #45
70: dastore
71: astore        5
73: aload         5
75: invokestatic  #47
78: astore        6
80: iconst_1
81: newarray       double
83: dup
84: iconst_0
85: ldc2_w        #45
88: dastore
89: astore        7
91: aload         7
93: invokestatic  #47
96: astore        8
98: new           #48
101: dup
102: aload         5
104: aload         7
106: invokespecial #49
109: astore        9
111: new           #23
114: dup
115: aload         5
117: iconst_1
118: invokespecial #24
121: astore        10
123: iconst_3
124: newarray       double
126: dup
127: iconst_0
128: dconst_1
129: dastore
130: dup
131: iconst_1
132: ldc2_w        #21
135: dastore
136: dup
137: iconst_2
138: dconst_1
139: dastore
140: astore        11
142: new           #23
145: dup
146: aload         11
148: iconst_1
149: invokespecial #24
152: astore        12
154: aload         12
156: iconst_0
157: invokevirtual #25
160: astore        13
162: iconst_3
163: newarray       double
165: dup
166: iconst_0
167: dconst_1
168: dastore
169: dup
170: iconst_1
171: ldc2_w        #21
174: dastore
175: dup
176: iconst_2
177: dconst_1
178: dastore
179: astore        14
181: new           #23
184: dup
185: aload         14
187: iconst_1
188: invokespecial #24
191: astore        15
193: iconst_3
194: newarray       double
196: dup
197: iconst_0
198: dconst_1
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #21
205: dastore
206: dup
207: iconst_2
208: dconst_1
209: dastore
210: astore        16
212: new           #23
215: dup
216: aload         16
218: iconst_1
219: invokespecial #24
222: astore        17
224: aload         15
226: aload         16
228: invokevirtual #26
231: astore        18
233: aload         12
235: aload         18
237: invokevirtual #27
240: astore        19
242: new           #23
245: dup
246: aload         18
248: invokespecial #28
251: astore        20
253: new           #101
256: dup
257: aload         5
259: aload         18
261: iconst_1
262: invokespecial #102
265: astore        21
267: aload         18
269: invokestatic  #301
272: astore        22
274: aload         4
276: aload         18
278: invokevirtual #302
281: astore        23
283: ldc           #78
285: invokestatic  #13
288: goto          293
291: astore        23
293: aload_2
294: invokestatic  #15
297: new           #52
300: dup
301: invokespecial #53
304: ldc           #54
306: invokevirtual #55
309: iload_3
310: invokevirtual #56
313: ldc           #57
315: invokevirtual #55
318: iconst_0
319: invokevirtual #56
322: ldc           #54
324: invokevirtual #55
327: invokevirtual #58
330: iload_3
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #59
342: aload         5
344: invokestatic  #35
347: aload         5
349: invokestatic  #36
352: ldc           #60
354: invokestatic  #38
357: aload         6
359: invokestatic  #35
362: aload         7
364: invokestatic  #35
367: aload         7
369: invokestatic  #36
372: ldc           #60
374: invokestatic  #38
377: aload         8
379: invokestatic  #35
382: aload         11
384: invokestatic  #35
387: aload         11
389: invokestatic  #36
392: ldc           #37
394: invokestatic  #38
397: aload         13
399: invokestatic  #35
402: aload         14
404: invokestatic  #35
407: aload         14
409: invokestatic  #36
412: ldc           #37
414: invokestatic  #38
417: aload         16
419: invokestatic  #35
422: aload         16
424: invokestatic  #36
427: ldc           #37
429: invokestatic  #38
432: aload         18
434: invokestatic  #35
437: aload         18
439: invokestatic  #36
442: ldc           #39
444: invokestatic  #38
447: aload         19
449: invokestatic  #35
452: aload         19
454: invokestatic  #36
457: ldc           #40
459: invokestatic  #38
462: aload         22
464: invokestatic  #35
467: return
Exception table:
from    to  target type
274   288   291   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 2324
End line: 2407
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector4 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector6 = arrayRealVector4.mapDivideToSelf((double) (byte) -1);
        arrayRealVector4.set((double) 1);
        java.lang.Double[] doubleArray9 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray9);
        double double11 = arrayRealVector4.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector10);
        java.lang.Double[] doubleArray12 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray12);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = arrayRealVector10.append(arrayRealVector13);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = arrayRealVector10.combineToSelf(32.00000000000001d, 0.8813735870195429d, realVector19);
        boolean boolean21 = arrayRealVector20.isInfinite();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector22.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector22.append(realVector27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector31 = arrayRealVector29.mapDivideToSelf((double) (byte) -1);
        arrayRealVector29.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector34.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector37.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector40 = arrayRealVector34.append(realVector39);
        double double41 = arrayRealVector29.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector44 = arrayRealVector42.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector45 = arrayRealVector29.subtract(realVector44);
        org.apache.commons.math3.linear.RealVector realVector47 = arrayRealVector29.append((double) 1.0f);
        org.apache.commons.math3.linear.RealVector realVector48 = arrayRealVector22.ebeMultiply((org.apache.commons.math3.linear.RealVector) arrayRealVector29);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector51 = arrayRealVector49.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector54 = arrayRealVector52.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector55 = arrayRealVector49.append(realVector54);
        double double56 = realVector48.getL1Distance(realVector55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector20, realVector48);
        double[] doubleArray58 = arrayRealVector57.toArray();
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix59 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix60 = levenbergMarquardtOptimizer1.computeWeightedJacobian(doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNotNull(realVector6);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(arrayRealVector14);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #303
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #44
40: istore_3
41: aload_2
42: invokevirtual #83
45: astore        4
47: new           #48
50: dup
51: invokespecial #64
54: astore        5
56: aload         5
58: ldc2_w        #65
61: invokevirtual #67
64: astore        6
66: aload         5
68: dconst_1
69: invokevirtual #68
72: iconst_0
73: anewarray     #97
76: astore        7
78: new           #48
81: dup
82: aload         7
84: invokespecial #107
87: astore        8
89: aload         5
91: aload         8
93: invokevirtual #70
96: dstore        9
98: iconst_0
99: anewarray     #97
102: astore        11
104: new           #48
107: dup
108: aload         11
110: invokespecial #107
113: astore        12
115: aload         8
117: aload         12
119: invokevirtual #108
122: astore        13
124: new           #48
127: dup
128: invokespecial #64
131: astore        14
133: aload         14
135: ldc2_w        #65
138: invokevirtual #67
141: astore        15
143: aload         8
145: ldc2_w        #157
148: ldc2_w        #159
151: aload         15
153: invokevirtual #161
156: astore        16
158: aload         16
160: invokevirtual #162
163: istore        17
165: new           #48
168: dup
169: invokespecial #64
172: astore        18
174: aload         18
176: ldc2_w        #65
179: invokevirtual #67
182: astore        19
184: new           #48
187: dup
188: invokespecial #64
191: astore        20
193: aload         20
195: ldc2_w        #65
198: invokevirtual #67
201: astore        21
203: aload         18
205: aload         21
207: invokevirtual #69
210: astore        22
212: new           #48
215: dup
216: invokespecial #64
219: astore        23
221: aload         23
223: ldc2_w        #65
226: invokevirtual #67
229: astore        24
231: aload         23
233: dconst_1
234: invokevirtual #68
237: new           #48
240: dup
241: invokespecial #64
244: astore        25
246: aload         25
248: ldc2_w        #65
251: invokevirtual #67
254: astore        26
256: new           #48
259: dup
260: invokespecial #64
263: astore        27
265: aload         27
267: ldc2_w        #65
270: invokevirtual #67
273: astore        28
275: aload         25
277: aload         28
279: invokevirtual #69
282: astore        29
284: aload         23
286: aload         25
288: invokevirtual #70
291: dstore        30
293: new           #48
296: dup
297: invokespecial #64
300: astore        32
302: aload         32
304: ldc2_w        #65
307: invokevirtual #67
310: astore        33
312: aload         23
314: aload         33
316: invokevirtual #71
319: astore        34
321: aload         23
323: dconst_1
324: invokevirtual #163
327: astore        35
329: aload         18
331: aload         23
333: invokevirtual #164
336: astore        36
338: new           #48
341: dup
342: invokespecial #64
345: astore        37
347: aload         37
349: ldc2_w        #65
352: invokevirtual #67
355: astore        38
357: new           #48
360: dup
361: invokespecial #64
364: astore        39
366: aload         39
368: ldc2_w        #65
371: invokevirtual #67
374: astore        40
376: aload         37
378: aload         40
380: invokevirtual #69
383: astore        41
385: aload         36
387: aload         41
389: invokevirtual #165
392: dstore        42
394: new           #48
397: dup
398: aload         16
400: aload         36
402: invokespecial #166
405: astore        44
407: aload         44
409: invokevirtual #167
412: astore        45
414: new           #155
417: dup
418: aload         45
420: invokespecial #304
423: astore        46
425: aload_2
426: aload         45
428: invokevirtual #305
431: astore        47
433: ldc           #12
435: invokestatic  #13
438: goto          443
441: astore        47
443: new           #52
446: dup
447: invokespecial #53
450: ldc           #54
452: invokevirtual #55
455: iload_3
456: invokevirtual #56
459: ldc           #57
461: invokevirtual #55
464: iconst_0
465: invokevirtual #56
468: ldc           #54
470: invokevirtual #55
473: invokevirtual #58
476: iload_3
477: ifne          484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #59
488: aload         4
490: invokestatic  #15
493: aload         6
495: invokestatic  #35
498: aload         7
500: invokestatic  #35
503: new           #52
506: dup
507: invokespecial #53
510: ldc           #54
512: invokevirtual #55
515: dload         9
517: invokevirtual #80
520: ldc           #57
522: invokevirtual #55
525: dconst_0
526: invokevirtual #80
529: ldc           #54
531: invokevirtual #55
534: invokevirtual #58
537: dload         9
539: dconst_0
540: dcmpl
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #59
552: aload         11
554: invokestatic  #35
557: aload         13
559: invokestatic  #35
562: aload         15
564: invokestatic  #35
567: aload         16
569: invokestatic  #35
572: new           #52
575: dup
576: invokespecial #53
579: ldc           #54
581: invokevirtual #55
584: iload         17
586: invokevirtual #170
589: ldc           #57
591: invokevirtual #55
594: iconst_0
595: invokevirtual #170
598: ldc           #54
600: invokevirtual #55
603: invokevirtual #58
606: iload         17
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #59
619: aload         19
621: invokestatic  #35
624: aload         21
626: invokestatic  #35
629: aload         22
631: invokestatic  #35
634: aload         24
636: invokestatic  #35
639: aload         26
641: invokestatic  #35
644: aload         28
646: invokestatic  #35
649: aload         29
651: invokestatic  #35
654: new           #52
657: dup
658: invokespecial #53
661: ldc           #54
663: invokevirtual #55
666: dload         30
668: invokevirtual #80
671: ldc           #57
673: invokevirtual #55
676: dconst_0
677: invokevirtual #80
680: ldc           #54
682: invokevirtual #55
685: invokevirtual #58
688: dload         30
690: dconst_0
691: dcmpl
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #59
703: aload         33
705: invokestatic  #35
708: aload         34
710: invokestatic  #35
713: aload         35
715: invokestatic  #35
718: aload         36
720: invokestatic  #35
723: aload         38
725: invokestatic  #35
728: aload         40
730: invokestatic  #35
733: aload         41
735: invokestatic  #35
738: new           #52
741: dup
742: invokespecial #53
745: ldc           #54
747: invokevirtual #55
750: dload         42
752: invokevirtual #80
755: ldc           #57
757: invokevirtual #55
760: dconst_0
761: invokevirtual #80
764: ldc           #54
766: invokevirtual #55
769: invokevirtual #58
772: dload         42
774: dconst_0
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #59
787: aload         45
789: invokestatic  #35
792: aload         45
794: invokestatic  #36
797: ldc           #81
799: invokestatic  #38
802: return
Exception table:
from    to  target type
425   438   441   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 2410
End line: 2469
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getIterations();
        double[] doubleArray3 = gaussNewtonOptimizer1.getStartPoint();
        double[] doubleArray5 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix6 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray5);
        double[] doubleArray8 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray5, doubleArray8);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector13 = arrayRealVector11.mapDivideToSelf((double) (byte) -1);
        arrayRealVector11.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector18 = arrayRealVector16.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector19.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector16.append(realVector21);
        double double23 = arrayRealVector11.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector26 = arrayRealVector24.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector11.subtract(realVector26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray29 = arrayRealVector28.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, doubleArray29);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair32 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray5, doubleArray29, true);
        boolean boolean34 = pointVectorValuePair32.equals((java.lang.Object) 3);
        double[] doubleArray35 = pointVectorValuePair32.getFirst();
        org.apache.commons.math3.linear.RealMatrix realMatrix36 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix37 = gaussNewtonOptimizer1.computeWeightedJacobian(doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #306
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: aload_1
32: invokespecial #63
35: astore_2
36: aload_2
37: invokevirtual #228
40: istore_3
41: aload_2
42: invokevirtual #248
45: astore        4
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: ldc2_w        #45
55: dastore
56: astore        5
58: aload         5
60: invokestatic  #47
63: astore        6
65: iconst_1
66: newarray       double
68: dup
69: iconst_0
70: ldc2_w        #45
73: dastore
74: astore        7
76: aload         7
78: invokestatic  #47
81: astore        8
83: new           #48
86: dup
87: aload         5
89: aload         7
91: invokespecial #49
94: astore        9
96: new           #48
99: dup
100: invokespecial #64
103: astore        10
105: aload         10
107: ldc2_w        #65
110: invokevirtual #67
113: astore        11
115: aload         10
117: dconst_1
118: invokevirtual #68
121: new           #48
124: dup
125: invokespecial #64
128: astore        12
130: aload         12
132: ldc2_w        #65
135: invokevirtual #67
138: astore        13
140: new           #48
143: dup
144: invokespecial #64
147: astore        14
149: aload         14
151: ldc2_w        #65
154: invokevirtual #67
157: astore        15
159: aload         12
161: aload         15
163: invokevirtual #69
166: astore        16
168: aload         10
170: aload         12
172: invokevirtual #70
175: dstore        17
177: new           #48
180: dup
181: invokespecial #64
184: astore        19
186: aload         19
188: ldc2_w        #65
191: invokevirtual #67
194: astore        20
196: aload         10
198: aload         20
200: invokevirtual #71
203: astore        21
205: new           #48
208: dup
209: invokespecial #64
212: astore        22
214: aload         22
216: invokevirtual #72
219: astore        23
221: new           #48
224: dup
225: aload         10
227: aload         23
229: invokespecial #73
232: astore        24
234: new           #101
237: dup
238: aload         5
240: aload         23
242: iconst_1
243: invokespecial #102
246: astore        25
248: aload         25
250: iconst_3
251: invokestatic  #194
254: invokevirtual #195
257: istore        26
259: aload         25
261: invokevirtual #307
264: checkcast     #308
267: astore        27
269: aload         27
271: invokestatic  #301
274: astore        28
276: aload_2
277: aload         27
279: invokevirtual #236
282: astore        29
284: ldc           #12
286: invokestatic  #13
289: goto          294
292: astore        29
294: new           #52
297: dup
298: invokespecial #53
301: ldc           #54
303: invokevirtual #55
306: iload_3
307: invokevirtual #56
310: ldc           #57
312: invokevirtual #55
315: iconst_0
316: invokevirtual #56
319: ldc           #54
321: invokevirtual #55
324: invokevirtual #58
327: iload_3
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #59
339: aload         4
341: invokestatic  #15
344: aload         5
346: invokestatic  #35
349: aload         5
351: invokestatic  #36
354: ldc           #60
356: invokestatic  #38
359: aload         6
361: invokestatic  #35
364: aload         7
366: invokestatic  #35
369: aload         7
371: invokestatic  #36
374: ldc           #60
376: invokestatic  #38
379: aload         8
381: invokestatic  #35
384: aload         11
386: invokestatic  #35
389: aload         13
391: invokestatic  #35
394: aload         15
396: invokestatic  #35
399: aload         16
401: invokestatic  #35
404: new           #52
407: dup
408: invokespecial #53
411: ldc           #54
413: invokevirtual #55
416: dload         17
418: invokevirtual #80
421: ldc           #57
423: invokevirtual #55
426: dconst_0
427: invokevirtual #80
430: ldc           #54
432: invokevirtual #55
435: invokevirtual #58
438: dload         17
440: dconst_0
441: dcmpl
442: ifne          449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #59
453: aload         20
455: invokestatic  #35
458: aload         21
460: invokestatic  #35
463: aload         23
465: invokestatic  #35
468: aload         23
470: invokestatic  #36
473: ldc           #81
475: invokestatic  #38
478: new           #52
481: dup
482: invokespecial #53
485: ldc           #54
487: invokevirtual #55
490: iload         26
492: invokevirtual #170
495: ldc           #57
497: invokevirtual #55
500: iconst_0
501: invokevirtual #170
504: ldc           #54
506: invokevirtual #55
509: invokevirtual #58
512: iload         26
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #59
525: aload         27
527: invokestatic  #35
530: aload         27
532: invokestatic  #36
535: ldc           #60
537: invokestatic  #38
540: aload         28
542: invokestatic  #35
545: return
Exception table:
from    to  target type
276   289   292   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 2472
End line: 2483
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((-14.591559026164646d), 4.641588833612779d, (double) 97);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #309
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: ldc2_w        #310
76: ldc2_w        #312
79: ldc2_w        #105
82: invokevirtual #270
85: aload_2
86: invokestatic  #15
89: new           #52
92: dup
93: invokespecial #53
96: ldc           #54
98: invokevirtual #55
101: iload_3
102: invokevirtual #56
105: ldc           #57
107: invokevirtual #55
110: iconst_0
111: invokevirtual #56
114: ldc           #54
116: invokevirtual #55
119: invokevirtual #58
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #59
134: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 2486
End line: 2495
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        parametricUnivariateFunctionCurveFitter2.clearObservations();
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #314
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: new           #91
39: dup
40: aload_2
41: invokespecial #92
44: astore_3
45: new           #113
48: dup
49: ldc2_w        #21
52: dconst_0
53: ldc2_w        #21
56: invokespecial #114
59: astore        4
61: aload_3
62: aload         4
64: invokevirtual #115
67: aload_3
68: invokevirtual #315
71: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 2498
End line: 2511
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker4 = levenbergMarquardtOptimizer1.getConvergenceChecker();
        int int5 = levenbergMarquardtOptimizer1.getEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #316
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #44
40: istore_3
41: aload_2
42: invokevirtual #83
45: astore        4
47: aload_2
48: invokevirtual #243
51: astore        5
53: aload_2
54: invokevirtual #208
57: istore        6
59: new           #52
62: dup
63: invokespecial #53
66: ldc           #54
68: invokevirtual #55
71: iload_3
72: invokevirtual #56
75: ldc           #57
77: invokevirtual #55
80: iconst_0
81: invokevirtual #56
84: ldc           #54
86: invokevirtual #55
89: invokevirtual #58
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #59
104: aload         4
106: invokestatic  #15
109: aload         5
111: invokestatic  #15
114: new           #52
117: dup
118: invokespecial #53
121: ldc           #54
123: invokevirtual #55
126: iload         6
128: invokevirtual #56
131: ldc           #57
133: invokevirtual #55
136: iconst_0
137: invokevirtual #56
140: ldc           #54
142: invokevirtual #55
145: invokevirtual #58
148: iload         6
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #59
161: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 2514
End line: 2518
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 6, (double) 'a', Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #317
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #318
32: ldc2_w        #105
35: ldc2_w        #320
38: invokespecial #153
41: astore_1
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 2521
End line: 2533
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker5 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        double double6 = levenbergMarquardtOptimizer3.getChiSquare();
        int int7 = levenbergMarquardtOptimizer3.getIterations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #322
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #243
51: astore_3
52: aload_1
53: invokevirtual #191
56: dstore        4
58: aload_1
59: invokevirtual #230
62: istore        6
64: aload_2
65: invokestatic  #15
68: aload_3
69: invokestatic  #15
72: new           #52
75: dup
76: invokespecial #53
79: ldc           #54
81: invokevirtual #55
84: dload         4
86: invokevirtual #80
89: ldc           #57
91: invokevirtual #55
94: dconst_0
95: invokevirtual #80
98: ldc           #54
100: invokevirtual #55
103: invokevirtual #58
106: dload         4
108: dconst_0
109: dcmpl
110: ifne          117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #59
121: new           #52
124: dup
125: invokespecial #53
128: ldc           #54
130: invokevirtual #55
133: iload         6
135: invokevirtual #56
138: ldc           #57
140: invokevirtual #55
143: iconst_0
144: invokevirtual #56
147: ldc           #54
149: invokevirtual #55
152: invokevirtual #58
155: iload         6
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #59
168: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 2536
End line: 2638
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((double) 0L, (double) 32);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = polynomialFitter6.getObservations();
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric15 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray17 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray17);
        double[] doubleArray20 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17, doubleArray20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        arrayRealVector23.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector28.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector28.append(realVector33);
        double double35 = arrayRealVector23.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector36.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector23.subtract(realVector38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray41 = arrayRealVector40.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23, doubleArray41);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair44 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray17, doubleArray41, true);
        boolean boolean46 = pointVectorValuePair44.equals((java.lang.Object) 3);
        double[] doubleArray47 = pointVectorValuePair44.getSecond();
        double[] doubleArray49 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix50 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray49);
        double[] doubleArray52 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix53 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray52);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray49, doubleArray52);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector57 = arrayRealVector55.mapDivideToSelf((double) (byte) -1);
        arrayRealVector55.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector62 = arrayRealVector60.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector65 = arrayRealVector63.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector66 = arrayRealVector60.append(realVector65);
        double double67 = arrayRealVector55.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector70 = arrayRealVector68.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector71 = arrayRealVector55.subtract(realVector70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray73 = arrayRealVector72.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector55, doubleArray73);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair76 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray49, doubleArray73, true);
        double[] doubleArray77 = pointVectorValuePair76.getValue();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds78 = new org.apache.commons.math3.optim.SimpleBounds(doubleArray47, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray79 = polynomialFitter6.fit(462285919, parametric15, doubleArray77);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NoDataException; message: empty polynomials coefficients array");
        } catch (org.apache.commons.math3.exception.NoDataException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix53);
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(realVector71);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #323
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: dconst_0
74: ldc2_w        #188
77: invokevirtual #263
80: aload         4
82: invokevirtual #324
85: astore        5
87: new           #93
90: dup
91: invokespecial #94
94: astore        6
96: iconst_1
97: newarray       double
99: dup
100: iconst_0
101: ldc2_w        #45
104: dastore
105: astore        7
107: aload         7
109: invokestatic  #47
112: astore        8
114: iconst_1
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #45
122: dastore
123: astore        9
125: aload         9
127: invokestatic  #47
130: astore        10
132: new           #48
135: dup
136: aload         7
138: aload         9
140: invokespecial #49
143: astore        11
145: new           #48
148: dup
149: invokespecial #64
152: astore        12
154: aload         12
156: ldc2_w        #65
159: invokevirtual #67
162: astore        13
164: aload         12
166: dconst_1
167: invokevirtual #68
170: new           #48
173: dup
174: invokespecial #64
177: astore        14
179: aload         14
181: ldc2_w        #65
184: invokevirtual #67
187: astore        15
189: new           #48
192: dup
193: invokespecial #64
196: astore        16
198: aload         16
200: ldc2_w        #65
203: invokevirtual #67
206: astore        17
208: aload         14
210: aload         17
212: invokevirtual #69
215: astore        18
217: aload         12
219: aload         14
221: invokevirtual #70
224: dstore        19
226: new           #48
229: dup
230: invokespecial #64
233: astore        21
235: aload         21
237: ldc2_w        #65
240: invokevirtual #67
243: astore        22
245: aload         12
247: aload         22
249: invokevirtual #71
252: astore        23
254: new           #48
257: dup
258: invokespecial #64
261: astore        24
263: aload         24
265: invokevirtual #72
268: astore        25
270: new           #48
273: dup
274: aload         12
276: aload         25
278: invokespecial #73
281: astore        26
283: new           #101
286: dup
287: aload         7
289: aload         25
291: iconst_1
292: invokespecial #102
295: astore        27
297: aload         27
299: iconst_3
300: invokestatic  #194
303: invokevirtual #195
306: istore        28
308: aload         27
310: invokevirtual #325
313: checkcast     #308
316: astore        29
318: iconst_1
319: newarray       double
321: dup
322: iconst_0
323: ldc2_w        #45
326: dastore
327: astore        30
329: aload         30
331: invokestatic  #47
334: astore        31
336: iconst_1
337: newarray       double
339: dup
340: iconst_0
341: ldc2_w        #45
344: dastore
345: astore        32
347: aload         32
349: invokestatic  #47
352: astore        33
354: new           #48
357: dup
358: aload         30
360: aload         32
362: invokespecial #49
365: astore        34
367: new           #48
370: dup
371: invokespecial #64
374: astore        35
376: aload         35
378: ldc2_w        #65
381: invokevirtual #67
384: astore        36
386: aload         35
388: dconst_1
389: invokevirtual #68
392: new           #48
395: dup
396: invokespecial #64
399: astore        37
401: aload         37
403: ldc2_w        #65
406: invokevirtual #67
409: astore        38
411: new           #48
414: dup
415: invokespecial #64
418: astore        39
420: aload         39
422: ldc2_w        #65
425: invokevirtual #67
428: astore        40
430: aload         37
432: aload         40
434: invokevirtual #69
437: astore        41
439: aload         35
441: aload         37
443: invokevirtual #70
446: dstore        42
448: new           #48
451: dup
452: invokespecial #64
455: astore        44
457: aload         44
459: ldc2_w        #65
462: invokevirtual #67
465: astore        45
467: aload         35
469: aload         45
471: invokevirtual #71
474: astore        46
476: new           #48
479: dup
480: invokespecial #64
483: astore        47
485: aload         47
487: invokevirtual #72
490: astore        48
492: new           #48
495: dup
496: aload         35
498: aload         48
500: invokespecial #73
503: astore        49
505: new           #101
508: dup
509: aload         30
511: aload         48
513: iconst_1
514: invokespecial #102
517: astore        50
519: aload         50
521: invokevirtual #196
524: astore        51
526: new           #326
529: dup
530: aload         29
532: aload         51
534: invokespecial #327
537: astore        52
539: aload         4
541: ldc_w         #328
544: aload         6
546: aload         51
548: invokevirtual #329
551: astore        53
553: ldc_w         #330
556: invokestatic  #13
559: goto          564
562: astore        53
564: aload_2
565: invokestatic  #15
568: new           #52
571: dup
572: invokespecial #53
575: ldc           #54
577: invokevirtual #55
580: iload_3
581: invokevirtual #56
584: ldc           #57
586: invokevirtual #55
589: iconst_0
590: invokevirtual #56
593: ldc           #54
595: invokevirtual #55
598: invokevirtual #58
601: iload_3
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #59
613: aload         5
615: invokestatic  #35
618: aload         7
620: invokestatic  #35
623: aload         7
625: invokestatic  #36
628: ldc           #60
630: invokestatic  #38
633: aload         8
635: invokestatic  #35
638: aload         9
640: invokestatic  #35
643: aload         9
645: invokestatic  #36
648: ldc           #60
650: invokestatic  #38
653: aload         10
655: invokestatic  #35
658: aload         13
660: invokestatic  #35
663: aload         15
665: invokestatic  #35
668: aload         17
670: invokestatic  #35
673: aload         18
675: invokestatic  #35
678: new           #52
681: dup
682: invokespecial #53
685: ldc           #54
687: invokevirtual #55
690: dload         19
692: invokevirtual #80
695: ldc           #57
697: invokevirtual #55
700: dconst_0
701: invokevirtual #80
704: ldc           #54
706: invokevirtual #55
709: invokevirtual #58
712: dload         19
714: dconst_0
715: dcmpl
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #59
727: aload         22
729: invokestatic  #35
732: aload         23
734: invokestatic  #35
737: aload         25
739: invokestatic  #35
742: aload         25
744: invokestatic  #36
747: ldc           #81
749: invokestatic  #38
752: new           #52
755: dup
756: invokespecial #53
759: ldc           #54
761: invokevirtual #55
764: iload         28
766: invokevirtual #170
769: ldc           #57
771: invokevirtual #55
774: iconst_0
775: invokevirtual #170
778: ldc           #54
780: invokevirtual #55
783: invokevirtual #58
786: iload         28
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #59
799: aload         29
801: invokestatic  #35
804: aload         29
806: invokestatic  #36
809: ldc           #81
811: invokestatic  #38
814: aload         30
816: invokestatic  #35
819: aload         30
821: invokestatic  #36
824: ldc           #60
826: invokestatic  #38
829: aload         31
831: invokestatic  #35
834: aload         32
836: invokestatic  #35
839: aload         32
841: invokestatic  #36
844: ldc           #60
846: invokestatic  #38
849: aload         33
851: invokestatic  #35
854: aload         36
856: invokestatic  #35
859: aload         38
861: invokestatic  #35
864: aload         40
866: invokestatic  #35
869: aload         41
871: invokestatic  #35
874: new           #52
877: dup
878: invokespecial #53
881: ldc           #54
883: invokevirtual #55
886: dload         42
888: invokevirtual #80
891: ldc           #57
893: invokevirtual #55
896: dconst_0
897: invokevirtual #80
900: ldc           #54
902: invokevirtual #55
905: invokevirtual #58
908: dload         42
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #59
923: aload         45
925: invokestatic  #35
928: aload         46
930: invokestatic  #35
933: aload         48
935: invokestatic  #35
938: aload         48
940: invokestatic  #36
943: ldc           #81
945: invokestatic  #38
948: aload         51
950: invokestatic  #35
953: aload         51
955: invokestatic  #36
958: ldc           #81
960: invokestatic  #38
963: return
Exception table:
from    to  target type
539   559   562   Class org/apache/commons/math3/exception/NoDataException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 2641
End line: 2651
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getUpperBound();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #83
51: astore_3
52: aload_1
53: invokevirtual #231
56: astore        4
58: aload_2
59: invokestatic  #15
62: aload_3
63: invokestatic  #15
66: aload         4
68: invokestatic  #15
71: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 2654
End line: 2666
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((double) (-1.0f), (double) 32);
        polynomialFitter6.clearObservations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: ldc2_w        #65
76: ldc2_w        #188
79: invokevirtual #263
82: aload         4
84: invokevirtual #334
87: aload_2
88: invokestatic  #15
91: new           #52
94: dup
95: invokespecial #53
98: ldc           #54
100: invokevirtual #55
103: iload_3
104: invokevirtual #56
107: ldc           #57
109: invokevirtual #55
112: iconst_0
113: invokevirtual #56
116: ldc           #54
118: invokevirtual #55
121: invokevirtual #58
124: iload_3
125: ifne          132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #59
136: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 2669
End line: 2681
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker6 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        double[] doubleArray7 = levenbergMarquardtOptimizer3.getUpperBound();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker6);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: aload_1
53: invokevirtual #243
56: astore        4
58: aload_1
59: invokevirtual #231
62: astore        5
64: aload_2
65: invokestatic  #15
68: new           #52
71: dup
72: invokespecial #53
75: ldc           #54
77: invokevirtual #55
80: iload_3
81: invokevirtual #56
84: ldc           #57
86: invokevirtual #55
89: iconst_0
90: invokevirtual #56
93: ldc           #54
95: invokevirtual #55
98: invokevirtual #58
101: iload_3
102: ifne          109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #59
113: aload         4
115: invokestatic  #15
118: aload         5
120: invokestatic  #15
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 2684
End line: 2718
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20);
        double[][] doubleArray23 = diagonalMatrix22.getData();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight24 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix26 = diagonalMatrix22.getRowMatrix(100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (100)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: dconst_1
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #21
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: astore_1
43: new           #23
46: dup
47: aload_1
48: iconst_1
49: invokespecial #24
52: astore_2
53: aload_2
54: iconst_0
55: invokevirtual #25
58: astore_3
59: iconst_3
60: newarray       double
62: dup
63: iconst_0
64: dconst_1
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #21
71: dastore
72: dup
73: iconst_2
74: dconst_1
75: dastore
76: astore        4
78: new           #23
81: dup
82: aload         4
84: iconst_1
85: invokespecial #24
88: astore        5
90: iconst_3
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: ldc2_w        #21
102: dastore
103: dup
104: iconst_2
105: dconst_1
106: dastore
107: astore        6
109: new           #23
112: dup
113: aload         6
115: iconst_1
116: invokespecial #24
119: astore        7
121: aload         5
123: aload         6
125: invokevirtual #26
128: astore        8
130: aload_2
131: aload         8
133: invokevirtual #27
136: astore        9
138: new           #23
141: dup
142: aload         8
144: invokespecial #28
147: astore        10
149: aload         10
151: invokevirtual #29
154: astore        11
156: new           #30
159: dup
160: aload         10
162: invokespecial #31
165: astore        12
167: aload         10
169: bipush        100
171: invokevirtual #337
174: astore        13
176: ldc_w         #338
179: invokestatic  #13
182: goto          187
185: astore        13
187: aload_1
188: invokestatic  #35
191: aload_1
192: invokestatic  #36
195: ldc           #37
197: invokestatic  #38
200: aload_3
201: invokestatic  #35
204: aload         4
206: invokestatic  #35
209: aload         4
211: invokestatic  #36
214: ldc           #37
216: invokestatic  #38
219: aload         6
221: invokestatic  #35
224: aload         6
226: invokestatic  #36
229: ldc           #37
231: invokestatic  #38
234: aload         8
236: invokestatic  #35
239: aload         8
241: invokestatic  #36
244: ldc           #39
246: invokestatic  #38
249: aload         9
251: invokestatic  #35
254: aload         9
256: invokestatic  #36
259: ldc           #40
261: invokestatic  #38
264: aload         11
266: invokestatic  #35
269: return
Exception table:
from    to  target type
167   182   185   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 2721
End line: 2733
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((double) 0L, (double) 32);
        polynomialFitter6.addObservedPoint(0.8813735870195429d, (double) 0L, 4.9E-324d);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #339
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: dconst_0
74: ldc2_w        #188
77: invokevirtual #263
80: aload         4
82: ldc2_w        #159
85: dconst_0
86: ldc2_w        #340
89: invokevirtual #270
92: aload_2
93: invokestatic  #15
96: new           #52
99: dup
100: invokespecial #53
103: ldc           #54
105: invokevirtual #55
108: iload_3
109: invokevirtual #56
112: ldc           #57
114: invokevirtual #55
117: iconst_0
118: invokevirtual #56
121: ldc           #54
123: invokevirtual #55
126: invokevirtual #58
129: iload_3
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #59
141: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 2736
End line: 2794
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        double[] doubleArray3 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix4 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray3);
        double[] doubleArray6 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix7 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivideToSelf((double) (byte) -1);
        arrayRealVector9.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector14.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector14.append(realVector19);
        double double21 = arrayRealVector9.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector14);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector22.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector9.subtract(realVector24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray27 = arrayRealVector26.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray27);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair30 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray3, doubleArray27, true);
        double[] doubleArray31 = pointVectorValuePair30.getValueRef();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight32 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray31);
        org.apache.commons.math3.optim.MaxIter maxIter34 = new org.apache.commons.math3.optim.MaxIter(35);
        int int35 = maxIter34.getMaxIter();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray36 = new org.apache.commons.math3.optim.OptimizationData[] { weight32, maxIter34 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair37 = levenbergMarquardtOptimizer0.optimize(optimizationDataArray36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
        org.junit.Assert.assertNotNull(optimizationDataArray36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #342
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: iconst_1
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #45
46: dastore
47: astore_3
48: aload_3
49: invokestatic  #47
52: astore        4
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #45
62: dastore
63: astore        5
65: aload         5
67: invokestatic  #47
70: astore        6
72: new           #48
75: dup
76: aload_3
77: aload         5
79: invokespecial #49
82: astore        7
84: new           #48
87: dup
88: invokespecial #64
91: astore        8
93: aload         8
95: ldc2_w        #65
98: invokevirtual #67
101: astore        9
103: aload         8
105: dconst_1
106: invokevirtual #68
109: new           #48
112: dup
113: invokespecial #64
116: astore        10
118: aload         10
120: ldc2_w        #65
123: invokevirtual #67
126: astore        11
128: new           #48
131: dup
132: invokespecial #64
135: astore        12
137: aload         12
139: ldc2_w        #65
142: invokevirtual #67
145: astore        13
147: aload         10
149: aload         13
151: invokevirtual #69
154: astore        14
156: aload         8
158: aload         10
160: invokevirtual #70
163: dstore        15
165: new           #48
168: dup
169: invokespecial #64
172: astore        17
174: aload         17
176: ldc2_w        #65
179: invokevirtual #67
182: astore        18
184: aload         8
186: aload         18
188: invokevirtual #71
191: astore        19
193: new           #48
196: dup
197: invokespecial #64
200: astore        20
202: aload         20
204: invokevirtual #72
207: astore        21
209: new           #48
212: dup
213: aload         8
215: aload         21
217: invokespecial #73
220: astore        22
222: new           #101
225: dup
226: aload_3
227: aload         21
229: iconst_1
230: invokespecial #102
233: astore        23
235: aload         23
237: invokevirtual #103
240: astore        24
242: new           #30
245: dup
246: aload         24
248: invokespecial #74
251: astore        25
253: new           #144
256: dup
257: bipush        35
259: invokespecial #145
262: astore        26
264: aload         26
266: invokevirtual #343
269: istore        27
271: iconst_2
272: anewarray     #76
275: dup
276: iconst_0
277: aload         25
279: aastore
280: dup
281: iconst_1
282: aload         26
284: aastore
285: astore        28
287: aload_1
288: aload         28
290: invokevirtual #217
293: astore        29
295: ldc           #78
297: invokestatic  #13
300: goto          305
303: astore        29
305: aload_2
306: invokestatic  #15
309: aload_3
310: invokestatic  #35
313: aload_3
314: invokestatic  #36
317: ldc           #60
319: invokestatic  #38
322: aload         4
324: invokestatic  #35
327: aload         5
329: invokestatic  #35
332: aload         5
334: invokestatic  #36
337: ldc           #60
339: invokestatic  #38
342: aload         6
344: invokestatic  #35
347: aload         9
349: invokestatic  #35
352: aload         11
354: invokestatic  #35
357: aload         13
359: invokestatic  #35
362: aload         14
364: invokestatic  #35
367: new           #52
370: dup
371: invokespecial #53
374: ldc           #54
376: invokevirtual #55
379: dload         15
381: invokevirtual #80
384: ldc           #57
386: invokevirtual #55
389: dconst_0
390: invokevirtual #80
393: ldc           #54
395: invokevirtual #55
398: invokevirtual #58
401: dload         15
403: dconst_0
404: dcmpl
405: ifne          412
408: iconst_1
409: goto          413
412: iconst_0
413: invokestatic  #59
416: aload         18
418: invokestatic  #35
421: aload         19
423: invokestatic  #35
426: aload         21
428: invokestatic  #35
431: aload         21
433: invokestatic  #36
436: ldc           #81
438: invokestatic  #38
441: aload         24
443: invokestatic  #35
446: aload         24
448: invokestatic  #36
451: ldc           #81
453: invokestatic  #38
456: new           #52
459: dup
460: invokespecial #53
463: ldc           #54
465: invokevirtual #55
468: iload         27
470: invokevirtual #56
473: ldc           #57
475: invokevirtual #55
478: bipush        35
480: invokevirtual #56
483: ldc           #54
485: invokevirtual #55
488: invokevirtual #58
491: iload         27
493: bipush        35
495: if_icmpne     502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #59
506: aload         28
508: invokestatic  #35
511: return
Exception table:
from    to  target type
287   300   303   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 2797
End line: 2845
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 10.0f, (double) 4, (double) 2147483647);
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter4 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction5 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian6 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction5);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction7 = modelFunctionJacobian6.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction8 = modelFunctionJacobian6.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction9 = modelFunctionJacobian6.getModelFunctionJacobian();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds11 = org.apache.commons.math3.optim.SimpleBounds.unbounded((int) (byte) 1);
        org.apache.commons.math3.optim.MaxIter maxIter13 = new org.apache.commons.math3.optim.MaxIter((int) ' ');
        org.apache.commons.math3.optim.MaxEval maxEval15 = new org.apache.commons.math3.optim.MaxEval((int) (byte) 100);
        int int16 = maxEval15.getMaxEval();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction17 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian18 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction17);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction19 = modelFunctionJacobian18.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction20 = modelFunctionJacobian18.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction21 = modelFunctionJacobian18.getModelFunctionJacobian();
        double[] doubleArray23 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix24 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray23);
        double[] doubleArray26 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix27 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray23, doubleArray26);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight29 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray26);
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray30 = new org.apache.commons.math3.optim.OptimizationData[] { modelFunctionJacobian6, simpleBounds11, maxIter13, maxEval15, modelFunctionJacobian18, weight29 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair31 = levenbergMarquardtOptimizer3.optimize(optimizationDataArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(multivariateMatrixFunction7);
        org.junit.Assert.assertNull(multivariateMatrixFunction8);
        org.junit.Assert.assertNull(multivariateMatrixFunction9);
        org.junit.Assert.assertNotNull(simpleBounds11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(multivariateMatrixFunction19);
        org.junit.Assert.assertNull(multivariateMatrixFunction20);
        org.junit.Assert.assertNull(multivariateMatrixFunction21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix27);
        org.junit.Assert.assertNotNull(optimizationDataArray30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #45
32: ldc2_w        #151
35: ldc2_w        #345
38: invokespecial #153
41: astore_1
42: new           #259
45: dup
46: aload_1
47: invokespecial #260
50: astore_2
51: aconst_null
52: astore_3
53: new           #212
56: dup
57: aload_3
58: invokespecial #213
61: astore        4
63: aload         4
65: invokevirtual #233
68: astore        5
70: aload         4
72: invokevirtual #233
75: astore        6
77: aload         4
79: invokevirtual #233
82: astore        7
84: iconst_1
85: invokestatic  #232
88: astore        8
90: new           #144
93: dup
94: bipush        32
96: invokespecial #145
99: astore        9
101: new           #347
104: dup
105: bipush        100
107: invokespecial #348
110: astore        10
112: aload         10
114: invokevirtual #349
117: istore        11
119: aconst_null
120: astore        12
122: new           #212
125: dup
126: aload         12
128: invokespecial #213
131: astore        13
133: aload         13
135: invokevirtual #233
138: astore        14
140: aload         13
142: invokevirtual #233
145: astore        15
147: aload         13
149: invokevirtual #233
152: astore        16
154: iconst_1
155: newarray       double
157: dup
158: iconst_0
159: ldc2_w        #45
162: dastore
163: astore        17
165: aload         17
167: invokestatic  #47
170: astore        18
172: iconst_1
173: newarray       double
175: dup
176: iconst_0
177: ldc2_w        #45
180: dastore
181: astore        19
183: aload         19
185: invokestatic  #47
188: astore        20
190: new           #48
193: dup
194: aload         17
196: aload         19
198: invokespecial #49
201: astore        21
203: new           #30
206: dup
207: aload         19
209: invokespecial #74
212: astore        22
214: bipush        6
216: anewarray     #76
219: dup
220: iconst_0
221: aload         4
223: aastore
224: dup
225: iconst_1
226: aload         8
228: aastore
229: dup
230: iconst_2
231: aload         9
233: aastore
234: dup
235: iconst_3
236: aload         10
238: aastore
239: dup
240: iconst_4
241: aload         13
243: aastore
244: dup
245: iconst_5
246: aload         22
248: aastore
249: astore        23
251: aload_1
252: aload         23
254: invokevirtual #217
257: astore        24
259: ldc           #12
261: invokestatic  #13
264: goto          269
267: astore        24
269: aload         5
271: invokestatic  #15
274: aload         6
276: invokestatic  #15
279: aload         7
281: invokestatic  #15
284: aload         8
286: invokestatic  #35
289: new           #52
292: dup
293: invokespecial #53
296: ldc           #54
298: invokevirtual #55
301: iload         11
303: invokevirtual #56
306: ldc           #57
308: invokevirtual #55
311: bipush        100
313: invokevirtual #56
316: ldc           #54
318: invokevirtual #55
321: invokevirtual #58
324: iload         11
326: bipush        100
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #59
339: aload         14
341: invokestatic  #15
344: aload         15
346: invokestatic  #15
349: aload         16
351: invokestatic  #15
354: aload         17
356: invokestatic  #35
359: aload         17
361: invokestatic  #36
364: ldc           #60
366: invokestatic  #38
369: aload         18
371: invokestatic  #35
374: aload         19
376: invokestatic  #35
379: aload         19
381: invokestatic  #36
384: ldc           #60
386: invokestatic  #38
389: aload         20
391: invokestatic  #35
394: aload         23
396: invokestatic  #35
399: return
Exception table:
from    to  target type
251   264   267   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 2848
End line: 2855
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter4 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        double double5 = levenbergMarquardtOptimizer3.getChiSquare();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #181
32: ldc2_w        #183
35: ldc2_w        #151
38: invokespecial #153
41: astore_1
42: new           #91
45: dup
46: aload_1
47: invokespecial #92
50: astore_2
51: aload_1
52: invokevirtual #191
55: dstore_3
56: new           #52
59: dup
60: invokespecial #53
63: ldc           #54
65: invokevirtual #55
68: dload_3
69: invokevirtual #80
72: ldc           #57
74: invokevirtual #55
77: dconst_0
78: invokevirtual #80
81: ldc           #54
83: invokevirtual #55
86: invokevirtual #58
89: dload_3
90: dconst_0
91: dcmpl
92: ifne          99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #59
103: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 2858
End line: 2870
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix2 = levenbergMarquardtOptimizer1.getWeightSquareRoot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #352
40: astore_3
41: ldc           #12
43: invokestatic  #13
46: goto          50
49: astore_3
50: return
Exception table:
from    to  target type
36    46    49   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 2873
End line: 2954
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        double[] doubleArray3 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix4 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray3);
        double[] doubleArray6 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix7 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivideToSelf((double) (byte) -1);
        arrayRealVector9.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector14.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector14.append(realVector19);
        double double21 = arrayRealVector9.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector14);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector22.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector9.subtract(realVector24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray27 = arrayRealVector26.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray27);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair30 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray3, doubleArray27, true);
        double[] doubleArray31 = pointVectorValuePair30.getValueRef();
        double[] doubleArray32 = pointVectorValuePair30.getPointRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivideToSelf((double) (byte) -1);
        arrayRealVector33.set((double) 1);
        java.lang.Double[] doubleArray38 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double double40 = arrayRealVector33.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector39);
        java.lang.Double[] doubleArray41 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = arrayRealVector39.append(arrayRealVector42);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector48 = arrayRealVector46.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = arrayRealVector39.combineToSelf(32.00000000000001d, 0.8813735870195429d, realVector48);
        boolean boolean50 = pointVectorValuePair30.equals((java.lang.Object) 32.00000000000001d);
        double[] doubleArray51 = pointVectorValuePair30.getKey();
        double[] doubleArray52 = pointVectorValuePair30.getFirst();
        // The following exception was thrown during execution in test generation
        try {
            double double53 = gaussNewtonOptimizer1.computeCost(doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(arrayRealVector43);
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(arrayRealVector49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: aload_1
32: invokespecial #63
35: astore_2
36: iconst_1
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #45
44: dastore
45: astore_3
46: aload_3
47: invokestatic  #47
50: astore        4
52: iconst_1
53: newarray       double
55: dup
56: iconst_0
57: ldc2_w        #45
60: dastore
61: astore        5
63: aload         5
65: invokestatic  #47
68: astore        6
70: new           #48
73: dup
74: aload_3
75: aload         5
77: invokespecial #49
80: astore        7
82: new           #48
85: dup
86: invokespecial #64
89: astore        8
91: aload         8
93: ldc2_w        #65
96: invokevirtual #67
99: astore        9
101: aload         8
103: dconst_1
104: invokevirtual #68
107: new           #48
110: dup
111: invokespecial #64
114: astore        10
116: aload         10
118: ldc2_w        #65
121: invokevirtual #67
124: astore        11
126: new           #48
129: dup
130: invokespecial #64
133: astore        12
135: aload         12
137: ldc2_w        #65
140: invokevirtual #67
143: astore        13
145: aload         10
147: aload         13
149: invokevirtual #69
152: astore        14
154: aload         8
156: aload         10
158: invokevirtual #70
161: dstore        15
163: new           #48
166: dup
167: invokespecial #64
170: astore        17
172: aload         17
174: ldc2_w        #65
177: invokevirtual #67
180: astore        18
182: aload         8
184: aload         18
186: invokevirtual #71
189: astore        19
191: new           #48
194: dup
195: invokespecial #64
198: astore        20
200: aload         20
202: invokevirtual #72
205: astore        21
207: new           #48
210: dup
211: aload         8
213: aload         21
215: invokespecial #73
218: astore        22
220: new           #101
223: dup
224: aload_3
225: aload         21
227: iconst_1
228: invokespecial #102
231: astore        23
233: aload         23
235: invokevirtual #103
238: astore        24
240: aload         23
242: invokevirtual #354
245: astore        25
247: new           #48
250: dup
251: invokespecial #64
254: astore        26
256: aload         26
258: ldc2_w        #65
261: invokevirtual #67
264: astore        27
266: aload         26
268: dconst_1
269: invokevirtual #68
272: iconst_0
273: anewarray     #97
276: astore        28
278: new           #48
281: dup
282: aload         28
284: invokespecial #107
287: astore        29
289: aload         26
291: aload         29
293: invokevirtual #70
296: dstore        30
298: iconst_0
299: anewarray     #97
302: astore        32
304: new           #48
307: dup
308: aload         32
310: invokespecial #107
313: astore        33
315: aload         29
317: aload         33
319: invokevirtual #108
322: astore        34
324: new           #48
327: dup
328: invokespecial #64
331: astore        35
333: aload         35
335: ldc2_w        #65
338: invokevirtual #67
341: astore        36
343: aload         29
345: ldc2_w        #157
348: ldc2_w        #159
351: aload         36
353: invokevirtual #161
356: astore        37
358: aload         23
360: ldc2_w        #157
363: invokestatic  #355
366: invokevirtual #195
369: istore        38
371: aload         23
373: invokevirtual #356
376: checkcast     #308
379: astore        39
381: aload         23
383: invokevirtual #307
386: checkcast     #308
389: astore        40
391: aload_2
392: aload         40
394: invokevirtual #357
397: dstore        41
399: ldc           #12
401: invokestatic  #13
404: goto          409
407: astore        41
409: aload_3
410: invokestatic  #35
413: aload_3
414: invokestatic  #36
417: ldc           #60
419: invokestatic  #38
422: aload         4
424: invokestatic  #35
427: aload         5
429: invokestatic  #35
432: aload         5
434: invokestatic  #36
437: ldc           #60
439: invokestatic  #38
442: aload         6
444: invokestatic  #35
447: aload         9
449: invokestatic  #35
452: aload         11
454: invokestatic  #35
457: aload         13
459: invokestatic  #35
462: aload         14
464: invokestatic  #35
467: new           #52
470: dup
471: invokespecial #53
474: ldc           #54
476: invokevirtual #55
479: dload         15
481: invokevirtual #80
484: ldc           #57
486: invokevirtual #55
489: dconst_0
490: invokevirtual #80
493: ldc           #54
495: invokevirtual #55
498: invokevirtual #58
501: dload         15
503: dconst_0
504: dcmpl
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #59
516: aload         18
518: invokestatic  #35
521: aload         19
523: invokestatic  #35
526: aload         21
528: invokestatic  #35
531: aload         21
533: invokestatic  #36
536: ldc           #81
538: invokestatic  #38
541: aload         24
543: invokestatic  #35
546: aload         24
548: invokestatic  #36
551: ldc           #81
553: invokestatic  #38
556: aload         25
558: invokestatic  #35
561: aload         25
563: invokestatic  #36
566: ldc           #60
568: invokestatic  #38
571: aload         27
573: invokestatic  #35
576: aload         28
578: invokestatic  #35
581: new           #52
584: dup
585: invokespecial #53
588: ldc           #54
590: invokevirtual #55
593: dload         30
595: invokevirtual #80
598: ldc           #57
600: invokevirtual #55
603: dconst_0
604: invokevirtual #80
607: ldc           #54
609: invokevirtual #55
612: invokevirtual #58
615: dload         30
617: dconst_0
618: dcmpl
619: ifne          626
622: iconst_1
623: goto          627
626: iconst_0
627: invokestatic  #59
630: aload         32
632: invokestatic  #35
635: aload         34
637: invokestatic  #35
640: aload         36
642: invokestatic  #35
645: aload         37
647: invokestatic  #35
650: new           #52
653: dup
654: invokespecial #53
657: ldc           #54
659: invokevirtual #55
662: iload         38
664: invokevirtual #170
667: ldc           #57
669: invokevirtual #55
672: iconst_0
673: invokevirtual #170
676: ldc           #54
678: invokevirtual #55
681: invokevirtual #58
684: iload         38
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #59
697: aload         39
699: invokestatic  #35
702: aload         39
704: invokestatic  #36
707: ldc           #60
709: invokestatic  #38
712: aload         40
714: invokestatic  #35
717: aload         40
719: invokestatic  #36
722: ldc           #60
724: invokestatic  #38
727: return
Exception table:
from    to  target type
391   404   407   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 2957
End line: 2969
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer2 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(true, pointVectorValuePairConvergenceChecker1);
        // The following exception was thrown during execution in test generation
        try {
            double double3 = gaussNewtonOptimizer2.getRMS();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: iconst_1
32: aload_1
33: invokespecial #140
36: astore_2
37: aload_2
38: invokevirtual #359
41: dstore_3
42: ldc           #12
44: invokestatic  #13
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
37    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 2972
End line: 3061
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction2 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian3 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction2);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction4 = modelFunctionJacobian3.getModelFunctionJacobian();
        double[] doubleArray6 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix7 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        double[] doubleArray9 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6, doubleArray9);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector14 = arrayRealVector12.mapDivideToSelf((double) (byte) -1);
        arrayRealVector12.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector20.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector17.append(realVector22);
        double double24 = arrayRealVector12.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector12.subtract(realVector27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray30 = arrayRealVector29.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector12, doubleArray30);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair33 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray6, doubleArray30, true);
        double[] doubleArray34 = pointVectorValuePair33.getValueRef();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight35 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray34);
        org.apache.commons.math3.optim.MaxIter maxIter37 = new org.apache.commons.math3.optim.MaxIter((int) ' ');
        int int38 = maxIter37.getMaxIter();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector39.mapDivideToSelf((double) (byte) -1);
        arrayRealVector39.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector46 = arrayRealVector44.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector49 = arrayRealVector47.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector50 = arrayRealVector44.append(realVector49);
        double double51 = arrayRealVector39.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector54 = arrayRealVector52.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector55 = arrayRealVector39.subtract(realVector54);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray57 = arrayRealVector56.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, doubleArray57);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight59 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray57);
        org.apache.commons.math3.linear.RealMatrix realMatrix60 = weight59.getWeight();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray61 = new org.apache.commons.math3.optim.OptimizationData[] { modelFunctionJacobian3, weight35, maxIter37, weight59 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair62 = levenbergMarquardtOptimizer0.optimize(optimizationDataArray61);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertNull(multivariateMatrixFunction4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertNotNull(realVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(realMatrix60);
        org.junit.Assert.assertNotNull(optimizationDataArray61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aconst_null
39: astore_3
40: new           #212
43: dup
44: aload_3
45: invokespecial #213
48: astore        4
50: aload         4
52: invokevirtual #233
55: astore        5
57: iconst_1
58: newarray       double
60: dup
61: iconst_0
62: ldc2_w        #45
65: dastore
66: astore        6
68: aload         6
70: invokestatic  #47
73: astore        7
75: iconst_1
76: newarray       double
78: dup
79: iconst_0
80: ldc2_w        #45
83: dastore
84: astore        8
86: aload         8
88: invokestatic  #47
91: astore        9
93: new           #48
96: dup
97: aload         6
99: aload         8
101: invokespecial #49
104: astore        10
106: new           #48
109: dup
110: invokespecial #64
113: astore        11
115: aload         11
117: ldc2_w        #65
120: invokevirtual #67
123: astore        12
125: aload         11
127: dconst_1
128: invokevirtual #68
131: new           #48
134: dup
135: invokespecial #64
138: astore        13
140: aload         13
142: ldc2_w        #65
145: invokevirtual #67
148: astore        14
150: new           #48
153: dup
154: invokespecial #64
157: astore        15
159: aload         15
161: ldc2_w        #65
164: invokevirtual #67
167: astore        16
169: aload         13
171: aload         16
173: invokevirtual #69
176: astore        17
178: aload         11
180: aload         13
182: invokevirtual #70
185: dstore        18
187: new           #48
190: dup
191: invokespecial #64
194: astore        20
196: aload         20
198: ldc2_w        #65
201: invokevirtual #67
204: astore        21
206: aload         11
208: aload         21
210: invokevirtual #71
213: astore        22
215: new           #48
218: dup
219: invokespecial #64
222: astore        23
224: aload         23
226: invokevirtual #72
229: astore        24
231: new           #48
234: dup
235: aload         11
237: aload         24
239: invokespecial #73
242: astore        25
244: new           #101
247: dup
248: aload         6
250: aload         24
252: iconst_1
253: invokespecial #102
256: astore        26
258: aload         26
260: invokevirtual #103
263: astore        27
265: new           #30
268: dup
269: aload         27
271: invokespecial #74
274: astore        28
276: new           #144
279: dup
280: bipush        32
282: invokespecial #145
285: astore        29
287: aload         29
289: invokevirtual #343
292: istore        30
294: new           #48
297: dup
298: invokespecial #64
301: astore        31
303: aload         31
305: ldc2_w        #65
308: invokevirtual #67
311: astore        32
313: aload         31
315: dconst_1
316: invokevirtual #68
319: new           #48
322: dup
323: invokespecial #64
326: astore        33
328: aload         33
330: ldc2_w        #65
333: invokevirtual #67
336: astore        34
338: new           #48
341: dup
342: invokespecial #64
345: astore        35
347: aload         35
349: ldc2_w        #65
352: invokevirtual #67
355: astore        36
357: aload         33
359: aload         36
361: invokevirtual #69
364: astore        37
366: aload         31
368: aload         33
370: invokevirtual #70
373: dstore        38
375: new           #48
378: dup
379: invokespecial #64
382: astore        40
384: aload         40
386: ldc2_w        #65
389: invokevirtual #67
392: astore        41
394: aload         31
396: aload         41
398: invokevirtual #71
401: astore        42
403: new           #48
406: dup
407: invokespecial #64
410: astore        43
412: aload         43
414: invokevirtual #72
417: astore        44
419: new           #48
422: dup
423: aload         31
425: aload         44
427: invokespecial #73
430: astore        45
432: new           #30
435: dup
436: aload         44
438: invokespecial #74
441: astore        46
443: aload         46
445: invokevirtual #75
448: astore        47
450: iconst_4
451: anewarray     #76
454: dup
455: iconst_0
456: aload         4
458: aastore
459: dup
460: iconst_1
461: aload         28
463: aastore
464: dup
465: iconst_2
466: aload         29
468: aastore
469: dup
470: iconst_3
471: aload         46
473: aastore
474: astore        48
476: aload_1
477: aload         48
479: invokevirtual #217
482: astore        49
484: ldc           #78
486: invokestatic  #13
489: goto          494
492: astore        49
494: aload_2
495: invokestatic  #15
498: aload         5
500: invokestatic  #15
503: aload         6
505: invokestatic  #35
508: aload         6
510: invokestatic  #36
513: ldc           #60
515: invokestatic  #38
518: aload         7
520: invokestatic  #35
523: aload         8
525: invokestatic  #35
528: aload         8
530: invokestatic  #36
533: ldc           #60
535: invokestatic  #38
538: aload         9
540: invokestatic  #35
543: aload         12
545: invokestatic  #35
548: aload         14
550: invokestatic  #35
553: aload         16
555: invokestatic  #35
558: aload         17
560: invokestatic  #35
563: new           #52
566: dup
567: invokespecial #53
570: ldc           #54
572: invokevirtual #55
575: dload         18
577: invokevirtual #80
580: ldc           #57
582: invokevirtual #55
585: dconst_0
586: invokevirtual #80
589: ldc           #54
591: invokevirtual #55
594: invokevirtual #58
597: dload         18
599: dconst_0
600: dcmpl
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #59
612: aload         21
614: invokestatic  #35
617: aload         22
619: invokestatic  #35
622: aload         24
624: invokestatic  #35
627: aload         24
629: invokestatic  #36
632: ldc           #81
634: invokestatic  #38
637: aload         27
639: invokestatic  #35
642: aload         27
644: invokestatic  #36
647: ldc           #81
649: invokestatic  #38
652: new           #52
655: dup
656: invokespecial #53
659: ldc           #54
661: invokevirtual #55
664: iload         30
666: invokevirtual #56
669: ldc           #57
671: invokevirtual #55
674: bipush        32
676: invokevirtual #56
679: ldc           #54
681: invokevirtual #55
684: invokevirtual #58
687: iload         30
689: bipush        32
691: if_icmpne     698
694: iconst_1
695: goto          699
698: iconst_0
699: invokestatic  #59
702: aload         32
704: invokestatic  #35
707: aload         34
709: invokestatic  #35
712: aload         36
714: invokestatic  #35
717: aload         37
719: invokestatic  #35
722: new           #52
725: dup
726: invokespecial #53
729: ldc           #54
731: invokevirtual #55
734: dload         38
736: invokevirtual #80
739: ldc           #57
741: invokevirtual #55
744: dconst_0
745: invokevirtual #80
748: ldc           #54
750: invokevirtual #55
753: invokevirtual #58
756: dload         38
758: dconst_0
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #59
771: aload         41
773: invokestatic  #35
776: aload         42
778: invokestatic  #35
781: aload         44
783: invokestatic  #35
786: aload         44
788: invokestatic  #36
791: ldc           #81
793: invokestatic  #38
796: aload         47
798: invokestatic  #35
801: aload         48
803: invokestatic  #35
806: return
Exception table:
from    to  target type
476   489   492   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 3064
End line: 3134
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        double[] doubleArray1 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix2 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector6 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray1, doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector9 = arrayRealVector7.mapDivideToSelf((double) (byte) -1);
        arrayRealVector7.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector14 = arrayRealVector12.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector17 = arrayRealVector15.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector18 = arrayRealVector12.append(realVector17);
        double double19 = arrayRealVector7.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector12);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector20.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector7.subtract(realVector22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray25 = arrayRealVector24.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector7, doubleArray25);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair28 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray1, doubleArray25, true);
        double[] doubleArray29 = pointVectorValuePair28.getValueRef();
        double[] doubleArray30 = pointVectorValuePair28.getPointRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        arrayRealVector31.set((double) 1);
        java.lang.Double[] doubleArray36 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray36);
        double double38 = arrayRealVector31.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector37);
        java.lang.Double[] doubleArray39 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = arrayRealVector37.append(arrayRealVector40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector46 = arrayRealVector44.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector47 = arrayRealVector37.combineToSelf(32.00000000000001d, 0.8813735870195429d, realVector46);
        boolean boolean48 = pointVectorValuePair28.equals((java.lang.Object) 32.00000000000001d);
        double[] doubleArray49 = pointVectorValuePair28.getPoint();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight50 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix2);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(realVector9);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0]");
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(arrayRealVector41);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(arrayRealVector47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #45
33: dastore
34: astore_1
35: aload_1
36: invokestatic  #47
39: astore_2
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore_3
50: aload_3
51: invokestatic  #47
54: astore        4
56: new           #48
59: dup
60: aload_1
61: aload_3
62: invokespecial #49
65: astore        5
67: new           #48
70: dup
71: invokespecial #64
74: astore        6
76: aload         6
78: ldc2_w        #65
81: invokevirtual #67
84: astore        7
86: aload         6
88: dconst_1
89: invokevirtual #68
92: new           #48
95: dup
96: invokespecial #64
99: astore        8
101: aload         8
103: ldc2_w        #65
106: invokevirtual #67
109: astore        9
111: new           #48
114: dup
115: invokespecial #64
118: astore        10
120: aload         10
122: ldc2_w        #65
125: invokevirtual #67
128: astore        11
130: aload         8
132: aload         11
134: invokevirtual #69
137: astore        12
139: aload         6
141: aload         8
143: invokevirtual #70
146: dstore        13
148: new           #48
151: dup
152: invokespecial #64
155: astore        15
157: aload         15
159: ldc2_w        #65
162: invokevirtual #67
165: astore        16
167: aload         6
169: aload         16
171: invokevirtual #71
174: astore        17
176: new           #48
179: dup
180: invokespecial #64
183: astore        18
185: aload         18
187: invokevirtual #72
190: astore        19
192: new           #48
195: dup
196: aload         6
198: aload         19
200: invokespecial #73
203: astore        20
205: new           #101
208: dup
209: aload_1
210: aload         19
212: iconst_1
213: invokespecial #102
216: astore        21
218: aload         21
220: invokevirtual #103
223: astore        22
225: aload         21
227: invokevirtual #354
230: astore        23
232: new           #48
235: dup
236: invokespecial #64
239: astore        24
241: aload         24
243: ldc2_w        #65
246: invokevirtual #67
249: astore        25
251: aload         24
253: dconst_1
254: invokevirtual #68
257: iconst_0
258: anewarray     #97
261: astore        26
263: new           #48
266: dup
267: aload         26
269: invokespecial #107
272: astore        27
274: aload         24
276: aload         27
278: invokevirtual #70
281: dstore        28
283: iconst_0
284: anewarray     #97
287: astore        30
289: new           #48
292: dup
293: aload         30
295: invokespecial #107
298: astore        31
300: aload         27
302: aload         31
304: invokevirtual #108
307: astore        32
309: new           #48
312: dup
313: invokespecial #64
316: astore        33
318: aload         33
320: ldc2_w        #65
323: invokevirtual #67
326: astore        34
328: aload         27
330: ldc2_w        #157
333: ldc2_w        #159
336: aload         34
338: invokevirtual #161
341: astore        35
343: aload         21
345: ldc2_w        #157
348: invokestatic  #355
351: invokevirtual #195
354: istore        36
356: aload         21
358: invokevirtual #362
361: astore        37
363: new           #30
366: dup
367: aload         37
369: invokespecial #74
372: astore        38
374: aload_1
375: invokestatic  #35
378: aload_1
379: invokestatic  #36
382: ldc           #60
384: invokestatic  #38
387: aload_2
388: invokestatic  #35
391: aload_3
392: invokestatic  #35
395: aload_3
396: invokestatic  #36
399: ldc           #60
401: invokestatic  #38
404: aload         4
406: invokestatic  #35
409: aload         7
411: invokestatic  #35
414: aload         9
416: invokestatic  #35
419: aload         11
421: invokestatic  #35
424: aload         12
426: invokestatic  #35
429: new           #52
432: dup
433: invokespecial #53
436: ldc           #54
438: invokevirtual #55
441: dload         13
443: invokevirtual #80
446: ldc           #57
448: invokevirtual #55
451: dconst_0
452: invokevirtual #80
455: ldc           #54
457: invokevirtual #55
460: invokevirtual #58
463: dload         13
465: dconst_0
466: dcmpl
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #59
478: aload         16
480: invokestatic  #35
483: aload         17
485: invokestatic  #35
488: aload         19
490: invokestatic  #35
493: aload         19
495: invokestatic  #36
498: ldc           #81
500: invokestatic  #38
503: aload         22
505: invokestatic  #35
508: aload         22
510: invokestatic  #36
513: ldc           #81
515: invokestatic  #38
518: aload         23
520: invokestatic  #35
523: aload         23
525: invokestatic  #36
528: ldc           #60
530: invokestatic  #38
533: aload         25
535: invokestatic  #35
538: aload         26
540: invokestatic  #35
543: new           #52
546: dup
547: invokespecial #53
550: ldc           #54
552: invokevirtual #55
555: dload         28
557: invokevirtual #80
560: ldc           #57
562: invokevirtual #55
565: dconst_0
566: invokevirtual #80
569: ldc           #54
571: invokevirtual #55
574: invokevirtual #58
577: dload         28
579: dconst_0
580: dcmpl
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #59
592: aload         30
594: invokestatic  #35
597: aload         32
599: invokestatic  #35
602: aload         34
604: invokestatic  #35
607: aload         35
609: invokestatic  #35
612: new           #52
615: dup
616: invokespecial #53
619: ldc           #54
621: invokevirtual #55
624: iload         36
626: invokevirtual #170
629: ldc           #57
631: invokevirtual #55
634: iconst_0
635: invokevirtual #170
638: ldc           #54
640: invokevirtual #55
643: invokevirtual #58
646: iload         36
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #59
659: aload         37
661: invokestatic  #35
664: aload         37
666: invokestatic  #36
669: ldc           #60
671: invokestatic  #38
674: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 3137
End line: 3192
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray20);
        double[] doubleArray26 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix28 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray26, true);
        org.apache.commons.math3.linear.RealVector realVector30 = diagonalMatrix28.getRowVector(0);
        double[] doubleArray34 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix36 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray34, true);
        double[] doubleArray40 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix42 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray40, true);
        double[] doubleArray43 = diagonalMatrix36.operate(doubleArray40);
        double[] doubleArray44 = diagonalMatrix28.preMultiply(doubleArray43);
        double[] doubleArray45 = diagonalMatrix22.preMultiply(doubleArray44);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight46 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray45, 36, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooLargeException; message: 37 is larger than the maximum (3)");
        } catch (org.apache.commons.math3.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0E10, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #363
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: dconst_1
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #21
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: astore_1
43: new           #23
46: dup
47: aload_1
48: iconst_1
49: invokespecial #24
52: astore_2
53: aload_2
54: iconst_0
55: invokevirtual #25
58: astore_3
59: iconst_3
60: newarray       double
62: dup
63: iconst_0
64: dconst_1
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #21
71: dastore
72: dup
73: iconst_2
74: dconst_1
75: dastore
76: astore        4
78: new           #23
81: dup
82: aload         4
84: iconst_1
85: invokespecial #24
88: astore        5
90: iconst_3
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: ldc2_w        #21
102: dastore
103: dup
104: iconst_2
105: dconst_1
106: dastore
107: astore        6
109: new           #23
112: dup
113: aload         6
115: iconst_1
116: invokespecial #24
119: astore        7
121: aload         5
123: aload         6
125: invokevirtual #26
128: astore        8
130: aload_2
131: aload         8
133: invokevirtual #27
136: astore        9
138: new           #23
141: dup
142: aload         8
144: invokespecial #28
147: astore        10
149: iconst_3
150: newarray       double
152: dup
153: iconst_0
154: dconst_1
155: dastore
156: dup
157: iconst_1
158: ldc2_w        #21
161: dastore
162: dup
163: iconst_2
164: dconst_1
165: dastore
166: astore        11
168: new           #23
171: dup
172: aload         11
174: iconst_1
175: invokespecial #24
178: astore        12
180: aload         12
182: iconst_0
183: invokevirtual #25
186: astore        13
188: iconst_3
189: newarray       double
191: dup
192: iconst_0
193: dconst_1
194: dastore
195: dup
196: iconst_1
197: ldc2_w        #21
200: dastore
201: dup
202: iconst_2
203: dconst_1
204: dastore
205: astore        14
207: new           #23
210: dup
211: aload         14
213: iconst_1
214: invokespecial #24
217: astore        15
219: iconst_3
220: newarray       double
222: dup
223: iconst_0
224: dconst_1
225: dastore
226: dup
227: iconst_1
228: ldc2_w        #21
231: dastore
232: dup
233: iconst_2
234: dconst_1
235: dastore
236: astore        16
238: new           #23
241: dup
242: aload         16
244: iconst_1
245: invokespecial #24
248: astore        17
250: aload         15
252: aload         16
254: invokevirtual #26
257: astore        18
259: aload         12
261: aload         18
263: invokevirtual #27
266: astore        19
268: aload         10
270: aload         19
272: invokevirtual #27
275: astore        20
277: new           #30
280: dup
281: aload         20
283: invokespecial #74
286: astore        21
288: new           #48
291: dup
292: aload         20
294: bipush        36
296: iconst_1
297: invokespecial #364
300: astore        22
302: ldc_w         #365
305: invokestatic  #13
308: goto          313
311: astore        22
313: aload_1
314: invokestatic  #35
317: aload_1
318: invokestatic  #36
321: ldc           #37
323: invokestatic  #38
326: aload_3
327: invokestatic  #35
330: aload         4
332: invokestatic  #35
335: aload         4
337: invokestatic  #36
340: ldc           #37
342: invokestatic  #38
345: aload         6
347: invokestatic  #35
350: aload         6
352: invokestatic  #36
355: ldc           #37
357: invokestatic  #38
360: aload         8
362: invokestatic  #35
365: aload         8
367: invokestatic  #36
370: ldc           #39
372: invokestatic  #38
375: aload         9
377: invokestatic  #35
380: aload         9
382: invokestatic  #36
385: ldc           #40
387: invokestatic  #38
390: aload         11
392: invokestatic  #35
395: aload         11
397: invokestatic  #36
400: ldc           #37
402: invokestatic  #38
405: aload         13
407: invokestatic  #35
410: aload         14
412: invokestatic  #35
415: aload         14
417: invokestatic  #36
420: ldc           #37
422: invokestatic  #38
425: aload         16
427: invokestatic  #35
430: aload         16
432: invokestatic  #36
435: ldc           #37
437: invokestatic  #38
440: aload         18
442: invokestatic  #35
445: aload         18
447: invokestatic  #36
450: ldc           #39
452: invokestatic  #38
455: aload         19
457: invokestatic  #35
460: aload         19
462: invokestatic  #36
465: ldc           #40
467: invokestatic  #38
470: aload         20
472: invokestatic  #35
475: aload         20
477: invokestatic  #36
480: ldc           #221
482: invokestatic  #38
485: return
Exception table:
from    to  target type
288   308   311   Class org/apache/commons/math3/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 3195
End line: 3202
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter4 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(0.0d, (double) ' ');
        parametricUnivariateFunctionCurveFitter4.addObservedPoint((double) (-6), (double) 35);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: new           #91
45: dup
46: aload_1
47: invokespecial #92
50: astore_2
51: aload_2
52: dconst_0
53: ldc2_w        #188
56: invokevirtual #367
59: aload_2
60: ldc2_w        #368
63: ldc2_w        #268
66: invokevirtual #367
69: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 3205
End line: 3311
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric10 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray13 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray13);
        double double15 = parametric10.value(5.186886619672693d, doubleArray13);
        double[] doubleArray17 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray17);
        double[] doubleArray20 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17, doubleArray20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        arrayRealVector23.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector28.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector28.append(realVector33);
        double double35 = arrayRealVector23.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector36.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector23.subtract(realVector38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray41 = arrayRealVector40.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23, doubleArray41);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair44 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray17, doubleArray41, true);
        boolean boolean46 = pointVectorValuePair44.equals((java.lang.Object) 3);
        double[] doubleArray47 = pointVectorValuePair44.getSecond();
        double[] doubleArray49 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix50 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray49);
        double[] doubleArray52 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix53 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray52);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray49, doubleArray52);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector57 = arrayRealVector55.mapDivideToSelf((double) (byte) -1);
        arrayRealVector55.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector62 = arrayRealVector60.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector65 = arrayRealVector63.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector66 = arrayRealVector60.append(realVector65);
        double double67 = arrayRealVector55.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector70 = arrayRealVector68.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector71 = arrayRealVector55.subtract(realVector70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray73 = arrayRealVector72.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector55, doubleArray73);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair76 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray49, doubleArray73, true);
        double[] doubleArray77 = pointVectorValuePair76.getValue();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds78 = new org.apache.commons.math3.optim.SimpleBounds(doubleArray47, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray79 = polynomialFitter6.fit(parametric10, doubleArray77);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NoDataException; message: empty polynomials coefficients array");
        } catch (org.apache.commons.math3.exception.NoDataException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix53);
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(realVector71);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: new           #93
74: dup
75: invokespecial #94
78: astore        5
80: iconst_1
81: newarray       double
83: dup
84: iconst_0
85: ldc2_w        #45
88: dastore
89: astore        6
91: aload         6
93: invokestatic  #47
96: astore        7
98: aload         5
100: ldc2_w        #371
103: aload         6
105: invokevirtual #121
108: dstore        8
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #45
118: dastore
119: astore        10
121: aload         10
123: invokestatic  #47
126: astore        11
128: iconst_1
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #45
136: dastore
137: astore        12
139: aload         12
141: invokestatic  #47
144: astore        13
146: new           #48
149: dup
150: aload         10
152: aload         12
154: invokespecial #49
157: astore        14
159: new           #48
162: dup
163: invokespecial #64
166: astore        15
168: aload         15
170: ldc2_w        #65
173: invokevirtual #67
176: astore        16
178: aload         15
180: dconst_1
181: invokevirtual #68
184: new           #48
187: dup
188: invokespecial #64
191: astore        17
193: aload         17
195: ldc2_w        #65
198: invokevirtual #67
201: astore        18
203: new           #48
206: dup
207: invokespecial #64
210: astore        19
212: aload         19
214: ldc2_w        #65
217: invokevirtual #67
220: astore        20
222: aload         17
224: aload         20
226: invokevirtual #69
229: astore        21
231: aload         15
233: aload         17
235: invokevirtual #70
238: dstore        22
240: new           #48
243: dup
244: invokespecial #64
247: astore        24
249: aload         24
251: ldc2_w        #65
254: invokevirtual #67
257: astore        25
259: aload         15
261: aload         25
263: invokevirtual #71
266: astore        26
268: new           #48
271: dup
272: invokespecial #64
275: astore        27
277: aload         27
279: invokevirtual #72
282: astore        28
284: new           #48
287: dup
288: aload         15
290: aload         28
292: invokespecial #73
295: astore        29
297: new           #101
300: dup
301: aload         10
303: aload         28
305: iconst_1
306: invokespecial #102
309: astore        30
311: aload         30
313: iconst_3
314: invokestatic  #194
317: invokevirtual #195
320: istore        31
322: aload         30
324: invokevirtual #325
327: checkcast     #308
330: astore        32
332: iconst_1
333: newarray       double
335: dup
336: iconst_0
337: ldc2_w        #45
340: dastore
341: astore        33
343: aload         33
345: invokestatic  #47
348: astore        34
350: iconst_1
351: newarray       double
353: dup
354: iconst_0
355: ldc2_w        #45
358: dastore
359: astore        35
361: aload         35
363: invokestatic  #47
366: astore        36
368: new           #48
371: dup
372: aload         33
374: aload         35
376: invokespecial #49
379: astore        37
381: new           #48
384: dup
385: invokespecial #64
388: astore        38
390: aload         38
392: ldc2_w        #65
395: invokevirtual #67
398: astore        39
400: aload         38
402: dconst_1
403: invokevirtual #68
406: new           #48
409: dup
410: invokespecial #64
413: astore        40
415: aload         40
417: ldc2_w        #65
420: invokevirtual #67
423: astore        41
425: new           #48
428: dup
429: invokespecial #64
432: astore        42
434: aload         42
436: ldc2_w        #65
439: invokevirtual #67
442: astore        43
444: aload         40
446: aload         43
448: invokevirtual #69
451: astore        44
453: aload         38
455: aload         40
457: invokevirtual #70
460: dstore        45
462: new           #48
465: dup
466: invokespecial #64
469: astore        47
471: aload         47
473: ldc2_w        #65
476: invokevirtual #67
479: astore        48
481: aload         38
483: aload         48
485: invokevirtual #71
488: astore        49
490: new           #48
493: dup
494: invokespecial #64
497: astore        50
499: aload         50
501: invokevirtual #72
504: astore        51
506: new           #48
509: dup
510: aload         38
512: aload         51
514: invokespecial #73
517: astore        52
519: new           #101
522: dup
523: aload         33
525: aload         51
527: iconst_1
528: invokespecial #102
531: astore        53
533: aload         53
535: invokevirtual #196
538: astore        54
540: new           #326
543: dup
544: aload         32
546: aload         54
548: invokespecial #327
551: astore        55
553: aload         4
555: aload         5
557: aload         54
559: invokevirtual #373
562: astore        56
564: ldc_w         #330
567: invokestatic  #13
570: goto          575
573: astore        56
575: aload_2
576: invokestatic  #15
579: new           #52
582: dup
583: invokespecial #53
586: ldc           #54
588: invokevirtual #55
591: iload_3
592: invokevirtual #56
595: ldc           #57
597: invokevirtual #55
600: iconst_0
601: invokevirtual #56
604: ldc           #54
606: invokevirtual #55
609: invokevirtual #58
612: iload_3
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #59
624: aload         6
626: invokestatic  #35
629: aload         6
631: invokestatic  #36
634: ldc           #60
636: invokestatic  #38
639: aload         7
641: invokestatic  #35
644: new           #52
647: dup
648: invokespecial #53
651: ldc           #54
653: invokevirtual #55
656: dload         8
658: invokevirtual #80
661: ldc           #57
663: invokevirtual #55
666: ldc2_w        #45
669: invokevirtual #80
672: ldc           #54
674: invokevirtual #55
677: invokevirtual #58
680: dload         8
682: ldc2_w        #45
685: dcmpl
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #59
697: aload         10
699: invokestatic  #35
702: aload         10
704: invokestatic  #36
707: ldc           #60
709: invokestatic  #38
712: aload         11
714: invokestatic  #35
717: aload         12
719: invokestatic  #35
722: aload         12
724: invokestatic  #36
727: ldc           #60
729: invokestatic  #38
732: aload         13
734: invokestatic  #35
737: aload         16
739: invokestatic  #35
742: aload         18
744: invokestatic  #35
747: aload         20
749: invokestatic  #35
752: aload         21
754: invokestatic  #35
757: new           #52
760: dup
761: invokespecial #53
764: ldc           #54
766: invokevirtual #55
769: dload         22
771: invokevirtual #80
774: ldc           #57
776: invokevirtual #55
779: dconst_0
780: invokevirtual #80
783: ldc           #54
785: invokevirtual #55
788: invokevirtual #58
791: dload         22
793: dconst_0
794: dcmpl
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #59
806: aload         25
808: invokestatic  #35
811: aload         26
813: invokestatic  #35
816: aload         28
818: invokestatic  #35
821: aload         28
823: invokestatic  #36
826: ldc           #81
828: invokestatic  #38
831: new           #52
834: dup
835: invokespecial #53
838: ldc           #54
840: invokevirtual #55
843: iload         31
845: invokevirtual #170
848: ldc           #57
850: invokevirtual #55
853: iconst_0
854: invokevirtual #170
857: ldc           #54
859: invokevirtual #55
862: invokevirtual #58
865: iload         31
867: ifne          874
870: iconst_1
871: goto          875
874: iconst_0
875: invokestatic  #59
878: aload         32
880: invokestatic  #35
883: aload         32
885: invokestatic  #36
888: ldc           #81
890: invokestatic  #38
893: aload         33
895: invokestatic  #35
898: aload         33
900: invokestatic  #36
903: ldc           #60
905: invokestatic  #38
908: aload         34
910: invokestatic  #35
913: aload         35
915: invokestatic  #35
918: aload         35
920: invokestatic  #36
923: ldc           #60
925: invokestatic  #38
928: aload         36
930: invokestatic  #35
933: aload         39
935: invokestatic  #35
938: aload         41
940: invokestatic  #35
943: aload         43
945: invokestatic  #35
948: aload         44
950: invokestatic  #35
953: new           #52
956: dup
957: invokespecial #53
960: ldc           #54
962: invokevirtual #55
965: dload         45
967: invokevirtual #80
970: ldc           #57
972: invokevirtual #55
975: dconst_0
976: invokevirtual #80
979: ldc           #54
981: invokevirtual #55
984: invokevirtual #58
987: dload         45
989: dconst_0
990: dcmpl
991: ifne          998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #59
1002: aload         48
1004: invokestatic  #35
1007: aload         49
1009: invokestatic  #35
1012: aload         51
1014: invokestatic  #35
1017: aload         51
1019: invokestatic  #36
1022: ldc           #81
1024: invokestatic  #38
1027: aload         54
1029: invokestatic  #35
1032: aload         54
1034: invokestatic  #36
1037: ldc           #81
1039: invokestatic  #38
1042: return
Exception table:
from    to  target type
553   570   573   Class org/apache/commons/math3/exception/NoDataException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 3314
End line: 3379
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        double[] doubleArray1 = new double[] { 0.6483608274590866d };
        double[] doubleArray3 = new double[] { 0.6483608274590866d };
        double[] doubleArray5 = new double[] { 0.6483608274590866d };
        double[] doubleArray7 = new double[] { 0.6483608274590866d };
        double[][] doubleArray8 = new double[][] { doubleArray1, doubleArray3, doubleArray5, doubleArray7 };
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix9 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray8);
        double[] doubleArray11 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix12 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        double[] doubleArray14 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix15 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray14);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray11, doubleArray14);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        arrayRealVector17.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector22.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector22.append(realVector27);
        double double29 = arrayRealVector17.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector32 = arrayRealVector30.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector17.subtract(realVector32);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray35 = arrayRealVector34.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector17, doubleArray35);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair38 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray11, doubleArray35, true);
        double[] doubleArray39 = pointVectorValuePair38.getValueRef();
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight40 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray41 = blockRealMatrix9.operate(doubleArray39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 0 != 1");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #206
33: dastore
34: astore_1
35: iconst_1
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #206
43: dastore
44: astore_2
45: iconst_1
46: newarray       double
48: dup
49: iconst_0
50: ldc2_w        #206
53: dastore
54: astore_3
55: iconst_1
56: newarray       double
58: dup
59: iconst_0
60: ldc2_w        #206
63: dastore
64: astore        4
66: iconst_4
67: anewarray     #308
70: dup
71: iconst_0
72: aload_1
73: aastore
74: dup
75: iconst_1
76: aload_2
77: aastore
78: dup
79: iconst_2
80: aload_3
81: aastore
82: dup
83: iconst_3
84: aload         4
86: aastore
87: astore        5
89: new           #375
92: dup
93: aload         5
95: invokespecial #376
98: astore        6
100: iconst_1
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #45
108: dastore
109: astore        7
111: aload         7
113: invokestatic  #47
116: astore        8
118: iconst_1
119: newarray       double
121: dup
122: iconst_0
123: ldc2_w        #45
126: dastore
127: astore        9
129: aload         9
131: invokestatic  #47
134: astore        10
136: new           #48
139: dup
140: aload         7
142: aload         9
144: invokespecial #49
147: astore        11
149: new           #48
152: dup
153: invokespecial #64
156: astore        12
158: aload         12
160: ldc2_w        #65
163: invokevirtual #67
166: astore        13
168: aload         12
170: dconst_1
171: invokevirtual #68
174: new           #48
177: dup
178: invokespecial #64
181: astore        14
183: aload         14
185: ldc2_w        #65
188: invokevirtual #67
191: astore        15
193: new           #48
196: dup
197: invokespecial #64
200: astore        16
202: aload         16
204: ldc2_w        #65
207: invokevirtual #67
210: astore        17
212: aload         14
214: aload         17
216: invokevirtual #69
219: astore        18
221: aload         12
223: aload         14
225: invokevirtual #70
228: dstore        19
230: new           #48
233: dup
234: invokespecial #64
237: astore        21
239: aload         21
241: ldc2_w        #65
244: invokevirtual #67
247: astore        22
249: aload         12
251: aload         22
253: invokevirtual #71
256: astore        23
258: new           #48
261: dup
262: invokespecial #64
265: astore        24
267: aload         24
269: invokevirtual #72
272: astore        25
274: new           #48
277: dup
278: aload         12
280: aload         25
282: invokespecial #73
285: astore        26
287: new           #101
290: dup
291: aload         7
293: aload         25
295: iconst_1
296: invokespecial #102
299: astore        27
301: aload         27
303: invokevirtual #103
306: astore        28
308: new           #30
311: dup
312: aload         28
314: invokespecial #74
317: astore        29
319: aload         6
321: aload         28
323: invokevirtual #377
326: astore        30
328: ldc_w         #378
331: invokestatic  #13
334: goto          339
337: astore        30
339: aload_1
340: invokestatic  #35
343: aload_1
344: invokestatic  #36
347: ldc_w         #379
350: invokestatic  #38
353: aload_2
354: invokestatic  #35
357: aload_2
358: invokestatic  #36
361: ldc_w         #379
364: invokestatic  #38
367: aload_3
368: invokestatic  #35
371: aload_3
372: invokestatic  #36
375: ldc_w         #379
378: invokestatic  #38
381: aload         4
383: invokestatic  #35
386: aload         4
388: invokestatic  #36
391: ldc_w         #379
394: invokestatic  #38
397: aload         5
399: invokestatic  #35
402: aload         7
404: invokestatic  #35
407: aload         7
409: invokestatic  #36
412: ldc           #60
414: invokestatic  #38
417: aload         8
419: invokestatic  #35
422: aload         9
424: invokestatic  #35
427: aload         9
429: invokestatic  #36
432: ldc           #60
434: invokestatic  #38
437: aload         10
439: invokestatic  #35
442: aload         13
444: invokestatic  #35
447: aload         15
449: invokestatic  #35
452: aload         17
454: invokestatic  #35
457: aload         18
459: invokestatic  #35
462: new           #52
465: dup
466: invokespecial #53
469: ldc           #54
471: invokevirtual #55
474: dload         19
476: invokevirtual #80
479: ldc           #57
481: invokevirtual #55
484: dconst_0
485: invokevirtual #80
488: ldc           #54
490: invokevirtual #55
493: invokevirtual #58
496: dload         19
498: dconst_0
499: dcmpl
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #59
511: aload         22
513: invokestatic  #35
516: aload         23
518: invokestatic  #35
521: aload         25
523: invokestatic  #35
526: aload         25
528: invokestatic  #36
531: ldc           #81
533: invokestatic  #38
536: aload         28
538: invokestatic  #35
541: aload         28
543: invokestatic  #36
546: ldc           #81
548: invokestatic  #38
551: return
Exception table:
from    to  target type
319   334   337   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 3382
End line: 3459
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 99.99999f, pointVectorValuePairConvergenceChecker1, 0.0d, 57.29577951308232d, (double) (byte) 1, (double) ' ');
        double double7 = levenbergMarquardtOptimizer6.getChiSquare();
        double[] doubleArray9 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        double[] doubleArray12 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray12);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray9, doubleArray12);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector17 = arrayRealVector15.mapDivideToSelf((double) (byte) -1);
        arrayRealVector15.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector20.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector26 = arrayRealVector20.append(realVector25);
        double double27 = arrayRealVector15.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector28.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector31 = arrayRealVector15.subtract(realVector30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray33 = arrayRealVector32.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector15, doubleArray33);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair36 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray9, doubleArray33, true);
        boolean boolean38 = pointVectorValuePair36.equals((java.lang.Object) 3);
        double[] doubleArray39 = pointVectorValuePair36.getSecond();
        double[] doubleArray41 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix42 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray41);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialFunction43 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction(doubleArray41);
        double[] doubleArray45 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix46 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray45);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialFunction47 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction(doubleArray45);
        double double49 = polynomialFunction47.value((double) 6.591783E31f);
        int int50 = polynomialFunction47.degree();
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialFunction51 = polynomialFunction43.subtract(polynomialFunction47);
        double[] doubleArray52 = polynomialFunction51.getCoefficients();
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair54 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray39, doubleArray52, false);
        // The following exception was thrown during execution in test generation
        try {
            double double55 = levenbergMarquardtOptimizer6.computeCost(doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(polynomialFunction51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #380
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #183
34: aload_1
35: dconst_0
36: ldc2_w        #186
39: dconst_1
40: ldc2_w        #188
43: invokespecial #190
46: astore_2
47: aload_2
48: invokevirtual #191
51: dstore_3
52: iconst_1
53: newarray       double
55: dup
56: iconst_0
57: ldc2_w        #45
60: dastore
61: astore        5
63: aload         5
65: invokestatic  #47
68: astore        6
70: iconst_1
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #45
78: dastore
79: astore        7
81: aload         7
83: invokestatic  #47
86: astore        8
88: new           #48
91: dup
92: aload         5
94: aload         7
96: invokespecial #49
99: astore        9
101: new           #48
104: dup
105: invokespecial #64
108: astore        10
110: aload         10
112: ldc2_w        #65
115: invokevirtual #67
118: astore        11
120: aload         10
122: dconst_1
123: invokevirtual #68
126: new           #48
129: dup
130: invokespecial #64
133: astore        12
135: aload         12
137: ldc2_w        #65
140: invokevirtual #67
143: astore        13
145: new           #48
148: dup
149: invokespecial #64
152: astore        14
154: aload         14
156: ldc2_w        #65
159: invokevirtual #67
162: astore        15
164: aload         12
166: aload         15
168: invokevirtual #69
171: astore        16
173: aload         10
175: aload         12
177: invokevirtual #70
180: dstore        17
182: new           #48
185: dup
186: invokespecial #64
189: astore        19
191: aload         19
193: ldc2_w        #65
196: invokevirtual #67
199: astore        20
201: aload         10
203: aload         20
205: invokevirtual #71
208: astore        21
210: new           #48
213: dup
214: invokespecial #64
217: astore        22
219: aload         22
221: invokevirtual #72
224: astore        23
226: new           #48
229: dup
230: aload         10
232: aload         23
234: invokespecial #73
237: astore        24
239: new           #101
242: dup
243: aload         5
245: aload         23
247: iconst_1
248: invokespecial #102
251: astore        25
253: aload         25
255: iconst_3
256: invokestatic  #194
259: invokevirtual #195
262: istore        26
264: aload         25
266: invokevirtual #325
269: checkcast     #308
272: astore        27
274: iconst_1
275: newarray       double
277: dup
278: iconst_0
279: ldc2_w        #45
282: dastore
283: astore        28
285: aload         28
287: invokestatic  #47
290: astore        29
292: new           #381
295: dup
296: aload         28
298: invokespecial #382
301: astore        30
303: iconst_1
304: newarray       double
306: dup
307: iconst_0
308: ldc2_w        #45
311: dastore
312: astore        31
314: aload         31
316: invokestatic  #47
319: astore        32
321: new           #381
324: dup
325: aload         31
327: invokespecial #382
330: astore        33
332: aload         33
334: ldc2_w        #383
337: invokevirtual #385
340: dstore        34
342: aload         33
344: invokevirtual #386
347: istore        36
349: aload         30
351: aload         33
353: invokevirtual #387
356: astore        37
358: aload         37
360: invokevirtual #388
363: astore        38
365: new           #101
368: dup
369: aload         27
371: aload         38
373: iconst_0
374: invokespecial #102
377: astore        39
379: aload_2
380: aload         38
382: invokevirtual #172
385: dstore        40
387: ldc           #12
389: invokestatic  #13
392: goto          397
395: astore        40
397: new           #52
400: dup
401: invokespecial #53
404: ldc           #54
406: invokevirtual #55
409: dload_3
410: invokevirtual #80
413: ldc           #57
415: invokevirtual #55
418: dconst_0
419: invokevirtual #80
422: ldc           #54
424: invokevirtual #55
427: invokevirtual #58
430: dload_3
431: dconst_0
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #59
444: aload         5
446: invokestatic  #35
449: aload         5
451: invokestatic  #36
454: ldc           #60
456: invokestatic  #38
459: aload         6
461: invokestatic  #35
464: aload         7
466: invokestatic  #35
469: aload         7
471: invokestatic  #36
474: ldc           #60
476: invokestatic  #38
479: aload         8
481: invokestatic  #35
484: aload         11
486: invokestatic  #35
489: aload         13
491: invokestatic  #35
494: aload         15
496: invokestatic  #35
499: aload         16
501: invokestatic  #35
504: new           #52
507: dup
508: invokespecial #53
511: ldc           #54
513: invokevirtual #55
516: dload         17
518: invokevirtual #80
521: ldc           #57
523: invokevirtual #55
526: dconst_0
527: invokevirtual #80
530: ldc           #54
532: invokevirtual #55
535: invokevirtual #58
538: dload         17
540: dconst_0
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #59
553: aload         20
555: invokestatic  #35
558: aload         21
560: invokestatic  #35
563: aload         23
565: invokestatic  #35
568: aload         23
570: invokestatic  #36
573: ldc           #81
575: invokestatic  #38
578: new           #52
581: dup
582: invokespecial #53
585: ldc           #54
587: invokevirtual #55
590: iload         26
592: invokevirtual #170
595: ldc           #57
597: invokevirtual #55
600: iconst_0
601: invokevirtual #170
604: ldc           #54
606: invokevirtual #55
609: invokevirtual #58
612: iload         26
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #59
625: aload         27
627: invokestatic  #35
630: aload         27
632: invokestatic  #36
635: ldc           #81
637: invokestatic  #38
640: aload         28
642: invokestatic  #35
645: aload         28
647: invokestatic  #36
650: ldc           #60
652: invokestatic  #38
655: aload         29
657: invokestatic  #35
660: aload         31
662: invokestatic  #35
665: aload         31
667: invokestatic  #36
670: ldc           #60
672: invokestatic  #38
675: aload         32
677: invokestatic  #35
680: new           #52
683: dup
684: invokespecial #53
687: ldc           #54
689: invokevirtual #55
692: dload         34
694: invokevirtual #80
697: ldc           #57
699: invokevirtual #55
702: ldc2_w        #45
705: invokevirtual #80
708: ldc           #54
710: invokevirtual #55
713: invokevirtual #58
716: dload         34
718: ldc2_w        #45
721: dcmpl
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #59
733: new           #52
736: dup
737: invokespecial #53
740: ldc           #54
742: invokevirtual #55
745: iload         36
747: invokevirtual #56
750: ldc           #57
752: invokevirtual #55
755: iconst_0
756: invokevirtual #56
759: ldc           #54
761: invokevirtual #55
764: invokevirtual #58
767: iload         36
769: ifne          776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #59
780: aload         37
782: invokestatic  #35
785: aload         38
787: invokestatic  #35
790: aload         38
792: invokestatic  #36
795: ldc_w         #389
798: invokestatic  #38
801: return
Exception table:
from    to  target type
379   392   395   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 3462
End line: 3466
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 32, (double) (-1), (double) 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #188
32: ldc2_w        #65
35: ldc2_w        #391
38: invokespecial #153
41: astore_1
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 3469
End line: 3479
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        int int3 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        int int4 = levenbergMarquardtOptimizer1.getIterations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #393
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: new           #91
39: dup
40: aload_2
41: invokespecial #92
44: astore_3
45: aload_2
46: invokevirtual #44
49: istore        4
51: aload_2
52: invokevirtual #230
55: istore        5
57: new           #52
60: dup
61: invokespecial #53
64: ldc           #54
66: invokevirtual #55
69: iload         4
71: invokevirtual #56
74: ldc           #57
76: invokevirtual #55
79: iconst_0
80: invokevirtual #56
83: ldc           #54
85: invokevirtual #55
88: invokevirtual #58
91: iload         4
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #59
104: new           #52
107: dup
108: invokespecial #53
111: ldc           #54
113: invokevirtual #55
116: iload         5
118: invokevirtual #56
121: ldc           #57
123: invokevirtual #55
126: iconst_0
127: invokevirtual #56
130: ldc           #54
132: invokevirtual #55
135: invokevirtual #58
138: iload         5
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #59
151: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 3482
End line: 3492
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getStartPoint();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #394
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #83
51: astore_3
52: aload_1
53: invokevirtual #83
56: astore        4
58: aload_2
59: invokestatic  #15
62: aload_3
63: invokestatic  #15
66: aload         4
68: invokestatic  #15
71: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 3495
End line: 3510
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((double) 0L, (double) 32);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = polynomialFitter6.getObservations();
        org.apache.commons.math3.exception.MathParseException mathParseException16 = new org.apache.commons.math3.exception.MathParseException("[1, 0, 0; 0, 100, 0; 0, 0, 1]", 2147483647);
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.fitting.WeightedObservedPoint[], org.apache.commons.math3.exception.MathParseException> weightedObservedPointArrayPair17 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.fitting.WeightedObservedPoint[], org.apache.commons.math3.exception.MathParseException>(weightedObservedPointArray13, mathParseException16);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: dconst_0
74: ldc2_w        #188
77: invokevirtual #263
80: aload         4
82: invokevirtual #324
85: astore        5
87: new           #396
90: dup
91: ldc_w         #397
94: ldc_w         #398
97: invokespecial #399
100: astore        6
102: new           #141
105: dup
106: aload         5
108: aload         6
110: invokespecial #142
113: astore        7
115: aload_2
116: invokestatic  #15
119: new           #52
122: dup
123: invokespecial #53
126: ldc           #54
128: invokevirtual #55
131: iload_3
132: invokevirtual #56
135: ldc           #57
137: invokevirtual #55
140: iconst_0
141: invokevirtual #56
144: ldc           #54
146: invokevirtual #55
149: invokevirtual #58
152: iload_3
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #59
164: aload         5
166: invokestatic  #35
169: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 3513
End line: 3612
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getStartPoint();
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric7 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray11 = new double[] { 2.5934433098363465d, Double.NEGATIVE_INFINITY };
        double[] doubleArray12 = parametric7.gradient((double) (-1.0f), doubleArray11);
        double[] doubleArray15 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix16 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray15);
        double[] doubleArray18 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix19 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15, doubleArray18);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix22 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray15, true);
        double[] doubleArray26 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix28 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray26, true);
        org.apache.commons.math3.linear.RealVector realVector30 = diagonalMatrix28.getRowVector(0);
        double[] doubleArray34 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix36 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray34, true);
        double[] doubleArray40 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix42 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray40, true);
        double[] doubleArray43 = diagonalMatrix36.operate(doubleArray40);
        double[] doubleArray44 = diagonalMatrix28.preMultiply(doubleArray43);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix45 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray43);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair47 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray15, doubleArray43, true);
        double double48 = parametric7.value(1.5607966601082315d, doubleArray43);
        double[] doubleArray53 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix55 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray53, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix57 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray53, true);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector60 = arrayRealVector58.mapDivideToSelf((double) (byte) -1);
        arrayRealVector58.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector65 = arrayRealVector63.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector68 = arrayRealVector66.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector69 = arrayRealVector63.append(realVector68);
        double double70 = arrayRealVector58.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector73 = arrayRealVector71.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector74 = arrayRealVector58.subtract(realVector73);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray76 = arrayRealVector75.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector58, doubleArray76);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector78 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector58);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction79 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector80 = arrayRealVector78.mapToSelf(univariateFunction79);
        java.lang.String str81 = arrayRealVector78.toString();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53, arrayRealVector78);
        double[] doubleArray83 = parametric7.gradient((double) 1076101120, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray84 = levenbergMarquardtOptimizer3.computeResiduals(doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[2.5934433098363465, -Infinity]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 15611.402687296519d + "'", double48 == 15611.402687296519d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector68);
        org.junit.Assert.assertNotNull(realVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(realVector73);
        org.junit.Assert.assertNotNull(realVector74);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(arrayRealVector80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.07610112E9, 1.1579936204652544E18]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #400
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #230
51: istore_3
52: aload_1
53: invokevirtual #83
56: astore        4
58: new           #93
61: dup
62: invokespecial #94
65: astore        5
67: iconst_2
68: newarray       double
70: dup
71: iconst_0
72: ldc2_w        #95
75: dastore
76: dup
77: iconst_1
78: ldc2_w        #98
81: dastore
82: astore        6
84: aload         5
86: ldc2_w        #65
89: aload         6
91: invokevirtual #100
94: astore        7
96: iconst_1
97: newarray       double
99: dup
100: iconst_0
101: ldc2_w        #45
104: dastore
105: astore        8
107: aload         8
109: invokestatic  #47
112: astore        9
114: iconst_1
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #45
122: dastore
123: astore        10
125: aload         10
127: invokestatic  #47
130: astore        11
132: new           #48
135: dup
136: aload         8
138: aload         10
140: invokespecial #49
143: astore        12
145: new           #23
148: dup
149: aload         8
151: iconst_1
152: invokespecial #24
155: astore        13
157: iconst_3
158: newarray       double
160: dup
161: iconst_0
162: dconst_1
163: dastore
164: dup
165: iconst_1
166: ldc2_w        #21
169: dastore
170: dup
171: iconst_2
172: dconst_1
173: dastore
174: astore        14
176: new           #23
179: dup
180: aload         14
182: iconst_1
183: invokespecial #24
186: astore        15
188: aload         15
190: iconst_0
191: invokevirtual #25
194: astore        16
196: iconst_3
197: newarray       double
199: dup
200: iconst_0
201: dconst_1
202: dastore
203: dup
204: iconst_1
205: ldc2_w        #21
208: dastore
209: dup
210: iconst_2
211: dconst_1
212: dastore
213: astore        17
215: new           #23
218: dup
219: aload         17
221: iconst_1
222: invokespecial #24
225: astore        18
227: iconst_3
228: newarray       double
230: dup
231: iconst_0
232: dconst_1
233: dastore
234: dup
235: iconst_1
236: ldc2_w        #21
239: dastore
240: dup
241: iconst_2
242: dconst_1
243: dastore
244: astore        19
246: new           #23
249: dup
250: aload         19
252: iconst_1
253: invokespecial #24
256: astore        20
258: aload         18
260: aload         19
262: invokevirtual #26
265: astore        21
267: aload         15
269: aload         21
271: invokevirtual #27
274: astore        22
276: new           #23
279: dup
280: aload         21
282: invokespecial #28
285: astore        23
287: new           #101
290: dup
291: aload         8
293: aload         21
295: iconst_1
296: invokespecial #102
299: astore        24
301: aload         5
303: ldc2_w        #261
306: aload         21
308: invokevirtual #121
311: dstore        25
313: iconst_3
314: newarray       double
316: dup
317: iconst_0
318: dconst_1
319: dastore
320: dup
321: iconst_1
322: ldc2_w        #21
325: dastore
326: dup
327: iconst_2
328: dconst_1
329: dastore
330: astore        27
332: new           #23
335: dup
336: aload         27
338: iconst_1
339: invokespecial #24
342: astore        28
344: new           #23
347: dup
348: aload         27
350: iconst_1
351: invokespecial #24
354: astore        29
356: new           #48
359: dup
360: invokespecial #64
363: astore        30
365: aload         30
367: ldc2_w        #65
370: invokevirtual #67
373: astore        31
375: aload         30
377: dconst_1
378: invokevirtual #68
381: new           #48
384: dup
385: invokespecial #64
388: astore        32
390: aload         32
392: ldc2_w        #65
395: invokevirtual #67
398: astore        33
400: new           #48
403: dup
404: invokespecial #64
407: astore        34
409: aload         34
411: ldc2_w        #65
414: invokevirtual #67
417: astore        35
419: aload         32
421: aload         35
423: invokevirtual #69
426: astore        36
428: aload         30
430: aload         32
432: invokevirtual #70
435: dstore        37
437: new           #48
440: dup
441: invokespecial #64
444: astore        39
446: aload         39
448: ldc2_w        #65
451: invokevirtual #67
454: astore        40
456: aload         30
458: aload         40
460: invokevirtual #71
463: astore        41
465: new           #48
468: dup
469: invokespecial #64
472: astore        42
474: aload         42
476: invokevirtual #72
479: astore        43
481: new           #48
484: dup
485: aload         30
487: aload         43
489: invokespecial #73
492: astore        44
494: new           #48
497: dup
498: aload         30
500: invokespecial #223
503: astore        45
505: aconst_null
506: astore        46
508: aload         45
510: aload         46
512: invokevirtual #224
515: astore        47
517: aload         45
519: invokevirtual #401
522: astore        48
524: new           #48
527: dup
528: aload         27
530: aload         45
532: invokespecial #402
535: astore        49
537: aload         5
539: ldc2_w        #403
542: aload         27
544: invokevirtual #100
547: astore        50
549: aload_1
550: aload         50
552: invokevirtual #405
555: astore        51
557: ldc           #12
559: invokestatic  #13
562: goto          567
565: astore        51
567: aload_2
568: invokestatic  #15
571: new           #52
574: dup
575: invokespecial #53
578: ldc           #54
580: invokevirtual #55
583: iload_3
584: invokevirtual #56
587: ldc           #57
589: invokevirtual #55
592: iconst_0
593: invokevirtual #56
596: ldc           #54
598: invokevirtual #55
601: invokevirtual #58
604: iload_3
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #59
616: aload         4
618: invokestatic  #15
621: aload         6
623: invokestatic  #35
626: aload         6
628: invokestatic  #36
631: ldc           #110
633: invokestatic  #38
636: aload         7
638: invokestatic  #35
641: aload         7
643: invokestatic  #36
646: ldc           #111
648: invokestatic  #38
651: aload         8
653: invokestatic  #35
656: aload         8
658: invokestatic  #36
661: ldc           #60
663: invokestatic  #38
666: aload         9
668: invokestatic  #35
671: aload         10
673: invokestatic  #35
676: aload         10
678: invokestatic  #36
681: ldc           #60
683: invokestatic  #38
686: aload         11
688: invokestatic  #35
691: aload         14
693: invokestatic  #35
696: aload         14
698: invokestatic  #36
701: ldc           #37
703: invokestatic  #38
706: aload         16
708: invokestatic  #35
711: aload         17
713: invokestatic  #35
716: aload         17
718: invokestatic  #36
721: ldc           #37
723: invokestatic  #38
726: aload         19
728: invokestatic  #35
731: aload         19
733: invokestatic  #36
736: ldc           #37
738: invokestatic  #38
741: aload         21
743: invokestatic  #35
746: aload         21
748: invokestatic  #36
751: ldc           #39
753: invokestatic  #38
756: aload         22
758: invokestatic  #35
761: aload         22
763: invokestatic  #36
766: ldc           #40
768: invokestatic  #38
771: new           #52
774: dup
775: invokespecial #53
778: ldc           #54
780: invokevirtual #55
783: dload         25
785: invokevirtual #80
788: ldc           #57
790: invokevirtual #55
793: ldc2_w        #266
796: invokevirtual #80
799: ldc           #54
801: invokevirtual #55
804: invokevirtual #58
807: dload         25
809: ldc2_w        #266
812: dcmpl
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #59
824: aload         27
826: invokestatic  #35
829: aload         27
831: invokestatic  #36
834: ldc           #37
836: invokestatic  #38
839: aload         31
841: invokestatic  #35
844: aload         33
846: invokestatic  #35
849: aload         35
851: invokestatic  #35
854: aload         36
856: invokestatic  #35
859: new           #52
862: dup
863: invokespecial #53
866: ldc           #54
868: invokevirtual #55
871: dload         37
873: invokevirtual #80
876: ldc           #57
878: invokevirtual #55
881: dconst_0
882: invokevirtual #80
885: ldc           #54
887: invokevirtual #55
890: invokevirtual #58
893: dload         37
895: dconst_0
896: dcmpl
897: ifne          904
900: iconst_1
901: goto          905
904: iconst_0
905: invokestatic  #59
908: aload         40
910: invokestatic  #35
913: aload         41
915: invokestatic  #35
918: aload         43
920: invokestatic  #35
923: aload         43
925: invokestatic  #36
928: ldc           #81
930: invokestatic  #38
933: aload         47
935: invokestatic  #35
938: new           #52
941: dup
942: invokespecial #53
945: ldc           #54
947: invokevirtual #55
950: aload         48
952: invokevirtual #55
955: ldc_w         #406
958: invokevirtual #55
961: invokevirtual #58
964: aload         48
966: ldc_w         #407
969: invokestatic  #408
972: aload         50
974: invokestatic  #35
977: aload         50
979: invokestatic  #36
982: ldc_w         #409
985: invokestatic  #38
988: return
Exception table:
from    to  target type
549   562   565   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 3615
End line: 3619
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.3440585709080678E43d, (double) 462285919L, (double) (short) 10, 3.0d, 4.641588833612779d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #411
32: ldc2_w        #413
35: ldc2_w        #45
38: ldc2_w        #50
41: ldc2_w        #312
44: invokespecial #415
47: astore_1
48: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 3622
End line: 3634
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        double double8 = weightedObservedPoint6.getWeight();
        double double9 = weightedObservedPoint6.getX();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: new           #91
39: dup
40: aload_2
41: invokespecial #92
44: astore_3
45: new           #113
48: dup
49: ldc2_w        #21
52: dconst_0
53: ldc2_w        #21
56: invokespecial #114
59: astore        4
61: aload_3
62: aload         4
64: invokevirtual #115
67: aload         4
69: invokevirtual #275
72: dstore        5
74: aload         4
76: invokevirtual #116
79: dstore        7
81: new           #52
84: dup
85: invokespecial #53
88: ldc           #54
90: invokevirtual #55
93: dload         5
95: invokevirtual #80
98: ldc           #57
100: invokevirtual #55
103: ldc2_w        #21
106: invokevirtual #80
109: ldc           #54
111: invokevirtual #55
114: invokevirtual #58
117: dload         5
119: ldc2_w        #21
122: dcmpl
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #59
134: new           #52
137: dup
138: invokespecial #53
141: ldc           #54
143: invokevirtual #55
146: dload         7
148: invokevirtual #80
151: ldc           #57
153: invokevirtual #55
156: dconst_0
157: invokevirtual #80
160: ldc           #54
162: invokevirtual #55
165: invokevirtual #58
168: dload         7
170: dconst_0
171: dcmpl
172: ifne          179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #59
183: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 3637
End line: 3668
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker5 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        double[] doubleArray10 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix12 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray10, true);
        double[] doubleArray16 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix18 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray16, true);
        org.apache.commons.math3.linear.RealVector realVector20 = diagonalMatrix18.getRowVector(0);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = diagonalMatrix12.multiply((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix18);
        double[] doubleArray23 = realMatrix21.getRow(0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = polynomialFitter6.fit(doubleArray23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #417
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #243
51: astore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: iconst_3
63: newarray       double
65: dup
66: iconst_0
67: dconst_1
68: dastore
69: dup
70: iconst_1
71: ldc2_w        #21
74: dastore
75: dup
76: iconst_2
77: dconst_1
78: dastore
79: astore        5
81: new           #23
84: dup
85: aload         5
87: iconst_1
88: invokespecial #24
91: astore        6
93: iconst_3
94: newarray       double
96: dup
97: iconst_0
98: dconst_1
99: dastore
100: dup
101: iconst_1
102: ldc2_w        #21
105: dastore
106: dup
107: iconst_2
108: dconst_1
109: dastore
110: astore        7
112: new           #23
115: dup
116: aload         7
118: iconst_1
119: invokespecial #24
122: astore        8
124: aload         8
126: iconst_0
127: invokevirtual #25
130: astore        9
132: aload         6
134: aload         8
136: invokevirtual #418
139: astore        10
141: aload         10
143: iconst_0
144: invokeinterface #419,  2
149: astore        11
151: aload         4
153: aload         11
155: invokevirtual #302
158: astore        12
160: ldc           #78
162: invokestatic  #13
165: goto          170
168: astore        12
170: aload_2
171: invokestatic  #15
174: aload_3
175: invokestatic  #15
178: aload         5
180: invokestatic  #35
183: aload         5
185: invokestatic  #36
188: ldc           #37
190: invokestatic  #38
193: aload         7
195: invokestatic  #35
198: aload         7
200: invokestatic  #36
203: ldc           #37
205: invokestatic  #38
208: aload         9
210: invokestatic  #35
213: aload         10
215: invokestatic  #35
218: aload         11
220: invokestatic  #35
223: aload         11
225: invokestatic  #36
228: ldc_w         #420
231: invokestatic  #38
234: return
Exception table:
from    to  target type
151   165   168   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 3671
End line: 3744
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight20 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray18);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = weight20.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix22 = weight20.getWeight();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        arrayRealVector23.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector28.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector28.append(realVector33);
        double double35 = arrayRealVector23.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector36.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector23.subtract(realVector38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray41 = arrayRealVector40.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23, doubleArray41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = arrayRealVector43.mapToSelf(univariateFunction44);
        org.apache.commons.math3.linear.RealVector realVector47 = arrayRealVector43.mapMultiplyToSelf(0.0d);
        org.apache.commons.math3.linear.RealVector realVector49 = arrayRealVector43.mapSubtractToSelf(0.0d);
        org.apache.commons.math3.linear.MatrixUtils.solveLowerTriangularSystem(realMatrix22, realVector49);
        org.apache.commons.math3.linear.RealMatrixPreservingVisitor realMatrixPreservingVisitor51 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double52 = realMatrix22.walkInRowOrder(realMatrixPreservingVisitor51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathUnsupportedOperationException; message: unsupported operation");
        } catch (org.apache.commons.math3.exception.MathUnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(realMatrix22);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: new           #48
28: dup
29: invokespecial #64
32: astore_1
33: aload_1
34: ldc2_w        #65
37: invokevirtual #67
40: astore_2
41: aload_1
42: dconst_1
43: invokevirtual #68
46: new           #48
49: dup
50: invokespecial #64
53: astore_3
54: aload_3
55: ldc2_w        #65
58: invokevirtual #67
61: astore        4
63: new           #48
66: dup
67: invokespecial #64
70: astore        5
72: aload         5
74: ldc2_w        #65
77: invokevirtual #67
80: astore        6
82: aload_3
83: aload         6
85: invokevirtual #69
88: astore        7
90: aload_1
91: aload_3
92: invokevirtual #70
95: dstore        8
97: new           #48
100: dup
101: invokespecial #64
104: astore        10
106: aload         10
108: ldc2_w        #65
111: invokevirtual #67
114: astore        11
116: aload_1
117: aload         11
119: invokevirtual #71
122: astore        12
124: new           #48
127: dup
128: invokespecial #64
131: astore        13
133: aload         13
135: invokevirtual #72
138: astore        14
140: new           #48
143: dup
144: aload_1
145: aload         14
147: invokespecial #73
150: astore        15
152: new           #30
155: dup
156: aload         14
158: invokespecial #74
161: astore        16
163: aload         16
165: invokevirtual #75
168: astore        17
170: aload         16
172: invokevirtual #75
175: astore        18
177: new           #48
180: dup
181: invokespecial #64
184: astore        19
186: aload         19
188: ldc2_w        #65
191: invokevirtual #67
194: astore        20
196: aload         19
198: dconst_1
199: invokevirtual #68
202: new           #48
205: dup
206: invokespecial #64
209: astore        21
211: aload         21
213: ldc2_w        #65
216: invokevirtual #67
219: astore        22
221: new           #48
224: dup
225: invokespecial #64
228: astore        23
230: aload         23
232: ldc2_w        #65
235: invokevirtual #67
238: astore        24
240: aload         21
242: aload         24
244: invokevirtual #69
247: astore        25
249: aload         19
251: aload         21
253: invokevirtual #70
256: dstore        26
258: new           #48
261: dup
262: invokespecial #64
265: astore        28
267: aload         28
269: ldc2_w        #65
272: invokevirtual #67
275: astore        29
277: aload         19
279: aload         29
281: invokevirtual #71
284: astore        30
286: new           #48
289: dup
290: invokespecial #64
293: astore        31
295: aload         31
297: invokevirtual #72
300: astore        32
302: new           #48
305: dup
306: aload         19
308: aload         32
310: invokespecial #73
313: astore        33
315: new           #48
318: dup
319: aload         19
321: invokespecial #223
324: astore        34
326: aconst_null
327: astore        35
329: aload         34
331: aload         35
333: invokevirtual #224
336: astore        36
338: aload         34
340: dconst_0
341: invokevirtual #280
344: astore        37
346: aload         34
348: dconst_0
349: invokevirtual #422
352: astore        38
354: aload         18
356: aload         38
358: invokestatic  #423
361: aconst_null
362: astore        39
364: aload         18
366: aload         39
368: invokeinterface #424,  2
373: dstore        40
375: ldc           #203
377: invokestatic  #13
380: goto          385
383: astore        40
385: aload_2
386: invokestatic  #35
389: aload         4
391: invokestatic  #35
394: aload         6
396: invokestatic  #35
399: aload         7
401: invokestatic  #35
404: new           #52
407: dup
408: invokespecial #53
411: ldc           #54
413: invokevirtual #55
416: dload         8
418: invokevirtual #80
421: ldc           #57
423: invokevirtual #55
426: dconst_0
427: invokevirtual #80
430: ldc           #54
432: invokevirtual #55
435: invokevirtual #58
438: dload         8
440: dconst_0
441: dcmpl
442: ifne          449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #59
453: aload         11
455: invokestatic  #35
458: aload         12
460: invokestatic  #35
463: aload         14
465: invokestatic  #35
468: aload         14
470: invokestatic  #36
473: ldc           #81
475: invokestatic  #38
478: aload         17
480: invokestatic  #35
483: aload         18
485: invokestatic  #35
488: aload         20
490: invokestatic  #35
493: aload         22
495: invokestatic  #35
498: aload         24
500: invokestatic  #35
503: aload         25
505: invokestatic  #35
508: new           #52
511: dup
512: invokespecial #53
515: ldc           #54
517: invokevirtual #55
520: dload         26
522: invokevirtual #80
525: ldc           #57
527: invokevirtual #55
530: dconst_0
531: invokevirtual #80
534: ldc           #54
536: invokevirtual #55
539: invokevirtual #58
542: dload         26
544: dconst_0
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #59
557: aload         29
559: invokestatic  #35
562: aload         30
564: invokestatic  #35
567: aload         32
569: invokestatic  #35
572: aload         32
574: invokestatic  #36
577: ldc           #81
579: invokestatic  #38
582: aload         36
584: invokestatic  #35
587: aload         37
589: invokestatic  #35
592: aload         38
594: invokestatic  #35
597: return
Exception table:
from    to  target type
364   380   383   Class org/apache/commons/math3/exception/MathUnsupportedOperationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 3747
End line: 3814
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math3.linear.RealVectorFormat realVectorFormat3 = new org.apache.commons.math3.linear.RealVectorFormat(",", "{{1}}", "{{1.2967216549},{1.2967216549},{1.2967216549},{1.2967216549}}");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector4 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector6 = arrayRealVector4.mapDivideToSelf((double) (byte) -1);
        arrayRealVector4.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector14 = arrayRealVector12.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector9.append(realVector14);
        double double16 = arrayRealVector4.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector9);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector4.subtract(realVector19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray22 = arrayRealVector21.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector4, doubleArray22);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight24 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray22);
        org.apache.commons.math3.linear.RealMatrix realMatrix25 = weight24.getWeight();
        double double26 = realMatrix25.getTrace();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector29 = arrayRealVector27.mapDivideToSelf((double) (byte) -1);
        arrayRealVector27.set((double) 1);
        java.lang.Double[] doubleArray32 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray32);
        double double34 = arrayRealVector27.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector33);
        java.lang.Double[] doubleArray35 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = arrayRealVector33.append(arrayRealVector36);
        double double38 = arrayRealVector37.getL1Norm();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = arrayRealVector37.mapToSelf(univariateFunction39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector((int) (byte) 0, 100.0d);
        boolean boolean44 = arrayRealVector43.isNaN();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector37, arrayRealVector43);
        org.apache.commons.math3.linear.RealVector realVector46 = realMatrix25.preMultiply((org.apache.commons.math3.linear.RealVector) arrayRealVector37);
        java.lang.String str47 = realVectorFormat3.format((org.apache.commons.math3.linear.RealVector) arrayRealVector37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = realVectorFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector6);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(realMatrix25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(arrayRealVector40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ",{{1}}" + "'", str47, ",{{1}}");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #425
20: aastore
21: invokevirtual #7
24: pop
25: new           #426
28: dup
29: ldc_w         #427
32: ldc_w         #428
35: ldc_w         #429
38: invokespecial #430
41: astore_1
42: new           #48
45: dup
46: invokespecial #64
49: astore_2
50: aload_2
51: ldc2_w        #65
54: invokevirtual #67
57: astore_3
58: aload_2
59: dconst_1
60: invokevirtual #68
63: new           #48
66: dup
67: invokespecial #64
70: astore        4
72: aload         4
74: ldc2_w        #65
77: invokevirtual #67
80: astore        5
82: new           #48
85: dup
86: invokespecial #64
89: astore        6
91: aload         6
93: ldc2_w        #65
96: invokevirtual #67
99: astore        7
101: aload         4
103: aload         7
105: invokevirtual #69
108: astore        8
110: aload_2
111: aload         4
113: invokevirtual #70
116: dstore        9
118: new           #48
121: dup
122: invokespecial #64
125: astore        11
127: aload         11
129: ldc2_w        #65
132: invokevirtual #67
135: astore        12
137: aload_2
138: aload         12
140: invokevirtual #71
143: astore        13
145: new           #48
148: dup
149: invokespecial #64
152: astore        14
154: aload         14
156: invokevirtual #72
159: astore        15
161: new           #48
164: dup
165: aload_2
166: aload         15
168: invokespecial #73
171: astore        16
173: new           #30
176: dup
177: aload         15
179: invokespecial #74
182: astore        17
184: aload         17
186: invokevirtual #75
189: astore        18
191: aload         18
193: invokeinterface #431,  1
198: dstore        19
200: new           #48
203: dup
204: invokespecial #64
207: astore        21
209: aload         21
211: ldc2_w        #65
214: invokevirtual #67
217: astore        22
219: aload         21
221: dconst_1
222: invokevirtual #68
225: iconst_0
226: anewarray     #97
229: astore        23
231: new           #48
234: dup
235: aload         23
237: invokespecial #107
240: astore        24
242: aload         21
244: aload         24
246: invokevirtual #70
249: dstore        25
251: iconst_0
252: anewarray     #97
255: astore        27
257: new           #48
260: dup
261: aload         27
263: invokespecial #107
266: astore        28
268: aload         24
270: aload         28
272: invokevirtual #108
275: astore        29
277: aload         29
279: invokevirtual #432
282: dstore        30
284: aconst_null
285: astore        32
287: aload         29
289: aload         32
291: invokevirtual #224
294: astore        33
296: new           #48
299: dup
300: iconst_0
301: ldc2_w        #21
304: invokespecial #433
307: astore        34
309: aload         34
311: invokevirtual #434
314: istore        35
316: new           #48
319: dup
320: aload         29
322: aload         34
324: invokespecial #435
327: astore        36
329: aload         18
331: aload         29
333: invokeinterface #436,  2
338: astore        37
340: aload_1
341: aload         29
343: invokevirtual #437
346: astore        38
348: aload_1
349: ldc_w         #438
352: invokevirtual #439
355: astore        39
357: ldc_w         #440
360: invokestatic  #13
363: goto          368
366: astore        39
368: aload_3
369: invokestatic  #35
372: aload         5
374: invokestatic  #35
377: aload         7
379: invokestatic  #35
382: aload         8
384: invokestatic  #35
387: new           #52
390: dup
391: invokespecial #53
394: ldc           #54
396: invokevirtual #55
399: dload         9
401: invokevirtual #80
404: ldc           #57
406: invokevirtual #55
409: dconst_0
410: invokevirtual #80
413: ldc           #54
415: invokevirtual #55
418: invokevirtual #58
421: dload         9
423: dconst_0
424: dcmpl
425: ifne          432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #59
436: aload         12
438: invokestatic  #35
441: aload         13
443: invokestatic  #35
446: aload         15
448: invokestatic  #35
451: aload         15
453: invokestatic  #36
456: ldc           #81
458: invokestatic  #38
461: aload         18
463: invokestatic  #35
466: new           #52
469: dup
470: invokespecial #53
473: ldc           #54
475: invokevirtual #55
478: dload         19
480: invokevirtual #80
483: ldc           #57
485: invokevirtual #55
488: dconst_0
489: invokevirtual #80
492: ldc           #54
494: invokevirtual #55
497: invokevirtual #58
500: dload         19
502: dconst_0
503: dcmpl
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #59
515: aload         22
517: invokestatic  #35
520: aload         23
522: invokestatic  #35
525: new           #52
528: dup
529: invokespecial #53
532: ldc           #54
534: invokevirtual #55
537: dload         25
539: invokevirtual #80
542: ldc           #57
544: invokevirtual #55
547: dconst_0
548: invokevirtual #80
551: ldc           #54
553: invokevirtual #55
556: invokevirtual #58
559: dload         25
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #59
574: aload         27
576: invokestatic  #35
579: aload         29
581: invokestatic  #35
584: new           #52
587: dup
588: invokespecial #53
591: ldc           #54
593: invokevirtual #55
596: dload         30
598: invokevirtual #80
601: ldc           #57
603: invokevirtual #55
606: dconst_0
607: invokevirtual #80
610: ldc           #54
612: invokevirtual #55
615: invokevirtual #58
618: dload         30
620: dconst_0
621: dcmpl
622: ifne          629
625: iconst_1
626: goto          630
629: iconst_0
630: invokestatic  #59
633: aload         33
635: invokestatic  #35
638: new           #52
641: dup
642: invokespecial #53
645: ldc           #54
647: invokevirtual #55
650: iload         35
652: invokevirtual #170
655: ldc           #57
657: invokevirtual #55
660: iconst_0
661: invokevirtual #170
664: ldc           #54
666: invokevirtual #55
669: invokevirtual #58
672: iload         35
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #59
685: aload         37
687: invokestatic  #35
690: new           #52
693: dup
694: invokespecial #53
697: ldc           #54
699: invokevirtual #55
702: aload         38
704: invokevirtual #55
707: ldc_w         #442
710: invokevirtual #55
713: invokevirtual #58
716: aload         38
718: ldc_w         #443
721: invokestatic  #408
724: return
Exception table:
from    to  target type
348   363   366   Class java/lang/StringIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 3817
End line: 3827
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        double double2 = levenbergMarquardtOptimizer0.getChiSquare();
        int int3 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #444
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aload_1
39: invokevirtual #191
42: dstore_3
43: aload_1
44: invokevirtual #230
47: istore        5
49: aload_2
50: invokestatic  #15
53: new           #52
56: dup
57: invokespecial #53
60: ldc           #54
62: invokevirtual #55
65: dload_3
66: invokevirtual #80
69: ldc           #57
71: invokevirtual #55
74: dconst_0
75: invokevirtual #80
78: ldc           #54
80: invokevirtual #55
83: invokevirtual #58
86: dload_3
87: dconst_0
88: dcmpl
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #59
100: new           #52
103: dup
104: invokespecial #53
107: ldc           #54
109: invokevirtual #55
112: iload         5
114: invokevirtual #56
117: ldc           #57
119: invokevirtual #55
122: iconst_0
123: invokevirtual #56
126: ldc           #54
128: invokevirtual #55
131: invokevirtual #58
134: iload         5
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #59
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 3830
End line: 3846
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 99.99999f, pointVectorValuePairConvergenceChecker1, 0.0d, 57.29577951308232d, (double) (byte) 1, (double) ' ');
        double[] doubleArray7 = levenbergMarquardtOptimizer6.getUpperBound();
        int int8 = levenbergMarquardtOptimizer6.getMaxIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair9 = levenbergMarquardtOptimizer6.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #445
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #183
34: aload_1
35: dconst_0
36: ldc2_w        #186
39: dconst_1
40: ldc2_w        #188
43: invokespecial #190
46: astore_2
47: aload_2
48: invokevirtual #231
51: astore_3
52: aload_2
53: invokevirtual #127
56: istore        4
58: aload_2
59: invokevirtual #446
62: astore        5
64: ldc           #12
66: invokestatic  #13
69: goto          74
72: astore        5
74: aload_3
75: invokestatic  #15
78: new           #52
81: dup
82: invokespecial #53
85: ldc           #54
87: invokevirtual #55
90: iload         4
92: invokevirtual #56
95: ldc           #57
97: invokevirtual #55
100: iconst_0
101: invokevirtual #56
104: ldc           #54
106: invokevirtual #55
109: invokevirtual #58
112: iload         4
114: ifne          121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #59
125: return
Exception table:
from    to  target type
58    69    72   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 3849
End line: 3862
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        int int2 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setCost(32.0d);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.getStartPoint();
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aload_1
39: invokevirtual #208
42: istore_3
43: aload_1
44: ldc2_w        #188
47: invokevirtual #291
50: aload_1
51: invokevirtual #83
54: astore        4
56: aload_1
57: invokevirtual #208
60: istore        5
62: aload_2
63: invokestatic  #15
66: new           #52
69: dup
70: invokespecial #53
73: ldc           #54
75: invokevirtual #55
78: iload_3
79: invokevirtual #56
82: ldc           #57
84: invokevirtual #55
87: iconst_0
88: invokevirtual #56
91: ldc           #54
93: invokevirtual #55
96: invokevirtual #58
99: iload_3
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #59
111: aload         4
113: invokestatic  #15
116: new           #52
119: dup
120: invokespecial #53
123: ldc           #54
125: invokevirtual #55
128: iload         5
130: invokevirtual #56
133: ldc           #57
135: invokevirtual #55
138: iconst_0
139: invokevirtual #56
142: ldc           #54
144: invokevirtual #55
147: invokevirtual #58
150: iload         5
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #59
163: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 3865
End line: 3896
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix5 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray3, true);
        org.apache.commons.math3.linear.RealVector realVector7 = diagonalMatrix5.getRowVector(0);
        double[] doubleArray11 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray11, true);
        double[] doubleArray17 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix19 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray17, true);
        double[] doubleArray20 = diagonalMatrix13.operate(doubleArray17);
        double[] doubleArray21 = diagonalMatrix5.preMultiply(doubleArray20);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight22 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealVector realVector24 = diagonalMatrix5.getColumnVector((int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: column index (35)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1000000.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: dconst_1
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #21
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: astore_1
43: new           #23
46: dup
47: aload_1
48: iconst_1
49: invokespecial #24
52: astore_2
53: aload_2
54: iconst_0
55: invokevirtual #25
58: astore_3
59: iconst_3
60: newarray       double
62: dup
63: iconst_0
64: dconst_1
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #21
71: dastore
72: dup
73: iconst_2
74: dconst_1
75: dastore
76: astore        4
78: new           #23
81: dup
82: aload         4
84: iconst_1
85: invokespecial #24
88: astore        5
90: iconst_3
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: ldc2_w        #21
102: dastore
103: dup
104: iconst_2
105: dconst_1
106: dastore
107: astore        6
109: new           #23
112: dup
113: aload         6
115: iconst_1
116: invokespecial #24
119: astore        7
121: aload         5
123: aload         6
125: invokevirtual #26
128: astore        8
130: aload_2
131: aload         8
133: invokevirtual #27
136: astore        9
138: new           #30
141: dup
142: aload_2
143: invokespecial #31
146: astore        10
148: aload_2
149: bipush        35
151: invokevirtual #87
154: astore        11
156: ldc_w         #449
159: invokestatic  #13
162: goto          167
165: astore        11
167: aload_1
168: invokestatic  #35
171: aload_1
172: invokestatic  #36
175: ldc           #37
177: invokestatic  #38
180: aload_3
181: invokestatic  #35
184: aload         4
186: invokestatic  #35
189: aload         4
191: invokestatic  #36
194: ldc           #37
196: invokestatic  #38
199: aload         6
201: invokestatic  #35
204: aload         6
206: invokestatic  #36
209: ldc           #37
211: invokestatic  #38
214: aload         8
216: invokestatic  #35
219: aload         8
221: invokestatic  #36
224: ldc           #39
226: invokestatic  #38
229: aload         9
231: invokestatic  #35
234: aload         9
236: invokestatic  #36
239: ldc           #40
241: invokestatic  #38
244: return
Exception table:
from    to  target type
148   162   165   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 3899
End line: 4008
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker5 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker7 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction8 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian9 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction8);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction10 = modelFunctionJacobian9.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction11 = modelFunctionJacobian9.getModelFunctionJacobian();
        double[] doubleArray15 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix17 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray15, true);
        double[] doubleArray21 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix23 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray21, true);
        org.apache.commons.math3.linear.RealVector realVector25 = diagonalMatrix23.getRowVector(0);
        org.apache.commons.math3.linear.RealMatrix realMatrix26 = diagonalMatrix17.multiply((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix23);
        double[] doubleArray28 = realMatrix26.getRow(0);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray31 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix32 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray31);
        double[] doubleArray34 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix35 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray31, doubleArray34);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix38 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray31, true);
        double[] doubleArray42 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix44 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray42, true);
        org.apache.commons.math3.linear.RealVector realVector46 = diagonalMatrix44.getRowVector(0);
        double[] doubleArray50 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix52 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray50, true);
        double[] doubleArray56 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix58 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray56, true);
        double[] doubleArray59 = diagonalMatrix52.operate(doubleArray56);
        double[] doubleArray60 = diagonalMatrix44.preMultiply(doubleArray59);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix61 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray59);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair63 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray31, doubleArray59, true);
        org.apache.commons.math3.optim.SimpleBounds simpleBounds64 = new org.apache.commons.math3.optim.SimpleBounds(doubleArray28, doubleArray31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector65.mapDivideToSelf((double) (byte) -1);
        arrayRealVector65.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector70 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector72 = arrayRealVector70.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector75 = arrayRealVector73.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector76 = arrayRealVector70.append(realVector75);
        double double77 = arrayRealVector65.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector78 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector80 = arrayRealVector78.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector81 = arrayRealVector65.subtract(realVector80);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray83 = arrayRealVector82.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector84 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector65, doubleArray83);
        org.apache.commons.math3.optim.InitialGuess initialGuess85 = new org.apache.commons.math3.optim.InitialGuess(doubleArray83);
        double[] doubleArray86 = initialGuess85.getInitialGuess();
        double[] doubleArray87 = initialGuess85.getInitialGuess();
        org.apache.commons.math3.optim.MaxIter maxIter89 = new org.apache.commons.math3.optim.MaxIter((int) ' ');
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray90 = new org.apache.commons.math3.optim.OptimizationData[] { modelFunctionJacobian9, simpleBounds64, initialGuess85, maxIter89 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair91 = levenbergMarquardtOptimizer3.optimize(optimizationDataArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker5);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker7);
        org.junit.Assert.assertNull(multivariateMatrixFunction10);
        org.junit.Assert.assertNull(multivariateMatrixFunction11);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realMatrix26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix32);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix35);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertNotNull(realVector76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(realVector80);
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertNotNull(optimizationDataArray90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #450
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #243
51: astore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload_1
63: invokevirtual #243
66: astore        5
68: aconst_null
69: astore        6
71: new           #212
74: dup
75: aload         6
77: invokespecial #213
80: astore        7
82: aload         7
84: invokevirtual #233
87: astore        8
89: aload         7
91: invokevirtual #233
94: astore        9
96: iconst_3
97: newarray       double
99: dup
100: iconst_0
101: dconst_1
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #21
108: dastore
109: dup
110: iconst_2
111: dconst_1
112: dastore
113: astore        10
115: new           #23
118: dup
119: aload         10
121: iconst_1
122: invokespecial #24
125: astore        11
127: iconst_3
128: newarray       double
130: dup
131: iconst_0
132: dconst_1
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #21
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: astore        12
146: new           #23
149: dup
150: aload         12
152: iconst_1
153: invokespecial #24
156: astore        13
158: aload         13
160: iconst_0
161: invokevirtual #25
164: astore        14
166: aload         11
168: aload         13
170: invokevirtual #418
173: astore        15
175: aload         15
177: iconst_0
178: invokeinterface #419,  2
183: astore        16
185: new           #48
188: dup
189: aload         16
191: invokespecial #451
194: astore        17
196: iconst_1
197: newarray       double
199: dup
200: iconst_0
201: ldc2_w        #45
204: dastore
205: astore        18
207: aload         18
209: invokestatic  #47
212: astore        19
214: iconst_1
215: newarray       double
217: dup
218: iconst_0
219: ldc2_w        #45
222: dastore
223: astore        20
225: aload         20
227: invokestatic  #47
230: astore        21
232: new           #48
235: dup
236: aload         18
238: aload         20
240: invokespecial #49
243: astore        22
245: new           #23
248: dup
249: aload         18
251: iconst_1
252: invokespecial #24
255: astore        23
257: iconst_3
258: newarray       double
260: dup
261: iconst_0
262: dconst_1
263: dastore
264: dup
265: iconst_1
266: ldc2_w        #21
269: dastore
270: dup
271: iconst_2
272: dconst_1
273: dastore
274: astore        24
276: new           #23
279: dup
280: aload         24
282: iconst_1
283: invokespecial #24
286: astore        25
288: aload         25
290: iconst_0
291: invokevirtual #25
294: astore        26
296: iconst_3
297: newarray       double
299: dup
300: iconst_0
301: dconst_1
302: dastore
303: dup
304: iconst_1
305: ldc2_w        #21
308: dastore
309: dup
310: iconst_2
311: dconst_1
312: dastore
313: astore        27
315: new           #23
318: dup
319: aload         27
321: iconst_1
322: invokespecial #24
325: astore        28
327: iconst_3
328: newarray       double
330: dup
331: iconst_0
332: dconst_1
333: dastore
334: dup
335: iconst_1
336: ldc2_w        #21
339: dastore
340: dup
341: iconst_2
342: dconst_1
343: dastore
344: astore        29
346: new           #23
349: dup
350: aload         29
352: iconst_1
353: invokespecial #24
356: astore        30
358: aload         28
360: aload         29
362: invokevirtual #26
365: astore        31
367: aload         25
369: aload         31
371: invokevirtual #27
374: astore        32
376: new           #23
379: dup
380: aload         31
382: invokespecial #28
385: astore        33
387: new           #101
390: dup
391: aload         18
393: aload         31
395: iconst_1
396: invokespecial #102
399: astore        34
401: new           #326
404: dup
405: aload         16
407: aload         18
409: invokespecial #327
412: astore        35
414: new           #48
417: dup
418: invokespecial #64
421: astore        36
423: aload         36
425: ldc2_w        #65
428: invokevirtual #67
431: astore        37
433: aload         36
435: dconst_1
436: invokevirtual #68
439: new           #48
442: dup
443: invokespecial #64
446: astore        38
448: aload         38
450: ldc2_w        #65
453: invokevirtual #67
456: astore        39
458: new           #48
461: dup
462: invokespecial #64
465: astore        40
467: aload         40
469: ldc2_w        #65
472: invokevirtual #67
475: astore        41
477: aload         38
479: aload         41
481: invokevirtual #69
484: astore        42
486: aload         36
488: aload         38
490: invokevirtual #70
493: dstore        43
495: new           #48
498: dup
499: invokespecial #64
502: astore        45
504: aload         45
506: ldc2_w        #65
509: invokevirtual #67
512: astore        46
514: aload         36
516: aload         46
518: invokevirtual #71
521: astore        47
523: new           #48
526: dup
527: invokespecial #64
530: astore        48
532: aload         48
534: invokevirtual #72
537: astore        49
539: new           #48
542: dup
543: aload         36
545: aload         49
547: invokespecial #73
550: astore        50
552: new           #118
555: dup
556: aload         49
558: invokespecial #119
561: astore        51
563: aload         51
565: invokevirtual #120
568: astore        52
570: aload         51
572: invokevirtual #120
575: astore        53
577: new           #144
580: dup
581: bipush        32
583: invokespecial #145
586: astore        54
588: iconst_4
589: anewarray     #76
592: dup
593: iconst_0
594: aload         7
596: aastore
597: dup
598: iconst_1
599: aload         35
601: aastore
602: dup
603: iconst_2
604: aload         51
606: aastore
607: dup
608: iconst_3
609: aload         54
611: aastore
612: astore        55
614: aload_1
615: aload         55
617: invokevirtual #217
620: astore        56
622: ldc           #12
624: invokestatic  #13
627: goto          632
630: astore        56
632: aload_2
633: invokestatic  #15
636: aload_3
637: invokestatic  #15
640: aload         5
642: invokestatic  #15
645: aload         8
647: invokestatic  #15
650: aload         9
652: invokestatic  #15
655: aload         10
657: invokestatic  #35
660: aload         10
662: invokestatic  #36
665: ldc           #37
667: invokestatic  #38
670: aload         12
672: invokestatic  #35
675: aload         12
677: invokestatic  #36
680: ldc           #37
682: invokestatic  #38
685: aload         14
687: invokestatic  #35
690: aload         15
692: invokestatic  #35
695: aload         16
697: invokestatic  #35
700: aload         16
702: invokestatic  #36
705: ldc_w         #420
708: invokestatic  #38
711: aload         18
713: invokestatic  #35
716: aload         18
718: invokestatic  #36
721: ldc           #60
723: invokestatic  #38
726: aload         19
728: invokestatic  #35
731: aload         20
733: invokestatic  #35
736: aload         20
738: invokestatic  #36
741: ldc           #60
743: invokestatic  #38
746: aload         21
748: invokestatic  #35
751: aload         24
753: invokestatic  #35
756: aload         24
758: invokestatic  #36
761: ldc           #37
763: invokestatic  #38
766: aload         26
768: invokestatic  #35
771: aload         27
773: invokestatic  #35
776: aload         27
778: invokestatic  #36
781: ldc           #37
783: invokestatic  #38
786: aload         29
788: invokestatic  #35
791: aload         29
793: invokestatic  #36
796: ldc           #37
798: invokestatic  #38
801: aload         31
803: invokestatic  #35
806: aload         31
808: invokestatic  #36
811: ldc           #39
813: invokestatic  #38
816: aload         32
818: invokestatic  #35
821: aload         32
823: invokestatic  #36
826: ldc           #40
828: invokestatic  #38
831: aload         37
833: invokestatic  #35
836: aload         39
838: invokestatic  #35
841: aload         41
843: invokestatic  #35
846: aload         42
848: invokestatic  #35
851: new           #52
854: dup
855: invokespecial #53
858: ldc           #54
860: invokevirtual #55
863: dload         43
865: invokevirtual #80
868: ldc           #57
870: invokevirtual #55
873: dconst_0
874: invokevirtual #80
877: ldc           #54
879: invokevirtual #55
882: invokevirtual #58
885: dload         43
887: dconst_0
888: dcmpl
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #59
900: aload         46
902: invokestatic  #35
905: aload         47
907: invokestatic  #35
910: aload         49
912: invokestatic  #35
915: aload         49
917: invokestatic  #36
920: ldc           #81
922: invokestatic  #38
925: aload         52
927: invokestatic  #35
930: aload         52
932: invokestatic  #36
935: ldc           #81
937: invokestatic  #38
940: aload         53
942: invokestatic  #35
945: aload         53
947: invokestatic  #36
950: ldc           #81
952: invokestatic  #38
955: aload         55
957: invokestatic  #35
960: return
Exception table:
from    to  target type
614   627   630   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 4011
End line: 4021
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getLowerBound();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #230
51: istore_3
52: aload_1
53: invokevirtual #10
56: astore        4
58: aload_2
59: invokestatic  #15
62: new           #52
65: dup
66: invokespecial #53
69: ldc           #54
71: invokevirtual #55
74: iload_3
75: invokevirtual #56
78: ldc           #57
80: invokevirtual #55
83: iconst_0
84: invokevirtual #56
87: ldc           #54
89: invokevirtual #55
92: invokevirtual #58
95: iload_3
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #59
107: aload         4
109: invokestatic  #15
112: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 4024
End line: 4046
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker4 = levenbergMarquardtOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.optim.SimpleBounds simpleBounds6 = org.apache.commons.math3.optim.SimpleBounds.unbounded(97);
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray7 = new org.apache.commons.math3.optim.OptimizationData[] { simpleBounds6 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair8 = levenbergMarquardtOptimizer1.optimize(optimizationDataArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(simpleBounds6);
        org.junit.Assert.assertNotNull(optimizationDataArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #44
40: istore_3
41: aload_2
42: invokevirtual #83
45: astore        4
47: aload_2
48: invokevirtual #243
51: astore        5
53: bipush        97
55: invokestatic  #232
58: astore        6
60: iconst_1
61: anewarray     #76
64: dup
65: iconst_0
66: aload         6
68: aastore
69: astore        7
71: aload_2
72: aload         7
74: invokevirtual #217
77: astore        8
79: ldc           #12
81: invokestatic  #13
84: goto          89
87: astore        8
89: new           #52
92: dup
93: invokespecial #53
96: ldc           #54
98: invokevirtual #55
101: iload_3
102: invokevirtual #56
105: ldc           #57
107: invokevirtual #55
110: iconst_0
111: invokevirtual #56
114: ldc           #54
116: invokevirtual #55
119: invokevirtual #58
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #59
134: aload         4
136: invokestatic  #15
139: aload         5
141: invokestatic  #15
144: aload         6
146: invokestatic  #35
149: aload         7
151: invokestatic  #35
154: return
Exception table:
from    to  target type
71    84    87   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 4049
End line: 4061
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        double double2 = levenbergMarquardtOptimizer0.getChiSquare();
        double[] doubleArray3 = levenbergMarquardtOptimizer0.getStartPoint();
        double[] doubleArray4 = levenbergMarquardtOptimizer0.getStartPoint();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #454
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aload_1
39: invokevirtual #191
42: dstore_3
43: aload_1
44: invokevirtual #83
47: astore        5
49: aload_1
50: invokevirtual #83
53: astore        6
55: aload_2
56: invokestatic  #15
59: new           #52
62: dup
63: invokespecial #53
66: ldc           #54
68: invokevirtual #55
71: dload_3
72: invokevirtual #80
75: ldc           #57
77: invokevirtual #55
80: dconst_0
81: invokevirtual #80
84: ldc           #54
86: invokevirtual #55
89: invokevirtual #58
92: dload_3
93: dconst_0
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #59
106: aload         5
108: invokestatic  #15
111: aload         6
113: invokestatic  #15
116: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 4064
End line: 4076
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((double) 0L, (double) 32);
        polynomialFitter6.clearObservations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #455
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: dconst_0
74: ldc2_w        #188
77: invokevirtual #263
80: aload         4
82: invokevirtual #334
85: aload_2
86: invokestatic  #15
89: new           #52
92: dup
93: invokespecial #53
96: ldc           #54
98: invokevirtual #55
101: iload_3
102: invokevirtual #56
105: ldc           #57
107: invokevirtual #55
110: iconst_0
111: invokevirtual #56
114: ldc           #54
116: invokevirtual #55
119: invokevirtual #58
122: iload_3
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #59
134: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 4079
End line: 4090
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        int int6 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter7 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #456
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #83
51: astore_3
52: aload_1
53: invokevirtual #208
56: istore        4
58: new           #91
61: dup
62: aload_1
63: invokespecial #92
66: astore        5
68: aload_2
69: invokestatic  #15
72: aload_3
73: invokestatic  #15
76: new           #52
79: dup
80: invokespecial #53
83: ldc           #54
85: invokevirtual #55
88: iload         4
90: invokevirtual #56
93: ldc           #57
95: invokevirtual #55
98: iconst_0
99: invokevirtual #56
102: ldc           #54
104: invokevirtual #55
107: invokevirtual #58
110: iload         4
112: ifne          119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #59
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 4093
End line: 4107
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer2 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(true, pointVectorValuePairConvergenceChecker1);
        double double3 = gaussNewtonOptimizer2.getChiSquare();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix4 = gaussNewtonOptimizer2.getWeightSquareRoot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #457
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: iconst_1
32: aload_1
33: invokespecial #140
36: astore_2
37: aload_2
38: invokevirtual #249
41: dstore_3
42: aload_2
43: invokevirtual #245
46: astore        5
48: ldc           #12
50: invokestatic  #13
53: goto          58
56: astore        5
58: new           #52
61: dup
62: invokespecial #53
65: ldc           #54
67: invokevirtual #55
70: dload_3
71: invokevirtual #80
74: ldc           #57
76: invokevirtual #55
79: dconst_0
80: invokevirtual #80
83: ldc           #54
85: invokevirtual #55
88: invokevirtual #58
91: dload_3
92: dconst_0
93: dcmpl
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #59
105: return
Exception table:
from    to  target type
42    53    56   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 4110
End line: 4118
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #458
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #181
32: ldc2_w        #183
35: ldc2_w        #151
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #83
51: astore_3
52: aload_2
53: invokestatic  #15
56: aload_3
57: invokestatic  #15
60: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 4121
End line: 4136
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math3.exception.util.Localizable localizable0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray5 = levenbergMarquardtOptimizer4.getLowerBound();
        int int6 = levenbergMarquardtOptimizer4.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter7 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer4);
        polynomialFitter7.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter7.addObservedPoint((double) 0L, (double) 32);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray14 = polynomialFitter7.getObservations();
        org.apache.commons.math3.exception.ZeroException zeroException15 = new org.apache.commons.math3.exception.ZeroException(localizable0, (java.lang.Object[]) weightedObservedPointArray14);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #65
34: ldc2_w        #45
37: ldc2_w        #206
40: invokespecial #153
43: astore_2
44: aload_2
45: invokevirtual #10
48: astore_3
49: aload_2
50: invokevirtual #208
53: istore        4
55: new           #259
58: dup
59: aload_2
60: invokespecial #260
63: astore        5
65: aload         5
67: ldc2_w        #261
70: dconst_1
71: invokevirtual #263
74: aload         5
76: dconst_0
77: ldc2_w        #188
80: invokevirtual #263
83: aload         5
85: invokevirtual #324
88: astore        6
90: new           #460
93: dup
94: aload_1
95: aload         6
97: checkcast     #461
100: invokespecial #462
103: astore        7
105: aload_3
106: invokestatic  #15
109: new           #52
112: dup
113: invokespecial #53
116: ldc           #54
118: invokevirtual #55
121: iload         4
123: invokevirtual #56
126: ldc           #57
128: invokevirtual #55
131: iconst_0
132: invokevirtual #56
135: ldc           #54
137: invokevirtual #55
140: invokevirtual #58
143: iload         4
145: ifne          152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #59
156: aload         6
158: invokestatic  #35
161: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 4139
End line: 4184
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric8 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray10 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray10);
        org.apache.commons.math3.optim.nonlinear.vector.Target target12 = new org.apache.commons.math3.optim.nonlinear.vector.Target(doubleArray10);
        double[] doubleArray16 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix18 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray16, true);
        org.apache.commons.math3.linear.RealVector realVector20 = diagonalMatrix18.getRowVector(0);
        double[] doubleArray24 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix26 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray24, true);
        double[] doubleArray30 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix32 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray30, true);
        double[] doubleArray33 = diagonalMatrix26.operate(doubleArray30);
        double[] doubleArray34 = diagonalMatrix18.preMultiply(doubleArray33);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix35 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray33);
        org.apache.commons.math3.util.Pair<double[], double[]> doubleArrayPair36 = new org.apache.commons.math3.util.Pair<double[], double[]>(doubleArray10, doubleArray33);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray37 = polynomialFitter6.fit(1076101151, parametric8, doubleArray10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1000000.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #463
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: new           #93
65: dup
66: invokespecial #94
69: astore        5
71: iconst_1
72: newarray       double
74: dup
75: iconst_0
76: ldc2_w        #45
79: dastore
80: astore        6
82: aload         6
84: invokestatic  #47
87: astore        7
89: new           #146
92: dup
93: aload         6
95: invokespecial #147
98: astore        8
100: iconst_3
101: newarray       double
103: dup
104: iconst_0
105: dconst_1
106: dastore
107: dup
108: iconst_1
109: ldc2_w        #21
112: dastore
113: dup
114: iconst_2
115: dconst_1
116: dastore
117: astore        9
119: new           #23
122: dup
123: aload         9
125: iconst_1
126: invokespecial #24
129: astore        10
131: aload         10
133: iconst_0
134: invokevirtual #25
137: astore        11
139: iconst_3
140: newarray       double
142: dup
143: iconst_0
144: dconst_1
145: dastore
146: dup
147: iconst_1
148: ldc2_w        #21
151: dastore
152: dup
153: iconst_2
154: dconst_1
155: dastore
156: astore        12
158: new           #23
161: dup
162: aload         12
164: iconst_1
165: invokespecial #24
168: astore        13
170: iconst_3
171: newarray       double
173: dup
174: iconst_0
175: dconst_1
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #21
182: dastore
183: dup
184: iconst_2
185: dconst_1
186: dastore
187: astore        14
189: new           #23
192: dup
193: aload         14
195: iconst_1
196: invokespecial #24
199: astore        15
201: aload         13
203: aload         14
205: invokevirtual #26
208: astore        16
210: aload         10
212: aload         16
214: invokevirtual #27
217: astore        17
219: new           #23
222: dup
223: aload         16
225: invokespecial #28
228: astore        18
230: new           #141
233: dup
234: aload         6
236: aload         16
238: invokespecial #142
241: astore        19
243: aload         4
245: ldc           #198
247: aload         5
249: aload         6
251: invokevirtual #329
254: astore        20
256: ldc           #78
258: invokestatic  #13
261: goto          266
264: astore        20
266: aload_2
267: invokestatic  #15
270: new           #52
273: dup
274: invokespecial #53
277: ldc           #54
279: invokevirtual #55
282: iload_3
283: invokevirtual #56
286: ldc           #57
288: invokevirtual #55
291: iconst_0
292: invokevirtual #56
295: ldc           #54
297: invokevirtual #55
300: invokevirtual #58
303: iload_3
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #59
315: aload         6
317: invokestatic  #35
320: aload         6
322: invokestatic  #36
325: ldc           #60
327: invokestatic  #38
330: aload         7
332: invokestatic  #35
335: aload         9
337: invokestatic  #35
340: aload         9
342: invokestatic  #36
345: ldc           #37
347: invokestatic  #38
350: aload         11
352: invokestatic  #35
355: aload         12
357: invokestatic  #35
360: aload         12
362: invokestatic  #36
365: ldc           #37
367: invokestatic  #38
370: aload         14
372: invokestatic  #35
375: aload         14
377: invokestatic  #36
380: ldc           #37
382: invokestatic  #38
385: aload         16
387: invokestatic  #35
390: aload         16
392: invokestatic  #36
395: ldc           #39
397: invokestatic  #38
400: aload         17
402: invokestatic  #35
405: aload         17
407: invokestatic  #36
410: ldc           #40
412: invokestatic  #38
415: return
Exception table:
from    to  target type
243   261   264   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 4187
End line: 4196
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        int int4 = levenbergMarquardtOptimizer3.getIterations();
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter5 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        int int6 = levenbergMarquardtOptimizer3.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #464
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #230
46: istore_2
47: new           #91
50: dup
51: aload_1
52: invokespecial #92
55: astore_3
56: aload_1
57: invokevirtual #127
60: istore        4
62: new           #52
65: dup
66: invokespecial #53
69: ldc           #54
71: invokevirtual #55
74: iload_2
75: invokevirtual #56
78: ldc           #57
80: invokevirtual #55
83: iconst_0
84: invokevirtual #56
87: ldc           #54
89: invokevirtual #55
92: invokevirtual #58
95: iload_2
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #59
107: new           #52
110: dup
111: invokespecial #53
114: ldc           #54
116: invokevirtual #55
119: iload         4
121: invokevirtual #56
124: ldc           #57
126: invokevirtual #55
129: iconst_0
130: invokevirtual #56
133: ldc           #54
135: invokevirtual #55
138: invokevirtual #58
141: iload         4
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #59
154: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 4199
End line: 4266
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint13 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        double double14 = weightedObservedPoint13.getWeight();
        double double15 = weightedObservedPoint13.getY();
        polynomialFitter6.addObservedPoint(weightedObservedPoint13);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray17 = polynomialFitter6.getObservations();
        double[] doubleArray19 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix20 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray19);
        double[] doubleArray22 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19, doubleArray22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector25.mapDivideToSelf((double) (byte) -1);
        arrayRealVector25.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector32 = arrayRealVector30.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector30.append(realVector35);
        double double37 = arrayRealVector25.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector40 = arrayRealVector38.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector25.subtract(realVector40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray43 = arrayRealVector42.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector25, doubleArray43);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair46 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray19, doubleArray43, true);
        double[] doubleArray47 = pointVectorValuePair46.getValue();
        double[] doubleArray48 = pointVectorValuePair46.getSecond();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray49 = polynomialFitter6.fit(doubleArray48);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NoDataException; message: empty polynomials coefficients array");
        } catch (org.apache.commons.math3.exception.NoDataException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertNotNull(weightedObservedPointArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix23);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #465
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: new           #113
74: dup
75: ldc2_w        #21
78: dconst_0
79: ldc2_w        #21
82: invokespecial #114
85: astore        5
87: aload         5
89: invokevirtual #275
92: dstore        6
94: aload         5
96: invokevirtual #251
99: dstore        8
101: aload         4
103: aload         5
105: invokevirtual #466
108: aload         4
110: invokevirtual #324
113: astore        10
115: iconst_1
116: newarray       double
118: dup
119: iconst_0
120: ldc2_w        #45
123: dastore
124: astore        11
126: aload         11
128: invokestatic  #47
131: astore        12
133: iconst_1
134: newarray       double
136: dup
137: iconst_0
138: ldc2_w        #45
141: dastore
142: astore        13
144: aload         13
146: invokestatic  #47
149: astore        14
151: new           #48
154: dup
155: aload         11
157: aload         13
159: invokespecial #49
162: astore        15
164: new           #48
167: dup
168: invokespecial #64
171: astore        16
173: aload         16
175: ldc2_w        #65
178: invokevirtual #67
181: astore        17
183: aload         16
185: dconst_1
186: invokevirtual #68
189: new           #48
192: dup
193: invokespecial #64
196: astore        18
198: aload         18
200: ldc2_w        #65
203: invokevirtual #67
206: astore        19
208: new           #48
211: dup
212: invokespecial #64
215: astore        20
217: aload         20
219: ldc2_w        #65
222: invokevirtual #67
225: astore        21
227: aload         18
229: aload         21
231: invokevirtual #69
234: astore        22
236: aload         16
238: aload         18
240: invokevirtual #70
243: dstore        23
245: new           #48
248: dup
249: invokespecial #64
252: astore        25
254: aload         25
256: ldc2_w        #65
259: invokevirtual #67
262: astore        26
264: aload         16
266: aload         26
268: invokevirtual #71
271: astore        27
273: new           #48
276: dup
277: invokespecial #64
280: astore        28
282: aload         28
284: invokevirtual #72
287: astore        29
289: new           #48
292: dup
293: aload         16
295: aload         29
297: invokespecial #73
300: astore        30
302: new           #101
305: dup
306: aload         11
308: aload         29
310: iconst_1
311: invokespecial #102
314: astore        31
316: aload         31
318: invokevirtual #196
321: astore        32
323: aload         31
325: invokevirtual #325
328: checkcast     #308
331: astore        33
333: aload         4
335: aload         33
337: invokevirtual #302
340: astore        34
342: ldc_w         #330
345: invokestatic  #13
348: goto          353
351: astore        34
353: aload_2
354: invokestatic  #15
357: new           #52
360: dup
361: invokespecial #53
364: ldc           #54
366: invokevirtual #55
369: iload_3
370: invokevirtual #56
373: ldc           #57
375: invokevirtual #55
378: iconst_0
379: invokevirtual #56
382: ldc           #54
384: invokevirtual #55
387: invokevirtual #58
390: iload_3
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #59
402: new           #52
405: dup
406: invokespecial #53
409: ldc           #54
411: invokevirtual #55
414: dload         6
416: invokevirtual #80
419: ldc           #57
421: invokevirtual #55
424: ldc2_w        #21
427: invokevirtual #80
430: ldc           #54
432: invokevirtual #55
435: invokevirtual #58
438: dload         6
440: ldc2_w        #21
443: dcmpl
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #59
455: new           #52
458: dup
459: invokespecial #53
462: ldc           #54
464: invokevirtual #55
467: dload         8
469: invokevirtual #80
472: ldc           #57
474: invokevirtual #55
477: ldc2_w        #21
480: invokevirtual #80
483: ldc           #54
485: invokevirtual #55
488: invokevirtual #58
491: dload         8
493: ldc2_w        #21
496: dcmpl
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #59
508: aload         10
510: invokestatic  #35
513: aload         11
515: invokestatic  #35
518: aload         11
520: invokestatic  #36
523: ldc           #60
525: invokestatic  #38
528: aload         12
530: invokestatic  #35
533: aload         13
535: invokestatic  #35
538: aload         13
540: invokestatic  #36
543: ldc           #60
545: invokestatic  #38
548: aload         14
550: invokestatic  #35
553: aload         17
555: invokestatic  #35
558: aload         19
560: invokestatic  #35
563: aload         21
565: invokestatic  #35
568: aload         22
570: invokestatic  #35
573: new           #52
576: dup
577: invokespecial #53
580: ldc           #54
582: invokevirtual #55
585: dload         23
587: invokevirtual #80
590: ldc           #57
592: invokevirtual #55
595: dconst_0
596: invokevirtual #80
599: ldc           #54
601: invokevirtual #55
604: invokevirtual #58
607: dload         23
609: dconst_0
610: dcmpl
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #59
622: aload         26
624: invokestatic  #35
627: aload         27
629: invokestatic  #35
632: aload         29
634: invokestatic  #35
637: aload         29
639: invokestatic  #36
642: ldc           #81
644: invokestatic  #38
647: aload         32
649: invokestatic  #35
652: aload         32
654: invokestatic  #36
657: ldc           #81
659: invokestatic  #38
662: aload         33
664: invokestatic  #35
667: aload         33
669: invokestatic  #36
672: ldc           #81
674: invokestatic  #38
677: return
Exception table:
from    to  target type
333   348   351   Class org/apache/commons/math3/exception/NoDataException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 4269
End line: 4274
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((-1.5707963267948966d), pointVectorValuePairConvergenceChecker1, 5.298342289320455d, (double) (byte) 10, (double) (-126.99999f), 1.2533141373155001d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #468
34: aload_1
35: ldc2_w        #470
38: ldc2_w        #45
41: ldc2_w        #472
44: ldc2_w        #289
47: invokespecial #190
50: astore_2
51: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 4277
End line: 4342
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter4 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint8 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        double double9 = weightedObservedPoint8.getX();
        double double10 = weightedObservedPoint8.getWeight();
        double double11 = weightedObservedPoint8.getWeight();
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(weightedObservedPoint8);
        org.apache.commons.math3.analysis.ParametricUnivariateFunction parametricUnivariateFunction14 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector17 = arrayRealVector15.mapDivideToSelf((double) (byte) -1);
        arrayRealVector15.set((double) 1);
        java.lang.Double[] doubleArray20 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray20);
        double double22 = arrayRealVector15.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector21);
        java.lang.Double[] doubleArray23 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector21.append(arrayRealVector24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector28 = arrayRealVector26.mapDivideToSelf((double) (byte) -1);
        arrayRealVector26.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector36 = arrayRealVector34.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector37 = arrayRealVector31.append(realVector36);
        double double38 = arrayRealVector26.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector39.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector42 = arrayRealVector26.subtract(realVector41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray44 = arrayRealVector43.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector26, doubleArray44);
        double double46 = arrayRealVector21.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector45);
        double[] doubleArray47 = arrayRealVector45.getDataRef();
        org.apache.commons.math3.optim.InitialGuess initialGuess48 = new org.apache.commons.math3.optim.InitialGuess(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray49 = parametricUnivariateFunctionCurveFitter4.fit((int) (short) 10, parametricUnivariateFunction14, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #474
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #181
32: ldc2_w        #183
35: ldc2_w        #151
38: invokespecial #153
41: astore_1
42: new           #91
45: dup
46: aload_1
47: invokespecial #92
50: astore_2
51: new           #113
54: dup
55: ldc2_w        #21
58: dconst_0
59: ldc2_w        #21
62: invokespecial #114
65: astore_3
66: aload_3
67: invokevirtual #116
70: dstore        4
72: aload_3
73: invokevirtual #275
76: dstore        6
78: aload_3
79: invokevirtual #275
82: dstore        8
84: aload_2
85: aload_3
86: invokevirtual #115
89: aconst_null
90: astore        10
92: new           #48
95: dup
96: invokespecial #64
99: astore        11
101: aload         11
103: ldc2_w        #65
106: invokevirtual #67
109: astore        12
111: aload         11
113: dconst_1
114: invokevirtual #68
117: iconst_0
118: anewarray     #97
121: astore        13
123: new           #48
126: dup
127: aload         13
129: invokespecial #107
132: astore        14
134: aload         11
136: aload         14
138: invokevirtual #70
141: dstore        15
143: iconst_0
144: anewarray     #97
147: astore        17
149: new           #48
152: dup
153: aload         17
155: invokespecial #107
158: astore        18
160: aload         14
162: aload         18
164: invokevirtual #108
167: astore        19
169: new           #48
172: dup
173: invokespecial #64
176: astore        20
178: aload         20
180: ldc2_w        #65
183: invokevirtual #67
186: astore        21
188: aload         20
190: dconst_1
191: invokevirtual #68
194: new           #48
197: dup
198: invokespecial #64
201: astore        22
203: aload         22
205: ldc2_w        #65
208: invokevirtual #67
211: astore        23
213: new           #48
216: dup
217: invokespecial #64
220: astore        24
222: aload         24
224: ldc2_w        #65
227: invokevirtual #67
230: astore        25
232: aload         22
234: aload         25
236: invokevirtual #69
239: astore        26
241: aload         20
243: aload         22
245: invokevirtual #70
248: dstore        27
250: new           #48
253: dup
254: invokespecial #64
257: astore        29
259: aload         29
261: ldc2_w        #65
264: invokevirtual #67
267: astore        30
269: aload         20
271: aload         30
273: invokevirtual #71
276: astore        31
278: new           #48
281: dup
282: invokespecial #64
285: astore        32
287: aload         32
289: invokevirtual #72
292: astore        33
294: new           #48
297: dup
298: aload         20
300: aload         33
302: invokespecial #73
305: astore        34
307: aload         14
309: aload         34
311: invokevirtual #70
314: dstore        35
316: aload         34
318: invokevirtual #72
321: astore        37
323: new           #118
326: dup
327: aload         37
329: invokespecial #119
332: astore        38
334: aload_2
335: bipush        10
337: aload         10
339: aload         37
341: invokevirtual #109
344: astore        39
346: ldc           #12
348: invokestatic  #13
351: goto          356
354: astore        39
356: new           #52
359: dup
360: invokespecial #53
363: ldc           #54
365: invokevirtual #55
368: dload         4
370: invokevirtual #80
373: ldc           #57
375: invokevirtual #55
378: dconst_0
379: invokevirtual #80
382: ldc           #54
384: invokevirtual #55
387: invokevirtual #58
390: dload         4
392: dconst_0
393: dcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #59
405: new           #52
408: dup
409: invokespecial #53
412: ldc           #54
414: invokevirtual #55
417: dload         6
419: invokevirtual #80
422: ldc           #57
424: invokevirtual #55
427: ldc2_w        #21
430: invokevirtual #80
433: ldc           #54
435: invokevirtual #55
438: invokevirtual #58
441: dload         6
443: ldc2_w        #21
446: dcmpl
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #59
458: new           #52
461: dup
462: invokespecial #53
465: ldc           #54
467: invokevirtual #55
470: dload         8
472: invokevirtual #80
475: ldc           #57
477: invokevirtual #55
480: ldc2_w        #21
483: invokevirtual #80
486: ldc           #54
488: invokevirtual #55
491: invokevirtual #58
494: dload         8
496: ldc2_w        #21
499: dcmpl
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #59
511: aload         12
513: invokestatic  #35
516: aload         13
518: invokestatic  #35
521: new           #52
524: dup
525: invokespecial #53
528: ldc           #54
530: invokevirtual #55
533: dload         15
535: invokevirtual #80
538: ldc           #57
540: invokevirtual #55
543: dconst_0
544: invokevirtual #80
547: ldc           #54
549: invokevirtual #55
552: invokevirtual #58
555: dload         15
557: dconst_0
558: dcmpl
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #59
570: aload         17
572: invokestatic  #35
575: aload         19
577: invokestatic  #35
580: aload         21
582: invokestatic  #35
585: aload         23
587: invokestatic  #35
590: aload         25
592: invokestatic  #35
595: aload         26
597: invokestatic  #35
600: new           #52
603: dup
604: invokespecial #53
607: ldc           #54
609: invokevirtual #55
612: dload         27
614: invokevirtual #80
617: ldc           #57
619: invokevirtual #55
622: dconst_0
623: invokevirtual #80
626: ldc           #54
628: invokevirtual #55
631: invokevirtual #58
634: dload         27
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #59
649: aload         30
651: invokestatic  #35
654: aload         31
656: invokestatic  #35
659: aload         33
661: invokestatic  #35
664: aload         33
666: invokestatic  #36
669: ldc           #81
671: invokestatic  #38
674: new           #52
677: dup
678: invokespecial #53
681: ldc           #54
683: invokevirtual #55
686: dload         35
688: invokevirtual #80
691: ldc           #57
693: invokevirtual #55
696: dconst_0
697: invokevirtual #80
700: ldc           #54
702: invokevirtual #55
705: invokevirtual #58
708: dload         35
710: dconst_0
711: dcmpl
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #59
723: aload         37
725: invokestatic  #35
728: aload         37
730: invokestatic  #36
733: ldc           #81
735: invokestatic  #38
738: return
Exception table:
from    to  target type
334   351   354   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 4345
End line: 4402
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        int int3 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray5 = new double[] { 127 };
        double[] doubleArray7 = new double[] { 127 };
        double[] doubleArray9 = new double[] { 127 };
        double[] doubleArray11 = new double[] { 127 };
        double[][] doubleArray12 = new double[][] { doubleArray5, doubleArray7, doubleArray9, doubleArray11 };
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(doubleArray12);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix14 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray12);
        double[][] doubleArray15 = blockRealMatrix14.getData();
        double[] doubleArray17 = new double[] { 0.6483608274590866d };
        double[] doubleArray19 = new double[] { 0.6483608274590866d };
        double[] doubleArray21 = new double[] { 0.6483608274590866d };
        double[] doubleArray23 = new double[] { 0.6483608274590866d };
        double[][] doubleArray24 = new double[][] { doubleArray17, doubleArray19, doubleArray21, doubleArray23 };
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix25 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray24);
        int int26 = blockRealMatrix25.getRowDimension();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix27 = blockRealMatrix14.subtract(blockRealMatrix25);
        double[] doubleArray29 = blockRealMatrix25.getColumn((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray31 = levenbergMarquardtOptimizer1.computeCovariances(doubleArray29, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[127.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[127.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[127.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[127.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(blockRealMatrix27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.6483608274590866, 0.6483608274590866, 0.6483608274590866, 0.6483608274590866]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #44
40: istore_3
41: aload_2
42: invokevirtual #44
45: istore        4
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: ldc2_w        #476
55: dastore
56: astore        5
58: iconst_1
59: newarray       double
61: dup
62: iconst_0
63: ldc2_w        #476
66: dastore
67: astore        6
69: iconst_1
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #476
77: dastore
78: astore        7
80: iconst_1
81: newarray       double
83: dup
84: iconst_0
85: ldc2_w        #476
88: dastore
89: astore        8
91: iconst_4
92: anewarray     #308
95: dup
96: iconst_0
97: aload         5
99: aastore
100: dup
101: iconst_1
102: aload         6
104: aastore
105: dup
106: iconst_2
107: aload         7
109: aastore
110: dup
111: iconst_3
112: aload         8
114: aastore
115: astore        9
117: aload         9
119: invokestatic  #478
122: astore        10
124: new           #375
127: dup
128: aload         9
130: invokespecial #376
133: astore        11
135: aload         11
137: invokevirtual #479
140: astore        12
142: iconst_1
143: newarray       double
145: dup
146: iconst_0
147: ldc2_w        #206
150: dastore
151: astore        13
153: iconst_1
154: newarray       double
156: dup
157: iconst_0
158: ldc2_w        #206
161: dastore
162: astore        14
164: iconst_1
165: newarray       double
167: dup
168: iconst_0
169: ldc2_w        #206
172: dastore
173: astore        15
175: iconst_1
176: newarray       double
178: dup
179: iconst_0
180: ldc2_w        #206
183: dastore
184: astore        16
186: iconst_4
187: anewarray     #308
190: dup
191: iconst_0
192: aload         13
194: aastore
195: dup
196: iconst_1
197: aload         14
199: aastore
200: dup
201: iconst_2
202: aload         15
204: aastore
205: dup
206: iconst_3
207: aload         16
209: aastore
210: astore        17
212: new           #375
215: dup
216: aload         17
218: invokespecial #376
221: astore        18
223: aload         18
225: invokevirtual #480
228: istore        19
230: aload         11
232: aload         18
234: invokevirtual #481
237: astore        20
239: aload         18
241: iconst_0
242: invokevirtual #482
245: astore        21
247: aload_2
248: aload         21
250: ldc2_w        #65
253: invokevirtual #84
256: astore        22
258: ldc           #12
260: invokestatic  #13
263: goto          268
266: astore        22
268: new           #52
271: dup
272: invokespecial #53
275: ldc           #54
277: invokevirtual #55
280: iload_3
281: invokevirtual #56
284: ldc           #57
286: invokevirtual #55
289: iconst_0
290: invokevirtual #56
293: ldc           #54
295: invokevirtual #55
298: invokevirtual #58
301: iload_3
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #59
313: new           #52
316: dup
317: invokespecial #53
320: ldc           #54
322: invokevirtual #55
325: iload         4
327: invokevirtual #56
330: ldc           #57
332: invokevirtual #55
335: iconst_0
336: invokevirtual #56
339: ldc           #54
341: invokevirtual #55
344: invokevirtual #58
347: iload         4
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #59
360: aload         5
362: invokestatic  #35
365: aload         5
367: invokestatic  #36
370: ldc_w         #483
373: invokestatic  #38
376: aload         6
378: invokestatic  #35
381: aload         6
383: invokestatic  #36
386: ldc_w         #483
389: invokestatic  #38
392: aload         7
394: invokestatic  #35
397: aload         7
399: invokestatic  #36
402: ldc_w         #483
405: invokestatic  #38
408: aload         8
410: invokestatic  #35
413: aload         8
415: invokestatic  #36
418: ldc_w         #483
421: invokestatic  #38
424: aload         9
426: invokestatic  #35
429: aload         10
431: invokestatic  #35
434: aload         12
436: invokestatic  #35
439: aload         13
441: invokestatic  #35
444: aload         13
446: invokestatic  #36
449: ldc_w         #379
452: invokestatic  #38
455: aload         14
457: invokestatic  #35
460: aload         14
462: invokestatic  #36
465: ldc_w         #379
468: invokestatic  #38
471: aload         15
473: invokestatic  #35
476: aload         15
478: invokestatic  #36
481: ldc_w         #379
484: invokestatic  #38
487: aload         16
489: invokestatic  #35
492: aload         16
494: invokestatic  #36
497: ldc_w         #379
500: invokestatic  #38
503: aload         17
505: invokestatic  #35
508: new           #52
511: dup
512: invokespecial #53
515: ldc           #54
517: invokevirtual #55
520: iload         19
522: invokevirtual #56
525: ldc           #57
527: invokevirtual #55
530: iconst_4
531: invokevirtual #56
534: ldc           #54
536: invokevirtual #55
539: invokevirtual #58
542: iload         19
544: iconst_4
545: if_icmpne     552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #59
556: aload         20
558: invokestatic  #35
561: aload         21
563: invokestatic  #35
566: aload         21
568: invokestatic  #36
571: ldc_w         #484
574: invokestatic  #38
577: return
Exception table:
from    to  target type
247   263   266   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 4405
End line: 4477
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector0 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector2 = arrayRealVector0.mapDivideToSelf((double) (byte) -1);
        arrayRealVector0.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector7 = arrayRealVector5.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector5.append(realVector10);
        double double12 = arrayRealVector0.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector5);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector13.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector16 = arrayRealVector0.subtract(realVector15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray18 = arrayRealVector17.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector0, doubleArray18);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight20 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray18);
        org.apache.commons.math3.linear.RealMatrix realMatrix21 = weight20.getWeight();
        org.apache.commons.math3.linear.RealMatrix realMatrix22 = weight20.getWeight();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector25 = arrayRealVector23.mapDivideToSelf((double) (byte) -1);
        arrayRealVector23.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector28.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector28.append(realVector33);
        double double35 = arrayRealVector23.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector36.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector23.subtract(realVector38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray41 = arrayRealVector40.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23, doubleArray41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23);
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction44 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = arrayRealVector43.mapToSelf(univariateFunction44);
        org.apache.commons.math3.linear.RealVector realVector47 = arrayRealVector43.mapMultiplyToSelf(0.0d);
        org.apache.commons.math3.linear.RealVector realVector49 = arrayRealVector43.mapSubtractToSelf(0.0d);
        org.apache.commons.math3.linear.MatrixUtils.solveLowerTriangularSystem(realMatrix22, realVector49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex((org.apache.commons.math3.linear.AnyMatrix) realMatrix22, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: column index (-1)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector2);
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(realMatrix21);
        org.junit.Assert.assertNotNull(realMatrix22);
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #485
20: aastore
21: invokevirtual #7
24: pop
25: new           #48
28: dup
29: invokespecial #64
32: astore_1
33: aload_1
34: ldc2_w        #65
37: invokevirtual #67
40: astore_2
41: aload_1
42: dconst_1
43: invokevirtual #68
46: new           #48
49: dup
50: invokespecial #64
53: astore_3
54: aload_3
55: ldc2_w        #65
58: invokevirtual #67
61: astore        4
63: new           #48
66: dup
67: invokespecial #64
70: astore        5
72: aload         5
74: ldc2_w        #65
77: invokevirtual #67
80: astore        6
82: aload_3
83: aload         6
85: invokevirtual #69
88: astore        7
90: aload_1
91: aload_3
92: invokevirtual #70
95: dstore        8
97: new           #48
100: dup
101: invokespecial #64
104: astore        10
106: aload         10
108: ldc2_w        #65
111: invokevirtual #67
114: astore        11
116: aload_1
117: aload         11
119: invokevirtual #71
122: astore        12
124: new           #48
127: dup
128: invokespecial #64
131: astore        13
133: aload         13
135: invokevirtual #72
138: astore        14
140: new           #48
143: dup
144: aload_1
145: aload         14
147: invokespecial #73
150: astore        15
152: new           #30
155: dup
156: aload         14
158: invokespecial #74
161: astore        16
163: aload         16
165: invokevirtual #75
168: astore        17
170: aload         16
172: invokevirtual #75
175: astore        18
177: new           #48
180: dup
181: invokespecial #64
184: astore        19
186: aload         19
188: ldc2_w        #65
191: invokevirtual #67
194: astore        20
196: aload         19
198: dconst_1
199: invokevirtual #68
202: new           #48
205: dup
206: invokespecial #64
209: astore        21
211: aload         21
213: ldc2_w        #65
216: invokevirtual #67
219: astore        22
221: new           #48
224: dup
225: invokespecial #64
228: astore        23
230: aload         23
232: ldc2_w        #65
235: invokevirtual #67
238: astore        24
240: aload         21
242: aload         24
244: invokevirtual #69
247: astore        25
249: aload         19
251: aload         21
253: invokevirtual #70
256: dstore        26
258: new           #48
261: dup
262: invokespecial #64
265: astore        28
267: aload         28
269: ldc2_w        #65
272: invokevirtual #67
275: astore        29
277: aload         19
279: aload         29
281: invokevirtual #71
284: astore        30
286: new           #48
289: dup
290: invokespecial #64
293: astore        31
295: aload         31
297: invokevirtual #72
300: astore        32
302: new           #48
305: dup
306: aload         19
308: aload         32
310: invokespecial #73
313: astore        33
315: new           #48
318: dup
319: aload         19
321: invokespecial #223
324: astore        34
326: aconst_null
327: astore        35
329: aload         34
331: aload         35
333: invokevirtual #224
336: astore        36
338: aload         34
340: dconst_0
341: invokevirtual #280
344: astore        37
346: aload         34
348: dconst_0
349: invokevirtual #422
352: astore        38
354: aload         18
356: aload         38
358: invokestatic  #423
361: aload         18
363: iconst_m1
364: invokestatic  #486
367: ldc_w         #487
370: invokestatic  #13
373: goto          378
376: astore        39
378: aload_2
379: invokestatic  #35
382: aload         4
384: invokestatic  #35
387: aload         6
389: invokestatic  #35
392: aload         7
394: invokestatic  #35
397: new           #52
400: dup
401: invokespecial #53
404: ldc           #54
406: invokevirtual #55
409: dload         8
411: invokevirtual #80
414: ldc           #57
416: invokevirtual #55
419: dconst_0
420: invokevirtual #80
423: ldc           #54
425: invokevirtual #55
428: invokevirtual #58
431: dload         8
433: dconst_0
434: dcmpl
435: ifne          442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #59
446: aload         11
448: invokestatic  #35
451: aload         12
453: invokestatic  #35
456: aload         14
458: invokestatic  #35
461: aload         14
463: invokestatic  #36
466: ldc           #81
468: invokestatic  #38
471: aload         17
473: invokestatic  #35
476: aload         18
478: invokestatic  #35
481: aload         20
483: invokestatic  #35
486: aload         22
488: invokestatic  #35
491: aload         24
493: invokestatic  #35
496: aload         25
498: invokestatic  #35
501: new           #52
504: dup
505: invokespecial #53
508: ldc           #54
510: invokevirtual #55
513: dload         26
515: invokevirtual #80
518: ldc           #57
520: invokevirtual #55
523: dconst_0
524: invokevirtual #80
527: ldc           #54
529: invokevirtual #55
532: invokevirtual #58
535: dload         26
537: dconst_0
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #59
550: aload         29
552: invokestatic  #35
555: aload         30
557: invokestatic  #35
560: aload         32
562: invokestatic  #35
565: aload         32
567: invokestatic  #36
570: ldc           #81
572: invokestatic  #38
575: aload         36
577: invokestatic  #35
580: aload         37
582: invokestatic  #35
585: aload         38
587: invokestatic  #35
590: return
Exception table:
from    to  target type
361   373   376   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 4480
End line: 4581
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        double[] doubleArray1 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix2 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector6 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray1, doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector7 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector9 = arrayRealVector7.mapDivideToSelf((double) (byte) -1);
        arrayRealVector7.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector14 = arrayRealVector12.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector17 = arrayRealVector15.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector18 = arrayRealVector12.append(realVector17);
        double double19 = arrayRealVector7.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector12);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector20.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector7.subtract(realVector22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray25 = arrayRealVector24.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector7, doubleArray25);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair28 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray1, doubleArray25, true);
        boolean boolean30 = pointVectorValuePair28.equals((java.lang.Object) 3);
        double[] doubleArray31 = pointVectorValuePair28.getSecond();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector37 = arrayRealVector35.mapDivideToSelf((double) (byte) -1);
        arrayRealVector35.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector42 = arrayRealVector40.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector45 = arrayRealVector43.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector46 = arrayRealVector40.append(realVector45);
        double double47 = arrayRealVector35.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector50 = arrayRealVector48.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector51 = arrayRealVector35.subtract(realVector50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray53 = arrayRealVector52.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector35, doubleArray53);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight55 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray53);
        org.apache.commons.math3.linear.RealMatrix realMatrix56 = weight55.getWeight();
        double double57 = realMatrix56.getTrace();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector60 = arrayRealVector58.mapDivideToSelf((double) (byte) -1);
        arrayRealVector58.set((double) 1);
        java.lang.Double[] doubleArray63 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector64 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray63);
        double double65 = arrayRealVector58.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector64);
        java.lang.Double[] doubleArray66 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray66);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector68 = arrayRealVector64.append(arrayRealVector67);
        double double69 = arrayRealVector68.getL1Norm();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction70 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = arrayRealVector68.mapToSelf(univariateFunction70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = new org.apache.commons.math3.linear.ArrayRealVector((int) (byte) 0, 100.0d);
        boolean boolean75 = arrayRealVector74.isNaN();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector76 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector68, arrayRealVector74);
        org.apache.commons.math3.linear.RealVector realVector77 = realMatrix56.preMultiply((org.apache.commons.math3.linear.RealVector) arrayRealVector68);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector78 = arrayRealVector32.combine(0.0d, 63.28473739411208d, realVector77);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix2);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(realVector9);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(realVector37);
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(realVector50);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertNotNull(realMatrix56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(arrayRealVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(arrayRealVector71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(realVector77);
        org.junit.Assert.assertNotNull(arrayRealVector78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #45
33: dastore
34: astore_1
35: aload_1
36: invokestatic  #47
39: astore_2
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore_3
50: aload_3
51: invokestatic  #47
54: astore        4
56: new           #48
59: dup
60: aload_1
61: aload_3
62: invokespecial #49
65: astore        5
67: new           #48
70: dup
71: invokespecial #64
74: astore        6
76: aload         6
78: ldc2_w        #65
81: invokevirtual #67
84: astore        7
86: aload         6
88: dconst_1
89: invokevirtual #68
92: new           #48
95: dup
96: invokespecial #64
99: astore        8
101: aload         8
103: ldc2_w        #65
106: invokevirtual #67
109: astore        9
111: new           #48
114: dup
115: invokespecial #64
118: astore        10
120: aload         10
122: ldc2_w        #65
125: invokevirtual #67
128: astore        11
130: aload         8
132: aload         11
134: invokevirtual #69
137: astore        12
139: aload         6
141: aload         8
143: invokevirtual #70
146: dstore        13
148: new           #48
151: dup
152: invokespecial #64
155: astore        15
157: aload         15
159: ldc2_w        #65
162: invokevirtual #67
165: astore        16
167: aload         6
169: aload         16
171: invokevirtual #71
174: astore        17
176: new           #48
179: dup
180: invokespecial #64
183: astore        18
185: aload         18
187: invokevirtual #72
190: astore        19
192: new           #48
195: dup
196: aload         6
198: aload         19
200: invokespecial #73
203: astore        20
205: new           #101
208: dup
209: aload_1
210: aload         19
212: iconst_1
213: invokespecial #102
216: astore        21
218: aload         21
220: iconst_3
221: invokestatic  #194
224: invokevirtual #195
227: istore        22
229: aload         21
231: invokevirtual #325
234: checkcast     #308
237: astore        23
239: new           #48
242: dup
243: aload         23
245: invokespecial #451
248: astore        24
250: new           #48
253: dup
254: invokespecial #64
257: astore        25
259: aload         25
261: ldc2_w        #65
264: invokevirtual #67
267: astore        26
269: aload         25
271: dconst_1
272: invokevirtual #68
275: new           #48
278: dup
279: invokespecial #64
282: astore        27
284: aload         27
286: ldc2_w        #65
289: invokevirtual #67
292: astore        28
294: new           #48
297: dup
298: invokespecial #64
301: astore        29
303: aload         29
305: ldc2_w        #65
308: invokevirtual #67
311: astore        30
313: aload         27
315: aload         30
317: invokevirtual #69
320: astore        31
322: aload         25
324: aload         27
326: invokevirtual #70
329: dstore        32
331: new           #48
334: dup
335: invokespecial #64
338: astore        34
340: aload         34
342: ldc2_w        #65
345: invokevirtual #67
348: astore        35
350: aload         25
352: aload         35
354: invokevirtual #71
357: astore        36
359: new           #48
362: dup
363: invokespecial #64
366: astore        37
368: aload         37
370: invokevirtual #72
373: astore        38
375: new           #48
378: dup
379: aload         25
381: aload         38
383: invokespecial #73
386: astore        39
388: new           #30
391: dup
392: aload         38
394: invokespecial #74
397: astore        40
399: aload         40
401: invokevirtual #75
404: astore        41
406: aload         41
408: invokeinterface #431,  1
413: dstore        42
415: new           #48
418: dup
419: invokespecial #64
422: astore        44
424: aload         44
426: ldc2_w        #65
429: invokevirtual #67
432: astore        45
434: aload         44
436: dconst_1
437: invokevirtual #68
440: iconst_0
441: anewarray     #97
444: astore        46
446: new           #48
449: dup
450: aload         46
452: invokespecial #107
455: astore        47
457: aload         44
459: aload         47
461: invokevirtual #70
464: dstore        48
466: iconst_0
467: anewarray     #97
470: astore        50
472: new           #48
475: dup
476: aload         50
478: invokespecial #107
481: astore        51
483: aload         47
485: aload         51
487: invokevirtual #108
490: astore        52
492: aload         52
494: invokevirtual #432
497: dstore        53
499: aconst_null
500: astore        55
502: aload         52
504: aload         55
506: invokevirtual #224
509: astore        56
511: new           #48
514: dup
515: iconst_0
516: ldc2_w        #21
519: invokespecial #433
522: astore        57
524: aload         57
526: invokevirtual #434
529: istore        58
531: new           #48
534: dup
535: aload         52
537: aload         57
539: invokespecial #435
542: astore        59
544: aload         41
546: aload         52
548: invokeinterface #436,  2
553: astore        60
555: aload         24
557: dconst_0
558: ldc2_w        #489
561: aload         60
563: invokevirtual #491
566: astore        61
568: aload_1
569: invokestatic  #35
572: aload_1
573: invokestatic  #36
576: ldc           #60
578: invokestatic  #38
581: aload_2
582: invokestatic  #35
585: aload_3
586: invokestatic  #35
589: aload_3
590: invokestatic  #36
593: ldc           #60
595: invokestatic  #38
598: aload         4
600: invokestatic  #35
603: aload         7
605: invokestatic  #35
608: aload         9
610: invokestatic  #35
613: aload         11
615: invokestatic  #35
618: aload         12
620: invokestatic  #35
623: new           #52
626: dup
627: invokespecial #53
630: ldc           #54
632: invokevirtual #55
635: dload         13
637: invokevirtual #80
640: ldc           #57
642: invokevirtual #55
645: dconst_0
646: invokevirtual #80
649: ldc           #54
651: invokevirtual #55
654: invokevirtual #58
657: dload         13
659: dconst_0
660: dcmpl
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #59
672: aload         16
674: invokestatic  #35
677: aload         17
679: invokestatic  #35
682: aload         19
684: invokestatic  #35
687: aload         19
689: invokestatic  #36
692: ldc           #81
694: invokestatic  #38
697: new           #52
700: dup
701: invokespecial #53
704: ldc           #54
706: invokevirtual #55
709: iload         22
711: invokevirtual #170
714: ldc           #57
716: invokevirtual #55
719: iconst_0
720: invokevirtual #170
723: ldc           #54
725: invokevirtual #55
728: invokevirtual #58
731: iload         22
733: ifne          740
736: iconst_1
737: goto          741
740: iconst_0
741: invokestatic  #59
744: aload         23
746: invokestatic  #35
749: aload         23
751: invokestatic  #36
754: ldc           #81
756: invokestatic  #38
759: aload         26
761: invokestatic  #35
764: aload         28
766: invokestatic  #35
769: aload         30
771: invokestatic  #35
774: aload         31
776: invokestatic  #35
779: new           #52
782: dup
783: invokespecial #53
786: ldc           #54
788: invokevirtual #55
791: dload         32
793: invokevirtual #80
796: ldc           #57
798: invokevirtual #55
801: dconst_0
802: invokevirtual #80
805: ldc           #54
807: invokevirtual #55
810: invokevirtual #58
813: dload         32
815: dconst_0
816: dcmpl
817: ifne          824
820: iconst_1
821: goto          825
824: iconst_0
825: invokestatic  #59
828: aload         35
830: invokestatic  #35
833: aload         36
835: invokestatic  #35
838: aload         38
840: invokestatic  #35
843: aload         38
845: invokestatic  #36
848: ldc           #81
850: invokestatic  #38
853: aload         41
855: invokestatic  #35
858: new           #52
861: dup
862: invokespecial #53
865: ldc           #54
867: invokevirtual #55
870: dload         42
872: invokevirtual #80
875: ldc           #57
877: invokevirtual #55
880: dconst_0
881: invokevirtual #80
884: ldc           #54
886: invokevirtual #55
889: invokevirtual #58
892: dload         42
894: dconst_0
895: dcmpl
896: ifne          903
899: iconst_1
900: goto          904
903: iconst_0
904: invokestatic  #59
907: aload         45
909: invokestatic  #35
912: aload         46
914: invokestatic  #35
917: new           #52
920: dup
921: invokespecial #53
924: ldc           #54
926: invokevirtual #55
929: dload         48
931: invokevirtual #80
934: ldc           #57
936: invokevirtual #55
939: dconst_0
940: invokevirtual #80
943: ldc           #54
945: invokevirtual #55
948: invokevirtual #58
951: dload         48
953: dconst_0
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #59
966: aload         50
968: invokestatic  #35
971: aload         52
973: invokestatic  #35
976: new           #52
979: dup
980: invokespecial #53
983: ldc           #54
985: invokevirtual #55
988: dload         53
990: invokevirtual #80
993: ldc           #57
995: invokevirtual #55
998: dconst_0
999: invokevirtual #80
1002: ldc           #54
1004: invokevirtual #55
1007: invokevirtual #58
1010: dload         53
1012: dconst_0
1013: dcmpl
1014: ifne          1021
1017: iconst_1
1018: goto          1022
1021: iconst_0
1022: invokestatic  #59
1025: aload         56
1027: invokestatic  #35
1030: new           #52
1033: dup
1034: invokespecial #53
1037: ldc           #54
1039: invokevirtual #55
1042: iload         58
1044: invokevirtual #170
1047: ldc           #57
1049: invokevirtual #55
1052: iconst_0
1053: invokevirtual #170
1056: ldc           #54
1058: invokevirtual #55
1061: invokevirtual #58
1064: iload         58
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #59
1077: aload         60
1079: invokestatic  #35
1082: aload         61
1084: invokestatic  #35
1087: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 4584
End line: 4638
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        int int5 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        polynomialFitter6.addObservedPoint(1.5607966601082315d, (double) (short) 1);
        polynomialFitter6.addObservedPoint((double) 0L, (double) 32);
        polynomialFitter6.addObservedPoint((double) (byte) 10, 0.495604173418578d);
        double[] doubleArray18 = new double[] { 0.6483608274590866d };
        double[] doubleArray20 = new double[] { 0.6483608274590866d };
        double[] doubleArray22 = new double[] { 0.6483608274590866d };
        double[] doubleArray24 = new double[] { 0.6483608274590866d };
        double[][] doubleArray25 = new double[][] { doubleArray18, doubleArray20, doubleArray22, doubleArray24 };
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix26 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray25);
        int int27 = blockRealMatrix26.getRowDimension();
        double[] doubleArray29 = new double[] { 0.6483608274590866d };
        double[] doubleArray31 = new double[] { 0.6483608274590866d };
        double[] doubleArray33 = new double[] { 0.6483608274590866d };
        double[] doubleArray35 = new double[] { 0.6483608274590866d };
        double[][] doubleArray36 = new double[][] { doubleArray29, doubleArray31, doubleArray33, doubleArray35 };
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix37 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray36);
        int int38 = blockRealMatrix37.getRowDimension();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix39 = blockRealMatrix26.add((org.apache.commons.math3.linear.RealMatrix) blockRealMatrix37);
        double[] doubleArray41 = blockRealMatrix39.getRow((int) (short) 1);
        double[] doubleArray42 = polynomialFitter6.fit(1, doubleArray41);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 4 + "'", int27 == 4);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.6483608274590866]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
        org.junit.Assert.assertNotNull(blockRealMatrix39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.2967216549181733]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.2967216549181733]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #492
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #208
51: istore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: ldc2_w        #261
67: dconst_1
68: invokevirtual #263
71: aload         4
73: dconst_0
74: ldc2_w        #188
77: invokevirtual #263
80: aload         4
82: ldc2_w        #45
85: ldc2_w        #493
88: invokevirtual #263
91: iconst_1
92: newarray       double
94: dup
95: iconst_0
96: ldc2_w        #206
99: dastore
100: astore        5
102: iconst_1
103: newarray       double
105: dup
106: iconst_0
107: ldc2_w        #206
110: dastore
111: astore        6
113: iconst_1
114: newarray       double
116: dup
117: iconst_0
118: ldc2_w        #206
121: dastore
122: astore        7
124: iconst_1
125: newarray       double
127: dup
128: iconst_0
129: ldc2_w        #206
132: dastore
133: astore        8
135: iconst_4
136: anewarray     #308
139: dup
140: iconst_0
141: aload         5
143: aastore
144: dup
145: iconst_1
146: aload         6
148: aastore
149: dup
150: iconst_2
151: aload         7
153: aastore
154: dup
155: iconst_3
156: aload         8
158: aastore
159: astore        9
161: new           #375
164: dup
165: aload         9
167: invokespecial #376
170: astore        10
172: aload         10
174: invokevirtual #480
177: istore        11
179: iconst_1
180: newarray       double
182: dup
183: iconst_0
184: ldc2_w        #206
187: dastore
188: astore        12
190: iconst_1
191: newarray       double
193: dup
194: iconst_0
195: ldc2_w        #206
198: dastore
199: astore        13
201: iconst_1
202: newarray       double
204: dup
205: iconst_0
206: ldc2_w        #206
209: dastore
210: astore        14
212: iconst_1
213: newarray       double
215: dup
216: iconst_0
217: ldc2_w        #206
220: dastore
221: astore        15
223: iconst_4
224: anewarray     #308
227: dup
228: iconst_0
229: aload         12
231: aastore
232: dup
233: iconst_1
234: aload         13
236: aastore
237: dup
238: iconst_2
239: aload         14
241: aastore
242: dup
243: iconst_3
244: aload         15
246: aastore
247: astore        16
249: new           #375
252: dup
253: aload         16
255: invokespecial #376
258: astore        17
260: aload         17
262: invokevirtual #480
265: istore        18
267: aload         10
269: aload         17
271: invokevirtual #495
274: astore        19
276: aload         19
278: iconst_1
279: invokevirtual #496
282: astore        20
284: aload         4
286: iconst_1
287: aload         20
289: invokevirtual #497
292: astore        21
294: aload_2
295: invokestatic  #15
298: new           #52
301: dup
302: invokespecial #53
305: ldc           #54
307: invokevirtual #55
310: iload_3
311: invokevirtual #56
314: ldc           #57
316: invokevirtual #55
319: iconst_0
320: invokevirtual #56
323: ldc           #54
325: invokevirtual #55
328: invokevirtual #58
331: iload_3
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #59
343: aload         5
345: invokestatic  #35
348: aload         5
350: invokestatic  #36
353: ldc_w         #379
356: invokestatic  #38
359: aload         6
361: invokestatic  #35
364: aload         6
366: invokestatic  #36
369: ldc_w         #379
372: invokestatic  #38
375: aload         7
377: invokestatic  #35
380: aload         7
382: invokestatic  #36
385: ldc_w         #379
388: invokestatic  #38
391: aload         8
393: invokestatic  #35
396: aload         8
398: invokestatic  #36
401: ldc_w         #379
404: invokestatic  #38
407: aload         9
409: invokestatic  #35
412: new           #52
415: dup
416: invokespecial #53
419: ldc           #54
421: invokevirtual #55
424: iload         11
426: invokevirtual #56
429: ldc           #57
431: invokevirtual #55
434: iconst_4
435: invokevirtual #56
438: ldc           #54
440: invokevirtual #55
443: invokevirtual #58
446: iload         11
448: iconst_4
449: if_icmpne     456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #59
460: aload         12
462: invokestatic  #35
465: aload         12
467: invokestatic  #36
470: ldc_w         #379
473: invokestatic  #38
476: aload         13
478: invokestatic  #35
481: aload         13
483: invokestatic  #36
486: ldc_w         #379
489: invokestatic  #38
492: aload         14
494: invokestatic  #35
497: aload         14
499: invokestatic  #36
502: ldc_w         #379
505: invokestatic  #38
508: aload         15
510: invokestatic  #35
513: aload         15
515: invokestatic  #36
518: ldc_w         #379
521: invokestatic  #38
524: aload         16
526: invokestatic  #35
529: new           #52
532: dup
533: invokespecial #53
536: ldc           #54
538: invokevirtual #55
541: iload         18
543: invokevirtual #56
546: ldc           #57
548: invokevirtual #55
551: iconst_4
552: invokevirtual #56
555: ldc           #54
557: invokevirtual #55
560: invokevirtual #58
563: iload         18
565: iconst_4
566: if_icmpne     573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #59
577: aload         19
579: invokestatic  #35
582: aload         20
584: invokestatic  #35
587: aload         20
589: invokestatic  #36
592: ldc_w         #498
595: invokestatic  #38
598: aload         21
600: invokestatic  #35
603: aload         21
605: invokestatic  #36
608: ldc_w         #498
611: invokestatic  #38
614: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 4641
End line: 4663
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker1 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer2 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(true, pointVectorValuePairConvergenceChecker1);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction3 = null;
        org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian modelFunctionJacobian4 = new org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian(multivariateMatrixFunction3);
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction5 = modelFunctionJacobian4.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction6 = modelFunctionJacobian4.getModelFunctionJacobian();
        org.apache.commons.math3.analysis.MultivariateMatrixFunction multivariateMatrixFunction7 = modelFunctionJacobian4.getModelFunctionJacobian();
        org.apache.commons.math3.optim.OptimizationData[] optimizationDataArray8 = new org.apache.commons.math3.optim.OptimizationData[] { modelFunctionJacobian4 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair9 = gaussNewtonOptimizer2.optimize(optimizationDataArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(multivariateMatrixFunction5);
        org.junit.Assert.assertNull(multivariateMatrixFunction6);
        org.junit.Assert.assertNull(multivariateMatrixFunction7);
        org.junit.Assert.assertNotNull(optimizationDataArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #499
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: iconst_1
32: aload_1
33: invokespecial #140
36: astore_2
37: aconst_null
38: astore_3
39: new           #212
42: dup
43: aload_3
44: invokespecial #213
47: astore        4
49: aload         4
51: invokevirtual #233
54: astore        5
56: aload         4
58: invokevirtual #233
61: astore        6
63: aload         4
65: invokevirtual #233
68: astore        7
70: iconst_1
71: anewarray     #76
74: dup
75: iconst_0
76: aload         4
78: aastore
79: astore        8
81: aload_2
82: aload         8
84: invokevirtual #77
87: astore        9
89: ldc           #12
91: invokestatic  #13
94: goto          99
97: astore        9
99: aload         5
101: invokestatic  #15
104: aload         6
106: invokestatic  #15
109: aload         7
111: invokestatic  #15
114: aload         8
116: invokestatic  #35
119: return
Exception table:
from    to  target type
81    94    97   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 4666
End line: 4683
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        double[] doubleArray0 = null;
        org.apache.commons.math3.optim.SimpleBounds simpleBounds2 = org.apache.commons.math3.optim.SimpleBounds.unbounded(97);
        double[] doubleArray3 = simpleBounds2.getUpper();
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair5 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray0, doubleArray3, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.nonlinear.vector.Weight weight6 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(simpleBounds2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #500
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: bipush        97
29: invokestatic  #232
32: astore_2
33: aload_2
34: invokevirtual #272
37: astore_3
38: new           #101
41: dup
42: aload_1
43: aload_3
44: iconst_1
45: invokespecial #102
48: astore        4
50: new           #30
53: dup
54: aload_1
55: invokespecial #74
58: astore        5
60: ldc           #12
62: invokestatic  #13
65: goto          70
68: astore        5
70: aload_2
71: invokestatic  #35
74: aload_3
75: invokestatic  #35
78: aload_3
79: invokestatic  #36
82: ldc_w         #273
85: invokestatic  #38
88: return
Exception table:
from    to  target type
50    65    68   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 4686
End line: 4698
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter2 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer1);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint6 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        parametricUnivariateFunctionCurveFitter2.addObservedPoint(weightedObservedPoint6);
        double double8 = weightedObservedPoint6.getWeight();
        double double9 = weightedObservedPoint6.getY();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #501
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: new           #91
39: dup
40: aload_2
41: invokespecial #92
44: astore_3
45: new           #113
48: dup
49: ldc2_w        #21
52: dconst_0
53: ldc2_w        #21
56: invokespecial #114
59: astore        4
61: aload_3
62: aload         4
64: invokevirtual #115
67: aload         4
69: invokevirtual #275
72: dstore        5
74: aload         4
76: invokevirtual #251
79: dstore        7
81: new           #52
84: dup
85: invokespecial #53
88: ldc           #54
90: invokevirtual #55
93: dload         5
95: invokevirtual #80
98: ldc           #57
100: invokevirtual #55
103: ldc2_w        #21
106: invokevirtual #80
109: ldc           #54
111: invokevirtual #55
114: invokevirtual #58
117: dload         5
119: ldc2_w        #21
122: dcmpl
123: ifne          130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #59
134: new           #52
137: dup
138: invokespecial #53
141: ldc           #54
143: invokevirtual #55
146: dload         7
148: invokevirtual #80
151: ldc           #57
153: invokevirtual #55
156: ldc2_w        #21
159: invokevirtual #80
162: ldc           #54
164: invokevirtual #55
167: invokevirtual #58
170: dload         7
172: ldc2_w        #21
175: dcmpl
176: ifne          183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #59
187: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 4701
End line: 4716
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        double[] doubleArray1 = levenbergMarquardtOptimizer0.getUpperBound();
        int int2 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setCost(32.0d);
        int int5 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray6 = levenbergMarquardtOptimizer0.getStartPoint();
        double[] doubleArray7 = levenbergMarquardtOptimizer0.getStartPoint();
        org.junit.Assert.assertNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #502
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #231
37: astore_2
38: aload_1
39: invokevirtual #208
42: istore_3
43: aload_1
44: ldc2_w        #188
47: invokevirtual #291
50: aload_1
51: invokevirtual #44
54: istore        4
56: aload_1
57: invokevirtual #83
60: astore        5
62: aload_1
63: invokevirtual #83
66: astore        6
68: aload_2
69: invokestatic  #15
72: new           #52
75: dup
76: invokespecial #53
79: ldc           #54
81: invokevirtual #55
84: iload_3
85: invokevirtual #56
88: ldc           #57
90: invokevirtual #55
93: iconst_0
94: invokevirtual #56
97: ldc           #54
99: invokevirtual #55
102: invokevirtual #58
105: iload_3
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #59
117: new           #52
120: dup
121: invokespecial #53
124: ldc           #54
126: invokevirtual #55
129: iload         4
131: invokevirtual #56
134: ldc           #57
136: invokevirtual #55
139: iconst_0
140: invokevirtual #56
143: ldc           #54
145: invokevirtual #55
148: invokevirtual #58
151: iload         4
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #59
164: aload         5
166: invokestatic  #15
169: aload         6
171: invokestatic  #15
174: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 4719
End line: 4733
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        int int5 = levenbergMarquardtOptimizer3.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer3.getStartPoint();
        double double7 = levenbergMarquardtOptimizer3.getChiSquare();
        int int8 = levenbergMarquardtOptimizer3.getMaxEvaluations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #503
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #230
51: istore_3
52: aload_1
53: invokevirtual #83
56: astore        4
58: aload_1
59: invokevirtual #191
62: dstore        5
64: aload_1
65: invokevirtual #44
68: istore        7
70: aload_2
71: invokestatic  #15
74: new           #52
77: dup
78: invokespecial #53
81: ldc           #54
83: invokevirtual #55
86: iload_3
87: invokevirtual #56
90: ldc           #57
92: invokevirtual #55
95: iconst_0
96: invokevirtual #56
99: ldc           #54
101: invokevirtual #55
104: invokevirtual #58
107: iload_3
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #59
119: aload         4
121: invokestatic  #15
124: new           #52
127: dup
128: invokespecial #53
131: ldc           #54
133: invokevirtual #55
136: dload         5
138: invokevirtual #80
141: ldc           #57
143: invokevirtual #55
146: dconst_0
147: invokevirtual #80
150: ldc           #54
152: invokevirtual #55
155: invokevirtual #58
158: dload         5
160: dconst_0
161: dcmpl
162: ifne          169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #59
173: new           #52
176: dup
177: invokespecial #53
180: ldc           #54
182: invokevirtual #55
185: iload         7
187: invokevirtual #56
190: ldc           #57
192: invokevirtual #55
195: iconst_0
196: invokevirtual #56
199: ldc           #54
201: invokevirtual #55
204: invokevirtual #58
207: iload         7
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #59
220: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 4736
End line: 4749
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getUpperBound();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker5 = levenbergMarquardtOptimizer3.getConvergenceChecker();
        org.apache.commons.math3.fitting.PolynomialFitter polynomialFitter6 = new org.apache.commons.math3.fitting.PolynomialFitter((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray7 = polynomialFitter6.getObservations();
        polynomialFitter6.addObservedPoint((double) 6.0f, 7.151039979174052E54d);
        polynomialFitter6.addObservedPoint(100.53096491487338d, (double) 1.0000001f);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(weightedObservedPointArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #504
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #231
46: astore_2
47: aload_1
48: invokevirtual #243
51: astore_3
52: new           #259
55: dup
56: aload_1
57: invokespecial #260
60: astore        4
62: aload         4
64: invokevirtual #324
67: astore        5
69: aload         4
71: ldc2_w        #318
74: ldc2_w        #505
77: invokevirtual #263
80: aload         4
82: ldc2_w        #507
85: ldc2_w        #509
88: invokevirtual #263
91: aload_2
92: invokestatic  #15
95: aload_3
96: invokestatic  #15
99: aload         5
101: invokestatic  #35
104: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 4752
End line: 4770
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = levenbergMarquardtOptimizer1.getMaxEvaluations();
        double[] doubleArray3 = levenbergMarquardtOptimizer1.getStartPoint();
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker4 = levenbergMarquardtOptimizer1.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair5 = levenbergMarquardtOptimizer1.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(pointVectorValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #511
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: aload_1
32: invokespecial #9
35: astore_2
36: aload_2
37: invokevirtual #44
40: istore_3
41: aload_2
42: invokevirtual #83
45: astore        4
47: aload_2
48: invokevirtual #243
51: astore        5
53: aload_2
54: invokevirtual #446
57: astore        6
59: ldc           #12
61: invokestatic  #13
64: goto          69
67: astore        6
69: new           #52
72: dup
73: invokespecial #53
76: ldc           #54
78: invokevirtual #55
81: iload_3
82: invokevirtual #56
85: ldc           #57
87: invokevirtual #55
90: iconst_0
91: invokevirtual #56
94: ldc           #54
96: invokevirtual #55
99: invokevirtual #58
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #59
114: aload         4
116: invokestatic  #15
119: aload         5
121: invokestatic  #15
124: return
Exception table:
from    to  target type
53    64    67   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 4773
End line: 4829
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        double[] doubleArray1 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix2 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector6 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray1, doubleArray4);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix8 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray1, true);
        double[] doubleArray10 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray10);
        double[] doubleArray13 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray13);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray10, doubleArray13);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix17 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray10, true);
        double[] doubleArray21 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix23 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray21, true);
        org.apache.commons.math3.linear.RealVector realVector25 = diagonalMatrix23.getRowVector(0);
        double[] doubleArray29 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix31 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray29, true);
        double[] doubleArray35 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix37 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray35, true);
        double[] doubleArray38 = diagonalMatrix31.operate(doubleArray35);
        double[] doubleArray39 = diagonalMatrix23.preMultiply(doubleArray38);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix40 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray38);
        org.apache.commons.math3.optim.PointVectorValuePair pointVectorValuePair42 = new org.apache.commons.math3.optim.PointVectorValuePair(doubleArray10, doubleArray38, true);
        double[] doubleArray43 = pointVectorValuePair42.getFirst();
        double[] doubleArray44 = diagonalMatrix8.operate(doubleArray43);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight45 = new org.apache.commons.math3.optim.nonlinear.vector.Weight((org.apache.commons.math3.linear.RealMatrix) diagonalMatrix8);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix2);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #512
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #45
33: dastore
34: astore_1
35: aload_1
36: invokestatic  #47
39: astore_2
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore_3
50: aload_3
51: invokestatic  #47
54: astore        4
56: new           #48
59: dup
60: aload_1
61: aload_3
62: invokespecial #49
65: astore        5
67: new           #23
70: dup
71: aload_1
72: iconst_1
73: invokespecial #24
76: astore        6
78: iconst_1
79: newarray       double
81: dup
82: iconst_0
83: ldc2_w        #45
86: dastore
87: astore        7
89: aload         7
91: invokestatic  #47
94: astore        8
96: iconst_1
97: newarray       double
99: dup
100: iconst_0
101: ldc2_w        #45
104: dastore
105: astore        9
107: aload         9
109: invokestatic  #47
112: astore        10
114: new           #48
117: dup
118: aload         7
120: aload         9
122: invokespecial #49
125: astore        11
127: new           #23
130: dup
131: aload         7
133: iconst_1
134: invokespecial #24
137: astore        12
139: iconst_3
140: newarray       double
142: dup
143: iconst_0
144: dconst_1
145: dastore
146: dup
147: iconst_1
148: ldc2_w        #21
151: dastore
152: dup
153: iconst_2
154: dconst_1
155: dastore
156: astore        13
158: new           #23
161: dup
162: aload         13
164: iconst_1
165: invokespecial #24
168: astore        14
170: aload         14
172: iconst_0
173: invokevirtual #25
176: astore        15
178: iconst_3
179: newarray       double
181: dup
182: iconst_0
183: dconst_1
184: dastore
185: dup
186: iconst_1
187: ldc2_w        #21
190: dastore
191: dup
192: iconst_2
193: dconst_1
194: dastore
195: astore        16
197: new           #23
200: dup
201: aload         16
203: iconst_1
204: invokespecial #24
207: astore        17
209: iconst_3
210: newarray       double
212: dup
213: iconst_0
214: dconst_1
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #21
221: dastore
222: dup
223: iconst_2
224: dconst_1
225: dastore
226: astore        18
228: new           #23
231: dup
232: aload         18
234: iconst_1
235: invokespecial #24
238: astore        19
240: aload         17
242: aload         18
244: invokevirtual #26
247: astore        20
249: aload         14
251: aload         20
253: invokevirtual #27
256: astore        21
258: new           #23
261: dup
262: aload         20
264: invokespecial #28
267: astore        22
269: new           #101
272: dup
273: aload         7
275: aload         20
277: iconst_1
278: invokespecial #102
281: astore        23
283: aload         23
285: invokevirtual #307
288: checkcast     #308
291: astore        24
293: aload         6
295: aload         24
297: invokevirtual #26
300: astore        25
302: new           #30
305: dup
306: aload         6
308: invokespecial #31
311: astore        26
313: aload_1
314: invokestatic  #35
317: aload_1
318: invokestatic  #36
321: ldc           #60
323: invokestatic  #38
326: aload_2
327: invokestatic  #35
330: aload_3
331: invokestatic  #35
334: aload_3
335: invokestatic  #36
338: ldc           #60
340: invokestatic  #38
343: aload         4
345: invokestatic  #35
348: aload         7
350: invokestatic  #35
353: aload         7
355: invokestatic  #36
358: ldc           #60
360: invokestatic  #38
363: aload         8
365: invokestatic  #35
368: aload         9
370: invokestatic  #35
373: aload         9
375: invokestatic  #36
378: ldc           #60
380: invokestatic  #38
383: aload         10
385: invokestatic  #35
388: aload         13
390: invokestatic  #35
393: aload         13
395: invokestatic  #36
398: ldc           #37
400: invokestatic  #38
403: aload         15
405: invokestatic  #35
408: aload         16
410: invokestatic  #35
413: aload         16
415: invokestatic  #36
418: ldc           #37
420: invokestatic  #38
423: aload         18
425: invokestatic  #35
428: aload         18
430: invokestatic  #36
433: ldc           #37
435: invokestatic  #38
438: aload         20
440: invokestatic  #35
443: aload         20
445: invokestatic  #36
448: ldc           #39
450: invokestatic  #38
453: aload         21
455: invokestatic  #35
458: aload         21
460: invokestatic  #36
463: ldc           #40
465: invokestatic  #38
468: aload         24
470: invokestatic  #35
473: aload         24
475: invokestatic  #36
478: ldc           #60
480: invokestatic  #38
483: aload         25
485: invokestatic  #35
488: aload         25
490: invokestatic  #36
493: ldc_w         #513
496: invokestatic  #38
499: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 4832
End line: 4838
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #514
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #277
32: astore_1
33: aload_1
34: invokevirtual #127
37: istore_2
38: new           #52
41: dup
42: invokespecial #53
45: ldc           #54
47: invokevirtual #55
50: iload_2
51: invokevirtual #56
54: ldc           #57
56: invokevirtual #55
59: iconst_0
60: invokevirtual #56
63: ldc           #54
65: invokevirtual #55
68: invokevirtual #58
71: iload_2
72: ifne          79
75: iconst_1
76: goto          80
79: iconst_0
80: invokestatic  #59
83: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 4841
End line: 5116
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        org.apache.commons.math3.linear.RealVectorFormat realVectorFormat3 = new org.apache.commons.math3.linear.RealVectorFormat(",", "{{1}}", "{{1.2967216549},{1.2967216549},{1.2967216549},{1.2967216549}}");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector4 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector6 = arrayRealVector4.mapDivideToSelf((double) (byte) -1);
        arrayRealVector4.set((double) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector14 = arrayRealVector12.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector15 = arrayRealVector9.append(realVector14);
        double double16 = arrayRealVector4.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector9);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((double) (byte) -1);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector4.subtract(realVector19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector();
        double[] doubleArray22 = arrayRealVector21.getDataRef();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector4, doubleArray22);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight24 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray22);
        org.apache.commons.math3.linear.RealMatrix realMatrix25 = weight24.getWeight();
        double double26 = realMatrix25.getTrace();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector();
        org.apache.commons.math3.linear.RealVector realVector29 = arrayRealVector27.mapDivideToSelf((double) (byte) -1);
        arrayRealVector27.set((double) 1);
        java.lang.Double[] doubleArray32 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray32);
        double double34 = arrayRealVector27.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector33);
        java.lang.Double[] doubleArray35 = new java.lang.Double[] {};
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = arrayRealVector33.append(arrayRealVector36);
        double double38 = arrayRealVector37.getL1Norm();
        org.apache.commons.math3.analysis.UnivariateFunction univariateFunction39 = null;
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = arrayRealVector37.mapToSelf(univariateFunction39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math3.linear.ArrayRealVector((int) (byte) 0, 100.0d);
        boolean boolean44 = arrayRealVector43.isNaN();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector37, arrayRealVector43);
        org.apache.commons.math3.linear.RealVector realVector46 = realMatrix25.preMultiply((org.apache.commons.math3.linear.RealVector) arrayRealVector37);
        java.lang.String str47 = realVectorFormat3.format((org.apache.commons.math3.linear.RealVector) arrayRealVector37);
        java.text.NumberFormat numberFormat48 = realVectorFormat3.getFormat();
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = realVectorFormat3.parse("{", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector6);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(realMatrix25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(arrayRealVector40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ",{{1}}" + "'", str47, ",{{1}}");
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 1.4E-45f, 0.7062321904146185d, (double) (short) 0, (double) 573693920, 0.495604173418578d);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer multivariateVectorOptimizer0 = null;
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter1 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>(multivariateVectorOptimizer0);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray2 = parametricUnivariateFunctionCurveFitter1.getObservations();
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric4 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray9 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix11 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess14 = new org.apache.commons.math3.optim.InitialGuess(doubleArray9);
        double[] doubleArray15 = initialGuess14.getInitialGuess();
        double double16 = parametric4.value(0.0d, doubleArray15);
        double[] doubleArray21 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix23 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray21, true);
        org.apache.commons.math3.linear.RealVector realVector25 = diagonalMatrix23.getRowVector(0);
        double[] doubleArray29 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix31 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray29, true);
        double[] doubleArray35 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix37 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray35, true);
        double[] doubleArray38 = diagonalMatrix31.operate(doubleArray35);
        double[] doubleArray39 = diagonalMatrix23.preMultiply(doubleArray38);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix40 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray38);
        double[] doubleArray44 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix46 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray44, true);
        org.apache.commons.math3.linear.RealVector realVector48 = diagonalMatrix46.getRowVector(0);
        double[] doubleArray52 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix54 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray52, true);
        double[] doubleArray58 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix60 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray58, true);
        double[] doubleArray61 = diagonalMatrix54.operate(doubleArray58);
        double[] doubleArray62 = diagonalMatrix46.preMultiply(doubleArray61);
        double[] doubleArray63 = diagonalMatrix40.preMultiply(doubleArray62);
        double double64 = parametric4.value(0.0d, doubleArray63);
        double[] doubleArray66 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix67 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray66);
        double[] doubleArray69 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix70 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray66, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray72 = parametricUnivariateFunctionCurveFitter1.fit(3, (org.apache.commons.math3.analysis.ParametricUnivariateFunction) parametric4, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weightedObservedPointArray2);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0E10, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix70);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter4 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint8 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        double double9 = weightedObservedPoint8.getX();
        double double10 = weightedObservedPoint8.getWeight();
        double double11 = weightedObservedPoint8.getWeight();
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(weightedObservedPoint8);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint13 = null;
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(weightedObservedPoint13);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        int int6 = levenbergMarquardtOptimizer3.getEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer3.getLowerBound();
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter8 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        parametricUnivariateFunctionCurveFitter8.addObservedPoint(0.6044128976724817d, (double) 100.0f);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        double[] doubleArray1 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix2 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector6 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray1, doubleArray4);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight7 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray4);
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = weight7.getWeight();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix2);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(realMatrix8);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.nonlinear.vector.Weight weight1 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getIterations();
        double[] doubleArray3 = gaussNewtonOptimizer1.getStartPoint();
        int int4 = gaussNewtonOptimizer1.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix5 = gaussNewtonOptimizer1.getWeight();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        int int6 = levenbergMarquardtOptimizer3.getEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer3.getLowerBound();
        int int8 = levenbergMarquardtOptimizer3.getMaxIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer3.getUpperBound();
        int int10 = levenbergMarquardtOptimizer3.getEvaluations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
}
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #515
20: aastore
21: invokevirtual #7
24: pop
25: new           #426
28: dup
29: ldc_w         #427
32: ldc_w         #428
35: ldc_w         #429
38: invokespecial #430
41: astore_1
42: new           #48
45: dup
46: invokespecial #64
49: astore_2
50: aload_2
51: ldc2_w        #65
54: invokevirtual #67
57: astore_3
58: aload_2
59: dconst_1
60: invokevirtual #68
63: new           #48
66: dup
67: invokespecial #64
70: astore        4
72: aload         4
74: ldc2_w        #65
77: invokevirtual #67
80: astore        5
82: new           #48
85: dup
86: invokespecial #64
89: astore        6
91: aload         6
93: ldc2_w        #65
96: invokevirtual #67
99: astore        7
101: aload         4
103: aload         7
105: invokevirtual #69
108: astore        8
110: aload_2
111: aload         4
113: invokevirtual #70
116: dstore        9
118: new           #48
121: dup
122: invokespecial #64
125: astore        11
127: aload         11
129: ldc2_w        #65
132: invokevirtual #67
135: astore        12
137: aload_2
138: aload         12
140: invokevirtual #71
143: astore        13
145: new           #48
148: dup
149: invokespecial #64
152: astore        14
154: aload         14
156: invokevirtual #72
159: astore        15
161: new           #48
164: dup
165: aload_2
166: aload         15
168: invokespecial #73
171: astore        16
173: new           #30
176: dup
177: aload         15
179: invokespecial #74
182: astore        17
184: aload         17
186: invokevirtual #75
189: astore        18
191: aload         18
193: invokeinterface #431,  1
198: dstore        19
200: new           #48
203: dup
204: invokespecial #64
207: astore        21
209: aload         21
211: ldc2_w        #65
214: invokevirtual #67
217: astore        22
219: aload         21
221: dconst_1
222: invokevirtual #68
225: iconst_0
226: anewarray     #97
229: astore        23
231: new           #48
234: dup
235: aload         23
237: invokespecial #107
240: astore        24
242: aload         21
244: aload         24
246: invokevirtual #70
249: dstore        25
251: iconst_0
252: anewarray     #97
255: astore        27
257: new           #48
260: dup
261: aload         27
263: invokespecial #107
266: astore        28
268: aload         24
270: aload         28
272: invokevirtual #108
275: astore        29
277: aload         29
279: invokevirtual #432
282: dstore        30
284: aconst_null
285: astore        32
287: aload         29
289: aload         32
291: invokevirtual #224
294: astore        33
296: new           #48
299: dup
300: iconst_0
301: ldc2_w        #21
304: invokespecial #433
307: astore        34
309: aload         34
311: invokevirtual #434
314: istore        35
316: new           #48
319: dup
320: aload         29
322: aload         34
324: invokespecial #435
327: astore        36
329: aload         18
331: aload         29
333: invokeinterface #436,  2
338: astore        37
340: aload_1
341: aload         29
343: invokevirtual #437
346: astore        38
348: aload_1
349: invokevirtual #516
352: astore        39
354: aconst_null
355: astore        40
357: aload_1
358: ldc_w         #517
361: aload         40
363: invokevirtual #518
366: astore        41
368: ldc           #12
370: invokestatic  #13
373: goto          378
376: astore        41
378: aload_3
379: invokestatic  #35
382: aload         5
384: invokestatic  #35
387: aload         7
389: invokestatic  #35
392: aload         8
394: invokestatic  #35
397: new           #52
400: dup
401: invokespecial #53
404: ldc           #54
406: invokevirtual #55
409: dload         9
411: invokevirtual #80
414: ldc           #57
416: invokevirtual #55
419: dconst_0
420: invokevirtual #80
423: ldc           #54
425: invokevirtual #55
428: invokevirtual #58
431: dload         9
433: dconst_0
434: dcmpl
435: ifne          442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #59
446: aload         12
448: invokestatic  #35
451: aload         13
453: invokestatic  #35
456: aload         15
458: invokestatic  #35
461: aload         15
463: invokestatic  #36
466: ldc           #81
468: invokestatic  #38
471: aload         18
473: invokestatic  #35
476: new           #52
479: dup
480: invokespecial #53
483: ldc           #54
485: invokevirtual #55
488: dload         19
490: invokevirtual #80
493: ldc           #57
495: invokevirtual #55
498: dconst_0
499: invokevirtual #80
502: ldc           #54
504: invokevirtual #55
507: invokevirtual #58
510: dload         19
512: dconst_0
513: dcmpl
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #59
525: aload         22
527: invokestatic  #35
530: aload         23
532: invokestatic  #35
535: new           #52
538: dup
539: invokespecial #53
542: ldc           #54
544: invokevirtual #55
547: dload         25
549: invokevirtual #80
552: ldc           #57
554: invokevirtual #55
557: dconst_0
558: invokevirtual #80
561: ldc           #54
563: invokevirtual #55
566: invokevirtual #58
569: dload         25
571: dconst_0
572: dcmpl
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #59
584: aload         27
586: invokestatic  #35
589: aload         29
591: invokestatic  #35
594: new           #52
597: dup
598: invokespecial #53
601: ldc           #54
603: invokevirtual #55
606: dload         30
608: invokevirtual #80
611: ldc           #57
613: invokevirtual #55
616: dconst_0
617: invokevirtual #80
620: ldc           #54
622: invokevirtual #55
625: invokevirtual #58
628: dload         30
630: dconst_0
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #59
643: aload         33
645: invokestatic  #35
648: new           #52
651: dup
652: invokespecial #53
655: ldc           #54
657: invokevirtual #55
660: iload         35
662: invokevirtual #170
665: ldc           #57
667: invokevirtual #55
670: iconst_0
671: invokevirtual #170
674: ldc           #54
676: invokevirtual #55
679: invokevirtual #58
682: iload         35
684: ifne          691
687: iconst_1
688: goto          692
691: iconst_0
692: invokestatic  #59
695: aload         37
697: invokestatic  #35
700: new           #52
703: dup
704: invokespecial #53
707: ldc           #54
709: invokevirtual #55
712: aload         38
714: invokevirtual #55
717: ldc_w         #442
720: invokevirtual #55
723: invokevirtual #58
726: aload         38
728: ldc_w         #443
731: invokestatic  #408
734: aload         39
736: invokestatic  #35
739: return
Exception table:
from    to  target type
357   373   376   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 4914
End line: 4918
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) 1.4E-45f, 0.7062321904146185d, (double) (short) 0, (double) 573693920, 0.495604173418578d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #519
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #520
32: ldc2_w        #522
35: dconst_0
36: ldc2_w        #524
39: ldc2_w        #493
42: invokespecial #415
45: astore_1
46: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 4921
End line: 5004
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer multivariateVectorOptimizer0 = null;
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter1 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>(multivariateVectorOptimizer0);
        org.apache.commons.math3.fitting.WeightedObservedPoint[] weightedObservedPointArray2 = parametricUnivariateFunctionCurveFitter1.getObservations();
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric parametric4 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric();
        double[] doubleArray9 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix11 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix13 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray9, true);
        org.apache.commons.math3.optim.InitialGuess initialGuess14 = new org.apache.commons.math3.optim.InitialGuess(doubleArray9);
        double[] doubleArray15 = initialGuess14.getInitialGuess();
        double double16 = parametric4.value(0.0d, doubleArray15);
        double[] doubleArray21 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix23 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray21, true);
        org.apache.commons.math3.linear.RealVector realVector25 = diagonalMatrix23.getRowVector(0);
        double[] doubleArray29 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix31 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray29, true);
        double[] doubleArray35 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix37 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray35, true);
        double[] doubleArray38 = diagonalMatrix31.operate(doubleArray35);
        double[] doubleArray39 = diagonalMatrix23.preMultiply(doubleArray38);
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix40 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray38);
        double[] doubleArray44 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix46 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray44, true);
        org.apache.commons.math3.linear.RealVector realVector48 = diagonalMatrix46.getRowVector(0);
        double[] doubleArray52 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix54 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray52, true);
        double[] doubleArray58 = new double[] { (byte) 1, 100.0d, 1L };
        org.apache.commons.math3.linear.DiagonalMatrix diagonalMatrix60 = new org.apache.commons.math3.linear.DiagonalMatrix(doubleArray58, true);
        double[] doubleArray61 = diagonalMatrix54.operate(doubleArray58);
        double[] doubleArray62 = diagonalMatrix46.preMultiply(doubleArray61);
        double[] doubleArray63 = diagonalMatrix40.preMultiply(doubleArray62);
        double double64 = parametric4.value(0.0d, doubleArray63);
        double[] doubleArray66 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix67 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray66);
        double[] doubleArray69 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix70 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray66, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray72 = parametricUnivariateFunctionCurveFitter1.fit(3, (org.apache.commons.math3.analysis.ParametricUnivariateFunction) parametric4, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weightedObservedPointArray2);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 10000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1000000.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0E10, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix70);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #91
30: dup
31: aload_1
32: invokespecial #92
35: astore_2
36: aload_2
37: invokevirtual #253
40: astore_3
41: new           #93
44: dup
45: invokespecial #94
48: astore        4
50: iconst_3
51: newarray       double
53: dup
54: iconst_0
55: dconst_1
56: dastore
57: dup
58: iconst_1
59: ldc2_w        #21
62: dastore
63: dup
64: iconst_2
65: dconst_1
66: dastore
67: astore        5
69: new           #23
72: dup
73: aload         5
75: iconst_1
76: invokespecial #24
79: astore        6
81: new           #23
84: dup
85: aload         5
87: iconst_1
88: invokespecial #24
91: astore        7
93: new           #118
96: dup
97: aload         5
99: invokespecial #119
102: astore        8
104: aload         8
106: invokevirtual #120
109: astore        9
111: aload         4
113: dconst_0
114: aload         9
116: invokevirtual #121
119: dstore        10
121: iconst_3
122: newarray       double
124: dup
125: iconst_0
126: dconst_1
127: dastore
128: dup
129: iconst_1
130: ldc2_w        #21
133: dastore
134: dup
135: iconst_2
136: dconst_1
137: dastore
138: astore        12
140: new           #23
143: dup
144: aload         12
146: iconst_1
147: invokespecial #24
150: astore        13
152: aload         13
154: iconst_0
155: invokevirtual #25
158: astore        14
160: iconst_3
161: newarray       double
163: dup
164: iconst_0
165: dconst_1
166: dastore
167: dup
168: iconst_1
169: ldc2_w        #21
172: dastore
173: dup
174: iconst_2
175: dconst_1
176: dastore
177: astore        15
179: new           #23
182: dup
183: aload         15
185: iconst_1
186: invokespecial #24
189: astore        16
191: iconst_3
192: newarray       double
194: dup
195: iconst_0
196: dconst_1
197: dastore
198: dup
199: iconst_1
200: ldc2_w        #21
203: dastore
204: dup
205: iconst_2
206: dconst_1
207: dastore
208: astore        17
210: new           #23
213: dup
214: aload         17
216: iconst_1
217: invokespecial #24
220: astore        18
222: aload         16
224: aload         17
226: invokevirtual #26
229: astore        19
231: aload         13
233: aload         19
235: invokevirtual #27
238: astore        20
240: new           #23
243: dup
244: aload         19
246: invokespecial #28
249: astore        21
251: iconst_3
252: newarray       double
254: dup
255: iconst_0
256: dconst_1
257: dastore
258: dup
259: iconst_1
260: ldc2_w        #21
263: dastore
264: dup
265: iconst_2
266: dconst_1
267: dastore
268: astore        22
270: new           #23
273: dup
274: aload         22
276: iconst_1
277: invokespecial #24
280: astore        23
282: aload         23
284: iconst_0
285: invokevirtual #25
288: astore        24
290: iconst_3
291: newarray       double
293: dup
294: iconst_0
295: dconst_1
296: dastore
297: dup
298: iconst_1
299: ldc2_w        #21
302: dastore
303: dup
304: iconst_2
305: dconst_1
306: dastore
307: astore        25
309: new           #23
312: dup
313: aload         25
315: iconst_1
316: invokespecial #24
319: astore        26
321: iconst_3
322: newarray       double
324: dup
325: iconst_0
326: dconst_1
327: dastore
328: dup
329: iconst_1
330: ldc2_w        #21
333: dastore
334: dup
335: iconst_2
336: dconst_1
337: dastore
338: astore        27
340: new           #23
343: dup
344: aload         27
346: iconst_1
347: invokespecial #24
350: astore        28
352: aload         26
354: aload         27
356: invokevirtual #26
359: astore        29
361: aload         23
363: aload         29
365: invokevirtual #27
368: astore        30
370: aload         21
372: aload         30
374: invokevirtual #27
377: astore        31
379: aload         4
381: dconst_0
382: aload         31
384: invokevirtual #121
387: dstore        32
389: iconst_1
390: newarray       double
392: dup
393: iconst_0
394: ldc2_w        #45
397: dastore
398: astore        34
400: aload         34
402: invokestatic  #47
405: astore        35
407: iconst_1
408: newarray       double
410: dup
411: iconst_0
412: ldc2_w        #45
415: dastore
416: astore        36
418: aload         36
420: invokestatic  #47
423: astore        37
425: new           #48
428: dup
429: aload         34
431: aload         36
433: invokespecial #49
436: astore        38
438: aload_2
439: iconst_3
440: aload         4
442: aload         36
444: invokevirtual #109
447: astore        39
449: ldc           #12
451: invokestatic  #13
454: goto          459
457: astore        39
459: aload_3
460: invokestatic  #35
463: aload         5
465: invokestatic  #35
468: aload         5
470: invokestatic  #36
473: ldc           #37
475: invokestatic  #38
478: aload         9
480: invokestatic  #35
483: aload         9
485: invokestatic  #36
488: ldc           #37
490: invokestatic  #38
493: new           #52
496: dup
497: invokespecial #53
500: ldc           #54
502: invokevirtual #55
505: dload         10
507: invokevirtual #80
510: ldc           #57
512: invokevirtual #55
515: dconst_1
516: invokevirtual #80
519: ldc           #54
521: invokevirtual #55
524: invokevirtual #58
527: dload         10
529: dconst_1
530: dcmpl
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #59
542: aload         12
544: invokestatic  #35
547: aload         12
549: invokestatic  #36
552: ldc           #37
554: invokestatic  #38
557: aload         14
559: invokestatic  #35
562: aload         15
564: invokestatic  #35
567: aload         15
569: invokestatic  #36
572: ldc           #37
574: invokestatic  #38
577: aload         17
579: invokestatic  #35
582: aload         17
584: invokestatic  #36
587: ldc           #37
589: invokestatic  #38
592: aload         19
594: invokestatic  #35
597: aload         19
599: invokestatic  #36
602: ldc           #39
604: invokestatic  #38
607: aload         20
609: invokestatic  #35
612: aload         20
614: invokestatic  #36
617: ldc           #40
619: invokestatic  #38
622: aload         22
624: invokestatic  #35
627: aload         22
629: invokestatic  #36
632: ldc           #37
634: invokestatic  #38
637: aload         24
639: invokestatic  #35
642: aload         25
644: invokestatic  #35
647: aload         25
649: invokestatic  #36
652: ldc           #37
654: invokestatic  #38
657: aload         27
659: invokestatic  #35
662: aload         27
664: invokestatic  #36
667: ldc           #37
669: invokestatic  #38
672: aload         29
674: invokestatic  #35
677: aload         29
679: invokestatic  #36
682: ldc           #39
684: invokestatic  #38
687: aload         30
689: invokestatic  #35
692: aload         30
694: invokestatic  #36
697: ldc           #40
699: invokestatic  #38
702: aload         31
704: invokestatic  #35
707: aload         31
709: invokestatic  #36
712: ldc           #221
714: invokestatic  #38
717: new           #52
720: dup
721: invokespecial #53
724: ldc           #54
726: invokevirtual #55
729: dload         32
731: invokevirtual #80
734: ldc           #57
736: invokevirtual #55
739: dconst_1
740: invokevirtual #80
743: ldc           #54
745: invokevirtual #55
748: invokevirtual #58
751: dload         32
753: dconst_1
754: dcmpl
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #59
766: aload         34
768: invokestatic  #35
771: aload         34
773: invokestatic  #36
776: ldc           #60
778: invokestatic  #38
781: aload         35
783: invokestatic  #35
786: aload         36
788: invokestatic  #35
791: aload         36
793: invokestatic  #36
796: ldc           #60
798: invokestatic  #38
801: aload         37
803: invokestatic  #35
806: return
Exception table:
from    to  target type
438   454   457   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 5007
End line: 5022
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(1.1102230246251565E-16d, (double) 99.99999f, (double) 4);
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter4 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint8 = new org.apache.commons.math3.fitting.WeightedObservedPoint(100.0d, 0.0d, (double) 100L);
        double double9 = weightedObservedPoint8.getX();
        double double10 = weightedObservedPoint8.getWeight();
        double double11 = weightedObservedPoint8.getWeight();
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(weightedObservedPoint8);
        org.apache.commons.math3.fitting.WeightedObservedPoint weightedObservedPoint13 = null;
        parametricUnivariateFunctionCurveFitter4.addObservedPoint(weightedObservedPoint13);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #527
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #181
32: ldc2_w        #183
35: ldc2_w        #151
38: invokespecial #153
41: astore_1
42: new           #91
45: dup
46: aload_1
47: invokespecial #92
50: astore_2
51: new           #113
54: dup
55: ldc2_w        #21
58: dconst_0
59: ldc2_w        #21
62: invokespecial #114
65: astore_3
66: aload_3
67: invokevirtual #116
70: dstore        4
72: aload_3
73: invokevirtual #275
76: dstore        6
78: aload_3
79: invokevirtual #275
82: dstore        8
84: aload_2
85: aload_3
86: invokevirtual #115
89: aconst_null
90: astore        10
92: aload_2
93: aload         10
95: invokevirtual #115
98: new           #52
101: dup
102: invokespecial #53
105: ldc           #54
107: invokevirtual #55
110: dload         4
112: invokevirtual #80
115: ldc           #57
117: invokevirtual #55
120: dconst_0
121: invokevirtual #80
124: ldc           #54
126: invokevirtual #55
129: invokevirtual #58
132: dload         4
134: dconst_0
135: dcmpl
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #59
147: new           #52
150: dup
151: invokespecial #53
154: ldc           #54
156: invokevirtual #55
159: dload         6
161: invokevirtual #80
164: ldc           #57
166: invokevirtual #55
169: ldc2_w        #21
172: invokevirtual #80
175: ldc           #54
177: invokevirtual #55
180: invokevirtual #58
183: dload         6
185: ldc2_w        #21
188: dcmpl
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #59
200: new           #52
203: dup
204: invokespecial #53
207: ldc           #54
209: invokevirtual #55
212: dload         8
214: invokevirtual #80
217: ldc           #57
219: invokevirtual #55
222: ldc2_w        #21
225: invokevirtual #80
228: ldc           #54
230: invokevirtual #55
233: invokevirtual #58
236: dload         8
238: ldc2_w        #21
241: dcmpl
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #59
253: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 5025
End line: 5039
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        int int6 = levenbergMarquardtOptimizer3.getEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer3.getLowerBound();
        org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction> parametricUnivariateFunctionCurveFitter8 = new org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.ParametricUnivariateFunction>((org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer) levenbergMarquardtOptimizer3);
        parametricUnivariateFunctionCurveFitter8.addObservedPoint(0.6044128976724817d, (double) 100.0f);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #528
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #83
51: astore_3
52: aload_1
53: invokevirtual #208
56: istore        4
58: aload_1
59: invokevirtual #10
62: astore        5
64: new           #91
67: dup
68: aload_1
69: invokespecial #92
72: astore        6
74: aload         6
76: ldc2_w        #529
79: ldc2_w        #21
82: invokevirtual #367
85: aload_2
86: invokestatic  #15
89: aload_3
90: invokestatic  #15
93: new           #52
96: dup
97: invokespecial #53
100: ldc           #54
102: invokevirtual #55
105: iload         4
107: invokevirtual #56
110: ldc           #57
112: invokevirtual #55
115: iconst_0
116: invokevirtual #56
119: ldc           #54
121: invokevirtual #55
124: invokevirtual #58
127: iload         4
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #59
140: aload         5
142: invokestatic  #15
145: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 5042
End line: 5059
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        double[] doubleArray1 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix2 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        double[] doubleArray4 = new double[] { 10L };
        org.apache.commons.math3.linear.RealMatrix realMatrix5 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray4);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector6 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray1, doubleArray4);
        org.apache.commons.math3.optim.nonlinear.vector.Weight weight7 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray4);
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = weight7.getWeight();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix2);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0]");
        org.junit.Assert.assertNotNull(realMatrix5);
        org.junit.Assert.assertNotNull(realMatrix8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #531
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #45
33: dastore
34: astore_1
35: aload_1
36: invokestatic  #47
39: astore_2
40: iconst_1
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #45
48: dastore
49: astore_3
50: aload_3
51: invokestatic  #47
54: astore        4
56: new           #48
59: dup
60: aload_1
61: aload_3
62: invokespecial #49
65: astore        5
67: new           #30
70: dup
71: aload_3
72: invokespecial #74
75: astore        6
77: aload         6
79: invokevirtual #75
82: astore        7
84: aload_1
85: invokestatic  #35
88: aload_1
89: invokestatic  #36
92: ldc           #60
94: invokestatic  #38
97: aload_2
98: invokestatic  #35
101: aload_3
102: invokestatic  #35
105: aload_3
106: invokestatic  #36
109: ldc           #60
111: invokestatic  #38
114: aload         4
116: invokestatic  #35
119: aload         7
121: invokestatic  #35
124: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 5062
End line: 5073
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optim.nonlinear.vector.Weight weight1 = new org.apache.commons.math3.optim.nonlinear.vector.Weight(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #532
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #30
30: dup
31: aload_1
32: invokespecial #74
35: astore_2
36: ldc           #12
38: invokestatic  #13
41: goto          45
44: astore_2
45: return
Exception table:
from    to  target type
27    41    44   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 5076
End line: 5094
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> pointVectorValuePairConvergenceChecker0 = null;
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer gaussNewtonOptimizer1 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer(pointVectorValuePairConvergenceChecker0);
        int int2 = gaussNewtonOptimizer1.getIterations();
        double[] doubleArray3 = gaussNewtonOptimizer1.getStartPoint();
        int int4 = gaussNewtonOptimizer1.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix5 = gaussNewtonOptimizer1.getWeight();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #533
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #62
30: dup
31: aload_1
32: invokespecial #63
35: astore_2
36: aload_2
37: invokevirtual #228
40: istore_3
41: aload_2
42: invokevirtual #248
45: astore        4
47: aload_2
48: invokevirtual #235
51: istore        5
53: aload_2
54: invokevirtual #534
57: astore        6
59: ldc           #12
61: invokestatic  #13
64: goto          69
67: astore        6
69: new           #52
72: dup
73: invokespecial #53
76: ldc           #54
78: invokevirtual #55
81: iload_3
82: invokevirtual #56
85: ldc           #57
87: invokevirtual #55
90: iconst_0
91: invokevirtual #56
94: ldc           #54
96: invokevirtual #55
99: invokevirtual #58
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #59
114: aload         4
116: invokestatic  #15
119: new           #52
122: dup
123: invokespecial #53
126: ldc           #54
128: invokevirtual #55
131: iload         5
133: invokevirtual #56
136: ldc           #57
138: invokevirtual #55
141: iconst_0
142: invokevirtual #56
145: ldc           #54
147: invokevirtual #55
150: invokevirtual #58
153: iload         5
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #59
166: return
Exception table:
from    to  target type
53    64    67   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 5097
End line: 5115
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer((double) (-1L), (double) 10, 0.6483608274590866d);
        double[] doubleArray4 = levenbergMarquardtOptimizer3.getLowerBound();
        double[] doubleArray5 = levenbergMarquardtOptimizer3.getStartPoint();
        int int6 = levenbergMarquardtOptimizer3.getEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer3.getLowerBound();
        int int8 = levenbergMarquardtOptimizer3.getMaxIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer3.getUpperBound();
        int int10 = levenbergMarquardtOptimizer3.getEvaluations();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #535
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #65
32: ldc2_w        #45
35: ldc2_w        #206
38: invokespecial #153
41: astore_1
42: aload_1
43: invokevirtual #10
46: astore_2
47: aload_1
48: invokevirtual #83
51: astore_3
52: aload_1
53: invokevirtual #208
56: istore        4
58: aload_1
59: invokevirtual #10
62: astore        5
64: aload_1
65: invokevirtual #127
68: istore        6
70: aload_1
71: invokevirtual #231
74: astore        7
76: aload_1
77: invokevirtual #208
80: istore        8
82: aload_2
83: invokestatic  #15
86: aload_3
87: invokestatic  #15
90: new           #52
93: dup
94: invokespecial #53
97: ldc           #54
99: invokevirtual #55
102: iload         4
104: invokevirtual #56
107: ldc           #57
109: invokevirtual #55
112: iconst_0
113: invokevirtual #56
116: ldc           #54
118: invokevirtual #55
121: invokevirtual #58
124: iload         4
126: ifne          133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #59
137: aload         5
139: invokestatic  #15
142: new           #52
145: dup
146: invokespecial #53
149: ldc           #54
151: invokevirtual #55
154: iload         6
156: invokevirtual #56
159: ldc           #57
161: invokevirtual #55
164: iconst_0
165: invokevirtual #56
168: ldc           #54
170: invokevirtual #55
173: invokevirtual #58
176: iload         6
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #59
189: aload         7
191: invokestatic  #15
194: new           #52
197: dup
198: invokespecial #53
201: ldc           #54
203: invokevirtual #55
206: iload         8
208: invokevirtual #56
211: ldc           #57
213: invokevirtual #55
216: iconst_0
217: invokevirtual #56
220: ldc           #54
222: invokevirtual #55
225: invokevirtual #58
228: iload         8
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #59
241: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.class
Class name: AbstractLeastSquaresOptimizerTest
Method name: testGetChiSquare
Start line: 40
End line: 55
Method source code: 
    public void testGetChiSquare() throws IOException {
        final StatisticalReferenceDataset dataset;
        dataset = StatisticalReferenceDatasetFactory.createKirby2();
        final AbstractLeastSquaresOptimizer optimizer;
        optimizer = createOptimizer();
        final double[] a = dataset.getParameters();
        final double[] y = dataset.getData()[1];
        final double[] w = new double[y.length];
        Arrays.fill(w, 1.0);

        optimizer.optimize(1, dataset.getLeastSquaresProblem(), y, w, a);
        final double expected = dataset.getResidualSumOfSquares();
        final double actual = optimizer.getChiSquare();
        Assert.assertEquals(dataset.getName(), expected, actual,
                            1E-11 * expected);
    }
Method byte code: 
0: invokestatic  #4
3: astore_1
4: invokestatic  #5
7: astore_2
8: aload_1
9: invokevirtual #6
12: astore_3
13: aload_1
14: invokevirtual #7
17: iconst_1
18: aaload
19: astore        4
21: aload         4
23: arraylength
24: newarray       double
26: astore        5
28: aload         5
30: dconst_1
31: invokestatic  #8
34: aload_2
35: iconst_1
36: aload_1
37: invokevirtual #9
40: aload         4
42: aload         5
44: aload_3
45: invokevirtual #10
48: pop
49: aload_1
50: invokevirtual #11
53: dstore        6
55: aload_2
56: invokevirtual #12
59: dstore        8
61: aload_1
62: invokevirtual #13
65: dload         6
67: dload         8
69: ldc2_w        #14
72: dload         6
74: dmul
75: invokestatic  #16
78: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.class
Class name: AbstractLeastSquaresOptimizerTest
Method name: testGetRMS
Start line: 58
End line: 75
Method source code: 
    public void testGetRMS() throws IOException {
        final StatisticalReferenceDataset dataset;
        dataset = StatisticalReferenceDatasetFactory.createKirby2();
        final AbstractLeastSquaresOptimizer optimizer;
        optimizer = createOptimizer();
        final double[] a = dataset.getParameters();
        final double[] y = dataset.getData()[1];
        final double[] w = new double[y.length];
        Arrays.fill(w, 1.0);

        optimizer.optimize(1, dataset.getLeastSquaresProblem(), y, w, a);
        final double expected = FastMath
            .sqrt(dataset.getResidualSumOfSquares() /
                  dataset.getNumObservations());
        final double actual = optimizer.getRMS();
        Assert.assertEquals(dataset.getName(), expected, actual,
                            1E-11 * expected);
    }
Method byte code: 
0: invokestatic  #4
3: astore_1
4: invokestatic  #5
7: astore_2
8: aload_1
9: invokevirtual #6
12: astore_3
13: aload_1
14: invokevirtual #7
17: iconst_1
18: aaload
19: astore        4
21: aload         4
23: arraylength
24: newarray       double
26: astore        5
28: aload         5
30: dconst_1
31: invokestatic  #8
34: aload_2
35: iconst_1
36: aload_1
37: invokevirtual #9
40: aload         4
42: aload         5
44: aload_3
45: invokevirtual #10
48: pop
49: aload_1
50: invokevirtual #11
53: aload_1
54: invokevirtual #17
57: i2d
58: ddiv
59: invokestatic  #18
62: dstore        6
64: aload_2
65: invokevirtual #19
68: dstore        8
70: aload_1
71: invokevirtual #13
74: dload         6
76: dload         8
78: ldc2_w        #14
81: dload         6
83: dmul
84: invokestatic  #16
87: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.class
Class name: AbstractLeastSquaresOptimizerTest
Method name: testComputeSigma
Start line: 78
End line: 97
Method source code: 
    public void testComputeSigma() throws IOException {
        final StatisticalReferenceDataset dataset;
        dataset = StatisticalReferenceDatasetFactory.createKirby2();
        final AbstractLeastSquaresOptimizer optimizer;
        optimizer = createOptimizer();
        final double[] a = dataset.getParameters();
        final double[] y = dataset.getData()[1];
        final double[] w = new double[y.length];
        Arrays.fill(w, 1.0);

        final int dof = y.length - a.length;
        final PointVectorValuePair optimum = optimizer.optimize(1, dataset.getLeastSquaresProblem(), y, w, a);
        final double[] sig = optimizer.computeSigma(optimum.getPoint(), 1e-14);
        final double[] expected = dataset.getParametersStandardDeviations();
        for (int i = 0; i < sig.length; i++) {
            final double actual = FastMath.sqrt(optimizer.getChiSquare() / dof) * sig[i];
            Assert.assertEquals(dataset.getName() + ", parameter #" + i,
                                expected[i], actual, 1e-7 * expected[i]);
        }
    }
Method byte code: 
0: invokestatic  #4
3: astore_1
4: invokestatic  #5
7: astore_2
8: aload_1
9: invokevirtual #6
12: astore_3
13: aload_1
14: invokevirtual #7
17: iconst_1
18: aaload
19: astore        4
21: aload         4
23: arraylength
24: newarray       double
26: astore        5
28: aload         5
30: dconst_1
31: invokestatic  #8
34: aload         4
36: arraylength
37: aload_3
38: arraylength
39: isub
40: istore        6
42: aload_2
43: iconst_1
44: aload_1
45: invokevirtual #9
48: aload         4
50: aload         5
52: aload_3
53: invokevirtual #10
56: astore        7
58: aload_2
59: aload         7
61: invokevirtual #20
64: ldc2_w        #21
67: invokevirtual #23
70: astore        8
72: aload_1
73: invokevirtual #24
76: astore        9
78: iconst_0
79: istore        10
81: iload         10
83: aload         8
85: arraylength
86: if_icmpge     160
89: aload_2
90: invokevirtual #12
93: iload         6
95: i2d
96: ddiv
97: invokestatic  #18
100: aload         8
102: iload         10
104: daload
105: dmul
106: dstore        11
108: new           #25
111: dup
112: invokespecial #26
115: aload_1
116: invokevirtual #13
119: invokevirtual #27
122: ldc           #28
124: invokevirtual #27
127: iload         10
129: invokevirtual #29
132: invokevirtual #30
135: aload         9
137: iload         10
139: daload
140: dload         11
142: ldc2_w        #31
145: aload         9
147: iload         10
149: daload
150: dmul
151: invokestatic  #16
154: iinc          10, 1
157: goto          81
160: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testTrivial
Start line: 103
End line: 118
Method source code: 
    public void testTrivial() {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1 }, new double[] { 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(1.5, optimum.getPoint()[0], 1.0e-10);
        Assert.assertEquals(3.0, optimum.getValue()[0], 1.0e-10);
        try {
            optimizer.guessParametersErrors();
            Assert.fail("an exception should have been thrown");
        } catch (NumberIsTooSmallException ee) {
            // expected behavior
        }
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_1
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_1
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #353
18: dastore
19: aastore
20: iconst_1
21: newarray       double
23: dup
24: iconst_0
25: ldc2_w        #355
28: dastore
29: invokespecial #357
32: astore_1
33: aload_0
34: invokevirtual #358
37: astore_2
38: aload_2
39: bipush        100
41: aload_1
42: aload_1
43: getfield      #359
46: iconst_1
47: newarray       double
49: dup
50: iconst_0
51: dconst_1
52: dastore
53: iconst_1
54: newarray       double
56: dup
57: iconst_0
58: dconst_0
59: dastore
60: invokevirtual #360
63: astore_3
64: dconst_0
65: aload_2
66: invokevirtual #361
69: ldc2_w        #362
72: invokestatic  #364
75: ldc2_w        #365
78: aload_3
79: invokevirtual #367
82: iconst_0
83: daload
84: ldc2_w        #362
87: invokestatic  #364
90: ldc2_w        #355
93: aload_3
94: invokevirtual #368
97: iconst_0
98: daload
99: ldc2_w        #362
102: invokestatic  #364
105: aload_2
106: invokevirtual #369
109: pop
110: ldc_w         #370
113: invokestatic  #371
116: goto          121
119: astore        4
121: return
Exception table:
from    to  target type
105   116   119   Class org/apache/commons/math3/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testQRColumnsPermutation
Start line: 121
End line: 136
Method source code: 
    public void testQRColumnsPermutation() {

        LinearProblem problem =
            new LinearProblem(new double[][] { { 1.0, -1.0 }, { 0.0, 2.0 }, { 1.0, -2.0 } },
                              new double[] { 4.0, 6.0, 1.0 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(7.0, optimum.getPoint()[0], 1.0e-10);
        Assert.assertEquals(3.0, optimum.getPoint()[1], 1.0e-10);
        Assert.assertEquals(4.0, optimum.getValue()[0], 1.0e-10);
        Assert.assertEquals(6.0, optimum.getValue()[1], 1.0e-10);
        Assert.assertEquals(1.0, optimum.getValue()[2], 1.0e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #373
22: dastore
23: aastore
24: dup
25: iconst_1
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #353
38: dastore
39: aastore
40: dup
41: iconst_2
42: iconst_2
43: newarray       double
45: dup
46: iconst_0
47: dconst_1
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #375
54: dastore
55: aastore
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: ldc2_w        #377
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #379
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: invokespecial #357
78: astore_1
79: aload_0
80: invokevirtual #358
83: astore_2
84: aload_2
85: bipush        100
87: aload_1
88: aload_1
89: getfield      #359
92: iconst_3
93: newarray       double
95: dup
96: iconst_0
97: dconst_1
98: dastore
99: dup
100: iconst_1
101: dconst_1
102: dastore
103: dup
104: iconst_2
105: dconst_1
106: dastore
107: iconst_2
108: newarray       double
110: dup
111: iconst_0
112: dconst_0
113: dastore
114: dup
115: iconst_1
116: dconst_0
117: dastore
118: invokevirtual #360
121: astore_3
122: dconst_0
123: aload_2
124: invokevirtual #361
127: ldc2_w        #362
130: invokestatic  #364
133: ldc2_w        #381
136: aload_3
137: invokevirtual #367
140: iconst_0
141: daload
142: ldc2_w        #362
145: invokestatic  #364
148: ldc2_w        #355
151: aload_3
152: invokevirtual #367
155: iconst_1
156: daload
157: ldc2_w        #362
160: invokestatic  #364
163: ldc2_w        #377
166: aload_3
167: invokevirtual #368
170: iconst_0
171: daload
172: ldc2_w        #362
175: invokestatic  #364
178: ldc2_w        #379
181: aload_3
182: invokevirtual #368
185: iconst_1
186: daload
187: ldc2_w        #362
190: invokestatic  #364
193: dconst_1
194: aload_3
195: invokevirtual #368
198: iconst_2
199: daload
200: ldc2_w        #362
203: invokestatic  #364
206: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testNoDependency
Start line: 139
End line: 156
Method source code: 
    public void testNoDependency() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 2, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 0, 0 },
                { 0, 0, 2, 0, 0, 0 },
                { 0, 0, 0, 2, 0, 0 },
                { 0, 0, 0, 0, 2, 0 },
                { 0, 0, 0, 0, 0, 2 }
        }, new double[] { 0.0, 1.1, 2.2, 3.3, 4.4, 5.5 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },
                               new double[] { 0, 0, 0, 0, 0, 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        for (int i = 0; i < problem.target.length; ++i) {
            Assert.assertEquals(0.55 * i, optimum.getPoint()[i], 1.0e-10);
        }
    }
Method byte code: 
0: new           #352
3: dup
4: bipush        6
6: anewarray     #2
9: dup
10: iconst_0
11: bipush        6
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #353
20: dastore
21: dup
22: iconst_1
23: dconst_0
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: dup
34: iconst_4
35: dconst_0
36: dastore
37: dup
38: iconst_5
39: dconst_0
40: dastore
41: aastore
42: dup
43: iconst_1
44: bipush        6
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #353
57: dastore
58: dup
59: iconst_2
60: dconst_0
61: dastore
62: dup
63: iconst_3
64: dconst_0
65: dastore
66: dup
67: iconst_4
68: dconst_0
69: dastore
70: dup
71: iconst_5
72: dconst_0
73: dastore
74: aastore
75: dup
76: iconst_2
77: bipush        6
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: dconst_0
88: dastore
89: dup
90: iconst_2
91: ldc2_w        #353
94: dastore
95: dup
96: iconst_3
97: dconst_0
98: dastore
99: dup
100: iconst_4
101: dconst_0
102: dastore
103: dup
104: iconst_5
105: dconst_0
106: dastore
107: aastore
108: dup
109: iconst_3
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_0
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: ldc2_w        #353
131: dastore
132: dup
133: iconst_4
134: dconst_0
135: dastore
136: dup
137: iconst_5
138: dconst_0
139: dastore
140: aastore
141: dup
142: iconst_4
143: bipush        6
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: dconst_0
154: dastore
155: dup
156: iconst_2
157: dconst_0
158: dastore
159: dup
160: iconst_3
161: dconst_0
162: dastore
163: dup
164: iconst_4
165: ldc2_w        #353
168: dastore
169: dup
170: iconst_5
171: dconst_0
172: dastore
173: aastore
174: dup
175: iconst_5
176: bipush        6
178: newarray       double
180: dup
181: iconst_0
182: dconst_0
183: dastore
184: dup
185: iconst_1
186: dconst_0
187: dastore
188: dup
189: iconst_2
190: dconst_0
191: dastore
192: dup
193: iconst_3
194: dconst_0
195: dastore
196: dup
197: iconst_4
198: dconst_0
199: dastore
200: dup
201: iconst_5
202: ldc2_w        #353
205: dastore
206: aastore
207: bipush        6
209: newarray       double
211: dup
212: iconst_0
213: dconst_0
214: dastore
215: dup
216: iconst_1
217: ldc2_w        #383
220: dastore
221: dup
222: iconst_2
223: ldc2_w        #385
226: dastore
227: dup
228: iconst_3
229: ldc2_w        #387
232: dastore
233: dup
234: iconst_4
235: ldc2_w        #389
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #391
244: dastore
245: invokespecial #357
248: astore_1
249: aload_0
250: invokevirtual #358
253: astore_2
254: aload_2
255: bipush        100
257: aload_1
258: aload_1
259: getfield      #359
262: bipush        6
264: newarray       double
266: dup
267: iconst_0
268: dconst_1
269: dastore
270: dup
271: iconst_1
272: dconst_1
273: dastore
274: dup
275: iconst_2
276: dconst_1
277: dastore
278: dup
279: iconst_3
280: dconst_1
281: dastore
282: dup
283: iconst_4
284: dconst_1
285: dastore
286: dup
287: iconst_5
288: dconst_1
289: dastore
290: bipush        6
292: newarray       double
294: dup
295: iconst_0
296: dconst_0
297: dastore
298: dup
299: iconst_1
300: dconst_0
301: dastore
302: dup
303: iconst_2
304: dconst_0
305: dastore
306: dup
307: iconst_3
308: dconst_0
309: dastore
310: dup
311: iconst_4
312: dconst_0
313: dastore
314: dup
315: iconst_5
316: dconst_0
317: dastore
318: invokevirtual #360
321: astore_3
322: dconst_0
323: aload_2
324: invokevirtual #361
327: ldc2_w        #362
330: invokestatic  #364
333: iconst_0
334: istore        4
336: iload         4
338: aload_1
339: getfield      #359
342: arraylength
343: if_icmpge     372
346: ldc2_w        #393
349: iload         4
351: i2d
352: dmul
353: aload_3
354: invokevirtual #367
357: iload         4
359: daload
360: ldc2_w        #362
363: invokestatic  #364
366: iinc          4, 1
369: goto          336
372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testOneSet
Start line: 159
End line: 173
Method source code: 
    public void testOneSet() {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1,  0, 0 },
                { -1,  1, 0 },
                {  0, -1, 1 }
        }, new double[] { 1, 1, 1});
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(1.0, optimum.getPoint()[0], 1.0e-10);
        Assert.assertEquals(2.0, optimum.getPoint()[1], 1.0e-10);
        Assert.assertEquals(3.0, optimum.getPoint()[2], 1.0e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: dup
22: iconst_2
23: dconst_0
24: dastore
25: aastore
26: dup
27: iconst_1
28: iconst_3
29: newarray       double
31: dup
32: iconst_0
33: ldc2_w        #373
36: dastore
37: dup
38: iconst_1
39: dconst_1
40: dastore
41: dup
42: iconst_2
43: dconst_0
44: dastore
45: aastore
46: dup
47: iconst_2
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #373
60: dastore
61: dup
62: iconst_2
63: dconst_1
64: dastore
65: aastore
66: iconst_3
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_1
76: dastore
77: dup
78: iconst_2
79: dconst_1
80: dastore
81: invokespecial #357
84: astore_1
85: aload_0
86: invokevirtual #358
89: astore_2
90: aload_2
91: bipush        100
93: aload_1
94: aload_1
95: getfield      #359
98: iconst_3
99: newarray       double
101: dup
102: iconst_0
103: dconst_1
104: dastore
105: dup
106: iconst_1
107: dconst_1
108: dastore
109: dup
110: iconst_2
111: dconst_1
112: dastore
113: iconst_3
114: newarray       double
116: dup
117: iconst_0
118: dconst_0
119: dastore
120: dup
121: iconst_1
122: dconst_0
123: dastore
124: dup
125: iconst_2
126: dconst_0
127: dastore
128: invokevirtual #360
131: astore_3
132: dconst_0
133: aload_2
134: invokevirtual #361
137: ldc2_w        #362
140: invokestatic  #364
143: dconst_1
144: aload_3
145: invokevirtual #367
148: iconst_0
149: daload
150: ldc2_w        #362
153: invokestatic  #364
156: ldc2_w        #353
159: aload_3
160: invokevirtual #367
163: iconst_1
164: daload
165: ldc2_w        #362
168: invokestatic  #364
171: ldc2_w        #355
174: aload_3
175: invokevirtual #367
178: iconst_2
179: daload
180: ldc2_w        #362
183: invokestatic  #364
186: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testTwoSets
Start line: 176
End line: 198
Method source code: 
    public void testTwoSets() {
        double epsilon = 1.0e-7;
        LinearProblem problem = new LinearProblem(new double[][] {
                {  2,  1,   0,  4,       0, 0 },
                { -4, -2,   3, -7,       0, 0 },
                {  4,  1,  -2,  8,       0, 0 },
                {  0, -3, -12, -1,       0, 0 },
                {  0,  0,   0,  0, epsilon, 1 },
                {  0,  0,   0,  0,       1, 1 }
        }, new double[] { 2, -9, 2, 2, 1 + epsilon * epsilon, 2});

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },
                               new double[] { 0, 0, 0, 0, 0, 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals( 3.0, optimum.getPoint()[0], 1.0e-10);
        Assert.assertEquals( 4.0, optimum.getPoint()[1], 1.0e-10);
        Assert.assertEquals(-1.0, optimum.getPoint()[2], 1.0e-10);
        Assert.assertEquals(-2.0, optimum.getPoint()[3], 1.0e-10);
        Assert.assertEquals( 1.0 + epsilon, optimum.getPoint()[4], 1.0e-10);
        Assert.assertEquals( 1.0 - epsilon, optimum.getPoint()[5], 1.0e-10);
    }
Method byte code: 
0: ldc2_w        #395
3: dstore_1
4: new           #352
7: dup
8: bipush        6
10: anewarray     #2
13: dup
14: iconst_0
15: bipush        6
17: newarray       double
19: dup
20: iconst_0
21: ldc2_w        #353
24: dastore
25: dup
26: iconst_1
27: dconst_1
28: dastore
29: dup
30: iconst_2
31: dconst_0
32: dastore
33: dup
34: iconst_3
35: ldc2_w        #377
38: dastore
39: dup
40: iconst_4
41: dconst_0
42: dastore
43: dup
44: iconst_5
45: dconst_0
46: dastore
47: aastore
48: dup
49: iconst_1
50: bipush        6
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #397
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #375
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #355
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #399
77: dastore
78: dup
79: iconst_4
80: dconst_0
81: dastore
82: dup
83: iconst_5
84: dconst_0
85: dastore
86: aastore
87: dup
88: iconst_2
89: bipush        6
91: newarray       double
93: dup
94: iconst_0
95: ldc2_w        #377
98: dastore
99: dup
100: iconst_1
101: dconst_1
102: dastore
103: dup
104: iconst_2
105: ldc2_w        #375
108: dastore
109: dup
110: iconst_3
111: ldc2_w        #401
114: dastore
115: dup
116: iconst_4
117: dconst_0
118: dastore
119: dup
120: iconst_5
121: dconst_0
122: dastore
123: aastore
124: dup
125: iconst_3
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #403
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #405
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #373
151: dastore
152: dup
153: iconst_4
154: dconst_0
155: dastore
156: dup
157: iconst_5
158: dconst_0
159: dastore
160: aastore
161: dup
162: iconst_4
163: bipush        6
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: dup
172: iconst_1
173: dconst_0
174: dastore
175: dup
176: iconst_2
177: dconst_0
178: dastore
179: dup
180: iconst_3
181: dconst_0
182: dastore
183: dup
184: iconst_4
185: dload_1
186: dastore
187: dup
188: iconst_5
189: dconst_1
190: dastore
191: aastore
192: dup
193: iconst_5
194: bipush        6
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: dup
203: iconst_1
204: dconst_0
205: dastore
206: dup
207: iconst_2
208: dconst_0
209: dastore
210: dup
211: iconst_3
212: dconst_0
213: dastore
214: dup
215: iconst_4
216: dconst_1
217: dastore
218: dup
219: iconst_5
220: dconst_1
221: dastore
222: aastore
223: bipush        6
225: newarray       double
227: dup
228: iconst_0
229: ldc2_w        #353
232: dastore
233: dup
234: iconst_1
235: ldc2_w        #407
238: dastore
239: dup
240: iconst_2
241: ldc2_w        #353
244: dastore
245: dup
246: iconst_3
247: ldc2_w        #353
250: dastore
251: dup
252: iconst_4
253: dconst_1
254: dload_1
255: dload_1
256: dmul
257: dadd
258: dastore
259: dup
260: iconst_5
261: ldc2_w        #353
264: dastore
265: invokespecial #357
268: astore_3
269: aload_0
270: invokevirtual #358
273: astore        4
275: aload         4
277: bipush        100
279: aload_3
280: aload_3
281: getfield      #359
284: bipush        6
286: newarray       double
288: dup
289: iconst_0
290: dconst_1
291: dastore
292: dup
293: iconst_1
294: dconst_1
295: dastore
296: dup
297: iconst_2
298: dconst_1
299: dastore
300: dup
301: iconst_3
302: dconst_1
303: dastore
304: dup
305: iconst_4
306: dconst_1
307: dastore
308: dup
309: iconst_5
310: dconst_1
311: dastore
312: bipush        6
314: newarray       double
316: dup
317: iconst_0
318: dconst_0
319: dastore
320: dup
321: iconst_1
322: dconst_0
323: dastore
324: dup
325: iconst_2
326: dconst_0
327: dastore
328: dup
329: iconst_3
330: dconst_0
331: dastore
332: dup
333: iconst_4
334: dconst_0
335: dastore
336: dup
337: iconst_5
338: dconst_0
339: dastore
340: invokevirtual #360
343: astore        5
345: dconst_0
346: aload         4
348: invokevirtual #361
351: ldc2_w        #362
354: invokestatic  #364
357: ldc2_w        #355
360: aload         5
362: invokevirtual #367
365: iconst_0
366: daload
367: ldc2_w        #362
370: invokestatic  #364
373: ldc2_w        #377
376: aload         5
378: invokevirtual #367
381: iconst_1
382: daload
383: ldc2_w        #362
386: invokestatic  #364
389: ldc2_w        #373
392: aload         5
394: invokevirtual #367
397: iconst_2
398: daload
399: ldc2_w        #362
402: invokestatic  #364
405: ldc2_w        #375
408: aload         5
410: invokevirtual #367
413: iconst_3
414: daload
415: ldc2_w        #362
418: invokestatic  #364
421: dconst_1
422: dload_1
423: dadd
424: aload         5
426: invokevirtual #367
429: iconst_4
430: daload
431: ldc2_w        #362
434: invokestatic  #364
437: dconst_1
438: dload_1
439: dsub
440: aload         5
442: invokevirtual #367
445: iconst_5
446: daload
447: ldc2_w        #362
450: invokestatic  #364
453: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testNonInvertible
Start line: 201
End line: 212
Method source code: 
    public void testNonInvertible() throws Exception {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1, 2, -3 },
                {  2, 1,  3 },
                { -3, 0, -9 }
        }, new double[] { 1, 1, 1 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();

        optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #353
22: dastore
23: dup
24: iconst_2
25: ldc2_w        #403
28: dastore
29: aastore
30: dup
31: iconst_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #353
40: dastore
41: dup
42: iconst_1
43: dconst_1
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #355
50: dastore
51: aastore
52: dup
53: iconst_2
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #403
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #407
72: dastore
73: aastore
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_1
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: invokespecial #357
92: astore_1
93: aload_0
94: invokevirtual #358
97: astore_2
98: aload_2
99: bipush        100
101: aload_1
102: aload_1
103: getfield      #359
106: iconst_3
107: newarray       double
109: dup
110: iconst_0
111: dconst_1
112: dastore
113: dup
114: iconst_1
115: dconst_1
116: dastore
117: dup
118: iconst_2
119: dconst_1
120: dastore
121: iconst_3
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: dup
129: iconst_1
130: dconst_0
131: dastore
132: dup
133: iconst_2
134: dconst_0
135: dastore
136: invokevirtual #360
139: pop
140: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testIllConditioned
Start line: 215
End line: 246
Method source code: 
    public void testIllConditioned() {
        LinearProblem problem1 = new LinearProblem(new double[][] {
                { 10.0, 7.0,  8.0,  7.0 },
                {  7.0, 5.0,  6.0,  5.0 },
                {  8.0, 6.0, 10.0,  9.0 },
                {  7.0, 5.0,  9.0, 10.0 }
        }, new double[] { 32, 23, 33, 31 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum1 =
            optimizer.optimize(100, problem1, problem1.target, new double[] { 1, 1, 1, 1 },
                               new double[] { 0, 1, 2, 3 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(1.0, optimum1.getPoint()[0], 1.0e-10);
        Assert.assertEquals(1.0, optimum1.getPoint()[1], 1.0e-10);
        Assert.assertEquals(1.0, optimum1.getPoint()[2], 1.0e-10);
        Assert.assertEquals(1.0, optimum1.getPoint()[3], 1.0e-10);

        LinearProblem problem2 = new LinearProblem(new double[][] {
                { 10.00, 7.00, 8.10, 7.20 },
                {  7.08, 5.04, 6.00, 5.00 },
                {  8.00, 5.98, 9.89, 9.00 },
                {  6.99, 4.99, 9.00, 9.98 }
        }, new double[] { 32, 23, 33, 31 });
        PointVectorValuePair optimum2 =
            optimizer.optimize(100, problem2, problem2.target, new double[] { 1, 1, 1, 1 },
                               new double[] { 0, 1, 2, 3 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(-81.0, optimum2.getPoint()[0], 1.0e-8);
        Assert.assertEquals(137.0, optimum2.getPoint()[1], 1.0e-8);
        Assert.assertEquals(-34.0, optimum2.getPoint()[2], 1.0e-8);
        Assert.assertEquals( 22.0, optimum2.getPoint()[3], 1.0e-8);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_4
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #409
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #381
24: dastore
25: dup
26: iconst_2
27: ldc2_w        #401
30: dastore
31: dup
32: iconst_3
33: ldc2_w        #381
36: dastore
37: aastore
38: dup
39: iconst_1
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #381
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #411
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #379
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #411
66: dastore
67: aastore
68: dup
69: iconst_2
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #401
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #379
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #409
90: dastore
91: dup
92: iconst_3
93: ldc2_w        #413
96: dastore
97: aastore
98: dup
99: iconst_3
100: iconst_4
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #381
108: dastore
109: dup
110: iconst_1
111: ldc2_w        #411
114: dastore
115: dup
116: iconst_2
117: ldc2_w        #413
120: dastore
121: dup
122: iconst_3
123: ldc2_w        #409
126: dastore
127: aastore
128: iconst_4
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #415
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #417
142: dastore
143: dup
144: iconst_2
145: ldc2_w        #419
148: dastore
149: dup
150: iconst_3
151: ldc2_w        #421
154: dastore
155: invokespecial #357
158: astore_1
159: aload_0
160: invokevirtual #358
163: astore_2
164: aload_2
165: bipush        100
167: aload_1
168: aload_1
169: getfield      #359
172: iconst_4
173: newarray       double
175: dup
176: iconst_0
177: dconst_1
178: dastore
179: dup
180: iconst_1
181: dconst_1
182: dastore
183: dup
184: iconst_2
185: dconst_1
186: dastore
187: dup
188: iconst_3
189: dconst_1
190: dastore
191: iconst_4
192: newarray       double
194: dup
195: iconst_0
196: dconst_0
197: dastore
198: dup
199: iconst_1
200: dconst_1
201: dastore
202: dup
203: iconst_2
204: ldc2_w        #353
207: dastore
208: dup
209: iconst_3
210: ldc2_w        #355
213: dastore
214: invokevirtual #360
217: astore_3
218: dconst_0
219: aload_2
220: invokevirtual #361
223: ldc2_w        #362
226: invokestatic  #364
229: dconst_1
230: aload_3
231: invokevirtual #367
234: iconst_0
235: daload
236: ldc2_w        #362
239: invokestatic  #364
242: dconst_1
243: aload_3
244: invokevirtual #367
247: iconst_1
248: daload
249: ldc2_w        #362
252: invokestatic  #364
255: dconst_1
256: aload_3
257: invokevirtual #367
260: iconst_2
261: daload
262: ldc2_w        #362
265: invokestatic  #364
268: dconst_1
269: aload_3
270: invokevirtual #367
273: iconst_3
274: daload
275: ldc2_w        #362
278: invokestatic  #364
281: new           #352
284: dup
285: iconst_4
286: anewarray     #2
289: dup
290: iconst_0
291: iconst_4
292: newarray       double
294: dup
295: iconst_0
296: ldc2_w        #409
299: dastore
300: dup
301: iconst_1
302: ldc2_w        #381
305: dastore
306: dup
307: iconst_2
308: ldc2_w        #423
311: dastore
312: dup
313: iconst_3
314: ldc2_w        #425
317: dastore
318: aastore
319: dup
320: iconst_1
321: iconst_4
322: newarray       double
324: dup
325: iconst_0
326: ldc2_w        #427
329: dastore
330: dup
331: iconst_1
332: ldc2_w        #429
335: dastore
336: dup
337: iconst_2
338: ldc2_w        #379
341: dastore
342: dup
343: iconst_3
344: ldc2_w        #411
347: dastore
348: aastore
349: dup
350: iconst_2
351: iconst_4
352: newarray       double
354: dup
355: iconst_0
356: ldc2_w        #401
359: dastore
360: dup
361: iconst_1
362: ldc2_w        #431
365: dastore
366: dup
367: iconst_2
368: ldc2_w        #433
371: dastore
372: dup
373: iconst_3
374: ldc2_w        #413
377: dastore
378: aastore
379: dup
380: iconst_3
381: iconst_4
382: newarray       double
384: dup
385: iconst_0
386: ldc2_w        #435
389: dastore
390: dup
391: iconst_1
392: ldc2_w        #437
395: dastore
396: dup
397: iconst_2
398: ldc2_w        #413
401: dastore
402: dup
403: iconst_3
404: ldc2_w        #439
407: dastore
408: aastore
409: iconst_4
410: newarray       double
412: dup
413: iconst_0
414: ldc2_w        #415
417: dastore
418: dup
419: iconst_1
420: ldc2_w        #417
423: dastore
424: dup
425: iconst_2
426: ldc2_w        #419
429: dastore
430: dup
431: iconst_3
432: ldc2_w        #421
435: dastore
436: invokespecial #357
439: astore        4
441: aload_2
442: bipush        100
444: aload         4
446: aload         4
448: getfield      #359
451: iconst_4
452: newarray       double
454: dup
455: iconst_0
456: dconst_1
457: dastore
458: dup
459: iconst_1
460: dconst_1
461: dastore
462: dup
463: iconst_2
464: dconst_1
465: dastore
466: dup
467: iconst_3
468: dconst_1
469: dastore
470: iconst_4
471: newarray       double
473: dup
474: iconst_0
475: dconst_0
476: dastore
477: dup
478: iconst_1
479: dconst_1
480: dastore
481: dup
482: iconst_2
483: ldc2_w        #353
486: dastore
487: dup
488: iconst_3
489: ldc2_w        #355
492: dastore
493: invokevirtual #360
496: astore        5
498: dconst_0
499: aload_2
500: invokevirtual #361
503: ldc2_w        #362
506: invokestatic  #364
509: ldc2_w        #441
512: aload         5
514: invokevirtual #367
517: iconst_0
518: daload
519: ldc2_w        #443
522: invokestatic  #364
525: ldc2_w        #445
528: aload         5
530: invokevirtual #367
533: iconst_1
534: daload
535: ldc2_w        #443
538: invokestatic  #364
541: ldc2_w        #447
544: aload         5
546: invokevirtual #367
549: iconst_2
550: daload
551: ldc2_w        #443
554: invokestatic  #364
557: ldc2_w        #449
560: aload         5
562: invokevirtual #367
565: iconst_3
566: daload
567: ldc2_w        #443
570: invokestatic  #364
573: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testMoreEstimatedParametersSimple
Start line: 249
End line: 261
Method source code: 
    public void testMoreEstimatedParametersSimple() {

        LinearProblem problem = new LinearProblem(new double[][] {
                { 3.0, 2.0,  0.0, 0.0 },
                { 0.0, 1.0, -1.0, 1.0 },
                { 2.0, 0.0,  1.0, 0.0 }
        }, new double[] { 7.0, 3.0, 5.0 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 },
                new double[] { 7, 6, 5, 4 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #355
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #353
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: aastore
34: dup
35: iconst_1
36: iconst_4
37: newarray       double
39: dup
40: iconst_0
41: dconst_0
42: dastore
43: dup
44: iconst_1
45: dconst_1
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #373
52: dastore
53: dup
54: iconst_3
55: dconst_1
56: dastore
57: aastore
58: dup
59: iconst_2
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: ldc2_w        #353
68: dastore
69: dup
70: iconst_1
71: dconst_0
72: dastore
73: dup
74: iconst_2
75: dconst_1
76: dastore
77: dup
78: iconst_3
79: dconst_0
80: dastore
81: aastore
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #381
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #355
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #411
102: dastore
103: invokespecial #357
106: astore_1
107: aload_0
108: invokevirtual #358
111: astore_2
112: aload_2
113: bipush        100
115: aload_1
116: aload_1
117: getfield      #359
120: iconst_3
121: newarray       double
123: dup
124: iconst_0
125: dconst_1
126: dastore
127: dup
128: iconst_1
129: dconst_1
130: dastore
131: dup
132: iconst_2
133: dconst_1
134: dastore
135: iconst_4
136: newarray       double
138: dup
139: iconst_0
140: ldc2_w        #381
143: dastore
144: dup
145: iconst_1
146: ldc2_w        #379
149: dastore
150: dup
151: iconst_2
152: ldc2_w        #411
155: dastore
156: dup
157: iconst_3
158: ldc2_w        #377
161: dastore
162: invokevirtual #360
165: pop
166: dconst_0
167: aload_2
168: invokevirtual #361
171: ldc2_w        #362
174: invokestatic  #364
177: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testMoreEstimatedParametersUnsorted
Start line: 264
End line: 282
Method source code: 
    public void testMoreEstimatedParametersUnsorted() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0, 1.0,  0.0,  0.0, 0.0,  0.0 },
                { 0.0, 0.0,  1.0,  1.0, 1.0,  0.0 },
                { 0.0, 0.0,  0.0,  0.0, 1.0, -1.0 },
                { 0.0, 0.0, -1.0,  1.0, 0.0,  1.0 },
                { 0.0, 0.0,  0.0, -1.0, 1.0,  0.0 }
       }, new double[] { 3.0, 12.0, -1.0, 7.0, 1.0 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1 },
                               new double[] { 2, 2, 2, 2, 2, 2 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(3.0, optimum.getPointRef()[2], 1.0e-10);
        Assert.assertEquals(4.0, optimum.getPointRef()[3], 1.0e-10);
        Assert.assertEquals(5.0, optimum.getPointRef()[4], 1.0e-10);
        Assert.assertEquals(6.0, optimum.getPointRef()[5], 1.0e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_5
5: anewarray     #2
8: dup
9: iconst_0
10: bipush        6
12: newarray       double
14: dup
15: iconst_0
16: dconst_1
17: dastore
18: dup
19: iconst_1
20: dconst_1
21: dastore
22: dup
23: iconst_2
24: dconst_0
25: dastore
26: dup
27: iconst_3
28: dconst_0
29: dastore
30: dup
31: iconst_4
32: dconst_0
33: dastore
34: dup
35: iconst_5
36: dconst_0
37: dastore
38: aastore
39: dup
40: iconst_1
41: bipush        6
43: newarray       double
45: dup
46: iconst_0
47: dconst_0
48: dastore
49: dup
50: iconst_1
51: dconst_0
52: dastore
53: dup
54: iconst_2
55: dconst_1
56: dastore
57: dup
58: iconst_3
59: dconst_1
60: dastore
61: dup
62: iconst_4
63: dconst_1
64: dastore
65: dup
66: iconst_5
67: dconst_0
68: dastore
69: aastore
70: dup
71: iconst_2
72: bipush        6
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: dconst_0
83: dastore
84: dup
85: iconst_2
86: dconst_0
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #373
101: dastore
102: aastore
103: dup
104: iconst_3
105: bipush        6
107: newarray       double
109: dup
110: iconst_0
111: dconst_0
112: dastore
113: dup
114: iconst_1
115: dconst_0
116: dastore
117: dup
118: iconst_2
119: ldc2_w        #373
122: dastore
123: dup
124: iconst_3
125: dconst_1
126: dastore
127: dup
128: iconst_4
129: dconst_0
130: dastore
131: dup
132: iconst_5
133: dconst_1
134: dastore
135: aastore
136: dup
137: iconst_4
138: bipush        6
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: dup
147: iconst_1
148: dconst_0
149: dastore
150: dup
151: iconst_2
152: dconst_0
153: dastore
154: dup
155: iconst_3
156: ldc2_w        #373
159: dastore
160: dup
161: iconst_4
162: dconst_1
163: dastore
164: dup
165: iconst_5
166: dconst_0
167: dastore
168: aastore
169: iconst_5
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #355
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #451
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #373
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #381
195: dastore
196: dup
197: iconst_4
198: dconst_1
199: dastore
200: invokespecial #357
203: astore_1
204: aload_0
205: invokevirtual #358
208: astore_2
209: aload_2
210: bipush        100
212: aload_1
213: aload_1
214: getfield      #359
217: iconst_5
218: newarray       double
220: dup
221: iconst_0
222: dconst_1
223: dastore
224: dup
225: iconst_1
226: dconst_1
227: dastore
228: dup
229: iconst_2
230: dconst_1
231: dastore
232: dup
233: iconst_3
234: dconst_1
235: dastore
236: dup
237: iconst_4
238: dconst_1
239: dastore
240: bipush        6
242: newarray       double
244: dup
245: iconst_0
246: ldc2_w        #353
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #353
255: dastore
256: dup
257: iconst_2
258: ldc2_w        #353
261: dastore
262: dup
263: iconst_3
264: ldc2_w        #353
267: dastore
268: dup
269: iconst_4
270: ldc2_w        #353
273: dastore
274: dup
275: iconst_5
276: ldc2_w        #353
279: dastore
280: invokevirtual #360
283: astore_3
284: dconst_0
285: aload_2
286: invokevirtual #361
289: ldc2_w        #362
292: invokestatic  #364
295: ldc2_w        #355
298: aload_3
299: invokevirtual #453
302: iconst_2
303: daload
304: ldc2_w        #362
307: invokestatic  #364
310: ldc2_w        #377
313: aload_3
314: invokevirtual #453
317: iconst_3
318: daload
319: ldc2_w        #362
322: invokestatic  #364
325: ldc2_w        #411
328: aload_3
329: invokevirtual #453
332: iconst_4
333: daload
334: ldc2_w        #362
337: invokestatic  #364
340: ldc2_w        #379
343: aload_3
344: invokevirtual #453
347: iconst_5
348: daload
349: ldc2_w        #362
352: invokestatic  #364
355: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testRedundantEquations
Start line: 285
End line: 299
Method source code: 
    public void testRedundantEquations() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0,  1.0 },
                { 1.0, -1.0 },
                { 1.0,  3.0 }
        }, new double[] { 3.0, 1.0, 5.0 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 },
                               new double[] { 1, 1 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(2.0, optimum.getPointRef()[0], 1.0e-10);
        Assert.assertEquals(1.0, optimum.getPointRef()[1], 1.0e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #373
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #355
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #355
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #411
72: dastore
73: invokespecial #357
76: astore_1
77: aload_0
78: invokevirtual #358
81: astore_2
82: aload_2
83: bipush        100
85: aload_1
86: aload_1
87: getfield      #359
90: iconst_3
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: dconst_1
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: dconst_1
111: dastore
112: dup
113: iconst_1
114: dconst_1
115: dastore
116: invokevirtual #360
119: astore_3
120: dconst_0
121: aload_2
122: invokevirtual #361
125: ldc2_w        #362
128: invokestatic  #364
131: ldc2_w        #353
134: aload_3
135: invokevirtual #453
138: iconst_0
139: daload
140: ldc2_w        #362
143: invokestatic  #364
146: dconst_1
147: aload_3
148: invokevirtual #453
151: iconst_1
152: daload
153: ldc2_w        #362
156: invokestatic  #364
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testInconsistentEquations
Start line: 302
End line: 312
Method source code: 
    public void testInconsistentEquations() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0,  1.0 },
                { 1.0, -1.0 },
                { 1.0,  3.0 }
        }, new double[] { 3.0, 1.0, 4.0 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });
        Assert.assertTrue(optimizer.getRMS() > 0.1);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #373
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #355
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #355
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #377
72: dastore
73: invokespecial #357
76: astore_1
77: aload_0
78: invokevirtual #358
81: astore_2
82: aload_2
83: bipush        100
85: aload_1
86: aload_1
87: getfield      #359
90: iconst_3
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: dconst_1
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: dconst_1
111: dastore
112: dup
113: iconst_1
114: dconst_1
115: dastore
116: invokevirtual #360
119: pop
120: aload_2
121: invokevirtual #361
124: ldc2_w        #454
127: dcmpl
128: ifle          135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #456
139: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testInconsistentSizes1
Start line: 315
End line: 328
Method source code: 
    public void testInconsistentSizes1() {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } }, new double[] { -1, 1 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(-1, optimum.getPoint()[0], 1.0e-10);
        Assert.assertEquals(+1, optimum.getPoint()[1], 1.0e-10);

        optimizer.optimize(100, problem, problem.target,
                           new double[] { 1 },
                           new double[] { 0, 0 });
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_2
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: dconst_1
34: dastore
35: aastore
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #373
44: dastore
45: dup
46: iconst_1
47: dconst_1
48: dastore
49: invokespecial #357
52: astore_1
53: aload_0
54: invokevirtual #358
57: astore_2
58: aload_2
59: bipush        100
61: aload_1
62: aload_1
63: getfield      #359
66: iconst_2
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_1
76: dastore
77: iconst_2
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: dconst_0
87: dastore
88: invokevirtual #360
91: astore_3
92: dconst_0
93: aload_2
94: invokevirtual #361
97: ldc2_w        #362
100: invokestatic  #364
103: ldc2_w        #373
106: aload_3
107: invokevirtual #367
110: iconst_0
111: daload
112: ldc2_w        #362
115: invokestatic  #364
118: dconst_1
119: aload_3
120: invokevirtual #367
123: iconst_1
124: daload
125: ldc2_w        #362
128: invokestatic  #364
131: aload_2
132: bipush        100
134: aload_1
135: aload_1
136: getfield      #359
139: iconst_1
140: newarray       double
142: dup
143: iconst_0
144: dconst_1
145: dastore
146: iconst_2
147: newarray       double
149: dup
150: iconst_0
151: dconst_0
152: dastore
153: dup
154: iconst_1
155: dconst_0
156: dastore
157: invokevirtual #360
160: pop
161: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testInconsistentSizes2
Start line: 331
End line: 344
Method source code: 
    public void testInconsistentSizes2() {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } }, new double[] { -1, 1 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });
        Assert.assertEquals(0, optimizer.getRMS(), 1.0e-10);
        Assert.assertEquals(-1, optimum.getPoint()[0], 1.0e-10);
        Assert.assertEquals(+1, optimum.getPoint()[1], 1.0e-10);

        optimizer.optimize(100, problem, new double[] { 1 },
                           new double[] { 1 },
                           new double[] { 0, 0 });
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_2
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: dconst_1
34: dastore
35: aastore
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #373
44: dastore
45: dup
46: iconst_1
47: dconst_1
48: dastore
49: invokespecial #357
52: astore_1
53: aload_0
54: invokevirtual #358
57: astore_2
58: aload_2
59: bipush        100
61: aload_1
62: aload_1
63: getfield      #359
66: iconst_2
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_1
76: dastore
77: iconst_2
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: dconst_0
87: dastore
88: invokevirtual #360
91: astore_3
92: dconst_0
93: aload_2
94: invokevirtual #361
97: ldc2_w        #362
100: invokestatic  #364
103: ldc2_w        #373
106: aload_3
107: invokevirtual #367
110: iconst_0
111: daload
112: ldc2_w        #362
115: invokestatic  #364
118: dconst_1
119: aload_3
120: invokevirtual #367
123: iconst_1
124: daload
125: ldc2_w        #362
128: invokestatic  #364
131: aload_2
132: bipush        100
134: aload_1
135: iconst_1
136: newarray       double
138: dup
139: iconst_0
140: dconst_1
141: dastore
142: iconst_1
143: newarray       double
145: dup
146: iconst_0
147: dconst_1
148: dastore
149: iconst_2
150: newarray       double
152: dup
153: iconst_0
154: dconst_0
155: dastore
156: dup
157: iconst_1
158: dconst_0
159: dastore
160: invokevirtual #360
163: pop
164: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testCircleFitting
Start line: 347
End line: 387
Method source code: 
    public void testCircleFitting() {
        CircleVectorial circle = new CircleVectorial();
        circle.addPoint( 30.0,  68.0);
        circle.addPoint( 50.0,  -6.0);
        circle.addPoint(110.0, -20.0);
        circle.addPoint( 35.0,  15.0);
        circle.addPoint( 45.0,  97.0);
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum
            = optimizer.optimize(100, circle, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 },
                                 new double[] { 98.680, 47.345 });
        Assert.assertTrue(optimizer.getEvaluations() < 10);
        Assert.assertTrue(optimizer.getJacobianEvaluations() < 10);
        double rms = optimizer.getRMS();
        Assert.assertEquals(1.768262623567235,  FastMath.sqrt(circle.getN()) * rms,  1.0e-10);
        Vector2D center = new Vector2D(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        Assert.assertEquals(69.96016176931406, circle.getRadius(center), 1.0e-6);
        Assert.assertEquals(96.07590211815305, center.getX(),            1.0e-6);
        Assert.assertEquals(48.13516790438953, center.getY(),            1.0e-6);
        double[][] cov = optimizer.computeCovariances(optimum.getPoint(), 1e-14);
        Assert.assertEquals(1.839, cov[0][0], 0.001);
        Assert.assertEquals(0.731, cov[0][1], 0.001);
        Assert.assertEquals(cov[0][1], cov[1][0], 1.0e-14);
        Assert.assertEquals(0.786, cov[1][1], 0.001);

        // add perfect measurements and check errors are reduced
        double  r = circle.getRadius(center);
        for (double d= 0; d < 2 * FastMath.PI; d += 0.01) {
            circle.addPoint(center.getX() + r * FastMath.cos(d), center.getY() + r * FastMath.sin(d));
        }
        double[] target = new double[circle.getN()];
        Arrays.fill(target, 0.0);
        double[] weights = new double[circle.getN()];
        Arrays.fill(weights, 2.0);
        optimum = optimizer.optimize(100, circle, target, weights, new double[] { 98.680, 47.345 });
        cov = optimizer.computeCovariances(optimum.getPoint(), 1e-14);
        Assert.assertEquals(0.0016, cov[0][0], 0.001);
        Assert.assertEquals(3.2e-7, cov[0][1], 1.0e-9);
        Assert.assertEquals(cov[0][1], cov[1][0], 1.0e-14);
        Assert.assertEquals(0.0016, cov[1][1], 0.001);
    }
Method byte code: 
0: new           #457
3: dup
4: invokespecial #458
7: astore_1
8: aload_1
9: ldc2_w        #459
12: ldc2_w        #461
15: invokevirtual #463
18: aload_1
19: ldc2_w        #464
22: ldc2_w        #466
25: invokevirtual #463
28: aload_1
29: ldc2_w        #468
32: ldc2_w        #470
35: invokevirtual #463
38: aload_1
39: ldc2_w        #472
42: ldc2_w        #474
45: invokevirtual #463
48: aload_1
49: ldc2_w        #476
52: ldc2_w        #478
55: invokevirtual #463
58: aload_0
59: invokevirtual #358
62: astore_2
63: aload_2
64: bipush        100
66: aload_1
67: iconst_5
68: newarray       double
70: dup
71: iconst_0
72: dconst_0
73: dastore
74: dup
75: iconst_1
76: dconst_0
77: dastore
78: dup
79: iconst_2
80: dconst_0
81: dastore
82: dup
83: iconst_3
84: dconst_0
85: dastore
86: dup
87: iconst_4
88: dconst_0
89: dastore
90: iconst_5
91: newarray       double
93: dup
94: iconst_0
95: dconst_1
96: dastore
97: dup
98: iconst_1
99: dconst_1
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_1
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: iconst_2
114: newarray       double
116: dup
117: iconst_0
118: ldc2_w        #480
121: dastore
122: dup
123: iconst_1
124: ldc2_w        #482
127: dastore
128: invokevirtual #360
131: astore_3
132: aload_2
133: invokevirtual #484
136: bipush        10
138: if_icmpge     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #456
149: aload_2
150: invokevirtual #485
153: bipush        10
155: if_icmpge     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #456
166: aload_2
167: invokevirtual #361
170: dstore        4
172: ldc2_w        #486
175: aload_1
176: invokevirtual #488
179: i2d
180: invokestatic  #489
183: dload         4
185: dmul
186: ldc2_w        #362
189: invokestatic  #364
192: new           #490
195: dup
196: aload_3
197: invokevirtual #453
200: iconst_0
201: daload
202: aload_3
203: invokevirtual #453
206: iconst_1
207: daload
208: invokespecial #491
211: astore        6
213: ldc2_w        #492
216: aload_1
217: aload         6
219: invokevirtual #494
222: ldc2_w        #495
225: invokestatic  #364
228: ldc2_w        #497
231: aload         6
233: invokevirtual #499
236: ldc2_w        #495
239: invokestatic  #364
242: ldc2_w        #500
245: aload         6
247: invokevirtual #502
250: ldc2_w        #495
253: invokestatic  #364
256: aload_2
257: aload_3
258: invokevirtual #367
261: ldc2_w        #503
264: invokevirtual #505
267: astore        7
269: ldc2_w        #506
272: aload         7
274: iconst_0
275: aaload
276: iconst_0
277: daload
278: ldc2_w        #508
281: invokestatic  #364
284: ldc2_w        #510
287: aload         7
289: iconst_0
290: aaload
291: iconst_1
292: daload
293: ldc2_w        #508
296: invokestatic  #364
299: aload         7
301: iconst_0
302: aaload
303: iconst_1
304: daload
305: aload         7
307: iconst_1
308: aaload
309: iconst_0
310: daload
311: ldc2_w        #503
314: invokestatic  #364
317: ldc2_w        #512
320: aload         7
322: iconst_1
323: aaload
324: iconst_1
325: daload
326: ldc2_w        #508
329: invokestatic  #364
332: aload_1
333: aload         6
335: invokevirtual #494
338: dstore        8
340: dconst_0
341: dstore        10
343: dload         10
345: ldc2_w        #515
348: dcmpg
349: ifge          395
352: aload_1
353: aload         6
355: invokevirtual #499
358: dload         8
360: dload         10
362: invokestatic  #517
365: dmul
366: dadd
367: aload         6
369: invokevirtual #502
372: dload         8
374: dload         10
376: invokestatic  #518
379: dmul
380: dadd
381: invokevirtual #463
384: dload         10
386: ldc2_w        #519
389: dadd
390: dstore        10
392: goto          343
395: aload_1
396: invokevirtual #488
399: newarray       double
401: astore        10
403: aload         10
405: dconst_0
406: invokestatic  #521
409: aload_1
410: invokevirtual #488
413: newarray       double
415: astore        11
417: aload         11
419: ldc2_w        #353
422: invokestatic  #521
425: aload_2
426: bipush        100
428: aload_1
429: aload         10
431: aload         11
433: iconst_2
434: newarray       double
436: dup
437: iconst_0
438: ldc2_w        #480
441: dastore
442: dup
443: iconst_1
444: ldc2_w        #482
447: dastore
448: invokevirtual #360
451: astore_3
452: aload_2
453: aload_3
454: invokevirtual #367
457: ldc2_w        #503
460: invokevirtual #505
463: astore        7
465: ldc2_w        #522
468: aload         7
470: iconst_0
471: aaload
472: iconst_0
473: daload
474: ldc2_w        #508
477: invokestatic  #364
480: ldc2_w        #524
483: aload         7
485: iconst_0
486: aaload
487: iconst_1
488: daload
489: ldc2_w        #526
492: invokestatic  #364
495: aload         7
497: iconst_0
498: aaload
499: iconst_1
500: daload
501: aload         7
503: iconst_1
504: aaload
505: iconst_0
506: daload
507: ldc2_w        #503
510: invokestatic  #364
513: ldc2_w        #522
516: aload         7
518: iconst_1
519: aaload
520: iconst_1
521: daload
522: ldc2_w        #508
525: invokestatic  #364
528: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testCircleFittingBadInit
Start line: 390
End line: 410
Method source code: 
    public void testCircleFittingBadInit() {
        CircleVectorial circle = new CircleVectorial();
        double[][] points = circlePoints;
        double[] target = new double[points.length];
        Arrays.fill(target, 0.0);
        double[] weights = new double[points.length];
        Arrays.fill(weights, 2.0);
        for (int i = 0; i < points.length; ++i) {
            circle.addPoint(points[i][0], points[i][1]);
        }
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum
            = optimizer.optimize(100, circle, target, weights, new double[] { -12, -12 });
        Vector2D center = new Vector2D(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        Assert.assertTrue(optimizer.getEvaluations() < 25);
        Assert.assertTrue(optimizer.getJacobianEvaluations() < 20);
        Assert.assertEquals( 0.043, optimizer.getRMS(), 1.0e-3);
        Assert.assertEquals( 0.292235,  circle.getRadius(center), 1.0e-6);
        Assert.assertEquals(-0.151738,  center.getX(),            1.0e-6);
        Assert.assertEquals( 0.2075001, center.getY(),            1.0e-6);
    }
Method byte code: 
0: new           #457
3: dup
4: invokespecial #458
7: astore_1
8: aload_0
9: getfield      #351
12: astore_2
13: aload_2
14: arraylength
15: newarray       double
17: astore_3
18: aload_3
19: dconst_0
20: invokestatic  #521
23: aload_2
24: arraylength
25: newarray       double
27: astore        4
29: aload         4
31: ldc2_w        #353
34: invokestatic  #521
37: iconst_0
38: istore        5
40: iload         5
42: aload_2
43: arraylength
44: if_icmpge     69
47: aload_1
48: aload_2
49: iload         5
51: aaload
52: iconst_0
53: daload
54: aload_2
55: iload         5
57: aaload
58: iconst_1
59: daload
60: invokevirtual #463
63: iinc          5, 1
66: goto          40
69: aload_0
70: invokevirtual #358
73: astore        5
75: aload         5
77: bipush        100
79: aload_1
80: aload_3
81: aload         4
83: iconst_2
84: newarray       double
86: dup
87: iconst_0
88: ldc2_w        #405
91: dastore
92: dup
93: iconst_1
94: ldc2_w        #405
97: dastore
98: invokevirtual #360
101: astore        6
103: new           #490
106: dup
107: aload         6
109: invokevirtual #453
112: iconst_0
113: daload
114: aload         6
116: invokevirtual #453
119: iconst_1
120: daload
121: invokespecial #491
124: astore        7
126: aload         5
128: invokevirtual #484
131: bipush        25
133: if_icmpge     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #456
144: aload         5
146: invokevirtual #485
149: bipush        20
151: if_icmpge     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #456
162: ldc2_w        #528
165: aload         5
167: invokevirtual #361
170: ldc2_w        #508
173: invokestatic  #364
176: ldc2_w        #530
179: aload_1
180: aload         7
182: invokevirtual #494
185: ldc2_w        #495
188: invokestatic  #364
191: ldc2_w        #532
194: aload         7
196: invokevirtual #499
199: ldc2_w        #495
202: invokestatic  #364
205: ldc2_w        #534
208: aload         7
210: invokevirtual #502
213: ldc2_w        #495
216: invokestatic  #364
219: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testCircleFittingGoodInit
Start line: 413
End line: 429
Method source code: 
    public void testCircleFittingGoodInit() {
        CircleVectorial circle = new CircleVectorial();
        double[][] points = circlePoints;
        double[] target = new double[points.length];
        Arrays.fill(target, 0.0);
        double[] weights = new double[points.length];
        Arrays.fill(weights, 2.0);
        for (int i = 0; i < points.length; ++i) {
            circle.addPoint(points[i][0], points[i][1]);
        }
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(100, circle, target, weights, new double[] { 0, 0 });
        Assert.assertEquals(-0.1517383071957963, optimum.getPointRef()[0], 1.0e-6);
        Assert.assertEquals(0.2074999736353867,  optimum.getPointRef()[1], 1.0e-6);
        Assert.assertEquals(0.04268731682389561, optimizer.getRMS(),       1.0e-8);
    }
Method byte code: 
0: new           #457
3: dup
4: invokespecial #458
7: astore_1
8: aload_0
9: getfield      #351
12: astore_2
13: aload_2
14: arraylength
15: newarray       double
17: astore_3
18: aload_3
19: dconst_0
20: invokestatic  #521
23: aload_2
24: arraylength
25: newarray       double
27: astore        4
29: aload         4
31: ldc2_w        #353
34: invokestatic  #521
37: iconst_0
38: istore        5
40: iload         5
42: aload_2
43: arraylength
44: if_icmpge     69
47: aload_1
48: aload_2
49: iload         5
51: aaload
52: iconst_0
53: daload
54: aload_2
55: iload         5
57: aaload
58: iconst_1
59: daload
60: invokevirtual #463
63: iinc          5, 1
66: goto          40
69: aload_0
70: invokevirtual #358
73: astore        5
75: aload         5
77: bipush        100
79: aload_1
80: aload_3
81: aload         4
83: iconst_2
84: newarray       double
86: dup
87: iconst_0
88: dconst_0
89: dastore
90: dup
91: iconst_1
92: dconst_0
93: dastore
94: invokevirtual #360
97: astore        6
99: ldc2_w        #536
102: aload         6
104: invokevirtual #453
107: iconst_0
108: daload
109: ldc2_w        #495
112: invokestatic  #364
115: ldc2_w        #538
118: aload         6
120: invokevirtual #453
123: iconst_1
124: daload
125: ldc2_w        #495
128: invokestatic  #364
131: ldc2_w        #540
134: aload         5
136: invokevirtual #361
139: ldc2_w        #443
142: invokestatic  #364
145: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testKirby2
Start line: 486
End line: 488
Method source code: 
    public void testKirby2() throws IOException {
        doTestStRD(StatisticalReferenceDatasetFactory.createKirby2(), 1E-7, 1E-7);
    }
Method byte code: 
0: aload_0
1: invokestatic  #556
4: ldc2_w        #395
7: ldc2_w        #395
10: invokevirtual #557
13: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testHahn1
Start line: 491
End line: 493
Method source code: 
    public void testHahn1() throws IOException {
        doTestStRD(StatisticalReferenceDatasetFactory.createHahn1(), 1E-7, 1E-4);
    }
Method byte code: 
0: aload_0
1: invokestatic  #558
4: ldc2_w        #395
7: ldc2_w        #559
10: invokevirtual #557
13: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.class
Class name: AbstractLeastSquaresOptimizerTestValidation
Method name: testParametersErrorMonteCarloObservations
Start line: 63
End line: 157
Method source code: 
    public void testParametersErrorMonteCarloObservations() {
        // Error on the observations.
        final double yError = 15;

        // True values of the parameters.
        final double slope = 123.456;
        final double offset = -98.765;

        // Samples generator.
        final RandomStraightLinePointGenerator lineGenerator
            = new RandomStraightLinePointGenerator(slope, offset,
                                                   yError,
                                                   -1e3, 1e4,
                                                   138577L);

        // Number of observations.
        final int numObs = 100; // XXX Should be a command-line option.
        // number of parameters.
        final int numParams = 2;

        // Parameters found for each of Monte-Carlo run.
        final SummaryStatistics[] paramsFoundByDirectSolution = new SummaryStatistics[numParams];
        // Sigma estimations (square-root of the diagonal elements of the
        // covariance matrix), for each Monte-Carlo run.
        final SummaryStatistics[] sigmaEstimate = new SummaryStatistics[numParams];

        // Initialize statistics accumulators.
        for (int i = 0; i < numParams; i++) {
            paramsFoundByDirectSolution[i] = new SummaryStatistics();
            sigmaEstimate[i] = new SummaryStatistics();
        }

        // Dummy optimizer (to compute the covariance matrix).
        final AbstractLeastSquaresOptimizer optim = new DummyOptimizer();
        final double[] init = { slope, offset };

        // Monte-Carlo (generates many sets of observations).
        final int mcRepeat = MONTE_CARLO_RUNS;
        int mcCount = 0;
        while (mcCount < mcRepeat) {
            // Observations.
            final Point2D.Double[] obs = lineGenerator.generate(numObs);

            final StraightLineProblem problem = new StraightLineProblem(yError);
            for (int i = 0; i < numObs; i++) {
                final Point2D.Double p = obs[i];
                problem.addPoint(p.x, p.y);
            }

            // Direct solution (using simple regression).
            final double[] regress = problem.solve();

            // Estimation of the standard deviation (diagonal elements of the
            // covariance matrix).
            final PointVectorValuePair optimum = optim.optimize(Integer.MAX_VALUE,
                           problem, problem.target(), problem.weight(), init);
            final double[] sigma = optim.computeSigma(optimum.getPoint(), 1e-14);

            // Accumulate statistics.
            for (int i = 0; i < numParams; i++) {
                paramsFoundByDirectSolution[i].addValue(regress[i]);
                sigmaEstimate[i].addValue(sigma[i]);
            }

            // Next Monte-Carlo.
            ++mcCount;
        }

        // Print statistics.
        final String line = "--------------------------------------------------------------";
        System.out.println("                 True value       Mean        Std deviation");
        for (int i = 0; i < numParams; i++) {
            System.out.println(line);
            System.out.println("Parameter #" + i);

            StatisticalSummary s = paramsFoundByDirectSolution[i].getSummary();
            System.out.printf("              %+.6e   %+.6e   %+.6e\n",
                              init[i],
                              s.getMean(),
                              s.getStandardDeviation());

            s = sigmaEstimate[i].getSummary();
            System.out.printf("sigma: %+.6e (%+.6e)\n",
                              s.getMean(),
                              s.getStandardDeviation());
        }
        System.out.println(line);

        // Check the error estimation.
        for (int i = 0; i < numParams; i++) {
            Assert.assertEquals(paramsFoundByDirectSolution[i].getSummary().getStandardDeviation(),
                                sigmaEstimate[i].getSummary().getMean(),
                                8e-2);
        }
    }
Method byte code: 
0: ldc2_w        #2
3: dstore_1
4: ldc2_w        #4
7: dstore_3
8: ldc2_w        #6
11: dstore        5
13: new           #8
16: dup
17: ldc2_w        #4
20: ldc2_w        #6
23: ldc2_w        #2
26: ldc2_w        #9
29: ldc2_w        #11
32: ldc2_w        #13
35: invokespecial #15
38: astore        7
40: bipush        100
42: istore        8
44: iconst_2
45: istore        9
47: iconst_2
48: anewarray     #16
51: astore        10
53: iconst_2
54: anewarray     #16
57: astore        11
59: iconst_0
60: istore        12
62: iload         12
64: iconst_2
65: if_icmpge     98
68: aload         10
70: iload         12
72: new           #16
75: dup
76: invokespecial #17
79: aastore
80: aload         11
82: iload         12
84: new           #16
87: dup
88: invokespecial #17
91: aastore
92: iinc          12, 1
95: goto          62
98: new           #18
101: dup
102: invokespecial #19
105: astore        12
107: iconst_2
108: newarray       double
110: dup
111: iconst_0
112: ldc2_w        #4
115: dastore
116: dup
117: iconst_1
118: ldc2_w        #6
121: dastore
122: astore        13
124: getstatic     #20
127: istore        14
129: iconst_0
130: istore        15
132: iload         15
134: iload         14
136: if_icmpge     290
139: aload         7
141: bipush        100
143: invokevirtual #21
146: astore        16
148: new           #22
151: dup
152: ldc2_w        #2
155: invokespecial #23
158: astore        17
160: iconst_0
161: istore        18
163: iload         18
165: bipush        100
167: if_icmpge     198
170: aload         16
172: iload         18
174: aaload
175: astore        19
177: aload         17
179: aload         19
181: getfield      #24
184: aload         19
186: getfield      #25
189: invokevirtual #26
192: iinc          18, 1
195: goto          163
198: aload         17
200: invokevirtual #27
203: astore        18
205: aload         12
207: ldc           #29
209: aload         17
211: aload         17
213: invokevirtual #30
216: aload         17
218: invokevirtual #31
221: aload         13
223: invokevirtual #32
226: astore        19
228: aload         12
230: aload         19
232: invokevirtual #33
235: ldc2_w        #34
238: invokevirtual #36
241: astore        20
243: iconst_0
244: istore        21
246: iload         21
248: iconst_2
249: if_icmpge     284
252: aload         10
254: iload         21
256: aaload
257: aload         18
259: iload         21
261: daload
262: invokevirtual #37
265: aload         11
267: iload         21
269: aaload
270: aload         20
272: iload         21
274: daload
275: invokevirtual #37
278: iinc          21, 1
281: goto          246
284: iinc          15, 1
287: goto          132
290: ldc           #38
292: astore        16
294: getstatic     #39
297: ldc           #40
299: invokevirtual #41
302: iconst_0
303: istore        17
305: iload         17
307: iconst_2
308: if_icmpge     460
311: getstatic     #39
314: ldc           #38
316: invokevirtual #41
319: getstatic     #39
322: new           #42
325: dup
326: invokespecial #43
329: ldc           #44
331: invokevirtual #45
334: iload         17
336: invokevirtual #46
339: invokevirtual #47
342: invokevirtual #41
345: aload         10
347: iload         17
349: aaload
350: invokevirtual #48
353: astore        18
355: getstatic     #39
358: ldc           #49
360: iconst_3
361: anewarray     #50
364: dup
365: iconst_0
366: aload         13
368: iload         17
370: daload
371: invokestatic  #51
374: aastore
375: dup
376: iconst_1
377: aload         18
379: invokeinterface #52,  1
384: invokestatic  #51
387: aastore
388: dup
389: iconst_2
390: aload         18
392: invokeinterface #53,  1
397: invokestatic  #51
400: aastore
401: invokevirtual #54
404: pop
405: aload         11
407: iload         17
409: aaload
410: invokevirtual #48
413: astore        18
415: getstatic     #39
418: ldc           #55
420: iconst_2
421: anewarray     #50
424: dup
425: iconst_0
426: aload         18
428: invokeinterface #52,  1
433: invokestatic  #51
436: aastore
437: dup
438: iconst_1
439: aload         18
441: invokeinterface #53,  1
446: invokestatic  #51
449: aastore
450: invokevirtual #54
453: pop
454: iinc          17, 1
457: goto          305
460: getstatic     #39
463: ldc           #38
465: invokevirtual #41
468: iconst_0
469: istore        17
471: iload         17
473: iconst_2
474: if_icmpge     515
477: aload         10
479: iload         17
481: aaload
482: invokevirtual #48
485: invokeinterface #53,  1
490: aload         11
492: iload         17
494: aaload
495: invokevirtual #48
498: invokeinterface #52,  1
503: ldc2_w        #56
506: invokestatic  #58
509: iinc          17, 1
512: goto          471
515: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.class
Class name: AbstractLeastSquaresOptimizerTestValidation
Method name: testParametersErrorMonteCarloParameters
Start line: 184
End line: 283
Method source code: 
    public void testParametersErrorMonteCarloParameters() {
        // Error on the observations.
        final double yError = 15;

        // True values of the parameters.
        final double slope = 123.456;
        final double offset = -98.765;

        // Samples generator.
        final RandomStraightLinePointGenerator lineGenerator
            = new RandomStraightLinePointGenerator(slope, offset,
                                                   yError,
                                                   -1e3, 1e4,
                                                   13839013L);

        // Number of observations.
        final int numObs = 10;
        // number of parameters.
        final int numParams = 2;

        // Create a single set of observations.
        final Point2D.Double[] obs = lineGenerator.generate(numObs);

        final StraightLineProblem problem = new StraightLineProblem(yError);
        for (int i = 0; i < numObs; i++) {
            final Point2D.Double p = obs[i];
            problem.addPoint(p.x, p.y);
        }

        // Direct solution (using simple regression).
        final double[] regress = problem.solve();

        // Dummy optimizer (to compute the chi-square).
        final AbstractLeastSquaresOptimizer optim = new DummyOptimizer();
        final double[] init = { slope, offset };
        // Get chi-square of the best parameters set for the given set of
        // observations.
        final double bestChi2N = getChi2N(optim, problem, regress);
        final double[] sigma = optim.computeSigma(regress, 1e-14);

        // Monte-Carlo (generates a grid of parameters).
        final int mcRepeat = MONTE_CARLO_RUNS;
        final int gridSize = (int) FastMath.sqrt(mcRepeat);

        // Parameters found for each of Monte-Carlo run.
        // Index 0 = slope
        // Index 1 = offset
        // Index 2 = normalized chi2
        final List<double[]> paramsAndChi2 = new ArrayList<double[]>(gridSize * gridSize);

        final double slopeRange = 10 * sigma[0];
        final double offsetRange = 10 * sigma[1];
        final double minSlope = slope - 0.5 * slopeRange;
        final double minOffset = offset - 0.5 * offsetRange;
        final double deltaSlope =  slopeRange/ gridSize;
        final double deltaOffset = offsetRange / gridSize;
        for (int i = 0; i < gridSize; i++) {
            final double s = minSlope + i * deltaSlope;
            for (int j = 0; j < gridSize; j++) {
                final double o = minOffset + j * deltaOffset;
                final double chi2N = getChi2N(optim, problem, new double[] {s, o});

                paramsAndChi2.add(new double[] {s, o, chi2N});
            }
        }

        // Output (for use with "gnuplot").

        // Some info.

        // For plotting separately sets of parameters that have a large chi2.
        final double chi2NPlusOne = bestChi2N + 1;
        int numLarger = 0;

        final String lineFmt = "%+.10e %+.10e   %.8e\n";

        // Point with smallest chi-square.
        System.out.printf(lineFmt, regress[0], regress[1], bestChi2N);
        System.out.println(); // Empty line.

        // Points within the confidence interval.
        for (double[] d : paramsAndChi2) {
            if (d[2] <= chi2NPlusOne) {
                System.out.printf(lineFmt, d[0], d[1], d[2]);
            }
        }
        System.out.println(); // Empty line.

        // Points outside the confidence interval.
        for (double[] d : paramsAndChi2) {
            if (d[2] > chi2NPlusOne) {
                ++numLarger;
                System.out.printf(lineFmt, d[0], d[1], d[2]);
            }
        }
        System.out.println(); // Empty line.

        System.out.println("# sigma=" + Arrays.toString(sigma));
        System.out.println("# " + numLarger + " sets filtered out");
    }
Method byte code: 
0: ldc2_w        #2
3: dstore_1
4: ldc2_w        #4
7: dstore_3
8: ldc2_w        #6
11: dstore        5
13: new           #8
16: dup
17: ldc2_w        #4
20: ldc2_w        #6
23: ldc2_w        #2
26: ldc2_w        #9
29: ldc2_w        #11
32: ldc2_w        #59
35: invokespecial #15
38: astore        7
40: bipush        10
42: istore        8
44: iconst_2
45: istore        9
47: aload         7
49: bipush        10
51: invokevirtual #21
54: astore        10
56: new           #22
59: dup
60: ldc2_w        #2
63: invokespecial #23
66: astore        11
68: iconst_0
69: istore        12
71: iload         12
73: bipush        10
75: if_icmpge     106
78: aload         10
80: iload         12
82: aaload
83: astore        13
85: aload         11
87: aload         13
89: getfield      #24
92: aload         13
94: getfield      #25
97: invokevirtual #26
100: iinc          12, 1
103: goto          71
106: aload         11
108: invokevirtual #27
111: astore        12
113: new           #18
116: dup
117: invokespecial #19
120: astore        13
122: iconst_2
123: newarray       double
125: dup
126: iconst_0
127: ldc2_w        #4
130: dastore
131: dup
132: iconst_1
133: ldc2_w        #6
136: dastore
137: astore        14
139: aload_0
140: aload         13
142: aload         11
144: aload         12
146: invokespecial #61
149: dstore        15
151: aload         13
153: aload         12
155: ldc2_w        #34
158: invokevirtual #36
161: astore        17
163: getstatic     #20
166: istore        18
168: iload         18
170: i2d
171: invokestatic  #62
174: d2i
175: istore        19
177: new           #63
180: dup
181: iload         19
183: iload         19
185: imul
186: invokespecial #64
189: astore        20
191: ldc2_w        #65
194: aload         17
196: iconst_0
197: daload
198: dmul
199: dstore        21
201: ldc2_w        #65
204: aload         17
206: iconst_1
207: daload
208: dmul
209: dstore        23
211: ldc2_w        #4
214: ldc2_w        #67
217: dload         21
219: dmul
220: dsub
221: dstore        25
223: ldc2_w        #6
226: ldc2_w        #67
229: dload         23
231: dmul
232: dsub
233: dstore        27
235: dload         21
237: iload         19
239: i2d
240: ddiv
241: dstore        29
243: dload         23
245: iload         19
247: i2d
248: ddiv
249: dstore        31
251: iconst_0
252: istore        33
254: iload         33
256: iload         19
258: if_icmpge     354
261: dload         25
263: iload         33
265: i2d
266: dload         29
268: dmul
269: dadd
270: dstore        34
272: iconst_0
273: istore        36
275: iload         36
277: iload         19
279: if_icmpge     348
282: dload         27
284: iload         36
286: i2d
287: dload         31
289: dmul
290: dadd
291: dstore        37
293: aload_0
294: aload         13
296: aload         11
298: iconst_2
299: newarray       double
301: dup
302: iconst_0
303: dload         34
305: dastore
306: dup
307: iconst_1
308: dload         37
310: dastore
311: invokespecial #61
314: dstore        39
316: aload         20
318: iconst_3
319: newarray       double
321: dup
322: iconst_0
323: dload         34
325: dastore
326: dup
327: iconst_1
328: dload         37
330: dastore
331: dup
332: iconst_2
333: dload         39
335: dastore
336: invokeinterface #69,  2
341: pop
342: iinc          36, 1
345: goto          275
348: iinc          33, 1
351: goto          254
354: dload         15
356: dconst_1
357: dadd
358: dstore        33
360: iconst_0
361: istore        35
363: ldc           #70
365: astore        36
367: getstatic     #39
370: ldc           #70
372: iconst_3
373: anewarray     #50
376: dup
377: iconst_0
378: aload         12
380: iconst_0
381: daload
382: invokestatic  #51
385: aastore
386: dup
387: iconst_1
388: aload         12
390: iconst_1
391: daload
392: invokestatic  #51
395: aastore
396: dup
397: iconst_2
398: dload         15
400: invokestatic  #51
403: aastore
404: invokevirtual #54
407: pop
408: getstatic     #39
411: invokevirtual #71
414: aload         20
416: invokeinterface #72,  1
421: astore        37
423: aload         37
425: invokeinterface #73,  1
430: ifeq          501
433: aload         37
435: invokeinterface #74,  1
440: checkcast     #75
443: astore        38
445: aload         38
447: iconst_2
448: daload
449: dload         33
451: dcmpg
452: ifgt          498
455: getstatic     #39
458: ldc           #70
460: iconst_3
461: anewarray     #50
464: dup
465: iconst_0
466: aload         38
468: iconst_0
469: daload
470: invokestatic  #51
473: aastore
474: dup
475: iconst_1
476: aload         38
478: iconst_1
479: daload
480: invokestatic  #51
483: aastore
484: dup
485: iconst_2
486: aload         38
488: iconst_2
489: daload
490: invokestatic  #51
493: aastore
494: invokevirtual #54
497: pop
498: goto          423
501: getstatic     #39
504: invokevirtual #71
507: aload         20
509: invokeinterface #72,  1
514: astore        37
516: aload         37
518: invokeinterface #73,  1
523: ifeq          597
526: aload         37
528: invokeinterface #74,  1
533: checkcast     #75
536: astore        38
538: aload         38
540: iconst_2
541: daload
542: dload         33
544: dcmpl
545: ifle          594
548: iinc          35, 1
551: getstatic     #39
554: ldc           #70
556: iconst_3
557: anewarray     #50
560: dup
561: iconst_0
562: aload         38
564: iconst_0
565: daload
566: invokestatic  #51
569: aastore
570: dup
571: iconst_1
572: aload         38
574: iconst_1
575: daload
576: invokestatic  #51
579: aastore
580: dup
581: iconst_2
582: aload         38
584: iconst_2
585: daload
586: invokestatic  #51
589: aastore
590: invokevirtual #54
593: pop
594: goto          516
597: getstatic     #39
600: invokevirtual #71
603: getstatic     #39
606: new           #42
609: dup
610: invokespecial #43
613: ldc           #76
615: invokevirtual #45
618: aload         17
620: invokestatic  #77
623: invokevirtual #45
626: invokevirtual #47
629: invokevirtual #41
632: getstatic     #39
635: new           #42
638: dup
639: invokespecial #43
642: ldc           #78
644: invokevirtual #45
647: iload         35
649: invokevirtual #46
652: ldc           #79
654: invokevirtual #45
657: invokevirtual #47
660: invokevirtual #41
663: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testFit
Start line: 43
End line: 62
Method source code: 
    public void testFit() {
        final RealDistribution rng = new UniformRealDistribution(-100, 100);
        rng.reseedRandomGenerator(64925784252L);

        final LevenbergMarquardtOptimizer optim = new LevenbergMarquardtOptimizer();
        final PolynomialFitter fitter = new PolynomialFitter(optim);
        final double[] coeff = { 12.9, -3.4, 2.1 }; // 12.9 - 3.4 x + 2.1 x^2
        final PolynomialFunction f = new PolynomialFunction(coeff);

        // Collect data from a known polynomial.
        for (int i = 0; i < 100; i++) {
            final double x = rng.sample();
            fitter.addObservedPoint(x, f.value(x));
        }

        // Start fit from initial guesses that are far from the optimal values.
        final double[] best = fitter.fit(new double[] { -1e-20, 3e15, -5e25 });

        TestUtils.assertEquals("best != coeff", coeff, best, 1e-12);
    }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: ldc2_w        #5
10: invokespecial #7
13: astore_1
14: aload_1
15: ldc2_w        #8
18: invokeinterface #10,  3
23: new           #11
26: dup
27: invokespecial #12
30: astore_2
31: new           #13
34: dup
35: aload_2
36: invokespecial #14
39: astore_3
40: iconst_3
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #15
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #17
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #19
60: dastore
61: astore        4
63: new           #21
66: dup
67: aload         4
69: invokespecial #22
72: astore        5
74: iconst_0
75: istore        6
77: iload         6
79: bipush        100
81: if_icmpge     111
84: aload_1
85: invokeinterface #23,  1
90: dstore        7
92: aload_3
93: dload         7
95: aload         5
97: dload         7
99: invokevirtual #24
102: invokevirtual #25
105: iinc          6, 1
108: goto          77
111: aload_3
112: iconst_3
113: newarray       double
115: dup
116: iconst_0
117: ldc2_w        #26
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #28
126: dastore
127: dup
128: iconst_2
129: ldc2_w        #30
132: dastore
133: invokevirtual #32
136: astore        6
138: ldc           #33
140: aload         4
142: aload         6
144: ldc2_w        #34
147: invokestatic  #36
150: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testNoError
Start line: 65
End line: 84
Method source code: 
    public void testNoError() {
        Random randomizer = new Random(64925784252l);
        for (int degree = 1; degree < 10; ++degree) {
            PolynomialFunction p = buildRandomPolynomial(degree, randomizer);

            PolynomialFitter fitter = new PolynomialFitter(new LevenbergMarquardtOptimizer());
            for (int i = 0; i <= degree; ++i) {
                fitter.addObservedPoint(1.0, i, p.value(i));
            }

            final double[] init = new double[degree + 1];
            PolynomialFunction fitted = new PolynomialFunction(fitter.fit(init));

            for (double x = -1.0; x < 1.0; x += 0.01) {
                double error = FastMath.abs(p.value(x) - fitted.value(x)) /
                               (1.0 + FastMath.abs(p.value(x)));
                Assert.assertEquals(0.0, error, 1.0e-6);
            }
        }
    }
Method byte code: 
0: new           #37
3: dup
4: ldc2_w        #8
7: invokespecial #38
10: astore_1
11: iconst_1
12: istore_2
13: iload_2
14: bipush        10
16: if_icmpge     165
19: aload_0
20: iload_2
21: aload_1
22: invokespecial #39
25: astore_3
26: new           #13
29: dup
30: new           #11
33: dup
34: invokespecial #12
37: invokespecial #14
40: astore        4
42: iconst_0
43: istore        5
45: iload         5
47: iload_2
48: if_icmpgt     73
51: aload         4
53: dconst_1
54: iload         5
56: i2d
57: aload_3
58: iload         5
60: i2d
61: invokevirtual #24
64: invokevirtual #40
67: iinc          5, 1
70: goto          45
73: iload_2
74: iconst_1
75: iadd
76: newarray       double
78: astore        5
80: new           #21
83: dup
84: aload         4
86: aload         5
88: invokevirtual #32
91: invokespecial #22
94: astore        6
96: ldc2_w        #41
99: dstore        7
101: dload         7
103: dconst_1
104: dcmpg
105: ifge          159
108: aload_3
109: dload         7
111: invokevirtual #24
114: aload         6
116: dload         7
118: invokevirtual #24
121: dsub
122: invokestatic  #43
125: dconst_1
126: aload_3
127: dload         7
129: invokevirtual #24
132: invokestatic  #43
135: dadd
136: ddiv
137: dstore        9
139: dconst_0
140: dload         9
142: ldc2_w        #44
145: invokestatic  #46
148: dload         7
150: ldc2_w        #47
153: dadd
154: dstore        7
156: goto          101
159: iinc          2, 1
162: goto          13
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testSmallError
Start line: 87
End line: 110
Method source code: 
    public void testSmallError() {
        Random randomizer = new Random(53882150042l);
        double maxError = 0;
        for (int degree = 0; degree < 10; ++degree) {
            PolynomialFunction p = buildRandomPolynomial(degree, randomizer);

            PolynomialFitter fitter = new PolynomialFitter(new LevenbergMarquardtOptimizer());
            for (double x = -1.0; x < 1.0; x += 0.01) {
                fitter.addObservedPoint(1.0, x,
                                        p.value(x) + 0.1 * randomizer.nextGaussian());
            }

            final double[] init = new double[degree + 1];
            PolynomialFunction fitted = new PolynomialFunction(fitter.fit(init));

            for (double x = -1.0; x < 1.0; x += 0.01) {
                double error = FastMath.abs(p.value(x) - fitted.value(x)) /
                              (1.0 + FastMath.abs(p.value(x)));
                maxError = FastMath.max(maxError, error);
                Assert.assertTrue(FastMath.abs(error) < 0.1);
            }
        }
        Assert.assertTrue(maxError > 0.01);
    }
Method byte code: 
0: new           #37
3: dup
4: ldc2_w        #49
7: invokespecial #38
10: astore_1
11: dconst_0
12: dstore_2
13: iconst_0
14: istore        4
16: iload         4
18: bipush        10
20: if_icmpge     208
23: aload_0
24: iload         4
26: aload_1
27: invokespecial #39
30: astore        5
32: new           #13
35: dup
36: new           #11
39: dup
40: invokespecial #12
43: invokespecial #14
46: astore        6
48: ldc2_w        #41
51: dstore        7
53: dload         7
55: dconst_1
56: dcmpg
57: ifge          95
60: aload         6
62: dconst_1
63: dload         7
65: aload         5
67: dload         7
69: invokevirtual #24
72: ldc2_w        #51
75: aload_1
76: invokevirtual #53
79: dmul
80: dadd
81: invokevirtual #40
84: dload         7
86: ldc2_w        #47
89: dadd
90: dstore        7
92: goto          53
95: iload         4
97: iconst_1
98: iadd
99: newarray       double
101: astore        7
103: new           #21
106: dup
107: aload         6
109: aload         7
111: invokevirtual #32
114: invokespecial #22
117: astore        8
119: ldc2_w        #41
122: dstore        9
124: dload         9
126: dconst_1
127: dcmpg
128: ifge          202
131: aload         5
133: dload         9
135: invokevirtual #24
138: aload         8
140: dload         9
142: invokevirtual #24
145: dsub
146: invokestatic  #43
149: dconst_1
150: aload         5
152: dload         9
154: invokevirtual #24
157: invokestatic  #43
160: dadd
161: ddiv
162: dstore        11
164: dload_2
165: dload         11
167: invokestatic  #54
170: dstore_2
171: dload         11
173: invokestatic  #43
176: ldc2_w        #51
179: dcmpg
180: ifge          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #55
191: dload         9
193: ldc2_w        #47
196: dadd
197: dstore        9
199: goto          124
202: iinc          4, 1
205: goto          16
208: dload_2
209: ldc2_w        #47
212: dcmpl
213: ifle          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #55
224: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testMath798
Start line: 113
End line: 125
Method source code: 
    public void testMath798() {
        final double tol = 1e-14;
        final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(tol, tol);
        final double[] init = new double[] { 0, 0 };
        final int maxEval = 3;

        final double[] lm = doMath798(new LevenbergMarquardtOptimizer(checker), maxEval, init);
        final double[] gn = doMath798(new GaussNewtonOptimizer(checker), maxEval, init);

        for (int i = 0; i <= 1; i++) {
            Assert.assertEquals(lm[i], gn[i], tol);
        }
    }
Method byte code: 
0: ldc2_w        #56
3: dstore_1
4: new           #58
7: dup
8: ldc2_w        #56
11: ldc2_w        #56
14: invokespecial #59
17: astore_3
18: iconst_2
19: newarray       double
21: dup
22: iconst_0
23: dconst_0
24: dastore
25: dup
26: iconst_1
27: dconst_0
28: dastore
29: astore        4
31: iconst_3
32: istore        5
34: aload_0
35: new           #11
38: dup
39: aload_3
40: invokespecial #60
43: iconst_3
44: aload         4
46: invokespecial #61
49: astore        6
51: aload_0
52: new           #62
55: dup
56: aload_3
57: invokespecial #63
60: iconst_3
61: aload         4
63: invokespecial #61
66: astore        7
68: iconst_0
69: istore        8
71: iload         8
73: iconst_1
74: if_icmpgt     99
77: aload         6
79: iload         8
81: daload
82: aload         7
84: iload         8
86: daload
87: ldc2_w        #56
90: invokestatic  #46
93: iinc          8, 1
96: goto          71
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testMath798WithToleranceTooLow
Start line: 134
End line: 141
Method source code: 
    public void testMath798WithToleranceTooLow() {
        final double tol = 1e-100;
        final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(tol, tol);
        final double[] init = new double[] { 0, 0 };
        final int maxEval = 10000; // Trying hard to fit.

        final double[] gn = doMath798(new GaussNewtonOptimizer(checker), maxEval, init);
    }
Method byte code: 
0: ldc2_w        #64
3: dstore_1
4: new           #58
7: dup
8: ldc2_w        #64
11: ldc2_w        #64
14: invokespecial #59
17: astore_3
18: iconst_2
19: newarray       double
21: dup
22: iconst_0
23: dconst_0
24: dastore
25: dup
26: iconst_1
27: dconst_0
28: dastore
29: astore        4
31: sipush        10000
34: istore        5
36: aload_0
37: new           #62
40: dup
41: aload_3
42: invokespecial #63
45: sipush        10000
48: aload         4
50: invokespecial #61
53: astore        6
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testMath798WithToleranceTooLowButNoException
Start line: 151
End line: 163
Method source code: 
    public void testMath798WithToleranceTooLowButNoException() {
        final double tol = 1e-100;
        final double[] init = new double[] { 0, 0 };
        final int maxEval = 10000; // Trying hard to fit.
        final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(tol, tol, maxEval);

        final double[] lm = doMath798(new LevenbergMarquardtOptimizer(checker), maxEval, init);
        final double[] gn = doMath798(new GaussNewtonOptimizer(checker), maxEval, init);

        for (int i = 0; i <= 1; i++) {
            Assert.assertEquals(lm[i], gn[i], 1e-15);
        }
    }
Method byte code: 
0: ldc2_w        #64
3: dstore_1
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_0
10: dastore
11: dup
12: iconst_1
13: dconst_0
14: dastore
15: astore_3
16: sipush        10000
19: istore        4
21: new           #58
24: dup
25: ldc2_w        #64
28: ldc2_w        #64
31: sipush        10000
34: invokespecial #66
37: astore        5
39: aload_0
40: new           #11
43: dup
44: aload         5
46: invokespecial #60
49: sipush        10000
52: aload_3
53: invokespecial #61
56: astore        6
58: aload_0
59: new           #62
62: dup
63: aload         5
65: invokespecial #63
68: sipush        10000
71: aload_3
72: invokespecial #61
75: astore        7
77: iconst_0
78: istore        8
80: iload         8
82: iconst_1
83: if_icmpgt     108
86: aload         6
88: iload         8
90: daload
91: aload         7
93: iload         8
95: daload
96: ldc2_w        #67
99: invokestatic  #46
102: iinc          8, 1
105: goto          80
108: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testRedundantSolvable
Start line: 214
End line: 217
Method source code: 
    public void testRedundantSolvable() {
        // Levenberg-Marquardt should handle redundant information gracefully
        checkUnsolvableProblem(new LevenbergMarquardtOptimizer(), true);
    }
Method byte code: 
0: aload_0
1: new           #11
4: dup
5: invokespecial #12
8: iconst_1
9: invokespecial #195
12: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testRedundantUnsolvable
Start line: 220
End line: 223
Method source code: 
    public void testRedundantUnsolvable() {
        // Gauss-Newton should not be able to solve redundant information
        checkUnsolvableProblem(new GaussNewtonOptimizer(true, new SimpleVectorValueChecker(1e-15, 1e-15)), false);
    }
Method byte code: 
0: aload_0
1: new           #62
4: dup
5: iconst_1
6: new           #58
9: dup
10: ldc2_w        #67
13: ldc2_w        #67
16: invokespecial #59
19: invokespecial #196
22: iconst_0
23: invokespecial #195
26: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testFit
Start line: 40
End line: 59
Method source code: 
    public void testFit() {
        final RealDistribution rng = new UniformRealDistribution(-100, 100);
        rng.reseedRandomGenerator(64925784252L);

        final LevenbergMarquardtOptimizer optim = new LevenbergMarquardtOptimizer();
        final PolynomialFitter fitter = new PolynomialFitter(optim);
        final double[] coeff = { 12.9, -3.4, 2.1 }; // 12.9 - 3.4 x + 2.1 x^2
        final PolynomialFunction f = new PolynomialFunction(coeff);

        // Collect data from a known polynomial.
        for (int i = 0; i < 100; i++) {
            final double x = rng.sample();
            fitter.addObservedPoint(x, f.value(x));
        }

        // Start fit from initial guesses that are far from the optimal values.
        final double[] best = fitter.fit(new double[] { -1e-20, 3e15, -5e25 });

        TestUtils.assertEquals("best != coeff", coeff, best, 1e-12);
    }
Method byte code: 
0: new           #2
3: dup
4: ldc2_w        #3
7: ldc2_w        #5
10: invokespecial #7
13: astore_1
14: aload_1
15: ldc2_w        #8
18: invokeinterface #10,  3
23: new           #11
26: dup
27: invokespecial #12
30: astore_2
31: new           #13
34: dup
35: aload_2
36: invokespecial #14
39: astore_3
40: iconst_3
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #15
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #17
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #19
60: dastore
61: astore        4
63: new           #21
66: dup
67: aload         4
69: invokespecial #22
72: astore        5
74: iconst_0
75: istore        6
77: iload         6
79: bipush        100
81: if_icmpge     111
84: aload_1
85: invokeinterface #23,  1
90: dstore        7
92: aload_3
93: dload         7
95: aload         5
97: dload         7
99: invokevirtual #24
102: invokevirtual #25
105: iinc          6, 1
108: goto          77
111: aload_3
112: iconst_3
113: newarray       double
115: dup
116: iconst_0
117: ldc2_w        #26
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #28
126: dastore
127: dup
128: iconst_2
129: ldc2_w        #30
132: dastore
133: invokevirtual #32
136: astore        6
138: ldc           #33
140: aload         4
142: aload         6
144: ldc2_w        #34
147: invokestatic  #36
150: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testNoError
Start line: 62
End line: 81
Method source code: 
    public void testNoError() {
        Random randomizer = new Random(64925784252l);
        for (int degree = 1; degree < 10; ++degree) {
            PolynomialFunction p = buildRandomPolynomial(degree, randomizer);

            PolynomialFitter fitter = new PolynomialFitter(new LevenbergMarquardtOptimizer());
            for (int i = 0; i <= degree; ++i) {
                fitter.addObservedPoint(1.0, i, p.value(i));
            }

            final double[] init = new double[degree + 1];
            PolynomialFunction fitted = new PolynomialFunction(fitter.fit(init));

            for (double x = -1.0; x < 1.0; x += 0.01) {
                double error = FastMath.abs(p.value(x) - fitted.value(x)) /
                               (1.0 + FastMath.abs(p.value(x)));
                Assert.assertEquals(0.0, error, 1.0e-6);
            }
        }
    }
Method byte code: 
0: new           #37
3: dup
4: ldc2_w        #8
7: invokespecial #38
10: astore_1
11: iconst_1
12: istore_2
13: iload_2
14: bipush        10
16: if_icmpge     165
19: aload_0
20: iload_2
21: aload_1
22: invokespecial #39
25: astore_3
26: new           #13
29: dup
30: new           #11
33: dup
34: invokespecial #12
37: invokespecial #14
40: astore        4
42: iconst_0
43: istore        5
45: iload         5
47: iload_2
48: if_icmpgt     73
51: aload         4
53: dconst_1
54: iload         5
56: i2d
57: aload_3
58: iload         5
60: i2d
61: invokevirtual #24
64: invokevirtual #40
67: iinc          5, 1
70: goto          45
73: iload_2
74: iconst_1
75: iadd
76: newarray       double
78: astore        5
80: new           #21
83: dup
84: aload         4
86: aload         5
88: invokevirtual #32
91: invokespecial #22
94: astore        6
96: ldc2_w        #41
99: dstore        7
101: dload         7
103: dconst_1
104: dcmpg
105: ifge          159
108: aload_3
109: dload         7
111: invokevirtual #24
114: aload         6
116: dload         7
118: invokevirtual #24
121: dsub
122: invokestatic  #43
125: dconst_1
126: aload_3
127: dload         7
129: invokevirtual #24
132: invokestatic  #43
135: dadd
136: ddiv
137: dstore        9
139: dconst_0
140: dload         9
142: ldc2_w        #44
145: invokestatic  #46
148: dload         7
150: ldc2_w        #47
153: dadd
154: dstore        7
156: goto          101
159: iinc          2, 1
162: goto          13
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testSmallError
Start line: 84
End line: 107
Method source code: 
    public void testSmallError() {
        Random randomizer = new Random(53882150042l);
        double maxError = 0;
        for (int degree = 0; degree < 10; ++degree) {
            PolynomialFunction p = buildRandomPolynomial(degree, randomizer);

            PolynomialFitter fitter = new PolynomialFitter(new LevenbergMarquardtOptimizer());
            for (double x = -1.0; x < 1.0; x += 0.01) {
                fitter.addObservedPoint(1.0, x,
                                        p.value(x) + 0.1 * randomizer.nextGaussian());
            }

            final double[] init = new double[degree + 1];
            PolynomialFunction fitted = new PolynomialFunction(fitter.fit(init));

            for (double x = -1.0; x < 1.0; x += 0.01) {
                double error = FastMath.abs(p.value(x) - fitted.value(x)) /
                              (1.0 + FastMath.abs(p.value(x)));
                maxError = FastMath.max(maxError, error);
                Assert.assertTrue(FastMath.abs(error) < 0.1);
            }
        }
        Assert.assertTrue(maxError > 0.01);
    }
Method byte code: 
0: new           #37
3: dup
4: ldc2_w        #49
7: invokespecial #38
10: astore_1
11: dconst_0
12: dstore_2
13: iconst_0
14: istore        4
16: iload         4
18: bipush        10
20: if_icmpge     208
23: aload_0
24: iload         4
26: aload_1
27: invokespecial #39
30: astore        5
32: new           #13
35: dup
36: new           #11
39: dup
40: invokespecial #12
43: invokespecial #14
46: astore        6
48: ldc2_w        #41
51: dstore        7
53: dload         7
55: dconst_1
56: dcmpg
57: ifge          95
60: aload         6
62: dconst_1
63: dload         7
65: aload         5
67: dload         7
69: invokevirtual #24
72: ldc2_w        #51
75: aload_1
76: invokevirtual #53
79: dmul
80: dadd
81: invokevirtual #40
84: dload         7
86: ldc2_w        #47
89: dadd
90: dstore        7
92: goto          53
95: iload         4
97: iconst_1
98: iadd
99: newarray       double
101: astore        7
103: new           #21
106: dup
107: aload         6
109: aload         7
111: invokevirtual #32
114: invokespecial #22
117: astore        8
119: ldc2_w        #41
122: dstore        9
124: dload         9
126: dconst_1
127: dcmpg
128: ifge          202
131: aload         5
133: dload         9
135: invokevirtual #24
138: aload         8
140: dload         9
142: invokevirtual #24
145: dsub
146: invokestatic  #43
149: dconst_1
150: aload         5
152: dload         9
154: invokevirtual #24
157: invokestatic  #43
160: dadd
161: ddiv
162: dstore        11
164: dload_2
165: dload         11
167: invokestatic  #54
170: dstore_2
171: dload         11
173: invokestatic  #43
176: ldc2_w        #51
179: dcmpg
180: ifge          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #55
191: dload         9
193: ldc2_w        #47
196: dadd
197: dstore        9
199: goto          124
202: iinc          4, 1
205: goto          16
208: dload_2
209: ldc2_w        #47
212: dcmpl
213: ifle          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #55
224: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testMath798
Start line: 110
End line: 122
Method source code: 
    public void testMath798() {
        final double tol = 1e-14;
        final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(tol, tol);
        final double[] init = new double[] { 0, 0 };
        final int maxEval = 3;

        final double[] lm = doMath798(new LevenbergMarquardtOptimizer(checker), maxEval, init);
        final double[] gn = doMath798(new GaussNewtonOptimizer(checker), maxEval, init);

        for (int i = 0; i <= 1; i++) {
            Assert.assertEquals(lm[i], gn[i], tol);
        }
    }
Method byte code: 
0: ldc2_w        #56
3: dstore_1
4: new           #58
7: dup
8: ldc2_w        #56
11: ldc2_w        #56
14: invokespecial #59
17: astore_3
18: iconst_2
19: newarray       double
21: dup
22: iconst_0
23: dconst_0
24: dastore
25: dup
26: iconst_1
27: dconst_0
28: dastore
29: astore        4
31: iconst_3
32: istore        5
34: aload_0
35: new           #11
38: dup
39: aload_3
40: invokespecial #60
43: iconst_3
44: aload         4
46: invokespecial #61
49: astore        6
51: aload_0
52: new           #62
55: dup
56: aload_3
57: invokespecial #63
60: iconst_3
61: aload         4
63: invokespecial #61
66: astore        7
68: iconst_0
69: istore        8
71: iload         8
73: iconst_1
74: if_icmpgt     99
77: aload         6
79: iload         8
81: daload
82: aload         7
84: iload         8
86: daload
87: ldc2_w        #56
90: invokestatic  #46
93: iinc          8, 1
96: goto          71
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testMath798WithToleranceTooLow
Start line: 131
End line: 138
Method source code: 
    public void testMath798WithToleranceTooLow() {
        final double tol = 1e-100;
        final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(tol, tol);
        final double[] init = new double[] { 0, 0 };
        final int maxEval = 10000; // Trying hard to fit.

        final double[] gn = doMath798(new GaussNewtonOptimizer(checker), maxEval, init);
    }
Method byte code: 
0: ldc2_w        #64
3: dstore_1
4: new           #58
7: dup
8: ldc2_w        #64
11: ldc2_w        #64
14: invokespecial #59
17: astore_3
18: iconst_2
19: newarray       double
21: dup
22: iconst_0
23: dconst_0
24: dastore
25: dup
26: iconst_1
27: dconst_0
28: dastore
29: astore        4
31: sipush        10000
34: istore        5
36: aload_0
37: new           #62
40: dup
41: aload_3
42: invokespecial #63
45: sipush        10000
48: aload         4
50: invokespecial #61
53: astore        6
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testMath798WithToleranceTooLowButNoException
Start line: 148
End line: 160
Method source code: 
    public void testMath798WithToleranceTooLowButNoException() {
        final double tol = 1e-100;
        final double[] init = new double[] { 0, 0 };
        final int maxEval = 10000; // Trying hard to fit.
        final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(tol, tol, maxEval);

        final double[] lm = doMath798(new LevenbergMarquardtOptimizer(checker), maxEval, init);
        final double[] gn = doMath798(new GaussNewtonOptimizer(checker), maxEval, init);

        for (int i = 0; i <= 1; i++) {
            Assert.assertEquals(lm[i], gn[i], 1e-15);
        }
    }
Method byte code: 
0: ldc2_w        #64
3: dstore_1
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_0
10: dastore
11: dup
12: iconst_1
13: dconst_0
14: dastore
15: astore_3
16: sipush        10000
19: istore        4
21: new           #58
24: dup
25: ldc2_w        #64
28: ldc2_w        #64
31: sipush        10000
34: invokespecial #66
37: astore        5
39: aload_0
40: new           #11
43: dup
44: aload         5
46: invokespecial #60
49: sipush        10000
52: aload_3
53: invokespecial #61
56: astore        6
58: aload_0
59: new           #62
62: dup
63: aload         5
65: invokespecial #63
68: sipush        10000
71: aload_3
72: invokespecial #61
75: astore        7
77: iconst_0
78: istore        8
80: iload         8
82: iconst_1
83: if_icmpgt     108
86: aload         6
88: iload         8
90: daload
91: aload         7
93: iload         8
95: daload
96: ldc2_w        #67
99: invokestatic  #46
102: iinc          8, 1
105: goto          80
108: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testRedundantSolvable
Start line: 211
End line: 214
Method source code: 
    public void testRedundantSolvable() {
        // Levenberg-Marquardt should handle redundant information gracefully
        checkUnsolvableProblem(new LevenbergMarquardtOptimizer(), true);
    }
Method byte code: 
0: aload_0
1: new           #11
4: dup
5: invokespecial #12
8: iconst_1
9: invokespecial #195
12: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testRedundantUnsolvable
Start line: 217
End line: 220
Method source code: 
    public void testRedundantUnsolvable() {
        // Gauss-Newton should not be able to solve redundant information
        checkUnsolvableProblem(new GaussNewtonOptimizer(true, new SimpleVectorValueChecker(1e-15, 1e-15)), false);
    }
Method byte code: 
0: aload_0
1: new           #62
4: dup
5: iconst_1
6: new           #58
9: dup
10: ldc2_w        #67
13: ldc2_w        #67
16: invokespecial #59
19: invokespecial #196
22: iconst_0
23: invokespecial #195
26: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/fitting/PolynomialFitterTest.class
Class name: PolynomialFitterTest
Method name: testLargeSample
Start line: 223
End line: 247
Method source code: 
    public void testLargeSample() {
        Random randomizer = new Random(0x5551480dca5b369bl);
        double maxError = 0;
        for (int degree = 0; degree < 10; ++degree) {
            PolynomialFunction p = buildRandomPolynomial(degree, randomizer);

            PolynomialFitter fitter = new PolynomialFitter(new LevenbergMarquardtOptimizer());
            for (int i = 0; i < 40000; ++i) {
                double x = -1.0 + i / 20000.0;
                fitter.addObservedPoint(1.0, x,
                                        p.value(x) + 0.1 * randomizer.nextGaussian());
            }

            final double[] init = new double[degree + 1];
            PolynomialFunction fitted = new PolynomialFunction(fitter.fit(init));

            for (double x = -1.0; x < 1.0; x += 0.01) {
                double error = FastMath.abs(p.value(x) - fitted.value(x)) /
                              (1.0 + FastMath.abs(p.value(x)));
                maxError = FastMath.max(maxError, error);
                Assert.assertTrue(FastMath.abs(error) < 0.01);
            }
        }
        Assert.assertTrue(maxError > 0.001);
    }
Method byte code: 
0: new           #37
3: dup
4: ldc2_w        #197
7: invokespecial #38
10: astore_1
11: dconst_0
12: dstore_2
13: iconst_0
14: istore        4
16: iload         4
18: bipush        10
20: if_icmpge     214
23: aload_0
24: iload         4
26: aload_1
27: invokespecial #39
30: astore        5
32: new           #13
35: dup
36: new           #11
39: dup
40: invokespecial #12
43: invokespecial #14
46: astore        6
48: iconst_0
49: istore        7
51: iload         7
53: ldc           #199
55: if_icmpge     101
58: ldc2_w        #41
61: iload         7
63: i2d
64: ldc2_w        #200
67: ddiv
68: dadd
69: dstore        8
71: aload         6
73: dconst_1
74: dload         8
76: aload         5
78: dload         8
80: invokevirtual #24
83: ldc2_w        #51
86: aload_1
87: invokevirtual #53
90: dmul
91: dadd
92: invokevirtual #40
95: iinc          7, 1
98: goto          51
101: iload         4
103: iconst_1
104: iadd
105: newarray       double
107: astore        7
109: new           #21
112: dup
113: aload         6
115: aload         7
117: invokevirtual #32
120: invokespecial #22
123: astore        8
125: ldc2_w        #41
128: dstore        9
130: dload         9
132: dconst_1
133: dcmpg
134: ifge          208
137: aload         5
139: dload         9
141: invokevirtual #24
144: aload         8
146: dload         9
148: invokevirtual #24
151: dsub
152: invokestatic  #43
155: dconst_1
156: aload         5
158: dload         9
160: invokevirtual #24
163: invokestatic  #43
166: dadd
167: ddiv
168: dstore        11
170: dload_2
171: dload         11
173: invokestatic  #54
176: dstore_2
177: dload         11
179: invokestatic  #43
182: ldc2_w        #47
185: dcmpg
186: ifge          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #55
197: dload         9
199: ldc2_w        #47
202: dadd
203: dstore        9
205: goto          130
208: iinc          4, 1
211: goto          16
214: dload_2
215: ldc2_w        #202
218: dcmpl
219: ifle          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #55
230: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/Weight_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/Weight_ESTest.class
Class name: Weight_ESTest
Method name: test0
Start line: 20
End line: 25
Method source code: 
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      Weight weight0 = new Weight(doubleArray0);
      RealMatrix realMatrix0 = weight0.getWeight();
      assertEquals(2, realMatrix0.getRowDimension());
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: invokespecial #3
12: astore_2
13: aload_2
14: invokevirtual #4
17: astore_3
18: ldc2_w        #5
21: aload_3
22: invokeinterface #7,  1
27: i2l
28: invokestatic  #8
31: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/Weight_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/Weight_ESTest.class
Class name: Weight_ESTest
Method name: test1
Start line: 28
End line: 32
Method source code: 
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(doubleArray0, false);
      Weight weight0 = new Weight(diagonalMatrix0);
  }
Method byte code: 
0: iconst_5
1: newarray       double
3: astore_1
4: new           #9
7: dup
8: aload_1
9: iconst_0
10: invokespecial #10
13: astore_2
14: new           #2
17: dup
18: aload_2
19: invokespecial #11
22: astore_3
23: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/Weight_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/Weight_ESTest.class
Class name: Weight_ESTest
Method name: test2
Start line: 35
End line: 49
Method source code: 
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      Weight weight0 = null;
      try {
        weight0 = new Weight(array2DRowRealMatrix0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non square (1x3) matrix
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.Weight", e);
      }
  }
Method byte code: 
0: iconst_3
1: newarray       double
3: astore_1
4: new           #12
7: dup
8: aload_1
9: invokespecial #13
12: astore_2
13: aconst_null
14: astore_3
15: new           #2
18: dup
19: aload_2
20: invokespecial #11
23: astore_3
24: ldc           #14
26: invokestatic  #15
29: goto          41
32: astore        4
34: ldc           #17
36: aload         4
38: invokestatic  #18
41: return
Exception table:
from    to  target type
15    29    32   Class java/lang/IllegalArgumentException
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.class
Class name: AbstractLeastSquaresOptimizerTest
Method name: testGetChiSquare
Start line: 42
End line: 64
Method source code: 
    public void testGetChiSquare() throws IOException {
        final StatisticalReferenceDataset dataset
            = StatisticalReferenceDatasetFactory.createKirby2();
        final AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        final double[] a = dataset.getParameters();
        final double[] y = dataset.getData()[1];
        final double[] w = new double[y.length];
        Arrays.fill(w, 1.0);

        StatisticalReferenceDataset.LeastSquaresProblem problem
            = dataset.getLeastSquaresProblem();

        optimizer.optimize(new MaxEval(1),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           new Target(y),
                           new Weight(w),
                           new InitialGuess(a));
        final double expected = dataset.getResidualSumOfSquares();
        final double actual = optimizer.getChiSquare();
        Assert.assertEquals(dataset.getName(), expected, actual,
                            1E-11 * expected);
    }
Method byte code: 
0: invokestatic  #4
3: astore_1
4: invokestatic  #5
7: astore_2
8: aload_1
9: invokevirtual #6
12: astore_3
13: aload_1
14: invokevirtual #7
17: iconst_1
18: aaload
19: astore        4
21: aload         4
23: arraylength
24: newarray       double
26: astore        5
28: aload         5
30: dconst_1
31: invokestatic  #8
34: aload_1
35: invokevirtual #9
38: astore        6
40: aload_2
41: bipush        6
43: anewarray     #10
46: dup
47: iconst_0
48: new           #11
51: dup
52: iconst_1
53: invokespecial #12
56: aastore
57: dup
58: iconst_1
59: aload         6
61: invokevirtual #13
64: aastore
65: dup
66: iconst_2
67: aload         6
69: invokevirtual #14
72: aastore
73: dup
74: iconst_3
75: new           #15
78: dup
79: aload         4
81: invokespecial #16
84: aastore
85: dup
86: iconst_4
87: new           #17
90: dup
91: aload         5
93: invokespecial #18
96: aastore
97: dup
98: iconst_5
99: new           #19
102: dup
103: aload_3
104: invokespecial #20
107: aastore
108: invokevirtual #21
111: pop
112: aload_1
113: invokevirtual #22
116: dstore        7
118: aload_2
119: invokevirtual #23
122: dstore        9
124: aload_1
125: invokevirtual #24
128: dload         7
130: dload         9
132: ldc2_w        #25
135: dload         7
137: dmul
138: invokestatic  #27
141: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.class
Class name: AbstractLeastSquaresOptimizerTest
Method name: testGetRMS
Start line: 67
End line: 92
Method source code: 
    public void testGetRMS() throws IOException {
        final StatisticalReferenceDataset dataset
            = StatisticalReferenceDatasetFactory.createKirby2();
        final AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        final double[] a = dataset.getParameters();
        final double[] y = dataset.getData()[1];
        final double[] w = new double[y.length];
        Arrays.fill(w, 1);

        StatisticalReferenceDataset.LeastSquaresProblem problem
            = dataset.getLeastSquaresProblem();

        optimizer.optimize(new MaxEval(1),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           new Target(y),
                           new Weight(w),
                           new InitialGuess(a));

        final double expected = FastMath
            .sqrt(dataset.getResidualSumOfSquares() /
                  dataset.getNumObservations());
        final double actual = optimizer.getRMS();
        Assert.assertEquals(dataset.getName(), expected, actual,
                            1E-11 * expected);
    }
Method byte code: 
0: invokestatic  #4
3: astore_1
4: invokestatic  #5
7: astore_2
8: aload_1
9: invokevirtual #6
12: astore_3
13: aload_1
14: invokevirtual #7
17: iconst_1
18: aaload
19: astore        4
21: aload         4
23: arraylength
24: newarray       double
26: astore        5
28: aload         5
30: dconst_1
31: invokestatic  #8
34: aload_1
35: invokevirtual #9
38: astore        6
40: aload_2
41: bipush        6
43: anewarray     #10
46: dup
47: iconst_0
48: new           #11
51: dup
52: iconst_1
53: invokespecial #12
56: aastore
57: dup
58: iconst_1
59: aload         6
61: invokevirtual #13
64: aastore
65: dup
66: iconst_2
67: aload         6
69: invokevirtual #14
72: aastore
73: dup
74: iconst_3
75: new           #15
78: dup
79: aload         4
81: invokespecial #16
84: aastore
85: dup
86: iconst_4
87: new           #17
90: dup
91: aload         5
93: invokespecial #18
96: aastore
97: dup
98: iconst_5
99: new           #19
102: dup
103: aload_3
104: invokespecial #20
107: aastore
108: invokevirtual #21
111: pop
112: aload_1
113: invokevirtual #22
116: aload_1
117: invokevirtual #28
120: i2d
121: ddiv
122: invokestatic  #29
125: dstore        7
127: aload_2
128: invokevirtual #30
131: dstore        9
133: aload_1
134: invokevirtual #24
137: dload         7
139: dload         9
141: ldc2_w        #25
144: dload         7
146: dmul
147: invokestatic  #27
150: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.class
Class name: AbstractLeastSquaresOptimizerTest
Method name: testComputeSigma
Start line: 95
End line: 124
Method source code: 
    public void testComputeSigma() throws IOException {
        final StatisticalReferenceDataset dataset
            = StatisticalReferenceDatasetFactory.createKirby2();
        final AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        final double[] a = dataset.getParameters();
        final double[] y = dataset.getData()[1];
        final double[] w = new double[y.length];
        Arrays.fill(w, 1);

        StatisticalReferenceDataset.LeastSquaresProblem problem
            = dataset.getLeastSquaresProblem();

        final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(1),
                                 problem.getModelFunction(),
                                 problem.getModelFunctionJacobian(),
                                 new Target(y),
                                 new Weight(w),
                                 new InitialGuess(a));

        final double[] sig = optimizer.computeSigma(optimum.getPoint(), 1e-14);

        final int dof = y.length - a.length;
        final double[] expected = dataset.getParametersStandardDeviations();
        for (int i = 0; i < sig.length; i++) {
            final double actual = FastMath.sqrt(optimizer.getChiSquare() / dof) * sig[i];
            Assert.assertEquals(dataset.getName() + ", parameter #" + i,
                                expected[i], actual, 1e-6 * expected[i]);
        }
    }
Method byte code: 
0: invokestatic  #4
3: astore_1
4: invokestatic  #5
7: astore_2
8: aload_1
9: invokevirtual #6
12: astore_3
13: aload_1
14: invokevirtual #7
17: iconst_1
18: aaload
19: astore        4
21: aload         4
23: arraylength
24: newarray       double
26: astore        5
28: aload         5
30: dconst_1
31: invokestatic  #8
34: aload_1
35: invokevirtual #9
38: astore        6
40: aload_2
41: bipush        6
43: anewarray     #10
46: dup
47: iconst_0
48: new           #11
51: dup
52: iconst_1
53: invokespecial #12
56: aastore
57: dup
58: iconst_1
59: aload         6
61: invokevirtual #13
64: aastore
65: dup
66: iconst_2
67: aload         6
69: invokevirtual #14
72: aastore
73: dup
74: iconst_3
75: new           #15
78: dup
79: aload         4
81: invokespecial #16
84: aastore
85: dup
86: iconst_4
87: new           #17
90: dup
91: aload         5
93: invokespecial #18
96: aastore
97: dup
98: iconst_5
99: new           #19
102: dup
103: aload_3
104: invokespecial #20
107: aastore
108: invokevirtual #21
111: astore        7
113: aload_2
114: aload         7
116: invokevirtual #31
119: ldc2_w        #32
122: invokevirtual #34
125: astore        8
127: aload         4
129: arraylength
130: aload_3
131: arraylength
132: isub
133: istore        9
135: aload_1
136: invokevirtual #35
139: astore        10
141: iconst_0
142: istore        11
144: iload         11
146: aload         8
148: arraylength
149: if_icmpge     223
152: aload_2
153: invokevirtual #23
156: iload         9
158: i2d
159: ddiv
160: invokestatic  #29
163: aload         8
165: iload         11
167: daload
168: dmul
169: dstore        12
171: new           #36
174: dup
175: invokespecial #37
178: aload_1
179: invokevirtual #24
182: invokevirtual #38
185: ldc           #39
187: invokevirtual #38
190: iload         11
192: invokevirtual #40
195: invokevirtual #41
198: aload         10
200: iload         11
202: daload
203: dload         12
205: ldc2_w        #42
208: aload         10
210: iload         11
212: daload
213: dmul
214: invokestatic  #27
217: iinc          11, 1
220: goto          144
223: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testTrivial
Start line: 108
End line: 122
Method source code: 
    public void testTrivial() {
        LinearProblem problem
            = new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1 }),
                               new InitialGuess(new double[] { 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(1.5, optimum.getPoint()[0], 1e-10);
        Assert.assertEquals(3.0, optimum.getValue()[0], 1e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_1
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_1
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #353
18: dastore
19: aastore
20: iconst_1
21: newarray       double
23: dup
24: iconst_0
25: ldc2_w        #355
28: dastore
29: invokespecial #357
32: astore_1
33: aload_0
34: invokevirtual #358
37: astore_2
38: aload_2
39: bipush        6
41: anewarray     #359
44: dup
45: iconst_0
46: new           #360
49: dup
50: bipush        100
52: invokespecial #361
55: aastore
56: dup
57: iconst_1
58: aload_1
59: invokevirtual #362
62: aastore
63: dup
64: iconst_2
65: aload_1
66: invokevirtual #363
69: aastore
70: dup
71: iconst_3
72: aload_1
73: invokevirtual #364
76: aastore
77: dup
78: iconst_4
79: new           #365
82: dup
83: iconst_1
84: newarray       double
86: dup
87: iconst_0
88: dconst_1
89: dastore
90: invokespecial #366
93: aastore
94: dup
95: iconst_5
96: new           #367
99: dup
100: iconst_1
101: newarray       double
103: dup
104: iconst_0
105: dconst_0
106: dastore
107: invokespecial #368
110: aastore
111: invokevirtual #369
114: astore_3
115: dconst_0
116: aload_2
117: invokevirtual #370
120: ldc2_w        #371
123: invokestatic  #373
126: ldc2_w        #374
129: aload_3
130: invokevirtual #376
133: iconst_0
134: daload
135: ldc2_w        #371
138: invokestatic  #373
141: ldc2_w        #355
144: aload_3
145: invokevirtual #377
148: iconst_0
149: daload
150: ldc2_w        #371
153: invokestatic  #373
156: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testQRColumnsPermutation
Start line: 125
End line: 145
Method source code: 
    public void testQRColumnsPermutation() {

        LinearProblem problem
            = new LinearProblem(new double[][] { { 1, -1 }, { 0, 2 }, { 1, -2 } },
                                new double[] { 4, 6, 1 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1, 1 }),
                               new InitialGuess(new double[] { 0, 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(7, optimum.getPoint()[0], 1e-10);
        Assert.assertEquals(3, optimum.getPoint()[1], 1e-10);
        Assert.assertEquals(4, optimum.getValue()[0], 1e-10);
        Assert.assertEquals(6, optimum.getValue()[1], 1e-10);
        Assert.assertEquals(1, optimum.getValue()[2], 1e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #378
22: dastore
23: aastore
24: dup
25: iconst_1
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #353
38: dastore
39: aastore
40: dup
41: iconst_2
42: iconst_2
43: newarray       double
45: dup
46: iconst_0
47: dconst_1
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #380
54: dastore
55: aastore
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: ldc2_w        #382
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #384
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: invokespecial #357
78: astore_1
79: aload_0
80: invokevirtual #358
83: astore_2
84: aload_2
85: bipush        6
87: anewarray     #359
90: dup
91: iconst_0
92: new           #360
95: dup
96: bipush        100
98: invokespecial #361
101: aastore
102: dup
103: iconst_1
104: aload_1
105: invokevirtual #362
108: aastore
109: dup
110: iconst_2
111: aload_1
112: invokevirtual #363
115: aastore
116: dup
117: iconst_3
118: aload_1
119: invokevirtual #364
122: aastore
123: dup
124: iconst_4
125: new           #365
128: dup
129: iconst_3
130: newarray       double
132: dup
133: iconst_0
134: dconst_1
135: dastore
136: dup
137: iconst_1
138: dconst_1
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: invokespecial #366
147: aastore
148: dup
149: iconst_5
150: new           #367
153: dup
154: iconst_2
155: newarray       double
157: dup
158: iconst_0
159: dconst_0
160: dastore
161: dup
162: iconst_1
163: dconst_0
164: dastore
165: invokespecial #368
168: aastore
169: invokevirtual #369
172: astore_3
173: dconst_0
174: aload_2
175: invokevirtual #370
178: ldc2_w        #371
181: invokestatic  #373
184: ldc2_w        #386
187: aload_3
188: invokevirtual #376
191: iconst_0
192: daload
193: ldc2_w        #371
196: invokestatic  #373
199: ldc2_w        #355
202: aload_3
203: invokevirtual #376
206: iconst_1
207: daload
208: ldc2_w        #371
211: invokestatic  #373
214: ldc2_w        #382
217: aload_3
218: invokevirtual #377
221: iconst_0
222: daload
223: ldc2_w        #371
226: invokestatic  #373
229: ldc2_w        #384
232: aload_3
233: invokevirtual #377
236: iconst_1
237: daload
238: ldc2_w        #371
241: invokestatic  #373
244: dconst_1
245: aload_3
246: invokevirtual #377
249: iconst_2
250: daload
251: ldc2_w        #371
254: invokestatic  #373
257: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testNoDependency
Start line: 148
End line: 169
Method source code: 
    public void testNoDependency() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 2, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 0, 0 },
                { 0, 0, 2, 0, 0, 0 },
                { 0, 0, 0, 2, 0, 0 },
                { 0, 0, 0, 0, 2, 0 },
                { 0, 0, 0, 0, 0, 2 }
        }, new double[] { 0, 1.1, 2.2, 3.3, 4.4, 5.5 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1, 1, 1, 1, 1 }),
                               new InitialGuess(new double[] { 0, 0, 0, 0, 0, 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        for (int i = 0; i < problem.target.length; ++i) {
            Assert.assertEquals(0.55 * i, optimum.getPoint()[i], 1e-10);
        }
    }
Method byte code: 
0: new           #352
3: dup
4: bipush        6
6: anewarray     #2
9: dup
10: iconst_0
11: bipush        6
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #353
20: dastore
21: dup
22: iconst_1
23: dconst_0
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: dup
34: iconst_4
35: dconst_0
36: dastore
37: dup
38: iconst_5
39: dconst_0
40: dastore
41: aastore
42: dup
43: iconst_1
44: bipush        6
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #353
57: dastore
58: dup
59: iconst_2
60: dconst_0
61: dastore
62: dup
63: iconst_3
64: dconst_0
65: dastore
66: dup
67: iconst_4
68: dconst_0
69: dastore
70: dup
71: iconst_5
72: dconst_0
73: dastore
74: aastore
75: dup
76: iconst_2
77: bipush        6
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: dconst_0
88: dastore
89: dup
90: iconst_2
91: ldc2_w        #353
94: dastore
95: dup
96: iconst_3
97: dconst_0
98: dastore
99: dup
100: iconst_4
101: dconst_0
102: dastore
103: dup
104: iconst_5
105: dconst_0
106: dastore
107: aastore
108: dup
109: iconst_3
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_0
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: ldc2_w        #353
131: dastore
132: dup
133: iconst_4
134: dconst_0
135: dastore
136: dup
137: iconst_5
138: dconst_0
139: dastore
140: aastore
141: dup
142: iconst_4
143: bipush        6
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: dconst_0
154: dastore
155: dup
156: iconst_2
157: dconst_0
158: dastore
159: dup
160: iconst_3
161: dconst_0
162: dastore
163: dup
164: iconst_4
165: ldc2_w        #353
168: dastore
169: dup
170: iconst_5
171: dconst_0
172: dastore
173: aastore
174: dup
175: iconst_5
176: bipush        6
178: newarray       double
180: dup
181: iconst_0
182: dconst_0
183: dastore
184: dup
185: iconst_1
186: dconst_0
187: dastore
188: dup
189: iconst_2
190: dconst_0
191: dastore
192: dup
193: iconst_3
194: dconst_0
195: dastore
196: dup
197: iconst_4
198: dconst_0
199: dastore
200: dup
201: iconst_5
202: ldc2_w        #353
205: dastore
206: aastore
207: bipush        6
209: newarray       double
211: dup
212: iconst_0
213: dconst_0
214: dastore
215: dup
216: iconst_1
217: ldc2_w        #388
220: dastore
221: dup
222: iconst_2
223: ldc2_w        #390
226: dastore
227: dup
228: iconst_3
229: ldc2_w        #392
232: dastore
233: dup
234: iconst_4
235: ldc2_w        #394
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #396
244: dastore
245: invokespecial #357
248: astore_1
249: aload_0
250: invokevirtual #358
253: astore_2
254: aload_2
255: bipush        6
257: anewarray     #359
260: dup
261: iconst_0
262: new           #360
265: dup
266: bipush        100
268: invokespecial #361
271: aastore
272: dup
273: iconst_1
274: aload_1
275: invokevirtual #362
278: aastore
279: dup
280: iconst_2
281: aload_1
282: invokevirtual #363
285: aastore
286: dup
287: iconst_3
288: aload_1
289: invokevirtual #364
292: aastore
293: dup
294: iconst_4
295: new           #365
298: dup
299: bipush        6
301: newarray       double
303: dup
304: iconst_0
305: dconst_1
306: dastore
307: dup
308: iconst_1
309: dconst_1
310: dastore
311: dup
312: iconst_2
313: dconst_1
314: dastore
315: dup
316: iconst_3
317: dconst_1
318: dastore
319: dup
320: iconst_4
321: dconst_1
322: dastore
323: dup
324: iconst_5
325: dconst_1
326: dastore
327: invokespecial #366
330: aastore
331: dup
332: iconst_5
333: new           #367
336: dup
337: bipush        6
339: newarray       double
341: dup
342: iconst_0
343: dconst_0
344: dastore
345: dup
346: iconst_1
347: dconst_0
348: dastore
349: dup
350: iconst_2
351: dconst_0
352: dastore
353: dup
354: iconst_3
355: dconst_0
356: dastore
357: dup
358: iconst_4
359: dconst_0
360: dastore
361: dup
362: iconst_5
363: dconst_0
364: dastore
365: invokespecial #368
368: aastore
369: invokevirtual #369
372: astore_3
373: dconst_0
374: aload_2
375: invokevirtual #370
378: ldc2_w        #371
381: invokestatic  #373
384: iconst_0
385: istore        4
387: iload         4
389: aload_1
390: invokestatic  #398
393: arraylength
394: if_icmpge     423
397: ldc2_w        #399
400: iload         4
402: i2d
403: dmul
404: aload_3
405: invokevirtual #376
408: iload         4
410: daload
411: ldc2_w        #371
414: invokestatic  #373
417: iinc          4, 1
420: goto          387
423: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testOneSet
Start line: 172
End line: 191
Method source code: 
    public void testOneSet() {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1,  0, 0 },
                { -1,  1, 0 },
                {  0, -1, 1 }
        }, new double[] { 1, 1, 1});
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1, 1 }),
                               new InitialGuess(new double[] { 0, 0, 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(1, optimum.getPoint()[0], 1e-10);
        Assert.assertEquals(2, optimum.getPoint()[1], 1e-10);
        Assert.assertEquals(3, optimum.getPoint()[2], 1e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: dup
22: iconst_2
23: dconst_0
24: dastore
25: aastore
26: dup
27: iconst_1
28: iconst_3
29: newarray       double
31: dup
32: iconst_0
33: ldc2_w        #378
36: dastore
37: dup
38: iconst_1
39: dconst_1
40: dastore
41: dup
42: iconst_2
43: dconst_0
44: dastore
45: aastore
46: dup
47: iconst_2
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #378
60: dastore
61: dup
62: iconst_2
63: dconst_1
64: dastore
65: aastore
66: iconst_3
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_1
76: dastore
77: dup
78: iconst_2
79: dconst_1
80: dastore
81: invokespecial #357
84: astore_1
85: aload_0
86: invokevirtual #358
89: astore_2
90: aload_2
91: bipush        6
93: anewarray     #359
96: dup
97: iconst_0
98: new           #360
101: dup
102: bipush        100
104: invokespecial #361
107: aastore
108: dup
109: iconst_1
110: aload_1
111: invokevirtual #362
114: aastore
115: dup
116: iconst_2
117: aload_1
118: invokevirtual #363
121: aastore
122: dup
123: iconst_3
124: aload_1
125: invokevirtual #364
128: aastore
129: dup
130: iconst_4
131: new           #365
134: dup
135: iconst_3
136: newarray       double
138: dup
139: iconst_0
140: dconst_1
141: dastore
142: dup
143: iconst_1
144: dconst_1
145: dastore
146: dup
147: iconst_2
148: dconst_1
149: dastore
150: invokespecial #366
153: aastore
154: dup
155: iconst_5
156: new           #367
159: dup
160: iconst_3
161: newarray       double
163: dup
164: iconst_0
165: dconst_0
166: dastore
167: dup
168: iconst_1
169: dconst_0
170: dastore
171: dup
172: iconst_2
173: dconst_0
174: dastore
175: invokespecial #368
178: aastore
179: invokevirtual #369
182: astore_3
183: dconst_0
184: aload_2
185: invokevirtual #370
188: ldc2_w        #371
191: invokestatic  #373
194: dconst_1
195: aload_3
196: invokevirtual #376
199: iconst_0
200: daload
201: ldc2_w        #371
204: invokestatic  #373
207: ldc2_w        #353
210: aload_3
211: invokevirtual #376
214: iconst_1
215: daload
216: ldc2_w        #371
219: invokestatic  #373
222: ldc2_w        #355
225: aload_3
226: invokevirtual #376
229: iconst_2
230: daload
231: ldc2_w        #371
234: invokestatic  #373
237: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testTwoSets
Start line: 194
End line: 220
Method source code: 
    public void testTwoSets() {
        double epsilon = 1e-7;
        LinearProblem problem = new LinearProblem(new double[][] {
                {  2,  1,   0,  4,       0, 0 },
                { -4, -2,   3, -7,       0, 0 },
                {  4,  1,  -2,  8,       0, 0 },
                {  0, -3, -12, -1,       0, 0 },
                {  0,  0,   0,  0, epsilon, 1 },
                {  0,  0,   0,  0,       1, 1 }
        }, new double[] { 2, -9, 2, 2, 1 + epsilon * epsilon, 2});

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1, 1, 1, 1, 1 }),
                               new InitialGuess(new double[] { 0, 0, 0, 0, 0, 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(3, optimum.getPoint()[0], 1e-10);
        Assert.assertEquals(4, optimum.getPoint()[1], 1e-10);
        Assert.assertEquals(-1, optimum.getPoint()[2], 1e-10);
        Assert.assertEquals(-2, optimum.getPoint()[3], 1e-10);
        Assert.assertEquals(1 + epsilon, optimum.getPoint()[4], 1e-10);
        Assert.assertEquals(1 - epsilon, optimum.getPoint()[5], 1e-10);
    }
Method byte code: 
0: ldc2_w        #401
3: dstore_1
4: new           #352
7: dup
8: bipush        6
10: anewarray     #2
13: dup
14: iconst_0
15: bipush        6
17: newarray       double
19: dup
20: iconst_0
21: ldc2_w        #353
24: dastore
25: dup
26: iconst_1
27: dconst_1
28: dastore
29: dup
30: iconst_2
31: dconst_0
32: dastore
33: dup
34: iconst_3
35: ldc2_w        #382
38: dastore
39: dup
40: iconst_4
41: dconst_0
42: dastore
43: dup
44: iconst_5
45: dconst_0
46: dastore
47: aastore
48: dup
49: iconst_1
50: bipush        6
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #403
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #380
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #355
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #405
77: dastore
78: dup
79: iconst_4
80: dconst_0
81: dastore
82: dup
83: iconst_5
84: dconst_0
85: dastore
86: aastore
87: dup
88: iconst_2
89: bipush        6
91: newarray       double
93: dup
94: iconst_0
95: ldc2_w        #382
98: dastore
99: dup
100: iconst_1
101: dconst_1
102: dastore
103: dup
104: iconst_2
105: ldc2_w        #380
108: dastore
109: dup
110: iconst_3
111: ldc2_w        #407
114: dastore
115: dup
116: iconst_4
117: dconst_0
118: dastore
119: dup
120: iconst_5
121: dconst_0
122: dastore
123: aastore
124: dup
125: iconst_3
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #409
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #411
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #378
151: dastore
152: dup
153: iconst_4
154: dconst_0
155: dastore
156: dup
157: iconst_5
158: dconst_0
159: dastore
160: aastore
161: dup
162: iconst_4
163: bipush        6
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: dup
172: iconst_1
173: dconst_0
174: dastore
175: dup
176: iconst_2
177: dconst_0
178: dastore
179: dup
180: iconst_3
181: dconst_0
182: dastore
183: dup
184: iconst_4
185: dload_1
186: dastore
187: dup
188: iconst_5
189: dconst_1
190: dastore
191: aastore
192: dup
193: iconst_5
194: bipush        6
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: dup
203: iconst_1
204: dconst_0
205: dastore
206: dup
207: iconst_2
208: dconst_0
209: dastore
210: dup
211: iconst_3
212: dconst_0
213: dastore
214: dup
215: iconst_4
216: dconst_1
217: dastore
218: dup
219: iconst_5
220: dconst_1
221: dastore
222: aastore
223: bipush        6
225: newarray       double
227: dup
228: iconst_0
229: ldc2_w        #353
232: dastore
233: dup
234: iconst_1
235: ldc2_w        #413
238: dastore
239: dup
240: iconst_2
241: ldc2_w        #353
244: dastore
245: dup
246: iconst_3
247: ldc2_w        #353
250: dastore
251: dup
252: iconst_4
253: dconst_1
254: dload_1
255: dload_1
256: dmul
257: dadd
258: dastore
259: dup
260: iconst_5
261: ldc2_w        #353
264: dastore
265: invokespecial #357
268: astore_3
269: aload_0
270: invokevirtual #358
273: astore        4
275: aload         4
277: bipush        6
279: anewarray     #359
282: dup
283: iconst_0
284: new           #360
287: dup
288: bipush        100
290: invokespecial #361
293: aastore
294: dup
295: iconst_1
296: aload_3
297: invokevirtual #362
300: aastore
301: dup
302: iconst_2
303: aload_3
304: invokevirtual #363
307: aastore
308: dup
309: iconst_3
310: aload_3
311: invokevirtual #364
314: aastore
315: dup
316: iconst_4
317: new           #365
320: dup
321: bipush        6
323: newarray       double
325: dup
326: iconst_0
327: dconst_1
328: dastore
329: dup
330: iconst_1
331: dconst_1
332: dastore
333: dup
334: iconst_2
335: dconst_1
336: dastore
337: dup
338: iconst_3
339: dconst_1
340: dastore
341: dup
342: iconst_4
343: dconst_1
344: dastore
345: dup
346: iconst_5
347: dconst_1
348: dastore
349: invokespecial #366
352: aastore
353: dup
354: iconst_5
355: new           #367
358: dup
359: bipush        6
361: newarray       double
363: dup
364: iconst_0
365: dconst_0
366: dastore
367: dup
368: iconst_1
369: dconst_0
370: dastore
371: dup
372: iconst_2
373: dconst_0
374: dastore
375: dup
376: iconst_3
377: dconst_0
378: dastore
379: dup
380: iconst_4
381: dconst_0
382: dastore
383: dup
384: iconst_5
385: dconst_0
386: dastore
387: invokespecial #368
390: aastore
391: invokevirtual #369
394: astore        5
396: dconst_0
397: aload         4
399: invokevirtual #370
402: ldc2_w        #371
405: invokestatic  #373
408: ldc2_w        #355
411: aload         5
413: invokevirtual #376
416: iconst_0
417: daload
418: ldc2_w        #371
421: invokestatic  #373
424: ldc2_w        #382
427: aload         5
429: invokevirtual #376
432: iconst_1
433: daload
434: ldc2_w        #371
437: invokestatic  #373
440: ldc2_w        #378
443: aload         5
445: invokevirtual #376
448: iconst_2
449: daload
450: ldc2_w        #371
453: invokestatic  #373
456: ldc2_w        #380
459: aload         5
461: invokevirtual #376
464: iconst_3
465: daload
466: ldc2_w        #371
469: invokestatic  #373
472: dconst_1
473: dload_1
474: dadd
475: aload         5
477: invokevirtual #376
480: iconst_4
481: daload
482: ldc2_w        #371
485: invokestatic  #373
488: dconst_1
489: dload_1
490: dsub
491: aload         5
493: invokevirtual #376
496: iconst_5
497: daload
498: ldc2_w        #371
501: invokestatic  #373
504: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testNonInvertible
Start line: 223
End line: 239
Method source code: 
    public void testNonInvertible() throws Exception {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1, 2, -3 },
                {  2, 1,  3 },
                { -3, 0, -9 }
        }, new double[] { 1, 1, 1 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();

        optimizer.optimize(new MaxEval(100),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           problem.getTarget(),
                           new Weight(new double[] { 1, 1, 1 }),
                           new InitialGuess(new double[] { 0, 0, 0 }));
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #353
22: dastore
23: dup
24: iconst_2
25: ldc2_w        #409
28: dastore
29: aastore
30: dup
31: iconst_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #353
40: dastore
41: dup
42: iconst_1
43: dconst_1
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #355
50: dastore
51: aastore
52: dup
53: iconst_2
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #409
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #413
72: dastore
73: aastore
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_1
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: invokespecial #357
92: astore_1
93: aload_0
94: invokevirtual #358
97: astore_2
98: aload_2
99: bipush        6
101: anewarray     #359
104: dup
105: iconst_0
106: new           #360
109: dup
110: bipush        100
112: invokespecial #361
115: aastore
116: dup
117: iconst_1
118: aload_1
119: invokevirtual #362
122: aastore
123: dup
124: iconst_2
125: aload_1
126: invokevirtual #363
129: aastore
130: dup
131: iconst_3
132: aload_1
133: invokevirtual #364
136: aastore
137: dup
138: iconst_4
139: new           #365
142: dup
143: iconst_3
144: newarray       double
146: dup
147: iconst_0
148: dconst_1
149: dastore
150: dup
151: iconst_1
152: dconst_1
153: dastore
154: dup
155: iconst_2
156: dconst_1
157: dastore
158: invokespecial #366
161: aastore
162: dup
163: iconst_5
164: new           #367
167: dup
168: iconst_3
169: newarray       double
171: dup
172: iconst_0
173: dconst_0
174: dastore
175: dup
176: iconst_1
177: dconst_0
178: dastore
179: dup
180: iconst_2
181: dconst_0
182: dastore
183: invokespecial #368
186: aastore
187: invokevirtual #369
190: pop
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testIllConditioned
Start line: 242
End line: 281
Method source code: 
    public void testIllConditioned() {
        LinearProblem problem1 = new LinearProblem(new double[][] {
                { 10, 7,  8,  7 },
                {  7, 5,  6,  5 },
                {  8, 6, 10,  9 },
                {  7, 5,  9, 10 }
        }, new double[] { 32, 23, 33, 31 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum1 =
            optimizer.optimize(new MaxEval(100),
                               problem1.getModelFunction(),
                               problem1.getModelFunctionJacobian(),
                               problem1.getTarget(),
                               new Weight(new double[] { 1, 1, 1, 1 }),
                               new InitialGuess(new double[] { 0, 1, 2, 3 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(1, optimum1.getPoint()[0], 1e-10);
        Assert.assertEquals(1, optimum1.getPoint()[1], 1e-10);
        Assert.assertEquals(1, optimum1.getPoint()[2], 1e-10);
        Assert.assertEquals(1, optimum1.getPoint()[3], 1e-10);

        LinearProblem problem2 = new LinearProblem(new double[][] {
                { 10.00, 7.00, 8.10, 7.20 },
                {  7.08, 5.04, 6.00, 5.00 },
                {  8.00, 5.98, 9.89, 9.00 },
                {  6.99, 4.99, 9.00, 9.98 }
        }, new double[] { 32, 23, 33, 31 });
        PointVectorValuePair optimum2 =
            optimizer.optimize(new MaxEval(100),
                               problem2.getModelFunction(),
                               problem2.getModelFunctionJacobian(),
                               problem2.getTarget(), 
                               new Weight(new double[] { 1, 1, 1, 1 }),
                               new InitialGuess(new double[] { 0, 1, 2, 3 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(-81, optimum2.getPoint()[0], 1e-8);
        Assert.assertEquals(137, optimum2.getPoint()[1], 1e-8);
        Assert.assertEquals(-34, optimum2.getPoint()[2], 1e-8);
        Assert.assertEquals( 22, optimum2.getPoint()[3], 1e-8);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_4
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #415
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #386
24: dastore
25: dup
26: iconst_2
27: ldc2_w        #407
30: dastore
31: dup
32: iconst_3
33: ldc2_w        #386
36: dastore
37: aastore
38: dup
39: iconst_1
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #386
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #417
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #384
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #417
66: dastore
67: aastore
68: dup
69: iconst_2
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #407
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #384
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #415
90: dastore
91: dup
92: iconst_3
93: ldc2_w        #419
96: dastore
97: aastore
98: dup
99: iconst_3
100: iconst_4
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #386
108: dastore
109: dup
110: iconst_1
111: ldc2_w        #417
114: dastore
115: dup
116: iconst_2
117: ldc2_w        #419
120: dastore
121: dup
122: iconst_3
123: ldc2_w        #415
126: dastore
127: aastore
128: iconst_4
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #421
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #423
142: dastore
143: dup
144: iconst_2
145: ldc2_w        #425
148: dastore
149: dup
150: iconst_3
151: ldc2_w        #427
154: dastore
155: invokespecial #357
158: astore_1
159: aload_0
160: invokevirtual #358
163: astore_2
164: aload_2
165: bipush        6
167: anewarray     #359
170: dup
171: iconst_0
172: new           #360
175: dup
176: bipush        100
178: invokespecial #361
181: aastore
182: dup
183: iconst_1
184: aload_1
185: invokevirtual #362
188: aastore
189: dup
190: iconst_2
191: aload_1
192: invokevirtual #363
195: aastore
196: dup
197: iconst_3
198: aload_1
199: invokevirtual #364
202: aastore
203: dup
204: iconst_4
205: new           #365
208: dup
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_1
215: dastore
216: dup
217: iconst_1
218: dconst_1
219: dastore
220: dup
221: iconst_2
222: dconst_1
223: dastore
224: dup
225: iconst_3
226: dconst_1
227: dastore
228: invokespecial #366
231: aastore
232: dup
233: iconst_5
234: new           #367
237: dup
238: iconst_4
239: newarray       double
241: dup
242: iconst_0
243: dconst_0
244: dastore
245: dup
246: iconst_1
247: dconst_1
248: dastore
249: dup
250: iconst_2
251: ldc2_w        #353
254: dastore
255: dup
256: iconst_3
257: ldc2_w        #355
260: dastore
261: invokespecial #368
264: aastore
265: invokevirtual #369
268: astore_3
269: dconst_0
270: aload_2
271: invokevirtual #370
274: ldc2_w        #371
277: invokestatic  #373
280: dconst_1
281: aload_3
282: invokevirtual #376
285: iconst_0
286: daload
287: ldc2_w        #371
290: invokestatic  #373
293: dconst_1
294: aload_3
295: invokevirtual #376
298: iconst_1
299: daload
300: ldc2_w        #371
303: invokestatic  #373
306: dconst_1
307: aload_3
308: invokevirtual #376
311: iconst_2
312: daload
313: ldc2_w        #371
316: invokestatic  #373
319: dconst_1
320: aload_3
321: invokevirtual #376
324: iconst_3
325: daload
326: ldc2_w        #371
329: invokestatic  #373
332: new           #352
335: dup
336: iconst_4
337: anewarray     #2
340: dup
341: iconst_0
342: iconst_4
343: newarray       double
345: dup
346: iconst_0
347: ldc2_w        #415
350: dastore
351: dup
352: iconst_1
353: ldc2_w        #386
356: dastore
357: dup
358: iconst_2
359: ldc2_w        #429
362: dastore
363: dup
364: iconst_3
365: ldc2_w        #431
368: dastore
369: aastore
370: dup
371: iconst_1
372: iconst_4
373: newarray       double
375: dup
376: iconst_0
377: ldc2_w        #433
380: dastore
381: dup
382: iconst_1
383: ldc2_w        #435
386: dastore
387: dup
388: iconst_2
389: ldc2_w        #384
392: dastore
393: dup
394: iconst_3
395: ldc2_w        #417
398: dastore
399: aastore
400: dup
401: iconst_2
402: iconst_4
403: newarray       double
405: dup
406: iconst_0
407: ldc2_w        #407
410: dastore
411: dup
412: iconst_1
413: ldc2_w        #437
416: dastore
417: dup
418: iconst_2
419: ldc2_w        #439
422: dastore
423: dup
424: iconst_3
425: ldc2_w        #419
428: dastore
429: aastore
430: dup
431: iconst_3
432: iconst_4
433: newarray       double
435: dup
436: iconst_0
437: ldc2_w        #441
440: dastore
441: dup
442: iconst_1
443: ldc2_w        #443
446: dastore
447: dup
448: iconst_2
449: ldc2_w        #419
452: dastore
453: dup
454: iconst_3
455: ldc2_w        #445
458: dastore
459: aastore
460: iconst_4
461: newarray       double
463: dup
464: iconst_0
465: ldc2_w        #421
468: dastore
469: dup
470: iconst_1
471: ldc2_w        #423
474: dastore
475: dup
476: iconst_2
477: ldc2_w        #425
480: dastore
481: dup
482: iconst_3
483: ldc2_w        #427
486: dastore
487: invokespecial #357
490: astore        4
492: aload_2
493: bipush        6
495: anewarray     #359
498: dup
499: iconst_0
500: new           #360
503: dup
504: bipush        100
506: invokespecial #361
509: aastore
510: dup
511: iconst_1
512: aload         4
514: invokevirtual #362
517: aastore
518: dup
519: iconst_2
520: aload         4
522: invokevirtual #363
525: aastore
526: dup
527: iconst_3
528: aload         4
530: invokevirtual #364
533: aastore
534: dup
535: iconst_4
536: new           #365
539: dup
540: iconst_4
541: newarray       double
543: dup
544: iconst_0
545: dconst_1
546: dastore
547: dup
548: iconst_1
549: dconst_1
550: dastore
551: dup
552: iconst_2
553: dconst_1
554: dastore
555: dup
556: iconst_3
557: dconst_1
558: dastore
559: invokespecial #366
562: aastore
563: dup
564: iconst_5
565: new           #367
568: dup
569: iconst_4
570: newarray       double
572: dup
573: iconst_0
574: dconst_0
575: dastore
576: dup
577: iconst_1
578: dconst_1
579: dastore
580: dup
581: iconst_2
582: ldc2_w        #353
585: dastore
586: dup
587: iconst_3
588: ldc2_w        #355
591: dastore
592: invokespecial #368
595: aastore
596: invokevirtual #369
599: astore        5
601: dconst_0
602: aload_2
603: invokevirtual #370
606: ldc2_w        #371
609: invokestatic  #373
612: ldc2_w        #447
615: aload         5
617: invokevirtual #376
620: iconst_0
621: daload
622: ldc2_w        #449
625: invokestatic  #373
628: ldc2_w        #451
631: aload         5
633: invokevirtual #376
636: iconst_1
637: daload
638: ldc2_w        #449
641: invokestatic  #373
644: ldc2_w        #453
647: aload         5
649: invokevirtual #376
652: iconst_2
653: daload
654: ldc2_w        #449
657: invokestatic  #373
660: ldc2_w        #455
663: aload         5
665: invokevirtual #376
668: iconst_3
669: daload
670: ldc2_w        #449
673: invokestatic  #373
676: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testMoreEstimatedParametersSimple
Start line: 284
End line: 300
Method source code: 
    public void testMoreEstimatedParametersSimple() {

        LinearProblem problem = new LinearProblem(new double[][] {
                { 3, 2,  0, 0 },
                { 0, 1, -1, 1 },
                { 2, 0,  1, 0 }
        }, new double[] { 7, 3, 5 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        optimizer.optimize(new MaxEval(100),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           problem.getTarget(),
                           new Weight(new double[] { 1, 1, 1 }),
                           new InitialGuess(new double[] { 7, 6, 5, 4 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #355
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #353
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: aastore
34: dup
35: iconst_1
36: iconst_4
37: newarray       double
39: dup
40: iconst_0
41: dconst_0
42: dastore
43: dup
44: iconst_1
45: dconst_1
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #378
52: dastore
53: dup
54: iconst_3
55: dconst_1
56: dastore
57: aastore
58: dup
59: iconst_2
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: ldc2_w        #353
68: dastore
69: dup
70: iconst_1
71: dconst_0
72: dastore
73: dup
74: iconst_2
75: dconst_1
76: dastore
77: dup
78: iconst_3
79: dconst_0
80: dastore
81: aastore
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #386
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #355
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #417
102: dastore
103: invokespecial #357
106: astore_1
107: aload_0
108: invokevirtual #358
111: astore_2
112: aload_2
113: bipush        6
115: anewarray     #359
118: dup
119: iconst_0
120: new           #360
123: dup
124: bipush        100
126: invokespecial #361
129: aastore
130: dup
131: iconst_1
132: aload_1
133: invokevirtual #362
136: aastore
137: dup
138: iconst_2
139: aload_1
140: invokevirtual #363
143: aastore
144: dup
145: iconst_3
146: aload_1
147: invokevirtual #364
150: aastore
151: dup
152: iconst_4
153: new           #365
156: dup
157: iconst_3
158: newarray       double
160: dup
161: iconst_0
162: dconst_1
163: dastore
164: dup
165: iconst_1
166: dconst_1
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: invokespecial #366
175: aastore
176: dup
177: iconst_5
178: new           #367
181: dup
182: iconst_4
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #386
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #384
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #417
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #382
208: dastore
209: invokespecial #368
212: aastore
213: invokevirtual #369
216: pop
217: dconst_0
218: aload_2
219: invokevirtual #370
222: ldc2_w        #371
225: invokestatic  #373
228: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testMoreEstimatedParametersUnsorted
Start line: 303
End line: 325
Method source code: 
    public void testMoreEstimatedParametersUnsorted() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1, 1,  0,  0, 0,  0 },
                { 0, 0,  1,  1, 1,  0 },
                { 0, 0,  0,  0, 1, -1 },
                { 0, 0, -1,  1, 0,  1 },
                { 0, 0,  0, -1, 1,  0 }
       }, new double[] { 3, 12, -1, 7, 1 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1, 1, 1, 1 }),
                               new InitialGuess(new double[] { 2, 2, 2, 2, 2, 2 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(3, optimum.getPointRef()[2], 1e-10);
        Assert.assertEquals(4, optimum.getPointRef()[3], 1e-10);
        Assert.assertEquals(5, optimum.getPointRef()[4], 1e-10);
        Assert.assertEquals(6, optimum.getPointRef()[5], 1e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_5
5: anewarray     #2
8: dup
9: iconst_0
10: bipush        6
12: newarray       double
14: dup
15: iconst_0
16: dconst_1
17: dastore
18: dup
19: iconst_1
20: dconst_1
21: dastore
22: dup
23: iconst_2
24: dconst_0
25: dastore
26: dup
27: iconst_3
28: dconst_0
29: dastore
30: dup
31: iconst_4
32: dconst_0
33: dastore
34: dup
35: iconst_5
36: dconst_0
37: dastore
38: aastore
39: dup
40: iconst_1
41: bipush        6
43: newarray       double
45: dup
46: iconst_0
47: dconst_0
48: dastore
49: dup
50: iconst_1
51: dconst_0
52: dastore
53: dup
54: iconst_2
55: dconst_1
56: dastore
57: dup
58: iconst_3
59: dconst_1
60: dastore
61: dup
62: iconst_4
63: dconst_1
64: dastore
65: dup
66: iconst_5
67: dconst_0
68: dastore
69: aastore
70: dup
71: iconst_2
72: bipush        6
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: dconst_0
83: dastore
84: dup
85: iconst_2
86: dconst_0
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #378
101: dastore
102: aastore
103: dup
104: iconst_3
105: bipush        6
107: newarray       double
109: dup
110: iconst_0
111: dconst_0
112: dastore
113: dup
114: iconst_1
115: dconst_0
116: dastore
117: dup
118: iconst_2
119: ldc2_w        #378
122: dastore
123: dup
124: iconst_3
125: dconst_1
126: dastore
127: dup
128: iconst_4
129: dconst_0
130: dastore
131: dup
132: iconst_5
133: dconst_1
134: dastore
135: aastore
136: dup
137: iconst_4
138: bipush        6
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: dup
147: iconst_1
148: dconst_0
149: dastore
150: dup
151: iconst_2
152: dconst_0
153: dastore
154: dup
155: iconst_3
156: ldc2_w        #378
159: dastore
160: dup
161: iconst_4
162: dconst_1
163: dastore
164: dup
165: iconst_5
166: dconst_0
167: dastore
168: aastore
169: iconst_5
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #355
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #457
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #378
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #386
195: dastore
196: dup
197: iconst_4
198: dconst_1
199: dastore
200: invokespecial #357
203: astore_1
204: aload_0
205: invokevirtual #358
208: astore_2
209: aload_2
210: bipush        6
212: anewarray     #359
215: dup
216: iconst_0
217: new           #360
220: dup
221: bipush        100
223: invokespecial #361
226: aastore
227: dup
228: iconst_1
229: aload_1
230: invokevirtual #362
233: aastore
234: dup
235: iconst_2
236: aload_1
237: invokevirtual #363
240: aastore
241: dup
242: iconst_3
243: aload_1
244: invokevirtual #364
247: aastore
248: dup
249: iconst_4
250: new           #365
253: dup
254: iconst_5
255: newarray       double
257: dup
258: iconst_0
259: dconst_1
260: dastore
261: dup
262: iconst_1
263: dconst_1
264: dastore
265: dup
266: iconst_2
267: dconst_1
268: dastore
269: dup
270: iconst_3
271: dconst_1
272: dastore
273: dup
274: iconst_4
275: dconst_1
276: dastore
277: invokespecial #366
280: aastore
281: dup
282: iconst_5
283: new           #367
286: dup
287: bipush        6
289: newarray       double
291: dup
292: iconst_0
293: ldc2_w        #353
296: dastore
297: dup
298: iconst_1
299: ldc2_w        #353
302: dastore
303: dup
304: iconst_2
305: ldc2_w        #353
308: dastore
309: dup
310: iconst_3
311: ldc2_w        #353
314: dastore
315: dup
316: iconst_4
317: ldc2_w        #353
320: dastore
321: dup
322: iconst_5
323: ldc2_w        #353
326: dastore
327: invokespecial #368
330: aastore
331: invokevirtual #369
334: astore_3
335: dconst_0
336: aload_2
337: invokevirtual #370
340: ldc2_w        #371
343: invokestatic  #373
346: ldc2_w        #355
349: aload_3
350: invokevirtual #459
353: iconst_2
354: daload
355: ldc2_w        #371
358: invokestatic  #373
361: ldc2_w        #382
364: aload_3
365: invokevirtual #459
368: iconst_3
369: daload
370: ldc2_w        #371
373: invokestatic  #373
376: ldc2_w        #417
379: aload_3
380: invokevirtual #459
383: iconst_4
384: daload
385: ldc2_w        #371
388: invokestatic  #373
391: ldc2_w        #384
394: aload_3
395: invokevirtual #459
398: iconst_5
399: daload
400: ldc2_w        #371
403: invokestatic  #373
406: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testRedundantEquations
Start line: 328
End line: 346
Method source code: 
    public void testRedundantEquations() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1,  1 },
                { 1, -1 },
                { 1,  3 }
        }, new double[] { 3, 1, 5 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1, 1 }),
                               new InitialGuess(new double[] { 1, 1 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(2, optimum.getPointRef()[0], 1e-10);
        Assert.assertEquals(1, optimum.getPointRef()[1], 1e-10);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #378
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #355
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #355
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #417
72: dastore
73: invokespecial #357
76: astore_1
77: aload_0
78: invokevirtual #358
81: astore_2
82: aload_2
83: bipush        6
85: anewarray     #359
88: dup
89: iconst_0
90: new           #360
93: dup
94: bipush        100
96: invokespecial #361
99: aastore
100: dup
101: iconst_1
102: aload_1
103: invokevirtual #362
106: aastore
107: dup
108: iconst_2
109: aload_1
110: invokevirtual #363
113: aastore
114: dup
115: iconst_3
116: aload_1
117: invokevirtual #364
120: aastore
121: dup
122: iconst_4
123: new           #365
126: dup
127: iconst_3
128: newarray       double
130: dup
131: iconst_0
132: dconst_1
133: dastore
134: dup
135: iconst_1
136: dconst_1
137: dastore
138: dup
139: iconst_2
140: dconst_1
141: dastore
142: invokespecial #366
145: aastore
146: dup
147: iconst_5
148: new           #367
151: dup
152: iconst_2
153: newarray       double
155: dup
156: iconst_0
157: dconst_1
158: dastore
159: dup
160: iconst_1
161: dconst_1
162: dastore
163: invokespecial #368
166: aastore
167: invokevirtual #369
170: astore_3
171: dconst_0
172: aload_2
173: invokevirtual #370
176: ldc2_w        #371
179: invokestatic  #373
182: ldc2_w        #353
185: aload_3
186: invokevirtual #459
189: iconst_0
190: daload
191: ldc2_w        #371
194: invokestatic  #373
197: dconst_1
198: aload_3
199: invokevirtual #459
202: iconst_1
203: daload
204: ldc2_w        #371
207: invokestatic  #373
210: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testInconsistentEquations
Start line: 349
End line: 364
Method source code: 
    public void testInconsistentEquations() {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1,  1 },
                { 1, -1 },
                { 1,  3 }
        }, new double[] { 3, 1, 4 });

        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        optimizer.optimize(new MaxEval(100),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           problem.getTarget(),
                           new Weight(new double[] { 1, 1, 1 }),
                           new InitialGuess(new double[] { 1, 1 }));
        Assert.assertTrue(optimizer.getRMS() > 0.1);
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_3
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #378
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #355
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #355
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #382
72: dastore
73: invokespecial #357
76: astore_1
77: aload_0
78: invokevirtual #358
81: astore_2
82: aload_2
83: bipush        6
85: anewarray     #359
88: dup
89: iconst_0
90: new           #360
93: dup
94: bipush        100
96: invokespecial #361
99: aastore
100: dup
101: iconst_1
102: aload_1
103: invokevirtual #362
106: aastore
107: dup
108: iconst_2
109: aload_1
110: invokevirtual #363
113: aastore
114: dup
115: iconst_3
116: aload_1
117: invokevirtual #364
120: aastore
121: dup
122: iconst_4
123: new           #365
126: dup
127: iconst_3
128: newarray       double
130: dup
131: iconst_0
132: dconst_1
133: dastore
134: dup
135: iconst_1
136: dconst_1
137: dastore
138: dup
139: iconst_2
140: dconst_1
141: dastore
142: invokespecial #366
145: aastore
146: dup
147: iconst_5
148: new           #367
151: dup
152: iconst_2
153: newarray       double
155: dup
156: iconst_0
157: dconst_1
158: dastore
159: dup
160: iconst_1
161: dconst_1
162: dastore
163: invokespecial #368
166: aastore
167: invokevirtual #369
170: pop
171: aload_2
172: invokevirtual #370
175: ldc2_w        #460
178: dcmpl
179: ifle          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #462
190: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testInconsistentSizes1
Start line: 367
End line: 389
Method source code: 
    public void testInconsistentSizes1() {
        LinearProblem problem
            = new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } },
                                new double[] { -1, 1 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               problem.getModelFunction(),
                               problem.getModelFunctionJacobian(),
                               problem.getTarget(),
                               new Weight(new double[] { 1, 1 }),
                               new InitialGuess(new double[] { 0, 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(-1, optimum.getPoint()[0], 1e-10);
        Assert.assertEquals(1, optimum.getPoint()[1], 1e-10);

        optimizer.optimize(new MaxEval(100),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           problem.getTarget(),
                           new Weight(new double[] { 1 }),
                           new InitialGuess(new double[] { 0, 0 }));
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_2
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: dconst_1
34: dastore
35: aastore
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #378
44: dastore
45: dup
46: iconst_1
47: dconst_1
48: dastore
49: invokespecial #357
52: astore_1
53: aload_0
54: invokevirtual #358
57: astore_2
58: aload_2
59: bipush        6
61: anewarray     #359
64: dup
65: iconst_0
66: new           #360
69: dup
70: bipush        100
72: invokespecial #361
75: aastore
76: dup
77: iconst_1
78: aload_1
79: invokevirtual #362
82: aastore
83: dup
84: iconst_2
85: aload_1
86: invokevirtual #363
89: aastore
90: dup
91: iconst_3
92: aload_1
93: invokevirtual #364
96: aastore
97: dup
98: iconst_4
99: new           #365
102: dup
103: iconst_2
104: newarray       double
106: dup
107: iconst_0
108: dconst_1
109: dastore
110: dup
111: iconst_1
112: dconst_1
113: dastore
114: invokespecial #366
117: aastore
118: dup
119: iconst_5
120: new           #367
123: dup
124: iconst_2
125: newarray       double
127: dup
128: iconst_0
129: dconst_0
130: dastore
131: dup
132: iconst_1
133: dconst_0
134: dastore
135: invokespecial #368
138: aastore
139: invokevirtual #369
142: astore_3
143: dconst_0
144: aload_2
145: invokevirtual #370
148: ldc2_w        #371
151: invokestatic  #373
154: ldc2_w        #378
157: aload_3
158: invokevirtual #376
161: iconst_0
162: daload
163: ldc2_w        #371
166: invokestatic  #373
169: dconst_1
170: aload_3
171: invokevirtual #376
174: iconst_1
175: daload
176: ldc2_w        #371
179: invokestatic  #373
182: aload_2
183: bipush        6
185: anewarray     #359
188: dup
189: iconst_0
190: new           #360
193: dup
194: bipush        100
196: invokespecial #361
199: aastore
200: dup
201: iconst_1
202: aload_1
203: invokevirtual #362
206: aastore
207: dup
208: iconst_2
209: aload_1
210: invokevirtual #363
213: aastore
214: dup
215: iconst_3
216: aload_1
217: invokevirtual #364
220: aastore
221: dup
222: iconst_4
223: new           #365
226: dup
227: iconst_1
228: newarray       double
230: dup
231: iconst_0
232: dconst_1
233: dastore
234: invokespecial #366
237: aastore
238: dup
239: iconst_5
240: new           #367
243: dup
244: iconst_2
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: dconst_0
254: dastore
255: invokespecial #368
258: aastore
259: invokevirtual #369
262: pop
263: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testInconsistentSizes2
Start line: 392
End line: 414
Method source code: 
    public void testInconsistentSizes2() {
        LinearProblem problem
            = new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } },
                                new double[] { -1, 1 });
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(100),
                                 problem.getModelFunction(),
                                 problem.getModelFunctionJacobian(),
                                 problem.getTarget(),
                                 new Weight(new double[] { 1, 1 }),
                                 new InitialGuess(new double[] { 0, 0 }));
        Assert.assertEquals(0, optimizer.getRMS(), 1e-10);
        Assert.assertEquals(-1, optimum.getPoint()[0], 1e-10);
        Assert.assertEquals(1, optimum.getPoint()[1], 1e-10);

        optimizer.optimize(new MaxEval(100),
                           problem.getModelFunction(),
                           problem.getModelFunctionJacobian(),
                           new Target(new double[] { 1 }),
                           new Weight(new double[] { 1 }),
                           new InitialGuess(new double[] { 0, 0 }));
    }
Method byte code: 
0: new           #352
3: dup
4: iconst_2
5: anewarray     #2
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: dconst_1
34: dastore
35: aastore
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #378
44: dastore
45: dup
46: iconst_1
47: dconst_1
48: dastore
49: invokespecial #357
52: astore_1
53: aload_0
54: invokevirtual #358
57: astore_2
58: aload_2
59: bipush        6
61: anewarray     #359
64: dup
65: iconst_0
66: new           #360
69: dup
70: bipush        100
72: invokespecial #361
75: aastore
76: dup
77: iconst_1
78: aload_1
79: invokevirtual #362
82: aastore
83: dup
84: iconst_2
85: aload_1
86: invokevirtual #363
89: aastore
90: dup
91: iconst_3
92: aload_1
93: invokevirtual #364
96: aastore
97: dup
98: iconst_4
99: new           #365
102: dup
103: iconst_2
104: newarray       double
106: dup
107: iconst_0
108: dconst_1
109: dastore
110: dup
111: iconst_1
112: dconst_1
113: dastore
114: invokespecial #366
117: aastore
118: dup
119: iconst_5
120: new           #367
123: dup
124: iconst_2
125: newarray       double
127: dup
128: iconst_0
129: dconst_0
130: dastore
131: dup
132: iconst_1
133: dconst_0
134: dastore
135: invokespecial #368
138: aastore
139: invokevirtual #369
142: astore_3
143: dconst_0
144: aload_2
145: invokevirtual #370
148: ldc2_w        #371
151: invokestatic  #373
154: ldc2_w        #378
157: aload_3
158: invokevirtual #376
161: iconst_0
162: daload
163: ldc2_w        #371
166: invokestatic  #373
169: dconst_1
170: aload_3
171: invokevirtual #376
174: iconst_1
175: daload
176: ldc2_w        #371
179: invokestatic  #373
182: aload_2
183: bipush        6
185: anewarray     #359
188: dup
189: iconst_0
190: new           #360
193: dup
194: bipush        100
196: invokespecial #361
199: aastore
200: dup
201: iconst_1
202: aload_1
203: invokevirtual #362
206: aastore
207: dup
208: iconst_2
209: aload_1
210: invokevirtual #363
213: aastore
214: dup
215: iconst_3
216: new           #463
219: dup
220: iconst_1
221: newarray       double
223: dup
224: iconst_0
225: dconst_1
226: dastore
227: invokespecial #464
230: aastore
231: dup
232: iconst_4
233: new           #365
236: dup
237: iconst_1
238: newarray       double
240: dup
241: iconst_0
242: dconst_1
243: dastore
244: invokespecial #366
247: aastore
248: dup
249: iconst_5
250: new           #367
253: dup
254: iconst_2
255: newarray       double
257: dup
258: iconst_0
259: dconst_0
260: dastore
261: dup
262: iconst_1
263: dconst_0
264: dastore
265: invokespecial #368
268: aastore
269: invokevirtual #369
272: pop
273: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testCircleFitting
Start line: 417
End line: 465
Method source code: 
    public void testCircleFitting() {
        CircleVectorial circle = new CircleVectorial();
        circle.addPoint( 30,  68);
        circle.addPoint( 50,  -6);
        circle.addPoint(110, -20);
        circle.addPoint( 35,  15);
        circle.addPoint( 45,  97);
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(100),
                                 circle.getModelFunction(),
                                 circle.getModelFunctionJacobian(),
                                 new Target(new double[] { 0, 0, 0, 0, 0 }),
                                 new Weight(new double[] { 1, 1, 1, 1, 1 }),
                                 new InitialGuess(new double[] { 98.680, 47.345 }));
        Assert.assertTrue(optimizer.getEvaluations() < 10);
        double rms = optimizer.getRMS();
        Assert.assertEquals(1.768262623567235,  FastMath.sqrt(circle.getN()) * rms,  1e-10);
        Vector2D center = new Vector2D(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        Assert.assertEquals(69.96016176931406, circle.getRadius(center), 1e-6);
        Assert.assertEquals(96.07590211815305, center.getX(),            1e-6);
        Assert.assertEquals(48.13516790438953, center.getY(),            1e-6);
        double[][] cov = optimizer.computeCovariances(optimum.getPoint(), 1e-14);
        Assert.assertEquals(1.839, cov[0][0], 0.001);
        Assert.assertEquals(0.731, cov[0][1], 0.001);
        Assert.assertEquals(cov[0][1], cov[1][0], 1e-14);
        Assert.assertEquals(0.786, cov[1][1], 0.001);

        // add perfect measurements and check errors are reduced
        double  r = circle.getRadius(center);
        for (double d= 0; d < 2 * FastMath.PI; d += 0.01) {
            circle.addPoint(center.getX() + r * FastMath.cos(d), center.getY() + r * FastMath.sin(d));
        }
        double[] target = new double[circle.getN()];
        Arrays.fill(target, 0);
        double[] weights = new double[circle.getN()];
        Arrays.fill(weights, 2);
        optimum = optimizer.optimize(new MaxEval(100),
                                     circle.getModelFunction(),
                                     circle.getModelFunctionJacobian(),
                                     new Target(target),
                                     new Weight(weights),
                                     new InitialGuess(new double[] { 98.680, 47.345 }));
        cov = optimizer.computeCovariances(optimum.getPoint(), 1e-14);
        Assert.assertEquals(0.0016, cov[0][0], 0.001);
        Assert.assertEquals(3.2e-7, cov[0][1], 1e-9);
        Assert.assertEquals(cov[0][1], cov[1][0], 1e-14);
        Assert.assertEquals(0.0016, cov[1][1], 0.001);
    }
Method byte code: 
0: new           #465
3: dup
4: invokespecial #466
7: astore_1
8: aload_1
9: ldc2_w        #467
12: ldc2_w        #469
15: invokevirtual #471
18: aload_1
19: ldc2_w        #472
22: ldc2_w        #474
25: invokevirtual #471
28: aload_1
29: ldc2_w        #476
32: ldc2_w        #478
35: invokevirtual #471
38: aload_1
39: ldc2_w        #480
42: ldc2_w        #482
45: invokevirtual #471
48: aload_1
49: ldc2_w        #484
52: ldc2_w        #486
55: invokevirtual #471
58: aload_0
59: invokevirtual #358
62: astore_2
63: aload_2
64: bipush        6
66: anewarray     #359
69: dup
70: iconst_0
71: new           #360
74: dup
75: bipush        100
77: invokespecial #361
80: aastore
81: dup
82: iconst_1
83: aload_1
84: invokevirtual #488
87: aastore
88: dup
89: iconst_2
90: aload_1
91: invokevirtual #489
94: aastore
95: dup
96: iconst_3
97: new           #463
100: dup
101: iconst_5
102: newarray       double
104: dup
105: iconst_0
106: dconst_0
107: dastore
108: dup
109: iconst_1
110: dconst_0
111: dastore
112: dup
113: iconst_2
114: dconst_0
115: dastore
116: dup
117: iconst_3
118: dconst_0
119: dastore
120: dup
121: iconst_4
122: dconst_0
123: dastore
124: invokespecial #464
127: aastore
128: dup
129: iconst_4
130: new           #365
133: dup
134: iconst_5
135: newarray       double
137: dup
138: iconst_0
139: dconst_1
140: dastore
141: dup
142: iconst_1
143: dconst_1
144: dastore
145: dup
146: iconst_2
147: dconst_1
148: dastore
149: dup
150: iconst_3
151: dconst_1
152: dastore
153: dup
154: iconst_4
155: dconst_1
156: dastore
157: invokespecial #366
160: aastore
161: dup
162: iconst_5
163: new           #367
166: dup
167: iconst_2
168: newarray       double
170: dup
171: iconst_0
172: ldc2_w        #490
175: dastore
176: dup
177: iconst_1
178: ldc2_w        #492
181: dastore
182: invokespecial #368
185: aastore
186: invokevirtual #369
189: astore_3
190: aload_2
191: invokevirtual #494
194: bipush        10
196: if_icmpge     203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #462
207: aload_2
208: invokevirtual #370
211: dstore        4
213: ldc2_w        #495
216: aload_1
217: invokevirtual #497
220: i2d
221: invokestatic  #498
224: dload         4
226: dmul
227: ldc2_w        #371
230: invokestatic  #373
233: new           #499
236: dup
237: aload_3
238: invokevirtual #459
241: iconst_0
242: daload
243: aload_3
244: invokevirtual #459
247: iconst_1
248: daload
249: invokespecial #500
252: astore        6
254: ldc2_w        #501
257: aload_1
258: aload         6
260: invokevirtual #503
263: ldc2_w        #504
266: invokestatic  #373
269: ldc2_w        #506
272: aload         6
274: invokevirtual #508
277: ldc2_w        #504
280: invokestatic  #373
283: ldc2_w        #509
286: aload         6
288: invokevirtual #511
291: ldc2_w        #504
294: invokestatic  #373
297: aload_2
298: aload_3
299: invokevirtual #376
302: ldc2_w        #512
305: invokevirtual #514
308: astore        7
310: ldc2_w        #515
313: aload         7
315: iconst_0
316: aaload
317: iconst_0
318: daload
319: ldc2_w        #517
322: invokestatic  #373
325: ldc2_w        #519
328: aload         7
330: iconst_0
331: aaload
332: iconst_1
333: daload
334: ldc2_w        #517
337: invokestatic  #373
340: aload         7
342: iconst_0
343: aaload
344: iconst_1
345: daload
346: aload         7
348: iconst_1
349: aaload
350: iconst_0
351: daload
352: ldc2_w        #512
355: invokestatic  #373
358: ldc2_w        #521
361: aload         7
363: iconst_1
364: aaload
365: iconst_1
366: daload
367: ldc2_w        #517
370: invokestatic  #373
373: aload_1
374: aload         6
376: invokevirtual #503
379: dstore        8
381: dconst_0
382: dstore        10
384: dload         10
386: ldc2_w        #524
389: dcmpg
390: ifge          436
393: aload_1
394: aload         6
396: invokevirtual #508
399: dload         8
401: dload         10
403: invokestatic  #526
406: dmul
407: dadd
408: aload         6
410: invokevirtual #511
413: dload         8
415: dload         10
417: invokestatic  #527
420: dmul
421: dadd
422: invokevirtual #471
425: dload         10
427: ldc2_w        #528
430: dadd
431: dstore        10
433: goto          384
436: aload_1
437: invokevirtual #497
440: newarray       double
442: astore        10
444: aload         10
446: dconst_0
447: invokestatic  #530
450: aload_1
451: invokevirtual #497
454: newarray       double
456: astore        11
458: aload         11
460: ldc2_w        #353
463: invokestatic  #530
466: aload_2
467: bipush        6
469: anewarray     #359
472: dup
473: iconst_0
474: new           #360
477: dup
478: bipush        100
480: invokespecial #361
483: aastore
484: dup
485: iconst_1
486: aload_1
487: invokevirtual #488
490: aastore
491: dup
492: iconst_2
493: aload_1
494: invokevirtual #489
497: aastore
498: dup
499: iconst_3
500: new           #463
503: dup
504: aload         10
506: invokespecial #464
509: aastore
510: dup
511: iconst_4
512: new           #365
515: dup
516: aload         11
518: invokespecial #366
521: aastore
522: dup
523: iconst_5
524: new           #367
527: dup
528: iconst_2
529: newarray       double
531: dup
532: iconst_0
533: ldc2_w        #490
536: dastore
537: dup
538: iconst_1
539: ldc2_w        #492
542: dastore
543: invokespecial #368
546: aastore
547: invokevirtual #369
550: astore_3
551: aload_2
552: aload_3
553: invokevirtual #376
556: ldc2_w        #512
559: invokevirtual #514
562: astore        7
564: ldc2_w        #531
567: aload         7
569: iconst_0
570: aaload
571: iconst_0
572: daload
573: ldc2_w        #517
576: invokestatic  #373
579: ldc2_w        #533
582: aload         7
584: iconst_0
585: aaload
586: iconst_1
587: daload
588: ldc2_w        #535
591: invokestatic  #373
594: aload         7
596: iconst_0
597: aaload
598: iconst_1
599: daload
600: aload         7
602: iconst_1
603: aaload
604: iconst_0
605: daload
606: ldc2_w        #512
609: invokestatic  #373
612: ldc2_w        #531
615: aload         7
617: iconst_1
618: aaload
619: iconst_1
620: daload
621: ldc2_w        #517
624: invokestatic  #373
627: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testCircleFittingBadInit
Start line: 468
End line: 492
Method source code: 
    public void testCircleFittingBadInit() {
        CircleVectorial circle = new CircleVectorial();
        double[][] points = circlePoints;
        double[] target = new double[points.length];
        Arrays.fill(target, 0);
        double[] weights = new double[points.length];
        Arrays.fill(weights, 2);
        for (int i = 0; i < points.length; ++i) {
            circle.addPoint(points[i][0], points[i][1]);
        }
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(100),
                                 circle.getModelFunction(),
                                 circle.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(new double[] { -12, -12 }));
        Vector2D center = new Vector2D(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        Assert.assertTrue(optimizer.getEvaluations() < 25);
        Assert.assertEquals( 0.043, optimizer.getRMS(), 1e-3);
        Assert.assertEquals( 0.292235,  circle.getRadius(center), 1e-6);
        Assert.assertEquals(-0.151738,  center.getX(),            1e-6);
        Assert.assertEquals( 0.2075001, center.getY(),            1e-6);
    }
Method byte code: 
0: new           #465
3: dup
4: invokespecial #466
7: astore_1
8: aload_0
9: getfield      #351
12: astore_2
13: aload_2
14: arraylength
15: newarray       double
17: astore_3
18: aload_3
19: dconst_0
20: invokestatic  #530
23: aload_2
24: arraylength
25: newarray       double
27: astore        4
29: aload         4
31: ldc2_w        #353
34: invokestatic  #530
37: iconst_0
38: istore        5
40: iload         5
42: aload_2
43: arraylength
44: if_icmpge     69
47: aload_1
48: aload_2
49: iload         5
51: aaload
52: iconst_0
53: daload
54: aload_2
55: iload         5
57: aaload
58: iconst_1
59: daload
60: invokevirtual #471
63: iinc          5, 1
66: goto          40
69: aload_0
70: invokevirtual #358
73: astore        5
75: aload         5
77: bipush        6
79: anewarray     #359
82: dup
83: iconst_0
84: new           #360
87: dup
88: bipush        100
90: invokespecial #361
93: aastore
94: dup
95: iconst_1
96: aload_1
97: invokevirtual #488
100: aastore
101: dup
102: iconst_2
103: aload_1
104: invokevirtual #489
107: aastore
108: dup
109: iconst_3
110: new           #463
113: dup
114: aload_3
115: invokespecial #464
118: aastore
119: dup
120: iconst_4
121: new           #365
124: dup
125: aload         4
127: invokespecial #366
130: aastore
131: dup
132: iconst_5
133: new           #367
136: dup
137: iconst_2
138: newarray       double
140: dup
141: iconst_0
142: ldc2_w        #411
145: dastore
146: dup
147: iconst_1
148: ldc2_w        #411
151: dastore
152: invokespecial #368
155: aastore
156: invokevirtual #369
159: astore        6
161: new           #499
164: dup
165: aload         6
167: invokevirtual #459
170: iconst_0
171: daload
172: aload         6
174: invokevirtual #459
177: iconst_1
178: daload
179: invokespecial #500
182: astore        7
184: aload         5
186: invokevirtual #494
189: bipush        25
191: if_icmpge     198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #462
202: ldc2_w        #537
205: aload         5
207: invokevirtual #370
210: ldc2_w        #517
213: invokestatic  #373
216: ldc2_w        #539
219: aload_1
220: aload         7
222: invokevirtual #503
225: ldc2_w        #504
228: invokestatic  #373
231: ldc2_w        #541
234: aload         7
236: invokevirtual #508
239: ldc2_w        #504
242: invokestatic  #373
245: ldc2_w        #543
248: aload         7
250: invokevirtual #511
253: ldc2_w        #504
256: invokestatic  #373
259: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testCircleFittingGoodInit
Start line: 495
End line: 516
Method source code: 
    public void testCircleFittingGoodInit() {
        CircleVectorial circle = new CircleVectorial();
        double[][] points = circlePoints;
        double[] target = new double[points.length];
        Arrays.fill(target, 0);
        double[] weights = new double[points.length];
        Arrays.fill(weights, 2);
        for (int i = 0; i < points.length; ++i) {
            circle.addPoint(points[i][0], points[i][1]);
        }
        AbstractLeastSquaresOptimizer optimizer = createOptimizer();
        PointVectorValuePair optimum =
            optimizer.optimize(new MaxEval(100),
                               circle.getModelFunction(),
                               circle.getModelFunctionJacobian(),
                               new Target(target),
                               new Weight(weights),
                               new InitialGuess(new double[] { 0, 0 }));
        Assert.assertEquals(-0.1517383071957963, optimum.getPointRef()[0], 1e-6);
        Assert.assertEquals(0.2074999736353867,  optimum.getPointRef()[1], 1e-6);
        Assert.assertEquals(0.04268731682389561, optimizer.getRMS(),       1e-8);
    }
Method byte code: 
0: new           #465
3: dup
4: invokespecial #466
7: astore_1
8: aload_0
9: getfield      #351
12: astore_2
13: aload_2
14: arraylength
15: newarray       double
17: astore_3
18: aload_3
19: dconst_0
20: invokestatic  #530
23: aload_2
24: arraylength
25: newarray       double
27: astore        4
29: aload         4
31: ldc2_w        #353
34: invokestatic  #530
37: iconst_0
38: istore        5
40: iload         5
42: aload_2
43: arraylength
44: if_icmpge     69
47: aload_1
48: aload_2
49: iload         5
51: aaload
52: iconst_0
53: daload
54: aload_2
55: iload         5
57: aaload
58: iconst_1
59: daload
60: invokevirtual #471
63: iinc          5, 1
66: goto          40
69: aload_0
70: invokevirtual #358
73: astore        5
75: aload         5
77: bipush        6
79: anewarray     #359
82: dup
83: iconst_0
84: new           #360
87: dup
88: bipush        100
90: invokespecial #361
93: aastore
94: dup
95: iconst_1
96: aload_1
97: invokevirtual #488
100: aastore
101: dup
102: iconst_2
103: aload_1
104: invokevirtual #489
107: aastore
108: dup
109: iconst_3
110: new           #463
113: dup
114: aload_3
115: invokespecial #464
118: aastore
119: dup
120: iconst_4
121: new           #365
124: dup
125: aload         4
127: invokespecial #366
130: aastore
131: dup
132: iconst_5
133: new           #367
136: dup
137: iconst_2
138: newarray       double
140: dup
141: iconst_0
142: dconst_0
143: dastore
144: dup
145: iconst_1
146: dconst_0
147: dastore
148: invokespecial #368
151: aastore
152: invokevirtual #369
155: astore        6
157: ldc2_w        #545
160: aload         6
162: invokevirtual #459
165: iconst_0
166: daload
167: ldc2_w        #504
170: invokestatic  #373
173: ldc2_w        #547
176: aload         6
178: invokevirtual #459
181: iconst_1
182: daload
183: ldc2_w        #504
186: invokestatic  #373
189: ldc2_w        #549
192: aload         5
194: invokevirtual #370
197: ldc2_w        #449
200: invokestatic  #373
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testKirby2
Start line: 578
End line: 580
Method source code: 
    public void testKirby2() throws IOException {
        doTestStRD(StatisticalReferenceDatasetFactory.createKirby2(), 1E-7, 1E-7);
    }
Method byte code: 
0: aload_0
1: invokestatic  #567
4: ldc2_w        #401
7: ldc2_w        #401
10: invokevirtual #568
13: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.class
Class name: AbstractLeastSquaresOptimizerAbstractTest
Method name: testHahn1
Start line: 583
End line: 585
Method source code: 
    public void testHahn1() throws IOException {
        doTestStRD(StatisticalReferenceDatasetFactory.createHahn1(), 1E-7, 1E-4);
    }
Method byte code: 
0: aload_0
1: invokestatic  #569
4: ldc2_w        #401
7: ldc2_w        #570
10: invokevirtual #568
13: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test0
Start line: 22
End line: 26
Method source code: 
  public void test0()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      levenbergMarquardtOptimizer0.setCost(0.0);
      assertEquals(0.0, levenbergMarquardtOptimizer0.getChiSquare(), 0.01);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: dconst_0
10: invokevirtual #4
13: dconst_0
14: aload_1
15: invokevirtual #5
18: ldc2_w        #6
21: invokestatic  #8
24: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test1
Start line: 29
End line: 43
Method source code: 
  public void test1()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.computeSigma(doubleArray0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_5
9: newarray       double
11: astore_2
12: aload_1
13: aload_2
14: dconst_0
15: invokevirtual #9
18: pop
19: ldc           #10
21: invokestatic  #11
24: goto          34
27: astore_3
28: ldc           #13
30: aload_3
31: invokestatic  #14
34: return
Exception table:
from    to  target type
12    24    27   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test2
Start line: 46
End line: 60
Method source code: 
  public void test2()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_2
9: anewarray     #15
12: astore_2
13: aload_1
14: aload_2
15: invokevirtual #16
18: pop
19: ldc           #10
21: invokestatic  #11
24: goto          34
27: astore_3
28: ldc           #17
30: aload_3
31: invokestatic  #14
34: return
Exception table:
from    to  target type
13    24    27   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test3
Start line: 63
End line: 76
Method source code: 
  public void test3()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.getRMS();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #18
12: pop2
13: ldc           #10
15: invokestatic  #11
18: goto          28
21: astore_2
22: ldc           #17
24: aload_2
25: invokestatic  #14
28: return
Exception table:
from    to  target type
8    18    21   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test4
Start line: 79
End line: 92
Method source code: 
  public void test4()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.getWeightSquareRoot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #19
12: pop
13: ldc           #10
15: invokestatic  #11
18: goto          28
21: astore_2
22: ldc           #20
24: aload_2
25: invokestatic  #14
28: return
Exception table:
from    to  target type
8    18    21   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test5
Start line: 95
End line: 108
Method source code: 
  public void test5()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.computeCost((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.ArrayRealVector", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: aconst_null
10: checkcast     #21
13: invokevirtual #22
16: pop2
17: ldc           #10
19: invokestatic  #11
22: goto          32
25: astore_2
26: ldc           #23
28: aload_2
29: invokestatic  #14
32: return
Exception table:
from    to  target type
8    22    25   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test6
Start line: 111
End line: 130
Method source code: 
  public void test6()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      double[] doubleArray0 = new double[7];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector0);
      Weight weight0 = new Weight(realMatrix0);
      optimizationDataArray0[0] = (OptimizationData) weight0;
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math3.linear.EigenDecomposition", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_2
9: anewarray     #15
12: astore_2
13: bipush        7
15: newarray       double
17: astore_3
18: new           #24
21: dup
22: aload_3
23: aload_3
24: invokespecial #25
27: astore        4
29: aload         4
31: aload         4
33: invokevirtual #26
36: astore        5
38: new           #27
41: dup
42: aload         5
44: invokespecial #28
47: astore        6
49: aload_2
50: iconst_0
51: aload         6
53: aastore
54: aload_1
55: aload_2
56: invokevirtual #16
59: pop
60: ldc           #29
62: invokestatic  #11
65: goto          77
68: astore        7
70: ldc           #31
72: aload         7
74: invokestatic  #14
77: return
Exception table:
from    to  target type
54    65    68   Class org/apache/commons/math3/exception/MathUnsupportedOperationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer_ESTest.class
Class name: AbstractLeastSquaresOptimizer_ESTest
Method name: test7
Start line: 133
End line: 150
Method source code: 
  public void test7()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      double[] doubleArray0 = new double[10];
      Weight weight0 = new Weight(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) weight0;
      // Undeclared exception!
      try { 
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: bipush        10
10: newarray       double
12: astore_2
13: new           #27
16: dup
17: aload_2
18: invokespecial #32
21: astore_3
22: iconst_4
23: anewarray     #15
26: astore        4
28: aload         4
30: iconst_0
31: aload_3
32: aastore
33: aload_1
34: aload         4
36: invokevirtual #16
39: pop
40: ldc           #10
42: invokestatic  #11
45: goto          57
48: astore        5
50: ldc           #17
52: aload         5
54: invokestatic  #14
57: return
Exception table:
from    to  target type
33    45    48   Class java/lang/NullPointerException
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.class
Class name: AbstractLeastSquaresOptimizerTestValidation
Method name: testParametersErrorMonteCarloObservations
Start line: 67
End line: 166
Method source code: 
    public void testParametersErrorMonteCarloObservations() {
        // Error on the observations.
        final double yError = 15;

        // True values of the parameters.
        final double slope = 123.456;
        final double offset = -98.765;

        // Samples generator.
        final RandomStraightLinePointGenerator lineGenerator
            = new RandomStraightLinePointGenerator(slope, offset,
                                                   yError,
                                                   -1e3, 1e4,
                                                   138577L);

        // Number of observations.
        final int numObs = 100; // XXX Should be a command-line option.
        // number of parameters.
        final int numParams = 2;

        // Parameters found for each of Monte-Carlo run.
        final SummaryStatistics[] paramsFoundByDirectSolution = new SummaryStatistics[numParams];
        // Sigma estimations (square-root of the diagonal elements of the
        // covariance matrix), for each Monte-Carlo run.
        final SummaryStatistics[] sigmaEstimate = new SummaryStatistics[numParams];

        // Initialize statistics accumulators.
        for (int i = 0; i < numParams; i++) {
            paramsFoundByDirectSolution[i] = new SummaryStatistics();
            sigmaEstimate[i] = new SummaryStatistics();
        }

        // Dummy optimizer (to compute the covariance matrix).
        final AbstractLeastSquaresOptimizer optim = new DummyOptimizer();
        final double[] init = { slope, offset };

        // Monte-Carlo (generates many sets of observations).
        final int mcRepeat = MONTE_CARLO_RUNS;
        int mcCount = 0;
        while (mcCount < mcRepeat) {
            // Observations.
            final Point2D.Double[] obs = lineGenerator.generate(numObs);

            final StraightLineProblem problem = new StraightLineProblem(yError);
            for (int i = 0; i < numObs; i++) {
                final Point2D.Double p = obs[i];
                problem.addPoint(p.x, p.y);
            }

            // Direct solution (using simple regression).
            final double[] regress = problem.solve();

            // Estimation of the standard deviation (diagonal elements of the
            // covariance matrix).
            final PointVectorValuePair optimum
                = optim.optimize(new MaxEval(Integer.MAX_VALUE),
                                 problem.getModelFunction(),
                                 problem.getModelFunctionJacobian(),
                                 new Target(problem.target()),
                                 new Weight(problem.weight()),
                                 new InitialGuess(init));
            final double[] sigma = optim.computeSigma(optimum.getPoint(), 1e-14);

            // Accumulate statistics.
            for (int i = 0; i < numParams; i++) {
                paramsFoundByDirectSolution[i].addValue(regress[i]);
                sigmaEstimate[i].addValue(sigma[i]);
            }

            // Next Monte-Carlo.
            ++mcCount;
        }

        // Print statistics.
        final String line = "--------------------------------------------------------------";
        System.out.println("                 True value       Mean        Std deviation");
        for (int i = 0; i < numParams; i++) {
            System.out.println(line);
            System.out.println("Parameter #" + i);

            StatisticalSummary s = paramsFoundByDirectSolution[i].getSummary();
            System.out.printf("              %+.6e   %+.6e   %+.6e\n",
                              init[i],
                              s.getMean(),
                              s.getStandardDeviation());

            s = sigmaEstimate[i].getSummary();
            System.out.printf("sigma: %+.6e (%+.6e)\n",
                              s.getMean(),
                              s.getStandardDeviation());
        }
        System.out.println(line);

        // Check the error estimation.
        for (int i = 0; i < numParams; i++) {
            Assert.assertEquals(paramsFoundByDirectSolution[i].getSummary().getStandardDeviation(),
                                sigmaEstimate[i].getSummary().getMean(),
                                8e-2);
        }
    }
Method byte code: 
0: ldc2_w        #2
3: dstore_1
4: ldc2_w        #4
7: dstore_3
8: ldc2_w        #6
11: dstore        5
13: new           #8
16: dup
17: ldc2_w        #4
20: ldc2_w        #6
23: ldc2_w        #2
26: ldc2_w        #9
29: ldc2_w        #11
32: ldc2_w        #13
35: invokespecial #15
38: astore        7
40: bipush        100
42: istore        8
44: iconst_2
45: istore        9
47: iconst_2
48: anewarray     #16
51: astore        10
53: iconst_2
54: anewarray     #16
57: astore        11
59: iconst_0
60: istore        12
62: iload         12
64: iconst_2
65: if_icmpge     98
68: aload         10
70: iload         12
72: new           #16
75: dup
76: invokespecial #17
79: aastore
80: aload         11
82: iload         12
84: new           #16
87: dup
88: invokespecial #17
91: aastore
92: iinc          12, 1
95: goto          62
98: new           #18
101: dup
102: invokespecial #19
105: astore        12
107: iconst_2
108: newarray       double
110: dup
111: iconst_0
112: ldc2_w        #4
115: dastore
116: dup
117: iconst_1
118: ldc2_w        #6
121: dastore
122: astore        13
124: getstatic     #20
127: istore        14
129: iconst_0
130: istore        15
132: iload         15
134: iload         14
136: if_icmpge     349
139: aload         7
141: bipush        100
143: invokevirtual #21
146: astore        16
148: new           #22
151: dup
152: ldc2_w        #2
155: invokespecial #23
158: astore        17
160: iconst_0
161: istore        18
163: iload         18
165: bipush        100
167: if_icmpge     198
170: aload         16
172: iload         18
174: aaload
175: astore        19
177: aload         17
179: aload         19
181: getfield      #24
184: aload         19
186: getfield      #25
189: invokevirtual #26
192: iinc          18, 1
195: goto          163
198: aload         17
200: invokevirtual #27
203: astore        18
205: aload         12
207: bipush        6
209: anewarray     #28
212: dup
213: iconst_0
214: new           #29
217: dup
218: ldc           #31
220: invokespecial #32
223: aastore
224: dup
225: iconst_1
226: aload         17
228: invokevirtual #33
231: aastore
232: dup
233: iconst_2
234: aload         17
236: invokevirtual #34
239: aastore
240: dup
241: iconst_3
242: new           #35
245: dup
246: aload         17
248: invokevirtual #36
251: invokespecial #37
254: aastore
255: dup
256: iconst_4
257: new           #38
260: dup
261: aload         17
263: invokevirtual #39
266: invokespecial #40
269: aastore
270: dup
271: iconst_5
272: new           #41
275: dup
276: aload         13
278: invokespecial #42
281: aastore
282: invokevirtual #43
285: astore        19
287: aload         12
289: aload         19
291: invokevirtual #44
294: ldc2_w        #45
297: invokevirtual #47
300: astore        20
302: iconst_0
303: istore        21
305: iload         21
307: iconst_2
308: if_icmpge     343
311: aload         10
313: iload         21
315: aaload
316: aload         18
318: iload         21
320: daload
321: invokevirtual #48
324: aload         11
326: iload         21
328: aaload
329: aload         20
331: iload         21
333: daload
334: invokevirtual #48
337: iinc          21, 1
340: goto          305
343: iinc          15, 1
346: goto          132
349: ldc           #49
351: astore        16
353: getstatic     #50
356: ldc           #51
358: invokevirtual #52
361: iconst_0
362: istore        17
364: iload         17
366: iconst_2
367: if_icmpge     519
370: getstatic     #50
373: ldc           #49
375: invokevirtual #52
378: getstatic     #50
381: new           #53
384: dup
385: invokespecial #54
388: ldc           #55
390: invokevirtual #56
393: iload         17
395: invokevirtual #57
398: invokevirtual #58
401: invokevirtual #52
404: aload         10
406: iload         17
408: aaload
409: invokevirtual #59
412: astore        18
414: getstatic     #50
417: ldc           #60
419: iconst_3
420: anewarray     #61
423: dup
424: iconst_0
425: aload         13
427: iload         17
429: daload
430: invokestatic  #62
433: aastore
434: dup
435: iconst_1
436: aload         18
438: invokeinterface #63,  1
443: invokestatic  #62
446: aastore
447: dup
448: iconst_2
449: aload         18
451: invokeinterface #64,  1
456: invokestatic  #62
459: aastore
460: invokevirtual #65
463: pop
464: aload         11
466: iload         17
468: aaload
469: invokevirtual #59
472: astore        18
474: getstatic     #50
477: ldc           #66
479: iconst_2
480: anewarray     #61
483: dup
484: iconst_0
485: aload         18
487: invokeinterface #63,  1
492: invokestatic  #62
495: aastore
496: dup
497: iconst_1
498: aload         18
500: invokeinterface #64,  1
505: invokestatic  #62
508: aastore
509: invokevirtual #65
512: pop
513: iinc          17, 1
516: goto          364
519: getstatic     #50
522: ldc           #49
524: invokevirtual #52
527: iconst_0
528: istore        17
530: iload         17
532: iconst_2
533: if_icmpge     574
536: aload         10
538: iload         17
540: aaload
541: invokevirtual #59
544: invokeinterface #64,  1
549: aload         11
551: iload         17
553: aaload
554: invokevirtual #59
557: invokeinterface #63,  1
562: ldc2_w        #67
565: invokestatic  #69
568: iinc          17, 1
571: goto          530
574: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/14/target/test-classes/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.class
Class name: AbstractLeastSquaresOptimizerTestValidation
Method name: testParametersErrorMonteCarloParameters
Start line: 193
End line: 292
Method source code: 
    public void testParametersErrorMonteCarloParameters() {
        // Error on the observations.
        final double yError = 15;

        // True values of the parameters.
        final double slope = 123.456;
        final double offset = -98.765;

        // Samples generator.
        final RandomStraightLinePointGenerator lineGenerator
            = new RandomStraightLinePointGenerator(slope, offset,
                                                   yError,
                                                   -1e3, 1e4,
                                                   13839013L);

        // Number of observations.
        final int numObs = 10;
        // number of parameters.
        final int numParams = 2;

        // Create a single set of observations.
        final Point2D.Double[] obs = lineGenerator.generate(numObs);

        final StraightLineProblem problem = new StraightLineProblem(yError);
        for (int i = 0; i < numObs; i++) {
            final Point2D.Double p = obs[i];
            problem.addPoint(p.x, p.y);
        }

        // Direct solution (using simple regression).
        final double[] regress = problem.solve();

        // Dummy optimizer (to compute the chi-square).
        final AbstractLeastSquaresOptimizer optim = new DummyOptimizer();
        final double[] init = { slope, offset };
        // Get chi-square of the best parameters set for the given set of
        // observations.
        final double bestChi2N = getChi2N(optim, problem, regress);
        final double[] sigma = optim.computeSigma(regress, 1e-14);

        // Monte-Carlo (generates a grid of parameters).
        final int mcRepeat = MONTE_CARLO_RUNS;
        final int gridSize = (int) FastMath.sqrt(mcRepeat);

        // Parameters found for each of Monte-Carlo run.
        // Index 0 = slope
        // Index 1 = offset
        // Index 2 = normalized chi2
        final List<double[]> paramsAndChi2 = new ArrayList<double[]>(gridSize * gridSize);

        final double slopeRange = 10 * sigma[0];
        final double offsetRange = 10 * sigma[1];
        final double minSlope = slope - 0.5 * slopeRange;
        final double minOffset = offset - 0.5 * offsetRange;
        final double deltaSlope =  slopeRange/ gridSize;
        final double deltaOffset = offsetRange / gridSize;
        for (int i = 0; i < gridSize; i++) {
            final double s = minSlope + i * deltaSlope;
            for (int j = 0; j < gridSize; j++) {
                final double o = minOffset + j * deltaOffset;
                final double chi2N = getChi2N(optim, problem, new double[] {s, o});

                paramsAndChi2.add(new double[] {s, o, chi2N});
            }
        }

        // Output (for use with "gnuplot").

        // Some info.

        // For plotting separately sets of parameters that have a large chi2.
        final double chi2NPlusOne = bestChi2N + 1;
        int numLarger = 0;

        final String lineFmt = "%+.10e %+.10e   %.8e\n";

        // Point with smallest chi-square.
        System.out.printf(lineFmt, regress[0], regress[1], bestChi2N);
        System.out.println(); // Empty line.

        // Points within the confidence interval.
        for (double[] d : paramsAndChi2) {
            if (d[2] <= chi2NPlusOne) {
                System.out.printf(lineFmt, d[0], d[1], d[2]);
            }
        }
        System.out.println(); // Empty line.

        // Points outside the confidence interval.
        for (double[] d : paramsAndChi2) {
            if (d[2] > chi2NPlusOne) {
                ++numLarger;
                System.out.printf(lineFmt, d[0], d[1], d[2]);
            }
        }
        System.out.println(); // Empty line.

        System.out.println("# sigma=" + Arrays.toString(sigma));
        System.out.println("# " + numLarger + " sets filtered out");
    }
Method byte code: 
0: ldc2_w        #2
3: dstore_1
4: ldc2_w        #4
7: dstore_3
8: ldc2_w        #6
11: dstore        5
13: new           #8
16: dup
17: ldc2_w        #4
20: ldc2_w        #6
23: ldc2_w        #2
26: ldc2_w        #9
29: ldc2_w        #11
32: ldc2_w        #70
35: invokespecial #15
38: astore        7
40: bipush        10
42: istore        8
44: iconst_2
45: istore        9
47: aload         7
49: bipush        10
51: invokevirtual #21
54: astore        10
56: new           #22
59: dup
60: ldc2_w        #2
63: invokespecial #23
66: astore        11
68: iconst_0
69: istore        12
71: iload         12
73: bipush        10
75: if_icmpge     106
78: aload         10
80: iload         12
82: aaload
83: astore        13
85: aload         11
87: aload         13
89: getfield      #24
92: aload         13
94: getfield      #25
97: invokevirtual #26
100: iinc          12, 1
103: goto          71
106: aload         11
108: invokevirtual #27
111: astore        12
113: new           #18
116: dup
117: invokespecial #19
120: astore        13
122: iconst_2
123: newarray       double
125: dup
126: iconst_0
127: ldc2_w        #4
130: dastore
131: dup
132: iconst_1
133: ldc2_w        #6
136: dastore
137: astore        14
139: aload_0
140: aload         13
142: aload         11
144: aload         12
146: invokespecial #72
149: dstore        15
151: aload         13
153: aload         12
155: ldc2_w        #45
158: invokevirtual #47
161: astore        17
163: getstatic     #20
166: istore        18
168: iload         18
170: i2d
171: invokestatic  #73
174: d2i
175: istore        19
177: new           #74
180: dup
181: iload         19
183: iload         19
185: imul
186: invokespecial #75
189: astore        20
191: ldc2_w        #76
194: aload         17
196: iconst_0
197: daload
198: dmul
199: dstore        21
201: ldc2_w        #76
204: aload         17
206: iconst_1
207: daload
208: dmul
209: dstore        23
211: ldc2_w        #4
214: ldc2_w        #78
217: dload         21
219: dmul
220: dsub
221: dstore        25
223: ldc2_w        #6
226: ldc2_w        #78
229: dload         23
231: dmul
232: dsub
233: dstore        27
235: dload         21
237: iload         19
239: i2d
240: ddiv
241: dstore        29
243: dload         23
245: iload         19
247: i2d
248: ddiv
249: dstore        31
251: iconst_0
252: istore        33
254: iload         33
256: iload         19
258: if_icmpge     354
261: dload         25
263: iload         33
265: i2d
266: dload         29
268: dmul
269: dadd
270: dstore        34
272: iconst_0
273: istore        36
275: iload         36
277: iload         19
279: if_icmpge     348
282: dload         27
284: iload         36
286: i2d
287: dload         31
289: dmul
290: dadd
291: dstore        37
293: aload_0
294: aload         13
296: aload         11
298: iconst_2
299: newarray       double
301: dup
302: iconst_0
303: dload         34
305: dastore
306: dup
307: iconst_1
308: dload         37
310: dastore
311: invokespecial #72
314: dstore        39
316: aload         20
318: iconst_3
319: newarray       double
321: dup
322: iconst_0
323: dload         34
325: dastore
326: dup
327: iconst_1
328: dload         37
330: dastore
331: dup
332: iconst_2
333: dload         39
335: dastore
336: invokeinterface #80,  2
341: pop
342: iinc          36, 1
345: goto          275
348: iinc          33, 1
351: goto          254
354: dload         15
356: dconst_1
357: dadd
358: dstore        33
360: iconst_0
361: istore        35
363: ldc           #81
365: astore        36
367: getstatic     #50
370: ldc           #81
372: iconst_3
373: anewarray     #61
376: dup
377: iconst_0
378: aload         12
380: iconst_0
381: daload
382: invokestatic  #62
385: aastore
386: dup
387: iconst_1
388: aload         12
390: iconst_1
391: daload
392: invokestatic  #62
395: aastore
396: dup
397: iconst_2
398: dload         15
400: invokestatic  #62
403: aastore
404: invokevirtual #65
407: pop
408: getstatic     #50
411: invokevirtual #82
414: aload         20
416: invokeinterface #83,  1
421: astore        37
423: aload         37
425: invokeinterface #84,  1
430: ifeq          501
433: aload         37
435: invokeinterface #85,  1
440: checkcast     #86
443: astore        38
445: aload         38
447: iconst_2
448: daload
449: dload         33
451: dcmpg
452: ifgt          498
455: getstatic     #50
458: ldc           #81
460: iconst_3
461: anewarray     #61
464: dup
465: iconst_0
466: aload         38
468: iconst_0
469: daload
470: invokestatic  #62
473: aastore
474: dup
475: iconst_1
476: aload         38
478: iconst_1
479: daload
480: invokestatic  #62
483: aastore
484: dup
485: iconst_2
486: aload         38
488: iconst_2
489: daload
490: invokestatic  #62
493: aastore
494: invokevirtual #65
497: pop
498: goto          423
501: getstatic     #50
504: invokevirtual #82
507: aload         20
509: invokeinterface #83,  1
514: astore        37
516: aload         37
518: invokeinterface #84,  1
523: ifeq          597
526: aload         37
528: invokeinterface #85,  1
533: checkcast     #86
536: astore        38
538: aload         38
540: iconst_2
541: daload
542: dload         33
544: dcmpl
545: ifle          594
548: iinc          35, 1
551: getstatic     #50
554: ldc           #81
556: iconst_3
557: anewarray     #61
560: dup
561: iconst_0
562: aload         38
564: iconst_0
565: daload
566: invokestatic  #62
569: aastore
570: dup
571: iconst_1
572: aload         38
574: iconst_1
575: daload
576: invokestatic  #62
579: aastore
580: dup
581: iconst_2
582: aload         38
584: iconst_2
585: daload
586: invokestatic  #62
589: aastore
590: invokevirtual #65
593: pop
594: goto          516
597: getstatic     #50
600: invokevirtual #82
603: getstatic     #50
606: new           #53
609: dup
610: invokespecial #54
613: ldc           #87
615: invokevirtual #56
618: aload         17
620: invokestatic  #88
623: invokevirtual #56
626: invokevirtual #58
629: invokevirtual #52
632: getstatic     #50
635: new           #53
638: dup
639: invokespecial #54
642: ldc           #89
644: invokevirtual #56
647: iload         35
649: invokevirtual #57
652: ldc           #90
654: invokevirtual #56
657: invokevirtual #58
660: invokevirtual #52
663: return
